// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}

//line sql-gen.y:661
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11112

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1231,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	427, 183,
	-2, 0,
	-1, 77,
	202, 1045,
	214, 1045,
	229, 302,
	324, 302,
	333, 843,
	364, 302,
	375, 843,
	412, 843,
	437, 302,
	462, 843,
	-2, 0,
	-1, 83,
	229, 306,
	-2, 0,
	-1, 84,
	118, 1231,
	208, 1231,
	447, 1231,
	448, 1231,
	-2, 0,
	-1, 100,
	133, 1202,
	151, 1202,
	164, 1202,
	211, 1202,
	241, 1202,
	284, 1202,
	294, 1202,
	442, 1202,
	-2, 1173,
	-1, 132,
	141, 732,
	228, 732,
	327, 712,
	380, 712,
	430, 732,
	-2, 0,
	-1, 134,
	4, 1233,
	21, 1233,
	22, 1233,
	23, 1233,
	24, 1233,
	25, 1233,
	26, 1233,
	28, 1233,
	29, 1233,
	35, 1233,
	40, 1233,
	41, 1233,
	42, 1233,
	43, 1233,
	44, 1233,
	45, 1233,
	46, 1233,
	47, 1233,
	48, 1233,
	50, 1233,
	51, 1233,
	52, 1233,
	54, 1233,
	55, 1233,
	56, 1233,
	57, 1233,
	58, 1233,
	62, 1233,
	63, 1233,
	64, 1233,
	65, 1233,
	67, 1233,
	68, 1233,
	69, 1233,
	73, 1233,
	74, 1233,
	75, 1233,
	76, 1233,
	77, 1233,
	78, 1233,
	79, 1233,
	82, 1233,
	83, 1233,
	84, 1233,
	85, 1233,
	87, 1233,
	89, 1233,
	90, 1233,
	91, 1233,
	93, 1233,
	95, 1233,
	96, 1233,
	104, 1233,
	105, 1233,
	106, 1233,
	107, 1233,
	109, 1233,
	110, 1233,
	111, 1233,
	113, 1233,
	114, 1233,
	115, 1233,
	117, 1233,
	118, 1233,
	120, 1233,
	121, 1233,
	124, 1233,
	125, 1233,
	126, 1233,
	128, 1233,
	129, 1233,
	131, 1233,
	132, 1233,
	134, 1233,
	135, 1233,
	136, 1233,
	137, 1233,
	138, 1233,
	139, 1233,
	140, 1233,
	141, 1233,
	142, 1233,
	143, 1233,
	144, 1233,
	145, 1233,
	146, 1233,
	147, 1233,
	148, 1233,
	150, 1233,
	156, 1233,
	157, 1233,
	158, 1233,
	159, 1233,
	163, 1233,
	165, 1233,
	169, 1233,
	170, 1233,
	171, 1233,
	172, 1233,
	173, 1233,
	174, 1233,
	176, 1233,
	177, 1233,
	179, 1233,
	180, 1233,
	182, 1233,
	183, 1233,
	184, 1233,
	185, 1233,
	186, 1233,
	187, 1233,
	188, 1233,
	189, 1233,
	190, 1233,
	192, 1233,
	193, 1233,
	195, 1233,
	196, 1233,
	197, 1233,
	198, 1233,
	202, 1233,
	203, 1233,
	204, 1233,
	205, 1233,
	208, 1233,
	209, 1233,
	210, 1233,
	212, 1233,
	214, 1233,
	216, 1233,
	218, 1233,
	219, 1233,
	220, 1233,
	222, 1233,
	226, 1233,
	227, 1233,
	228, 1233,
	229, 1233,
	230, 1233,
	232, 1233,
	233, 1233,
	235, 1233,
	236, 1233,
	238, 1233,
	239, 1233,
	242, 1233,
	243, 1233,
	244, 1233,
	247, 1233,
	248, 1233,
	249, 1233,
	250, 1233,
	252, 1233,
	253, 1233,
	254, 1233,
	255, 1233,
	256, 1233,
	257, 1233,
	258, 1233,
	259, 1233,
	260, 1233,
	261, 1233,
	262, 1233,
	264, 1233,
	266, 1233,
	267, 1233,
	268, 1233,
	269, 1233,
	270, 1233,
	271, 1233,
	273, 1233,
	275, 1233,
	277, 1233,
	279, 1233,
	280, 1233,
	281, 1233,
	282, 1233,
	283, 1233,
	286, 1233,
	289, 1233,
	290, 1233,
	291, 1233,
	292, 1233,
	295, 1233,
	296, 1233,
	297, 1233,
	299, 1233,
	301, 1233,
	302, 1233,
	303, 1233,
	304, 1233,
	305, 1233,
	306, 1233,
	307, 1233,
	308, 1233,
	309, 1233,
	310, 1233,
	311, 1233,
	313, 1233,
	314, 1233,
	315, 1233,
	316, 1233,
	317, 1233,
	318, 1233,
	319, 1233,
	320, 1233,
	321, 1233,
	323, 1233,
	325, 1233,
	326, 1233,
	327, 1233,
	328, 1233,
	329, 1233,
	330, 1233,
	331, 1233,
	332, 1233,
	333, 1233,
	334, 1233,
	335, 1233,
	342, 1233,
	344, 1233,
	345, 1233,
	346, 1233,
	347, 1233,
	348, 1233,
	349, 1233,
	350, 1233,
	351, 1233,
	353, 1233,
	354, 1233,
	355, 1233,
	357, 1233,
	358, 1233,
	359, 1233,
	360, 1233,
	361, 1233,
	362, 1233,
	364, 1233,
	365, 1233,
	366, 1233,
	367, 1233,
	368, 1233,
	369, 1233,
	370, 1233,
	371, 1233,
	372, 1233,
	373, 1233,
	375, 1233,
	376, 1233,
	377, 1233,
	378, 1233,
	379, 1233,
	380, 1233,
	382, 1233,
	383, 1233,
	384, 1233,
	385, 1233,
	386, 1233,
	388, 1233,
	389, 1233,
	390, 1233,
	392, 1233,
	394, 1233,
	395, 1233,
	396, 1233,
	397, 1233,
	398, 1233,
	399, 1233,
	400, 1233,
	401, 1233,
	402, 1233,
	403, 1233,
	404, 1233,
	405, 1233,
	406, 1233,
	408, 1233,
	409, 1233,
	411, 1233,
	413, 1233,
	414, 1233,
	415, 1233,
	416, 1233,
	417, 1233,
	418, 1233,
	419, 1233,
	420, 1233,
	422, 1233,
	423, 1233,
	424, 1233,
	425, 1233,
	426, 1233,
	428, 1233,
	430, 1233,
	431, 1233,
	432, 1233,
	433, 1233,
	434, 1233,
	436, 1233,
	437, 1233,
	438, 1233,
	440, 1233,
	441, 1233,
	444, 1233,
	445, 1233,
	446, 1233,
	447, 1233,
	448, 1233,
	449, 1233,
	450, 1233,
	452, 1233,
	455, 1233,
	456, 1233,
	457, 1233,
	458, 1233,
	459, 1233,
	460, 1233,
	462, 1233,
	463, 1233,
	464, 1233,
	469, 1233,
	470, 1233,
	471, 1233,
	472, 1233,
	473, 1233,
	474, 1233,
	-2, 0,
	-1, 135,
	1, 1107,
	218, 1107,
	323, 1107,
	331, 1107,
	477, 1107,
	501, 1107,
	-2, 0,
	-1, 137,
	1, 1107,
	501, 1107,
	-2, 0,
	-1, 138,
	1, 1107,
	501, 1107,
	-2, 0,
	-1, 139,
	1, 1107,
	427, 1107,
	501, 1107,
	-2, 0,
	-1, 166,
	133, 1201,
	151, 1201,
	164, 1201,
	211, 1201,
	241, 1201,
	284, 1201,
	294, 1201,
	442, 1201,
	-2, 1176,
	-1, 199,
	4, 1240,
	5, 1240,
	6, 1240,
	7, 1240,
	8, 1240,
	9, 1240,
	10, 1240,
	21, 1240,
	22, 1240,
	23, 1240,
	24, 1240,
	25, 1240,
	26, 1240,
	28, 1240,
	29, 1240,
	35, 1240,
	36, 1240,
	40, 1240,
	41, 1240,
	42, 1240,
	43, 1240,
	44, 1240,
	45, 1240,
	46, 1240,
	47, 1240,
	48, 1240,
	50, 1240,
	51, 1240,
	52, 1240,
	54, 1240,
	55, 1240,
	56, 1240,
	57, 1240,
	58, 1240,
	59, 1240,
	60, 1240,
	61, 1240,
	62, 1240,
	63, 1240,
	64, 1240,
	65, 1240,
	67, 1240,
	68, 1240,
	69, 1240,
	71, 1240,
	73, 1240,
	74, 1240,
	75, 1240,
	76, 1240,
	77, 1240,
	78, 1240,
	79, 1240,
	82, 1240,
	83, 1240,
	84, 1240,
	85, 1240,
	87, 1240,
	89, 1240,
	90, 1240,
	91, 1240,
	93, 1240,
	94, 1240,
	95, 1240,
	96, 1240,
	97, 1240,
	98, 1240,
	99, 1240,
	100, 1240,
	101, 1240,
	102, 1240,
	103, 1240,
	104, 1240,
	105, 1240,
	106, 1240,
	107, 1240,
	108, 1240,
	109, 1240,
	110, 1240,
	111, 1240,
	112, 1240,
	113, 1240,
	114, 1240,
	115, 1240,
	117, 1240,
	118, 1240,
	120, 1240,
	121, 1240,
	124, 1240,
	125, 1240,
	126, 1240,
	128, 1240,
	129, 1240,
	131, 1240,
	132, 1240,
	134, 1240,
	135, 1240,
	136, 1240,
	137, 1240,
	138, 1240,
	139, 1240,
	140, 1240,
	141, 1240,
	142, 1240,
	143, 1240,
	144, 1240,
	145, 1240,
	146, 1240,
	147, 1240,
	148, 1240,
	149, 1240,
	150, 1240,
	156, 1240,
	157, 1240,
	158, 1240,
	159, 1240,
	163, 1240,
	165, 1240,
	168, 1240,
	169, 1240,
	170, 1240,
	171, 1240,
	172, 1240,
	173, 1240,
	174, 1240,
	176, 1240,
	177, 1240,
	179, 1240,
	180, 1240,
	182, 1240,
	183, 1240,
	184, 1240,
	185, 1240,
	186, 1240,
	187, 1240,
	188, 1240,
	189, 1240,
	190, 1240,
	191, 1240,
	192, 1240,
	193, 1240,
	195, 1240,
	196, 1240,
	197, 1240,
	198, 1240,
	202, 1240,
	203, 1240,
	204, 1240,
	205, 1240,
	207, 1240,
	208, 1240,
	209, 1240,
	210, 1240,
	212, 1240,
	214, 1240,
	215, 1240,
	216, 1240,
	217, 1240,
	218, 1240,
	219, 1240,
	220, 1240,
	221, 1240,
	222, 1240,
	226, 1240,
	227, 1240,
	228, 1240,
	229, 1240,
	230, 1240,
	232, 1240,
	233, 1240,
	235, 1240,
	236, 1240,
	237, 1240,
	238, 1240,
	239, 1240,
	240, 1240,
	242, 1240,
	243, 1240,
	244, 1240,
	245, 1240,
	246, 1240,
	247, 1240,
	248, 1240,
	249, 1240,
	250, 1240,
	252, 1240,
	253, 1240,
	254, 1240,
	255, 1240,
	256, 1240,
	257, 1240,
	258, 1240,
	259, 1240,
	260, 1240,
	261, 1240,
	262, 1240,
	264, 1240,
	265, 1240,
	266, 1240,
	267, 1240,
	268, 1240,
	269, 1240,
	270, 1240,
	271, 1240,
	272, 1240,
	273, 1240,
	274, 1240,
	275, 1240,
	276, 1240,
	277, 1240,
	278, 1240,
	279, 1240,
	280, 1240,
	281, 1240,
	282, 1240,
	283, 1240,
	286, 1240,
	290, 1240,
	291, 1240,
	292, 1240,
	295, 1240,
	296, 1240,
	297, 1240,
	298, 1240,
	299, 1240,
	300, 1240,
	301, 1240,
	302, 1240,
	303, 1240,
	304, 1240,
	305, 1240,
	306, 1240,
	307, 1240,
	308, 1240,
	309, 1240,
	310, 1240,
	311, 1240,
	313, 1240,
	314, 1240,
	315, 1240,
	316, 1240,
	317, 1240,
	318, 1240,
	319, 1240,
	320, 1240,
	321, 1240,
	323, 1240,
	325, 1240,
	326, 1240,
	327, 1240,
	328, 1240,
	329, 1240,
	330, 1240,
	331, 1240,
	332, 1240,
	333, 1240,
	334, 1240,
	335, 1240,
	342, 1240,
	344, 1240,
	345, 1240,
	346, 1240,
	347, 1240,
	348, 1240,
	349, 1240,
	350, 1240,
	351, 1240,
	353, 1240,
	354, 1240,
	355, 1240,
	356, 1240,
	357, 1240,
	358, 1240,
	359, 1240,
	360, 1240,
	361, 1240,
	362, 1240,
	364, 1240,
	365, 1240,
	366, 1240,
	367, 1240,
	368, 1240,
	369, 1240,
	370, 1240,
	371, 1240,
	372, 1240,
	373, 1240,
	375, 1240,
	376, 1240,
	377, 1240,
	378, 1240,
	379, 1240,
	380, 1240,
	381, 1240,
	382, 1240,
	383, 1240,
	384, 1240,
	385, 1240,
	386, 1240,
	387, 1240,
	388, 1240,
	389, 1240,
	390, 1240,
	392, 1240,
	394, 1240,
	395, 1240,
	396, 1240,
	397, 1240,
	398, 1240,
	399, 1240,
	400, 1240,
	401, 1240,
	402, 1240,
	403, 1240,
	404, 1240,
	405, 1240,
	406, 1240,
	408, 1240,
	409, 1240,
	410, 1240,
	411, 1240,
	413, 1240,
	414, 1240,
	415, 1240,
	416, 1240,
	417, 1240,
	418, 1240,
	419, 1240,
	420, 1240,
	422, 1240,
	423, 1240,
	424, 1240,
	425, 1240,
	426, 1240,
	428, 1240,
	430, 1240,
	431, 1240,
	432, 1240,
	433, 1240,
	434, 1240,
	435, 1240,
	436, 1240,
	437, 1240,
	438, 1240,
	440, 1240,
	441, 1240,
	443, 1240,
	444, 1240,
	445, 1240,
	446, 1240,
	447, 1240,
	448, 1240,
	449, 1240,
	450, 1240,
	451, 1240,
	452, 1240,
	455, 1240,
	456, 1240,
	457, 1240,
	458, 1240,
	459, 1240,
	460, 1240,
	462, 1240,
	463, 1240,
	464, 1240,
	469, 1240,
	470, 1240,
	471, 1240,
	472, 1240,
	473, 1240,
	474, 1240,
	475, 1240,
	482, 1240,
	489, 1240,
	490, 1240,
	491, 1240,
	498, 1240,
	502, 1240,
	-2, 0,
	-1, 596,
	167, 1946,
	427, 1946,
	481, 1946,
	500, 1946,
	-2, 0,
	-1, 597,
	167, 2028,
	427, 2028,
	481, 2028,
	500, 2028,
	-2, 0,
	-1, 598,
	167, 1934,
	427, 1934,
	481, 1934,
	500, 1934,
	-2, 0,
	-1, 600,
	167, 2124,
	427, 2124,
	481, 2124,
	500, 2124,
	-2, 0,
	-1, 602,
	167, 2154,
	427, 2154,
	481, 2154,
	500, 2154,
	-2, 0,
	-1, 609,
	167, 2043,
	427, 2043,
	481, 2043,
	500, 2043,
	-2, 568,
	-1, 638,
	500, 1887,
	503, 1887,
	-2, 786,
	-1, 639,
	500, 1889,
	503, 1889,
	-2, 787,
	-1, 640,
	500, 1888,
	503, 1888,
	-2, 788,
	-1, 641,
	503, 1822,
	-2, 789,
	-1, 663,
	164, 196,
	-2, 0,
	-1, 686,
	462, 1022,
	-2, 844,
	-1, 725,
	4, 1043,
	21, 1043,
	22, 1043,
	23, 1043,
	24, 1043,
	25, 1043,
	26, 1043,
	28, 1043,
	29, 1043,
	35, 1043,
	40, 1043,
	41, 1043,
	42, 1043,
	43, 1043,
	44, 1043,
	45, 1043,
	46, 1043,
	47, 1043,
	48, 1043,
	50, 1043,
	51, 1043,
	52, 1043,
	54, 1043,
	55, 1043,
	56, 1043,
	57, 1043,
	58, 1043,
	62, 1043,
	63, 1043,
	64, 1043,
	65, 1043,
	67, 1043,
	68, 1043,
	69, 1043,
	73, 1043,
	74, 1043,
	75, 1043,
	76, 1043,
	77, 1043,
	78, 1043,
	79, 1043,
	82, 1043,
	83, 1043,
	84, 1043,
	85, 1043,
	87, 1043,
	89, 1043,
	90, 1043,
	91, 1043,
	93, 1043,
	95, 1043,
	96, 1043,
	104, 1043,
	105, 1043,
	106, 1043,
	107, 1043,
	109, 1043,
	110, 1043,
	111, 1043,
	113, 1043,
	114, 1043,
	115, 1043,
	117, 1043,
	118, 1043,
	120, 1043,
	121, 1043,
	124, 1043,
	125, 1043,
	126, 1043,
	128, 1043,
	129, 1043,
	131, 1043,
	132, 1043,
	134, 1043,
	135, 1043,
	136, 1043,
	137, 1043,
	138, 1043,
	139, 1043,
	140, 1043,
	141, 1043,
	142, 1043,
	143, 1043,
	144, 1043,
	145, 1043,
	146, 1043,
	147, 1043,
	148, 1043,
	150, 1043,
	156, 1043,
	157, 1043,
	158, 1043,
	159, 1043,
	163, 1043,
	165, 1043,
	169, 1043,
	170, 1043,
	171, 1043,
	172, 1043,
	173, 1043,
	174, 1043,
	176, 1043,
	177, 1043,
	179, 1043,
	180, 1043,
	182, 1043,
	183, 1043,
	184, 1043,
	185, 1043,
	186, 1043,
	187, 1043,
	188, 1043,
	189, 1043,
	190, 1043,
	192, 1043,
	193, 1043,
	195, 1043,
	196, 1043,
	197, 1043,
	198, 1043,
	202, 1043,
	203, 1043,
	204, 1043,
	205, 1043,
	208, 1043,
	209, 1043,
	210, 1043,
	212, 1043,
	214, 1043,
	216, 1043,
	218, 1043,
	219, 1043,
	220, 1043,
	222, 1043,
	226, 1043,
	227, 1043,
	228, 1043,
	229, 1043,
	230, 1043,
	232, 1043,
	233, 1043,
	235, 1043,
	236, 1043,
	238, 1043,
	239, 1043,
	242, 1043,
	243, 1043,
	244, 1043,
	247, 1043,
	248, 1043,
	249, 1043,
	250, 1043,
	252, 1043,
	253, 1043,
	254, 1043,
	255, 1043,
	256, 1043,
	257, 1043,
	258, 1043,
	259, 1043,
	260, 1043,
	261, 1043,
	262, 1043,
	264, 1043,
	266, 1043,
	267, 1043,
	268, 1043,
	269, 1043,
	270, 1043,
	271, 1043,
	273, 1043,
	275, 1043,
	277, 1043,
	279, 1043,
	280, 1043,
	281, 1043,
	282, 1043,
	283, 1043,
	286, 1043,
	290, 1043,
	291, 1043,
	292, 1043,
	295, 1043,
	296, 1043,
	297, 1043,
	299, 1043,
	301, 1043,
	302, 1043,
	303, 1043,
	304, 1043,
	305, 1043,
	306, 1043,
	307, 1043,
	308, 1043,
	309, 1043,
	310, 1043,
	311, 1043,
	313, 1043,
	314, 1043,
	315, 1043,
	316, 1043,
	317, 1043,
	318, 1043,
	319, 1043,
	320, 1043,
	321, 1043,
	323, 1043,
	325, 1043,
	326, 1043,
	327, 1043,
	328, 1043,
	329, 1043,
	330, 1043,
	331, 1043,
	332, 1043,
	333, 1043,
	334, 1043,
	335, 1043,
	342, 1043,
	344, 1043,
	345, 1043,
	346, 1043,
	347, 1043,
	348, 1043,
	349, 1043,
	350, 1043,
	351, 1043,
	353, 1043,
	354, 1043,
	355, 1043,
	357, 1043,
	358, 1043,
	359, 1043,
	360, 1043,
	361, 1043,
	362, 1043,
	364, 1043,
	365, 1043,
	366, 1043,
	367, 1043,
	368, 1043,
	369, 1043,
	370, 1043,
	371, 1043,
	372, 1043,
	373, 1043,
	375, 1043,
	376, 1043,
	377, 1043,
	378, 1043,
	379, 1043,
	380, 1043,
	382, 1043,
	383, 1043,
	384, 1043,
	385, 1043,
	386, 1043,
	388, 1043,
	389, 1043,
	390, 1043,
	392, 1043,
	394, 1043,
	395, 1043,
	396, 1043,
	397, 1043,
	398, 1043,
	399, 1043,
	400, 1043,
	401, 1043,
	402, 1043,
	403, 1043,
	404, 1043,
	405, 1043,
	406, 1043,
	408, 1043,
	409, 1043,
	411, 1043,
	413, 1043,
	414, 1043,
	415, 1043,
	416, 1043,
	417, 1043,
	418, 1043,
	419, 1043,
	420, 1043,
	422, 1043,
	423, 1043,
	424, 1043,
	425, 1043,
	426, 1043,
	428, 1043,
	430, 1043,
	431, 1043,
	432, 1043,
	433, 1043,
	434, 1043,
	436, 1043,
	437, 1043,
	438, 1043,
	440, 1043,
	441, 1043,
	444, 1043,
	445, 1043,
	446, 1043,
	447, 1043,
	448, 1043,
	449, 1043,
	450, 1043,
	452, 1043,
	455, 1043,
	456, 1043,
	457, 1043,
	458, 1043,
	459, 1043,
	460, 1043,
	462, 1043,
	463, 1043,
	464, 1043,
	469, 1043,
	470, 1043,
	471, 1043,
	472, 1043,
	473, 1043,
	474, 1043,
	-2, 0,
	-1, 800,
	327, 713,
	380, 713,
	-2, 0,
	-1, 801,
	327, 712,
	380, 712,
	-2, 660,
	-1, 805,
	1, 742,
	497, 742,
	499, 742,
	501, 742,
	-2, 0,
	-1, 806,
	1, 785,
	164, 785,
	497, 785,
	499, 785,
	501, 785,
	-2, 0,
	-1, 814,
	1, 716,
	497, 716,
	499, 716,
	501, 716,
	-2, 0,
	-1, 817,
	1, 742,
	497, 742,
	499, 742,
	501, 742,
	-2, 0,
	-1, 818,
	1, 744,
	497, 744,
	499, 744,
	501, 744,
	-2, 0,
	-1, 819,
	1, 747,
	497, 747,
	499, 747,
	501, 747,
	-2, 0,
	-1, 825,
	1, 764,
	497, 764,
	499, 764,
	501, 764,
	-2, 0,
	-1, 826,
	1, 766,
	497, 766,
	499, 766,
	501, 766,
	-2, 0,
	-1, 872,
	151, 1242,
	164, 1242,
	241, 1242,
	284, 1242,
	-2, 1180,
	-1, 886,
	151, 1241,
	164, 1241,
	241, 1241,
	284, 1241,
	-2, 1177,
	-1, 912,
	500, 1886,
	-2, 576,
	-1, 940,
	5, 1878,
	498, 1876,
	-2, 1867,
	-1, 948,
	5, 1899,
	498, 1896,
	-2, 1887,
	-1, 949,
	5, 1900,
	498, 1897,
	-2, 1888,
	-1, 957,
	500, 1884,
	-2, 1866,
	-1, 958,
	498, 2232,
	-2, 1885,
	-1, 981,
	498, 2231,
	-2, 1901,
	-1, 982,
	5, 1406,
	-2, 2202,
	-1, 983,
	5, 1407,
	-2, 2203,
	-1, 984,
	5, 1408,
	-2, 2217,
	-1, 985,
	5, 1409,
	-2, 2182,
	-1, 986,
	5, 1410,
	-2, 2215,
	-1, 987,
	5, 1418,
	-2, 2194,
	-1, 988,
	5, 1405,
	-2, 2190,
	-1, 989,
	5, 1405,
	-2, 2189,
	-1, 990,
	5, 1405,
	-2, 2208,
	-1, 991,
	5, 1416,
	-2, 2184,
	-1, 992,
	5, 1421,
	-2, 2183,
	-1, 993,
	5, 1423,
	-2, 2227,
	-1, 996,
	5, 1445,
	-2, 2220,
	-1, 997,
	5, 1437,
	-2, 2221,
	-1, 998,
	5, 1445,
	-2, 2222,
	-1, 999,
	5, 1441,
	-2, 2223,
	-1, 1000,
	5, 1392,
	-2, 2195,
	-1, 1001,
	5, 1393,
	-2, 2196,
	-1, 1028,
	5, 1428,
	-2, 2228,
	-1, 1029,
	5, 1429,
	-2, 2218,
	-1, 1030,
	5, 1430,
	463, 1430,
	-2, 2185,
	-1, 1031,
	5, 1431,
	463, 1431,
	-2, 2186,
	-1, 1068,
	498, 1896,
	-2, 1887,
	-1, 1069,
	498, 1897,
	-2, 1888,
	-1, 1098,
	167, 2154,
	427, 2154,
	481, 2154,
	500, 2154,
	-2, 0,
	-1, 1101,
	1, 554,
	501, 554,
	-2, 1115,
	-1, 1226,
	344, 1862,
	491, 1862,
	-2, 1860,
	-1, 1238,
	502, 1862,
	-2, 1863,
	-1, 1242,
	1, 1019,
	497, 1019,
	499, 1019,
	501, 1019,
	-2, 1229,
	-1, 1294,
	333, 843,
	462, 843,
	-2, 301,
	-1, 1317,
	1, 1019,
	497, 1019,
	499, 1019,
	501, 1019,
	-2, 1229,
	-1, 1323,
	4, 1043,
	21, 1043,
	22, 1043,
	23, 1043,
	24, 1043,
	25, 1043,
	26, 1043,
	28, 1043,
	29, 1043,
	35, 1043,
	40, 1043,
	41, 1043,
	42, 1043,
	43, 1043,
	44, 1043,
	45, 1043,
	46, 1043,
	47, 1043,
	48, 1043,
	50, 1043,
	51, 1043,
	52, 1043,
	54, 1043,
	55, 1043,
	56, 1043,
	57, 1043,
	58, 1043,
	62, 1043,
	63, 1043,
	64, 1043,
	65, 1043,
	67, 1043,
	68, 1043,
	69, 1043,
	73, 1043,
	74, 1043,
	75, 1043,
	76, 1043,
	77, 1043,
	78, 1043,
	79, 1043,
	82, 1043,
	83, 1043,
	84, 1043,
	85, 1043,
	87, 1043,
	89, 1043,
	90, 1043,
	91, 1043,
	93, 1043,
	95, 1043,
	96, 1043,
	104, 1043,
	105, 1043,
	106, 1043,
	107, 1043,
	109, 1043,
	110, 1043,
	111, 1043,
	113, 1043,
	114, 1043,
	115, 1043,
	117, 1043,
	118, 1043,
	120, 1043,
	121, 1043,
	124, 1043,
	125, 1043,
	126, 1043,
	128, 1043,
	129, 1043,
	131, 1043,
	132, 1043,
	134, 1043,
	135, 1043,
	136, 1043,
	137, 1043,
	138, 1043,
	139, 1043,
	140, 1043,
	141, 1043,
	142, 1043,
	143, 1043,
	144, 1043,
	145, 1043,
	146, 1043,
	147, 1043,
	148, 1043,
	156, 1043,
	157, 1043,
	158, 1043,
	159, 1043,
	163, 1043,
	165, 1043,
	169, 1043,
	170, 1043,
	171, 1043,
	172, 1043,
	173, 1043,
	174, 1043,
	176, 1043,
	177, 1043,
	179, 1043,
	180, 1043,
	182, 1043,
	183, 1043,
	184, 1043,
	185, 1043,
	186, 1043,
	187, 1043,
	188, 1043,
	189, 1043,
	190, 1043,
	192, 1043,
	193, 1043,
	195, 1043,
	196, 1043,
	197, 1043,
	198, 1043,
	203, 1043,
	204, 1043,
	205, 1043,
	208, 1043,
	209, 1043,
	210, 1043,
	212, 1043,
	214, 1043,
	216, 1043,
	218, 1043,
	219, 1043,
	220, 1043,
	222, 1043,
	226, 1043,
	227, 1043,
	228, 1043,
	229, 1043,
	230, 1043,
	232, 1043,
	233, 1043,
	235, 1043,
	236, 1043,
	238, 1043,
	239, 1043,
	242, 1043,
	243, 1043,
	244, 1043,
	247, 1043,
	248, 1043,
	249, 1043,
	250, 1043,
	252, 1043,
	253, 1043,
	254, 1043,
	255, 1043,
	256, 1043,
	257, 1043,
	258, 1043,
	259, 1043,
	260, 1043,
	261, 1043,
	262, 1043,
	264, 1043,
	266, 1043,
	267, 1043,
	268, 1043,
	269, 1043,
	270, 1043,
	271, 1043,
	273, 1043,
	277, 1043,
	279, 1043,
	280, 1043,
	281, 1043,
	282, 1043,
	283, 1043,
	286, 1043,
	288, 1043,
	290, 1043,
	291, 1043,
	292, 1043,
	295, 1043,
	296, 1043,
	297, 1043,
	299, 1043,
	301, 1043,
	302, 1043,
	303, 1043,
	304, 1043,
	305, 1043,
	306, 1043,
	307, 1043,
	308, 1043,
	309, 1043,
	310, 1043,
	311, 1043,
	313, 1043,
	314, 1043,
	315, 1043,
	316, 1043,
	317, 1043,
	318, 1043,
	319, 1043,
	320, 1043,
	321, 1043,
	323, 1043,
	325, 1043,
	326, 1043,
	327, 1043,
	328, 1043,
	329, 1043,
	330, 1043,
	331, 1043,
	332, 1043,
	333, 1043,
	334, 1043,
	335, 1043,
	342, 1043,
	344, 1043,
	345, 1043,
	346, 1043,
	347, 1043,
	348, 1043,
	349, 1043,
	350, 1043,
	351, 1043,
	353, 1043,
	354, 1043,
	355, 1043,
	357, 1043,
	358, 1043,
	359, 1043,
	360, 1043,
	361, 1043,
	362, 1043,
	364, 1043,
	365, 1043,
	366, 1043,
	367, 1043,
	368, 1043,
	369, 1043,
	370, 1043,
	371, 1043,
	372, 1043,
	373, 1043,
	375, 1043,
	376, 1043,
	377, 1043,
	378, 1043,
	379, 1043,
	380, 1043,
	382, 1043,
	383, 1043,
	384, 1043,
	385, 1043,
	386, 1043,
	388, 1043,
	389, 1043,
	390, 1043,
	392, 1043,
	394, 1043,
	395, 1043,
	396, 1043,
	397, 1043,
	398, 1043,
	399, 1043,
	400, 1043,
	401, 1043,
	402, 1043,
	403, 1043,
	404, 1043,
	405, 1043,
	406, 1043,
	408, 1043,
	409, 1043,
	411, 1043,
	413, 1043,
	414, 1043,
	415, 1043,
	416, 1043,
	417, 1043,
	418, 1043,
	419, 1043,
	420, 1043,
	422, 1043,
	423, 1043,
	424, 1043,
	425, 1043,
	426, 1043,
	428, 1043,
	430, 1043,
	431, 1043,
	432, 1043,
	433, 1043,
	434, 1043,
	436, 1043,
	437, 1043,
	438, 1043,
	440, 1043,
	441, 1043,
	444, 1043,
	445, 1043,
	446, 1043,
	447, 1043,
	448, 1043,
	449, 1043,
	450, 1043,
	452, 1043,
	455, 1043,
	456, 1043,
	457, 1043,
	458, 1043,
	459, 1043,
	460, 1043,
	462, 1043,
	463, 1043,
	464, 1043,
	469, 1043,
	470, 1043,
	471, 1043,
	472, 1043,
	473, 1043,
	474, 1043,
	-2, 0,
	-1, 1392,
	1, 431,
	497, 431,
	499, 431,
	501, 431,
	-2, 1200,
	-1, 1395,
	4, 2226,
	11, 2226,
	12, 2226,
	14, 2226,
	15, 2226,
	16, 2226,
	17, 2226,
	18, 2226,
	19, 2226,
	21, 2226,
	22, 2226,
	23, 2226,
	24, 2226,
	25, 2226,
	26, 2226,
	28, 2226,
	29, 2226,
	32, 2226,
	33, 2226,
	35, 2226,
	37, 2226,
	40, 2226,
	41, 2226,
	42, 2226,
	43, 2226,
	44, 2226,
	45, 2226,
	46, 2226,
	47, 2226,
	48, 2226,
	50, 2226,
	51, 2226,
	52, 2226,
	54, 2226,
	55, 2226,
	56, 2226,
	57, 2226,
	58, 2226,
	62, 2226,
	63, 2226,
	64, 2226,
	65, 2226,
	67, 2226,
	68, 2226,
	69, 2226,
	70, 2226,
	73, 2226,
	74, 2226,
	75, 2226,
	76, 2226,
	77, 2226,
	78, 2226,
	79, 2226,
	80, 2226,
	82, 2226,
	83, 2226,
	84, 2226,
	85, 2226,
	87, 2226,
	88, 2226,
	89, 2226,
	90, 2226,
	91, 2226,
	93, 2226,
	94, 2226,
	95, 2226,
	96, 2226,
	104, 2226,
	105, 2226,
	106, 2226,
	107, 2226,
	109, 2226,
	110, 2226,
	111, 2226,
	113, 2226,
	114, 2226,
	115, 2226,
	117, 2226,
	118, 2226,
	120, 2226,
	121, 2226,
	124, 2226,
	125, 2226,
	126, 2226,
	128, 2226,
	129, 2226,
	131, 2226,
	132, 2226,
	134, 2226,
	135, 2226,
	136, 2226,
	137, 2226,
	138, 2226,
	139, 2226,
	140, 2226,
	141, 2226,
	142, 2226,
	143, 2226,
	144, 2226,
	145, 2226,
	146, 2226,
	147, 2226,
	148, 2226,
	152, 2226,
	153, 2226,
	154, 2226,
	155, 2226,
	156, 2226,
	157, 2226,
	158, 2226,
	159, 2226,
	162, 2226,
	163, 2226,
	165, 2226,
	168, 2226,
	169, 2226,
	170, 2226,
	171, 2226,
	172, 2226,
	173, 2226,
	174, 2226,
	176, 2226,
	177, 2226,
	179, 2226,
	180, 2226,
	182, 2226,
	183, 2226,
	184, 2226,
	185, 2226,
	186, 2226,
	187, 2226,
	188, 2226,
	189, 2226,
	190, 2226,
	191, 2226,
	192, 2226,
	193, 2226,
	194, 2226,
	195, 2226,
	196, 2226,
	197, 2226,
	198, 2226,
	200, 2226,
	201, 2226,
	203, 2226,
	204, 2226,
	205, 2226,
	207, 2226,
	208, 2226,
	209, 2226,
	210, 2226,
	212, 2226,
	214, 2226,
	215, 2226,
	216, 2226,
	217, 2226,
	218, 2226,
	219, 2226,
	220, 2226,
	221, 2226,
	222, 2226,
	224, 2226,
	225, 2226,
	226, 2226,
	227, 2226,
	228, 2226,
	229, 2226,
	230, 2226,
	232, 2226,
	233, 2226,
	235, 2226,
	236, 2226,
	237, 2226,
	238, 2226,
	239, 2226,
	240, 2226,
	242, 2226,
	243, 2226,
	244, 2226,
	247, 2226,
	248, 2226,
	249, 2226,
	250, 2226,
	251, 2226,
	252, 2226,
	253, 2226,
	254, 2226,
	255, 2226,
	256, 2226,
	257, 2226,
	258, 2226,
	259, 2226,
	260, 2226,
	261, 2226,
	262, 2226,
	264, 2226,
	265, 2226,
	266, 2226,
	267, 2226,
	268, 2226,
	269, 2226,
	270, 2226,
	271, 2226,
	273, 2226,
	276, 2226,
	277, 2226,
	279, 2226,
	280, 2226,
	281, 2226,
	282, 2226,
	283, 2226,
	286, 2226,
	290, 2226,
	291, 2226,
	292, 2226,
	293, 2226,
	295, 2226,
	296, 2226,
	297, 2226,
	299, 2226,
	301, 2226,
	302, 2226,
	303, 2226,
	304, 2226,
	305, 2226,
	306, 2226,
	307, 2226,
	308, 2226,
	309, 2226,
	310, 2226,
	311, 2226,
	313, 2226,
	314, 2226,
	315, 2226,
	316, 2226,
	317, 2226,
	318, 2226,
	319, 2226,
	320, 2226,
	321, 2226,
	323, 2226,
	325, 2226,
	326, 2226,
	327, 2226,
	328, 2226,
	329, 2226,
	330, 2226,
	331, 2226,
	332, 2226,
	333, 2226,
	334, 2226,
	335, 2226,
	342, 2226,
	343, 2226,
	344, 2226,
	345, 2226,
	346, 2226,
	347, 2226,
	348, 2226,
	349, 2226,
	350, 2226,
	351, 2226,
	353, 2226,
	354, 2226,
	355, 2226,
	356, 2226,
	357, 2226,
	358, 2226,
	359, 2226,
	360, 2226,
	361, 2226,
	362, 2226,
	363, 2226,
	364, 2226,
	365, 2226,
	366, 2226,
	367, 2226,
	368, 2226,
	369, 2226,
	370, 2226,
	371, 2226,
	372, 2226,
	373, 2226,
	375, 2226,
	376, 2226,
	377, 2226,
	378, 2226,
	379, 2226,
	380, 2226,
	382, 2226,
	383, 2226,
	384, 2226,
	385, 2226,
	386, 2226,
	387, 2226,
	388, 2226,
	389, 2226,
	390, 2226,
	392, 2226,
	394, 2226,
	395, 2226,
	396, 2226,
	397, 2226,
	398, 2226,
	399, 2226,
	400, 2226,
	401, 2226,
	402, 2226,
	403, 2226,
	404, 2226,
	405, 2226,
	406, 2226,
	408, 2226,
	409, 2226,
	411, 2226,
	413, 2226,
	414, 2226,
	415, 2226,
	416, 2226,
	417, 2226,
	418, 2226,
	419, 2226,
	420, 2226,
	422, 2226,
	423, 2226,
	424, 2226,
	425, 2226,
	426, 2226,
	428, 2226,
	430, 2226,
	431, 2226,
	432, 2226,
	433, 2226,
	434, 2226,
	436, 2226,
	437, 2226,
	438, 2226,
	440, 2226,
	441, 2226,
	444, 2226,
	445, 2226,
	446, 2226,
	447, 2226,
	448, 2226,
	449, 2226,
	450, 2226,
	452, 2226,
	455, 2226,
	456, 2226,
	457, 2226,
	458, 2226,
	459, 2226,
	460, 2226,
	462, 2226,
	463, 2226,
	464, 2226,
	469, 2226,
	470, 2226,
	471, 2226,
	472, 2226,
	473, 2226,
	474, 2226,
	475, 2226,
	476, 2226,
	479, 2226,
	480, 2226,
	481, 2226,
	482, 2226,
	483, 2226,
	484, 2226,
	486, 2226,
	487, 2226,
	488, 2226,
	489, 2226,
	490, 2226,
	491, 2226,
	492, 2226,
	493, 2226,
	494, 2226,
	496, 2226,
	499, 2226,
	500, 2226,
	502, 2226,
	503, 2226,
	-2, 0,
	-1, 1400,
	167, 2124,
	427, 2124,
	481, 2124,
	500, 2124,
	-2, 0,
	-1, 1448,
	327, 713,
	380, 713,
	-2, 0,
	-1, 1472,
	1, 708,
	497, 708,
	499, 708,
	501, 708,
	-2, 0,
	-1, 1473,
	1, 733,
	497, 733,
	499, 733,
	501, 733,
	-2, 0,
	-1, 1474,
	1, 715,
	497, 715,
	499, 715,
	501, 715,
	-2, 0,
	-1, 1476,
	1, 719,
	497, 719,
	499, 719,
	501, 719,
	-2, 0,
	-1, 1504,
	1, 2174,
	497, 2174,
	499, 2174,
	500, 2174,
	501, 2174,
	-2, 762,
	-1, 1505,
	1, 2121,
	497, 2121,
	499, 2121,
	500, 2121,
	501, 2121,
	-2, 763,
	-1, 1520,
	1, 1110,
	501, 1110,
	-2, 1115,
	-1, 1523,
	151, 1241,
	164, 1241,
	241, 1241,
	284, 1241,
	-2, 1181,
	-1, 1617,
	133, 1202,
	151, 1202,
	164, 1202,
	211, 1202,
	241, 1202,
	284, 1202,
	294, 1202,
	442, 1202,
	-2, 1606,
	-1, 1677,
	499, 1756,
	-2, 0,
	-1, 1712,
	133, 1202,
	151, 1202,
	164, 1202,
	211, 1202,
	241, 1202,
	284, 1202,
	294, 1202,
	442, 1202,
	-2, 1322,
	-1, 1759,
	498, 1433,
	-2, 1421,
	-1, 1792,
	1, 556,
	501, 556,
	-2, 1115,
	-1, 2007,
	1, 710,
	497, 710,
	499, 710,
	501, 710,
	-2, 0,
	-1, 2008,
	1, 735,
	497, 735,
	499, 735,
	501, 735,
	-2, 0,
	-1, 2081,
	361, 1268,
	362, 1268,
	-2, 1466,
	-1, 2112,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1486,
	-1, 2113,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1487,
	-1, 2114,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1488,
	-1, 2115,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1489,
	-1, 2116,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1490,
	-1, 2117,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1491,
	-1, 2118,
	88, 0,
	224, 0,
	225, 0,
	483, 0,
	484, 0,
	-2, 1492,
	-1, 2119,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1493,
	-1, 2131,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1505,
	-1, 2132,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1506,
	-1, 2133,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1507,
	-1, 2136,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1512,
	-1, 2142,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1516,
	-1, 2144,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1524,
	-1, 2145,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1525,
	-1, 2146,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1526,
	-1, 2147,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1527,
	-1, 2259,
	5, 1899,
	167, 1767,
	498, 1896,
	-2, 1887,
	-1, 2260,
	167, 1768,
	-2, 2178,
	-1, 2261,
	167, 1769,
	-2, 2042,
	-1, 2262,
	167, 1770,
	-2, 1957,
	-1, 2263,
	167, 1771,
	-2, 1999,
	-1, 2264,
	167, 1772,
	-2, 2037,
	-1, 2265,
	167, 1773,
	-2, 2119,
	-1, 2266,
	167, 1774,
	-2, 1589,
	-1, 2335,
	1, 1323,
	2, 1323,
	94, 1323,
	133, 1323,
	151, 1323,
	164, 1323,
	168, 1323,
	178, 1323,
	181, 1323,
	207, 1323,
	211, 1323,
	221, 1323,
	237, 1323,
	241, 1323,
	265, 1323,
	284, 1323,
	288, 1323,
	294, 1323,
	352, 1323,
	356, 1323,
	442, 1323,
	453, 1323,
	466, 1323,
	467, 1323,
	468, 1323,
	477, 1323,
	497, 1323,
	499, 1323,
	501, 1323,
	503, 1323,
	-2, 1322,
	-1, 2348,
	498, 1868,
	-2, 1882,
	-1, 2372,
	498, 1432,
	-2, 1422,
	-1, 2484,
	1, 1019,
	497, 1019,
	499, 1019,
	501, 1019,
	-2, 1229,
	-1, 2641,
	289, 1271,
	-2, 2216,
	-1, 2642,
	289, 1272,
	-2, 2106,
	-1, 2646,
	361, 1833,
	362, 1833,
	-2, 1587,
	-1, 2647,
	361, 1837,
	362, 1837,
	-2, 1588,
	-1, 2648,
	361, 1834,
	362, 1834,
	-2, 1587,
	-1, 2649,
	361, 1838,
	362, 1838,
	-2, 1588,
	-1, 2662,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1514,
	-1, 2663,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1518,
	-1, 2669,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1520,
	-1, 2866,
	218, 1115,
	323, 1115,
	331, 1115,
	477, 1115,
	-2, 553,
	-1, 2981,
	1, 1019,
	497, 1019,
	499, 1019,
	501, 1019,
	-2, 1229,
	-1, 3072,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1522,
	-1, 3079,
	215, 0,
	217, 0,
	276, 0,
	-2, 1541,
	-1, 3146,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1570,
	-1, 3147,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1571,
	-1, 3148,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1572,
	-1, 3152,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1576,
	-1, 3153,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1577,
	-1, 3154,
	14, 0,
	15, 0,
	16, 0,
	479, 0,
	480, 0,
	481, 0,
	-2, 1578,
	-1, 3200,
	498, 1869,
	-2, 1883,
	-1, 3309,
	500, 2332,
	-2, 1159,
	-1, 3360,
	215, 0,
	217, 0,
	276, 0,
	-2, 1542,
	-1, 3363,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1545,
	-1, 3364,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1547,
	-1, 3559,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1546,
	-1, 3560,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 1548,
	-1, 3571,
	215, 0,
	-2, 1579,
	-1, 3714,
	215, 0,
	-2, 1580,
	-1, 3866,
	47, 0,
	191, 0,
	240, 0,
	387, 0,
	475, 0,
	482, 0,
	-2, 2181,
}

const sqlPrivate = 57344

const sqlLast = 97622

var sqlAct = [...]int{

	232, 3736, 3865, 3602, 3491, 3759, 3876, 3605, 3644, 3835,
	2564, 3973, 3820, 2967, 3841, 3343, 3823, 3805, 1260, 3877,
	3590, 3878, 3923, 2538, 1979, 2404, 3651, 1072, 2797, 3111,
	3522, 3718, 3475, 896, 2091, 1383, 3517, 3864, 3548, 3504,
	3301, 2883, 3660, 2796, 1245, 3482, 3257, 2996, 913, 3484,
	3682, 3427, 2989, 2159, 1966, 1746, 3527, 3280, 3270, 2991,
	1532, 3222, 1382, 2963, 2099, 3064, 900, 3223, 640, 2573,
	3576, 2527, 1386, 1130, 2463, 1718, 2092, 2655, 2510, 1843,
	2291, 2575, 2501, 1061, 607, 2839, 1415, 2811, 3399, 3342,
	1223, 2819, 640, 2522, 2513, 1107, 2779, 1456, 2583, 947,
	738, 4, 2572, 2566, 887, 2800, 2524, 2539, 1687, 1888,
	2778, 2441, 1887, 3171, 1852, 2328, 940, 2406, 2172, 1231,
	1986, 36, 1964, 895, 158, 2096, 1663, 3719, 635, 1310,
	2802, 2475, 1875, 2582, 2639, 2511, 2203, 1884, 226, 3645,
	1625, 2201, 1868, 2440, 1828, 1114, 2845, 1520, 1830, 1688,
	2309, 944, 2156, 1363, 1707, 225, 1818, 2288, 2330, 2192,
	2080, 2063, 2965, 2061, 1379, 1393, 1373, 2532, 1315, 1921,
	949, 641, 1103, 642, 2396, 1658, 575, 2195, 1052, 2317,
	1055, 2576, 2299, 1697, 1034, 2255, 732, 2327, 1533, 1247,
	951, 1534, 1228, 994, 2173, 946, 591, 2245, 1610, 1747,
	637, 1920, 1069, 99, 1704, 561, 646, 1414, 158, 583,
	1391, 2062, 601, 712, 1941, 2064, 686, 1255, 2085, 1842,
	166, 925, 578, 649, 1057, 41, 40, 38, 586, 1539,
	646, 167, 29, 27, 25, 1032, 2690, 812, 1519, 795,
	1266, 3185, 2686, 3186, 4031, 1957, 1957, 649, 2308, 2798,
	4026, 1957, 4014, 1957, 3021, 4013, 2308, 3990, 3006, 2308,
	3988, 3443, 1051, 1338, 3443, 3984, 3906, 3900, 3898, 1894,
	3907, 2308, 2308, 3895, 3892, 3887, 3862, 3896, 3893, 1894,
	1894, 3861, 3021, 3860, 3856, 1894, 3005, 1972, 1972, 3855,
	3850, 3848, 753, 1972, 3443, 3443, 3831, 891, 3818, 3799,
	3639, 1064, 3443, 2363, 3792, 3791, 3786, 1083, 2308, 2308,
	3443, 1547, 1548, 3785, 2864, 3779, 3716, 3443, 1067, 1894,
	2363, 3696, 3693, 3653, 3622, 1894, 3443, 3654, 1894, 2301,
	3621, 3613, 1049, 1578, 1894, 1894, 1111, 891, 2699, 3612,
	1550, 140, 923, 3443, 2700, 2459, 2427, 1111, 66, 1955,
	43, 42, 1035, 1035, 3582, 3561, 3546, 3535, 1894, 2363,
	1972, 3021, 3175, 3470, 67, 3461, 135, 2308, 2654, 2308,
	1549, 3442, 892, 1987, 3362, 3443, 3317, 71, 2363, 873,
	3037, 3311, 3278, 1084, 3195, 3037, 3279, 61, 3196, 3193,
	872, 3178, 1088, 3194, 45, 2308, 137, 1063, 3095, 3091,
	2308, 3800, 1894, 2308, 886, 881, 1038, 3036, 1039, 3028,
	44, 3037, 77, 3029, 1547, 1548, 2795, 2790, 2789, 2742,
	2308, 2308, 2308, 2743, 2740, 2732, 2359, 2730, 2741, 2733,
	1036, 2308, 3711, 2701, 47, 62, 1578, 2308, 2588, 3699,
	2562, 48, 1972, 1550, 1975, 2561, 83, 2380, 2362, 1975,
	138, 2308, 2363, 1972, 2357, 3639, 2351, 46, 2308, 98,
	1894, 1894, 1555, 3175, 84, 95, 1259, 2751, 2752, 2300,
	2307, 1974, 3516, 1549, 2308, 1975, 3462, 1894, 3029, 2454,
	1847, 2395, 1798, 1569, 199, 199, 1956, 2507, 1893, 2471,
	2393, 1566, 1683, 2751, 2752, 49, 2769, 2770, 2771, 1254,
	1577, 1579, 3251, 3067, 3045, 3007, 2308, 1705, 1878, 1458,
	2344, 2343, 2342, 85, 3358, 2751, 2752, 2341, 2769, 2770,
	2771, 2340, 201, 201, 3008, 2228, 1040, 1037, 199, 880,
	879, 1547, 1548, 878, 877, 3356, 3357, 1958, 1958, 876,
	875, 2619, 3415, 1958, 1065, 1958, 2689, 871, 870, 869,
	868, 1570, 2751, 2752, 199, 1572, 1573, 1574, 1575, 867,
	1550, 866, 2766, 865, 864, 1555, 201, 863, 200, 200,
	862, 733, 861, 860, 859, 858, 857, 856, 193, 193,
	838, 793, 792, 791, 2766, 790, 194, 194, 789, 788,
	1549, 787, 201, 786, 3005, 785, 784, 66, 783, 736,
	735, 782, 84, 1577, 1579, 781, 949, 780, 168, 168,
	949, 942, 200, 67, 779, 778, 777, 776, 2757, 775,
	774, 773, 772, 771, 770, 1133, 71, 1564, 1565, 1133,
	88, 769, 1250, 768, 767, 2198, 766, 756, 200, 1113,
	50, 755, 751, 1118, 2757, 750, 744, 743, 193, 703,
	1084, 702, 168, 662, 1570, 949, 194, 949, 661, 949,
	660, 77, 63, 1571, 1250, 2300, 2757, 53, 165, 91,
	652, 94, 651, 650, 621, 51, 613, 612, 168, 139,
	611, 1423, 1555, 595, 1234, 52, 220, 219, 1250, 3374,
	2552, 1970, 218, 1239, 199, 83, 1956, 2772, 2056, 217,
	216, 1475, 56, 2757, 1242, 215, 132, 2767, 98, 214,
	213, 2199, 212, 84, 95, 211, 136, 210, 209, 2772,
	1258, 208, 207, 206, 205, 2751, 2752, 204, 1084, 1250,
	949, 203, 201, 2767, 202, 1250, 1283, 3206, 3189, 1250,
	3038, 2842, 1259, 2712, 2793, 2695, 1576, 949, 2488, 949,
	1101, 1320, 1322, 1250, 2367, 2767, 134, 1666, 1666, 949,
	1317, 949, 85, 1665, 1665, 2794, 1571, 2349, 2518, 2334,
	169, 2214, 1708, 1982, 1280, 1826, 2212, 1265, 200, 1272,
	1731, 1278, 646, 2200, 2197, 1669, 1664, 3702, 193, 1551,
	1552, 1553, 1554, 1556, 1557, 1546, 194, 1636, 1262, 649,
	1250, 1120, 1126, 1071, 1220, 1225, 3883, 3863, 3766, 3708,
	3700, 1402, 3575, 1096, 3600, 1257, 949, 1256, 168, 2768,
	3536, 3, 3515, 1627, 3420, 1416, 3397, 3396, 3531, 3390,
	3389, 3388, 199, 3381, 3380, 3378, 3373, 1396, 1398, 1409,
	3370, 3369, 3284, 1268, 132, 2768, 3277, 3210, 1981, 3209,
	3208, 3199, 1389, 3166, 3165, 3164, 3087, 3083, 2837, 158,
	158, 2786, 1274, 1428, 1267, 2751, 2752, 2768, 2777, 1407,
	201, 1412, 1440, 3032, 2750, 2747, 2757, 1367, 1370, 88,
	2746, 1421, 2744, 1426, 1325, 2739, 1567, 1563, 2738, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 3249, 2202,
	2751, 2752, 949, 949, 949, 949, 949, 949, 949, 2751,
	2752, 2737, 2769, 2770, 2771, 1485, 200, 165, 91, 1376,
	94, 2734, 2731, 2711, 1394, 2694, 193, 2687, 2563, 1634,
	3082, 2335, 2185, 949, 194, 1546, 1476, 1627, 892, 949,
	1427, 1048, 1932, 199, 2761, 2753, 2754, 2755, 2756, 2758,
	2759, 737, 1545, 2535, 1901, 132, 168, 1899, 1628, 1279,
	1626, 2763, 2764, 2765, 1341, 2767, 2520, 4025, 2762, 2760,
	2761, 2753, 2754, 2755, 2756, 2758, 2759, 1524, 2766, 3982,
	2857, 201, 3981, 2763, 2764, 2765, 3916, 3914, 1408, 2791,
	2762, 2760, 2761, 2753, 2754, 2755, 2756, 2758, 2759, 2196,
	1422, 1268, 2751, 2752, 3905, 134, 1616, 1073, 3113, 1551,
	1552, 1553, 1554, 1556, 1557, 3758, 2757, 3746, 1518, 169,
	3743, 3720, 2227, 3742, 2376, 3741, 1268, 200, 3735, 3728,
	2753, 2754, 2755, 2756, 2758, 2759, 1433, 193, 3530, 1449,
	3697, 3681, 949, 949, 949, 194, 3680, 1273, 949, 2162,
	3668, 2757, 3665, 199, 3283, 1069, 3640, 1069, 3618, 3596,
	2757, 3573, 3556, 1685, 3555, 3543, 3542, 734, 3508, 3414,
	3395, 2766, 1133, 199, 2168, 3332, 3329, 2768, 3240, 3239,
	949, 3226, 3225, 640, 1521, 3181, 3169, 1764, 640, 3078,
	1614, 201, 1734, 3039, 3022, 2982, 949, 2931, 2910, 1529,
	1250, 2886, 1743, 1528, 2885, 2767, 2859, 1787, 2716, 1523,
	2715, 201, 2710, 2772, 2678, 949, 873, 2500, 1672, 1542,
	1543, 1133, 1525, 1671, 1670, 1668, 1667, 872, 1694, 1659,
	1657, 2374, 1739, 2373, 2346, 2519, 892, 200, 2339, 1547,
	1548, 2306, 2210, 1730, 1795, 1686, 199, 193, 1824, 2767,
	1681, 1691, 1692, 2757, 1064, 194, 1064, 200, 1680, 1679,
	1741, 1678, 1677, 1676, 1477, 1660, 1661, 193, 1550, 2886,
	1675, 1067, 1674, 1067, 1673, 194, 1790, 168, 1789, 1983,
	1722, 1654, 158, 1653, 201, 1547, 1548, 1715, 1652, 1651,
	1650, 1649, 1035, 1738, 1648, 1647, 1646, 168, 1549, 1645,
	2762, 2760, 2761, 2753, 2754, 2755, 2756, 2758, 2759, 1644,
	1643, 199, 1716, 1642, 1550, 199, 1641, 2768, 1640, 1629,
	1615, 646, 1613, 1608, 1815, 1095, 646, 1086, 1737, 1079,
	200, 2365, 3511, 2834, 199, 3416, 199, 1713, 649, 3366,
	193, 3205, 2767, 649, 1549, 3192, 1792, 3184, 194, 201,
	1063, 2698, 1063, 201, 1250, 2337, 3464, 1706, 3703, 3585,
	892, 2768, 3418, 1133, 3204, 3979, 1836, 1735, 2213, 1684,
	168, 1628, 201, 2211, 201, 2855, 1611, 1758, 1726, 1710,
	1761, 3701, 3972, 1742, 1725, 1724, 1723, 3744, 1786, 2992,
	1555, 1721, 1720, 1719, 3656, 200, 2751, 2752, 1117, 200,
	1817, 2913, 1817, 3655, 3641, 193, 1817, 1744, 1865, 193,
	3599, 1867, 199, 194, 1872, 3534, 1649, 194, 200, 1649,
	200, 3463, 3661, 3187, 3024, 3023, 1416, 1666, 193, 1111,
	193, 1820, 1708, 1665, 1810, 168, 194, 1516, 194, 2534,
	1891, 2760, 2761, 2753, 2754, 2755, 2756, 2758, 2759, 2445,
	201, 1448, 1116, 2736, 2768, 1108, 3287, 2735, 168, 1851,
	168, 2660, 1413, 3238, 2198, 1111, 2429, 1112, 854, 1486,
	2969, 1111, 2968, 1638, 1876, 1980, 3652, 2763, 2764, 2765,
	2755, 2756, 2758, 2759, 2762, 2760, 2761, 2753, 2754, 2755,
	2756, 2758, 2759, 646, 3903, 3888, 200, 1065, 1250, 1065,
	1250, 3875, 1250, 1933, 1115, 1925, 193, 1457, 855, 3271,
	649, 1458, 1889, 3254, 194, 1804, 3242, 3043, 1250, 1250,
	3577, 2798, 1635, 1793, 3115, 2193, 1257, 2704, 1256, 1250,
	1930, 2372, 3884, 1682, 1662, 1938, 168, 1047, 2961, 1929,
	2199, 1390, 1250, 1250, 1250, 1298, 3897, 2468, 3894, 3217,
	3001, 3737, 3518, 1989, 1871, 2465, 1102, 3817, 908, 3725,
	1109, 2889, 640, 1437, 3233, 1999, 2570, 2531, 1110, 2856,
	2954, 3939, 1892, 3940, 1978, 3778, 2071, 2762, 2760, 2761,
	2753, 2754, 2755, 2756, 2758, 2759, 3059, 3267, 3638, 2868,
	1935, 1416, 3885, 3453, 1286, 852, 2381, 850, 848, 1946,
	2041, 1991, 4021, 3631, 846, 1985, 2039, 843, 3624, 1912,
	1988, 1911, 2200, 2197, 2000, 2001, 2002, 3273, 2069, 3263,
	3262, 3256, 3253, 2399, 3252, 2399, 3214, 836, 3213, 1296,
	2003, 890, 2870, 2709, 1484, 2708, 949, 2397, 949, 2397,
	2707, 2706, 2664, 3266, 2470, 949, 1948, 1949, 1764, 1764,
	1133, 1944, 949, 949, 949, 949, 949, 949, 949, 949,
	949, 949, 949, 949, 949, 949, 949, 949, 949, 949,
	949, 949, 949, 949, 949, 949, 949, 949, 949, 949,
	949, 949, 949, 949, 949, 949, 949, 1394, 949, 1394,
	949, 949, 949, 949, 2073, 1341, 1940, 1943, 1805, 1943,
	646, 892, 1297, 892, 2081, 894, 2461, 1117, 1976, 889,
	1977, 2060, 949, 1096, 1111, 949, 949, 649, 698, 1553,
	1554, 1556, 1557, 949, 1993, 1435, 1990, 949, 2202, 949,
	949, 1992, 2453, 2912, 2452, 2070, 2432, 1133, 2358, 1108,
	1483, 2071, 2143, 949, 949, 949, 949, 3777, 949, 949,
	949, 949, 949, 949, 949, 949, 1522, 1253, 2241, 2240,
	2528, 1116, 2021, 2101, 1117, 1331, 1910, 1330, 1557, 2751,
	2752, 3967, 1108, 3044, 949, 949, 949, 949, 949, 949,
	949, 949, 949, 2069, 1352, 1809, 1808, 949, 1292, 1817,
	1819, 2366, 891, 619, 2084, 2174, 2175, 2068, 1752, 1069,
	2476, 1329, 2054, 1328, 2350, 1997, 1133, 1305, 699, 2174,
	2190, 840, 2388, 2420, 2053, 1069, 1076, 1960, 1116, 2057,
	1962, 2072, 2065, 2045, 2637, 2274, 1967, 1482, 2196, 1969,
	1499, 949, 1133, 3554, 199, 2236, 2059, 1495, 1758, 1758,
	2058, 1761, 1761, 2275, 1109, 3465, 2067, 2097, 2098, 3439,
	1074, 2431, 1110, 3968, 2258, 2258, 2272, 1450, 2174, 2050,
	873, 2292, 2294, 873, 873, 2193, 2449, 2298, 1847, 2189,
	3853, 2088, 201, 2419, 2089, 2090, 1945, 1109, 3435, 2759,
	2322, 2442, 2443, 2442, 2443, 1110, 2158, 2442, 2443, 618,
	1547, 1548, 3050, 1812, 2014, 1446, 2238, 1250, 1064, 1430,
	2070, 2239, 3939, 2011, 2242, 2158, 2243, 2244, 2170, 1515,
	2052, 2347, 1578, 199, 1064, 1067, 1527, 892, 200, 1550,
	2757, 831, 3049, 2187, 3436, 2166, 892, 1133, 193, 2314,
	892, 1067, 2164, 2467, 3881, 1458, 194, 2006, 2616, 3449,
	888, 1795, 1035, 3970, 885, 1715, 1077, 2360, 2313, 1549,
	2652, 201, 2408, 2867, 1764, 2478, 2202, 764, 168, 2321,
	2267, 2326, 2068, 2466, 2332, 2333, 1094, 2055, 2296, 158,
	2254, 2464, 2283, 1458, 2304, 2305, 2477, 2479, 3241, 1133,
	2398, 2319, 2320, 2315, 3104, 3607, 2622, 2368, 2469, 2007,
	2015, 1250, 1472, 1814, 1063, 1713, 3983, 200, 1111, 949,
	949, 2400, 949, 1431, 2336, 1668, 3796, 193, 3956, 2767,
	1063, 696, 2154, 695, 1436, 194, 2482, 1316, 892, 883,
	3220, 831, 1847, 832, 844, 1813, 844, 844, 2040, 1481,
	3229, 1111, 2462, 845, 2038, 2379, 844, 168, 2504, 2152,
	2375, 1555, 2008, 3553, 885, 1473, 1496, 701, 700, 1660,
	1661, 3955, 2411, 2356, 2450, 1898, 1897, 3976, 3993, 1314,
	3928, 2430, 2651, 2484, 2426, 2378, 2434, 2644, 2645, 2049,
	2382, 2542, 3882, 1250, 1250, 3348, 1250, 199, 3347, 1577,
	1579, 2140, 2625, 3487, 2998, 884, 3431, 1988, 1250, 3609,
	3432, 1351, 3485, 2458, 2999, 1291, 620, 3969, 1294, 617,
	2202, 3447, 2444, 2446, 2447, 2448, 1838, 2413, 2416, 2558,
	2584, 2586, 2485, 2403, 4006, 201, 2590, 2591, 2422, 2489,
	2051, 2768, 2492, 832, 2494, 2596, 2597, 2598, 1957, 2433,
	1570, 2924, 646, 2555, 3434, 2918, 949, 2606, 1864, 2607,
	1849, 1065, 2451, 2934, 1758, 2557, 3738, 1761, 3437, 649,
	1844, 1497, 2148, 2435, 3880, 3794, 1075, 1065, 2998, 1847,
	1416, 200, 2483, 2533, 2149, 1257, 2533, 2486, 2150, 1316,
	2604, 193, 2155, 3754, 2587, 2900, 2559, 949, 1840, 194,
	2498, 833, 2569, 949, 949, 2869, 1988, 2624, 3795, 1988,
	1879, 1988, 2508, 1493, 573, 1886, 731, 2902, 158, 2184,
	2013, 168, 1845, 1846, 2526, 2627, 2544, 2629, 2410, 2621,
	2601, 2589, 2537, 2548, 2592, 2549, 2593, 2550, 3487, 568,
	2608, 841, 2610, 2899, 2612, 2138, 1498, 3485, 2141, 2904,
	1841, 3448, 3500, 1494, 1655, 2853, 2556, 3927, 949, 949,
	2620, 2560, 1571, 2640, 949, 1838, 2571, 2753, 2754, 2755,
	2756, 2758, 2759, 1838, 2666, 3433, 2614, 949, 949, 1752,
	1752, 2554, 3344, 949, 949, 1394, 765, 3974, 757, 949,
	1821, 1822, 3101, 2157, 2137, 1726, 1445, 1447, 949, 949,
	949, 833, 1874, 2903, 949, 2010, 3230, 2399, 3566, 3550,
	3440, 2165, 2623, 1885, 949, 2667, 3949, 1526, 834, 3608,
	3909, 2414, 1607, 2697, 1873, 3828, 3757, 2603, 3910, 1432,
	2714, 949, 2318, 891, 3994, 2643, 2609, 3486, 2611, 2005,
	2613, 2634, 2633, 2275, 2275, 2151, 2331, 3117, 2384, 2409,
	4004, 3510, 1869, 2084, 2153, 2632, 3338, 2638, 1831, 3201,
	835, 2653, 2386, 1832, 3102, 1089, 2630, 1093, 3349, 3975,
	3061, 2635, 1460, 2325, 1696, 3760, 1845, 1846, 653, 2692,
	2693, 3879, 3282, 745, 2696, 1560, 1558, 1559, 1551, 1552,
	1553, 1554, 1556, 1557, 2387, 1536, 3938, 949, 949, 949,
	2688, 3977, 3936, 3774, 1870, 1700, 949, 949, 949, 2385,
	3483, 949, 3926, 2665, 3667, 2675, 882, 3299, 834, 2985,
	1919, 949, 1069, 1133, 3501, 3549, 4007, 949, 1693, 949,
	1087, 1082, 560, 1537, 2551, 3345, 2087, 1069, 3155, 1866,
	1958, 2139, 2673, 1848, 1703, 3393, 1806, 3065, 1700, 3999,
	2846, 3615, 3614, 3594, 3724, 1133, 3100, 3300, 2316, 3260,
	835, 1833, 1803, 2275, 2275, 2275, 1536, 1069, 2805, 2806,
	1133, 2703, 3486, 3216, 1701, 2986, 3761, 1835, 2827, 1531,
	2202, 2980, 1607, 2881, 1764, 1535, 892, 1703, 1133, 2877,
	1882, 2788, 2512, 2502, 1939, 2844, 1931, 2851, 1924, 1906,
	949, 1698, 3452, 3170, 3806, 758, 759, 2807, 3836, 3451,
	3062, 1619, 1536, 3837, 949, 1624, 2863, 1701, 2499, 2817,
	2046, 1064, 2310, 3908, 1799, 1764, 569, 3302, 1537, 1801,
	3523, 1880, 2821, 2865, 3551, 2836, 1064, 1354, 1067, 1837,
	3650, 949, 2874, 2875, 3648, 1699, 3595, 2871, 2077, 1998,
	2840, 3350, 1802, 1067, 2892, 2670, 1535, 2415, 2888, 2890,
	2887, 1474, 2894, 2783, 2784, 2785, 1064, 2815, 2813, 1881,
	2799, 2671, 2841, 2658, 2833, 2676, 2891, 2636, 3183, 2896,
	2897, 2810, 1133, 1067, 2436, 1752, 2814, 2809, 570, 2312,
	3156, 1250, 2878, 1702, 2311, 654, 655, 2355, 3157, 1537,
	746, 747, 1535, 1250, 2354, 3394, 2915, 2353, 2826, 1133,
	2831, 2937, 2832, 2822, 2940, 3998, 640, 1063, 2948, 2950,
	2848, 2849, 2850, 3351, 2352, 1323, 571, 1250, 572, 2816,
	2860, 2861, 1063, 2862, 2825, 2943, 1702, 1324, 1250, 3762,
	2828, 2829, 1838, 1434, 1337, 831, 2966, 2917, 1335, 2866,
	2974, 763, 1069, 760, 761, 1836, 2932, 2078, 1461, 2820,
	2506, 2979, 1063, 2925, 2872, 2907, 2908, 889, 885, 2909,
	3603, 3450, 3731, 3492, 1758, 2952, 1738, 1761, 3033, 2906,
	2584, 1937, 1836, 2854, 2824, 2957, 3946, 2905, 3814, 2584,
	1250, 1250, 3646, 3592, 2994, 2911, 3803, 2928, 2929, 2975,
	3540, 2930, 3809, 657, 656, 3003, 2923, 2927, 3020, 2921,
	2981, 2920, 3400, 2922, 1876, 1758, 2935, 2955, 1761, 2941,
	3732, 2781, 1876, 2847, 2882, 2933, 2951, 3014, 2672, 2946,
	3593, 3172, 3833, 2812, 3040, 2437, 2438, 2674, 2209, 1513,
	2987, 3948, 1133, 3899, 2959, 1133, 2434, 832, 748, 749,
	1511, 1064, 2253, 2249, 646, 658, 659, 2995, 1490, 2977,
	3604, 3539, 3026, 3027, 1065, 2823, 2926, 1488, 1067, 3834,
	3058, 649, 1471, 1469, 1467, 949, 3745, 3810, 3572, 1065,
	3392, 949, 949, 3018, 3019, 949, 949, 949, 3000, 949,
	3272, 1834, 3031, 1696, 1465, 3733, 3015, 3009, 949, 1764,
	3056, 1463, 2780, 3077, 3041, 158, 158, 949, 3035, 1065,
	949, 1455, 1453, 1333, 2745, 3002, 1133, 2677, 3055, 2503,
	2460, 2428, 2247, 2377, 1733, 949, 1729, 3046, 1514, 3047,
	1418, 3048, 3057, 1133, 2037, 1531, 2618, 2617, 2595, 2251,
	2252, 2250, 2993, 1764, 1764, 949, 949, 1063, 949, 949,
	949, 3063, 2275, 2275, 3080, 1336, 2066, 2048, 892, 1334,
	2018, 3052, 762, 2208, 1903, 1788, 949, 1700, 1639, 1429,
	949, 1309, 1764, 1764, 949, 949, 949, 949, 949, 949,
	949, 949, 949, 949, 949, 949, 949, 949, 949, 949,
	949, 949, 949, 3060, 949, 2246, 2248, 3874, 2936, 3950,
	3469, 949, 949, 1764, 1512, 833, 1703, 3460, 949, 1831,
	842, 3802, 3521, 3474, 1832, 1510, 3089, 3090, 3424, 949,
	1698, 3298, 3292, 1489, 3265, 3085, 3236, 3234, 3924, 3215,
	1069, 1069, 1487, 2978, 949, 3053, 1701, 1470, 1468, 1466,
	2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275,
	2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 1464,
	2275, 3096, 3112, 1133, 1699, 2970, 1462, 3107, 3119, 3103,
	3105, 3106, 2553, 3129, 3188, 3130, 1454, 1452, 1332, 3132,
	2529, 3127, 2517, 2509, 2496, 3128, 1973, 1971, 3167, 1758,
	3126, 949, 1761, 1968, 1065, 3159, 2036, 3134, 1131, 1963,
	1961, 1959, 1232, 3211, 1950, 1902, 949, 949, 1900, 1890,
	3160, 1877, 1833, 3168, 1863, 1850, 1988, 1839, 3011, 3012,
	3013, 3097, 834, 2990, 3016, 3674, 3017, 1540, 1835, 1064,
	1064, 949, 949, 1758, 1758, 158, 1761, 1761, 1740, 3176,
	3177, 3174, 2097, 3120, 1044, 3940, 1067, 1067, 847, 849,
	851, 3844, 949, 2656, 2947, 1702, 957, 3545, 3538, 1886,
	3179, 3180, 1758, 1758, 835, 1761, 1761, 3190, 3537, 1045,
	3481, 2097, 3135, 2585, 1825, 1250, 1288, 2399, 2399, 3676,
	2418, 3310, 1847, 631, 1508, 1509, 2009, 1764, 1375, 2035,
	1837, 2397, 2417, 1758, 1936, 1752, 1761, 2034, 1374, 228,
	228, 228, 3163, 563, 564, 3843, 579, 563, 579, 589,
	594, 3243, 1250, 610, 3248, 3250, 3207, 3247, 616, 949,
	3261, 3219, 1541, 2016, 228, 1063, 1063, 1069, 949, 3454,
	3476, 1451, 3255, 3710, 2657, 3401, 1752, 1547, 1548, 3379,
	3191, 2439, 742, 1853, 1250, 1250, 1250, 3268, 228, 1547,
	1548, 2542, 2421, 3320, 1544, 574, 3304, 1885, 2434, 3942,
	1250, 687, 1857, 3934, 1046, 3307, 1133, 728, 3312, 3289,
	3303, 3324, 3904, 1375, 3259, 1831, 3275, 1375, 1550, 2495,
	1832, 221, 1796, 2584, 2465, 2473, 2167, 3288, 1133, 3290,
	2455, 949, 949, 1838, 3258, 3336, 1549, 949, 949, 1764,
	2472, 1619, 949, 949, 2423, 949, 3801, 585, 1549, 949,
	1854, 2457, 3770, 3767, 3293, 3730, 3321, 3322, 3323, 3306,
	949, 2425, 3643, 3305, 2456, 557, 1064, 3308, 3691, 3291,
	2873, 3971, 3314, 3313, 2424, 3281, 949, 3198, 3601, 2536,
	2297, 1791, 1745, 1067, 2852, 3319, 3330, 3997, 3325, 3326,
	563, 563, 3327, 3769, 3361, 2279, 3334, 3333, 228, 1439,
	3331, 1259, 3353, 3836, 3352, 1438, 3346, 3664, 3837, 3341,
	2751, 2752, 1065, 1065, 1547, 1548, 3683, 1758, 1833, 224,
	1761, 2391, 2392, 3337, 3371, 3365, 2882, 3952, 3684, 2389,
	2390, 2204, 3203, 2391, 1835, 2389, 1069, 2237, 1492, 3632,
	3477, 1491, 3473, 1858, 1069, 3472, 3367, 3296, 1133, 3202,
	1133, 3108, 2938, 1633, 3685, 1632, 3985, 1069, 3957, 3721,
	3406, 3628, 1063, 3586, 3584, 3507, 3417, 1133, 3335, 3316,
	3276, 3274, 3232, 3227, 3010, 2984, 2983, 2600, 2599, 2546,
	2521, 2497, 1834, 2370, 2369, 2169, 949, 2033, 2032, 3391,
	2031, 2030, 1953, 1952, 1951, 1934, 1837, 1914, 1913, 3421,
	3422, 1859, 1860, 1909, 3235, 3446, 3237, 1908, 1907, 1905,
	1904, 3687, 1133, 1507, 1855, 1506, 1362, 1133, 3457, 3458,
	3455, 1361, 3409, 1360, 1359, 3403, 3404, 3686, 3405, 1758,
	3412, 3398, 1761, 1250, 1250, 1064, 1358, 3408, 3456, 1357,
	2840, 1356, 3413, 1064, 3688, 3423, 1355, 3445, 1856, 3478,
	1752, 3479, 1067, 158, 1353, 1348, 1064, 1347, 3264, 1133,
	1067, 1346, 3444, 3490, 1250, 3493, 3402, 1345, 3488, 1344,
	1304, 1303, 1302, 1067, 3407, 1301, 1300, 1299, 1293, 1287,
	1285, 1284, 1124, 1123, 1122, 1732, 1121, 1092, 1091, 3480,
	949, 3471, 1027, 1797, 1752, 1752, 853, 839, 3606, 1838,
	3438, 1501, 82, 1295, 3468, 1133, 1416, 3467, 3525, 1065,
	674, 3544, 76, 1883, 2942, 3231, 3832, 949, 949, 949,
	3489, 3494, 3524, 1752, 1752, 3318, 1281, 3528, 3509, 3512,
	3753, 1063, 682, 3519, 1827, 1133, 1829, 3526, 3816, 1063,
	949, 2898, 1861, 949, 949, 2474, 2017, 3514, 1459, 2019,
	2835, 3541, 1063, 949, 1752, 2338, 1764, 3793, 3375, 2713,
	3717, 949, 949, 3502, 3565, 2207, 1637, 2792, 78, 933,
	979, 3499, 3498, 3513, 3425, 3218, 1133, 3533, 3552, 2574,
	3496, 3495, 1749, 1751, 899, 1136, 1807, 939, 1823, 1133,
	1816, 3557, 230, 3532, 2371, 2257, 956, 949, 953, 1753,
	1755, 955, 954, 1754, 949, 1656, 952, 1748, 3295, 3294,
	1862, 3574, 949, 2505, 1764, 2540, 3568, 1340, 816, 2275,
	1811, 949, 2163, 2191, 949, 2702, 1630, 914, 3588, 935,
	949, 2188, 1085, 3562, 3580, 3581, 924, 1133, 3689, 2818,
	2997, 3197, 3579, 3690, 3529, 2076, 3583, 690, 1834, 2748,
	2194, 1078, 2280, 3589, 3587, 2273, 2269, 3627, 2530, 1517,
	1609, 2541, 1080, 2275, 1119, 917, 2161, 1621, 2682, 2086,
	3611, 3610, 3004, 3637, 2838, 2364, 1895, 3840, 1065, 3116,
	1918, 3649, 1133, 3658, 1043, 1250, 1065, 1042, 1041, 3822,
	1090, 3819, 3328, 2964, 2966, 2279, 1800, 610, 2383, 1065,
	1599, 3634, 3663, 949, 949, 2971, 3629, 3625, 3642, 3675,
	929, 3647, 1237, 2803, 3034, 1306, 949, 949, 615, 941,
	228, 3679, 228, 228, 1229, 1598, 228, 228, 2481, 3671,
	2480, 3698, 3657, 949, 1764, 3673, 3727, 1106, 1752, 3672,
	228, 1105, 1261, 3670, 1104, 2880, 1758, 4005, 3678, 1761,
	3677, 3692, 3228, 198, 3528, 2650, 3669, 949, 1538, 1530,
	949, 195, 912, 197, 3694, 3695, 3662, 1290, 196, 3705,
	3734, 3503, 3902, 3723, 3245, 2279, 2279, 2956, 20, 949,
	1308, 19, 1313, 18, 103, 228, 228, 39, 1229, 3715,
	17, 131, 130, 129, 128, 127, 3706, 3707, 228, 2275,
	3722, 133, 1250, 126, 1758, 125, 1350, 1761, 120, 124,
	3739, 123, 122, 3617, 121, 119, 949, 949, 3756, 228,
	228, 228, 118, 1229, 228, 117, 949, 116, 115, 949,
	3709, 1250, 114, 113, 610, 112, 228, 228, 111, 3747,
	3740, 1250, 1250, 110, 109, 108, 3751, 107, 106, 3750,
	1752, 105, 104, 606, 3763, 3784, 603, 55, 1250, 742,
	54, 3749, 3768, 102, 3764, 3765, 101, 16, 37, 14,
	59, 949, 949, 3776, 3752, 3775, 3782, 3783, 3780, 60,
	3789, 13, 3790, 32, 81, 3781, 93, 3771, 92, 33,
	3773, 90, 89, 3787, 31, 2279, 2279, 2279, 3788, 15,
	87, 3813, 86, 3811, 949, 949, 3798, 949, 30, 28,
	11, 9, 8, 34, 3812, 3662, 1717, 3821, 3824, 12,
	5, 228, 3838, 163, 1758, 3755, 162, 1761, 164, 161,
	80, 3845, 160, 159, 79, 26, 228, 10, 3826, 155,
	3659, 3286, 3830, 74, 3842, 157, 1226, 3858, 156, 1238,
	1241, 3797, 3857, 154, 153, 949, 949, 949, 152, 75,
	72, 151, 150, 2100, 73, 3619, 3620, 3852, 3854, 3849,
	149, 24, 6, 58, 7, 3886, 1547, 1548, 949, 3547,
	3891, 3042, 96, 97, 3825, 3633, 35, 3829, 3635, 3636,
	3859, 3873, 3872, 3870, 3871, 70, 69, 68, 1578, 23,
	57, 22, 188, 3889, 187, 1550, 186, 185, 1241, 1241,
	3913, 180, 179, 184, 3911, 182, 181, 183, 3915, 178,
	190, 189, 3920, 192, 176, 172, 3921, 949, 171, 3925,
	175, 177, 174, 3912, 173, 1549, 170, 3917, 191, 2542,
	3918, 3919, 2679, 2680, 148, 3922, 65, 1241, 147, 3846,
	2205, 146, 3847, 3931, 3932, 3933, 3944, 145, 3937, 3935,
	144, 143, 142, 141, 64, 21, 3945, 3943, 2, 3821,
	1, 0, 3824, 3947, 3951, 949, 0, 949, 3959, 0,
	3962, 3960, 3954, 0, 3953, 3958, 3966, 0, 0, 3965,
	3941, 0, 0, 3842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3980, 0, 3978, 0, 0, 0, 0, 0, 0, 0,
	0, 3964, 0, 0, 3986, 3987, 0, 1555, 0, 0,
	563, 3989, 949, 949, 3995, 3992, 3961, 0, 3963, 0,
	949, 0, 949, 949, 4001, 2348, 0, 3748, 0, 0,
	4009, 228, 0, 228, 0, 0, 4008, 228, 4011, 0,
	0, 622, 2774, 2775, 2776, 1577, 1579, 1752, 0, 3991,
	1261, 1229, 228, 0, 228, 4015, 4019, 4018, 0, 228,
	1261, 579, 4020, 4023, 228, 1261, 949, 4022, 4024, 0,
	610, 0, 4027, 4010, 0, 0, 4012, 3439, 912, 0,
	4032, 0, 912, 0, 0, 1547, 1548, 0, 0, 0,
	0, 0, 4017, 0, 0, 0, 1570, 1217, 0, 0,
	0, 1217, 4002, 4003, 0, 1752, 3435, 1578, 4028, 0,
	3428, 4030, 0, 0, 1550, 0, 0, 0, 0, 0,
	2394, 0, 0, 0, 0, 0, 3426, 0, 0, 0,
	0, 0, 3430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 627, 4029, 0, 0, 0,
	0, 0, 3436, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 2279, 2279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3076, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 633, 0, 0,
	3901, 0, 0, 0, 0, 1752, 1572, 1573, 1574, 1575,
	0, 228, 0, 0, 0, 0, 1555, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279,
	2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279,
	2279, 0, 2279, 0, 1577, 1579, 0, 1238, 0, 0,
	0, 0, 228, 0, 0, 0, 228, 0, 0, 0,
	0, 228, 0, 0, 66, 0, 0, 0, 1564, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	67, 228, 0, 228, 3431, 0, 0, 563, 3432, 0,
	0, 0, 0, 71, 0, 1570, 0, 0, 0, 0,
	0, 1954, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 3434, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 0, 0, 0, 3437, 610, 0, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 228, 0, 1229, 228,
	84, 95, 0, 0, 626, 0, 0, 1576, 0, 0,
	0, 0, 610, 0, 0, 0, 0, 0, 0, 228,
	0, 3073, 3074, 0, 0, 0, 0, 1571, 228, 228,
	0, 228, 0, 228, 0, 228, 0, 228, 0, 0,
	0, 623, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 2042, 0, 0, 2043, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 228, 0,
	0, 0, 0, 3433, 0, 0, 0, 1547, 1548, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 594,
	0, 625, 0, 610, 0, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 1928, 0, 1550, 0, 3440, 3136,
	3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146,
	3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 0, 3158,
	0, 0, 0, 0, 1217, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2361, 1567, 1563, 0,
	1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0,
	0, 0, 0, 1238, 0, 0, 88, 1547, 1548, 0,
	1580, 1581, 1582, 1590, 1591, 1592, 0, 912, 0, 0,
	0, 0, 0, 1217, 0, 0, 2804, 0, 1583, 1578,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	1547, 1548, 0, 1596, 165, 91, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2830, 0,
	0, 0, 1578, 0, 0, 0, 1549, 0, 1555, 1550,
	199, 0, 0, 2843, 0, 0, 1569, 0, 737, 0,
	0, 0, 132, 0, 1566, 0, 0, 0, 0, 0,
	563, 2858, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 228, 1577, 1579, 201, 1569,
	0, 0, 0, 0, 563, 0, 0, 1566, 0, 0,
	0, 228, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 1572, 1573,
	1574, 1575, 0, 0, 200, 0, 0, 1570, 1555, 0,
	0, 3071, 0, 0, 193, 1217, 0, 0, 0, 0,
	0, 0, 194, 2751, 2752, 0, 2769, 2770, 2771, 0,
	0, 1572, 1573, 1574, 1575, 0, 0, 1587, 66, 0,
	1597, 1555, 0, 0, 168, 579, 1577, 1579, 0, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 0, 0,
	0, 1593, 2843, 1594, 0, 0, 0, 71, 0, 0,
	1564, 1565, 0, 0, 0, 0, 0, 0, 0, 1577,
	1579, 0, 0, 0, 0, 0, 1585, 0, 2407, 0,
	0, 0, 2766, 0, 0, 0, 228, 1570, 0, 0,
	0, 0, 77, 1564, 1565, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	228, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	1570, 0, 0, 0, 228, 0, 83, 0, 0, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	228, 2487, 0, 0, 84, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2279, 0, 0, 2757, 0, 1261, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 1576,
	0, 0, 2525, 0, 0, 1232, 0, 0, 1131, 0,
	0, 0, 2407, 85, 563, 0, 0, 2545, 0, 1571,
	0, 0, 0, 228, 0, 2279, 228, 0, 228, 0,
	228, 0, 1576, 0, 0, 1229, 0, 228, 228, 0,
	0, 0, 0, 1588, 0, 0, 0, 2567, 742, 0,
	2407, 2407, 1571, 0, 1559, 1551, 1552, 1553, 1554, 1556,
	1557, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 2767, 0, 0, 0, 0, 0, 3093,
	228, 1229, 228, 0, 0, 1261, 0, 1261, 0, 0,
	1229, 0, 1229, 0, 1229, 0, 3109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 1217, 0, 0, 0, 228, 228, 228, 228,
	1229, 228, 0, 228, 0, 0, 0, 0, 0, 0,
	88, 1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567,
	1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556,
	1557, 0, 0, 1226, 228, 3384, 0, 0, 0, 3383,
	0, 2279, 228, 0, 0, 0, 0, 1238, 165, 91,
	0, 94, 1567, 1563, 0, 1560, 1558, 1559, 1551, 1552,
	1553, 1554, 1556, 1557, 0, 2768, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 1217,
	0, 0, 737, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 1548, 0, 0, 0, 0, 3200, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 2279, 2279, 0, 0, 3571, 1550,
	0, 1261, 0, 0, 0, 0, 134, 0, 0, 0,
	1241, 1241, 0, 0, 0, 0, 0, 0, 1217, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 200, 1549,
	898, 0, 0, 0, 0, 0, 0, 0, 193, 1569,
	0, 0, 3597, 0, 1217, 0, 194, 0, 0, 0,
	0, 2763, 2764, 2765, 0, 1238, 0, 0, 2762, 2760,
	2761, 2753, 2754, 2755, 2756, 2758, 2759, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1572, 1573, 1574, 1575, 0, 0, 0, 228, 0,
	0, 1555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 563, 1217,
	0, 0, 0, 563, 0, 0, 563, 0, 0, 563,
	563, 0, 0, 0, 0, 563, 0, 0, 0, 1577,
	1579, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 2751, 2752, 3714, 2769,
	2770, 2771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 1261, 0, 0, 3081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1570, 0, 0, 2407, 2407, 228, 0, 0, 0, 2407,
	0, 0, 2884, 0, 0, 0, 0, 0, 0, 0,
	2407, 2884, 0, 2407, 2884, 2884, 0, 0, 0, 0,
	0, 0, 1547, 1548, 0, 2766, 0, 228, 228, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 228,
	1229, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2407, 0, 2939, 2407, 1313, 0, 0, 2407,
	2407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 228, 2960, 0, 0, 2962, 2407, 0, 1566,
	228, 0, 1571, 3411, 228, 0, 1313, 2757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3419, 0, 0, 2525, 0, 0, 1229, 0, 228, 0,
	0, 2407, 0, 563, 0, 0, 0, 0, 0, 0,
	2407, 0, 0, 3070, 0, 0, 0, 0, 0, 228,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2772, 0, 0, 1572, 1573, 1574, 1575, 0, 0, 0,
	0, 0, 0, 1555, 228, 2525, 0, 0, 2525, 1547,
	1548, 0, 1580, 1581, 1582, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 2767, 0, 0, 0,
	1583, 1578, 0, 0, 0, 0, 0, 0, 1550, 0,
	0, 1577, 1579, 0, 0, 1596, 3051, 0, 0, 1229,
	228, 0, 228, 0, 0, 1560, 1558, 1559, 1551, 1552,
	1553, 1554, 1556, 1557, 0, 1564, 1565, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 898, 0, 1569, 0,
	898, 1238, 0, 0, 0, 228, 1566, 0, 1131, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 3563, 0,
	0, 0, 0, 0, 0, 1263, 0, 1269, 0, 1275,
	0, 0, 67, 0, 0, 0, 0, 0, 2768, 0,
	0, 3114, 0, 0, 0, 71, 0, 0, 0, 0,
	1572, 1573, 1574, 1575, 0, 0, 0, 0, 0, 3563,
	1555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2100, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 1576, 0, 0, 0, 0, 1587,
	0, 0, 1597, 0, 0, 0, 0, 0, 1577, 1579,
	1387, 0, 1238, 1238, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 83, 1594, 0, 1405, 0, 1410,
	2100, 0, 1564, 1565, 0, 1217, 0, 98, 0, 1419,
	0, 1424, 84, 95, 0, 0, 228, 228, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 2763, 2764, 2765, 1217, 563, 563,
	0, 2762, 2760, 2761, 2753, 2754, 2755, 2756, 2758, 2759,
	0, 0, 1217, 0, 1595, 1238, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 1478, 0, 0, 0,
	1217, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 912, 0, 0, 0,
	0, 0, 0, 0, 1567, 1563, 0, 1560, 1558, 1559,
	1551, 1552, 1553, 1554, 1556, 1557, 0, 0, 0, 610,
	0, 1576, 0, 0, 0, 0, 0, 0, 2751, 2752,
	0, 2769, 2770, 2771, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 228, 2751, 2752, 0, 2769, 2770,
	2771, 0, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 0,
	0, 0, 0, 0, 1217, 1588, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 88, 0,
	0, 0, 0, 1618, 0, 228, 0, 0, 0, 1631,
	0, 1217, 228, 0, 0, 0, 0, 2766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2407, 228, 2766, 0, 165, 91, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 2567, 2567,
	0, 0, 0, 0, 742, 742, 2407, 0, 0, 2525,
	2525, 0, 199, 742, 2407, 0, 0, 0, 0, 0,
	737, 228, 0, 1586, 132, 0, 0, 1561, 1562, 1568,
	1589, 1567, 1563, 0, 1560, 1558, 1559, 1551, 1552, 1553,
	1554, 1556, 1557, 0, 0, 0, 0, 0, 0, 2757,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1689, 1689, 1689, 0, 2757, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 2773, 0, 0, 0, 0, 0, 0, 169, 66,
	3376, 0, 0, 0, 1217, 0, 200, 1217, 0, 0,
	0, 0, 2772, 0, 0, 67, 193, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 71, 2772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 1399, 1241, 2767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 77, 0, 2767, 0, 0, 1261, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 1217, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 1217, 0, 83, 0, 0,
	2407, 2407, 2407, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 958, 1261, 0, 84, 95, 0, 0, 0,
	0, 2407, 0, 2884, 0, 0, 1261, 1261, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2407, 0, 2407, 228, 0, 229, 229, 229, 0, 0,
	2768, 0, 0, 0, 85, 0, 2407, 0, 0, 0,
	3505, 0, 0, 0, 0, 0, 0, 2768, 0, 228,
	229, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 1548, 0, 0, 0,
	0, 1590, 1591, 1592, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 1261,
	0, 0, 0, 0, 1550, 1217, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 2763, 2764, 2765, 0,
	0, 88, 0, 2762, 2760, 2761, 2753, 2754, 2755, 2756,
	2758, 2759, 0, 2763, 2764, 2765, 0, 0, 0, 0,
	2762, 2760, 2761, 2753, 2754, 2755, 2756, 2758, 2759, 0,
	0, 2407, 0, 2884, 0, 0, 3591, 0, 0, 165,
	91, 0, 94, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 1573, 1574, 1575,
	0, 0, 0, 0, 0, 199, 1555, 0, 0, 610,
	0, 0, 0, 737, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 1241, 0, 1597, 0,
	0, 0, 0, 201, 1577, 1579, 0, 3591, 0, 0,
	0, 0, 0, 0, 0, 2407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3666, 0, 134, 1564, 1565,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 0,
	0, 169, 0, 0, 1585, 0, 0, 0, 1217, 200,
	0, 0, 0, 0, 0, 1570, 0, 0, 0, 193,
	228, 228, 0, 0, 0, 0, 0, 194, 0, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3114, 0, 2075, 0, 2079, 1397,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 3591,
	0, 0, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 0, 2142, 0,
	2144, 2145, 2146, 2147, 0, 228, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3505, 2171, 0, 0, 0, 0, 1571, 0, 0,
	0, 0, 0, 1618, 228, 0, 0, 2186, 0, 0,
	0, 0, 0, 2884, 0, 0, 0, 0, 0, 0,
	1217, 1588, 1217, 2216, 2219, 2222, 2225, 0, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 0, 0, 0, 1261, 1217,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2271, 0, 2282, 2284,
	2289, 0, 0, 0, 0, 3807, 0, 0, 0, 0,
	0, 0, 1261, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 0, 0, 0, 1217,
	0, 0, 0, 0, 228, 2407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1586,
	0, 228, 0, 0, 1238, 0, 1589, 1567, 1563, 0,
	1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0,
	0, 1217, 0, 0, 0, 0, 0, 3114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 1137, 229, 229,
	2407, 1137, 229, 229, 1137, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 229, 1217, 0, 0,
	0, 3591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 2407, 0, 0, 0, 1217, 0,
	1137, 229, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 229, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 2490,
	2491, 0, 2493, 0, 0, 229, 229, 229, 0, 0,
	229, 1137, 0, 0, 704, 0, 912, 1137, 0, 0,
	0, 1137, 229, 229, 0, 0, 0, 0, 0, 1217,
	0, 0, 0, 0, 0, 1137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 2567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2567, 1217, 0, 0, 707, 0, 0,
	0, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 2615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1601, 0, 0, 0, 0, 0,
	725, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1583, 1578, 223, 223, 559, 0, 0, 0,
	1550, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 2662, 2663,
	0, 0, 0, 0, 2669, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 2683, 2684, 0, 0, 0, 1566, 2186,
	0, 0, 0, 0, 0, 0, 0, 0, 2691, 227,
	227, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 2705, 0, 0, 912, 0, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 0,
	0, 2717, 731, 0, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	0, 0, 1555, 229, 0, 632, 0, 0, 0, 0,
	0, 0, 715, 0, 1137, 729, 730, 716, 229, 229,
	229, 0, 0, 723, 0, 229, 717, 0, 0, 0,
	229, 1587, 0, 0, 1597, 0, 0, 0, 0, 0,
	1577, 1579, 1137, 0, 0, 0, 2289, 2289, 2289, 0,
	0, 0, 0, 0, 0, 1593, 0, 1594, 0, 718,
	724, 1689, 0, 1137, 1564, 1565, 0, 0, 719, 2808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 720, 0, 0, 0, 0, 727, 0, 0, 0,
	0, 1570, 0, 0, 0, 0, 0, 0, 1066, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2901, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1137, 229, 0, 0,
	0, 0, 0, 1571, 0, 1137, 0, 0, 0, 0,
	0, 0, 0, 1547, 1548, 0, 1580, 1581, 1582, 1590,
	1591, 1592, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 1583, 1578, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 0, 229, 1596,
	0, 0, 229, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 0, 229, 0, 229, 0, 229,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1586, 229, 0, 0, 1561,
	1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551,
	1552, 1553, 1554, 1556, 1557, 0, 0, 0, 0, 2726,
	1137, 0, 1137, 2727, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1572, 1573, 1574, 1575, 0, 0,
	1137, 1137, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 1137, 229, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 1137, 1137, 1137, 0, 0, 0,
	0, 0, 0, 1587, 0, 229, 1597, 0, 0, 0,
	0, 0, 1577, 1579, 229, 229, 0, 229, 0, 229,
	0, 229, 0, 229, 0, 2093, 0, 1593, 0, 1594,
	0, 3068, 3069, 0, 0, 3072, 1564, 1565, 0, 3075,
	0, 0, 0, 0, 0, 0, 0, 0, 3079, 0,
	0, 0, 1585, 0, 229, 0, 0, 3086, 0, 0,
	2808, 0, 0, 1570, 0, 1128, 0, 0, 0, 0,
	0, 1236, 0, 0, 0, 3098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 3121, 3122, 0, 3123, 3124,
	3125, 0, 1137, 0, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3131, 0, 0, 0,
	3133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 227, 227, 0, 0, 227, 227, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	647, 3161, 3162, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 1366, 1366, 1366, 0, 0, 3173,
	0, 0, 0, 0, 0, 1571, 0, 0, 0, 0,
	0, 1403, 1404, 0, 3182, 0, 0, 0, 0, 1137,
	0, 0, 0, 0, 0, 227, 227, 0, 0, 1588,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	227, 227, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 3212, 0, 0, 0, 0, 227, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 3221, 3224, 1137, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 3244, 0, 1137, 0, 0, 1586, 0, 0,
	0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558,
	1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 0, 0,
	0, 2182, 0, 0, 0, 2183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 934, 100, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 1137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 3315, 1137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	229, 1137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3354, 3355, 1137, 0, 0, 229, 3359, 3360, 0,
	0, 0, 3363, 3364, 0, 0, 0, 0, 0, 3368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3372, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 3377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 893, 0, 0, 229,
	0, 0, 229, 0, 229, 0, 229, 1736, 0, 1236,
	0, 0, 0, 229, 229, 1137, 1137, 0, 1137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1053,
	1137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 0, 1066, 0, 0, 229, 227, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 1711, 227, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 647, 0, 3224, 0, 0, 0,
	0, 0, 229, 229, 229, 229, 0, 229, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 981,
	3224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3558, 3559, 3560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1916, 0, 0,
	2093, 1923, 0, 3569, 3570, 0, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3578, 0, 0, 1342, 0, 1942, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 3224, 1236, 227, 0, 0, 0,
	0, 227, 3616, 0, 0, 0, 0, 0, 0, 0,
	0, 3623, 0, 0, 898, 0, 0, 0, 0, 227,
	3630, 227, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 0, 0, 1995, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 1137, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 1070, 1137, 0, 2022, 0, 2024, 0, 2026, 0,
	2028, 0, 2029, 3224, 3224, 0, 0, 0, 0, 0,
	1137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 227,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 3726, 647, 227,
	3729, 227, 0, 227, 0, 227, 0, 227, 0, 0,
	0, 0, 0, 229, 229, 229, 0, 0, 0, 3224,
	0, 0, 229, 100, 0, 100, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 227, 0,
	0, 0, 0, 0, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 1137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1137, 3224, 0, 0, 3224,
	0, 1137, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 1137,
	229, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	1137, 0, 893, 100, 100, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 100, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 100,
	0, 0, 0, 0, 0, 229, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 0, 0, 0, 0,
	0, 0, 1137, 1137, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3869, 3869, 3869, 0, 0,
	2345, 0, 0, 0, 1137, 0, 229, 1137, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 874, 0, 227, 0, 3869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1137, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1137, 0, 0, 0, 0,
	1617, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3224, 0, 3224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 1070, 0, 0, 0, 1070, 0,
	0, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3869, 3996, 0, 0, 227, 0, 0, 0,
	4000, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 1070, 1923, 0, 0, 0, 0, 0,
	227, 2516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 1070, 0, 0,
	0, 0, 1709, 0, 1712, 1137, 100, 0, 2547, 0,
	647, 1366, 0, 1366, 0, 1366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 227,
	0, 0, 0, 0, 1070, 0, 227, 0, 1070, 2594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 0, 2602, 0, 2605, 0, 0,
	0, 0, 0, 227, 0, 0, 227, 0, 227, 0,
	227, 0, 0, 0, 0, 0, 0, 227, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 2626, 1236, 2628, 1236, 0, 2631, 0, 0, 1070,
	0, 0, 0, 0, 227, 0, 0, 1137, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	227, 0, 227, 229, 0, 0, 0, 0, 0, 1366,
	0, 229, 0, 0, 0, 0, 0, 2659, 229, 0,
	0, 0, 0, 0, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 227, 227, 227,
	0, 227, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1137, 1137, 1137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1137, 0, 227, 0, 0, 229, 1137, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 0, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 0, 893, 0, 893, 0, 0,
	1137, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 1070, 0, 1070, 0, 0, 1137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 671, 0, 0, 672, 0, 0, 0, 0,
	693, 0, 0, 0, 633, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 1137, 229, 229, 0, 1066, 1137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	1070, 0, 0, 1066, 0, 1137, 1137, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2876, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	692, 1137, 229, 1711, 0, 0, 1137, 0, 0, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2914, 2916, 2516, 0, 0, 874, 0, 0,
	874, 874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1137, 639, 673,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 1137, 0, 0,
	0, 0, 677, 0, 0, 2160, 0, 227, 227, 227,
	0, 0, 0, 0, 0, 2972, 1711, 0, 0, 2976,
	0, 893, 0, 1070, 0, 0, 0, 0, 0, 227,
	1617, 0, 1070, 632, 1617, 0, 0, 0, 1137, 0,
	0, 0, 0, 663, 0, 685, 0, 0, 0, 0,
	0, 1137, 0, 0, 678, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 1236, 1236, 0, 0, 0, 0,
	0, 0, 647, 683, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 227, 0, 0, 679, 0, 3030,
	696, 0, 695, 0, 0, 0, 680, 0, 0, 1137,
	0, 0, 0, 0, 0, 0, 1053, 0, 1066, 681,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 697,
	0, 694, 1712, 0, 0, 0, 0, 634, 0, 227,
	227, 0, 0, 0, 0, 3054, 0, 1236, 0, 0,
	0, 0, 0, 0, 1137, 0, 0, 1137, 0, 0,
	0, 0, 0, 100, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1070, 0, 1070,
	3066, 1070, 0, 0, 0, 0, 229, 229, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 1070, 1070, 0,
	0, 0, 0, 0, 1547, 1548, 0, 0, 1070, 0,
	227, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 1070, 1070, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 1569, 1137, 0, 0, 0, 0, 0,
	0, 1566, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 1137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1137, 1137, 100, 0, 0, 100, 0,
	100, 0, 0, 0, 0, 2668, 0, 1765, 1765, 1070,
	1137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 1573, 1574, 1575, 0,
	0, 0, 0, 0, 0, 1555, 0, 0, 0, 100,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 100, 1577, 1579, 0, 1066, 1066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 1564, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 1548, 0,
	1580, 1581, 1582, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 0, 0, 0, 0, 1578,
	0, 0, 100, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 2516, 0, 1070, 1549, 0, 0, 0,
	0, 0, 3285, 0, 1070, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 3297, 0, 0,
	0, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 1576, 0, 0, 1134,
	0, 0, 1251, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 1571, 227, 0, 2160,
	0, 0, 0, 0, 0, 227, 3339, 0, 1572, 1573,
	1574, 1575, 227, 0, 1251, 0, 1070, 0, 1555, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 1070, 1587, 0, 0,
	1597, 0, 0, 0, 0, 0, 1577, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 1765, 0, 0, 0, 0, 0, 1251,
	1564, 1565, 0, 0, 0, 1251, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 1585, 0, 1070, 0,
	0, 0, 0, 1251, 0, 0, 0, 1570, 0, 0,
	1070, 0, 0, 0, 0, 0, 1567, 1563, 0, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 1070, 0, 1070, 0, 0, 0, 1576,
	0, 0, 1066, 3459, 0, 0, 0, 1070, 0, 0,
	1066, 0, 0, 0, 2516, 0, 0, 0, 0, 1571,
	0, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2516, 0, 0, 0, 0, 1135,
	0, 3520, 0, 1135, 0, 0, 1252, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	227, 100, 100, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 100, 0, 0, 100, 0, 227,
	0, 0, 1252, 0, 0, 0, 227, 0, 0, 0,
	0, 1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567,
	1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 1252,
	0, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 1053,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 3598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	100, 0, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 1252, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 1548,
	1251, 1580, 1581, 1582, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 1583,
	1578, 1134, 0, 0, 0, 0, 0, 1550, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 1548, 0, 0, 0, 1549, 0, 0,
	0, 0, 0, 0, 0, 3704, 1236, 1569, 0, 0,
	0, 1070, 1070, 0, 1578, 1566, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1070, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 1070, 0, 0, 1070,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 1566,
	227, 227, 0, 1765, 0, 0, 0, 1070, 0, 1572,
	1573, 1574, 1575, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2661, 1765, 0, 0, 0, 1587, 3772,
	0, 1597, 0, 0, 0, 0, 0, 1577, 1579, 0,
	0, 0, 0, 1572, 1573, 1574, 1575, 0, 0, 100,
	0, 0, 1593, 1555, 1594, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 0, 227, 0, 1053, 1053, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 1070, 0, 0, 0, 0, 0, 0, 1570, 0,
	1070, 1577, 1579, 0, 227, 0, 0, 0, 0, 0,
	3815, 0, 1070, 0, 0, 0, 1135, 0, 1070, 0,
	0, 0, 0, 1595, 0, 1564, 1565, 0, 0, 3839,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	1584, 0, 0, 0, 1252, 0, 3851, 1070, 0, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 1251, 0,
	1251, 1070, 1251, 0, 0, 1135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 1251, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	1576, 0, 0, 0, 227, 0, 0, 0, 0, 1070,
	1070, 0, 1251, 1251, 1251, 0, 0, 0, 0, 0,
	1571, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 1070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 1765, 100,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 1070, 1561, 1562, 1568, 1589,
	1567, 1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554,
	1556, 1557, 1070, 0, 0, 0, 0, 0, 0, 0,
	3382, 0, 1765, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 1765, 0, 1567, 1563, 0, 1560, 1558, 1559,
	1551, 1552, 1553, 1554, 1556, 1557, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 1070,
	1070, 0, 1252, 1053, 1252, 0, 1252, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 1252, 0, 0, 1134, 0, 0, 0,
	0, 0, 1070, 1252, 0, 0, 1547, 1548, 0, 1580,
	1581, 1582, 1590, 1591, 1592, 0, 1252, 1252, 1252, 0,
	0, 0, 1134, 0, 0, 0, 0, 1583, 1578, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 0, 100,
	0, 0, 0, 1566, 0, 0, 0, 1251, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 1070, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 1135, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1572, 1573, 1574,
	1575, 1070, 0, 0, 0, 0, 0, 1555, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 1070, 1070, 1070, 1587, 0, 0, 1597,
	0, 0, 0, 0, 0, 1577, 1579, 0, 0, 1070,
	0, 0, 0, 0, 0, 1070, 0, 0, 0, 0,
	1593, 1135, 1594, 0, 0, 0, 0, 0, 0, 1564,
	1565, 0, 0, 0, 0, 0, 0, 1070, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 1570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 1251, 0, 1251, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 1251, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2160, 0, 0, 1070, 0, 0, 1576, 0,
	0, 0, 0, 1070, 0, 0, 0, 1070, 0, 1070,
	0, 0, 0, 0, 0, 0, 1070, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 1070, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 1070, 0, 1252, 0, 0, 0, 0,
	1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563,
	0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 3084, 0,
	0, 0, 1547, 1548, 1070, 1580, 1581, 1582, 1590, 1591,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 1578, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 1070, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 1252, 0,
	1252, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 1549, 1252, 0, 0, 100, 0, 0, 100, 0,
	0, 1569, 0, 0, 0, 1070, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 0, 0, 0,
	1134, 0, 0, 1572, 1573, 1574, 1575, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 1587, 0, 1070, 1597, 0, 0, 0, 0,
	0, 1577, 1579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 1594, 0,
	0, 0, 0, 0, 0, 1564, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 0, 0, 0, 1595, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 1584, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 1070, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1070, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	1070, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 0, 0, 1070, 0, 0,
	1251, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 1588, 0,
	0, 0, 0, 0, 1547, 1548, 0, 1580, 1581, 1582,
	1590, 1591, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 1578, 0, 0, 1135,
	0, 0, 1134, 1550, 0, 1134, 0, 0, 0, 0,
	1596, 0, 0, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 1566, 0, 0, 0, 0, 1586, 0, 0, 0,
	1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559,
	1551, 1552, 1553, 1554, 1556, 1557, 1134, 0, 0, 0,
	0, 0, 0, 0, 2729, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 1573, 1574, 1575, 0,
	0, 0, 0, 0, 0, 1555, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 1135, 1587, 0, 0, 1597, 0, 0,
	0, 0, 0, 1577, 1579, 0, 0, 1547, 1548, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 1593, 0,
	1594, 0, 1252, 0, 0, 0, 0, 1564, 1565, 1578,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 1252, 1252, 1569, 0, 0, 1595,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 1135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 1572, 1573,
	1574, 1575, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 0, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 1577, 1579, 0, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 1135, 0, 0,
	1564, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 1251, 1251, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 1134, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 2728, 0, 0, 0,
	0, 0, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 1578, 0, 0, 0, 0, 1576,
	0, 1550, 0, 0, 0, 0, 0, 1135, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 0,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 1573, 1574, 1575, 0, 0, 1252,
	0, 0, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 0, 0, 1134, 0, 1567,
	1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556,
	1557, 0, 1587, 1251, 1251, 1597, 1252, 0, 0, 0,
	0, 1577, 1579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 1594, 1134,
	0, 0, 0, 0, 1251, 1564, 1565, 0, 1252, 1252,
	1252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 1252, 0, 0, 0, 0, 0,
	1135, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 1595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 1548, 0, 1580,
	1581, 1582, 1590, 1591, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 1583, 1578, 0,
	0, 0, 0, 0, 1576, 1550, 0, 0, 0, 1134,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 1588, 0,
	0, 0, 1135, 1566, 1135, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 1572, 1573, 1574,
	1575, 1135, 0, 0, 0, 0, 0, 1555, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 1252, 1252, 0,
	1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559,
	1551, 1552, 1553, 1554, 1556, 1557, 1587, 0, 0, 1597,
	0, 0, 0, 1135, 2725, 1577, 1579, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 1594, 0, 0, 0, 0, 0, 0, 1564,
	1565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 1135,
	0, 0, 0, 0, 0, 0, 1570, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 1251, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563,
	0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 2724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1132, 0, 1252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1252, 1252, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 1138, 243, 244, 1139,
	1140, 1141, 1252, 1142, 506, 1143, 1144, 1145, 1146, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 1147, 253, 254, 255, 256, 257, 1148, 1149,
	0, 258, 511, 512, 513, 1150, 259, 260, 514, 1151,
	1218, 1152, 261, 262, 263, 264, 265, 266, 267, 0,
	1153, 269, 270, 271, 268, 1154, 272, 0, 273, 274,
	275, 1155, 276, 1011, 277, 278, 1156, 1157, 1159, 1158,
	1160, 1161, 1162, 279, 280, 281, 282, 0, 283, 515,
	516, 1163, 287, 284, 285, 1164, 288, 286, 1165, 289,
	290, 1166, 1167, 291, 292, 293, 1168, 294, 295, 1169,
	296, 297, 1170, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 1171, 234,
	1172, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 1173, 315, 1174, 1175, 1012, 316, 317,
	521, 522, 318, 319, 1176, 320, 523, 1177, 524, 321,
	1178, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	1014, 327, 328, 1179, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 1180, 1013, 335, 528, 529,
	1181, 530, 1182, 337, 1015, 531, 1016, 338, 339, 340,
	1017, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	1183, 348, 347, 1184, 349, 532, 1018, 350, 351, 1019,
	1185, 352, 353, 354, 1186, 1187, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1020, 371, 372, 373, 376, 377,
	375, 1021, 374, 1188, 236, 1022, 378, 1189, 533, 379,
	534, 381, 382, 1190, 0, 383, 0, 1191, 1192, 385,
	386, 387, 1193, 1194, 388, 389, 535, 1023, 390, 1024,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 1195, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 1196, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 1197, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 1198, 425, 426, 427, 1025, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 1199, 447, 448, 446, 449, 450, 451,
	1200, 452, 436, 437, 453, 454, 1026, 455, 456, 543,
	0, 457, 1201, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 1202, 469, 470, 0,
	468, 1203, 471, 472, 473, 474, 475, 476, 305, 477,
	1204, 478, 546, 547, 548, 549, 1205, 485, 1206, 479,
	480, 550, 481, 551, 1207, 482, 483, 484, 0, 486,
	487, 1208, 1209, 488, 489, 490, 492, 493, 491, 494,
	1210, 495, 1211, 0, 496, 497, 498, 552, 553, 554,
	1212, 500, 499, 555, 1213, 1214, 1215, 1216, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1132, 0, 0,
	0, 0, 0, 0, 0, 2323, 0, 0, 0, 0,
	0, 0, 0, 2324, 237, 238, 239, 240, 241, 242,
	1138, 243, 244, 1139, 1140, 1141, 0, 1142, 506, 1143,
	1144, 1145, 1146, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 1147, 253, 254, 255,
	256, 257, 1148, 1149, 0, 258, 511, 512, 513, 1150,
	259, 260, 514, 1151, 1218, 1152, 261, 262, 263, 264,
	265, 266, 267, 0, 1153, 269, 270, 271, 268, 1154,
	272, 0, 273, 274, 275, 1155, 276, 1011, 277, 278,
	1156, 1157, 1159, 1158, 1160, 1161, 1162, 279, 280, 281,
	282, 0, 283, 515, 516, 1163, 287, 284, 285, 1164,
	288, 286, 1165, 289, 290, 1166, 1167, 291, 292, 293,
	1168, 294, 295, 1169, 296, 297, 1170, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 1171, 234, 1172, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 1173, 315, 1174,
	1175, 1012, 316, 317, 521, 522, 318, 319, 1176, 320,
	523, 1177, 524, 321, 1178, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1014, 327, 328, 1179, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 1180,
	1013, 335, 528, 529, 1181, 530, 1182, 337, 1015, 531,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 1183, 348, 347, 1184, 349, 532,
	1018, 350, 351, 1019, 1185, 352, 353, 354, 1186, 1187,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 1188, 236, 1022,
	378, 1189, 533, 379, 534, 381, 382, 1190, 0, 383,
	0, 1191, 1192, 385, 386, 387, 1193, 1194, 388, 389,
	535, 1023, 390, 1024, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 1195, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 1196, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 1197,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 1198, 425, 426, 427, 1025,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 1199, 447, 448,
	446, 449, 450, 451, 1200, 452, 436, 437, 453, 454,
	1026, 455, 456, 543, 0, 457, 1201, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	1202, 469, 470, 0, 468, 1203, 471, 472, 473, 474,
	475, 476, 305, 477, 1204, 478, 546, 547, 548, 549,
	1205, 485, 1206, 479, 480, 550, 481, 551, 1207, 482,
	483, 484, 0, 486, 487, 1208, 1209, 488, 489, 490,
	492, 493, 491, 494, 1210, 495, 1211, 0, 496, 497,
	498, 552, 553, 554, 1212, 500, 499, 555, 1213, 1214,
	1215, 1216, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 3092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3094, 237, 238, 239, 240,
	241, 242, 1138, 243, 244, 1139, 1140, 1141, 0, 1142,
	506, 1143, 1144, 1145, 1146, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 1147, 253,
	254, 255, 256, 257, 1148, 1149, 0, 258, 511, 512,
	513, 1150, 259, 260, 514, 1151, 1218, 1152, 261, 262,
	263, 264, 265, 266, 267, 0, 1153, 269, 270, 271,
	268, 1154, 272, 0, 273, 274, 275, 1155, 276, 1011,
	277, 278, 1156, 1157, 1159, 1158, 1160, 1161, 1162, 279,
	280, 281, 282, 0, 283, 515, 516, 1163, 287, 284,
	285, 1164, 288, 286, 1165, 289, 290, 1166, 1167, 291,
	292, 293, 1168, 294, 295, 1169, 296, 297, 1170, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 1171, 234, 1172, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 1173,
	315, 1174, 1175, 1012, 316, 317, 521, 522, 318, 319,
	1176, 320, 523, 1177, 524, 321, 1178, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1014, 327, 328, 1179,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 1180, 1013, 335, 528, 529, 1181, 530, 1182, 337,
	1015, 531, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 1183, 348, 347, 1184,
	349, 532, 1018, 350, 351, 1019, 1185, 352, 353, 354,
	1186, 1187, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 1188,
	236, 1022, 378, 1189, 533, 379, 534, 381, 382, 1190,
	0, 383, 0, 1191, 1192, 385, 386, 387, 1193, 1194,
	388, 389, 535, 1023, 390, 1024, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 1195, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 1196, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 1197, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 1198, 425, 426,
	427, 1025, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 1199,
	447, 448, 446, 449, 450, 451, 1200, 452, 436, 437,
	453, 454, 1026, 455, 456, 543, 0, 457, 1201, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 1202, 469, 470, 0, 468, 1203, 471, 472,
	473, 474, 475, 476, 305, 477, 1204, 478, 546, 547,
	548, 549, 1205, 485, 1206, 479, 480, 550, 481, 551,
	1207, 482, 483, 484, 0, 486, 487, 1208, 1209, 488,
	489, 490, 492, 493, 491, 494, 1210, 495, 1211, 0,
	496, 497, 498, 552, 553, 554, 1212, 500, 499, 555,
	1213, 1214, 1215, 1216, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3410, 237, 238, 239, 240, 241, 242, 1138, 243,
	244, 1139, 1140, 1141, 0, 1142, 506, 1143, 1144, 1145,
	1146, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 1147, 253, 254, 255, 256, 257,
	1148, 1149, 0, 258, 511, 512, 513, 1150, 259, 260,
	514, 1151, 1218, 1152, 261, 262, 263, 264, 265, 266,
	267, 0, 1153, 269, 270, 271, 268, 1154, 272, 0,
	273, 274, 275, 1155, 276, 1011, 277, 278, 1156, 1157,
	1159, 1158, 1160, 1161, 1162, 279, 280, 281, 282, 0,
	283, 515, 516, 1163, 287, 284, 285, 1164, 288, 286,
	1165, 289, 290, 1166, 1167, 291, 292, 293, 1168, 294,
	295, 1169, 296, 297, 1170, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	1171, 234, 1172, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 1173, 315, 1174, 1175, 1012,
	316, 317, 521, 522, 318, 319, 1176, 320, 523, 1177,
	524, 321, 1178, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 1014, 327, 328, 1179, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 1180, 1013, 335,
	528, 529, 1181, 530, 1182, 337, 1015, 531, 1016, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 1183, 348, 347, 1184, 349, 532, 1018, 350,
	351, 1019, 1185, 352, 353, 354, 1186, 1187, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 1188, 236, 1022, 378, 1189,
	533, 379, 534, 381, 382, 1190, 0, 383, 0, 1191,
	1192, 385, 386, 387, 1193, 1194, 388, 389, 535, 1023,
	390, 1024, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 1195, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 1196, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 1197, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 1198, 425, 426, 427, 1025, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 1199, 447, 448, 446, 449,
	450, 451, 1200, 452, 436, 437, 453, 454, 1026, 455,
	456, 543, 0, 457, 1201, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 1202, 469,
	470, 0, 468, 1203, 471, 472, 473, 474, 475, 476,
	305, 477, 1204, 478, 546, 547, 548, 549, 1205, 485,
	1206, 479, 480, 550, 481, 551, 1207, 482, 483, 484,
	0, 486, 487, 1208, 1209, 488, 489, 490, 492, 493,
	491, 494, 1210, 495, 1211, 0, 496, 497, 498, 552,
	553, 554, 1212, 500, 499, 555, 1213, 1214, 1215, 1216,
	501, 502, 556, 503, 504, 505, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3564, 237, 238, 239, 240, 241, 242, 1138,
	243, 244, 1139, 1140, 1141, 0, 1142, 506, 1143, 1144,
	1145, 1146, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 1147, 253, 254, 255, 256,
	257, 1148, 1149, 0, 258, 511, 512, 513, 1150, 259,
	260, 514, 1151, 1218, 1152, 261, 262, 263, 264, 265,
	266, 267, 0, 1153, 269, 270, 271, 268, 1154, 272,
	0, 273, 274, 275, 1155, 276, 1011, 277, 278, 1156,
	1157, 1159, 1158, 1160, 1161, 1162, 279, 280, 281, 282,
	0, 283, 515, 516, 1163, 287, 284, 285, 1164, 288,
	286, 1165, 289, 290, 1166, 1167, 291, 292, 293, 1168,
	294, 295, 1169, 296, 297, 1170, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 1171, 234, 1172, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 1173, 315, 1174, 1175,
	1012, 316, 317, 521, 522, 318, 319, 1176, 320, 523,
	1177, 524, 321, 1178, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 1014, 327, 328, 1179, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 1180, 1013,
	335, 528, 529, 1181, 530, 1182, 337, 1015, 531, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 1183, 348, 347, 1184, 349, 532, 1018,
	350, 351, 1019, 1185, 352, 353, 354, 1186, 1187, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 1188, 236, 1022, 378,
	1189, 533, 379, 534, 381, 382, 1190, 0, 383, 0,
	1191, 1192, 385, 386, 387, 1193, 1194, 388, 389, 535,
	1023, 390, 1024, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 1195, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 1196, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 1197, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 1198, 425, 426, 427, 1025, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 1199, 447, 448, 446,
	449, 450, 451, 1200, 452, 436, 437, 453, 454, 1026,
	455, 456, 543, 0, 457, 1201, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 1202,
	469, 470, 0, 468, 1203, 471, 472, 473, 474, 475,
	476, 305, 477, 1204, 478, 546, 547, 548, 549, 1205,
	485, 1206, 479, 480, 550, 481, 551, 1207, 482, 483,
	484, 0, 486, 487, 1208, 1209, 488, 489, 490, 492,
	493, 491, 494, 1210, 495, 1211, 0, 496, 497, 498,
	552, 553, 554, 1212, 500, 499, 555, 1213, 1214, 1215,
	1216, 501, 502, 556, 503, 504, 505, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3466, 237, 238, 239, 240, 241, 242,
	1138, 243, 244, 1139, 1140, 1141, 0, 1142, 506, 1143,
	1144, 1145, 1146, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 1147, 253, 254, 255,
	256, 257, 1148, 1149, 0, 258, 511, 512, 513, 1150,
	259, 260, 514, 1151, 1218, 1152, 261, 262, 263, 264,
	265, 266, 267, 0, 1153, 269, 270, 271, 268, 1154,
	272, 0, 273, 274, 275, 1155, 276, 1011, 277, 278,
	1156, 1157, 1159, 1158, 1160, 1161, 1162, 279, 280, 281,
	282, 0, 283, 515, 516, 1163, 287, 284, 285, 1164,
	288, 286, 1165, 289, 290, 1166, 1167, 291, 292, 293,
	1168, 294, 295, 1169, 296, 297, 1170, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 1171, 234, 1172, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 1173, 315, 1174,
	1175, 1012, 316, 317, 521, 522, 318, 319, 1176, 320,
	523, 1177, 524, 321, 1178, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1014, 327, 328, 1179, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 1180,
	1013, 335, 528, 529, 1181, 530, 1182, 337, 1015, 531,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 1183, 348, 347, 1184, 349, 532,
	1018, 350, 351, 1019, 1185, 352, 353, 354, 1186, 1187,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 1188, 236, 1022,
	378, 1189, 533, 379, 534, 381, 382, 1190, 0, 383,
	0, 1191, 1192, 385, 386, 387, 1193, 1194, 388, 389,
	535, 1023, 390, 1024, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 1195, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 1196, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 1197,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 1198, 425, 426, 427, 1025,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 1199, 447, 448,
	446, 449, 450, 451, 1200, 452, 436, 437, 453, 454,
	1026, 455, 456, 543, 0, 457, 1201, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	1202, 469, 470, 0, 468, 1203, 471, 472, 473, 474,
	475, 476, 305, 477, 1204, 478, 546, 547, 548, 549,
	1205, 485, 1206, 479, 480, 550, 481, 551, 1207, 482,
	483, 484, 0, 486, 487, 1208, 1209, 488, 489, 490,
	492, 493, 491, 494, 1210, 495, 1211, 0, 496, 497,
	498, 552, 553, 554, 1212, 500, 499, 555, 1213, 1214,
	1215, 1216, 501, 502, 556, 503, 504, 505, 1132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3340, 237, 238, 239, 240, 241,
	242, 1138, 243, 244, 1139, 1140, 1141, 0, 1142, 506,
	1143, 1144, 1145, 1146, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 1147, 253, 254,
	255, 256, 257, 1148, 1149, 0, 258, 511, 512, 513,
	1150, 259, 260, 514, 1151, 1218, 1152, 261, 262, 263,
	264, 265, 266, 267, 0, 1153, 269, 270, 271, 268,
	1154, 272, 0, 273, 274, 275, 1155, 276, 1011, 277,
	278, 1156, 1157, 1159, 1158, 1160, 1161, 1162, 279, 280,
	281, 282, 0, 283, 515, 516, 1163, 287, 284, 285,
	1164, 288, 286, 1165, 289, 290, 1166, 1167, 291, 292,
	293, 1168, 294, 295, 1169, 296, 297, 1170, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 1171, 234, 1172, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 1173, 315,
	1174, 1175, 1012, 316, 317, 521, 522, 318, 319, 1176,
	320, 523, 1177, 524, 321, 1178, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 1014, 327, 328, 1179, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	1180, 1013, 335, 528, 529, 1181, 530, 1182, 337, 1015,
	531, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 1183, 348, 347, 1184, 349,
	532, 1018, 350, 351, 1019, 1185, 352, 353, 354, 1186,
	1187, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 1188, 236,
	1022, 378, 1189, 533, 379, 534, 381, 382, 1190, 0,
	383, 0, 1191, 1192, 385, 386, 387, 1193, 1194, 388,
	389, 535, 1023, 390, 1024, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 1195, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 1196, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	1197, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 1198, 425, 426, 427,
	1025, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 1199, 447,
	448, 446, 449, 450, 451, 1200, 452, 436, 437, 453,
	454, 1026, 455, 456, 543, 0, 457, 1201, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 1202, 469, 470, 0, 468, 1203, 471, 472, 473,
	474, 475, 476, 305, 477, 1204, 478, 546, 547, 548,
	549, 1205, 485, 1206, 479, 480, 550, 481, 551, 1207,
	482, 483, 484, 0, 486, 487, 1208, 1209, 488, 489,
	490, 492, 493, 491, 494, 1210, 495, 1211, 0, 496,
	497, 498, 552, 553, 554, 1212, 500, 499, 555, 1213,
	1214, 1215, 1216, 501, 502, 556, 503, 504, 505, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3110, 237, 238, 239, 240,
	241, 242, 1138, 243, 244, 1139, 1140, 1141, 0, 1142,
	506, 1143, 1144, 1145, 1146, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 1147, 253,
	254, 255, 256, 257, 1148, 1149, 0, 258, 511, 512,
	513, 1150, 259, 260, 514, 1151, 1218, 1152, 261, 262,
	263, 264, 265, 266, 267, 0, 1153, 269, 270, 271,
	268, 1154, 272, 0, 273, 274, 275, 1155, 276, 1011,
	277, 278, 1156, 1157, 1159, 1158, 1160, 1161, 1162, 279,
	280, 281, 282, 0, 283, 515, 516, 1163, 287, 284,
	285, 1164, 288, 286, 1165, 289, 290, 1166, 1167, 291,
	292, 293, 1168, 294, 295, 1169, 296, 297, 1170, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 1171, 234, 1172, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 1173,
	315, 1174, 1175, 1012, 316, 317, 521, 522, 318, 319,
	1176, 320, 523, 1177, 524, 321, 1178, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1014, 327, 328, 1179,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 1180, 1013, 335, 528, 529, 1181, 530, 1182, 337,
	1015, 531, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 1183, 348, 347, 1184,
	349, 532, 1018, 350, 351, 1019, 1185, 352, 353, 354,
	1186, 1187, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 1188,
	236, 1022, 378, 1189, 533, 379, 534, 381, 382, 1190,
	0, 383, 0, 1191, 1192, 385, 386, 387, 1193, 1194,
	388, 389, 535, 1023, 390, 1024, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 1195, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 1196, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 1197, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 1198, 425, 426,
	427, 1025, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 1199,
	447, 448, 446, 449, 450, 451, 1200, 452, 436, 437,
	453, 454, 1026, 455, 456, 543, 0, 457, 1201, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 1202, 469, 470, 0, 468, 1203, 471, 472,
	473, 474, 475, 476, 305, 477, 1204, 478, 546, 547,
	548, 549, 1205, 485, 1206, 479, 480, 550, 481, 551,
	1207, 482, 483, 484, 0, 486, 487, 1208, 1209, 488,
	489, 490, 492, 493, 491, 494, 1210, 495, 1211, 0,
	496, 497, 498, 552, 553, 554, 1212, 500, 499, 555,
	1213, 1214, 1215, 1216, 501, 502, 556, 503, 504, 505,
	1132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2958, 237, 238, 239,
	240, 241, 242, 1138, 243, 244, 1139, 1140, 1141, 0,
	1142, 506, 1143, 1144, 1145, 1146, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 1147,
	253, 254, 255, 256, 257, 1148, 1149, 0, 258, 511,
	512, 513, 1150, 259, 260, 514, 1151, 1218, 1152, 261,
	262, 263, 264, 265, 266, 267, 0, 1153, 269, 270,
	271, 268, 1154, 272, 0, 273, 274, 275, 1155, 276,
	1011, 277, 278, 1156, 1157, 1159, 1158, 1160, 1161, 1162,
	279, 280, 281, 282, 0, 283, 515, 516, 1163, 287,
	284, 285, 1164, 288, 286, 1165, 289, 290, 1166, 1167,
	291, 292, 293, 1168, 294, 295, 1169, 296, 297, 1170,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 1171, 234, 1172, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	1173, 315, 1174, 1175, 1012, 316, 317, 521, 522, 318,
	319, 1176, 320, 523, 1177, 524, 321, 1178, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1014, 327, 328,
	1179, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 1180, 1013, 335, 528, 529, 1181, 530, 1182,
	337, 1015, 531, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 1183, 348, 347,
	1184, 349, 532, 1018, 350, 351, 1019, 1185, 352, 353,
	354, 1186, 1187, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	1188, 236, 1022, 378, 1189, 533, 379, 534, 381, 382,
	1190, 0, 383, 0, 1191, 1192, 385, 386, 387, 1193,
	1194, 388, 389, 535, 1023, 390, 1024, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 1195, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 1196, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 1197, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 1198, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	1199, 447, 448, 446, 449, 450, 451, 1200, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 1201,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 1202, 469, 470, 0, 468, 1203, 471,
	472, 473, 474, 475, 476, 305, 477, 1204, 478, 546,
	547, 548, 549, 1205, 485, 1206, 479, 480, 550, 481,
	551, 1207, 482, 483, 484, 0, 486, 487, 1208, 1209,
	488, 489, 490, 492, 493, 491, 494, 1210, 495, 1211,
	0, 496, 497, 498, 552, 553, 554, 1212, 500, 499,
	555, 1213, 1214, 1215, 1216, 501, 502, 556, 503, 504,
	505, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2206, 237, 238,
	239, 240, 241, 242, 1138, 243, 244, 1139, 1140, 1141,
	0, 1142, 506, 1143, 1144, 1145, 1146, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	1147, 253, 254, 255, 256, 257, 1148, 1149, 0, 258,
	511, 512, 513, 1150, 259, 260, 514, 1151, 1218, 1152,
	261, 262, 263, 264, 265, 266, 267, 0, 1153, 269,
	270, 271, 268, 1154, 272, 0, 273, 274, 275, 1155,
	276, 1011, 277, 278, 1156, 1157, 1159, 1158, 1160, 1161,
	1162, 279, 280, 281, 282, 0, 283, 515, 516, 1163,
	287, 284, 285, 1164, 288, 286, 1165, 289, 290, 1166,
	1167, 291, 292, 293, 1168, 294, 295, 1169, 296, 297,
	1170, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 1171, 234, 1172, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 1173, 315, 1174, 1175, 1012, 316, 317, 521, 522,
	318, 319, 1176, 320, 523, 1177, 524, 321, 1178, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 1014, 327,
	328, 1179, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 1180, 1013, 335, 528, 529, 1181, 530,
	1182, 337, 1015, 531, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 1183, 348,
	347, 1184, 349, 532, 1018, 350, 351, 1019, 1185, 352,
	353, 354, 1186, 1187, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 1188, 236, 1022, 378, 1189, 533, 379, 534, 381,
	382, 1190, 0, 383, 0, 1191, 1192, 385, 386, 387,
	1193, 1194, 388, 389, 535, 1023, 390, 1024, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 1195,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 1196,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 1197, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 1198,
	425, 426, 427, 1025, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 1199, 447, 448, 446, 449, 450, 451, 1200, 452,
	436, 437, 453, 454, 1026, 455, 456, 543, 0, 457,
	1201, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 1202, 469, 470, 0, 468, 1203,
	471, 472, 473, 474, 475, 476, 305, 477, 1204, 478,
	546, 547, 548, 549, 1205, 485, 1206, 479, 480, 550,
	481, 551, 1207, 482, 483, 484, 0, 486, 487, 1208,
	1209, 488, 489, 490, 492, 493, 491, 494, 1210, 495,
	1211, 0, 496, 497, 498, 552, 553, 554, 1212, 500,
	499, 555, 1213, 1214, 1215, 1216, 501, 502, 556, 503,
	504, 505, 1230, 0, 1132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1896, 0,
	0, 237, 238, 239, 240, 241, 242, 1138, 243, 244,
	1139, 1140, 1141, 0, 1142, 506, 1143, 1144, 1145, 1146,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 1147, 253, 254, 255, 256, 257, 1148,
	1149, 0, 258, 511, 512, 513, 1150, 259, 260, 514,
	1151, 1218, 1152, 261, 262, 263, 264, 265, 266, 267,
	0, 1153, 269, 270, 271, 268, 1154, 272, 0, 273,
	274, 275, 1155, 276, 1011, 277, 278, 1156, 1157, 1159,
	1158, 1160, 1161, 1162, 279, 280, 281, 282, 0, 283,
	515, 516, 1163, 287, 284, 285, 1164, 288, 286, 1165,
	289, 290, 1166, 1167, 291, 292, 293, 1168, 294, 295,
	1169, 296, 297, 1170, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 1171,
	234, 1172, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 1173, 315, 1174, 1175, 1012, 316,
	317, 521, 522, 318, 319, 1176, 320, 523, 1177, 524,
	321, 1178, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 1014, 327, 328, 1179, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 1180, 1013, 335, 528,
	529, 1181, 530, 1182, 337, 1015, 531, 1016, 338, 339,
	340, 1017, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 1183, 348, 347, 1184, 349, 532, 1018, 350, 351,
	1019, 1185, 352, 353, 354, 1186, 1187, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1020, 371, 372, 373, 376,
	377, 375, 1021, 374, 1188, 236, 1022, 378, 1189, 533,
	379, 534, 381, 382, 1190, 0, 383, 0, 1191, 1192,
	385, 386, 387, 1193, 1194, 388, 389, 535, 1023, 390,
	1024, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 1195, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 1196, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 1197, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 1198, 425, 426, 427, 1025, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 1199, 447, 448, 446, 449, 450,
	451, 1200, 452, 436, 437, 453, 454, 1026, 455, 456,
	543, 0, 457, 1201, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 1202, 469, 470,
	0, 468, 1203, 471, 472, 473, 474, 475, 476, 305,
	477, 1204, 478, 546, 547, 548, 549, 1205, 485, 1206,
	479, 480, 550, 481, 551, 1207, 482, 483, 484, 0,
	486, 487, 1208, 1209, 488, 489, 490, 492, 493, 491,
	494, 1210, 495, 1211, 0, 496, 497, 498, 552, 553,
	554, 1212, 500, 499, 555, 1213, 1214, 1215, 1216, 501,
	502, 556, 503, 504, 505, 1129, 0, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	1138, 243, 244, 1139, 1140, 1141, 0, 1142, 506, 1143,
	1144, 1145, 1146, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 1147, 253, 254, 255,
	256, 257, 1148, 1149, 0, 258, 511, 512, 513, 1150,
	259, 260, 514, 1151, 1218, 1152, 261, 262, 263, 264,
	265, 266, 267, 0, 1153, 269, 270, 271, 268, 1154,
	272, 0, 273, 274, 275, 1155, 276, 1011, 277, 278,
	1156, 1157, 1159, 1158, 1160, 1161, 1162, 279, 280, 281,
	282, 0, 283, 515, 516, 1163, 287, 284, 285, 1164,
	288, 286, 1165, 289, 290, 1166, 1167, 291, 292, 293,
	1168, 294, 295, 1169, 296, 297, 1170, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 1171, 234, 1172, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 1173, 315, 1174,
	1175, 1012, 316, 317, 521, 522, 318, 319, 1176, 320,
	523, 1177, 524, 321, 1178, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 1014, 327, 328, 1179, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 1180,
	1013, 335, 528, 529, 1181, 530, 1182, 337, 1015, 531,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 1183, 348, 347, 1184, 349, 532,
	1018, 350, 351, 1019, 1185, 352, 353, 354, 1186, 1187,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 1188, 236, 1022,
	378, 1189, 533, 379, 534, 381, 382, 1190, 0, 383,
	0, 1191, 1192, 385, 386, 387, 1193, 1194, 388, 389,
	535, 1023, 390, 1024, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 1195, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 1196, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 1197,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 1198, 425, 426, 427, 1025,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 1199, 447, 448,
	446, 449, 450, 451, 1200, 452, 436, 437, 453, 454,
	1026, 455, 456, 543, 0, 457, 1201, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	1202, 469, 470, 0, 468, 1203, 471, 472, 473, 474,
	475, 476, 305, 477, 1204, 478, 546, 547, 548, 549,
	1205, 485, 1206, 479, 480, 550, 481, 551, 1207, 482,
	483, 484, 0, 486, 487, 1208, 1209, 488, 489, 490,
	492, 493, 491, 494, 1210, 495, 1211, 0, 496, 497,
	498, 552, 553, 554, 1212, 500, 499, 555, 1213, 1214,
	1215, 1216, 501, 502, 556, 503, 504, 505, 1132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 1138, 243, 244, 1139, 1140, 1141, 0, 1142, 506,
	1143, 1144, 1145, 1146, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 1147, 253, 254,
	255, 256, 257, 1148, 1149, 0, 258, 511, 512, 513,
	1150, 259, 260, 514, 1151, 1218, 1152, 261, 262, 263,
	264, 265, 266, 267, 0, 1153, 269, 270, 271, 268,
	1154, 272, 0, 273, 274, 275, 1155, 276, 1011, 277,
	278, 1156, 1157, 1159, 1158, 1160, 1161, 1162, 279, 280,
	281, 282, 0, 283, 515, 516, 1163, 287, 284, 285,
	1164, 288, 286, 1165, 289, 290, 1166, 1167, 291, 292,
	293, 1168, 294, 295, 1169, 296, 297, 1170, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 1171, 234, 1172, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 1173, 315,
	1174, 1175, 1012, 316, 317, 521, 522, 318, 319, 1176,
	320, 523, 1177, 524, 321, 1178, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 1014, 327, 328, 1179, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	1180, 1013, 335, 528, 529, 1181, 530, 1182, 337, 1015,
	531, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 1183, 348, 347, 1184, 349,
	532, 1018, 350, 351, 1019, 1185, 352, 353, 354, 1186,
	1187, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 1188, 236,
	1022, 378, 1189, 533, 379, 534, 381, 382, 1190, 0,
	383, 0, 1191, 1192, 385, 386, 387, 1193, 1194, 388,
	389, 535, 1023, 390, 1024, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 1195, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 1196, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	1197, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 1198, 425, 426, 427,
	1025, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 1199, 447,
	448, 446, 449, 450, 451, 1200, 452, 436, 437, 453,
	454, 1026, 455, 456, 543, 0, 457, 1201, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 1202, 469, 470, 0, 468, 1203, 471, 472, 473,
	474, 475, 476, 305, 477, 1204, 478, 546, 547, 548,
	549, 1205, 485, 1206, 479, 480, 550, 481, 551, 1207,
	482, 483, 484, 0, 486, 487, 1208, 1209, 488, 489,
	490, 492, 493, 491, 494, 1210, 495, 1211, 0, 496,
	497, 498, 552, 553, 554, 1212, 500, 499, 555, 1213,
	1214, 1215, 1216, 501, 502, 556, 503, 504, 505, 2181,
	0, 948, 920, 921, 922, 918, 919, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 2178, 243, 244, 0, 0, 0,
	0, 0, 972, 936, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 985, 0, 992, 252, 991,
	0, 253, 254, 255, 256, 257, 938, 971, 905, 258,
	1030, 1031, 513, 0, 259, 260, 978, 0, 959, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1011, 277, 278, 962, 960, 961, 968, 964, 963,
	967, 279, 280, 281, 282, 995, 283, 989, 988, 909,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 2179,
	0, 291, 980, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 915, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1002, 1003, 927, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 987, 0, 0, 0,
	314, 0, 315, 0, 0, 1012, 316, 317, 1000, 1001,
	318, 319, 0, 320, 1009, 0, 937, 321, 0, 322,
	323, 324, 325, 326, 973, 974, 977, 380, 1014, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1013, 335, 982, 983, 0, 943,
	0, 337, 1015, 975, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1010, 1018, 350, 351, 1019, 0, 352,
	353, 354, 966, 965, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 906, 236, 1022, 378, 928, 976, 379, 990, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1023, 390, 1024, 1004, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1005, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 986,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1025, 428, 429, 430, 431, 916, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 969, 452,
	436, 437, 453, 454, 1026, 455, 456, 984, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1029, 463,
	464, 465, 466, 1006, 0, 469, 470, 904, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	996, 997, 998, 999, 0, 485, 0, 479, 480, 1007,
	481, 1008, 926, 482, 483, 484, 0, 486, 487, 0,
	910, 488, 489, 490, 492, 493, 491, 494, 970, 495,
	0, 0, 496, 497, 498, 552, 993, 1028, 2177, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 907, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 0, 0, 901, 902, 2180, 0,
	0, 0, 0, 0, 0, 932, 2176, 0, 894, 930,
	948, 920, 921, 922, 918, 919, 931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 972, 936, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 985, 0, 992, 252, 991, 0,
	253, 254, 255, 256, 257, 938, 971, 905, 258, 1030,
	1031, 513, 0, 259, 260, 978, 0, 959, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 962, 960, 961, 968, 964, 963, 967,
	279, 280, 281, 282, 995, 283, 989, 988, 909, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 980, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 915, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1002, 1003, 927, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 987, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 1000, 1001, 318,
	319, 0, 320, 1009, 0, 937, 321, 0, 322, 323,
	324, 325, 326, 973, 974, 977, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1013, 335, 982, 983, 0, 943, 0,
	337, 1015, 975, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1010, 1018, 350, 351, 1019, 0, 352, 353,
	354, 966, 965, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	906, 236, 1022, 378, 928, 976, 379, 990, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 1004, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1005, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 986, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 916, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	199, 447, 448, 446, 449, 450, 451, 969, 452, 436,
	437, 453, 454, 1026, 455, 456, 984, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1029, 463, 464,
	465, 466, 1006, 0, 469, 470, 904, 468, 201, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 996,
	997, 998, 999, 0, 485, 0, 479, 480, 1007, 481,
	1008, 926, 482, 483, 484, 0, 486, 487, 0, 910,
	488, 489, 490, 492, 493, 491, 494, 970, 495, 0,
	0, 496, 497, 498, 1395, 993, 1028, 0, 500, 499,
	555, 0, 0, 0, 193, 501, 502, 556, 503, 504,
	505, 907, 194, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 901, 902, 948, 920, 921,
	922, 918, 919, 931, 1622, 1620, 0, 0, 930, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 972, 936,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 985, 0, 992, 252, 991, 0, 253, 254, 255,
	256, 257, 938, 971, 905, 258, 1030, 1031, 513, 0,
	259, 260, 978, 0, 959, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1011, 277, 278,
	962, 960, 961, 968, 964, 963, 967, 279, 280, 281,
	282, 995, 283, 989, 988, 909, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 980, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 915,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1002, 1003, 927, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 987, 0, 0, 0, 314, 0, 315, 0,
	0, 1012, 316, 317, 1000, 1001, 318, 319, 0, 320,
	1009, 0, 937, 321, 0, 322, 323, 324, 325, 326,
	973, 974, 977, 380, 1014, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1013, 335, 982, 983, 0, 943, 0, 337, 1015, 975,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1010,
	1018, 350, 351, 1019, 0, 352, 353, 354, 966, 965,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 906, 236, 1022,
	378, 928, 976, 379, 990, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1023, 390, 1024, 1004, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1005, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 986, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1025,
	428, 429, 430, 431, 916, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 199, 447, 448,
	446, 449, 450, 451, 969, 452, 436, 437, 453, 454,
	1026, 455, 456, 984, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1029, 463, 464, 465, 466, 1006,
	0, 469, 470, 904, 468, 201, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 996, 997, 998, 999,
	0, 485, 0, 479, 480, 1007, 481, 1008, 926, 482,
	483, 484, 0, 486, 487, 0, 910, 488, 489, 490,
	492, 493, 491, 494, 970, 495, 0, 0, 496, 497,
	498, 1395, 993, 1028, 0, 500, 499, 555, 0, 0,
	0, 193, 501, 502, 556, 503, 504, 505, 907, 194,
	0, 0, 0, 0, 0, 903, 0, 0, 0, 0,
	0, 0, 901, 902, 948, 920, 921, 922, 918, 919,
	931, 1622, 2681, 0, 0, 930, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 972, 936, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 985, 0,
	992, 252, 991, 0, 253, 254, 255, 256, 257, 938,
	971, 905, 258, 1030, 1031, 513, 0, 259, 260, 978,
	0, 959, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1011, 277, 278, 962, 960, 961,
	968, 964, 963, 967, 279, 280, 281, 282, 995, 283,
	989, 988, 909, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 980, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 915, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1002, 1003, 927,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 987,
	0, 0, 0, 314, 0, 315, 0, 0, 1012, 316,
	317, 1000, 1001, 318, 319, 0, 320, 1009, 0, 937,
	321, 0, 322, 323, 324, 325, 326, 973, 974, 977,
	380, 1014, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1013, 335, 982,
	983, 0, 943, 0, 337, 1015, 975, 1016, 338, 339,
	340, 1017, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1010, 1018, 350, 351,
	1019, 0, 352, 353, 354, 966, 965, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1020, 371, 372, 373, 376,
	377, 375, 1021, 374, 906, 236, 1022, 378, 928, 976,
	379, 990, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1023, 390,
	1024, 1004, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1005, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 986, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1025, 428, 429, 430,
	431, 916, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 199, 447, 448, 446, 449, 450,
	451, 969, 452, 436, 437, 453, 454, 1026, 455, 456,
	984, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1029, 463, 464, 465, 466, 1006, 0, 469, 470,
	904, 468, 201, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 996, 997, 998, 999, 0, 485, 0,
	479, 480, 1007, 481, 1008, 926, 482, 483, 484, 0,
	486, 487, 0, 910, 488, 489, 490, 492, 493, 491,
	494, 970, 495, 0, 0, 496, 497, 498, 1395, 993,
	1028, 0, 500, 499, 555, 0, 0, 0, 193, 501,
	502, 556, 503, 504, 505, 907, 194, 0, 0, 0,
	0, 0, 903, 0, 0, 0, 0, 0, 0, 901,
	902, 948, 920, 921, 922, 918, 919, 931, 1622, 1620,
	0, 0, 930, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 972, 936, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 985, 0, 992, 252, 991,
	2285, 253, 254, 255, 256, 257, 938, 971, 905, 258,
	1030, 1031, 513, 0, 259, 260, 978, 0, 959, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1011, 277, 278, 962, 960, 961, 968, 964, 963,
	967, 279, 280, 281, 282, 995, 283, 989, 988, 909,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 980, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 915, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1002, 1003, 927, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 987, 0, 0, 0,
	314, 0, 315, 0, 2290, 1012, 316, 317, 1000, 1001,
	318, 319, 0, 320, 1009, 0, 937, 321, 0, 322,
	323, 324, 325, 326, 973, 974, 977, 380, 1014, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1013, 335, 982, 983, 0, 943,
	0, 337, 1015, 975, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 2286, 349, 1010, 1018, 350, 351, 1019, 0, 352,
	353, 354, 966, 965, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 906, 236, 1022, 378, 928, 976, 379, 990, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1023, 390, 1024, 1004, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1005, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 986,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1025, 428, 429, 430, 431, 916, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 969, 452,
	436, 437, 453, 454, 1026, 455, 456, 984, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1029, 463,
	464, 465, 466, 1006, 0, 469, 470, 904, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	996, 997, 998, 999, 0, 485, 2287, 479, 480, 1007,
	481, 1008, 926, 482, 483, 484, 0, 486, 487, 0,
	910, 488, 489, 490, 492, 493, 491, 494, 970, 495,
	0, 0, 496, 497, 498, 552, 993, 1028, 0, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 907, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 0, 0, 901, 902, 0, 0,
	0, 0, 0, 0, 0, 932, 0, 0, 2226, 930,
	948, 920, 921, 922, 918, 919, 931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 972, 936, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 985, 0, 992, 252, 991, 0,
	253, 254, 255, 256, 257, 938, 971, 905, 258, 1030,
	1031, 513, 0, 259, 260, 978, 0, 959, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 962, 960, 961, 968, 964, 963, 967,
	279, 280, 281, 282, 995, 283, 989, 988, 909, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 980, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 915, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1002, 1003, 927, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 987, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 1000, 1001, 318,
	319, 0, 320, 1009, 0, 937, 321, 0, 322, 323,
	324, 325, 326, 973, 974, 977, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1013, 335, 982, 983, 0, 943, 0,
	337, 1015, 975, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1010, 1018, 350, 351, 1019, 0, 352, 353,
	354, 966, 965, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	906, 236, 1022, 378, 928, 976, 379, 990, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 1004, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1005, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 986, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 916, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 969, 452, 436,
	437, 453, 454, 1026, 455, 456, 984, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1029, 463, 464,
	465, 466, 1006, 0, 469, 470, 904, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 996,
	997, 998, 999, 0, 485, 0, 479, 480, 1007, 481,
	1008, 926, 482, 483, 484, 0, 486, 487, 0, 910,
	488, 489, 490, 492, 493, 491, 494, 970, 495, 0,
	0, 496, 497, 498, 552, 993, 1028, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 907, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 901, 902, 0, 0, 0,
	0, 0, 0, 0, 932, 2224, 0, 2223, 930, 948,
	920, 921, 922, 918, 919, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	972, 936, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 985, 0, 992, 252, 991, 0, 253,
	254, 255, 256, 257, 938, 971, 905, 258, 1030, 1031,
	513, 0, 259, 260, 978, 0, 959, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 962, 960, 961, 968, 964, 963, 967, 279,
	280, 281, 282, 995, 283, 989, 988, 909, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	980, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 915, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1002, 1003, 927, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 987, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 1000, 1001, 318, 319,
	0, 320, 1009, 0, 937, 321, 0, 322, 323, 324,
	325, 326, 973, 974, 977, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1013, 335, 982, 983, 0, 943, 0, 337,
	1015, 975, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1010, 1018, 350, 351, 1019, 0, 352, 353, 354,
	966, 965, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 906,
	236, 1022, 378, 928, 976, 379, 990, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 1004, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1005, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 986, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 916, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 969, 452, 436, 437,
	453, 454, 1026, 455, 456, 984, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1029, 463, 464, 465,
	466, 1006, 0, 469, 470, 904, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 996, 997,
	998, 999, 0, 485, 0, 479, 480, 1007, 481, 1008,
	926, 482, 483, 484, 0, 486, 487, 0, 910, 488,
	489, 490, 492, 493, 491, 494, 970, 495, 0, 0,
	496, 497, 498, 552, 993, 1028, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	907, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 0, 901, 902, 0, 0, 0, 0,
	0, 0, 0, 932, 2221, 0, 2220, 930, 948, 920,
	921, 922, 918, 919, 931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 972,
	936, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 985, 0, 992, 252, 991, 0, 253, 254,
	255, 256, 257, 938, 971, 905, 258, 1030, 1031, 513,
	0, 259, 260, 978, 0, 959, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	278, 962, 960, 961, 968, 964, 963, 967, 279, 280,
	281, 282, 995, 283, 989, 988, 909, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 980,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	915, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1002, 1003, 927, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 987, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 1000, 1001, 318, 319, 0,
	320, 1009, 0, 937, 321, 0, 322, 323, 324, 325,
	326, 973, 974, 977, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1013, 335, 982, 983, 0, 943, 0, 337, 1015,
	975, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1010, 1018, 350, 351, 1019, 0, 352, 353, 354, 966,
	965, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 906, 236,
	1022, 378, 928, 976, 379, 990, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 1004, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1005, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 986, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 916, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 969, 452, 436, 437, 453,
	454, 1026, 455, 456, 984, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1029, 463, 464, 465, 466,
	1006, 0, 469, 470, 904, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 996, 997, 998,
	999, 0, 485, 0, 479, 480, 1007, 481, 1008, 926,
	482, 483, 484, 0, 486, 487, 0, 910, 488, 489,
	490, 492, 493, 491, 494, 970, 495, 0, 0, 496,
	497, 498, 552, 993, 1028, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 907,
	0, 0, 0, 0, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 901, 902, 0, 0, 0, 0, 0,
	0, 0, 932, 2218, 0, 2217, 930, 948, 920, 921,
	922, 918, 919, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 972, 936,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 985, 0, 992, 252, 991, 0, 253, 254, 255,
	256, 257, 938, 971, 905, 258, 1030, 1031, 513, 0,
	259, 260, 978, 0, 959, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1011, 277, 278,
	962, 960, 961, 968, 964, 963, 967, 279, 280, 281,
	282, 995, 283, 989, 988, 909, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 980, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 915,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1002, 1003, 927, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 987, 0, 0, 0, 314, 0, 315, 0,
	0, 1012, 316, 317, 1000, 1001, 318, 319, 0, 320,
	1009, 0, 937, 321, 0, 322, 323, 324, 325, 326,
	973, 974, 977, 380, 1014, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1013, 335, 982, 983, 0, 943, 0, 337, 1015, 975,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1010,
	1018, 350, 351, 1019, 0, 352, 353, 354, 966, 965,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 906, 236, 1022,
	378, 928, 976, 379, 990, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1023, 390, 1024, 1004, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1005, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 986, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1025,
	428, 429, 430, 431, 916, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 969, 452, 436, 437, 453, 454,
	1026, 455, 456, 984, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1029, 463, 464, 465, 466, 1006,
	0, 469, 470, 904, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 996, 997, 998, 999,
	0, 485, 0, 479, 480, 1007, 481, 1008, 926, 482,
	483, 484, 0, 486, 487, 0, 910, 488, 489, 490,
	492, 493, 491, 494, 970, 495, 0, 0, 496, 497,
	498, 552, 993, 1028, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 907, 0,
	0, 0, 0, 0, 0, 903, 0, 0, 0, 0,
	0, 0, 901, 902, 0, 0, 0, 0, 0, 0,
	0, 932, 2215, 0, 1480, 930, 948, 920, 921, 922,
	918, 919, 931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 938, 971, 905, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 283, 989, 988, 909, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 915, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 325, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 906, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 904, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 910, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 1479, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 907, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 901, 902, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 897, 930, 948, 920, 921, 922, 918,
	919, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 972, 936, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 985,
	0, 992, 252, 991, 0, 253, 254, 255, 256, 257,
	938, 971, 905, 258, 1030, 1031, 513, 0, 259, 260,
	978, 0, 959, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1011, 277, 278, 962, 960,
	961, 968, 964, 963, 967, 279, 280, 281, 282, 995,
	283, 989, 988, 909, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 980, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 915, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1002, 1003,
	927, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	987, 0, 0, 0, 314, 0, 315, 0, 0, 1012,
	316, 317, 1000, 1001, 318, 319, 0, 320, 1009, 0,
	937, 321, 0, 322, 323, 324, 325, 326, 973, 974,
	977, 380, 1014, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1013, 335,
	982, 983, 0, 943, 0, 337, 1015, 975, 1016, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1010, 1018, 350,
	351, 1019, 0, 352, 353, 354, 966, 965, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 906, 236, 1022, 378, 928,
	976, 379, 990, 381, 382, 0, 0, 383, 0, 911,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1023,
	390, 1024, 1004, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1005, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 986, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1025, 428, 429,
	430, 431, 916, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 969, 452, 436, 437, 453, 454, 1026, 455,
	456, 984, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1029, 463, 464, 465, 466, 1006, 0, 469,
	470, 904, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 996, 997, 998, 999, 0, 485,
	0, 479, 480, 1007, 481, 1008, 926, 482, 483, 484,
	0, 486, 487, 0, 910, 488, 489, 490, 492, 493,
	491, 494, 970, 495, 0, 0, 496, 497, 498, 552,
	993, 1028, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 907, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 0, 0,
	901, 902, 948, 920, 921, 922, 918, 919, 931, 932,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 972, 936, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 985, 0, 992, 252,
	991, 0, 253, 254, 255, 256, 257, 938, 971, 905,
	258, 1030, 1031, 513, 0, 259, 260, 978, 0, 959,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 3827, 275,
	0, 276, 1011, 277, 278, 962, 960, 961, 968, 964,
	963, 967, 279, 280, 281, 282, 995, 283, 989, 988,
	909, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 980, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 915, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1002, 1003, 927, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 987, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 1000,
	1001, 318, 319, 0, 320, 1009, 0, 937, 321, 0,
	322, 323, 324, 325, 326, 973, 974, 977, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1013, 335, 982, 983, 0,
	943, 0, 337, 1015, 975, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1010, 1018, 350, 351, 1019, 0,
	352, 353, 354, 966, 965, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 906, 236, 1022, 378, 928, 976, 379, 990,
	381, 382, 0, 0, 383, 0, 911, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 1004,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1005, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	986, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 916,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 969,
	452, 436, 437, 453, 454, 1026, 455, 456, 984, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1029,
	463, 464, 465, 466, 1006, 0, 469, 470, 904, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 996, 997, 998, 999, 0, 485, 0, 479, 480,
	1007, 481, 1008, 926, 482, 483, 484, 0, 486, 487,
	0, 910, 488, 489, 490, 492, 493, 491, 494, 970,
	495, 0, 0, 496, 497, 498, 552, 993, 1028, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 907, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 901, 902, 948,
	920, 921, 922, 918, 919, 931, 932, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	972, 936, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 985, 0, 992, 252, 991, 0, 253,
	254, 255, 256, 257, 938, 971, 905, 258, 1030, 1031,
	513, 0, 259, 260, 978, 0, 959, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 962, 960, 961, 968, 964, 963, 967, 279,
	280, 281, 282, 995, 283, 989, 988, 909, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	980, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 915, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1002, 1003, 927, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 987, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 1000, 1001, 318, 319,
	0, 320, 1009, 0, 937, 321, 0, 322, 323, 324,
	325, 326, 973, 974, 977, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 2095, 333, 334,
	336, 0, 1013, 335, 982, 983, 0, 943, 0, 337,
	1015, 975, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1010, 1018, 350, 351, 1019, 0, 352, 353, 354,
	966, 965, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 906,
	236, 1022, 378, 928, 976, 379, 990, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 1004, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1005, 402, 540, 403, 404, 2094, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 986, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 916, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 969, 452, 436, 437,
	453, 454, 1026, 455, 456, 984, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1029, 463, 464, 465,
	466, 1006, 0, 469, 470, 904, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 996, 997,
	998, 999, 0, 485, 0, 479, 480, 1007, 481, 1008,
	926, 482, 483, 484, 0, 486, 487, 0, 910, 488,
	489, 490, 492, 493, 491, 494, 970, 495, 0, 0,
	496, 497, 498, 552, 993, 1028, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	907, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 0, 901, 902, 948, 920, 921, 922,
	918, 919, 931, 932, 0, 0, 0, 930, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 938, 971, 905, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 3626, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 283, 989, 988, 909, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 915, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 325, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 906, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	911, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 904, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 910, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 907, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 901, 902, 948, 920, 921, 922, 918, 919, 931,
	932, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 972, 936, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 985, 0, 992,
	252, 991, 0, 253, 254, 255, 256, 257, 938, 971,
	905, 258, 1030, 1031, 513, 0, 259, 260, 978, 0,
	959, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1011, 277, 278, 962, 960, 961, 968,
	964, 963, 967, 279, 280, 281, 282, 995, 283, 989,
	988, 909, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 980, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 915, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1002, 1003, 927, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 987, 0,
	0, 0, 314, 0, 315, 0, 0, 1012, 316, 317,
	1000, 1001, 318, 319, 0, 320, 1009, 0, 937, 321,
	0, 322, 323, 324, 325, 326, 973, 974, 977, 380,
	1014, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1013, 335, 982, 983,
	0, 943, 0, 337, 1015, 975, 1016, 338, 339, 340,
	1017, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1010, 1018, 350, 351, 1019,
	0, 352, 353, 354, 966, 965, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1020, 371, 372, 373, 376, 377,
	375, 1021, 374, 906, 3309, 1022, 378, 928, 976, 379,
	990, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1023, 390, 1024,
	1004, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1005, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 986, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1025, 428, 429, 430, 431,
	916, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	969, 452, 436, 437, 453, 454, 1026, 455, 456, 984,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1029, 463, 464, 465, 466, 1006, 0, 469, 470, 904,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 996, 997, 998, 999, 0, 485, 0, 479,
	480, 1007, 481, 1008, 926, 482, 483, 484, 0, 486,
	487, 0, 910, 488, 489, 490, 492, 493, 491, 494,
	970, 495, 0, 0, 496, 497, 498, 552, 993, 1028,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 907, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 0, 0, 0, 0, 901, 902,
	1690, 0, 0, 0, 0, 0, 0, 932, 0, 0,
	0, 930, 948, 920, 921, 922, 918, 919, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 972, 936, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 985, 0, 992, 252,
	991, 0, 253, 254, 255, 256, 257, 938, 971, 905,
	258, 1030, 1031, 513, 0, 259, 260, 978, 0, 959,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 962, 960, 961, 968, 964,
	963, 967, 279, 280, 281, 282, 995, 283, 989, 988,
	909, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 980, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 915, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1002, 1003, 927, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 987, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 1000,
	1001, 318, 319, 0, 320, 1009, 0, 937, 321, 0,
	322, 323, 324, 325, 326, 973, 974, 977, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1013, 335, 982, 983, 0,
	943, 0, 337, 1015, 975, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1010, 1018, 350, 351, 1019, 0,
	352, 353, 354, 966, 965, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 906, 236, 1022, 378, 928, 976, 379, 990,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 1004,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1005, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	986, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 916,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 969,
	452, 436, 437, 453, 454, 1026, 455, 456, 984, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1029,
	463, 464, 465, 466, 1006, 0, 469, 470, 904, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 996, 997, 998, 999, 0, 485, 0, 479, 480,
	1007, 481, 1008, 926, 482, 483, 484, 0, 486, 487,
	0, 910, 488, 489, 490, 492, 493, 491, 494, 970,
	495, 0, 0, 496, 497, 498, 552, 993, 1028, 3088,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 907, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 901, 902, 948,
	920, 921, 922, 918, 919, 931, 932, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	972, 936, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 985, 0, 992, 252, 991, 0, 253,
	254, 255, 256, 257, 938, 971, 905, 258, 1030, 1031,
	513, 0, 259, 260, 978, 0, 959, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 962, 960, 961, 968, 964, 963, 967, 279,
	280, 281, 282, 995, 283, 989, 988, 909, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	980, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 915, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1002, 1003, 927, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 987, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 1000, 1001, 318, 319,
	0, 320, 1009, 0, 937, 321, 0, 322, 323, 324,
	325, 326, 973, 974, 977, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1013, 335, 982, 983, 0, 943, 0, 337,
	1015, 975, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1010, 1018, 350, 351, 1019, 0, 352, 353, 354,
	966, 965, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 906,
	236, 1022, 378, 928, 976, 379, 990, 381, 382, 0,
	0, 383, 0, 911, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 1004, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1005, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 986, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 916, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 969, 452, 436, 437,
	453, 454, 1026, 455, 456, 984, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1029, 463, 464, 465,
	466, 1006, 0, 469, 470, 904, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 996, 997,
	998, 999, 0, 485, 0, 479, 480, 1007, 481, 1008,
	926, 482, 483, 484, 0, 486, 487, 0, 910, 488,
	489, 490, 492, 493, 491, 494, 970, 495, 0, 0,
	496, 497, 498, 552, 993, 1028, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	907, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 0, 901, 902, 948, 920, 921, 922,
	918, 919, 931, 932, 0, 0, 0, 930, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 938, 971, 905, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 283, 989, 988, 909, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 915, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 325, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 906, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 904, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 910, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 907, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 901, 902, 1690, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 930, 948, 920, 921, 922, 918,
	919, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 972, 936, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 985,
	0, 992, 252, 991, 0, 253, 254, 255, 256, 257,
	938, 971, 905, 258, 1030, 1031, 513, 0, 259, 260,
	978, 0, 959, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1011, 277, 278, 962, 960,
	961, 968, 964, 963, 967, 279, 280, 281, 282, 995,
	283, 989, 988, 909, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 980, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 915, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1002, 1003,
	927, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	987, 0, 0, 0, 314, 0, 315, 0, 2290, 1012,
	316, 317, 1000, 1001, 318, 319, 0, 320, 1009, 0,
	937, 321, 0, 322, 323, 324, 325, 326, 973, 974,
	977, 380, 1014, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1013, 335,
	982, 983, 0, 943, 0, 337, 1015, 975, 1016, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1010, 1018, 350,
	351, 1019, 0, 352, 353, 354, 966, 965, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 906, 236, 1022, 378, 928,
	976, 379, 990, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1023,
	390, 1024, 1004, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1005, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 986, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1025, 428, 429,
	430, 431, 916, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 969, 452, 436, 437, 453, 454, 1026, 455,
	456, 984, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1029, 463, 464, 465, 466, 1006, 0, 469,
	470, 904, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 996, 997, 998, 999, 0, 485,
	0, 479, 480, 1007, 481, 1008, 926, 482, 483, 484,
	0, 486, 487, 0, 910, 488, 489, 490, 492, 493,
	491, 494, 970, 495, 0, 0, 496, 497, 498, 552,
	993, 1028, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 907, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 0, 0,
	901, 902, 948, 920, 921, 922, 918, 919, 931, 932,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 972, 936, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 985, 0, 992, 252,
	991, 0, 253, 254, 255, 256, 257, 938, 971, 905,
	258, 1030, 1031, 513, 0, 259, 260, 978, 0, 959,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 962, 960, 961, 968, 964,
	963, 967, 279, 280, 281, 282, 995, 283, 989, 988,
	909, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 980, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 915, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1002, 1003, 927, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 987, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 1000,
	1001, 318, 319, 0, 320, 1009, 0, 937, 321, 0,
	322, 323, 324, 325, 326, 973, 974, 977, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1013, 335, 982, 983, 0,
	943, 0, 337, 1015, 975, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1010, 1018, 350, 351, 1019, 0,
	352, 353, 354, 966, 965, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 906, 236, 1022, 378, 928, 976, 379, 990,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 1004,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1005, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	986, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 916,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 969,
	452, 436, 437, 453, 454, 1026, 455, 456, 984, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1029,
	463, 464, 465, 466, 1006, 0, 469, 470, 904, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 996, 997, 998, 999, 0, 485, 0, 479, 480,
	1007, 481, 1008, 926, 482, 483, 484, 0, 486, 487,
	0, 910, 488, 489, 490, 492, 493, 491, 494, 970,
	495, 0, 0, 496, 497, 498, 552, 993, 1028, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 907, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 901, 902, 0,
	0, 0, 0, 0, 0, 0, 932, 1620, 0, 2295,
	930, 948, 920, 921, 922, 918, 919, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 972, 936, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 985, 0, 992, 252, 991,
	0, 253, 254, 255, 256, 257, 938, 971, 905, 258,
	1030, 1031, 513, 0, 259, 260, 978, 0, 959, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1011, 277, 278, 962, 960, 961, 968, 964, 963,
	967, 279, 280, 281, 282, 995, 283, 989, 988, 909,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 980, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 915, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1002, 1003, 927, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 987, 0, 0, 0,
	314, 0, 315, 0, 0, 1012, 316, 317, 1000, 1001,
	318, 319, 0, 320, 1009, 0, 937, 321, 0, 322,
	323, 324, 325, 326, 973, 974, 977, 380, 1014, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1013, 335, 982, 983, 0, 943,
	0, 337, 1015, 975, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1010, 1018, 350, 351, 1019, 0, 352,
	353, 354, 966, 965, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 906, 236, 1022, 378, 928, 976, 379, 990, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1023, 390, 1024, 1004, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1005, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 986,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1025, 428, 429, 430, 431, 916, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 969, 452,
	436, 437, 453, 454, 1026, 455, 456, 984, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1029, 463,
	464, 465, 466, 1006, 0, 469, 470, 904, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	996, 997, 998, 999, 0, 485, 0, 479, 480, 1007,
	481, 1008, 926, 482, 483, 484, 0, 486, 487, 0,
	910, 488, 489, 490, 492, 493, 491, 494, 970, 495,
	0, 0, 496, 497, 498, 552, 993, 1028, 0, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 907, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 0, 0, 901, 902, 0, 0,
	0, 0, 0, 0, 0, 932, 0, 0, 2293, 930,
	948, 920, 921, 922, 918, 919, 931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 972, 936, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 985, 0, 992, 252, 991, 0,
	253, 254, 255, 256, 257, 938, 971, 905, 258, 1030,
	1031, 513, 0, 259, 260, 978, 0, 959, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 962, 960, 961, 968, 964, 963, 967,
	279, 280, 281, 282, 995, 283, 989, 988, 909, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 980, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 915, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1002, 1003, 927, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 987, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 1000, 1001, 318,
	319, 0, 320, 1009, 0, 937, 321, 0, 322, 323,
	324, 325, 326, 973, 974, 977, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1013, 335, 982, 983, 0, 943, 0,
	337, 1015, 975, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1010, 1018, 350, 351, 1019, 0, 352, 353,
	354, 966, 965, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	906, 236, 1022, 378, 928, 976, 379, 990, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 1004, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1005, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 986, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 916, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 969, 452, 436,
	437, 453, 454, 1026, 455, 456, 984, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1029, 463, 464,
	465, 466, 1006, 0, 469, 470, 904, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 996,
	997, 998, 999, 0, 485, 0, 479, 480, 1007, 481,
	1008, 926, 482, 483, 484, 0, 486, 487, 0, 910,
	488, 489, 490, 492, 493, 491, 494, 970, 495, 0,
	0, 496, 497, 498, 552, 993, 1028, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 907, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 901, 902, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 0, 2281, 930, 948,
	920, 921, 922, 918, 919, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	972, 936, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 985, 0, 992, 252, 991, 0, 253,
	254, 255, 256, 257, 938, 971, 905, 258, 1030, 1031,
	513, 0, 259, 260, 978, 0, 959, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 962, 960, 961, 968, 964, 963, 967, 279,
	280, 281, 282, 995, 283, 989, 988, 909, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	980, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 915, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1002, 1003, 927, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 987, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 1000, 1001, 318, 319,
	0, 320, 1009, 0, 937, 321, 0, 322, 323, 324,
	325, 326, 973, 974, 977, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1013, 335, 982, 983, 0, 943, 0, 337,
	1015, 975, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1010, 1018, 350, 351, 1019, 0, 352, 353, 354,
	966, 965, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 906,
	236, 1022, 378, 928, 976, 379, 990, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 1004, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1005, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 986, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 916, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 969, 452, 436, 437,
	453, 454, 1026, 455, 456, 984, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1029, 463, 464, 465,
	466, 1006, 0, 469, 470, 904, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 996, 997,
	998, 999, 0, 485, 0, 479, 480, 1007, 481, 1008,
	926, 482, 483, 484, 0, 486, 487, 0, 910, 488,
	489, 490, 492, 493, 491, 494, 970, 495, 0, 0,
	496, 497, 498, 552, 993, 1028, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	907, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 0, 901, 902, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 0, 2270, 930, 948, 920,
	921, 922, 918, 919, 931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 972,
	936, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 985, 0, 992, 252, 991, 0, 253, 254,
	255, 256, 257, 938, 971, 905, 258, 1030, 1031, 513,
	0, 259, 260, 978, 0, 959, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	278, 962, 960, 961, 968, 964, 963, 967, 279, 280,
	281, 282, 995, 283, 989, 988, 909, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 980,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	915, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1002, 1003, 927, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 987, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 1000, 1001, 318, 319, 0,
	320, 1009, 0, 937, 321, 0, 322, 323, 324, 325,
	326, 973, 974, 977, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1013, 335, 982, 983, 0, 943, 0, 337, 1015,
	975, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1010, 1018, 350, 351, 1019, 0, 352, 353, 354, 966,
	965, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 906, 236,
	1022, 378, 928, 976, 379, 990, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 1004, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1005, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 986, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 916, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 969, 452, 436, 437, 453,
	454, 1026, 455, 456, 984, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1029, 463, 464, 465, 466,
	1006, 0, 469, 470, 904, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 996, 997, 998,
	999, 0, 485, 0, 479, 480, 1007, 481, 1008, 926,
	482, 483, 484, 0, 486, 487, 0, 910, 488, 489,
	490, 492, 493, 491, 494, 970, 495, 0, 0, 496,
	497, 498, 552, 993, 1028, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 907,
	0, 0, 0, 0, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 901, 902, 0, 0, 0, 0, 0,
	0, 0, 932, 0, 0, 2268, 930, 2259, 2266, 921,
	922, 918, 919, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 972, 936,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 985, 0, 992, 252, 991, 0, 253, 254, 255,
	256, 257, 938, 971, 905, 258, 1030, 1031, 513, 0,
	259, 260, 978, 0, 959, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1011, 277, 278,
	962, 960, 961, 968, 964, 963, 967, 279, 280, 281,
	282, 995, 2262, 989, 988, 909, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 980, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 915,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1002, 1003, 927, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 987, 0, 0, 0, 314, 0, 315, 0,
	0, 1012, 316, 317, 1000, 1001, 318, 319, 0, 320,
	1009, 0, 937, 321, 0, 322, 323, 324, 2263, 326,
	973, 974, 977, 380, 1014, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1013, 335, 982, 983, 0, 943, 0, 337, 1015, 975,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1010,
	1018, 350, 351, 1019, 0, 352, 353, 354, 966, 965,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	2264, 2261, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 906, 236, 1022,
	378, 928, 976, 379, 990, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1023, 390, 1024, 1004, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1005, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 986, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1025,
	428, 429, 430, 431, 916, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 2265, 0, 447, 448,
	446, 449, 450, 451, 969, 452, 436, 437, 453, 454,
	1026, 455, 456, 984, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1029, 463, 464, 465, 466, 1006,
	0, 469, 470, 904, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 996, 997, 998, 999,
	0, 485, 0, 479, 480, 1007, 481, 1008, 926, 482,
	483, 484, 0, 486, 487, 0, 910, 488, 489, 490,
	492, 493, 491, 494, 970, 495, 0, 0, 496, 497,
	498, 552, 993, 1028, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 2260, 505, 907, 0,
	0, 0, 0, 0, 0, 903, 0, 0, 0, 0,
	0, 0, 901, 902, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 0, 2256, 930, 2259, 2266, 921, 922,
	918, 919, 931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 938, 971, 905, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 2262, 989, 988, 909, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 915, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 2263, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 2264,
	2261, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 906, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 2265, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 904, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 910, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 2260, 505, 907, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 901, 902, 948, 920, 921, 922, 918, 919, 931,
	932, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 972, 936, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 985, 0, 992,
	252, 991, 0, 253, 254, 255, 256, 257, 938, 971,
	905, 258, 1030, 1031, 513, 0, 259, 260, 978, 0,
	959, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1011, 277, 278, 962, 960, 961, 968,
	964, 963, 967, 279, 280, 281, 282, 995, 283, 989,
	988, 909, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 980, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 915, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1002, 1003, 927, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 987, 0,
	0, 0, 314, 0, 315, 0, 0, 1012, 316, 317,
	1000, 1001, 318, 319, 0, 320, 1009, 0, 937, 321,
	0, 322, 323, 324, 325, 326, 973, 974, 977, 380,
	1014, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1013, 335, 982, 983,
	0, 943, 0, 337, 1015, 975, 1016, 338, 339, 340,
	1017, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1010, 1018, 350, 351, 1019,
	0, 352, 353, 354, 966, 965, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1020, 371, 372, 373, 376, 377,
	375, 1021, 374, 906, 236, 1022, 378, 928, 976, 379,
	990, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1023, 390, 1024,
	1004, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1005, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 986, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1025, 428, 429, 430, 431,
	916, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	969, 452, 436, 437, 453, 454, 1026, 455, 456, 984,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1029, 463, 464, 465, 466, 1006, 0, 469, 470, 904,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 996, 997, 998, 999, 0, 485, 0, 479,
	480, 1007, 481, 1008, 926, 482, 483, 484, 0, 486,
	487, 0, 910, 488, 489, 490, 492, 493, 491, 494,
	970, 495, 0, 0, 496, 497, 498, 552, 993, 1028,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 907, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 0, 0, 0, 0, 901, 902,
	0, 0, 0, 0, 0, 1628, 0, 932, 0, 0,
	0, 930, 948, 920, 921, 922, 918, 919, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 2074, 243, 244, 0, 0,
	0, 0, 0, 972, 936, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 985, 0, 992, 252,
	991, 0, 253, 254, 255, 256, 257, 938, 971, 905,
	258, 1030, 1031, 513, 0, 259, 260, 978, 0, 959,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 962, 960, 961, 968, 964,
	963, 967, 279, 280, 281, 282, 995, 283, 989, 988,
	909, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 980, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 915, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1002, 1003, 927, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 987, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 1000,
	1001, 318, 319, 0, 320, 1009, 0, 937, 321, 0,
	322, 323, 324, 325, 326, 973, 974, 977, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1013, 335, 982, 983, 0,
	943, 0, 337, 1015, 975, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1010, 1018, 350, 351, 1019, 0,
	352, 353, 354, 966, 965, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 906, 236, 1022, 378, 928, 976, 379, 990,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 1004,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1005, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	986, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 916,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 969,
	452, 436, 437, 453, 454, 1026, 455, 456, 984, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1029,
	463, 464, 465, 466, 1006, 0, 469, 470, 904, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 996, 997, 998, 999, 0, 485, 0, 479, 480,
	1007, 481, 1008, 926, 482, 483, 484, 0, 486, 487,
	0, 910, 488, 489, 490, 492, 493, 491, 494, 970,
	495, 0, 0, 496, 497, 498, 552, 993, 1028, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 907, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 901, 902, 0,
	0, 0, 0, 0, 0, 0, 932, 0, 0, 1425,
	930, 948, 920, 921, 922, 918, 919, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 972, 936, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 985, 0, 992, 252, 991,
	0, 253, 254, 255, 256, 257, 938, 971, 905, 258,
	1030, 1031, 513, 0, 259, 260, 978, 0, 959, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1011, 277, 278, 962, 960, 961, 968, 964, 963,
	967, 279, 280, 281, 282, 995, 283, 989, 988, 909,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 980, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 915, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1002, 1003, 927, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 987, 0, 0, 0,
	314, 0, 315, 0, 0, 1012, 316, 317, 1000, 1001,
	318, 319, 0, 320, 1009, 0, 937, 321, 0, 322,
	323, 324, 325, 326, 973, 974, 977, 380, 1014, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1013, 335, 982, 983, 0, 943,
	0, 337, 1015, 975, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1010, 1018, 350, 351, 1019, 0, 352,
	353, 354, 966, 965, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 906, 236, 1022, 378, 928, 976, 379, 990, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1023, 390, 1024, 1004, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1005, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 986,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1025, 428, 429, 430, 431, 916, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 969, 452,
	436, 437, 453, 454, 1026, 455, 456, 984, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1029, 463,
	464, 465, 466, 1006, 0, 469, 470, 904, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	996, 997, 998, 999, 0, 485, 0, 479, 480, 1007,
	481, 1008, 926, 482, 483, 484, 0, 486, 487, 0,
	910, 488, 489, 490, 492, 493, 491, 494, 970, 495,
	0, 0, 496, 497, 498, 552, 993, 1028, 0, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 907, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 0, 0, 901, 902, 0, 0,
	0, 0, 0, 0, 0, 932, 0, 0, 1420, 930,
	948, 920, 921, 922, 918, 919, 931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 972, 936, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 985, 0, 992, 252, 991, 0,
	253, 254, 255, 256, 257, 938, 971, 905, 258, 1030,
	1031, 513, 0, 259, 260, 978, 0, 959, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 962, 960, 961, 968, 964, 963, 967,
	279, 280, 281, 282, 995, 283, 989, 988, 909, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 980, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 915, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1002, 1003, 927, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 987, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 1000, 1001, 318,
	319, 0, 320, 1009, 0, 937, 321, 0, 322, 323,
	324, 325, 326, 973, 974, 977, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1013, 335, 982, 983, 0, 943, 0,
	337, 1015, 975, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 1010, 1018, 350, 351, 1019, 0, 352, 353,
	354, 966, 965, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	906, 236, 1022, 378, 928, 976, 379, 990, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 1004, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1005, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 986, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 916, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 969, 452, 436,
	437, 453, 454, 1026, 455, 456, 984, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 1029, 463, 464,
	465, 466, 1006, 0, 469, 470, 904, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 996,
	997, 998, 999, 0, 485, 0, 479, 480, 1007, 481,
	1008, 926, 482, 483, 484, 0, 486, 487, 0, 910,
	488, 489, 490, 492, 493, 491, 494, 970, 495, 0,
	0, 496, 497, 498, 552, 993, 1028, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 907, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 0, 0, 0, 901, 902, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 0, 1411, 930, 948,
	920, 921, 922, 918, 919, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	972, 936, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 985, 0, 992, 252, 991, 0, 253,
	254, 255, 256, 257, 938, 971, 905, 258, 1030, 1031,
	513, 0, 259, 260, 978, 0, 959, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 962, 960, 961, 968, 964, 963, 967, 279,
	280, 281, 282, 995, 283, 989, 988, 909, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	980, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 915, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1002, 1003, 927, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 987, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 1000, 1001, 318, 319,
	0, 320, 1009, 0, 937, 321, 0, 322, 323, 324,
	325, 326, 973, 974, 977, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1013, 335, 982, 983, 0, 943, 0, 337,
	1015, 975, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1010, 1018, 350, 351, 1019, 0, 352, 353, 354,
	966, 965, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 906,
	236, 1022, 378, 928, 976, 379, 990, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 1004, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1005, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 986, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 916, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 969, 452, 436, 437,
	453, 454, 1026, 455, 456, 984, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1029, 463, 464, 465,
	466, 1006, 0, 469, 470, 904, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 996, 997,
	998, 999, 0, 485, 0, 479, 480, 1007, 481, 1008,
	926, 482, 483, 484, 0, 486, 487, 0, 910, 488,
	489, 490, 492, 493, 491, 494, 970, 495, 0, 0,
	496, 497, 498, 552, 993, 1028, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	907, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 0, 901, 902, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 0, 1406, 930, 948, 920,
	921, 922, 918, 919, 931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 972,
	936, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 985, 0, 992, 252, 991, 0, 253, 254,
	255, 256, 257, 938, 971, 905, 258, 1030, 1031, 513,
	0, 259, 260, 978, 0, 959, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	278, 962, 960, 961, 968, 964, 963, 967, 279, 280,
	281, 282, 995, 283, 989, 988, 909, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 980,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	915, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1002, 1003, 927, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 987, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 1000, 1001, 318, 319, 0,
	320, 1009, 0, 937, 321, 0, 322, 323, 324, 325,
	326, 973, 974, 977, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1013, 335, 982, 983, 0, 943, 0, 337, 1015,
	975, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1010, 1018, 350, 351, 1019, 0, 352, 353, 354, 966,
	965, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 906, 236,
	1022, 378, 928, 976, 379, 990, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 1004, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1005, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 986, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 916, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 969, 452, 436, 437, 453,
	454, 1026, 455, 456, 984, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1029, 463, 464, 465, 466,
	1006, 0, 469, 470, 904, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 996, 997, 998,
	999, 0, 485, 0, 479, 480, 1007, 481, 1008, 926,
	482, 483, 484, 0, 486, 487, 0, 910, 488, 489,
	490, 492, 493, 491, 494, 970, 495, 0, 0, 496,
	497, 498, 552, 993, 1028, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 907,
	0, 0, 0, 0, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 901, 902, 0, 0, 0, 0, 0,
	0, 0, 932, 0, 0, 1388, 930, 948, 920, 921,
	922, 918, 919, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 972, 936,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 985, 0, 992, 252, 991, 0, 253, 254, 255,
	256, 257, 938, 971, 905, 258, 1030, 1031, 513, 0,
	259, 260, 978, 0, 959, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1011, 277, 278,
	962, 960, 961, 968, 964, 963, 967, 279, 280, 281,
	282, 995, 283, 989, 988, 909, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 980, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 915,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	1002, 1003, 927, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 987, 0, 0, 0, 314, 0, 315, 0,
	0, 1012, 316, 317, 1000, 1001, 318, 319, 0, 320,
	1009, 0, 937, 321, 0, 322, 323, 324, 325, 326,
	973, 974, 977, 380, 1014, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	1013, 335, 982, 983, 0, 943, 0, 337, 1015, 975,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 1010,
	1018, 350, 351, 1019, 0, 352, 353, 354, 966, 965,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 906, 236, 1022,
	378, 928, 976, 379, 990, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 1023, 390, 1024, 1004, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	1005, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 986, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1025,
	428, 429, 430, 431, 916, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 969, 452, 436, 437, 453, 454,
	1026, 455, 456, 984, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1029, 463, 464, 465, 466, 1006,
	0, 469, 470, 904, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 996, 997, 998, 999,
	0, 485, 0, 479, 480, 1007, 481, 1008, 926, 482,
	483, 484, 0, 486, 487, 0, 910, 488, 489, 490,
	492, 493, 491, 494, 970, 495, 0, 0, 496, 497,
	498, 552, 993, 1028, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 907, 0,
	0, 0, 0, 0, 0, 903, 0, 0, 0, 0,
	0, 0, 901, 902, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 0, 1277, 930, 948, 920, 921, 922,
	918, 919, 931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 938, 971, 905, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 283, 989, 988, 909, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 915, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 325, 326, 1276,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 906, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 904, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 910, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 907, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 901, 902, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 1271, 930, 948, 920, 921, 922, 918,
	919, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 972, 936, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 985,
	0, 992, 252, 991, 0, 253, 254, 255, 256, 257,
	938, 971, 905, 258, 1030, 1031, 513, 0, 259, 260,
	978, 0, 959, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1011, 277, 278, 962, 960,
	961, 968, 964, 963, 967, 279, 280, 281, 282, 995,
	283, 989, 988, 909, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 980, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 915, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1002, 1003,
	927, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	987, 0, 0, 0, 314, 0, 315, 0, 0, 1012,
	316, 317, 1000, 1001, 318, 319, 0, 320, 1009, 0,
	937, 321, 0, 322, 323, 324, 325, 326, 1270, 974,
	977, 380, 1014, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1013, 335,
	982, 983, 0, 943, 0, 337, 1015, 975, 1016, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1010, 1018, 350,
	351, 1019, 0, 352, 353, 354, 966, 965, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 906, 236, 1022, 378, 928,
	976, 379, 990, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1023,
	390, 1024, 1004, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1005, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 986, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1025, 428, 429,
	430, 431, 916, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 969, 452, 436, 437, 453, 454, 1026, 455,
	456, 984, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1029, 463, 464, 465, 466, 1006, 0, 469,
	470, 904, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 996, 997, 998, 999, 0, 485,
	0, 479, 480, 1007, 481, 1008, 926, 482, 483, 484,
	0, 486, 487, 0, 910, 488, 489, 490, 492, 493,
	491, 494, 970, 495, 0, 0, 496, 497, 498, 552,
	993, 1028, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 907, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 0, 0,
	901, 902, 0, 0, 0, 0, 0, 0, 0, 932,
	0, 0, 1264, 930, 948, 920, 921, 922, 918, 919,
	931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 972, 936, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 985, 0,
	992, 252, 991, 0, 253, 254, 255, 256, 257, 938,
	971, 905, 258, 1030, 1031, 513, 0, 259, 260, 978,
	0, 959, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1011, 277, 278, 962, 960, 961,
	968, 964, 963, 967, 279, 280, 281, 282, 995, 283,
	989, 988, 909, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 980, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 915, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1002, 1003, 927,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 987,
	0, 0, 0, 314, 0, 315, 0, 0, 1012, 316,
	317, 1000, 1001, 318, 319, 0, 320, 1009, 0, 937,
	321, 0, 322, 323, 324, 325, 326, 973, 974, 977,
	380, 1014, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1013, 335, 982,
	983, 0, 943, 0, 337, 1015, 975, 1016, 338, 339,
	340, 1017, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1010, 1018, 350, 351,
	1019, 0, 352, 353, 354, 966, 965, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1020, 371, 372, 373, 376,
	377, 375, 1021, 374, 906, 236, 1022, 378, 928, 976,
	379, 990, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1023, 390,
	1024, 1004, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1005, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 986, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1025, 428, 429, 430,
	431, 916, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 969, 452, 436, 437, 453, 454, 1026, 455, 456,
	984, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1029, 463, 464, 465, 466, 1006, 0, 469, 470,
	904, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 996, 997, 998, 999, 0, 485, 0,
	479, 480, 1007, 481, 1008, 926, 482, 483, 484, 0,
	486, 487, 0, 910, 488, 489, 490, 492, 493, 491,
	494, 970, 495, 0, 0, 496, 497, 498, 552, 993,
	1028, 0, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 907, 0, 0, 0, 0,
	0, 0, 903, 0, 0, 0, 0, 0, 0, 901,
	902, 948, 920, 921, 922, 918, 919, 931, 932, 0,
	0, 0, 930, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 972, 936, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 985, 0, 992, 252, 991,
	0, 253, 254, 255, 256, 257, 938, 971, 905, 258,
	1030, 1031, 513, 0, 259, 260, 978, 0, 959, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1011, 277, 278, 962, 960, 961, 968, 964, 963,
	967, 279, 280, 281, 282, 995, 283, 989, 988, 909,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 980, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 915, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1002, 1003, 927, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 987, 0, 0, 0,
	314, 0, 315, 0, 0, 1012, 316, 317, 1000, 1001,
	318, 319, 0, 320, 1009, 0, 937, 321, 0, 322,
	323, 324, 325, 326, 973, 974, 977, 380, 1014, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1013, 335, 982, 983, 0, 943,
	0, 337, 1015, 975, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1010, 1018, 350, 351, 1019, 0, 352,
	353, 354, 966, 965, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 906, 236, 1022, 378, 928, 976, 379, 990, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1023, 390, 1024, 1004, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1005, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 986,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1025, 428, 429, 430, 431, 916, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 969, 452,
	436, 437, 453, 454, 1026, 455, 456, 984, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 1029, 463,
	464, 465, 466, 1006, 0, 469, 470, 904, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	996, 997, 998, 999, 0, 485, 0, 479, 480, 1007,
	481, 1008, 926, 482, 483, 484, 0, 486, 487, 0,
	910, 488, 489, 490, 492, 493, 491, 494, 970, 495,
	0, 0, 496, 497, 498, 552, 993, 1028, 0, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 907, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 0, 0, 901, 902, 948, 920,
	921, 922, 918, 919, 931, 932, 0, 0, 0, 930,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 972,
	936, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 985, 0, 992, 252, 991, 0, 253, 254,
	255, 256, 257, 938, 971, 905, 258, 1030, 1031, 513,
	0, 259, 260, 978, 0, 959, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	3868, 962, 960, 961, 968, 964, 963, 967, 279, 280,
	281, 282, 995, 283, 989, 988, 909, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 980,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	915, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1002, 1003, 927, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 987, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 1000, 1001, 318, 319, 0,
	320, 1009, 0, 937, 321, 0, 322, 323, 324, 325,
	326, 973, 974, 977, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1013, 335, 982, 983, 0, 943, 0, 337, 1015,
	975, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1010, 1018, 350, 351, 1019, 0, 352, 353, 354, 966,
	965, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 906, 236,
	1022, 378, 928, 976, 379, 990, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 1004, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1005, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 986, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 916, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 969, 452, 436, 437, 453,
	454, 1026, 455, 456, 984, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 1029, 463, 464, 465, 466,
	1006, 0, 469, 470, 904, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 996, 997, 998,
	999, 0, 485, 0, 479, 480, 1007, 481, 1008, 926,
	482, 483, 484, 0, 3867, 487, 0, 910, 488, 489,
	490, 492, 493, 491, 494, 970, 495, 0, 0, 496,
	497, 498, 552, 993, 1028, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 907,
	0, 0, 0, 0, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 901, 902, 948, 920, 921, 922, 918,
	919, 931, 932, 0, 0, 0, 930, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 972, 936, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 3866, 985,
	0, 992, 252, 991, 0, 253, 254, 255, 256, 257,
	938, 971, 905, 258, 1030, 1031, 513, 0, 259, 260,
	978, 0, 959, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1011, 277, 3868, 962, 960,
	961, 968, 964, 963, 967, 279, 280, 281, 282, 995,
	283, 989, 988, 909, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 980, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 915, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1002, 1003,
	927, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	987, 0, 0, 0, 314, 0, 315, 0, 0, 1012,
	316, 317, 1000, 1001, 318, 319, 0, 320, 1009, 0,
	937, 321, 0, 322, 323, 324, 325, 326, 973, 974,
	977, 380, 1014, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1013, 335,
	982, 983, 0, 943, 0, 337, 1015, 975, 1016, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1010, 1018, 350,
	351, 1019, 0, 352, 353, 354, 966, 965, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 906, 236, 1022, 378, 928,
	976, 379, 990, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1023,
	390, 1024, 1004, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1005, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 986, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1025, 428, 429,
	430, 431, 916, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 969, 452, 436, 437, 453, 454, 1026, 455,
	456, 984, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1029, 463, 464, 465, 466, 1006, 0, 469,
	470, 904, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 996, 997, 998, 999, 0, 485,
	0, 479, 480, 1007, 481, 1008, 926, 482, 483, 484,
	0, 3867, 487, 0, 910, 488, 489, 490, 492, 493,
	491, 494, 970, 495, 0, 0, 496, 497, 498, 552,
	993, 1028, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 907, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 0, 0,
	901, 902, 948, 920, 921, 922, 2648, 2649, 931, 932,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 972, 936, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 985, 0, 992, 252,
	991, 0, 253, 254, 255, 256, 257, 938, 971, 905,
	258, 1030, 1031, 513, 0, 259, 260, 978, 0, 959,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 962, 960, 961, 968, 964,
	963, 967, 279, 280, 281, 282, 995, 283, 989, 988,
	909, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 980, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 915, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1002, 1003, 927, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 987, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 1000,
	1001, 318, 319, 0, 320, 1009, 0, 937, 321, 0,
	322, 323, 324, 325, 326, 973, 974, 977, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1013, 335, 982, 983, 0,
	943, 0, 337, 1015, 975, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 1010, 1018, 350, 351, 1019, 0,
	352, 353, 354, 966, 965, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 906, 236, 1022, 378, 928, 976, 379, 990,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 1004,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1005, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	986, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 916,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 969,
	452, 436, 437, 453, 454, 1026, 455, 456, 984, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 1029,
	463, 464, 465, 466, 1006, 0, 469, 470, 904, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 996, 997, 998, 999, 0, 485, 0, 479, 480,
	1007, 481, 1008, 926, 482, 483, 484, 0, 486, 487,
	0, 910, 488, 489, 490, 492, 493, 491, 494, 970,
	495, 0, 0, 496, 497, 498, 552, 993, 1028, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 907, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 901, 902, 948,
	920, 921, 922, 2646, 2647, 931, 932, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	972, 936, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 985, 0, 992, 252, 991, 0, 253,
	254, 255, 256, 257, 938, 971, 905, 258, 1030, 1031,
	513, 0, 259, 260, 978, 0, 959, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 962, 960, 961, 968, 964, 963, 967, 279,
	280, 281, 282, 995, 283, 989, 988, 909, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	980, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 915, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 1002, 1003, 927, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 987, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 1000, 1001, 318, 319,
	0, 320, 1009, 0, 937, 321, 0, 322, 323, 324,
	325, 326, 973, 974, 977, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 1013, 335, 982, 983, 0, 943, 0, 337,
	1015, 975, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 1010, 1018, 350, 351, 1019, 0, 352, 353, 354,
	966, 965, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 906,
	236, 1022, 378, 928, 976, 379, 990, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 1004, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 1005, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 986, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 916, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 969, 452, 436, 437,
	453, 454, 1026, 455, 456, 984, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 1029, 463, 464, 465,
	466, 1006, 0, 469, 470, 904, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 996, 997,
	998, 999, 0, 485, 0, 479, 480, 1007, 481, 1008,
	926, 482, 483, 484, 0, 486, 487, 0, 910, 488,
	489, 490, 492, 493, 491, 494, 970, 495, 0, 0,
	496, 497, 498, 552, 993, 1028, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	907, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 0, 901, 902, 948, 920, 921, 922,
	918, 919, 931, 932, 0, 0, 0, 930, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 938, 971, 905, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 283, 989, 988, 909, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 915, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 325, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 906, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 904, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 910, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 907, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 2082, 2083, 948, 920, 921, 922, 918, 919, 931,
	932, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 972, 936, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 985, 0, 992,
	252, 991, 0, 253, 254, 255, 256, 257, 938, 971,
	0, 258, 1030, 1031, 513, 0, 259, 260, 978, 0,
	959, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1011, 277, 278, 962, 960, 961, 968,
	964, 963, 967, 279, 280, 281, 282, 995, 283, 989,
	988, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 980, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 915, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 1002, 1003, 927, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 987, 0,
	0, 0, 314, 0, 315, 0, 0, 1012, 316, 317,
	1000, 1001, 318, 319, 0, 320, 1009, 0, 937, 321,
	0, 322, 323, 324, 325, 326, 973, 974, 977, 380,
	1014, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 1013, 335, 982, 983,
	0, 943, 0, 337, 1015, 975, 1016, 338, 339, 340,
	1017, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 1010, 1018, 350, 351, 1019,
	0, 352, 353, 354, 966, 965, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1020, 371, 372, 373, 376, 377,
	375, 1021, 374, 0, 236, 1022, 378, 928, 976, 379,
	990, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1023, 390, 1024,
	1004, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 1005, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 986, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1025, 428, 429, 430, 431,
	916, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	969, 452, 436, 437, 453, 454, 1026, 455, 456, 984,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	1029, 463, 464, 465, 466, 1006, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 996, 997, 998, 999, 0, 485, 0, 479,
	480, 1007, 481, 1008, 926, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	970, 495, 0, 0, 496, 497, 498, 552, 993, 1028,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 948, 920, 921, 922, 918, 919,
	931, 2278, 0, 0, 0, 0, 0, 0, 2276, 2277,
	0, 237, 238, 239, 240, 241, 242, 932, 243, 244,
	0, 930, 0, 0, 0, 972, 936, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 985, 0,
	992, 252, 991, 0, 253, 254, 255, 256, 257, 938,
	971, 0, 258, 1030, 1031, 513, 0, 259, 260, 978,
	0, 959, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1011, 277, 278, 962, 960, 961,
	968, 964, 963, 967, 279, 280, 281, 282, 995, 283,
	989, 988, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 980, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 915, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1002, 1003, 927,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 987,
	0, 0, 0, 314, 0, 315, 0, 0, 1012, 316,
	317, 1000, 1001, 318, 319, 0, 320, 1009, 0, 937,
	321, 0, 322, 323, 324, 325, 326, 973, 974, 977,
	380, 1014, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1013, 335, 982,
	983, 0, 943, 0, 337, 1015, 975, 1016, 338, 339,
	340, 1017, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 1010, 1018, 350, 351,
	1019, 0, 352, 353, 354, 966, 965, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1020, 371, 372, 373, 376,
	377, 375, 1021, 374, 0, 236, 1022, 378, 928, 976,
	379, 990, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1023, 390,
	1024, 1004, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1005, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 986, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1025, 428, 429, 430,
	431, 2641, 2642, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 969, 452, 436, 437, 453, 454, 1026, 455, 456,
	984, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 1029, 463, 464, 465, 466, 1006, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 996, 997, 998, 999, 0, 485, 0,
	479, 480, 1007, 481, 1008, 926, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 970, 495, 0, 0, 496, 497, 498, 552, 993,
	1028, 0, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 948, 920, 921, 922, 918,
	919, 931, 0, 0, 0, 0, 0, 0, 0, 1821,
	1822, 0, 237, 238, 239, 240, 241, 242, 932, 243,
	244, 0, 930, 0, 0, 0, 972, 936, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 0, 985,
	0, 992, 252, 991, 0, 253, 254, 255, 256, 257,
	938, 971, 905, 258, 1030, 1031, 513, 0, 259, 260,
	978, 0, 959, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1011, 277, 3868, 962, 960,
	961, 968, 964, 963, 967, 279, 280, 281, 282, 995,
	283, 989, 988, 909, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 980, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 915, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 1002, 1003,
	927, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	987, 0, 0, 0, 314, 0, 315, 0, 0, 1012,
	316, 317, 1000, 1001, 318, 319, 0, 320, 1009, 0,
	937, 321, 0, 322, 323, 324, 325, 326, 973, 974,
	977, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 1013, 335,
	982, 983, 0, 943, 0, 337, 0, 975, 0, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 1010, 1018, 350,
	351, 0, 0, 352, 353, 354, 966, 965, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 906, 236, 0, 378, 928,
	976, 379, 990, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1023,
	390, 1024, 1004, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 1005, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 986, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1025, 428, 429,
	430, 431, 916, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 969, 452, 436, 437, 453, 454, 0, 455,
	456, 984, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 1029, 463, 464, 465, 466, 1006, 0, 469,
	470, 904, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 996, 997, 998, 999, 0, 485,
	0, 479, 480, 1007, 481, 1008, 926, 482, 483, 484,
	0, 3867, 487, 0, 910, 488, 489, 490, 492, 493,
	491, 494, 970, 495, 0, 0, 496, 497, 498, 552,
	993, 1028, 0, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 948, 920, 921, 922,
	918, 919, 931, 0, 0, 0, 0, 0, 0, 0,
	901, 902, 0, 237, 238, 239, 240, 241, 242, 932,
	243, 244, 0, 930, 0, 0, 0, 972, 936, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	985, 0, 992, 252, 991, 0, 253, 254, 255, 256,
	257, 0, 971, 0, 258, 1030, 1031, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	995, 283, 989, 988, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 980, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 927, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 987, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 1000, 1001, 318, 319, 0, 320, 1009,
	0, 937, 321, 0, 322, 323, 324, 325, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 982, 983, 0, 943, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 0, 236, 1022, 378,
	928, 976, 379, 990, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 986, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 916, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 984, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 1029, 463, 464, 465, 466, 1006, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 996, 997, 998, 999, 0,
	485, 0, 479, 480, 1007, 481, 1008, 926, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 993, 1028, 0, 500, 499, 555, 0, 894, 0,
	1068, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	932, 972, 0, 0, 930, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 971, 0, 258, 511,
	512, 513, 0, 259, 260, 978, 0, 959, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 962, 960, 961, 968, 964, 963, 967,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1002, 1003, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 521, 522, 318,
	319, 0, 320, 1009, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 973, 974, 977, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1013, 335, 528, 529, 0, 530, 0,
	337, 1015, 975, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 1054, 348, 347,
	0, 349, 1010, 1018, 350, 351, 1019, 0, 352, 353,
	354, 966, 965, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	0, 236, 1022, 378, 0, 976, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 1060, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 1004, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1005, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 1062, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	199, 447, 448, 446, 449, 450, 451, 969, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 1006, 0, 469, 470, 0, 468, 201, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 1007, 481,
	1008, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 970, 495, 0,
	0, 496, 497, 498, 1395, 553, 554, 0, 500, 499,
	555, 0, 1068, 0, 193, 501, 502, 556, 503, 504,
	505, 0, 194, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 1058, 972, 1714, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 971, 0,
	258, 511, 512, 513, 0, 259, 260, 978, 0, 959,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 962, 960, 961, 968, 964,
	963, 967, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 1002, 1003, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 521,
	522, 318, 319, 0, 320, 1009, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 973, 974, 977, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 1013, 335, 528, 529, 0,
	530, 0, 337, 1015, 975, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 1054,
	348, 347, 0, 349, 1010, 1018, 350, 351, 1019, 0,
	352, 353, 354, 966, 965, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 0, 236, 1022, 378, 0, 976, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 1060, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 1004,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 1005, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 542,
	1062, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 199, 447, 448, 446, 449, 450, 451, 969,
	452, 436, 437, 453, 454, 1026, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 1006, 0, 469, 470, 0, 468,
	201, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	1007, 481, 1008, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 970,
	495, 0, 0, 496, 497, 498, 1395, 553, 554, 0,
	500, 499, 555, 0, 0, 0, 193, 501, 502, 556,
	503, 504, 505, 0, 194, 0, 0, 0, 2801, 0,
	1068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 1714, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 971, 0, 258, 511,
	512, 513, 0, 259, 260, 978, 0, 959, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 962, 960, 961, 968, 964, 963, 967,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 1002, 1003, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 521, 522, 318,
	319, 0, 320, 1009, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 973, 974, 977, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 1013, 335, 528, 529, 0, 530, 0,
	337, 1015, 975, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 1054, 348, 347,
	0, 349, 1010, 1018, 350, 351, 1019, 0, 352, 353,
	354, 966, 965, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	0, 236, 1022, 378, 0, 976, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 1060, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 1004, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 1005, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 1062, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 969, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 1006, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 1007, 481,
	1008, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 970, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 0, 1050, 0, 1068, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 1058, 0, 1056, 972, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	971, 0, 258, 511, 512, 513, 0, 259, 260, 978,
	0, 959, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1011, 277, 278, 962, 960, 961,
	968, 964, 963, 967, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 1002, 1003, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 1012, 316,
	317, 521, 522, 318, 319, 0, 320, 1009, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 973, 974, 977,
	380, 1014, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 1013, 335, 528,
	529, 0, 530, 0, 337, 1015, 975, 1016, 338, 339,
	340, 1017, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 1054, 348, 347, 0, 349, 1010, 1018, 350, 351,
	1019, 0, 352, 353, 354, 966, 965, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1020, 371, 372, 373, 376,
	377, 375, 1021, 374, 0, 236, 1022, 378, 0, 976,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 1060,
	385, 386, 387, 0, 0, 388, 389, 535, 1023, 390,
	1024, 1004, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 1005, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1025, 428, 429, 430,
	431, 542, 1062, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 969, 452, 436, 437, 453, 454, 1026, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 1006, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 1007, 481, 1008, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 970, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 0, 1068, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 1058, 972, 1056, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 971, 0, 258, 511, 512, 513, 0, 259,
	260, 978, 0, 959, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 962,
	960, 961, 968, 964, 963, 967, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 1002,
	1003, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 521, 522, 318, 319, 0, 320, 1009,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 973,
	974, 977, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 1013,
	335, 528, 529, 0, 530, 0, 337, 1015, 975, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 1054, 348, 347, 0, 349, 1010, 1018,
	350, 351, 1019, 0, 352, 353, 354, 966, 965, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 0, 236, 1022, 378,
	0, 976, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 1060, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 1004, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 1005,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 542, 1062, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 969, 452, 436, 437, 453, 454, 1026,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 1006, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 1007, 481, 1008, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 970, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 0, 1068, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 1058, 972,
	1056, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 971, 0, 258, 511, 512, 513,
	0, 259, 260, 978, 0, 959, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	278, 962, 960, 961, 968, 964, 963, 967, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 1002, 1003, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 521, 522, 318, 319, 0,
	320, 1009, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 973, 974, 977, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 1013, 335, 528, 529, 0, 530, 0, 337, 1015,
	975, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	1010, 1018, 350, 351, 1019, 0, 352, 353, 354, 966,
	965, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 0, 236,
	1022, 378, 0, 976, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 1004, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 1005, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 542, 1062, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 969, 452, 436, 437, 453,
	454, 1026, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	1006, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 1007, 481, 1008, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 970, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 0,
	894, 0, 1249, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 1613, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 1218,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 1013, 335, 528, 529, 0,
	530, 0, 337, 1015, 531, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 1018, 350, 351, 1019, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 0, 0, 1022, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 199, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 1026, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	201, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 1395, 553, 554, 0,
	500, 499, 555, 0, 0, 0, 193, 501, 502, 556,
	503, 504, 505, 0, 194, 0, 0, 0, 1392, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 1218, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 1013, 335, 528, 529, 0, 530, 0,
	337, 1015, 531, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 1018, 350, 351, 1019, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	0, 0, 1022, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	199, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 201, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 1395, 553, 554, 0, 500, 499,
	555, 0, 0, 0, 193, 501, 502, 556, 503, 504,
	505, 0, 194, 0, 0, 0, 0, 0, 1249, 1248,
	0, 0, 0, 0, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 1218, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 1013, 335, 528, 529, 0, 530, 0, 337, 1015,
	531, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 1018, 350, 351, 1019, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 0, 0,
	1022, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 1026, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 1249,
	1248, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 1417, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 1218, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 1013, 335, 528, 529, 0, 530, 0, 337,
	1015, 531, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 1018, 350, 351, 1019, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 0,
	0, 1022, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 1026, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	1249, 1248, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 3025, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 1218, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 1013, 335, 528, 529, 0, 530, 0,
	337, 1015, 531, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 1018, 350, 351, 1019, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	0, 0, 1022, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 1068, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 972, 0, 1401, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 971, 0, 258,
	511, 512, 513, 0, 259, 260, 978, 0, 959, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 1011, 277, 278, 962, 960, 961, 968, 964, 963,
	967, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 1002, 1003, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 1012, 316, 317, 521, 522,
	318, 319, 0, 320, 1009, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 973, 974, 977, 380, 1014, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 1013, 335, 528, 529, 0, 530,
	0, 337, 1015, 975, 1016, 338, 339, 340, 1017, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 1010, 1018, 350, 351, 1019, 0, 352,
	353, 354, 966, 965, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 1020, 371, 372, 373, 376, 377, 375, 1021,
	374, 0, 236, 1022, 378, 0, 976, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 1023, 390, 1024, 1004, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 1005, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 1025, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 969, 452,
	436, 437, 453, 454, 1026, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 1006, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 1007,
	481, 1008, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 970, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 894, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 199, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 201, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 1395, 553,
	554, 0, 500, 499, 555, 231, 0, 0, 193, 501,
	502, 556, 503, 504, 505, 0, 194, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 168, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 0, 1339, 0, 231,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 1728,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	0, 231, 2568, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 1343, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 231, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 4016, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 231,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 2973, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 1343, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 231, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	2543, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 231, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 3113, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 0,
	754, 0, 638, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 1984, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 645, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 752, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	643, 471, 472, 473, 474, 644, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 0, 636, 0, 638, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 648,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 645, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 643, 471, 472, 473, 474, 644,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 638, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 648, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 645, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 236, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 643, 471, 472, 473, 474, 644, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	638, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	648, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 645, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 236, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 2020, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 643, 471,
	472, 473, 474, 644, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 1763, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	0, 1769, 0, 1759, 252, 1775, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 1784, 1785, 0, 0,
	259, 260, 0, 0, 1218, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 1011, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 995, 283, 1773, 1772, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 980, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 0,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 1771, 0, 0, 0, 314, 0, 315, 0,
	0, 1012, 316, 317, 1780, 1781, 318, 319, 0, 320,
	0, 0, 0, 321, 0, 322, 323, 324, 325, 326,
	0, 0, 0, 380, 1014, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	1013, 335, 1766, 1767, 0, 1762, 0, 337, 1015, 0,
	1016, 338, 339, 340, 1017, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 0,
	1018, 350, 351, 1019, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 1020, 371,
	372, 373, 376, 377, 375, 1021, 374, 0, 0, 1022,
	378, 0, 0, 379, 1774, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	0, 1023, 390, 1024, 0, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 1756, 1757,
	0, 402, 0, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 1770, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 1025,
	428, 429, 430, 431, 0, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	1026, 455, 456, 1768, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 1783, 463, 464, 465, 466, 0,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 1776, 1777, 1778, 1779,
	0, 485, 0, 479, 480, 0, 481, 0, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 0, 1760, 1782, 0, 500, 499, 0, 0, 0,
	0, 0, 501, 502, 0, 503, 504, 505, 1249, 1248,
	0, 0, 0, 0, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 1750, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 1218, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 1011, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 1012, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 1014, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 1013, 335, 528, 529, 0, 530, 0, 337, 1015,
	531, 1016, 338, 339, 340, 1017, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 1018, 350, 351, 1019, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 1020,
	371, 372, 373, 376, 377, 375, 1021, 374, 0, 0,
	1022, 378, 3269, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 1023, 390, 1024, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	1025, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 1026, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 1249,
	1248, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 1218, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 1013, 335, 528, 529, 0, 530, 0, 337,
	1015, 531, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 1018, 350, 351, 1019, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 0,
	0, 1022, 378, 2953, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 1026, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	1249, 1248, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 1218, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 0, 0, 0, 0, 0, 0, 2944,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 1013, 335, 528, 529, 0, 530, 0,
	337, 1015, 531, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 1018, 350, 351, 1019, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	0, 0, 1022, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 2945, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 231, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 236, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 1444, 0,
	1249, 1248, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 1218, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	1011, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 1443, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 1012, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 1014, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 1013, 335, 528, 529, 0, 530, 0,
	337, 1015, 531, 1016, 338, 339, 340, 1017, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 1018, 350, 351, 1019, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 1020, 371, 372, 373, 376, 377, 375, 1021, 374,
	0, 0, 1022, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 1023, 390, 1024, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 1442, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 1025, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 1441, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 1026, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 1385, 0, 1249, 1248, 0, 0, 0, 0, 1246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	1218, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1011, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 1012, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 1384, 526, 527, 380,
	1014, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 1013, 335, 528, 529,
	0, 530, 0, 337, 1015, 531, 1016, 338, 339, 340,
	1017, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 1018, 350, 351, 1019,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1020, 371, 372, 373, 376, 377,
	375, 1021, 374, 0, 0, 1022, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1023, 390, 1024,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1025, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 1026, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 1319, 0, 1249, 1248, 0, 0,
	0, 0, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 1218, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 1011, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	1012, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 1318,
	526, 527, 380, 1014, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 1013,
	335, 528, 529, 0, 530, 0, 337, 1015, 531, 1016,
	338, 339, 340, 1017, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 1018,
	350, 351, 1019, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 1020, 371, 372,
	373, 376, 377, 375, 1021, 374, 0, 0, 1022, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	1023, 390, 1024, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 1025, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 1026,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 1282, 0, 1249,
	1248, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 1218, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 1011,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 1012, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 1014, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 1013, 335, 528, 529, 0, 530, 0, 337,
	1015, 531, 1016, 338, 339, 340, 1017, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 1018, 350, 351, 1019, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	1020, 371, 372, 373, 376, 377, 375, 1021, 374, 0,
	0, 1022, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 1023, 390, 1024, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 1025, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 1026, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	1244, 0, 1249, 1248, 0, 0, 0, 0, 1246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 1218,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 1243, 526, 527, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 1013, 335, 528, 529, 0,
	530, 0, 337, 1015, 531, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 1018, 350, 351, 1019, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 0, 0, 1022, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 1026, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 1249, 1248, 0, 0, 0, 0, 1246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	1218, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 1011, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 1012, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	1014, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 1013, 335, 528, 529,
	0, 530, 0, 337, 1015, 531, 1016, 338, 339, 340,
	1017, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 1018, 350, 351, 1019,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 1020, 371, 372, 373, 376, 377,
	375, 1021, 374, 0, 0, 1022, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 1023, 390, 1024,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 1025, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 1026, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 1249, 1248, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 1218, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 1011, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 1794, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 1012, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 1014, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 1013, 335, 528,
	529, 0, 530, 0, 337, 1015, 531, 1016, 338, 339,
	340, 1017, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 1018, 350, 351,
	1019, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 1020, 371, 372, 373, 376,
	377, 375, 1021, 374, 0, 0, 1022, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 1023, 390,
	1024, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 1025, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 1026, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 1249, 1248, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 1218, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 1011, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 1012,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 1014, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 1013, 335,
	528, 529, 0, 530, 0, 337, 1015, 531, 1016, 338,
	339, 340, 1017, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 1018, 350,
	351, 1019, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 1020, 371, 372, 373,
	376, 377, 375, 1021, 374, 0, 0, 1022, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 1023,
	390, 1024, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 1025, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 1026, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 1249, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 1218,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 1011, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 1012, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 1014,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 1013, 335, 528, 529, 0,
	530, 0, 337, 1015, 531, 1016, 338, 339, 340, 1017,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 1018, 350, 351, 1019, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 1020, 371, 372, 373, 376, 377, 375,
	1021, 374, 0, 0, 1022, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 1023, 390, 1024, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 1025, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 1026, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 231,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 2408, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 2405, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 2412,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 2581, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 2411, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 2578, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 2580,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 2577, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 2410, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 2579, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 2408, 259,
	260, 514, 0, 0, 2402, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 2405, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 2412, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 2411, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 2401,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 2410, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 2409, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 1502, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	1505, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 1503, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 1504, 499, 555,
	1222, 0, 231, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 1224, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 1060, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 1219, 0, 231, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 1221, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	1060, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 1125, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 1127, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 1060, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 588,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 587, 241, 242, 577, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 580,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 581, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 582, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 576, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 577, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 580, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 581, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 582, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 231, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 2919,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 1060, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 2515,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 2514, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 1996, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 236, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 231, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 1922,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 1927, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 1926, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 236, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 1915, 0, 231, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 234, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	1917, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 235, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 236, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 1381, 0,
	231, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 234, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 1380, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 235, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 236, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 1372, 0, 231, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 234,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 1371, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 235, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 236, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 1369, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 1368,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 1365, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 1364, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	1321, 0, 231, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 1240, 0, 231, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 1233, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 234, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 1235, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 235, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 236,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 558,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 222, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	234, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 235, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 236, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 231, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 234, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 235,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 236, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 580, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 581,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 582, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 2027, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 234, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 235, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 236, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 231, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 2025, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 234, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	235, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 236, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 231,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 2023, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 234, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 235, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	236, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 234, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 1965,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 235, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 236, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 741, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 740, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 739, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 2581, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 3497, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 567, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 566, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 565, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	231, 2568, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 231, 3506, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 525, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 3246, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 525, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 2329, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 231, 2568, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 2565, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 2004, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 1994, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 608, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 1099, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	1097, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 609,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 605, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 1100, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 604, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 0, 500, 499, 555,
	608, 0, 231, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 598, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 609, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 0, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 605, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 1400, 451, 0,
	452, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 604, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 0,
	500, 499, 555, 1378, 0, 231, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 1377, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 439, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 0, 500, 499, 555, 1327, 0, 231, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 1326, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 0, 500, 499, 555, 1312,
	0, 231, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 1311, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 0, 500,
	499, 555, 1307, 0, 231, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 1227, 0, 231, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 608, 0,
	231, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 1099, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 1097, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	609, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 605, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 1100, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 604,
	547, 548, 549, 0, 485, 0, 479, 1098, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 231, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	1081, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 231, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 614, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 525, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 0, 500, 499, 555, 608, 0, 231, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 598, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	596, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	525, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 597, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 609, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 599, 432, 0, 433, 439, 440,
	434, 435, 605, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 600, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 604, 547, 548, 549,
	0, 485, 0, 479, 602, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 0, 500, 499, 555, 592, 0,
	231, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 593, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 590, 0, 231, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	0, 500, 499, 555, 584, 0, 231, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 0, 500, 499, 555, 562, 0, 231,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 525, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 525,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 2988, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 414, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	231, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 321, 0, 322, 323,
	324, 325, 326, 2949, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 395, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 410, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 432, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 231, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 0, 0, 0, 237, 238, 239, 240, 241, 242,
	0, 243, 244, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 245, 246, 248, 247, 249, 250, 251,
	507, 508, 0, 509, 252, 510, 0, 253, 254, 255,
	256, 257, 0, 0, 0, 258, 511, 512, 513, 0,
	259, 260, 514, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 267, 0, 0, 269, 270, 271, 268, 0,
	272, 0, 273, 274, 275, 0, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 0, 0, 279, 280, 281,
	282, 0, 283, 515, 516, 0, 287, 284, 285, 0,
	288, 286, 0, 289, 290, 0, 0, 291, 292, 293,
	0, 294, 295, 0, 296, 297, 0, 298, 299, 517,
	300, 301, 302, 304, 306, 303, 307, 308, 309, 310,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 520, 0, 0, 0, 314, 0, 315, 0,
	0, 0, 316, 317, 521, 522, 318, 319, 0, 320,
	523, 0, 524, 321, 0, 322, 323, 324, 325, 326,
	2895, 526, 527, 380, 0, 327, 328, 0, 329, 330,
	331, 332, 0, 0, 0, 0, 333, 334, 336, 0,
	0, 335, 528, 529, 0, 530, 0, 337, 0, 531,
	0, 338, 339, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 0, 348, 347, 0, 349, 532,
	0, 350, 351, 0, 0, 352, 353, 354, 0, 0,
	355, 356, 357, 358, 0, 359, 360, 362, 364, 361,
	363, 368, 365, 366, 367, 370, 0, 369, 0, 371,
	372, 373, 376, 377, 375, 0, 374, 0, 0, 0,
	378, 0, 533, 379, 534, 381, 382, 0, 0, 383,
	0, 0, 0, 385, 386, 387, 0, 0, 388, 389,
	535, 0, 390, 0, 536, 391, 392, 384, 393, 394,
	395, 396, 397, 398, 399, 0, 400, 401, 537, 538,
	539, 402, 540, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 410, 411, 412, 541, 414, 413, 415, 0,
	0, 0, 0, 0, 0, 416, 0, 418, 419, 420,
	417, 421, 422, 423, 424, 0, 425, 426, 427, 0,
	428, 429, 430, 431, 542, 432, 0, 433, 439, 440,
	434, 435, 441, 442, 443, 444, 445, 0, 447, 448,
	446, 449, 450, 451, 0, 452, 436, 437, 453, 454,
	0, 455, 456, 543, 0, 457, 0, 458, 459, 460,
	461, 438, 462, 467, 544, 463, 464, 465, 466, 545,
	0, 469, 470, 0, 468, 0, 471, 472, 473, 474,
	475, 476, 305, 477, 0, 478, 546, 547, 548, 549,
	0, 485, 0, 479, 480, 550, 481, 551, 0, 482,
	483, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	492, 493, 491, 494, 0, 495, 0, 0, 496, 497,
	498, 552, 553, 554, 231, 500, 499, 555, 0, 0,
	0, 0, 501, 502, 556, 503, 504, 505, 0, 0,
	0, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	245, 246, 248, 247, 249, 250, 251, 507, 508, 0,
	509, 252, 510, 0, 253, 254, 255, 256, 257, 0,
	0, 0, 258, 511, 512, 513, 0, 259, 260, 514,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 267,
	0, 0, 269, 270, 271, 268, 0, 272, 0, 273,
	274, 275, 0, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 279, 280, 281, 282, 0, 283,
	515, 516, 0, 287, 284, 285, 0, 288, 286, 0,
	289, 290, 0, 0, 291, 292, 293, 0, 294, 295,
	0, 296, 297, 0, 298, 299, 517, 300, 301, 302,
	304, 306, 303, 307, 308, 309, 310, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 520,
	0, 0, 0, 314, 0, 315, 0, 0, 0, 316,
	317, 521, 522, 318, 319, 0, 320, 523, 0, 524,
	321, 0, 322, 323, 324, 325, 326, 2893, 526, 527,
	380, 0, 327, 328, 0, 329, 330, 331, 332, 0,
	0, 0, 0, 333, 334, 336, 0, 0, 335, 528,
	529, 0, 530, 0, 337, 0, 531, 0, 338, 339,
	340, 0, 341, 0, 0, 0, 342, 343, 344, 345,
	346, 0, 348, 347, 0, 349, 532, 0, 350, 351,
	0, 0, 352, 353, 354, 0, 0, 355, 356, 357,
	358, 0, 359, 360, 362, 364, 361, 363, 368, 365,
	366, 367, 370, 0, 369, 0, 371, 372, 373, 376,
	377, 375, 0, 374, 0, 0, 0, 378, 0, 533,
	379, 534, 381, 382, 0, 0, 383, 0, 0, 0,
	385, 386, 387, 0, 0, 388, 389, 535, 0, 390,
	0, 536, 391, 392, 384, 393, 394, 395, 396, 397,
	398, 399, 0, 400, 401, 537, 538, 539, 402, 540,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 410,
	411, 412, 541, 414, 413, 415, 0, 0, 0, 0,
	0, 0, 416, 0, 418, 419, 420, 417, 421, 422,
	423, 424, 0, 425, 426, 427, 0, 428, 429, 430,
	431, 542, 432, 0, 433, 439, 440, 434, 435, 441,
	442, 443, 444, 445, 0, 447, 448, 446, 449, 450,
	451, 0, 452, 436, 437, 453, 454, 0, 455, 456,
	543, 0, 457, 0, 458, 459, 460, 461, 438, 462,
	467, 544, 463, 464, 465, 466, 545, 0, 469, 470,
	0, 468, 0, 471, 472, 473, 474, 475, 476, 305,
	477, 0, 478, 546, 547, 548, 549, 0, 485, 0,
	479, 480, 550, 481, 551, 0, 482, 483, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 492, 493, 491,
	494, 0, 495, 0, 0, 496, 497, 498, 552, 553,
	554, 231, 500, 499, 555, 0, 0, 0, 0, 501,
	502, 556, 503, 504, 505, 0, 0, 0, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 245, 246, 248,
	247, 249, 250, 251, 507, 508, 0, 509, 252, 510,
	0, 253, 254, 255, 256, 257, 0, 0, 0, 258,
	511, 512, 513, 0, 259, 260, 514, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 267, 0, 0, 269,
	270, 271, 268, 0, 272, 0, 273, 274, 275, 0,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 0,
	0, 279, 280, 281, 282, 0, 283, 515, 516, 0,
	287, 284, 285, 0, 288, 286, 0, 289, 290, 0,
	0, 291, 292, 293, 0, 294, 295, 0, 296, 297,
	0, 298, 299, 517, 300, 301, 302, 304, 306, 303,
	307, 308, 309, 310, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 520, 0, 0, 0,
	314, 0, 315, 0, 0, 0, 316, 317, 521, 522,
	318, 319, 0, 320, 523, 0, 524, 321, 0, 322,
	323, 324, 325, 326, 2879, 526, 527, 380, 0, 327,
	328, 0, 329, 330, 331, 332, 0, 0, 0, 0,
	333, 334, 336, 0, 0, 335, 528, 529, 0, 530,
	0, 337, 0, 531, 0, 338, 339, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 0, 348,
	347, 0, 349, 532, 0, 350, 351, 0, 0, 352,
	353, 354, 0, 0, 355, 356, 357, 358, 0, 359,
	360, 362, 364, 361, 363, 368, 365, 366, 367, 370,
	0, 369, 0, 371, 372, 373, 376, 377, 375, 0,
	374, 0, 0, 0, 378, 0, 533, 379, 534, 381,
	382, 0, 0, 383, 0, 0, 0, 385, 386, 387,
	0, 0, 388, 389, 535, 0, 390, 0, 536, 391,
	392, 384, 393, 394, 395, 396, 397, 398, 399, 0,
	400, 401, 537, 538, 539, 402, 540, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 410, 411, 412, 541,
	414, 413, 415, 0, 0, 0, 0, 0, 0, 416,
	0, 418, 419, 420, 417, 421, 422, 423, 424, 0,
	425, 426, 427, 0, 428, 429, 430, 431, 542, 432,
	0, 433, 439, 440, 434, 435, 441, 442, 443, 444,
	445, 0, 447, 448, 446, 449, 450, 451, 0, 452,
	436, 437, 453, 454, 0, 455, 456, 543, 0, 457,
	0, 458, 459, 460, 461, 438, 462, 467, 544, 463,
	464, 465, 466, 545, 0, 469, 470, 0, 468, 0,
	471, 472, 473, 474, 475, 476, 305, 477, 0, 478,
	546, 547, 548, 549, 0, 485, 0, 479, 480, 550,
	481, 551, 0, 482, 483, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 492, 493, 491, 494, 0, 495,
	0, 0, 496, 497, 498, 552, 553, 554, 231, 500,
	499, 555, 0, 0, 0, 0, 501, 502, 556, 503,
	504, 505, 0, 0, 0, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 245, 246, 248, 247, 249, 250,
	251, 507, 508, 0, 509, 252, 510, 0, 253, 254,
	255, 256, 257, 0, 0, 0, 258, 511, 512, 513,
	0, 259, 260, 514, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 267, 0, 0, 269, 270, 271, 268,
	0, 272, 0, 273, 274, 275, 0, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 0, 0, 279, 280,
	281, 282, 0, 283, 515, 516, 0, 287, 284, 285,
	0, 288, 286, 0, 289, 290, 0, 0, 291, 292,
	293, 0, 294, 295, 0, 296, 297, 0, 298, 299,
	517, 300, 301, 302, 304, 306, 303, 307, 308, 309,
	310, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 520, 0, 0, 0, 314, 0, 315,
	0, 0, 0, 316, 317, 521, 522, 318, 319, 0,
	320, 523, 0, 524, 321, 0, 322, 323, 324, 325,
	326, 2523, 526, 527, 380, 0, 327, 328, 0, 329,
	330, 331, 332, 0, 0, 0, 0, 333, 334, 336,
	0, 0, 335, 528, 529, 0, 530, 0, 337, 0,
	531, 0, 338, 339, 340, 0, 341, 0, 0, 0,
	342, 343, 344, 345, 346, 0, 348, 347, 0, 349,
	532, 0, 350, 351, 0, 0, 352, 353, 354, 0,
	0, 355, 356, 357, 358, 0, 359, 360, 362, 364,
	361, 363, 368, 365, 366, 367, 370, 0, 369, 0,
	371, 372, 373, 376, 377, 375, 0, 374, 0, 0,
	0, 378, 0, 533, 379, 534, 381, 382, 0, 0,
	383, 0, 0, 0, 385, 386, 387, 0, 0, 388,
	389, 535, 0, 390, 0, 536, 391, 392, 384, 393,
	394, 395, 396, 397, 398, 399, 0, 400, 401, 537,
	538, 539, 402, 540, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 410, 411, 412, 541, 414, 413, 415,
	0, 0, 0, 0, 0, 0, 416, 0, 418, 419,
	420, 417, 421, 422, 423, 424, 0, 425, 426, 427,
	0, 428, 429, 430, 431, 542, 432, 0, 433, 439,
	440, 434, 435, 441, 442, 443, 444, 445, 0, 447,
	448, 446, 449, 450, 451, 0, 452, 436, 437, 453,
	454, 0, 455, 456, 543, 0, 457, 0, 458, 459,
	460, 461, 438, 462, 467, 544, 463, 464, 465, 466,
	545, 0, 469, 470, 0, 468, 0, 471, 472, 473,
	474, 475, 476, 305, 477, 0, 478, 546, 547, 548,
	549, 0, 485, 0, 479, 480, 550, 481, 551, 0,
	482, 483, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 492, 493, 491, 494, 0, 495, 0, 0, 496,
	497, 498, 552, 553, 554, 231, 500, 499, 555, 0,
	0, 0, 0, 501, 502, 556, 503, 504, 505, 0,
	0, 0, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 245, 246, 248, 247, 249, 250, 251, 507, 508,
	0, 509, 252, 510, 0, 253, 254, 255, 256, 257,
	0, 0, 0, 258, 511, 512, 513, 0, 259, 260,
	514, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	267, 0, 0, 269, 270, 271, 268, 0, 272, 0,
	273, 274, 275, 0, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 0, 0, 279, 280, 281, 282, 0,
	283, 515, 516, 0, 287, 284, 285, 0, 288, 286,
	0, 289, 290, 0, 0, 291, 292, 293, 0, 294,
	295, 0, 296, 297, 0, 298, 299, 517, 300, 301,
	302, 304, 306, 303, 307, 308, 309, 310, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	520, 0, 0, 0, 314, 0, 315, 0, 0, 0,
	316, 317, 521, 522, 318, 319, 0, 320, 523, 0,
	524, 321, 0, 322, 323, 324, 325, 326, 525, 526,
	527, 380, 0, 327, 328, 0, 329, 330, 331, 332,
	0, 0, 0, 0, 333, 334, 336, 0, 0, 335,
	528, 529, 0, 530, 0, 337, 0, 531, 0, 338,
	339, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 0, 348, 347, 0, 349, 532, 0, 350,
	351, 0, 0, 352, 353, 354, 0, 0, 355, 356,
	357, 358, 0, 359, 360, 362, 364, 361, 363, 368,
	365, 366, 367, 370, 0, 369, 0, 371, 372, 373,
	376, 377, 375, 0, 374, 0, 0, 0, 378, 0,
	533, 379, 534, 381, 382, 0, 0, 383, 0, 0,
	0, 385, 386, 387, 0, 0, 388, 389, 535, 0,
	390, 0, 536, 391, 392, 384, 393, 394, 395, 396,
	397, 398, 399, 0, 400, 401, 537, 538, 539, 402,
	540, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	410, 411, 412, 541, 414, 413, 415, 0, 0, 0,
	0, 0, 0, 416, 0, 418, 419, 420, 417, 421,
	422, 423, 424, 0, 425, 426, 427, 0, 428, 429,
	430, 431, 542, 432, 0, 433, 593, 440, 434, 435,
	441, 442, 443, 444, 445, 0, 447, 448, 446, 449,
	450, 451, 0, 452, 436, 437, 453, 454, 0, 455,
	456, 543, 0, 457, 0, 458, 459, 460, 461, 438,
	462, 467, 544, 463, 464, 465, 466, 545, 0, 469,
	470, 0, 468, 0, 471, 472, 473, 474, 475, 476,
	305, 477, 0, 478, 546, 547, 548, 549, 0, 485,
	0, 479, 480, 550, 481, 551, 0, 482, 483, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 492, 493,
	491, 494, 0, 495, 0, 0, 496, 497, 498, 552,
	553, 554, 231, 500, 499, 555, 0, 0, 0, 0,
	501, 502, 556, 503, 504, 505, 0, 0, 0, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 0, 0,
	0, 0, 0, 506, 0, 1947, 0, 0, 245, 246,
	248, 247, 249, 250, 251, 507, 508, 0, 509, 252,
	510, 0, 253, 254, 255, 256, 257, 0, 0, 0,
	258, 511, 512, 513, 0, 259, 260, 514, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 267, 0, 0,
	269, 270, 271, 268, 0, 272, 0, 273, 274, 275,
	0, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	0, 0, 279, 280, 281, 282, 0, 283, 515, 516,
	0, 287, 284, 285, 0, 288, 286, 0, 289, 290,
	0, 0, 291, 292, 293, 0, 294, 295, 0, 296,
	297, 0, 298, 299, 517, 300, 301, 302, 304, 306,
	303, 307, 308, 309, 310, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 520, 0, 0,
	0, 314, 0, 315, 0, 0, 0, 316, 317, 521,
	522, 318, 319, 0, 320, 523, 0, 524, 321, 0,
	322, 323, 324, 325, 326, 525, 526, 527, 380, 0,
	327, 328, 0, 329, 330, 331, 332, 0, 0, 0,
	0, 333, 334, 336, 0, 0, 335, 528, 529, 0,
	530, 0, 337, 0, 531, 0, 338, 339, 340, 0,
	341, 0, 0, 0, 342, 343, 344, 345, 346, 0,
	348, 347, 0, 349, 532, 0, 350, 351, 0, 0,
	352, 353, 354, 0, 0, 355, 356, 357, 358, 0,
	359, 360, 362, 364, 361, 363, 368, 365, 366, 367,
	370, 0, 369, 0, 371, 372, 373, 376, 377, 375,
	0, 374, 0, 0, 0, 378, 0, 533, 379, 534,
	381, 382, 0, 0, 383, 0, 0, 0, 385, 386,
	387, 0, 0, 388, 389, 535, 0, 390, 0, 536,
	391, 392, 384, 393, 394, 395, 396, 397, 398, 399,
	0, 400, 401, 537, 538, 539, 402, 540, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 410, 411, 412,
	541, 414, 413, 415, 0, 0, 0, 0, 0, 0,
	416, 0, 418, 419, 420, 417, 421, 422, 423, 424,
	0, 425, 426, 427, 0, 428, 429, 430, 431, 542,
	432, 0, 433, 439, 440, 434, 435, 441, 442, 443,
	444, 445, 0, 447, 448, 446, 449, 450, 451, 0,
	0, 436, 437, 453, 454, 0, 455, 456, 543, 0,
	457, 0, 458, 459, 460, 461, 438, 462, 467, 544,
	463, 464, 465, 466, 545, 0, 469, 470, 0, 468,
	0, 471, 472, 473, 474, 475, 476, 305, 477, 0,
	478, 546, 547, 548, 549, 0, 485, 0, 479, 480,
	550, 481, 551, 0, 482, 483, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 492, 493, 491, 494, 0,
	495, 0, 0, 496, 497, 498, 552, 553, 554, 231,
	500, 499, 555, 0, 0, 0, 0, 501, 502, 556,
	503, 504, 505, 0, 0, 0, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 245, 246, 248, 247, 249,
	250, 251, 507, 508, 0, 509, 252, 510, 0, 253,
	254, 255, 256, 257, 0, 0, 0, 258, 511, 512,
	513, 0, 259, 260, 514, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 267, 0, 0, 269, 270, 271,
	268, 0, 272, 0, 273, 274, 275, 0, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 0, 0, 279,
	280, 281, 282, 0, 283, 515, 516, 0, 287, 284,
	285, 0, 288, 286, 0, 289, 290, 0, 0, 291,
	292, 293, 0, 294, 295, 0, 296, 297, 0, 298,
	299, 517, 300, 301, 302, 304, 306, 303, 307, 308,
	309, 310, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 520, 0, 0, 0, 314, 0,
	315, 0, 0, 0, 316, 317, 521, 522, 318, 319,
	0, 320, 523, 0, 524, 321, 0, 322, 323, 324,
	325, 326, 1349, 526, 527, 380, 0, 327, 328, 0,
	329, 330, 331, 332, 0, 0, 0, 0, 333, 334,
	336, 0, 0, 335, 528, 529, 0, 530, 0, 337,
	0, 531, 0, 338, 339, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 0, 348, 347, 0,
	349, 532, 0, 350, 351, 0, 0, 352, 353, 354,
	0, 0, 355, 356, 357, 358, 0, 359, 360, 362,
	364, 361, 363, 368, 365, 366, 367, 370, 0, 369,
	0, 371, 372, 373, 376, 377, 375, 0, 374, 0,
	0, 0, 378, 0, 533, 379, 534, 381, 382, 0,
	0, 383, 0, 0, 0, 385, 386, 387, 0, 0,
	388, 389, 535, 0, 390, 0, 536, 391, 392, 384,
	393, 394, 395, 396, 397, 398, 399, 0, 400, 401,
	537, 538, 539, 402, 540, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 410, 411, 412, 541, 414, 413,
	415, 0, 0, 0, 0, 0, 0, 416, 0, 418,
	419, 420, 417, 421, 422, 423, 424, 0, 425, 426,
	427, 0, 428, 429, 430, 431, 542, 432, 0, 433,
	439, 440, 434, 435, 441, 442, 443, 444, 445, 0,
	447, 448, 446, 449, 450, 451, 0, 452, 436, 437,
	453, 454, 0, 455, 456, 543, 0, 457, 0, 458,
	459, 460, 461, 438, 462, 467, 544, 463, 464, 465,
	466, 545, 0, 469, 470, 0, 468, 0, 471, 472,
	473, 474, 475, 476, 305, 477, 0, 478, 546, 547,
	548, 549, 0, 485, 0, 479, 480, 550, 481, 551,
	0, 482, 483, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 492, 493, 491, 494, 0, 495, 0, 0,
	496, 497, 498, 552, 553, 554, 231, 500, 499, 555,
	0, 0, 0, 0, 501, 502, 556, 503, 504, 505,
	0, 0, 0, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 245, 246, 248, 247, 249, 250, 251, 507,
	508, 0, 509, 252, 510, 0, 253, 254, 255, 256,
	257, 0, 0, 0, 258, 511, 512, 513, 0, 259,
	260, 514, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 267, 0, 0, 269, 270, 271, 268, 0, 272,
	0, 273, 274, 275, 0, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 0, 0, 279, 280, 281, 282,
	0, 283, 515, 516, 0, 287, 284, 285, 0, 288,
	286, 0, 289, 290, 0, 0, 291, 292, 293, 0,
	294, 295, 0, 296, 297, 0, 298, 299, 517, 300,
	301, 302, 304, 306, 303, 307, 308, 309, 310, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 520, 0, 0, 0, 314, 0, 315, 0, 0,
	0, 316, 317, 521, 522, 318, 319, 0, 320, 523,
	0, 524, 321, 0, 322, 323, 324, 325, 326, 1289,
	526, 527, 380, 0, 327, 328, 0, 329, 330, 331,
	332, 0, 0, 0, 0, 333, 334, 336, 0, 0,
	335, 528, 529, 0, 530, 0, 337, 0, 531, 0,
	338, 339, 340, 0, 341, 0, 0, 0, 342, 343,
	344, 345, 346, 0, 348, 347, 0, 349, 532, 0,
	350, 351, 0, 0, 352, 353, 354, 0, 0, 355,
	356, 357, 358, 0, 359, 360, 362, 364, 361, 363,
	368, 365, 366, 367, 370, 0, 369, 0, 371, 372,
	373, 376, 377, 375, 0, 374, 0, 0, 0, 378,
	0, 533, 379, 534, 381, 382, 0, 0, 383, 0,
	0, 0, 385, 386, 387, 0, 0, 388, 389, 535,
	0, 390, 0, 536, 391, 392, 384, 393, 394, 395,
	396, 397, 398, 399, 0, 400, 401, 537, 538, 539,
	402, 540, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 410, 411, 412, 541, 414, 413, 415, 0, 0,
	0, 0, 0, 0, 416, 0, 418, 419, 420, 417,
	421, 422, 423, 424, 0, 425, 426, 427, 0, 428,
	429, 430, 431, 542, 432, 0, 433, 439, 440, 434,
	435, 441, 442, 443, 444, 445, 0, 447, 448, 446,
	449, 450, 451, 0, 452, 436, 437, 453, 454, 0,
	455, 456, 543, 0, 457, 0, 458, 459, 460, 461,
	438, 462, 467, 544, 463, 464, 465, 466, 545, 0,
	469, 470, 0, 468, 0, 471, 472, 473, 474, 475,
	476, 305, 477, 0, 478, 546, 547, 548, 549, 0,
	485, 0, 479, 480, 550, 481, 551, 0, 482, 483,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 492,
	493, 491, 494, 0, 495, 0, 0, 496, 497, 498,
	552, 553, 554, 231, 500, 499, 555, 0, 0, 0,
	0, 501, 502, 556, 503, 504, 505, 0, 0, 0,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 245,
	246, 248, 247, 249, 250, 251, 507, 508, 0, 509,
	252, 510, 0, 253, 254, 255, 256, 257, 0, 0,
	0, 258, 511, 512, 513, 0, 259, 260, 514, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 267, 0,
	0, 269, 270, 271, 268, 0, 272, 0, 273, 274,
	275, 0, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 281, 282, 0, 283, 515,
	516, 0, 287, 284, 285, 0, 288, 286, 0, 289,
	290, 0, 0, 291, 292, 293, 0, 294, 295, 0,
	296, 297, 0, 298, 299, 517, 300, 301, 302, 304,
	306, 303, 307, 308, 309, 310, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 520, 0,
	0, 0, 314, 0, 315, 0, 0, 0, 316, 317,
	521, 522, 318, 319, 0, 320, 523, 0, 524, 321,
	0, 322, 323, 324, 325, 326, 525, 526, 527, 380,
	0, 327, 328, 0, 329, 330, 331, 332, 0, 0,
	0, 0, 333, 334, 336, 0, 0, 335, 528, 529,
	0, 530, 0, 337, 0, 531, 0, 338, 339, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	0, 348, 347, 0, 349, 532, 0, 350, 351, 0,
	0, 352, 353, 354, 0, 0, 355, 356, 357, 358,
	0, 359, 360, 362, 364, 361, 363, 368, 365, 366,
	367, 370, 0, 369, 0, 371, 372, 373, 376, 377,
	375, 0, 374, 0, 0, 0, 378, 0, 533, 379,
	534, 381, 382, 0, 0, 383, 0, 0, 0, 385,
	386, 387, 0, 0, 388, 389, 535, 0, 390, 0,
	536, 391, 392, 384, 393, 394, 395, 396, 397, 398,
	399, 0, 400, 401, 537, 538, 539, 402, 540, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 410, 411,
	412, 541, 1033, 413, 415, 0, 0, 0, 0, 0,
	0, 416, 0, 418, 419, 420, 417, 421, 422, 423,
	424, 0, 425, 426, 427, 0, 428, 429, 430, 431,
	542, 432, 0, 433, 439, 440, 434, 435, 441, 442,
	443, 444, 445, 0, 447, 448, 446, 449, 450, 451,
	0, 452, 436, 437, 453, 454, 0, 455, 456, 543,
	0, 457, 0, 458, 459, 460, 461, 438, 462, 467,
	544, 463, 464, 465, 466, 545, 0, 469, 470, 0,
	468, 0, 471, 472, 473, 474, 475, 476, 305, 477,
	0, 478, 546, 547, 548, 549, 0, 485, 0, 479,
	480, 550, 481, 551, 0, 482, 483, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 492, 493, 491, 494,
	0, 495, 0, 0, 496, 497, 498, 552, 553, 554,
	231, 500, 499, 555, 0, 0, 0, 0, 501, 502,
	556, 503, 504, 505, 0, 0, 0, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 245, 246, 248, 247,
	249, 250, 251, 507, 508, 0, 509, 252, 510, 0,
	253, 254, 255, 256, 257, 0, 0, 0, 258, 511,
	512, 513, 0, 259, 260, 514, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 267, 0, 0, 269, 270,
	271, 268, 0, 272, 0, 273, 274, 275, 0, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 0, 0,
	279, 280, 281, 282, 0, 283, 515, 516, 0, 287,
	284, 285, 0, 288, 286, 0, 289, 290, 0, 0,
	291, 292, 293, 0, 294, 295, 0, 296, 297, 0,
	298, 299, 517, 300, 301, 302, 304, 306, 303, 307,
	308, 309, 310, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 520, 0, 0, 0, 314,
	0, 315, 0, 0, 0, 316, 317, 521, 522, 318,
	319, 0, 320, 523, 0, 524, 0, 0, 322, 323,
	324, 325, 326, 525, 526, 527, 380, 0, 327, 328,
	0, 329, 330, 331, 332, 0, 0, 0, 0, 333,
	334, 336, 0, 0, 335, 528, 529, 0, 530, 0,
	337, 0, 531, 0, 338, 339, 340, 0, 341, 0,
	0, 0, 342, 343, 344, 345, 346, 0, 348, 347,
	0, 349, 532, 0, 350, 351, 0, 0, 352, 353,
	354, 0, 0, 355, 356, 357, 358, 0, 359, 360,
	362, 364, 361, 363, 368, 365, 366, 367, 370, 0,
	369, 0, 371, 372, 373, 376, 377, 375, 0, 374,
	0, 0, 0, 378, 0, 533, 379, 534, 381, 382,
	0, 0, 383, 0, 0, 0, 385, 386, 387, 0,
	0, 388, 389, 535, 0, 390, 0, 536, 391, 392,
	384, 393, 394, 0, 396, 397, 398, 399, 0, 400,
	401, 537, 538, 539, 402, 540, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 0, 411, 412, 541, 414,
	413, 415, 0, 0, 0, 0, 0, 0, 416, 0,
	418, 419, 420, 417, 421, 422, 423, 424, 0, 425,
	426, 427, 0, 428, 429, 430, 431, 542, 0, 0,
	433, 439, 440, 434, 435, 441, 442, 443, 444, 445,
	0, 447, 448, 446, 449, 450, 451, 0, 452, 436,
	437, 453, 454, 0, 455, 456, 543, 0, 457, 0,
	458, 459, 460, 461, 438, 462, 467, 544, 463, 464,
	465, 466, 545, 0, 469, 470, 0, 468, 0, 471,
	472, 473, 474, 475, 476, 305, 477, 0, 478, 546,
	547, 548, 549, 0, 485, 0, 479, 480, 550, 481,
	551, 0, 482, 483, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 492, 493, 491, 494, 0, 495, 0,
	0, 496, 497, 498, 552, 553, 554, 0, 500, 499,
	555, 0, 0, 0, 0, 501, 502, 556, 503, 504,
	505, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1583, 1578, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 1547, 1548, 0, 1580, 1581, 1582,
	1590, 1591, 1592, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 1583, 1578, 0, 0, 0,
	1569, 0, 0, 1550, 0, 0, 0, 0, 1566, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 1566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 1597, 1572, 1573, 1574, 1575, 0,
	1577, 1579, 0, 0, 0, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 1594, 0, 0,
	0, 0, 0, 0, 1564, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 1597, 0, 0,
	1585, 0, 0, 1577, 1579, 0, 0, 0, 0, 0,
	0, 1570, 0, 0, 0, 0, 0, 0, 1593, 0,
	1594, 0, 0, 0, 0, 0, 0, 1564, 1565, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 1570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 1547, 1548,
	0, 1580, 1581, 1582, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 1588, 0, 1583,
	1578, 0, 0, 0, 0, 0, 0, 1550, 0, 0,
	0, 0, 0, 0, 1596, 0, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 1561,
	1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551,
	1552, 1553, 1554, 1556, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 2723, 0, 0, 0, 0, 0, 1572,
	1573, 1574, 1575, 0, 0, 0, 0, 0, 1586, 1555,
	0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 2183, 0, 1587, 0,
	0, 1597, 0, 0, 0, 0, 0, 1577, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 1594, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 0, 0, 0, 0, 1547, 1548,
	0, 1580, 1581, 1582, 1590, 1591, 1592, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1570, 1583,
	1578, 0, 0, 0, 0, 0, 0, 1550, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1571, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	1573, 1574, 1575, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 1588, 1547, 1548, 0, 1580, 1581,
	1582, 1590, 1591, 1592, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 1578, 1587, 0,
	0, 1597, 0, 0, 1550, 0, 0, 1577, 1579, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 1594, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 1585, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 1570, 0,
	0, 0, 1586, 0, 0, 0, 1561, 1562, 1568, 1589,
	1567, 1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554,
	1556, 1557, 0, 1595, 0, 0, 3808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 1573, 1574, 1575,
	0, 0, 0, 0, 0, 0, 1555, 0, 0, 0,
	0, 0, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 1583, 1578, 1587, 0, 0, 1597, 0,
	0, 1550, 0, 0, 1577, 1579, 0, 0, 1596, 0,
	1571, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 1594, 0, 0, 0, 0, 0, 0, 1564, 1565,
	0, 1549, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 1585, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 1570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 1573, 1574, 1575, 0, 0, 0,
	0, 0, 1586, 1555, 0, 0, 1561, 1562, 1568, 1589,
	1567, 1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554,
	1556, 1557, 0, 0, 0, 0, 3804, 1576, 0, 0,
	0, 0, 1587, 0, 0, 1597, 0, 0, 0, 0,
	0, 1577, 1579, 0, 0, 0, 0, 1571, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 1594, 0,
	0, 0, 0, 0, 0, 1564, 1565, 0, 0, 0,
	0, 1588, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591,
	1592, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1570, 1583, 1578, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 1584, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1586,
	0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 0,
	1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0,
	0, 0, 0, 3713, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 1573, 1574, 1575, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 0, 0, 1588, 1547,
	1548, 0, 1580, 1581, 1582, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1578, 1587, 0, 0, 1597, 0, 0, 1550, 0,
	0, 1577, 1579, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 1594, 0,
	0, 0, 0, 0, 0, 1564, 1565, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1569, 0,
	0, 1585, 0, 0, 0, 0, 1566, 0, 0, 0,
	0, 0, 1570, 0, 0, 0, 1586, 0, 0, 0,
	1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559,
	1551, 1552, 1553, 1554, 1556, 1557, 0, 1595, 0, 0,
	3712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1572, 1573, 1574, 1575, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 0, 0, 0, 1547, 1548, 0, 1580,
	1581, 1582, 1590, 1591, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 1583, 1578, 1587,
	0, 0, 1597, 0, 0, 1550, 0, 0, 1577, 1579,
	0, 0, 1596, 0, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 1594, 0, 0, 0, 0,
	0, 0, 1564, 1565, 0, 1549, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 1585, 0,
	0, 0, 0, 1566, 0, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1572, 1573, 1574,
	1575, 0, 0, 0, 0, 0, 1586, 1555, 0, 0,
	1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559,
	1551, 1552, 1553, 1554, 1556, 1557, 0, 0, 0, 0,
	3567, 1576, 0, 0, 0, 0, 1587, 0, 0, 1597,
	0, 0, 0, 0, 0, 1577, 1579, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 1594, 0, 0, 0, 0, 0, 0, 1564,
	1565, 0, 0, 0, 0, 1588, 1547, 1548, 0, 1580,
	1581, 1582, 1590, 1591, 1592, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 1583, 1578, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 1561, 1562, 1568,
	1589, 1567, 1563, 0, 1560, 1558, 1559, 1551, 1552, 1553,
	1554, 1556, 1557, 0, 0, 0, 0, 3441, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 1572, 1573, 1574,
	1575, 0, 0, 0, 0, 0, 0, 1555, 0, 0,
	0, 0, 1588, 1547, 1548, 0, 1580, 1581, 1582, 1590,
	1591, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1583, 1578, 1587, 0, 0, 1597,
	0, 0, 1550, 0, 0, 1577, 1579, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 1594, 0, 0, 0, 0, 0, 0, 1564,
	1565, 0, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1569, 0, 0, 1585, 0, 0, 0, 0,
	1566, 0, 0, 0, 0, 0, 1570, 0, 0, 0,
	1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563,
	0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 1595, 0, 0, 3387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1572, 1573, 1574, 1575, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 1583, 1578, 1587, 0, 0, 1597, 0, 0, 1550,
	0, 0, 1577, 1579, 0, 0, 1596, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 1594,
	0, 0, 0, 0, 0, 0, 1564, 1565, 0, 1549,
	0, 0, 1588, 0, 0, 0, 0, 0, 0, 1569,
	0, 0, 1585, 0, 0, 0, 0, 1566, 0, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1572, 1573, 1574, 1575, 0, 0, 0, 0, 0,
	1586, 1555, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563,
	0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 0, 0, 0, 3386, 1576, 0, 0, 0, 0,
	1587, 0, 0, 1597, 0, 0, 0, 0, 0, 1577,
	1579, 0, 0, 0, 0, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1594, 0, 0, 0,
	0, 0, 0, 1564, 1565, 0, 0, 0, 0, 1588,
	1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1570, 1583, 1578, 0, 0, 0, 0, 0, 0, 1550,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 1569,
	0, 0, 0, 0, 0, 0, 0, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558,
	1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 0, 0,
	0, 3385, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 0, 0, 0, 0, 0, 0,
	0, 1572, 1573, 1574, 1575, 0, 0, 0, 0, 0,
	0, 1555, 0, 0, 0, 0, 1588, 1547, 1548, 0,
	1580, 1581, 1582, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 1578,
	1587, 0, 0, 1597, 0, 0, 1550, 0, 0, 1577,
	1579, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1594, 0, 0, 0,
	0, 0, 0, 1564, 1565, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 1585,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	1570, 0, 0, 0, 1586, 0, 0, 0, 1561, 1562,
	1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551, 1552,
	1553, 1554, 1556, 1557, 0, 1595, 0, 0, 3118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1572, 1573,
	1574, 1575, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 1547, 1548, 0, 1580, 1581, 1582,
	1590, 1591, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1576, 0, 0, 1583, 1578, 1587, 0, 0,
	1597, 0, 0, 1550, 0, 0, 1577, 1579, 0, 0,
	1596, 0, 1571, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 1594, 0, 0, 0, 0, 0, 0,
	1564, 1565, 0, 1549, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 1585, 0, 0, 0,
	0, 1566, 0, 0, 0, 0, 0, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 1573, 1574, 1575, 0,
	0, 0, 0, 0, 1586, 1555, 0, 0, 1561, 1562,
	1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551, 1552,
	1553, 1554, 1556, 1557, 0, 0, 0, 0, 2721, 1576,
	0, 0, 0, 0, 1587, 0, 0, 1597, 0, 0,
	0, 0, 0, 1577, 1579, 0, 0, 0, 0, 1571,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	1594, 0, 0, 0, 0, 0, 0, 1564, 1565, 0,
	0, 0, 0, 1588, 1547, 1548, 0, 1580, 1581, 1582,
	1590, 1591, 1592, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 1583, 1578, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 1566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567,
	1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556,
	1557, 0, 0, 0, 0, 2720, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 1573, 1574, 1575, 0,
	0, 0, 0, 0, 0, 1555, 0, 0, 0, 0,
	1588, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1583, 1578, 1587, 0, 0, 1597, 0, 0,
	1550, 0, 0, 1577, 1579, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	1594, 0, 0, 0, 0, 0, 0, 1564, 1565, 0,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 1585, 0, 0, 0, 0, 1566, 0,
	0, 0, 0, 0, 1570, 0, 0, 0, 1586, 0,
	0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 1595,
	0, 0, 2719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 1587, 0, 0, 1597, 0, 0, 0, 0, 0,
	1577, 1579, 0, 0, 0, 0, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 1594, 0, 0,
	0, 0, 0, 0, 1564, 1565, 0, 0, 0, 0,
	1588, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 1583, 1578, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0, 0,
	0, 0, 2718, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	0, 0, 1555, 3930, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 1597, 0, 0, 0, 0, 0,
	1577, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 1594, 0, 0,
	0, 0, 0, 0, 1564, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 0, 0, 0, 1586, 0, 0, 0, 1561,
	1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551,
	1552, 1553, 1554, 1556, 1557, 0, 1595, 2685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3929, 1547,
	1548, 0, 1580, 1581, 1582, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1578, 0, 1576, 0, 0, 2656, 0, 1550, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 1588, 1569, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 0, 1547,
	1548, 0, 1580, 1581, 1582, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1578, 0, 0, 0, 0, 0, 2657, 1550, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	1572, 1573, 1574, 1575, 0, 0, 0, 0, 1569, 0,
	1555, 0, 0, 0, 0, 1586, 1566, 0, 0, 1561,
	1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551,
	1552, 1553, 1554, 1556, 1557, 0, 0, 0, 0, 1587,
	0, 0, 1597, 0, 0, 0, 0, 0, 1577, 1579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 1594, 0, 0, 0, 0,
	0, 0, 1564, 1565, 0, 0, 0, 0, 0, 0,
	1572, 1573, 1574, 1575, 0, 0, 0, 0, 1585, 0,
	1555, 0, 2781, 0, 0, 2780, 0, 2303, 0, 1570,
	0, 0, 0, 0, 1547, 1548, 0, 1580, 1581, 1582,
	1590, 1591, 1592, 0, 0, 0, 0, 0, 0, 1587,
	0, 0, 1597, 0, 1595, 1583, 1578, 0, 1577, 1579,
	2302, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	1596, 1584, 0, 1593, 0, 1594, 0, 0, 0, 0,
	0, 0, 1564, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 1585, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 1570,
	0, 1566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 1573, 1574, 1575, 0,
	0, 0, 0, 0, 0, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 1597, 0, 0,
	0, 1571, 0, 1577, 1579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	1594, 0, 0, 0, 0, 1588, 0, 1564, 1565, 0,
	0, 0, 0, 1586, 0, 0, 0, 1561, 1562, 1568,
	1589, 1567, 1563, 1585, 1560, 1558, 1559, 1551, 1552, 1553,
	1554, 1556, 1557, 0, 1570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 1561, 1562, 1568,
	1589, 1567, 1563, 0, 1560, 1558, 1559, 1551, 1552, 1553,
	1554, 1556, 1557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 1548, 0,
	1580, 1581, 1582, 1590, 1591, 1592, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 1578,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	1588, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560,
	1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 1572, 1573,
	1574, 1575, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 1547, 1548, 0, 1580, 1581, 1582, 1590,
	1591, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1583, 1578, 0, 1587, 0, 0,
	1597, 0, 1550, 0, 0, 0, 1577, 1579, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 1594, 0, 0, 0, 0, 0, 0,
	1564, 1565, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1569, 0, 0, 0, 1585, 0, 0, 0,
	1566, 0, 0, 0, 0, 0, 0, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1584,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1572, 1573, 1574, 1575, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 1587, 0, 0, 1597, 0, 0, 0,
	0, 0, 1577, 1579, 0, 0, 0, 0, 0, 1571,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 1594,
	0, 0, 0, 0, 0, 0, 1564, 1565, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567,
	1563, 0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556,
	1557, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 1548, 0, 1580,
	1581, 1582, 1590, 1591, 1592, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1583, 1578, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 0, 1588,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 3099, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 1561, 1562, 1568, 1589, 1567, 1563, 0, 1560, 1558,
	1559, 1551, 1552, 1553, 1554, 1556, 1557, 1572, 1573, 1574,
	1575, 0, 0, 0, 0, 0, 0, 1555, 0, 0,
	0, 0, 2787, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 1597,
	0, 0, 1583, 1578, 0, 1577, 1579, 2782, 0, 0,
	1550, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	1593, 0, 1594, 0, 0, 0, 0, 0, 0, 1564,
	1565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 1570, 0, 1566, 0,
	0, 1547, 1548, 0, 1580, 1581, 1582, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 1583, 1578, 0, 0, 0, 0, 0, 0,
	1550, 0, 0, 0, 0, 0, 0, 1596, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	1569, 0, 1555, 0, 0, 0, 0, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 1597, 0, 0, 0, 1571, 0,
	1577, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 1594, 0, 0,
	0, 0, 1588, 0, 1564, 1565, 0, 0, 0, 0,
	0, 0, 1572, 1573, 1574, 1575, 0, 0, 0, 0,
	1585, 0, 1555, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 1597, 0, 1595, 0, 0, 0,
	1577, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 1593, 0, 1594, 0, 0,
	0, 0, 0, 0, 1564, 1565, 0, 0, 0, 0,
	1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563,
	1585, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 1570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 2749, 0, 0, 1547, 1548, 0, 1580, 1581,
	1582, 1590, 1591, 1592, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 1578, 0, 0,
	0, 2722, 0, 1576, 1550, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 1588, 0, 0,
	0, 0, 1566, 0, 0, 1586, 0, 0, 0, 1561,
	1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551,
	1552, 1553, 1554, 1556, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 1573, 1574, 1575,
	0, 0, 0, 0, 0, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 1561,
	1562, 1568, 1589, 1567, 1563, 0, 1560, 1558, 1559, 1551,
	1552, 1553, 1554, 1556, 1557, 1587, 0, 0, 1597, 0,
	0, 0, 0, 0, 1577, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 1594, 0, 0, 0, 0, 0, 0, 1564, 1565,
	0, 0, 0, 0, 0, 1547, 1548, 0, 1580, 1581,
	1582, 1590, 1591, 1592, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1570, 1583, 1578, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 1584, 0, 0,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 1548, 0, 1580,
	1581, 1582, 1590, 1591, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 1578, 0,
	0, 0, 0, 0, 0, 1550, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 1571, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 1573, 1574, 1575,
	0, 0, 0, 0, 0, 1549, 1555, 0, 0, 0,
	0, 1588, 0, 0, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 1597, 0,
	0, 0, 0, 0, 1577, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 1594, 0, 0, 0, 0, 0, 0, 1564, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 1572, 1573, 1574,
	1575, 0, 0, 0, 0, 1570, 0, 1555, 0, 1586,
	0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563, 0,
	1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 0,
	1595, 0, 0, 0, 0, 0, 1587, 0, 0, 1597,
	0, 0, 0, 0, 0, 1577, 1579, 1584, 0, 794,
	0, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 1594, 0, 0, 0, 0, 0, 0, 1564,
	1565, 0, 0, 0, 801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	813, 799, 0, 0, 0, 0, 1570, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 800, 0, 1571, 0, 0,
	803, 1595, 0, 0, 0, 837, 0, 0, 0, 0,
	0, 0, 0, 810, 811, 0, 0, 0, 0, 824,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 832, 805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 830, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 806, 0, 0, 0, 0, 0, 1586,
	0, 798, 1588, 1561, 1562, 1568, 1589, 1567, 1563, 0,
	1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557, 807,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 814, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 1561, 1562, 1568, 1589, 1567, 1563,
	0, 1560, 1558, 1559, 1551, 1552, 1553, 1554, 1556, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 802, 0, 0, 0, 828, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 0,
	0, 0, 822, 0, 0, 0, 0, 818, 0, 0,
	0, 0, 0, 819, 0, 0, 796, 0, 834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 0, 0, 823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827,
}
var sqlPact = [...]int{

	320, -1000, -1000, -1000, -1000, 233, -1000, -1000, 230, 226,
	223, 222, 221, 220, 217, 216, -1000, -1000, -1000, -1000,
	-1000, -1000, 214, -1000, -1000, 211, -1000, 209, 208, 204,
	-1000, -1000, 199, -1000, 198, -1000, -1000, -1000, -1000, 191,
	186, 185, 70920, 70457, 71377, 2024, 85195, 75045, 2092, 63530,
	84732, 63067, 84269, 83806, 182, -1000, 83343, 179, 176, 175,
	-1000, 82880, -1000, 1587, -1000, 173, 3999, 52392, 172, 171,
	169, 2256, 159, -1000, 157, 152, -1000, 9216, 1500, -1000,
	150, 148, -1000, 6868, 569, 74125, 146, 145, 2261, 144,
	141, 51928, 140, 136, 2166, 2529, -1000, -1000, 1795, -1000,
	-1000, 135, 133, 132, 130, 123, 122, 121, 120, 119,
	-1000, 118, 116, 115, 114, 113, 106, 104, -1000, 100,
	97, 95, 94, 92, 90, 88, 87, 84, 82, 81,
	80, -1000, 97147, 79, 1709, 1505, 1502, 1496, 1495, 1493,
	937, 76, 75, 74, 73, 72, 71, 69, 66, -1000,
	63, 62, 60, 58, 49, 48, 47, 46, 154, 39,
	38, 33, 32, 29, 28, 1917, -1000, 1398, 1603, 24501,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 90679, 85652, 26, -95, 25, -1000, 2922,
	939, 43570, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 303, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 509,
	1644, 731, -1000, -1000, -1000, 82423, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2023, -120, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 729, -1000, 2022, 225, 1954, -1000, -1000,
	-1000, -1000, -1000, 85652, -1000, -1000, 3326, 3325, 1864, 727,
	81966, -1000, 1454, -1000, 893, 27435, -1000, 1237, -1000, 27435,
	301, -1000, -1000, -1000, -1000, -1000, -1000, 3324, 3322, 3321,
	3320, -1000, -1000, 62604, 18603, 62141, 61678, 81503, 18130, 69994,
	69531, 57988, -1000, -1000, -1000, 1230, -1000, -1000, -1000, -1000,
	-1000, -1000, -4, 55623, 3133, 85652, -1000, 298, -1000, -1000,
	-1000, -1000, -1000, -1000, 36880, 862, 36381, 860, 35882, 772,
	-1000, -1000, -1000, 57515, -1000, 3319, 3318, 1061, 3317, 2867,
	90222, 1583, 3316, 1652, 1165, 983, 3315, 3314, 3313, 3310,
	3309, 3308, 1295, 81040, 2587, 80577, 1584, 57042, 69068, 71377,
	2303, 80114, 1287, 1251, -1000, -1000, -1000, -1000, 2691, 2526,
	2522, 48705, -1000, -1000, 3307, 3305, 3299, 3295, 3293, 89765,
	1579, 3292, 2188, 3284, 3279, 3277, 3274, 3262, 3261, 3259,
	3254, -1000, 68605, 68142, 67679, 2976, 79651, 67216, 56569, 35383,
	1439, -1000, -1000, -1000, 45436, 6021, 5598, 79188, 46856, 71377,
	71377, -1000, -1000, -1000, -1000, -1000, 34884, 837, 34385, 1360,
	-1000, -1000, 45914, 2543, -1000, -1000, -1000, -1000, 33886, 679,
	33387, 938, 85652, -1000, 2585, 1797, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2521, 1461, 3137, 56096,
	1793, 1283, 2943, 2690, 2689, 1405, 2250, 2679, 2672, 2652,
	2651, 2650, 1565, 2221, 699, 24002, 1499, 1367, 2645, 2636,
	3176, 1765, 1735, 1728, 61215, 3253, 3251, 2882, 2628, 2617,
	2541, -1000, -1000, -1000, -1000, 1335, -1000, -1000, -1000, 64444,
	-1000, -1000, 1137, -1000, -1000, 1137, -1000, -1000, -1000, -1000,
	-1000, 1229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1398, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1817, -1000, 1814, -1000, -1000, 2195, 2880, 2880,
	2880, 2979, 453, 436, -1000, 154, -1000, -1000, 96854, -1000,
	-1000, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 1902, -1000,
	725, -1000, -1000, 780, -1000, 724, 592, -1000, -1000, -1000,
	-1000, -1000, -1000, 722, -1000, -1000, -1000, -1000, -1000, -1000,
	3133, -1000, 21020, -1000, -1000, -1000, 462, 721, 37367, -1000,
	-1000, 3190, 3188, 924, -1000, 297, 904, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2584,
	720, 718, -1000, 715, 712, 711, 701, 698, -1000, -1000,
	-1000, 697, 696, 693, 692, 691, 690, 685, 683, -1000,
	1815, -1000, -1000, -1000, -1000, -1000, -1000, 632, 631, 631,
	631, -1000, 971, -1000, -1000, -1000, 288, 628, 287, 626,
	625, 620, 676, 674, 672, 665, 664, 663, 661, 660,
	652, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 970, -1000, -1000,
	-1000, -1000, -11, 85652, -1000, 509, -11, -1000, -1000, 647,
	-1000, 27922, 27922, 27922, -1000, -1000, 2020, 37367, -1000, 2579,
	-1000, 5, 5, 856, 44494, -1000, 42628, 856, 458, 787,
	48241, -1000, 2539, -1000, -1000, 645, 280, -1000, -1000, -1000,
	-1000, 19074, 2537, 85652, 85652, 71377, 71377, 71377, 2797, 37367,
	-1000, -1000, 52849, 85652, 71834, 3085, 53763, 52849, 85652, 2581,
	-1000, -1000, -1000, 85652, -1000, 37367, -1000, 3084, 1421, 58920,
	3020, -21, -1000, -1000, -1000, -1000, -1000, -1000, 2165, 2159,
	1126, 2044, 1681, -1000, 27435, 2858, -1000, -1000, -1000, 275,
	19074, -1000, -1000, -1000, -1000, -1000, 3032, 2761, 1684, -1000,
	2041, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1696, 2759, -1000, 2986, 2758, 1694, -1000, -1000, 1975, -1000,
	-1000, 2878, -1000, -1000, 1838, 2755, 6, -1000, -1000, 2067,
	-1000, -1000, 944, 2753, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 45914, 55623, -15, -1000, -1000, -1000, -1000,
	-26, -1000, 17657, 96854, -1000, -1000, -1000, -1000, 1588, 96854,
	821, -1000, -1000, 2752, -1000, 96854, 818, -1000, -1000, 2749,
	-1000, 2580, -1000, -1000, -1000, -1000, 3248, -1000, 3247, 2105,
	3246, 3245, 3241, -1000, 1497, 1772, 3236, -1000, 3235, -1000,
	-1000, -1000, -1000, -1000, -1000, 66753, 2012, -1000, -1000, 65827,
	-1000, 2104, -1000, -1000, 66290, 977, -1000, 944, 2102, -1000,
	905, -1000, 3233, 2972, 2359, 944, 2100, -1000, -1000, -1000,
	-1000, -1000, 50085, -1000, 50085, -1000, 50085, -1000, 1394, -1000,
	89308, 5, 5, 3133, -1000, -1000, -1000, -1000, -1000, 2748,
	3232, 3231, 3230, -1000, 85652, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 193, 2745, -1000, -1000, 193, 2744, -1000,
	193, 2743, -1000, 73662, -1000, -1000, 1970, 2737, -1000, 188,
	2731, -1000, -1000, -50, 2730, -1000, -1000, 96854, -1000, -1000,
	-1000, -28, -1000, -1000, -1000, 939, -1000, 44958, -1000, 44958,
	78725, 58459, 907, 681, 51464, 96854, -1000, -1000, -1000, -1000,
	96854, -1000, -1000, -1000, -130, -1000, -1000, 58459, 45914, 96854,
	-1000, -1000, -1000, -1000, 96854, -1000, -1000, -1000, 58459, 65827,
	-1000, 78262, 65370, -1000, -1000, 1293, 2207, -1000, -1000, -1000,
	907, 58459, 58459, 58459, -1000, 77799, -1000, -1000, 1835, 1562,
	2883, 1801, 71377, -1000, 1688, -1000, -1000, -1000, 2929, 2576,
	-1000, 53306, 73205, -1000, 72748, -1000, 72291, -1000, 71377, -1000,
	71377, -1000, 3229, 3228, 3226, -1000, 3225, 2898, 96854, 2890,
	-1000, 2712, 1504, 1498, 85652, -1000, -1000, 85652, -1000, 85652,
	-1000, -1000, -1000, 1326, -1000, -1000, 2161, -1000, -1000, -1000,
	-1000, 71377, -1000, -1000, -1000, -1000, -1000, -1000, 2573, -1000,
	1557, -1000, 1608, -1000, 1290, -1000, -1000, 195, -1000, -1000,
	-21, -1000, 88851, -1000, 2195, -1000, 85652, -1000, 2124, 2551,
	2572, 1415, 2029, 2241, -1000, 32888, 2270, 39802, 2034, 154,
	-1000, -1000, 154, 154, 25475, -1000, -1000, 53763, 53763, 19074,
	1240, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367,
	37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367,
	37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367, 37367,
	37367, 37367, 37367, 37367, 37367, 37367, 1934, 37367, 1215, 37367,
	37367, 37367, 37367, 1790, -1000, -1000, 1766, 551, 1798, -1000,
	3143, 3143, 3143, 520, 520, 96945, 96945, 576, 3223, 780,
	-1000, 37367, -1000, 180, 37367, 19547, -1000, 436, 7422, 2062,
	-1000, 433, 20046, -1000, -1000, -1000, 21020, 592, 32389, 37367,
	960, 96854, -1000, -1000, 1255, 3163, 17186, 2586, 2440, 644,
	774, 769, 23503, 23004, 22505, 22006, 523, 37367, 37367, 37367,
	37367, 37367, 37367, 37367, 37367, -1000, -1000, 3169, -1000, 3163,
	-1000, -1000, -1000, -1000, 3163, 1236, 1235, 3163, -1000, 3163,
	3163, 2460, 2460, 31902, 31403, 30904, 40289, 30405, 37367, 21507,
	29906, 29407, -1000, 85652, -11, 3083, 37367, 162, -1000, 95243,
	-1000, 162, 162, 643, -29, 96854, 2220, 2220, 44032, 2117,
	1914, 1914, 1914, -1000, 856, 13389, 856, 76881, 1931, 856,
	856, 269, 296, 432, 42166, 2579, 76881, 758, 640, 20,
	16, 11, -1000, -1000, 10, 9, -1000, -1000, 71377, 636,
	19547, 19074, 267, 1305, -43, 2289, 2272, 2269, -1000, 2262,
	1591, -45, 1211, -42, -1000, 4226, -51, -1000, 1195, 254,
	3163, -1000, -1000, -1000, -1000, -1000, 3222, 3221, -1000, 968,
	635, 633, 526, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 632, 631, 631, 631, -1000, 288, 628, 287, 626,
	625, 620, -1000, -1000, -1000, -1000, 2536, -26, 71834, 871,
	-52, 1065, -21, -1000, -1000, -1000, 58920, 1137, -1000, 1897,
	-1000, -1000, -1000, -1000, -1000, -1000, 1303, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 924, -1000, -1000, -1000, -1000, -1000,
	-1000, 3161, 3153, -13, -1000, -1000, 19074, -1000, -22, 1453,
	-1000, 60752, 2115, 2886, 2874, 1391, -1000, 1316, 2977, 64444,
	3044, 3074, 111, -1000, 2534, -1000, -1000, 892, 1549, 1209,
	64444, 2986, -1000, 53763, -1000, 2360, 2966, 1292, 1294, 1292,
	1292, 1298, -1000, 64444, 1207, -1000, 1205, -1000, -24, 3030,
	3064, 110, -1000, 2533, 1179, -1000, -1000, 71377, 19074, 1414,
	1406, 1519, 1117, -14, -1000, 3039, 3024, -1000, 1607, -1000,
	58459, 852, -15, 55623, 85652, 248, -1000, 180, 37367, 37367,
	180, 37367, 180, 3015, -1000, -1000, 2728, -1000, -1000, -1000,
	3219, 1736, 2169, -1000, -1000, -1000, 619, 2099, 2532, 85652,
	2327, -16, 71377, -1000, 2727, 2986, 2098, -1000, -1000, 64907,
	-1000, 2726, 637, 3218, -1000, 88394, -1000, 2887, 1245, 2724,
	1014, 841, 3082, -1000, 841, 50542, -1000, 85652, -1000, -1000,
	85652, -1000, -1000, -1000, 3217, -1000, 71377, -1000, -1000, 71377,
	-1000, 71377, -1000, 71377, 187, 2716, -1000, -1000, 85652, -1000,
	71377, 71377, 58459, 58459, 4690, 59838, -54, -59, 429, -1000,
	77342, 85652, 1013, 60295, 85652, 2848, 907, 45914, -1000, -61,
	-130, 907, 907, 852, -1000, 852, -1000, 71377, 2554, -1000,
	907, 907, 907, -1000, -1000, -1000, -1000, 3216, 3215, -1000,
	-1000, -1000, 943, 71377, 85652, 71377, -1000, -1000, 85652, -1000,
	85652, -1000, 943, 85652, 943, 85652, 943, 85652, -1000, -1000,
	-1000, -1000, -1000, -1000, 180, 37367, 1459, -1000, 2553, -1000,
	2552, -1000, 41, -1000, -1000, -1000, -1000, -1000, 1780, 71377,
	71377, 71377, 71377, 85652, 71377, -1000, 64444, -1000, 2124, 2551,
	-1000, -1000, -1000, -1000, -1000, -1000, 1250, 1962, -1000, 2231,
	-1000, 1339, -1000, -1000, -1000, 96854, 40760, -1000, -1000, 96854,
	1606, -1000, 39315, 38828, -1000, -1000, 1573, 71377, 2336, -1000,
	2336, -135, -1000, 94998, 2227, 71377, -1000, -1000, -1000, -1000,
	-1000, 887, 1128, 1128, 1174, 1174, 1174, 1174, 3018, 4436,
	300, 3805, 6234, 6234, 5079, 5079, 5079, 5079, 5079, 6234,
	1779, 520, 520, 1779, 1779, 1779, 1779, 1779, 520, 520,
	520, 6234, 6234, 6234, 96945, 5508, 10581, 37367, 37367, 1115,
	1747, 551, 9723, 37367, 12216, 12216, 12216, 12216, -1000, 2173,
	-1000, -1000, -1000, -1000, 2530, 616, 40289, 40289, -1000, -1000,
	-1000, -1000, 20533, 37367, -1000, -1000, -1000, -1000, 28908, -1000,
	-1000, 94470, -264, 428, -103, 43, -1000, 37367, 37367, 37367,
	426, -1000, 245, 37367, 85652, -1000, 91643, 754, -159, -1000,
	-66, 1300, -1000, 37367, -1000, -1000, 1114, -1000, 1113, 1108,
	1106, -1000, 614, 424, -1000, 243, -1000, 1911, 612, 610,
	37367, -1000, -1000, -1000, -1000, -1000, 94313, -1000, -1000, 94093,
	-1000, -1000, 93936, -1000, -1000, 93779, -1000, -1000, -1000, 96634,
	91600, 12825, 12521, 7060, 12023, 11641, -72, 423, -74, 422,
	883, 879, 412, 389, 386, -75, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -80, 383, -1000, 2527, -103, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 381, -1000, 376,
	-1000, 96330, -103, 375, 5847, -1000, 40289, 40289, 40289, -1000,
	369, -1000, 95078, -1000, 96250, 28421, 28421, 28421, 362, 96085,
	37367, -103, -81, -1000, -82, -1000, -1000, 491, -83, 955,
	27922, 43106, 19074, -1000, 955, 955, 37367, -1000, 37367, 2246,
	-1000, -1000, -1000, 2240, 2160, 2220, 44032, -1000, -1000, -1000,
	-1000, 76881, -1000, 3133, 2374, -1000, 76881, -1000, -1000, 85652,
	509, -1000, 76881, 76881, 19074, 856, -1000, 856, 76881, 734,
	-1000, -1000, -1000, -1000, -1000, 359, 47317, 43, 241, 19074,
	907, -1000, 2325, 2325, 2325, 2325, -1000, -1000, 85652, 3100,
	-1000, 1822, -1000, 53763, -1000, 779, 972, 19074, -1000, -1000,
	-1000, 608, -1000, 3163, 3163, -1000, 3163, 85652, 147, 27435,
	-1000, 1137, -1000, -1000, 1412, -1000, 1754, -1000, 1109, -1000,
	-1000, -1000, -1000, 27435, -1000, 2766, 85652, 85652, 71377, -1000,
	-1000, 2095, 87937, 2089, 53763, 85652, -1000, -1000, 606, 603,
	2214, 2212, 1008, 85652, 85652, 2208, 87480, 87023, 85652, 1792,
	37367, 1854, 2215, 180, 180, -1000, -1000, 180, 600, 1180,
	71377, 71377, 71377, 1691, -1000, -1000, -1000, -1000, -1000, 63987,
	-1000, -1000, 3167, 3165, -1000, 1292, -1000, -1000, -1000, 1292,
	2986, 1687, 71377, 85652, 1846, 180, 180, -1000, -1000, 180,
	599, 19074, 1699, -1000, 2591, 85652, 3187, 85652, 85652, 85652,
	55166, 2911, 86566, 85652, 1607, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54705, 1021, 944, 2367, -1000, -1000, 16715, -1000,
	96854, 96854, -1000, 96854, -1000, 52849, 85652, -1000, 976, 85652,
	60295, 902, 2709, 49628, -26, 907, 58459, 71377, -16, 85652,
	-1000, 2986, 2677, 509, 2087, -1000, -1000, 58459, 597, 3214,
	3213, -1000, 2011, 2081, -1000, -1000, 86109, 2775, 808, 85652,
	955, 44032, 1706, -1000, 47780, 992, 85652, 1632, 91, -1000,
	-1000, -1000, 24, 85652, -1000, 3212, -1000, -1000, 193, 193,
	193, -1000, 71377, 71377, 1970, -1000, 188, -1000, -50, -1000,
	-1000, 4690, 4690, 907, -221, 596, -1000, 844, 843, 46385,
	58459, -90, -1000, -1000, -1000, -1000, -1000, 71377, 85652, 671,
	2356, 85652, -92, -1000, 240, 595, -1000, -1000, -1000, 907,
	2517, -1000, -1000, 949, -1000, 1261, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2, -26, -26, -1000, 943,
	-1000, 943, -1000, 943, -1000, 96854, -1000, 1443, 1413, 85652,
	-1000, 19074, 85652, 71377, 19074, 71377, 2548, 2486, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1039, -1000, 1606, 1961,
	-1000, 592, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2143, -1000, -17, 25475, 2047, -1000, -1000, 71377, 1,
	37367, 37367, 5351, 4559, 37367, 40289, 40289, -1000, 37367, 4034,
	-1000, -1000, -1000, -1000, -1000, 2516, 591, 37367, 53763, 5285,
	898, -1000, 358, 11145, 1779, -1000, 37367, -1000, 357, 26948,
	-1000, 95586, 3, -100, -1000, 13873, -103, -101, -1000, -1000,
	775, -1000, 2771, -1000, 37367, 95742, 2078, 1987, 1627, 1483,
	3163, 3186, 16244, -1000, 51003, 958, 1933, 93559, -1000, -1000,
	-1000, -1000, 53763, 53763, 37367, 37367, -1000, 37367, 37367, 37367,
	-1000, -1000, -1000, 3163, 857, -1000, -1000, -1000, 857, -1000,
	-1000, 1292, -1000, 1292, -1000, 37367, -1000, -1000, 2515, 37367,
	-1000, 53763, 53763, 40289, 40289, 40289, 40289, 40289, 40289, 40289,
	40289, 40289, 40289, 40289, 40289, 40289, 40289, 40289, 40289, 40289,
	40289, 40289, 2196, 40289, 3139, 3139, 3139, -1000, 2437, 2515,
	37367, 37367, 53763, 356, 355, 354, -1000, 37367, -103, -1000,
	-1000, 4690, 588, -1000, 2130, -1000, 2433, -1000, 37367, -1000,
	-141, -1000, 2579, -1000, -1000, 2433, 2433, -108, 96854, 44032,
	44032, -1000, 587, 37367, 2237, -1000, -1000, 750, -262, -1000,
	842, -1000, -1000, -1000, -1000, -1000, 509, -1000, -1000, -1000,
	238, 76881, 76881, 748, -1000, -110, -1000, -1000, -115, -1000,
	3080, 352, 19074, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -26, 1948, 3184, -1000, 3164, 768, 744, 237, 3163,
	351, 350, 348, -26, 85652, -1000, -21, -1000, -1000, -1000,
	37367, -1000, -1000, 2885, 1101, 1099, -1000, 2673, -1000, 2079,
	-1000, 994, -1000, 1786, -1000, 37367, 37367, 584, 583, 3211,
	1804, 3210, 1011, 2671, 1970, 2670, 1970, -1000, -1000, 891,
	-1000, 96854, 581, 580, -1000, -22, 1451, 948, -1000, -1000,
	37367, 37367, 76424, -1000, 396, 2878, 0, -1000, 1097, -1000,
	-1000, -1000, -1000, 2986, 1095, -1000, -1000, -1000, 945, -1000,
	-1000, 37367, -1000, -24, 1094, 3029, 2065, 71377, 1093, -1000,
	1092, -1000, -1000, -1000, -1000, -1000, -1000, 3023, 1970, 2668,
	1105, -1000, -1000, -1000, 54234, -1000, 941, 2503, -1000, 1090,
	3209, 71377, 3208, 347, -117, -25, 53763, 3078, 1976, 556,
	71377, 888, -1000, 3133, -1000, -1000, -1000, -1000, 71377, 3072,
	2666, 944, 3182, -1000, -1000, 71377, 2665, 2009, 2063, 2174,
	808, 59381, -1000, 944, 1919, -40, -1000, 1632, 26449, 2876,
	-118, -1000, -1000, -1000, 955, 50542, 44032, 37367, 3207, -123,
	-1000, -1000, -1000, -1000, -1000, 187, -1000, -1000, -1000, -1000,
	-1000, 75506, 75506, 58459, 58459, 58459, 907, 85652, 85652, 60295,
	-1000, 578, 85652, 85652, 577, -1000, 85652, 85652, 3206, 58459,
	-1000, 180, -1000, 1944, 71377, 15773, -1000, -1000, -1000, -1000,
	-1000, 943, -1000, -1000, 1855, 2033, 1855, 1617, 1614, -1000,
	1959, -1000, -1000, -1000, -1000, 2273, 2895, 19074, 3006, 12216,
	37367, 37367, 403, 504, 482, 12216, 37367, 37367, 53763, 9946,
	-125, 37367, 37367, -1000, 37367, 742, 96854, 3181, 37367, 342,
	341, -1000, -1000, -1000, 3156, -1000, -1000, -1000, 96854, 37367,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, -1000, 189,
	-1000, -1000, -1000, 91136, -1000, 37367, 336, 2964, -1000, 335,
	334, 10527, 4526, 93402, 93245, 93025, 332, -1000, -1000, 331,
	330, 96854, 2437, 96854, -1000, -1000, 889, 889, 1285, 1285,
	1285, 1285, 3139, 456, 1658, 854, 991, 991, 991, 714,
	541, 541, 991, 991, 991, 2493, 2203, 572, 5864, -1000,
	-1000, 96854, 96854, 328, -1000, -1000, -1000, -103, 327, 4690,
	-1000, 2411, 2960, 96854, -1000, 44032, 2411, 2411, -1000, -1000,
	2160, 85652, 96854, 44032, -1000, 2374, -1000, 14355, -1000, 19074,
	-1000, -1000, -1000, -1000, 3133, -1000, 47317, -1000, 571, -1000,
	42, -1000, -1000, 738, 3204, 766, 19074, 325, -1000, -1000,
	-1000, -26, 96854, 85652, 85652, 85652, 2662, -1000, 4000, -1000,
	1008, 92868, -128, -1000, 94998, 37367, 85652, -1000, -1000, 1727,
	2277, 1055, -1000, 2936, 85652, -1000, 85652, -1000, -1000, 85652,
	85652, 71377, 2644, -134, 96854, -27, -1000, 840, -1000, 1254,
	-1000, 15302, 71377, 71377, 2637, -136, 19074, -1000, 3180, 3177,
	2657, 2940, 3175, 85652, -1000, 85652, 71377, 2845, -1000, -1000,
	-1000, 1998, 58459, 45914, -1000, 509, -1000, 2348, -1000, 74582,
	1982, 180, -1000, 75967, 3203, 570, -1000, 1939, -1000, 735,
	2986, 180, 71377, -1000, 323, -31, -1000, 999, 19074, 71377,
	2656, 2178, 808, 59381, -1000, 1245, 2241, -1000, -34, -1000,
	540, 180, 1919, -1000, -40, 96854, -1000, 834, -1000, -1000,
	-142, -1000, -1000, 321, -1000, 2843, 2833, -1000, 2445, 37367,
	568, 567, 85652, 2832, -1000, -1000, -143, -1000, 2103, -1000,
	-1000, -1000, -1000, -1000, 19074, 1531, -1000, 566, 564, -1000,
	-1000, -1000, -1000, 2895, 12216, 12216, 37367, 37367, 37367, 12216,
	9946, -144, -1000, 12216, 12216, -103, -1000, -1000, 95586, -1000,
	-1000, -1000, 96854, -1000, 14831, 1881, -1000, 92711, -1000, 25475,
	-1000, -1000, 37367, 37367, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 40289, 2491, 563, 53763, -1000, -1000, 313, 953,
	37367, 37367, 2579, 953, 953, -1000, -145, -1000, -1000, -1000,
	3133, 42, -1000, -1000, 3202, 19074, 763, -1000, 3201, -1000,
	-1000, -1000, -1000, -1000, 85652, -1000, 85652, -1000, 19074, 85652,
	2423, 2055, -1000, -1000, 2200, 561, 40289, 71377, 812, -1000,
	3089, 2434, 1794, 37367, 2047, -160, -168, 2054, -1000, -1000,
	2053, 37367, -1000, 53763, 560, 1970, 1970, -169, -175, -1000,
	37367, 1081, 85652, 25962, -1000, 3199, 2878, -1000, -1000, 37367,
	1076, -1000, -1000, -1000, 3174, 1970, 19074, -1000, 1970, 1970,
	2940, 1050, -48, 558, -1000, 823, -1000, -1000, -50, 941,
	3065, 1846, 2378, -1000, -1000, -1000, -1000, 2198, -1000, -1000,
	85652, 2194, 908, -176, -1000, 822, 813, -1000, 60295, 902,
	894, -1000, -1000, -1000, 509, -1000, 3142, 554, 85652, 2006,
	552, 19074, -1000, 808, 59381, -1000, 2775, 1632, -1000, 2782,
	85652, 2873, -1000, 2241, 551, -1000, 907, 548, 543, 3081,
	3081, -177, 37367, 37367, -178, 542, 907, -64, -1000, 783,
	760, -1000, -1000, 71377, 71377, 37367, 37367, -1000, 12216, 12216,
	12216, -1000, 310, -1000, -1000, 1919, 2958, -1000, -71, 92491,
	92334, 4692, 40289, 53763, -183, -1000, -1000, 85652, 96854, -103,
	-1000, -1000, -1000, 524, -1000, 3197, -1000, -1000, 1712, -1000,
	-1000, -1000, 85652, 2060, -1000, 1006, 37367, 5864, 531, 37367,
	-1000, 3058, -1000, 2346, 2483, 2348, 530, -1000, -1000, -1000,
	-1000, -1000, 998, 1710, -1000, -1000, 96854, 2940, 37367, -1000,
	-1000, 527, 525, 96854, 522, 806, 2489, -1000, -1000, -1000,
	96854, 519, 3029, -1000, -1000, -1000, -1000, 1970, 71377, 1863,
	1863, 58459, 1739, 180, 902, -1000, 1901, 1982, 517, -1000,
	-1000, 1967, 2251, -1000, 75967, 41702, 41702, 309, 3056, 894,
	-1000, 3124, -1000, 3055, -1000, 37367, -1000, 71377, 37367, 1995,
	59381, -1000, 2174, -1000, 1200, -184, 85652, 1632, -1000, -1000,
	58459, 58459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 998, -186, -193, -1000, 58459, -1000, 2103,
	-1000, 85652, -1000, 85652, -1000, -1000, -194, -195, -1000, 1726,
	37367, 25475, -1000, -1000, 4692, -200, -1000, -102, -1000, 3049,
	-1000, -1000, -1000, -1000, 2655, 2394, 92177, 2132, 85652, 91957,
	-1000, 2465, -1000, -1000, 1846, 85652, 2348, 2386, 71377, 1004,
	-201, 1855, 1855, 37367, 24988, 1900, 37367, -1000, -1000, 2940,
	-1000, -203, -1000, 2444, 2383, -1000, 1967, 71377, 85652, -1000,
	2909, -1000, 2826, -1000, -1000, -1000, 2348, 180, -1000, -1000,
	180, -208, 999, -209, 71377, -1000, 2178, 1388, -1000, 955,
	-1000, -1000, -210, -215, 1794, 998, 955, -216, -1000, -218,
	-223, -1000, -1000, 308, 38341, 38341, 38341, -103, -135, -1000,
	85652, 510, 2627, 933, -1000, 1973, 1666, 307, 1028, -1000,
	-1000, 2434, -224, -1000, 927, 509, -1000, 37367, 998, -225,
	-1000, 990, -226, -1000, 988, -231, -1000, 2456, -1000, -232,
	1970, -1000, 926, 3008, -1000, -1000, -1000, -1000, -1000, 506,
	-233, -1000, -1000, 2082, -1000, 1846, 908, -1000, 998, 489,
	1794, 488, -1000, 50542, -1000, 907, 907, 2348, 1794, -1000,
	907, -1000, -1000, -1000, 2674, -1000, 41231, 1974, 1599, 94690,
	2674, 2674, -1000, -1000, 85652, 2992, -1000, 1994, 1988, 1355,
	-1000, -1000, -1000, -1000, -1000, -1000, 955, -1000, 2988, 2132,
	96854, 2348, -1000, 1855, 2372, -1000, 1855, 2454, -1000, 1891,
	-1000, -1000, -1000, 2640, 3138, 85652, -1000, 85652, 1589, 1546,
	3196, 902, 1967, 1794, 37367, 2348, 37367, -217, -1000, -1000,
	1846, 2348, -1000, -1000, 1575, 3079, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 801, -1000, 2807, -1000, 1024, 1899,
	1899, -1000, 784, 1973, -1000, -1000, 484, -1000, 481, -1000,
	1529, -1000, -1000, -234, -1000, -1000, 3194, -1000, 1967, -1000,
	2348, -239, 1846, -242, -1000, 955, 1846, 1597, -1000, -1000,
	1918, 37854, 37367, -1000, 3105, -1000, -1000, 2217, -1000, 37367,
	2434, 37367, 37367, 1938, 1956, -1000, -1000, 1846, 998, 955,
	1794, -1000, 955, -1000, -1000, -1000, 96854, -1000, -1000, -1000,
	96854, -1000, -244, -247, 49167, -1000, -1000, -1000, 955, 1794,
	-1000, 2348, -1000, 1846, 1075, -221, 75506, -1000, 2348, 1846,
	-1000, 469, -249, 1846, 955, 37367, -1000, 955, -1000, -255,
	-1000, 1846, -1000,
}
var sqlPgo = [...]int{

	0, 3910, 3908, 3905, 3904, 3903, 3902, 3901, 3900, 3897,
	3891, 3888, 3886, 3884, 3878, 3876, 3874, 3872, 3871, 3870,
	3868, 3865, 3864, 3863, 3861, 3860, 3859, 3857, 3856, 3855,
	3853, 3852, 3851, 3847, 3846, 3844, 3842, 3841, 3840, 3839,
	3837, 3836, 3835, 3826, 3823, 3822, 3821, 3819, 38, 3814,
	3813, 3812, 3811, 3810, 3804, 3802, 3801, 3800, 3799, 3798,
	3794, 3793, 3788, 3785, 3783, 3781, 3780, 42, 3779, 234,
	3777, 3775, 3774, 3773, 3772, 3770, 3769, 3768, 3766, 3763,
	3760, 233, 3759, 101, 3756, 3753, 3752, 3751, 3750, 232,
	3749, 3748, 3742, 3740, 240, 3739, 3734, 3732, 3731, 3729,
	3728, 3726, 3724, 3723, 86, 207, 3721, 121, 3719, 3710,
	3709, 3708, 3707, 3706, 3703, 3700, 3697, 3696, 212, 3693,
	227, 3692, 3691, 3688, 3687, 3685, 3684, 3683, 3678, 3675,
	3673, 3672, 3668, 3667, 3665, 3662, 3655, 3654, 3652, 3651,
	3649, 3648, 3645, 3643, 3641, 3635, 3634, 3633, 3632, 3631,
	239, 146, 3630, 3627, 226, 225, 3624, 3623, 3621, 3618,
	3617, 103, 10, 24, 3614, 3612, 58, 49, 45, 100,
	39, 3611, 13, 203, 231, 7947, 220, 3608, 3603, 3601,
	215, 161, 3599, 191, 3598, 3595, 3593, 3592, 77, 65,
	148, 144, 132, 142, 349, 3587, 3585, 71, 52, 40,
	30, 3584, 3581, 3577, 2936, 106, 3576, 222, 196, 131,
	3570, 3568, 3565, 342, 3559, 32, 3558, 192, 74, 93,
	25, 98, 3555, 127, 20, 3554, 158, 41, 3553, 119,
	73, 64, 7116, 7051, 3552, 90, 62, 94, 3159, 155,
	138, 164, 129, 173, 171, 151, 116, 3550, 214, 3545,
	3061, 54, 122, 3540, 3538, 3536, 63, 162, 82, 3533,
	3532, 50, 5, 4, 8, 139, 15, 89, 12, 3531,
	16, 3529, 3528, 3527, 3524, 27, 133, 3520, 236, 3519,
	104, 34, 61, 3517, 18, 176, 3515, 182, 105, 3514,
	3512, 217, 169, 153, 3509, 80, 194, 3508, 3507, 3506,
	3505, 3504, 108, 23, 107, 3501, 3500, 113, 211, 163,
	3499, 47, 3498, 135, 78, 114, 229, 97, 179, 87,
	183, 150, 185, 3496, 3495, 3492, 157, 3491, 3490, 177,
	141, 3489, 3487, 166, 237, 36, 60, 188, 56, 160,
	134, 3485, 167, 3484, 3481, 3480, 238, 147, 172, 1,
	7, 69, 102, 28, 43, 198, 118, 204, 91, 3479,
	4980, 1725, 66, 48, 3476, 110, 96, 53, 88, 140,
	221, 55, 3472, 3471, 1458, 3469, 3467, 3466, 3465, 159,
	3463, 3462, 3460, 115, 187, 154, 3458, 76, 67, 14,
	130, 262, 224, 85, 180, 178, 263, 3457, 149, 3455,
	95, 120, 3453, 165, 210, 3449, 3448, 199, 3447, 125,
	611, 46, 126, 3446, 175, 3445, 3443, 3442, 3441, 3440,
	3439, 3438, 193, 197, 3436, 3435, 3434, 111, 156, 3430,
	218, 136, 143, 75, 33, 3428, 84, 2253, 3427, 190,
	189, 44, 3426, 72, 35, 0, 9724, 8309, 6162, 9440,
	3425, 3432, 3424, 3423, 3422, 181, 117, 3421, 3420, 3419,
	81, 3415, 57, 3414, 3412, 51, 3411, 17, 6, 11,
	21, 19, 195, 99, 3410, 3409, 83, 109, 123, 3408,
	235, 184, 3407, 3406, 3405, 3404, 70, 3400, 31, 3399,
	29, 3398, 3397, 37, 2, 22, 3395, 3390, 200, 3389,
	201, 3388, 128, 3386, 3035, 112, 3385, 3381, 219, 79,
	3378, 216, 3372, 2963, 3370, 3366, 9, 3356, 145, 174,
	3355, 3354, 3353, 137, 3352, 3350, 3343, 213, 3342, 3341,
	26, 3340, 3, 3338, 3337, 168, 2790, 3336, 3333, 59,
	3332, 152,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 8, 8, 8, 36, 36, 9, 9,
	9, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 15, 15, 26, 26, 16, 16, 28, 28,
	17, 17, 29, 29, 508, 508, 20, 31, 21, 32,
	14, 509, 509, 509, 509, 25, 22, 33, 23, 23,
	23, 23, 23, 164, 164, 164, 164, 19, 19, 27,
	27, 191, 191, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 507, 507, 193, 193, 192,
	187, 187, 510, 510, 194, 194, 194, 196, 196, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 411, 411,
	411, 521, 521, 521, 522, 522, 523, 523, 523, 523,
	523, 37, 37, 502, 502, 166, 166, 166, 168, 168,
	167, 167, 167, 58, 58, 515, 515, 516, 516, 514,
	514, 517, 517, 517, 165, 165, 165, 103, 103, 103,
	104, 104, 105, 105, 169, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 85, 85, 443, 443, 444, 444,
	160, 160, 161, 161, 161, 161, 162, 162, 163, 163,
	163, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 40, 41, 41, 41, 41, 41, 41,
	42, 42, 42, 42, 42, 42, 49, 49, 49, 49,
	151, 151, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 525, 525, 526, 526, 527, 527, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 64, 64, 277, 277, 249, 249,
	65, 65, 65, 66, 66, 67, 67, 53, 53, 500,
	500, 292, 292, 402, 402, 69, 69, 312, 312, 70,
	70, 70, 70, 70, 70, 71, 71, 71, 71, 71,
	71, 71, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 78, 78, 78, 79, 79, 79,
	76, 76, 76, 74, 74, 74, 73, 73, 73, 77,
	77, 77, 241, 241, 75, 75, 75, 293, 293, 80,
	80, 80, 80, 250, 81, 81, 81, 81, 81, 81,
	81, 81, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 404, 404, 82, 82, 82,
	372, 372, 86, 86, 86, 327, 327, 87, 87, 87,
	87, 87, 88, 88, 88, 88, 106, 106, 106, 106,
	504, 504, 285, 285, 207, 207, 207, 207, 96, 96,
	96, 96, 97, 97, 97, 98, 98, 156, 156, 112,
	112, 112, 112, 112, 111, 111, 111, 111, 111, 111,
	43, 43, 43, 44, 44, 45, 45, 46, 46, 47,
	47, 48, 48, 48, 48, 48, 114, 114, 518, 518,
	116, 113, 113, 113, 115, 115, 115, 115, 117, 118,
	118, 118, 118, 118, 118, 118, 118, 119, 119, 436,
	436, 301, 301, 434, 434, 452, 452, 435, 435, 254,
	254, 254, 254, 254, 255, 255, 255, 442, 442, 442,
	442, 442, 442, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 157,
	157, 158, 159, 159, 159, 159, 139, 139, 139, 150,
	150, 150, 150, 150, 150, 150, 142, 142, 142, 129,
	129, 121, 121, 121, 121, 121, 125, 125, 125, 125,
	125, 125, 125, 125, 122, 122, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 123, 123, 123, 123, 133, 133,
	133, 133, 334, 334, 334, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 146, 146, 146, 146, 146,
	146, 386, 386, 140, 140, 140, 140, 145, 145, 145,
	145, 317, 317, 137, 137, 137, 138, 138, 138, 143,
	143, 144, 141, 141, 147, 147, 147, 147, 124, 124,
	124, 529, 529, 529, 148, 148, 136, 136, 149, 149,
	149, 149, 149, 149, 149, 149, 135, 135, 135, 134,
	134, 134, 134, 127, 501, 501, 498, 498, 498, 498,
	498, 498, 498, 498, 499, 499, 503, 503, 91, 91,
	91, 91, 91, 99, 99, 99, 99, 99, 92, 92,
	92, 92, 92, 94, 94, 93, 93, 93, 93, 59,
	59, 59, 60, 60, 172, 172, 172, 172, 262, 262,
	262, 262, 170, 170, 171, 171, 61, 61, 530, 530,
	530, 511, 511, 511, 512, 512, 512, 512, 512, 512,
	256, 256, 257, 257, 352, 352, 352, 352, 352, 260,
	260, 260, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 263, 263, 195, 195, 195, 266, 267, 267, 264,
	264, 265, 265, 265, 269, 269, 268, 271, 271, 270,
	351, 461, 461, 463, 463, 463, 463, 463, 463, 463,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 531, 531, 459, 459, 459, 460, 455, 455, 456,
	456, 456, 456, 456, 258, 258, 259, 259, 259, 259,
	457, 458, 283, 283, 389, 462, 462, 464, 464, 466,
	532, 532, 532, 532, 532, 532, 533, 533, 533, 350,
	350, 349, 349, 275, 275, 467, 467, 467, 467, 468,
	468, 468, 468, 468, 471, 470, 469, 469, 469, 469,
	469, 63, 63, 63, 314, 314, 313, 313, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 153, 153, 210, 210, 57, 57, 57,
	12, 12, 12, 513, 513, 513, 62, 62, 62, 62,
	209, 209, 209, 209, 209, 209, 506, 506, 505, 505,
	211, 211, 535, 535, 68, 68, 68, 68, 68, 68,
	68, 405, 405, 406, 406, 56, 56, 56, 56, 56,
	335, 335, 333, 333, 332, 332, 282, 282, 388, 215,
	215, 188, 188, 188, 24, 18, 18, 34, 34, 35,
	35, 30, 30, 519, 519, 520, 520, 95, 95, 100,
	100, 100, 100, 100, 101, 101, 101, 101, 102, 102,
	102, 102, 110, 110, 152, 152, 152, 152, 152, 152,
	152, 38, 38, 38, 38, 50, 50, 50, 50, 108,
	537, 537, 537, 109, 109, 109, 536, 536, 208, 208,
	346, 346, 347, 347, 538, 538, 348, 348, 348, 348,
	202, 201, 203, 203, 55, 55, 55, 197, 197, 198,
	198, 199, 199, 200, 200, 539, 539, 89, 89, 89,
	155, 155, 248, 248, 248, 342, 342, 342, 276, 276,
	221, 221, 345, 345, 343, 343, 343, 343, 311, 311,
	311, 154, 154, 290, 290, 303, 303, 304, 304, 399,
	399, 305, 107, 107, 175, 175, 173, 173, 173, 173,
	173, 173, 173, 173, 180, 180, 181, 181, 182, 182,
	183, 184, 184, 184, 184, 294, 294, 185, 185, 185,
	174, 174, 174, 176, 176, 176, 176, 176, 176, 176,
	179, 179, 179, 179, 186, 186, 186, 178, 178, 478,
	478, 478, 480, 480, 482, 482, 481, 481, 477, 477,
	479, 479, 534, 534, 316, 316, 316, 273, 274, 272,
	272, 280, 280, 278, 279, 279, 281, 281, 387, 387,
	387, 189, 189, 189, 308, 308, 308, 308, 309, 309,
	338, 338, 336, 336, 336, 336, 337, 337, 339, 339,
	339, 340, 340, 341, 341, 307, 307, 368, 368, 177,
	177, 177, 287, 287, 287, 288, 288, 358, 358, 358,
	358, 358, 358, 359, 359, 357, 357, 357, 357, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 391, 392,
	392, 289, 289, 393, 344, 344, 496, 496, 496, 497,
	497, 385, 385, 394, 394, 394, 394, 394, 394, 383,
	383, 384, 384, 400, 401, 401, 320, 320, 320, 320,
	318, 318, 321, 321, 321, 321, 319, 319, 395, 395,
	395, 395, 310, 310, 396, 396, 396, 396, 397, 353,
	354, 354, 407, 407, 407, 407, 409, 286, 286, 286,
	286, 286, 454, 453, 453, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 423, 423, 423, 423, 423, 423,
	423, 423, 424, 424, 424, 424, 424, 424, 410, 410,
	410, 410, 410, 414, 414, 414, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 415, 415, 420,
	420, 421, 421, 421, 416, 417, 422, 422, 422, 422,
	540, 540, 426, 426, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 412, 412, 412, 419, 419, 419, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 328, 328, 330, 330, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 362, 362, 362, 362, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 472, 472, 472, 472, 472, 472, 472, 472,
	364, 364, 475, 475, 476, 476, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 483, 483, 484, 484, 486,
	486, 487, 487, 488, 489, 489, 489, 490, 491, 491,
	485, 485, 492, 492, 492, 492, 493, 493, 494, 494,
	494, 494, 494, 495, 495, 495, 495, 495, 374, 374,
	375, 375, 381, 381, 381, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 212, 212, 212, 212, 212, 299, 299, 297, 297,
	297, 300, 300, 298, 298, 296, 296, 295, 295, 371,
	371, 369, 369, 373, 373, 322, 322, 425, 425, 425,
	425, 425, 425, 425, 425, 323, 323, 323, 331, 324,
	324, 325, 325, 325, 325, 325, 365, 366, 326, 326,
	326, 367, 367, 376, 380, 380, 379, 378, 378, 377,
	377, 355, 355, 356, 356, 306, 306, 541, 541, 302,
	302, 398, 398, 398, 398, 252, 252, 291, 291, 251,
	251, 243, 243, 244, 244, 244, 244, 284, 284, 382,
	382, 427, 427, 428, 428, 429, 429, 430, 430, 431,
	432, 433, 370, 370, 231, 230, 218, 219, 229, 228,
	227, 217, 220, 224, 225, 226, 222, 223, 237, 236,
	235, 242, 233, 234, 403, 216, 245, 245, 246, 246,
	246, 247, 247, 247, 247, 213, 213, 214, 214, 238,
	238, 239, 240, 240, 232, 232, 232, 204, 204, 204,
	205, 205, 206, 206, 441, 441, 438, 438, 438, 439,
	439, 439, 440, 440, 440, 440, 437, 437, 437, 437,
	437, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 446, 446, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	448, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 451, 451,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 1, 3, 4, 6, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 12, 3, 1, 0, 1, 1, 2,
	2, 3, 3, 0, 5, 7, 0, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 6, 6, 6, 6,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 3, 3, 4, 3, 4, 7, 4, 4, 4,
	3, 5, 7, 4, 3, 3, 4, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 2, 6, 4, 7, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 3, 2, 4, 3, 3,
	5, 4, 3, 5, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 3, 11, 14, 0, 2, 4, 3, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 1, 2, 8, 4, 2, 5, 5, 5,
	2, 1, 3, 10, 11, 7, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 16, 19, 15, 18, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 501, -83, -80, -51, -49, -86, -87,
	-70, -88, -82, -106, -110, -95, -112, -152, -157, -158,
	-159, -3, -37, -39, -52, -69, -71, -81, -90, -89,
	-91, -96, -103, -99, -85, -43, -107, -111, -120, -153,
	-154, -155, 31, 30, 90, 74, 137, 114, 121, 175,
	320, 355, 365, 347, -115, -116, 382, -38, -50, -109,
	-108, 67, 115, 342, -4, -12, 28, 44, -40, -41,
	-42, 57, -57, -54, -64, -58, -524, 92, -479, -72,
	-75, -102, -528, 126, 144, 193, -92, -93, 310, -97,
	-98, 349, -100, -101, 351, 145, -45, -44, 139, -173,
	-175, -113, -114, -156, -121, -122, -123, -124, -125, -126,
	-127, -128, -129, -130, -131, -132, -133, -134, -135, -136,
	-141, -137, -138, -139, -140, -142, -143, -145, -146, -147,
	-148, -149, 386, -144, 436, 46, 396, 76, 130, 359,
	21, -5, -6, -7, -8, -9, -10, -11, -13, -53,
	-55, -56, -59, -60, -61, -68, -62, -63, -478, -73,
	-74, -76, -78, -79, -77, 348, -176, -174, 498, 450,
	-15, -20, -21, -16, -17, -19, -22, -18, -26, -31,
	-32, -28, -29, -27, -30, -33, -34, -35, -36, -24,
	-25, -14, -23, 468, 476, -179, -177, -178, -186, 374,
	458, 412, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, -250, 2, -233, -238, -239, -240, -232, -204, -448,
	-451, 4, -445, -449, 150, 202, 275, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 51, 54, 55, 56, 57, 58, 62, 67,
	68, 73, 74, 75, 76, 77, 78, 79, 85, 82,
	83, 84, 87, 89, 90, 91, 93, 95, 96, 104,
	105, 106, 107, 109, 114, 115, 118, 113, 117, 120,
	121, 124, 125, 126, 128, 129, 131, 132, 134, 135,
	137, 138, 139, 142, 140, 419, 141, 143, 144, 145,
	146, 156, 157, 158, 163, 165, 169, 170, 173, 174,
	176, 180, 182, 183, 184, 185, 186, 192, 193, 195,
	196, 197, 198, 203, 204, 208, 205, 214, 218, 219,
	220, 222, 226, 227, 228, 229, 230, 233, 232, 235,
	238, 239, 242, 243, 244, 247, 248, 249, 250, 252,
	253, 256, 254, 257, 255, 259, 260, 261, 258, 264,
	262, 266, 267, 268, 273, 271, 269, 270, 277, 280,
	190, 282, 283, 286, 304, 290, 291, 292, 295, 296,
	299, 302, 303, 305, 306, 307, 308, 309, 310, 311,
	313, 314, 318, 320, 321, 323, 325, 326, 327, 328,
	329, 330, 331, 334, 333, 335, 342, 347, 344, 345,
	346, 348, 349, 350, 351, 353, 354, 355, 357, 358,
	359, 360, 362, 364, 367, 368, 383, 384, 398, 365,
	366, 369, 370, 371, 372, 373, 377, 375, 376, 378,
	379, 380, 382, 385, 386, 388, 389, 392, 394, 395,
	396, 397, 399, 402, 403, 404, 405, 400, 411, 408,
	409, 413, 414, 415, 416, 417, 418, 420, 422, 430,
	431, 433, 436, 437, 438, 428, 440, 441, 444, 445,
	446, 449, 447, 448, 450, 452, 455, 456, 457, 463,
	462, 469, 470, 472, 473, 474, 35, 47, 48, 50,
	52, 63, 64, 65, 69, 110, 111, 136, 147, 148,
	159, 171, 172, 177, 179, 187, 188, 189, 209, 210,
	212, 216, 236, 279, 281, 297, 301, 315, 316, 317,
	319, 332, 361, 390, 401, 406, 423, 424, 425, 426,
	432, 434, 458, 459, 460, 464, 471, -250, 2, -233,
	288, -226, 2, -204, -204, 320, 27, 2, 27, 314,
	376, 414, 416, 2, -504, -285, 2, 27, -207, -204,
	92, 175, 374, -226, 2, -504, -285, 24, 2, -204,
	2, -208, 2, 365, -204, 501, 87, 244, 68, 361,
	379, -118, 431, -117, 423, 369, -119, -436, 2, 264,
	-204, 501, 501, 501, 27, -216, -204, 412, 202, 106,
	409, 501, 2, 412, 307, 462, 375, 106, 329, 202,
	438, -513, 357, 178, 451, -502, 2, -498, 4, -449,
	-445, -244, -243, 412, 417, 106, -240, -232, 491, -239,
	501, 501, 501, 2, 219, 220, 328, 327, 379, 380,
	501, 501, 501, 367, 2, 26, 60, 86, 89, 112,
	146, 166, 169, 293, -525, 253, 304, 326, 378, 411,
	420, 433, -512, 397, 62, 369, -511, -513, 438, 124,
	-332, 106, 244, 174, 445, 416, 414, 443, 118, 208,
	448, 447, 501, 501, 26, 60, 71, 89, 124, 146,
	166, 169, -527, 304, 326, 364, 369, 378, 411, 420,
	433, 2, 462, 375, 412, 202, 106, 438, -513, 367,
	368, 324, -83, 2, 498, 31, 30, 382, -169, 412,
	213, 2, -204, 501, 501, 2, 219, 220, 367, 368,
	501, 501, 167, -498, 2, 501, 501, 2, 219, 220,
	367, 368, 213, 2, 62, 371, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 2, -150, 379, 397, 184, 44,
	68, 27, 325, 73, 308, 107, 176, 202, 203, 227,
	86, 87, -334, 43, 220, 219, -386, 413, 370, 376,
	408, 230, 365, 431, 92, 452, 358, 474, 329, 330,
	140, 4, 106, 264, 381, 423, 244, 78, 501, -534,
	2, 412, -536, 2, 431, 431, 2, -536, 2, -536,
	2, -536, 2, -537, 431, 471, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, -174, -176, -175, 501, 501, 501, 501, 501,
	501, -150, 379, 2, 68, 27, -278, -280, 442, 211,
	133, 294, -173, -175, 2, -478, -434, 2, -360, -452,
	-362, 489, 490, 482, 410, 61, 274, 475, -374, 112,
	443, 288, -451, -363, -376, 136, 361, -300, 8, 9,
	5, 6, 7, -213, -364, -370, 435, 149, 278, -247,
	502, 10, 498, -475, -175, -375, 36, 179, 59, -438,
	-246, -214, -410, 212, -245, -232, -472, -473, 4, -445,
	-446, -439, -413, -421, -417, -418, -424, -204, -448, 71,
	98, 99, 97, 102, 101, 246, 245, 103, 100, 381,
	451, 60, 35, 187, 188, 216, 279, 189, 69, -474,
	125, -447, 209, 210, 390, 48, 332, 159, 111, 110,
	281, 52, 50, 459, -422, 108, 423, 424, 425, 426,
	171, 172, 147, 148, 301, 317, 406, 432, 434, 177,
	236, 94, 168, 207, 191, 215, 217, 221, 237, 240,
	265, 272, 276, 298, 300, 356, 387, -540, 460, 401,
	63, 64, -480, 333, -481, -226, -480, 501, 501, 503,
	501, -272, -273, -274, 2, 27, 122, 498, 2, -390,
	2, -391, -395, -175, 231, -394, 498, -392, 496, -233,
	289, -476, 362, -472, -473, -213, -232, -246, 4, -445,
	-447, 500, -275, 498, 106, 412, 72, 202, -327, 498,
	-204, 27, 288, 427, 503, -372, 498, 288, 167, 291,
	-204, 2, 2, 383, 2, 498, -118, 65, 431, 42,
	379, -347, 2, -348, -201, -202, -203, -400, 218, 323,
	331, 477, 474, -434, -518, 167, 481, 427, -434, -301,
	500, 2, 2, 2, 2, 2, -395, 187, -233, 2,
	-230, -437, 4, -445, -449, -446, -450, -448, 27, 30,
	31, 32, 34, 36, 37, 38, 39, 53, 59, 60,
	66, 70, 72, 81, 86, 92, 97, 98, 100, 99,
	101, 102, 103, 112, 116, 119, 122, 123, 127, 130,
	133, 149, 151, 164, 166, 167, 175, 178, 181, 194,
	206, 211, 213, 231, 234, 241, 245, 246, 274, 278,
	284, 288, 289, 293, 294, 312, 322, 336, 352, 374,
	381, 393, 407, 412, 421, 427, 429, 435, 442, 443,
	451, 453, 461, 465, 466, 467, 468, -451, 71, 2,
	-395, 187, 2, -235, 187, -395, -238, 2, -217, -204,
	2, -229, -437, 2, -251, 187, -233, -234, -238, -236,
	2, -238, -443, 187, 2, -441, 10, -440, 5, 4,
	-445, -449, -446, 427, 503, -291, -243, -244, -433, 8,
	-284, -204, 500, -360, 2, -107, -94, 2, 164, -360,
	187, 2, -107, 187, 2, -360, 187, 2, -107, 187,
	2, -515, 2, -443, 2, 2, 433, 2, 89, 187,
	-204, 412, 105, 2, 346, -526, 364, 437, 462, 2,
	2, 2, 2, 2, 2, 412, -222, 2, -204, 164,
	-242, 187, 2, -204, 375, -535, 333, -443, 187, 2,
	-236, 2, -236, 202, 214, -217, 187, 2, 416, 414,
	416, 414, 167, 2, 213, 2, 213, 2, -396, 2,
	-397, -391, -233, 496, 2, 2, 2, 2, 2, 187,
	-204, 412, 105, 2, 229, 2, 2, 2, 2, 2,
	2, 2, 2, -293, 187, 2, -233, -293, 187, 2,
	-293, 187, 2, -333, 2, 81, -217, 187, 2, -241,
	187, 2, -236, -444, 187, 2, -443, -360, 2, -107,
	2, -404, 2, -403, -440, 458, -83, 498, -83, 498,
	379, 498, -443, -233, -233, -360, 2, -107, -94, 2,
	-360, 2, -107, 2, -105, -104, -443, 498, 167, -360,
	2, -107, -94, 2, -360, 2, -107, 2, -169, 164,
	2, 106, 412, -150, 2, 164, 453, 2, 8, 2,
	-443, 370, 330, 156, 2, 383, 2, 384, 68, -334,
	474, 68, 167, 2, 167, 2, -317, 2, 468, -501,
	2, 288, 167, 2, 167, 2, 167, 2, 167, 2,
	167, 2, 327, 380, 220, 2, -107, 465, -360, 465,
	2, 430, 228, 141, 167, -317, 2, 167, 2, 167,
	2, 5, 2, 328, 398, 2, 218, 323, 398, 2,
	-233, -529, 2, 412, 462, 375, 2, 2, 82, 83,
	167, 2, 167, 2, 167, 474, 2, -310, -395, -346,
	-347, -346, 427, -278, -280, -150, 383, 2, -180, -308,
	-182, 164, -336, -337, -183, 241, 151, 284, -184, -316,
	27, 122, -316, -316, 55, 499, 499, 11, 12, 70,
	40, 489, 490, 491, 492, 162, 493, 494, 487, 488,
	486, 479, 480, 484, 224, 225, 88, 483, 481, 80,
	251, 363, 152, 153, 154, 155, 343, 200, 33, 201,
	14, 15, 16, 32, 293, 240, 475, 191, 387, 482,
	17, 18, 19, 215, 217, 276, 47, 194, -212, -253,
	-360, -360, -360, -360, -360, -360, -360, 300, 498, -306,
	-355, 496, -175, 498, 498, 498, -433, -175, -360, -374,
	499, -298, 498, -175, -374, -369, 498, 361, 496, 498,
	-377, -360, 5, 5, 5, 498, 500, -483, 469, 164,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 319, -415, 498, -414, 498,
	-414, -414, 463, -412, 498, 476, 470, 498, -412, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 463, 503, -480, -275, 498, -302, -398, -360,
	491, -302, -302, 288, -295, -360, 94, -320, 221, 265,
	168, 237, 356, 207, -357, 502, -357, -385, 476, -175,
	-392, -232, -175, -394, 498, -390, -385, -84, -433, -69,
	-81, -89, -107, -120, -154, -155, 491, -233, 498, 167,
	498, 500, -437, 167, -284, -217, -233, -245, -246, -251,
	121, -295, -498, -284, -207, 37, -371, -407, -408, -454,
	502, -453, -410, -420, -416, -419, 315, 316, -439, 50,
	459, -422, 212, 4, -445, -447, 209, 210, 390, 48,
	332, 159, 111, 110, 281, 52, 423, 424, 425, 426,
	171, 172, 460, 401, 63, 64, -498, -284, 164, -436,
	-295, 37, -347, 2, 112, -441, 42, -538, 503, 239,
	-255, 250, 273, 183, 289, 472, 282, -442, 5, 4,
	-370, -382, 112, 244, 212, -427, -429, 8, -428, 9,
	-430, 489, 490, -435, -434, 96, 500, -437, -191, 344,
	-190, 23, 28, 126, 456, 142, -265, 204, 307, 136,
	394, 446, -508, -509, 366, 418, 419, 84, 282, 344,
	136, -313, -315, 37, 104, 268, 302, 56, 197, 255,
	256, 396, 464, 136, 344, -509, 344, -509, -193, 394,
	446, -508, -509, 366, 344, -192, -265, 136, 502, 23,
	344, 382, 303, -522, -523, 126, 28, -505, -477, 468,
	136, -104, -291, 503, 503, -437, 491, 368, 367, 136,
	136, 136, 136, 164, 2, 2, 274, 2, 2, 2,
	169, -511, -527, 2, 2, 2, -233, 187, -277, 288,
	-500, -292, 412, -233, 274, -235, 187, 2, -238, 462,
	-505, 274, 37, 498, 2, -333, 2, 202, -477, 274,
	-396, -248, -233, -391, -248, 382, -226, 37, -357, -357,
	136, 2, 2, 2, -204, -194, 503, 58, 350, 136,
	-194, 136, -194, 136, -252, 187, -251, -194, 136, -194,
	503, 136, 503, 136, 499, 503, -404, -404, -443, -163,
	468, 167, 92, 498, 498, -169, -401, 503, -400, -444,
	-105, -443, -500, -217, 2, -233, 2, 412, 222, -163,
	-443, -443, -443, -436, 27, 384, 2, 327, 380, 83,
	384, 2, -233, 412, 106, 202, 74, -503, 164, -499,
	357, -498, -233, 106, -233, 106, -233, 106, -233, -233,
	2, 2, 2, 2, 79, 79, 164, 2, 430, 2,
	430, 2, -204, -204, -204, 397, 239, -233, 164, 412,
	202, 412, 202, 106, 412, -194, 503, -208, -180, -308,
	-436, -309, -308, -181, -180, -183, 164, 331, 447, 268,
	385, 226, -337, -336, 27, -360, -341, 158, 267, -360,
	-339, -362, 489, 490, -428, -430, -294, 282, -174, -174,
	-174, -281, -387, -360, 322, 202, -409, -407, -407, -231,
	-437, 423, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, 240, 191, 387,
	47, 194, -360, 427, -360, -360, -360, -360, 262, 274,
	278, 435, 149, 444, 122, 282, -541, 407, 39, -367,
	-175, -299, 498, -381, 34, 393, 27, -374, 498, 2,
	-355, -360, -356, -296, -295, -295, 499, 461, 27, 122,
	491, 2, 499, 503, 37, 499, -360, -296, -373, -369,
	-295, -380, -379, 465, -328, -329, 473, 258, 109, 185,
	257, -330, 373, -431, 8, -437, 491, -484, 157, 178,
	498, 499, 2, 499, 2, 499, -360, 2, 499, -360,
	2, 499, -360, 2, 499, -360, 2, 499, 2, -360,
	-360, -360, -360, -360, -360, -360, -295, 8, -431, -431,
	423, 423, -431, -431, -431, -423, 315, 242, 316, 173,
	261, 259, 260, 172, -423, -322, 2, -425, -295, 4,
	473, 258, 109, 185, 257, 373, 5, -322, 2, -323,
	2, -360, -295, -324, -361, -362, 489, 490, 482, -374,
	-325, 2, -360, -296, -360, 53, 234, 429, -326, -360,
	167, -295, -295, 2, -295, 2, -481, 37, -295, -287,
	503, 167, 37, 4, -287, -287, 498, 499, 503, -321,
	182, 254, 249, -321, -390, -320, 221, -318, 298, -318,
	-318, -385, -218, 496, 504, -437, -385, -384, -383, 37,
	-226, 295, -385, -385, 500, 499, -384, 497, -496, 498,
	501, 501, 501, 501, 501, -233, 498, -295, -437, 500,
	399, 499, 215, 215, 215, 215, 362, 499, 427, 468,
	-83, 290, 499, 503, -286, 36, 496, 500, -431, 2,
	2, -426, 463, 498, 498, -329, 498, 167, -285, -518,
	499, 431, -348, -254, 331, 392, 345, 377, 409, 8,
	9, 8, 9, 503, -437, 503, -519, 86, 427, 72,
	-351, 187, 72, -455, -220, 86, -456, -204, 66, 443,
	322, 166, 134, -519, 86, 322, -519, 86, 86, 382,
	397, 55, -395, 40, 40, 27, -107, 235, 167, 474,
	412, 202, 427, -395, -315, -407, 104, 255, 256, 55,
	-432, -427, 489, 490, -432, 55, -432, -432, -432, 468,
	-235, -395, 427, 427, 503, 40, 40, 27, -107, 235,
	167, 427, -251, -218, 457, 41, 457, 427, 41, 369,
	427, 503, 41, 41, -506, -209, 93, 269, 248, 270,
	-210, -211, 309, 455, -443, -401, -243, -204, 500, -107,
	-360, -360, -107, -360, -107, 44, 136, 2, -535, 229,
	498, -258, 274, 167, -284, -402, 213, 503, -292, 136,
	-314, -313, 274, -237, 187, 2, -233, 136, 131, 498,
	329, 2, -219, 187, -205, -204, -333, -197, 415, 136,
	-312, 453, -342, -107, 498, 112, 37, -342, -303, -304,
	-399, -305, -220, 498, -226, -204, 2, -233, -293, -293,
	-293, -194, 503, 136, -217, -236, -241, -443, -444, -83,
	-403, 499, 499, 499, -162, 292, -161, -204, 5, -169,
	453, -257, -352, -351, -459, -460, -455, 240, 202, 443,
	214, 150, -276, -221, -220, 105, -163, -104, 499, -401,
	-163, -163, -401, -401, -233, 164, -163, -163, -163, 2,
	2, -317, -233, -217, -251, -233, -284, -284, -317, -217,
	-317, -217, -317, -217, -107, -360, 379, 164, 164, 500,
	-317, 329, 106, 412, 307, 202, -233, -251, -233, -251,
	-217, -233, -395, -309, -181, 289, 226, 385, -339, -340,
	-362, 361, 362, -340, 361, 362, 8, 9, 8, 9,
	-185, 389, 277, -293, 503, -188, 38, 119, 226, -233,
	474, 132, -360, -360, 427, -541, 407, -367, 132, -360,
	262, 278, 435, 149, 444, 122, 282, 167, 498, -361,
	-361, 499, -297, -360, -360, 497, 506, 499, -280, 503,
	-278, -360, -295, -295, 499, 500, -295, -284, 497, 497,
	503, 499, -378, -379, 127, -360, 427, 427, 427, 427,
	498, 499, 500, -489, 299, 498, 498, -360, 499, 499,
	499, 499, 37, 503, 503, 503, 499, 503, 503, 503,
	499, 499, 499, 503, 499, 474, 474, 499, 499, 499,
	499, 503, 499, 503, 499, 167, 499, 499, -331, 312,
	499, 11, 12, 489, 490, 491, 492, 162, 493, 494,
	487, 488, 486, 479, 480, 481, 80, 251, 363, 14,
	15, 16, 215, 194, -361, -361, -361, 499, -365, -366,
	167, 164, 37, -326, -326, -326, 499, 167, -295, 499,
	499, 498, -482, 253, 274, 499, -354, -353, 466, -398,
	-288, 2, -390, -228, -437, -354, -354, -295, -360, 221,
	221, -319, 453, 288, -321, -390, -384, -433, -359, -358,
	165, 38, 119, 271, 190, -384, -226, -275, -384, -384,
	-437, -385, -385, -383, 499, -497, -433, 499, -289, -393,
	-476, -280, 500, -437, -163, -151, 5, 278, -151, -151,
	-151, -284, 24, 313, -407, 496, 497, 8, -437, 498,
	-431, -431, -431, -284, 167, -434, -347, 441, 77, 331,
	423, -434, -190, 344, -220, -220, -233, 274, -351, 187,
	-196, 274, -407, -227, -204, 498, 498, 226, 226, 453,
	-220, -227, 226, 187, -220, 187, -227, -227, -507, 331,
	283, -360, 243, 329, 275, -191, 344, -107, -107, -107,
	498, -518, 453, 121, -233, -251, -233, -237, 344, 272,
	-245, -432, -432, -313, 344, -235, -217, -192, -107, -107,
	-107, 498, -218, -193, 344, 5, 187, -220, 5, -204,
	-220, -242, -521, -441, 103, 381, -523, 23, -220, 187,
	-220, -209, -443, 278, 449, -505, -160, 198, 491, -502,
	-204, 462, -204, -256, -259, -257, -220, -172, 470, 468,
	136, -249, -233, 496, -163, -443, -233, -242, 136, -275,
	274, -443, 498, 2, 2, 288, 274, -219, 187, -198,
	128, -539, 481, -217, -354, -288, -311, -345, 352, 288,
	-276, 458, -226, -311, -290, 503, 167, 481, 500, -276,
	2, -194, -194, -194, -251, -252, -194, -194, -83, -83,
	-163, 503, 498, 481, 481, 498, -443, -443, 499, 503,
	-233, -219, 202, 202, -225, -205, 499, 503, 500, 498,
	-163, 167, -46, 468, 412, 502, -317, -317, -317, 379,
	379, -204, -229, -217, -233, -230, -251, 164, 164, 447,
	-340, 289, 247, -387, -189, 280, -233, 502, -360, -360,
	132, 132, -360, -361, -361, -360, 132, 167, 498, -360,
	-371, 32, 32, 499, 503, -356, -360, 499, 461, -280,
	-280, 499, 491, -437, 502, 499, -369, 130, -360, 421,
	258, 185, 257, -330, 257, -330, -330, -431, 5, -437,
	491, -490, -223, 498, -204, 466, -279, 294, 499, -409,
	-407, -360, -360, -360, -360, -360, -431, -412, -412, -427,
	-427, -360, -365, -360, -409, -407, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, 122, 274, 282, -361, -366,
	-365, -360, -360, -407, 499, 499, 499, -295, -83, 498,
	253, -307, 178, -360, -401, 503, -307, -307, 499, -390,
	-390, 498, -360, 221, 497, 503, 505, 481, -275, 500,
	-383, -384, 497, 499, 503, 499, 503, -344, 37, 499,
	-437, 291, 5, 8, 496, 497, 500, -431, 499, 499,
	499, -284, -360, 427, 427, 136, 274, 455, -461, -456,
	134, -360, -282, -388, -360, 498, 498, 2, -187, 126,
	382, -520, 2, 453, 136, -194, 136, -194, 472, 498,
	498, 427, 468, -295, -360, -164, 112, -436, -509, 502,
	-509, 502, 427, 427, 468, -295, 427, -411, 45, 25,
	274, -236, 427, 427, -194, 136, 438, 382, -443, 278,
	-166, 468, 167, 427, 2, -237, 2, 499, 499, 503,
	-462, 37, 286, 498, 286, -233, -65, 468, -400, -433,
	-235, 37, 136, -505, -405, -406, 5, -233, 136, 288,
	274, -199, 233, -539, -441, -477, -280, -311, -302, 275,
	85, 499, -354, -304, -288, -360, 2, 499, -194, -161,
	-162, -443, -443, -443, -163, -169, -169, -352, -260, 498,
	-219, -205, 498, -169, -221, 2, -444, -107, 292, -233,
	491, -317, -267, -266, 307, 282, -267, 361, 361, 289,
	158, 230, -188, -218, -360, -360, 132, 32, 32, -360,
	-360, -371, 499, -360, -360, -295, 497, 5, -360, 499,
	499, 8, -360, 499, 500, -491, -204, -360, 499, 55,
	499, 499, 503, 503, 499, 499, 499, 499, 499, 499,
	499, -366, 167, 122, 282, 498, 499, 499, -83, -368,
	181, 55, -390, -368, -368, -319, -284, -390, -358, -218,
	496, -437, -433, -393, 498, 500, 497, 2, 496, -437,
	499, -220, -220, -351, 136, -463, 86, -465, 70, 150,
	92, 274, 278, 443, 322, 66, 112, 336, -531, 37,
	478, 499, 499, 503, -188, -282, -284, 274, 404, 112,
	274, 112, 105, 438, 73, -220, -227, -284, -284, -233,
	143, 499, 503, 481, 2, 491, 491, -237, -235, 143,
	499, -218, 5, 5, 136, -215, 70, 5, -220, -220,
	-236, 105, -168, 292, -167, 129, 354, 120, -444, -104,
	-275, -263, 205, -220, -460, -457, -458, 322, -464, -466,
	150, 322, -107, -171, -170, -204, 5, 2, 498, -258,
	292, 497, -314, -107, -237, 499, 503, -335, 453, -218,
	-233, 136, -200, 232, -539, -441, -197, -338, -336, -343,
	498, 288, -107, -280, 481, 499, 499, 105, 105, 196,
	135, -282, 498, 498, -284, 105, 499, -47, -48, 202,
	86, 311, -230, 412, 202, 498, 498, -188, -360, -360,
	-360, 499, -280, -437, 491, -485, 307, 499, -387, -360,
	-360, -361, 167, 498, -371, 499, -486, 467, -360, -295,
	-486, -486, 499, -433, 2, 496, 2, -351, -227, -231,
	-224, -204, 150, 187, 278, 226, 498, -361, -233, 498,
	2, 29, -532, 116, 206, -350, -533, 91, 405, 195,
	-388, -189, 499, 499, 278, 278, -360, -407, 498, -194,
	-194, 499, 499, -360, 427, -436, 90, -434, 2, -509,
	-360, 427, 5, -194, -231, -194, -194, -215, 438, 503,
	498, 481, -166, 37, -264, -265, 194, -462, 226, -224,
	226, -530, 468, 499, 503, 481, 481, -256, -172, -66,
	-67, 428, -400, -275, 5, 498, -204, 288, 498, -218,
	-539, -441, -198, -311, 123, -284, 86, -338, -367, -163,
	498, 498, -261, 75, 87, 113, 186, 170, 203, 397,
	402, 27, -261, 499, -282, -282, 499, 498, -163, 503,
	27, 498, 27, 498, -233, -251, -295, -295, 499, -280,
	55, 503, 499, 499, -361, -371, 499, -487, -488, -223,
	497, 2, -465, -224, 274, 453, -360, -206, 498, -360,
	37, 206, 117, 192, -263, 498, -349, 453, 336, -215,
	-282, 498, 498, 498, 481, 167, 498, -411, -194, -236,
	-167, -168, -443, -514, 334, -107, -172, 305, 498, -262,
	288, 105, 268, -170, -363, -363, 499, 37, -67, 9,
	37, -282, -233, -282, 288, -441, -199, 447, 275, 499,
	-227, -311, -444, -444, -349, 499, 499, -444, -48, -284,
	-284, 499, 499, -492, 329, 362, 180, -295, -281, 499,
	503, 37, 136, 182, 499, -467, 252, -204, 499, 117,
	192, -264, -284, -263, 182, -233, -510, 453, 499, -269,
	-268, -266, -271, -270, -266, -295, -434, 90, 305, -295,
	-215, 499, -517, 168, 266, -516, 5, 10, -262, -233,
	-283, -389, -220, 76, 105, -263, -107, -107, 499, -335,
	499, -233, -200, 382, -353, 499, 499, -350, -349, -354,
	499, 499, 499, 499, -493, -494, 47, 440, 96, -360,
	-493, -493, -488, -490, 150, 468, -468, -471, -470, 288,
	388, 168, 306, 499, 404, 464, -532, 499, 468, -275,
	-360, -349, 499, 503, 458, 499, 503, 458, 499, 167,
	499, -194, -165, 468, 44, 498, 499, 503, 321, 118,
	126, -264, -530, -349, 498, -350, 498, -303, -163, -163,
	-263, -350, -163, -495, 134, -494, 318, 163, 361, 318,
	163, -495, -495, -224, 51, -470, 288, -471, 288, 447,
	118, -354, 51, -467, -263, -268, 194, -270, 167, 305,
	139, -516, 29, -284, -389, 362, 362, 2, -172, -262,
	-350, -282, -263, -282, -354, -264, -263, 96, 178, 422,
	268, 32, 481, -469, 268, 350, 58, 382, -469, 481,
	-468, 498, 498, 367, 499, 2, -262, -263, 499, -264,
	499, -354, -264, 361, 296, -494, -360, 22, 278, 112,
	-360, -532, -295, -295, 292, -195, 58, 350, -264, -349,
	-354, -350, -354, 499, 499, -162, 498, -354, -350, -263,
	-264, 427, -162, -263, -264, 498, 499, -264, -354, -295,
	-354, 499, -264,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 432, 433, 435, 436, 437, 439, 440, 442, 444,
	446, 447, 448, 450, 451, 453, 454, 455, 456, 457,
	459, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 521, 0, 1084, 1086, 1088,
	1090, 0, 651, 0, 30, 31, 0, -2, 242, 244,
	246, 0, 272, 274, 275, 277, 279, -2, 0, 375,
	376, 378, 380, -2, -2, 0, 798, 800, 0, 508,
	510, 0, 803, 805, 0, 0, 530, 531, 0, 1172,
	-2, 524, 526, 528, 593, 595, 597, 599, 601, 603,
	605, 606, 608, 610, 612, 614, 616, 618, 620, 621,
	623, 625, 627, 629, 631, 633, 635, 637, 639, 641,
	643, 645, -2, 647, -2, -2, 0, -2, -2, -2,
	1102, 34, 36, 38, 40, 42, 44, 46, 48, 326,
	327, 329, 331, 333, 335, 338, 340, 342, 1230, 382,
	384, 386, 388, 390, 392, 0, -2, 1242, 0, 0,
	50, 51, 52, 53, 54, 55, 56, 57, 73, 74,
	75, 76, 77, 78, 79, 80, 61, 63, 64, 68,
	69, 71, 59, 0, 0, 1203, 1205, 1207, 1209, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 434, 438, 441, 443, 445, 449, 452, 458, 460,
	462, 419, 420, 423, 1862, 1879, 1880, 1881, 1884, 1885,
	1886, 1887, 1888, 1889, 2250, 2331, 2332, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 421, 422, 954,
	0, 486, 484, 1855, 487, 2077, 489, 491, 369, 370,
	371, 372, 373, 374, 0, 501, 495, 500, 502, 504,
	505, 506, 507, 481, 479, 0, 501, 1914, 499, 1082,
	1083, 1067, 1068, 2113, 1109, 520, -2, -2, -2, 2216,
	-2, 552, -2, 559, 2220, 2115, 564, 0, 566, -2,
	569, 1085, 1087, 1089, 649, 650, 1865, 0, 0, 0,
	0, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1003, 1004, 1005, 0, 182, 184, -2, -2,
	-2, -2, 0, 0, 2149, 1955, 1823, 1881, 1826, 1821,
	243, 245, 247, 248, 0, 0, 0, 0, 0, 0,
	273, 276, 278, -2, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 849, 841, 842, 1044, 0, 0,
	0, 0, 377, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 305, 424, 425, 0, 1231, 1231, 0, 0, 0,
	0, 223, 214, 799, 801, 802, 0, 0, 0, 0,
	509, 511, 0, 0, 209, 804, 806, 807, 0, 0,
	0, 0, 0, 225, 0, 0, 525, 527, 529, 594,
	596, 598, 600, 602, 604, 607, 609, 611, 613, 615,
	617, 619, 622, 624, 626, 628, 630, 632, 634, 636,
	638, 640, 642, 644, 646, 656, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 659, 661, 662, 663, 0, 714, 731, 648, 0,
	994, 1232, 1111, 1092, 1106, 1111, 1094, 1095, 1096, 1097,
	1098, 1103, 1105, 1099, 1100, 1101, 35, 37, 39, 41,
	43, 45, 47, 49, 328, 330, 332, 334, 336, 339,
	341, 343, -2, 1201, 1202, 383, 385, 387, 389, 391,
	393, 512, 0, 514, 0, 660, -2, 0, 1236, 1236,
	1236, 0, 0, 1202, 1200, 0, 517, 518, 573, 574,
	1466, 0, 0, 0, 0, 0, 0, 0, 1720, 1552,
	0, 575, -2, 1583, 1585, 2191, 2216, 1719, 1587, 1588,
	1589, 1590, 1591, 0, 1593, 1594, 1595, 1596, 1597, 1598,
	0, 1600, 0, 1605, 1606, 1607, 0, 2198, 1800, 1875,
	-2, 0, 0, 2204, 1871, 0, 1686, 1623, -2, -2,
	1898, 1877, 1398, 1399, 1400, 1401, 1402, -2, -2, 2233,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 0, 2180, 2199, 2200, 2205, 2207, 2201, 2188, 1648,
	1966, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1425, 1434, -2, -2, -2, -2,
	-2, -2, 2192, 2193, 2210, 2213, 2219, 2224, 2225, 2197,
	2206, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 1426, -2, -2,
	-2, -2, 1219, 2088, 1222, 954, 1220, 1204, 1206, 0,
	1208, 0, 0, 0, 1213, 1239, 1237, 0, 1280, 1217,
	1218, 1298, 1298, 1322, 0, 1303, 0, 1322, 1231, 1348,
	0, 1309, 2106, 1624, 1625, 0, 1881, 1876, -2, -2,
	2231, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	488, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 522, 523, 0, 547, 0, 551, 2187, -2, 1922,
	2124, -2, 555, 1112, 1116, 1117, 1118, 1119, 0, 0,
	0, 0, 0, 561, 0, 0, 548, 549, 567, 570,
	0, 652, 653, 654, 655, 58, 0, 2199, 1348, 60,
	0, 1845, 1906, 1907, 1908, 1909, 1910, 2232, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2233, 62,
	0, 2199, 65, 0, 2199, 0, -2, 70, 0, 1851,
	72, 0, 1848, 81, 0, 2199, 0, 1820, -2, 0,
	167, 1859, -2, 2199, 1002, 226, 227, 1894, 1895, 1902,
	1903, 1904, 1905, 0, 0, 791, 1817, 1822, 792, 1841,
	793, 1827, 0, 249, 250, 251, 252, 253, 0, 254,
	2199, 256, 257, 0, 259, 260, 2199, 262, 263, 0,
	265, 0, 194, 195, 281, 282, 0, 284, 0, 2199,
	0, 0, 0, 290, -2, 306, 0, 303, 0, 294,
	295, 297, 298, 299, 300, 0, 347, 345, 1856, 0,
	819, 2199, 821, 1861, 0, 0, 1023, -2, 2199, 999,
	1029, 1025, 0, -2, 0, 1229, 2199, 1126, 845, 846,
	847, 848, 0, 366, 0, 1139, 0, 1141, 0, 1162,
	1354, 1298, 1298, 0, 307, 308, 309, 310, 311, 2199,
	0, 0, 0, 316, 0, 318, 319, 320, 321, 322,
	323, 324, 325, 156, 2199, 396, 417, 156, 2199, 399,
	156, 2199, 402, 0, 405, 1042, 156, 2199, 408, 156,
	2199, 411, 412, 414, 2199, 416, 228, 1078, 1079, 1080,
	1081, 0, -2, 475, 1864, -2, 427, 0, 428, 0,
	-2, 0, 240, 0, 0, 808, 809, 810, 811, 812,
	815, 816, 817, 818, 1335, 212, 210, 0, 0, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 0, 0,
	532, 0, 0, 657, 658, 0, 0, 668, 669, 670,
	240, 2116, 2085, 1985, 675, 0, 678, 681, -2, 0,
	0, 0, 0, 685, 0, 690, 691, 692, 0, 797,
	694, 0, 0, 696, 0, 700, 0, 703, 0, 705,
	0, 707, -2, -2, -2, 718, -2, 0, 722, 0,
	724, 0, 0, 0, 0, 739, 740, 0, 745, 0,
	748, 749, 750, 0, 752, 753, 0, 755, 756, 757,
	758, 0, 760, 761, -2, -2, 765, 767, 0, 774,
	0, 778, 0, 782, 0, 664, 665, 156, 1352, 1091,
	-2, 1093, 0, -2, 0, 513, 0, 516, 1259, 1187,
	1184, 0, 1256, 1257, 1188, 0, 0, 0, 1195, 0,
	1234, 1235, 0, 0, 0, 1174, 1175, 0, 0, 0,
	0, 1725, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1731,
	1732, 1735, 1736, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 1740, 0, 0, 1742, 0, 1744, 0, 0,
	0, 0, 0, 0, 1531, 1533, 1808, 0, 0, 1741,
	1471, 1472, 1473, 1474, 1475, 1510, 1511, 0, 0, 1584,
	1805, 1804, 1586, 0, 1756, 0, 1599, -2, 0, 1720,
	1751, 0, 0, 1608, 1609, 1610, 0, 0, 1756, 0,
	0, 1799, 1620, 1621, 1463, 0, 0, 1688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 1411, 0, 1413, 0,
	1414, 1415, 1422, 1435, 0, 0, 0, 0, 1439, 0,
	0, 0, 0, 0, 0, 0, 1780, -2, 0, 0,
	0, 0, 1427, 0, 1221, 0, 0, 1284, 1809, 1813,
	1814, 1284, 1284, 0, 0, 1757, 1345, 1345, 0, 0,
	1341, 1341, 1341, 1339, 1322, 0, 1322, 1332, 0, 1322,
	1322, 0, -2, 1303, 0, 0, 1332, 0, 1316, 463,
	465, 467, 469, 470, 471, 473, 1349, 1350, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 493, 503, 1231, 0, 1759, 1371, 1375,
	0, 1377, 1378, 1379, 1380, 1381, 0, 0, 1372, -2,
	1423, 1425, 1446, 1899, 1900, 1901, 1406, 1407, 1408, 1409,
	1410, 1418, 1405, 1405, 1405, 1416, 1445, 1437, 1445, 1441,
	1392, 1393, 1428, 1429, 1430, 1431, 0, 497, 0, 0,
	0, 0, -2, 557, 562, 563, 0, 0, 1114, 0,
	1120, 584, 585, 586, 1122, 1123, 0, 560, 587, 588,
	589, 590, 591, 592, 0, 1829, 1830, 1831, 1832, 1835,
	1836, 0, 0, 558, 577, 565, 0, 571, 82, 1064,
	121, 0, 1064, 1064, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 106, 117, 94, 95, 0, 0, 0,
	0, 66, 976, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 992, 0, 0, 105, 0, 100, 84, 0,
	0, 0, 107, 119, 0, 147, 149, 0, 0, 0,
	0, 0, 0, 166, 174, 0, 0, 1000, 0, 1228,
	0, 1335, 790, 0, 0, 1882, 1825, 0, 0, 0,
	0, 0, 0, 0, 283, 285, 0, 287, 288, 289,
	0, 1022, 0, 296, 293, 337, 925, 2199, 0, 0,
	364, 359, 0, 361, 0, 975, 2199, 973, 1860, 0,
	997, 0, 0, 0, 1030, 1891, 1039, 1043, 1128, 0,
	368, 0, 1142, 1144, 0, 0, 1355, 0, 1357, 1358,
	0, 313, 314, 315, 0, 394, 0, 154, 155, 0,
	397, 0, 400, 0, 156, 2199, 1815, 406, 0, 409,
	0, 0, 0, 0, 1231, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 240, 0, 1334, 0,
	1335, 240, 240, 1335, 534, 1335, 536, 0, 0, 671,
	240, 240, 240, 676, 677, 679, 680, -2, -2, 775,
	682, 683, 742, 0, 0, 0, 741, 693, 0, 784,
	2102, 795, 742, 1955, 742, 1955, 742, 1955, 704, 706,
	709, 734, 717, 721, 0, 0, 0, 726, 0, 728,
	0, 730, 742, 743, 746, 751, 754, 759, 0, 0,
	0, 0, 0, 0, 0, 993, 0, 1104, 1259, 1187,
	515, 1178, 1258, 1179, 1186, 1189, 0, 0, 1191, 0,
	1193, 0, 1254, 1255, 1262, 1263, 0, 1273, 1274, 1266,
	0, -2, 0, 0, 1269, 1270, 1197, 0, 1214, 1215,
	1216, 1243, 1246, 1053, 0, 2331, 1467, 1366, 1468, 1469,
	1844, 0, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, -2, -2, -2, -2, -2, -2, -2, -2,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, -2, -2, -2, 1508, 1509, -2, 1743, 1745, 0,
	1808, 0, -2, 0, -2, -2, -2, -2, 1528, 0,
	1530, 1535, 1537, 1539, 0, 0, 0, 0, 1807, 1549,
	1791, 1792, 0, 0, 1722, 1723, 1724, 1534, 0, 1553,
	1806, 1803, 0, 0, 1755, 1242, 1612, 0, 0, 0,
	0, 1619, 1604, 1753, 0, 1752, 0, 0, 0, 1763,
	0, 1798, 1794, 0, 1842, 1462, 1449, 1450, 1451, 1452,
	1453, 1454, 1464, 0, 1839, 1868, 1874, 1696, 0, 0,
	0, 1649, 1650, 1651, 1652, 1653, 0, 1655, 1656, 0,
	1658, 1659, 0, 1661, 1662, 0, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 0, 0, 1668, 0, 1766, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1670, 0,
	1672, 1757, 1777, 0, 0, 1554, 0, 0, 0, 1720,
	0, 1675, 1757, 1785, 0, 0, 0, 0, 0, 1757,
	0, 1790, 0, 1682, 0, 1684, 1223, 0, 0, 1361,
	0, 0, 0, 1812, 1361, 1361, 0, 1279, 0, 0,
	1342, 1343, 1344, 0, 0, 1345, 0, 1336, 1340, 1337,
	1338, 1332, 1295, 0, 0, 1846, 1332, 1301, 1331, 0,
	954, 1321, 1332, 1332, 0, -2, 1305, 1322, 0, 0,
	464, 466, 468, 472, 474, 0, 0, 1242, -2, 0,
	240, 953, 0, 0, 0, 0, 483, 485, 0, 0,
	477, 0, 480, 0, 1362, 1365, 0, 0, 1376, 1382,
	1383, 0, -2, 0, 0, 1447, 0, 0, 0, 0,
	550, 0, 1113, 1121, 0, 581, 0, 583, 0, 1833,
	1837, 1834, 1838, 0, 572, 0, 0, 0, 0, 1063,
	125, 2199, 0, 158, 0, 0, 918, 1852, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 96, 0, 0, 0,
	0, 0, 0, 0, 977, 978, 980, 987, 989, 0,
	983, 1840, 0, 0, 984, 0, 986, 988, 990, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 97, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1018, 1016, 1010, 1011, 1012, 1013,
	1014, 1015, 0, 0, -2, 231, 1818, 1828, 0, 813,
	814, 255, 258, 261, 264, 183, 0, 291, 0, 0,
	851, 824, 0, 0, 346, 240, 0, 0, 360, 0,
	971, 974, 0, 954, 2199, 1009, 1858, 0, 0, 0,
	0, 1028, 0, 2199, 1847, 1890, 1891, 1130, 1136, 0,
	1361, 0, 1160, 1145, 0, 0, 0, 1160, 1164, 1165,
	1167, 1168, 0, 0, 1356, 0, 317, 418, 156, 156,
	156, 403, 0, 0, 156, 413, 156, 229, 415, 426,
	476, 1231, 1231, 240, 238, 2061, 236, 233, 235, 0,
	0, 0, 852, 854, 855, 856, 857, 0, 1891, 0,
	2011, 1891, 0, 1148, 1150, 0, 207, 213, 211, 240,
	0, 358, 533, 538, 666, 0, 672, 673, 674, 711,
	736, 684, 686, 687, 688, 0, 796, 794, 695, 742,
	698, 742, 701, 742, 720, 723, 725, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 0, 779, 780,
	781, 783, 1353, 1182, 1183, 1185, 0, 1194, 0, 0,
	1268, -2, -2, 1267, 1271, 1272, -2, -2, -2, -2,
	1190, 0, 1199, 1196, 0, 1253, 1051, 1052, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1550, 0, -2,
	1529, 1532, 1536, 1538, 1540, 0, 0, 0, 0, 0,
	0, 1746, 0, 1748, 1551, 1801, 1804, 1718, 0, 0,
	1241, 1242, 1242, 0, 1618, 0, 1754, 0, 1761, 1762,
	0, 1611, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 1654, 1657,
	1660, 1663, 0, 0, 0, 0, 1643, 0, 0, 0,
	1647, 1417, 1403, 0, 1445, 1443, 1444, 1438, 1445, 1442,
	1395, 0, 1394, 0, 1667, 0, 1669, 1671, 0, 0,
	1673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 1558, 1559, 1674, 1783, 1784,
	0, 0, 0, 0, 0, 0, 1680, 0, 1789, 1681,
	1683, 1231, 0, 1224, 0, 1281, 1276, 1360, 0, 1810,
	1335, 1283, 1285, 1811, 1849, 1276, 1276, 0, 1758, 0,
	0, 1326, 0, 0, 0, 1328, 1299, 0, 0, 1293,
	0, 1289, 1290, 1291, 1292, 1300, 954, 1330, 1302, 1306,
	1868, 0, 1332, 0, 1317, 0, 1319, 1351, 0, 1311,
	1314, 0, 0, 1883, 241, 266, 270, 271, 267, 268,
	269, 492, 0, 0, 1760, 0, 1367, 0, 1373, 0,
	0, 0, 0, 496, 0, 546, -2, 579, 580, 582,
	0, 578, 122, 1064, 0, 0, 1055, 0, 127, 2199,
	136, 0, 892, 0, 1850, 0, 0, 0, 0, 0,
	1066, 0, 0, 2199, 156, 2199, 156, 139, 142, 0,
	146, 144, 0, 0, 883, 83, 1064, 86, 90, 98,
	0, 0, 0, 104, 0, 0, 0, 1057, 0, 981,
	982, 985, 991, 67, 0, 1059, 1054, 148, 88, 92,
	99, 0, 1061, 85, 0, 170, 0, 0, 0, 162,
	0, 163, 164, 171, 172, 173, 175, 0, 156, 2199,
	0, 1017, 995, 996, 0, 1001, 187, 0, 1824, 0,
	0, 0, 0, 0, 0, 850, 936, 0, 0, 0,
	0, 352, 348, 0, 357, 363, 362, 820, 0, 0,
	0, -2, 1032, 1026, 1027, 0, 0, 0, 2199, 1132,
	1136, 0, 1135, 1229, 1242, 367, 1137, 1160, 0, 0,
	0, 1147, 1143, 1140, 1361, 0, 0, 0, 0, 0,
	312, 395, 398, 401, 1816, 156, 407, 410, 429, 430,
	215, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	861, 0, 1891, 1891, 0, 1854, 0, 0, 0, 0,
	208, 0, 535, 0, 0, 0, 697, 699, 702, 727,
	729, 742, 768, 769, 878, 0, 878, 0, 0, 1192,
	0, 1265, 1198, 1247, 1248, 0, 1053, 0, 1470, 1513,
	0, 0, -2, 0, 0, 1517, 0, 0, 0, -2,
	0, 0, 0, 1747, 1749, 0, 1803, 1613, 0, 0,
	0, 1617, 1601, 1602, 0, 1721, 1764, 1793, 1797, 0,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 0, 1843, 1869,
	1873, 1694, 1695, 1699, 1857, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 1436, 1440, 0,
	0, 1765, 1776, 1778, 1555, 1556, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, -2, -2, -2, 1573,
	1574, 1575, -2, -2, -2, 0, 0, 0, 1779, 1781,
	1782, 1786, 1787, 0, 1677, 1678, 1679, 1788, 0, 1231,
	1225, 1278, 0, 1359, 1282, 0, 1278, 1278, 1238, 1324,
	0, 0, 1347, 0, 1296, 0, 1297, 0, 1329, 0,
	1304, 1307, 1308, 1318, 0, 1310, 0, 1313, 0, 1613,
	-2, 494, 478, 0, 0, 1369, 0, 0, 1420, 1424,
	1448, 498, 1333, 0, 0, 0, 0, 157, 890, 917,
	0, 0, 0, 1046, 1053, 0, 0, 923, 129, 0,
	0, 0, 137, 0, 0, 134, 0, 141, 145, 0,
	0, 0, 0, 0, 101, 102, 103, 0, 108, 0,
	109, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 1050, 0, 0, 177, 0, 0, 0, 1020, 1021,
	181, 0, 0, 0, 286, 954, 292, 872, 924, 0,
	926, 0, 825, 0, 0, 925, 344, 0, 351, 0,
	975, 0, 0, 998, 0, 1031, 1033, 1041, 0, 0,
	0, 1134, 1136, 0, 1127, 1128, 1261, 1138, 1158, -2,
	1157, 0, 1242, 1166, 1163, 1169, 1170, 0, 404, 237,
	0, 232, 234, 0, 218, 0, 0, 853, 858, 0,
	0, 0, 0, 0, 1149, 1151, 0, 224, 0, 667,
	689, 737, 770, 877, 0, 0, 772, 0, 0, 1264,
	1251, 1252, 1249, 1053, 1515, 1519, 0, 0, 0, 1521,
	-2, 0, 1543, -2, -2, 1750, 1802, 1592, 1242, 1614,
	1616, 1603, 1796, 1465, 0, 1701, 1698, 0, 1685, 0,
	1638, 1639, 0, 0, 1642, 1644, 1645, 1646, 1404, 1397,
	1396, 1775, 0, 0, 0, 0, 1676, 1226, 0, 1690,
	0, 0, 1286, 1690, 1690, 1325, 0, 1327, 1294, 1287,
	0, 1869, 1320, 1312, 0, 0, 1363, 1368, 0, 1374,
	1419, 123, 124, 126, 0, 891, 0, 894, 0, 0,
	0, 0, 901, 902, 0, 0, 0, 0, 0, 911,
	0, 940, 950, 0, 1253, 0, 0, 0, 131, 151,
	0, 0, 1065, 0, 0, 156, 156, 0, 0, 1056,
	0, 0, 0, 0, 111, 0, 0, 1058, 1060, 0,
	0, 1062, 168, 169, 0, 156, 0, 161, 156, 156,
	1050, 0, 185, 0, 188, 0, 191, 192, 230, 187,
	0, 880, 0, 936, 928, 929, 930, 0, 935, 937,
	0, 0, 838, 0, 834, 0, 0, 827, 851, 824,
	0, 349, 972, 1006, 954, 1024, 0, 0, 0, 0,
	0, 0, 1124, 1136, 0, 1129, 1130, 1160, 1260, 0,
	0, 0, 1146, 1261, 0, 239, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 537, 539, 0,
	0, 545, 876, 0, 0, 0, 0, 1250, 1523, -2,
	-2, 1544, 0, 1870, 1872, 1242, 0, 1687, 1244, 0,
	0, -2, 0, 0, 0, 1227, 1210, 0, 1277, 1275,
	1211, 1212, 1346, 0, 1315, 0, 1370, 128, 0, 895,
	896, 1853, 898, 0, 900, 903, 0, 906, 1893, 0,
	910, 0, 919, 941, 0, 872, 0, 946, 947, 948,
	1047, 1048, 952, 0, 130, 132, 150, 1050, 0, 133,
	140, 0, 0, 87, 0, 0, 1948, 114, 112, 110,
	89, 0, 170, 176, 1049, 165, 178, 156, 0, 0,
	0, 0, 0, 0, 824, 879, 0, 927, 0, 938,
	939, 828, 0, 826, 0, 0, 0, 0, 0, 350,
	353, 0, 356, 0, 1034, 0, 1040, 0, 0, 0,
	0, 1131, 1132, 365, 0, 0, 0, 1160, 1171, 217,
	0, 0, 859, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 860, 952, 0, 0, 916, 0, 222, 0,
	541, 0, 543, 0, 771, 773, 0, 0, 1615, 1705,
	0, 0, 1640, 1641, -2, 0, 1581, 1689, 1691, 0,
	1288, 1364, 893, 897, 0, 0, 0, 958, 0, 0,
	912, 0, 944, 945, 880, 0, 872, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 160, 179, 1050,
	189, 0, 190, 203, 0, 1007, 828, 0, 0, 836,
	0, 839, 0, 835, 832, 833, 872, 0, 354, 355,
	0, 0, 1041, 0, 0, 1133, 1134, 0, 1153, 1154,
	1156, 1161, 0, 0, 950, 952, 1361, 0, 540, 0,
	0, 776, 777, 0, 0, 0, 0, 1700, 1245, 1582,
	0, 0, 0, 0, 905, 963, 0, 0, 0, 942,
	943, 940, 0, 921, 0, 954, 135, 0, 952, 0,
	884, 0, 0, 887, 0, 0, 115, 1948, 113, 0,
	156, 186, 206, 0, 199, 200, 197, 198, 822, 0,
	0, 932, 934, 0, 840, 880, 838, 1008, 952, 0,
	950, 0, 1125, 0, 1155, 240, 240, 872, 950, 915,
	240, 542, 544, 1697, 1717, 1706, -2, 2160, 1952, 0,
	1717, 1717, 1692, 1693, 0, 0, 907, 959, 960, 0,
	955, 956, 957, 1892, 908, 909, 1361, 949, 0, 958,
	152, 872, 881, 0, 0, 882, 0, 0, 118, 0,
	120, 180, 193, 0, 0, 0, 931, 0, 0, 0,
	0, 824, 828, 950, 0, 872, 0, 1361, 219, 220,
	880, 872, 221, 1702, 0, 0, 1708, 1709, 1710, 1711,
	1712, 1703, 1704, 899, 0, 961, 0, 962, 0, 0,
	0, 920, 0, 963, 138, 885, 0, 888, 0, 116,
	0, 201, 202, 0, 933, 829, 0, 831, 828, 837,
	872, 0, 880, 0, 1152, 1361, 880, 0, 1714, 1715,
	0, 0, 0, 964, 0, 967, 968, 0, 965, 0,
	940, 0, 0, 0, 875, 830, 823, 880, 952, 1361,
	950, 913, 1361, 1713, 1716, 1707, 904, 966, 969, 970,
	951, 922, 0, 0, 0, 871, 873, 874, 1361, 950,
	1037, 872, 914, 880, 0, 204, 0, 1035, 872, 880,
	886, 0, 0, 880, 1361, 0, 205, 1361, 1038, 0,
	1036, 880, 889,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 487, 3, 493, 488, 3,
	498, 499, 491, 489, 503, 490, 500, 492, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 506, 3,
	479, 481, 480, 484, 502, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 496, 3, 497, 494, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 504, 486, 505, 482,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 483, 57822, 485, 57823, 495, 57824, 501,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1181
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1186
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1188
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1191
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1192
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1193
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1194
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1195
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1196
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1197
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1198
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1205
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1335
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1339
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1372
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1404
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1408
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1412
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1418
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1422
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1428
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1437
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1452
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1458
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1466
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1490
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1501
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1520
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1527
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1535
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1544
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1549
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1555
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1584
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1594
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1603
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1614
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1620
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1651
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1771
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1820
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = nil
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1965
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1969
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1976
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2038
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2056
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2064
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2091
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.partitionedBackup(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2218
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = nil
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2240
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2295
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2356
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2365
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2371
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2376
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2381
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2386
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2391
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2395
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2414
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2492
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2563
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2620
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2639
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2656
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2658
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2659
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2661
		{
			return helpWith(sqllex, "CREATE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2664
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			return unimplemented(sqllex, "create cast")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2666
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2668
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2669
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2670
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2671
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2672
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2675
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2676
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			return unimplemented(sqllex, "create operator")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplemented(sqllex, "create publication")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2679
		{
			return unimplemented(sqllex, "create rule")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			return unimplemented(sqllex, "create server")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2686
		{
		}
	case 302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2687
		{
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
		}
	case 304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2691
		{
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2695
		{
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2703
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2704
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2705
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2706
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2708
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2709
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2712
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2713
		{
			return unimplemented(sqllex, "drop server")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2727
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2808
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2836
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2871
		{

			sqlVAL.union.val = nil
		}
	case 365:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			return helpWith(sqllex, "DELETE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2899
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "DROP")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3080
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3145
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3169
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3177
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "DELETE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "INSERT")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "DELETE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "INSERT")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3254
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3287
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "GRANT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3399
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "RESET")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3428
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "RESET")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "USE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3473
		{
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "USE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplemented(sqllex, "set from current")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3714
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = tree.Low
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.Normal
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = tree.High
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "SHOW")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.str = "client_encoding"
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.str = "timezone"
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3947
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3995
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4004
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4034
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4101
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = true
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = true
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = false
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4246
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = true
		}
	case 732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = false
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = true
		}
	case 742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = false
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4319
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4351
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4372
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4398
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4441
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4449
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4486
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4509
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4532
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4665
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4717
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "RESUME")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4898
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4913
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = nil
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{

			sqlVAL.union.val = nil
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4940
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4955
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4960
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 836:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4992
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5005
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5019
		{
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = true
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = false
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = true
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = true
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = true
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = true
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5049
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5104
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5107
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5111
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5117
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5133
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.str = ""
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 889:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5327
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5448
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5486
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5566
		{
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5567
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5570
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5727
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5736
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5744
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5770
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5775
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5780
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5783
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = true
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5848
		{

			sqlVAL.union.val = true
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = false
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5863
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5877
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5889
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5900
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = nil
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5953
		{
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5972
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5976
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5978
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5980
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6016
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6033
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6051
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6067
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = false
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = true
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = false
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = true
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = false
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.str = ""
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6188
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6194
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6202
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6208
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6216
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6222
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6240
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6244
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6399
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6427
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6431
		{
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6459
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6474
		{
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6478
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.str = ""
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.str = ""
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.str = ""
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6631
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6710
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6711
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6719
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = true
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = false
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7151
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = nil
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7165
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = true
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = false
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = true
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7195
		{
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7236
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7257
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7262
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7291
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7379
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7476
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7486
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7509
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7528
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7567
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7577
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7612
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7623
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7653
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7686
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = nil
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = true
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.str = tree.AstFull
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.str = tree.AstRight
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.str = tree.AstInner
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7805
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.str = tree.AstHash
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.str = ""
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7891
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7897
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7955
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7963
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7964
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7982
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7992
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8005
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8012
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8073
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = types.Geography
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8098
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8106
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8140
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = nil
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = types.Int2
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = types.Int
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = types.Float4
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = types.Float
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8183
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8191
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = types.Bool
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = types.Float
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8232
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8238
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8260
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = types.String
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = true
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = false
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = types.Date
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8309
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8317
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8331
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8340
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8348
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8365
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = true
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = false
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = false
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = types.Interval
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8389
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8473
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = nil
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8518
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8896
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8918
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9117
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9167
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9197
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9208
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9209
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9299
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9429
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9495
		{
			return unimplemented(sqllex, "treat")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.str = ""
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9670
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9738
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9767
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = tree.Any
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = tree.Some
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = tree.All
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = tree.Div
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.LT
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = tree.GT
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = tree.LE
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = tree.GE
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.NE
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = tree.Like
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10129
		{
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10209
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10282
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10347
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10545
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.str = ""
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
