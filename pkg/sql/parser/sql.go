// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:880
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13716

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1596,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 413,
	-2, 0,
	-1, 74,
	244, 244,
	519, 244,
	-2, 0,
	-1, 88,
	232, 1332,
	246, 1332,
	262, 409,
	393, 409,
	404, 1086,
	443, 409,
	456, 1086,
	503, 1086,
	530, 409,
	556, 1086,
	-2, 0,
	-1, 94,
	133, 1596,
	239, 1596,
	541, 1596,
	542, 1596,
	-2, 0,
	-1, 112,
	151, 1567,
	170, 1567,
	183, 1567,
	242, 1567,
	275, 1567,
	344, 1567,
	354, 1567,
	536, 1567,
	-2, 1538,
	-1, 153,
	159, 926,
	261, 926,
	396, 887,
	461, 887,
	502, 887,
	522, 926,
	524, 887,
	-2, 0,
	-1, 157,
	4, 1598,
	21, 1598,
	22, 1598,
	23, 1598,
	24, 1598,
	25, 1598,
	26, 1598,
	27, 1598,
	29, 1598,
	30, 1598,
	36, 1598,
	41, 1598,
	42, 1598,
	44, 1598,
	45, 1598,
	46, 1598,
	47, 1598,
	48, 1598,
	49, 1598,
	50, 1598,
	51, 1598,
	53, 1598,
	54, 1598,
	55, 1598,
	56, 1598,
	58, 1598,
	59, 1598,
	60, 1598,
	61, 1598,
	62, 1598,
	63, 1598,
	64, 1598,
	68, 1598,
	69, 1598,
	70, 1598,
	71, 1598,
	73, 1598,
	74, 1598,
	75, 1598,
	79, 1598,
	80, 1598,
	81, 1598,
	82, 1598,
	83, 1598,
	84, 1598,
	85, 1598,
	88, 1598,
	89, 1598,
	90, 1598,
	91, 1598,
	92, 1598,
	94, 1598,
	96, 1598,
	97, 1598,
	98, 1598,
	99, 1598,
	100, 1598,
	101, 1598,
	103, 1598,
	104, 1598,
	105, 1598,
	107, 1598,
	108, 1598,
	109, 1598,
	117, 1598,
	118, 1598,
	119, 1598,
	120, 1598,
	121, 1598,
	123, 1598,
	124, 1598,
	125, 1598,
	126, 1598,
	128, 1598,
	129, 1598,
	130, 1598,
	132, 1598,
	133, 1598,
	134, 1598,
	136, 1598,
	137, 1598,
	138, 1598,
	141, 1598,
	142, 1598,
	143, 1598,
	145, 1598,
	146, 1598,
	148, 1598,
	149, 1598,
	150, 1598,
	152, 1598,
	153, 1598,
	154, 1598,
	155, 1598,
	156, 1598,
	157, 1598,
	158, 1598,
	159, 1598,
	160, 1598,
	161, 1598,
	162, 1598,
	163, 1598,
	164, 1598,
	165, 1598,
	166, 1598,
	167, 1598,
	169, 1598,
	175, 1598,
	176, 1598,
	177, 1598,
	178, 1598,
	182, 1598,
	184, 1598,
	185, 1598,
	186, 1598,
	190, 1598,
	191, 1598,
	192, 1598,
	193, 1598,
	194, 1598,
	195, 1598,
	196, 1598,
	197, 1598,
	198, 1598,
	199, 1598,
	200, 1598,
	201, 1598,
	202, 1598,
	203, 1598,
	205, 1598,
	206, 1598,
	208, 1598,
	209, 1598,
	211, 1598,
	212, 1598,
	213, 1598,
	214, 1598,
	215, 1598,
	216, 1598,
	217, 1598,
	218, 1598,
	219, 1598,
	221, 1598,
	222, 1598,
	224, 1598,
	225, 1598,
	226, 1598,
	227, 1598,
	228, 1598,
	232, 1598,
	233, 1598,
	234, 1598,
	235, 1598,
	236, 1598,
	239, 1598,
	240, 1598,
	241, 1598,
	243, 1598,
	245, 1598,
	246, 1598,
	248, 1598,
	250, 1598,
	251, 1598,
	252, 1598,
	254, 1598,
	258, 1598,
	259, 1598,
	260, 1598,
	261, 1598,
	262, 1598,
	263, 1598,
	265, 1598,
	266, 1598,
	267, 1598,
	269, 1598,
	270, 1598,
	272, 1598,
	273, 1598,
	276, 1598,
	277, 1598,
	278, 1598,
	279, 1598,
	280, 1598,
	281, 1598,
	282, 1598,
	285, 1598,
	286, 1598,
	287, 1598,
	288, 1598,
	290, 1598,
	291, 1598,
	292, 1598,
	293, 1598,
	294, 1598,
	295, 1598,
	296, 1598,
	297, 1598,
	298, 1598,
	299, 1598,
	300, 1598,
	301, 1598,
	302, 1598,
	303, 1598,
	304, 1598,
	305, 1598,
	306, 1598,
	307, 1598,
	308, 1598,
	309, 1598,
	310, 1598,
	311, 1598,
	313, 1598,
	315, 1598,
	316, 1598,
	317, 1598,
	318, 1598,
	319, 1598,
	320, 1598,
	321, 1598,
	322, 1598,
	323, 1598,
	324, 1598,
	325, 1598,
	326, 1598,
	327, 1598,
	328, 1598,
	329, 1598,
	331, 1598,
	332, 1598,
	334, 1598,
	336, 1598,
	337, 1598,
	339, 1598,
	340, 1598,
	341, 1598,
	342, 1598,
	343, 1598,
	346, 1598,
	349, 1598,
	350, 1598,
	351, 1598,
	352, 1598,
	355, 1598,
	356, 1598,
	357, 1598,
	359, 1598,
	361, 1598,
	362, 1598,
	363, 1598,
	364, 1598,
	365, 1598,
	366, 1598,
	367, 1598,
	368, 1598,
	369, 1598,
	370, 1598,
	371, 1598,
	372, 1598,
	373, 1598,
	375, 1598,
	376, 1598,
	377, 1598,
	378, 1598,
	379, 1598,
	380, 1598,
	381, 1598,
	382, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	386, 1598,
	387, 1598,
	388, 1598,
	389, 1598,
	391, 1598,
	392, 1598,
	394, 1598,
	395, 1598,
	396, 1598,
	397, 1598,
	398, 1598,
	399, 1598,
	400, 1598,
	401, 1598,
	402, 1598,
	403, 1598,
	404, 1598,
	405, 1598,
	406, 1598,
	408, 1598,
	410, 1598,
	411, 1598,
	412, 1598,
	418, 1598,
	420, 1598,
	421, 1598,
	422, 1598,
	423, 1598,
	424, 1598,
	425, 1598,
	426, 1598,
	427, 1598,
	428, 1598,
	429, 1598,
	431, 1598,
	432, 1598,
	433, 1598,
	435, 1598,
	436, 1598,
	437, 1598,
	438, 1598,
	439, 1598,
	440, 1598,
	441, 1598,
	443, 1598,
	444, 1598,
	445, 1598,
	446, 1598,
	447, 1598,
	448, 1598,
	449, 1598,
	450, 1598,
	451, 1598,
	452, 1598,
	453, 1598,
	454, 1598,
	456, 1598,
	457, 1598,
	458, 1598,
	459, 1598,
	460, 1598,
	461, 1598,
	463, 1598,
	464, 1598,
	465, 1598,
	466, 1598,
	467, 1598,
	468, 1598,
	470, 1598,
	471, 1598,
	472, 1598,
	473, 1598,
	474, 1598,
	475, 1598,
	476, 1598,
	477, 1598,
	479, 1598,
	481, 1598,
	482, 1598,
	483, 1598,
	484, 1598,
	485, 1598,
	486, 1598,
	487, 1598,
	488, 1598,
	489, 1598,
	490, 1598,
	491, 1598,
	492, 1598,
	493, 1598,
	494, 1598,
	495, 1598,
	496, 1598,
	498, 1598,
	499, 1598,
	501, 1598,
	502, 1598,
	504, 1598,
	505, 1598,
	506, 1598,
	507, 1598,
	508, 1598,
	509, 1598,
	510, 1598,
	511, 1598,
	512, 1598,
	514, 1598,
	515, 1598,
	516, 1598,
	517, 1598,
	518, 1598,
	520, 1598,
	522, 1598,
	523, 1598,
	524, 1598,
	525, 1598,
	526, 1598,
	527, 1598,
	529, 1598,
	530, 1598,
	531, 1598,
	532, 1598,
	534, 1598,
	535, 1598,
	538, 1598,
	539, 1598,
	540, 1598,
	541, 1598,
	542, 1598,
	543, 1598,
	544, 1598,
	546, 1598,
	549, 1598,
	550, 1598,
	551, 1598,
	552, 1598,
	553, 1598,
	554, 1598,
	556, 1598,
	557, 1598,
	558, 1598,
	559, 1598,
	560, 1598,
	561, 1598,
	566, 1598,
	567, 1598,
	568, 1598,
	569, 1598,
	570, 1598,
	571, 1598,
	-2, 0,
	-1, 158,
	1, 1449,
	131, 1449,
	250, 1449,
	333, 1449,
	391, 1449,
	400, 1449,
	575, 1449,
	604, 1449,
	-2, 0,
	-1, 160,
	1, 1449,
	604, 1449,
	-2, 0,
	-1, 161,
	1, 1449,
	604, 1449,
	-2, 0,
	-1, 162,
	1, 1449,
	519, 1449,
	604, 1449,
	-2, 0,
	-1, 191,
	151, 1566,
	170, 1566,
	183, 1566,
	242, 1566,
	275, 1566,
	344, 1566,
	354, 1566,
	536, 1566,
	-2, 1541,
	-1, 239,
	4, 1605,
	5, 1605,
	6, 1605,
	7, 1605,
	8, 1605,
	9, 1605,
	10, 1605,
	21, 1605,
	22, 1605,
	23, 1605,
	24, 1605,
	25, 1605,
	26, 1605,
	27, 1605,
	29, 1605,
	30, 1605,
	36, 1605,
	37, 1605,
	41, 1605,
	42, 1605,
	43, 1605,
	44, 1605,
	45, 1605,
	46, 1605,
	47, 1605,
	48, 1605,
	49, 1605,
	50, 1605,
	51, 1605,
	53, 1605,
	54, 1605,
	55, 1605,
	56, 1605,
	58, 1605,
	59, 1605,
	60, 1605,
	61, 1605,
	62, 1605,
	63, 1605,
	64, 1605,
	65, 1605,
	66, 1605,
	67, 1605,
	68, 1605,
	69, 1605,
	70, 1605,
	71, 1605,
	73, 1605,
	74, 1605,
	75, 1605,
	77, 1605,
	79, 1605,
	80, 1605,
	81, 1605,
	82, 1605,
	83, 1605,
	84, 1605,
	85, 1605,
	88, 1605,
	89, 1605,
	90, 1605,
	91, 1605,
	92, 1605,
	94, 1605,
	96, 1605,
	97, 1605,
	98, 1605,
	99, 1605,
	100, 1605,
	101, 1605,
	103, 1605,
	104, 1605,
	105, 1605,
	106, 1605,
	107, 1605,
	108, 1605,
	109, 1605,
	110, 1605,
	111, 1605,
	112, 1605,
	113, 1605,
	114, 1605,
	115, 1605,
	116, 1605,
	117, 1605,
	118, 1605,
	119, 1605,
	120, 1605,
	121, 1605,
	122, 1605,
	123, 1605,
	124, 1605,
	125, 1605,
	126, 1605,
	127, 1605,
	128, 1605,
	129, 1605,
	130, 1605,
	132, 1605,
	133, 1605,
	134, 1605,
	136, 1605,
	137, 1605,
	138, 1605,
	141, 1605,
	142, 1605,
	143, 1605,
	145, 1605,
	146, 1605,
	148, 1605,
	149, 1605,
	150, 1605,
	152, 1605,
	153, 1605,
	154, 1605,
	155, 1605,
	156, 1605,
	157, 1605,
	158, 1605,
	159, 1605,
	160, 1605,
	161, 1605,
	162, 1605,
	163, 1605,
	164, 1605,
	165, 1605,
	166, 1605,
	167, 1605,
	168, 1605,
	169, 1605,
	175, 1605,
	176, 1605,
	177, 1605,
	178, 1605,
	182, 1605,
	184, 1605,
	185, 1605,
	186, 1605,
	189, 1605,
	190, 1605,
	191, 1605,
	192, 1605,
	193, 1605,
	194, 1605,
	195, 1605,
	196, 1605,
	197, 1605,
	198, 1605,
	199, 1605,
	200, 1605,
	201, 1605,
	202, 1605,
	203, 1605,
	205, 1605,
	206, 1605,
	208, 1605,
	209, 1605,
	211, 1605,
	212, 1605,
	213, 1605,
	214, 1605,
	215, 1605,
	216, 1605,
	217, 1605,
	218, 1605,
	219, 1605,
	220, 1605,
	221, 1605,
	222, 1605,
	224, 1605,
	225, 1605,
	226, 1605,
	227, 1605,
	228, 1605,
	232, 1605,
	233, 1605,
	234, 1605,
	235, 1605,
	236, 1605,
	238, 1605,
	239, 1605,
	240, 1605,
	241, 1605,
	243, 1605,
	245, 1605,
	246, 1605,
	247, 1605,
	248, 1605,
	249, 1605,
	250, 1605,
	251, 1605,
	252, 1605,
	253, 1605,
	254, 1605,
	258, 1605,
	259, 1605,
	260, 1605,
	261, 1605,
	262, 1605,
	263, 1605,
	265, 1605,
	266, 1605,
	267, 1605,
	269, 1605,
	270, 1605,
	271, 1605,
	272, 1605,
	273, 1605,
	274, 1605,
	276, 1605,
	277, 1605,
	278, 1605,
	279, 1605,
	280, 1605,
	281, 1605,
	282, 1605,
	283, 1605,
	284, 1605,
	285, 1605,
	286, 1605,
	287, 1605,
	288, 1605,
	290, 1605,
	291, 1605,
	292, 1605,
	293, 1605,
	294, 1605,
	295, 1605,
	296, 1605,
	297, 1605,
	298, 1605,
	299, 1605,
	300, 1605,
	301, 1605,
	302, 1605,
	303, 1605,
	304, 1605,
	305, 1605,
	306, 1605,
	307, 1605,
	308, 1605,
	309, 1605,
	310, 1605,
	311, 1605,
	313, 1605,
	314, 1605,
	315, 1605,
	316, 1605,
	317, 1605,
	318, 1605,
	319, 1605,
	320, 1605,
	321, 1605,
	322, 1605,
	323, 1605,
	324, 1605,
	325, 1605,
	326, 1605,
	327, 1605,
	328, 1605,
	329, 1605,
	330, 1605,
	331, 1605,
	332, 1605,
	333, 1605,
	334, 1605,
	335, 1605,
	336, 1605,
	337, 1605,
	338, 1605,
	339, 1605,
	340, 1605,
	341, 1605,
	342, 1605,
	343, 1605,
	346, 1605,
	350, 1605,
	351, 1605,
	352, 1605,
	355, 1605,
	356, 1605,
	357, 1605,
	358, 1605,
	359, 1605,
	360, 1605,
	361, 1605,
	362, 1605,
	363, 1605,
	364, 1605,
	365, 1605,
	366, 1605,
	367, 1605,
	368, 1605,
	369, 1605,
	370, 1605,
	371, 1605,
	372, 1605,
	373, 1605,
	375, 1605,
	376, 1605,
	377, 1605,
	378, 1605,
	379, 1605,
	380, 1605,
	381, 1605,
	382, 1605,
	383, 1605,
	384, 1605,
	385, 1605,
	386, 1605,
	387, 1605,
	388, 1605,
	389, 1605,
	391, 1605,
	392, 1605,
	394, 1605,
	395, 1605,
	396, 1605,
	397, 1605,
	398, 1605,
	399, 1605,
	400, 1605,
	401, 1605,
	402, 1605,
	403, 1605,
	404, 1605,
	405, 1605,
	406, 1605,
	408, 1605,
	410, 1605,
	411, 1605,
	412, 1605,
	418, 1605,
	420, 1605,
	421, 1605,
	422, 1605,
	423, 1605,
	424, 1605,
	425, 1605,
	426, 1605,
	427, 1605,
	428, 1605,
	429, 1605,
	431, 1605,
	432, 1605,
	433, 1605,
	434, 1605,
	435, 1605,
	436, 1605,
	437, 1605,
	438, 1605,
	439, 1605,
	440, 1605,
	441, 1605,
	443, 1605,
	444, 1605,
	445, 1605,
	446, 1605,
	447, 1605,
	448, 1605,
	449, 1605,
	450, 1605,
	451, 1605,
	452, 1605,
	453, 1605,
	454, 1605,
	456, 1605,
	457, 1605,
	458, 1605,
	459, 1605,
	460, 1605,
	461, 1605,
	462, 1605,
	463, 1605,
	464, 1605,
	465, 1605,
	466, 1605,
	467, 1605,
	468, 1605,
	469, 1605,
	470, 1605,
	471, 1605,
	472, 1605,
	473, 1605,
	474, 1605,
	475, 1605,
	476, 1605,
	477, 1605,
	479, 1605,
	481, 1605,
	482, 1605,
	483, 1605,
	484, 1605,
	485, 1605,
	486, 1605,
	487, 1605,
	488, 1605,
	489, 1605,
	490, 1605,
	491, 1605,
	492, 1605,
	493, 1605,
	494, 1605,
	495, 1605,
	496, 1605,
	498, 1605,
	499, 1605,
	500, 1605,
	501, 1605,
	502, 1605,
	504, 1605,
	505, 1605,
	506, 1605,
	507, 1605,
	508, 1605,
	509, 1605,
	510, 1605,
	511, 1605,
	512, 1605,
	514, 1605,
	515, 1605,
	516, 1605,
	517, 1605,
	518, 1605,
	520, 1605,
	522, 1605,
	523, 1605,
	524, 1605,
	525, 1605,
	526, 1605,
	527, 1605,
	528, 1605,
	529, 1605,
	530, 1605,
	531, 1605,
	532, 1605,
	534, 1605,
	535, 1605,
	537, 1605,
	538, 1605,
	539, 1605,
	540, 1605,
	541, 1605,
	542, 1605,
	543, 1605,
	544, 1605,
	545, 1605,
	546, 1605,
	549, 1605,
	550, 1605,
	551, 1605,
	552, 1605,
	553, 1605,
	554, 1605,
	556, 1605,
	557, 1605,
	558, 1605,
	559, 1605,
	560, 1605,
	561, 1605,
	566, 1605,
	567, 1605,
	568, 1605,
	569, 1605,
	570, 1605,
	571, 1605,
	572, 1605,
	585, 1605,
	592, 1605,
	593, 1605,
	594, 1605,
	601, 1605,
	605, 1605,
	-2, 0,
	-1, 752,
	4, 1330,
	21, 1330,
	22, 1330,
	23, 1330,
	24, 1330,
	25, 1330,
	26, 1330,
	27, 1330,
	29, 1330,
	30, 1330,
	36, 1330,
	41, 1330,
	42, 1330,
	44, 1330,
	45, 1330,
	46, 1330,
	47, 1330,
	48, 1330,
	49, 1330,
	50, 1330,
	51, 1330,
	53, 1330,
	54, 1330,
	55, 1330,
	56, 1330,
	58, 1330,
	59, 1330,
	60, 1330,
	61, 1330,
	62, 1330,
	63, 1330,
	64, 1330,
	68, 1330,
	69, 1330,
	70, 1330,
	71, 1330,
	73, 1330,
	74, 1330,
	75, 1330,
	79, 1330,
	80, 1330,
	81, 1330,
	82, 1330,
	83, 1330,
	84, 1330,
	85, 1330,
	88, 1330,
	89, 1330,
	90, 1330,
	91, 1330,
	92, 1330,
	94, 1330,
	96, 1330,
	97, 1330,
	98, 1330,
	99, 1330,
	100, 1330,
	101, 1330,
	103, 1330,
	104, 1330,
	105, 1330,
	107, 1330,
	108, 1330,
	109, 1330,
	117, 1330,
	118, 1330,
	119, 1330,
	120, 1330,
	121, 1330,
	123, 1330,
	124, 1330,
	125, 1330,
	126, 1330,
	128, 1330,
	129, 1330,
	130, 1330,
	132, 1330,
	133, 1330,
	134, 1330,
	136, 1330,
	137, 1330,
	138, 1330,
	141, 1330,
	142, 1330,
	143, 1330,
	145, 1330,
	146, 1330,
	148, 1330,
	149, 1330,
	150, 1330,
	152, 1330,
	153, 1330,
	154, 1330,
	155, 1330,
	156, 1330,
	157, 1330,
	158, 1330,
	159, 1330,
	160, 1330,
	161, 1330,
	162, 1330,
	163, 1330,
	164, 1330,
	165, 1330,
	166, 1330,
	167, 1330,
	169, 1330,
	175, 1330,
	176, 1330,
	177, 1330,
	178, 1330,
	182, 1330,
	184, 1330,
	185, 1330,
	186, 1330,
	190, 1330,
	191, 1330,
	192, 1330,
	193, 1330,
	194, 1330,
	195, 1330,
	196, 1330,
	197, 1330,
	198, 1330,
	199, 1330,
	200, 1330,
	201, 1330,
	202, 1330,
	203, 1330,
	205, 1330,
	206, 1330,
	208, 1330,
	209, 1330,
	211, 1330,
	212, 1330,
	213, 1330,
	214, 1330,
	215, 1330,
	216, 1330,
	217, 1330,
	218, 1330,
	219, 1330,
	221, 1330,
	222, 1330,
	224, 1330,
	225, 1330,
	226, 1330,
	227, 1330,
	228, 1330,
	232, 1330,
	233, 1330,
	234, 1330,
	235, 1330,
	236, 1330,
	239, 1330,
	240, 1330,
	241, 1330,
	243, 1330,
	245, 1330,
	246, 1330,
	248, 1330,
	250, 1330,
	251, 1330,
	252, 1330,
	254, 1330,
	258, 1330,
	259, 1330,
	260, 1330,
	261, 1330,
	262, 1330,
	263, 1330,
	265, 1330,
	266, 1330,
	267, 1330,
	269, 1330,
	270, 1330,
	272, 1330,
	273, 1330,
	276, 1330,
	277, 1330,
	278, 1330,
	279, 1330,
	280, 1330,
	281, 1330,
	282, 1330,
	285, 1330,
	286, 1330,
	287, 1330,
	288, 1330,
	290, 1330,
	291, 1330,
	292, 1330,
	293, 1330,
	294, 1330,
	295, 1330,
	296, 1330,
	297, 1330,
	298, 1330,
	299, 1330,
	300, 1330,
	301, 1330,
	302, 1330,
	303, 1330,
	304, 1330,
	305, 1330,
	306, 1330,
	307, 1330,
	308, 1330,
	309, 1330,
	310, 1330,
	311, 1330,
	313, 1330,
	315, 1330,
	316, 1330,
	317, 1330,
	318, 1330,
	319, 1330,
	320, 1330,
	321, 1330,
	322, 1330,
	323, 1330,
	324, 1330,
	325, 1330,
	326, 1330,
	327, 1330,
	328, 1330,
	329, 1330,
	331, 1330,
	332, 1330,
	334, 1330,
	336, 1330,
	337, 1330,
	339, 1330,
	340, 1330,
	341, 1330,
	342, 1330,
	343, 1330,
	346, 1330,
	350, 1330,
	351, 1330,
	352, 1330,
	355, 1330,
	356, 1330,
	357, 1330,
	359, 1330,
	361, 1330,
	362, 1330,
	363, 1330,
	364, 1330,
	365, 1330,
	366, 1330,
	367, 1330,
	368, 1330,
	369, 1330,
	370, 1330,
	371, 1330,
	372, 1330,
	373, 1330,
	375, 1330,
	376, 1330,
	377, 1330,
	378, 1330,
	379, 1330,
	380, 1330,
	381, 1330,
	382, 1330,
	383, 1330,
	384, 1330,
	385, 1330,
	386, 1330,
	387, 1330,
	388, 1330,
	389, 1330,
	391, 1330,
	392, 1330,
	394, 1330,
	395, 1330,
	396, 1330,
	397, 1330,
	398, 1330,
	399, 1330,
	400, 1330,
	401, 1330,
	402, 1330,
	403, 1330,
	404, 1330,
	405, 1330,
	406, 1330,
	408, 1330,
	410, 1330,
	411, 1330,
	412, 1330,
	418, 1330,
	420, 1330,
	421, 1330,
	422, 1330,
	423, 1330,
	424, 1330,
	425, 1330,
	426, 1330,
	427, 1330,
	428, 1330,
	429, 1330,
	431, 1330,
	432, 1330,
	433, 1330,
	435, 1330,
	436, 1330,
	437, 1330,
	438, 1330,
	439, 1330,
	440, 1330,
	441, 1330,
	443, 1330,
	444, 1330,
	445, 1330,
	446, 1330,
	447, 1330,
	448, 1330,
	449, 1330,
	450, 1330,
	451, 1330,
	452, 1330,
	453, 1330,
	454, 1330,
	456, 1330,
	457, 1330,
	458, 1330,
	459, 1330,
	460, 1330,
	461, 1330,
	463, 1330,
	464, 1330,
	465, 1330,
	466, 1330,
	467, 1330,
	468, 1330,
	470, 1330,
	471, 1330,
	472, 1330,
	473, 1330,
	474, 1330,
	475, 1330,
	476, 1330,
	477, 1330,
	479, 1330,
	481, 1330,
	482, 1330,
	483, 1330,
	484, 1330,
	485, 1330,
	486, 1330,
	487, 1330,
	488, 1330,
	489, 1330,
	490, 1330,
	491, 1330,
	492, 1330,
	493, 1330,
	494, 1330,
	495, 1330,
	496, 1330,
	498, 1330,
	499, 1330,
	501, 1330,
	502, 1330,
	504, 1330,
	505, 1330,
	506, 1330,
	507, 1330,
	508, 1330,
	509, 1330,
	510, 1330,
	511, 1330,
	512, 1330,
	514, 1330,
	515, 1330,
	516, 1330,
	517, 1330,
	518, 1330,
	520, 1330,
	522, 1330,
	523, 1330,
	524, 1330,
	525, 1330,
	526, 1330,
	527, 1330,
	529, 1330,
	530, 1330,
	531, 1330,
	532, 1330,
	534, 1330,
	535, 1330,
	538, 1330,
	539, 1330,
	540, 1330,
	541, 1330,
	542, 1330,
	543, 1330,
	544, 1330,
	546, 1330,
	549, 1330,
	550, 1330,
	551, 1330,
	552, 1330,
	553, 1330,
	554, 1330,
	556, 1330,
	557, 1330,
	558, 1330,
	559, 1330,
	560, 1330,
	561, 1330,
	566, 1330,
	567, 1330,
	568, 1330,
	569, 1330,
	570, 1330,
	571, 1330,
	-2, 0,
	-1, 771,
	188, 2397,
	519, 2397,
	584, 2397,
	603, 2397,
	-2, 0,
	-1, 772,
	188, 2384,
	519, 2384,
	584, 2384,
	603, 2384,
	-2, 0,
	-1, 774,
	188, 2648,
	519, 2648,
	584, 2648,
	603, 2648,
	-2, 0,
	-1, 777,
	188, 2509,
	519, 2509,
	584, 2509,
	603, 2509,
	-2, 0,
	-1, 778,
	188, 2689,
	519, 2689,
	584, 2689,
	603, 2689,
	-2, 0,
	-1, 786,
	188, 2536,
	519, 2536,
	584, 2536,
	603, 2536,
	-2, 708,
	-1, 821,
	603, 2333,
	606, 2333,
	-2, 1007,
	-1, 822,
	603, 2335,
	606, 2335,
	-2, 1008,
	-1, 823,
	603, 2334,
	606, 2334,
	-2, 1009,
	-1, 824,
	606, 2259,
	-2, 1010,
	-1, 849,
	183, 263,
	-2, 0,
	-1, 873,
	43, 2306,
	-2, 0,
	-1, 874,
	556, 1308,
	-2, 1087,
	-1, 890,
	4, 1739,
	21, 1739,
	22, 1739,
	23, 1739,
	24, 1739,
	25, 1739,
	26, 1739,
	27, 1739,
	29, 1739,
	30, 1739,
	36, 1739,
	41, 1739,
	42, 1739,
	44, 1739,
	45, 1739,
	46, 1739,
	47, 1739,
	48, 1739,
	49, 1739,
	50, 1739,
	51, 1739,
	53, 1739,
	54, 1739,
	55, 1739,
	56, 1739,
	58, 1739,
	59, 1739,
	60, 1739,
	61, 1739,
	62, 1739,
	63, 1739,
	64, 1739,
	68, 1739,
	69, 1739,
	70, 1739,
	71, 1739,
	73, 1739,
	74, 1739,
	75, 1739,
	79, 1739,
	80, 1739,
	81, 1739,
	82, 1739,
	83, 1739,
	84, 1739,
	85, 1739,
	88, 1739,
	89, 1739,
	90, 1739,
	91, 1739,
	92, 1739,
	94, 1739,
	96, 1739,
	97, 1739,
	98, 1739,
	99, 1739,
	100, 1739,
	101, 1739,
	103, 1739,
	104, 1739,
	105, 1739,
	107, 1739,
	108, 1739,
	109, 1739,
	117, 1739,
	118, 1739,
	119, 1739,
	120, 1739,
	121, 1739,
	123, 1739,
	124, 1739,
	125, 1739,
	126, 1739,
	128, 1739,
	129, 1739,
	130, 1739,
	132, 1739,
	133, 1739,
	134, 1739,
	136, 1739,
	137, 1739,
	138, 1739,
	141, 1739,
	142, 1739,
	143, 1739,
	145, 1739,
	146, 1739,
	148, 1739,
	149, 1739,
	150, 1739,
	152, 1739,
	153, 1739,
	154, 1739,
	155, 1739,
	156, 1739,
	157, 1739,
	158, 1739,
	159, 1739,
	160, 1739,
	161, 1739,
	162, 1739,
	163, 1739,
	164, 1739,
	165, 1739,
	166, 1739,
	167, 1739,
	169, 1739,
	175, 1739,
	176, 1739,
	177, 1739,
	178, 1739,
	182, 1739,
	184, 1739,
	185, 1739,
	186, 1739,
	190, 1739,
	191, 1739,
	192, 1739,
	193, 1739,
	194, 1739,
	195, 1739,
	196, 1739,
	197, 1739,
	198, 1739,
	199, 1739,
	200, 1739,
	201, 1739,
	202, 1739,
	203, 1739,
	205, 1739,
	206, 1739,
	208, 1739,
	209, 1739,
	211, 1739,
	212, 1739,
	213, 1739,
	214, 1739,
	215, 1739,
	216, 1739,
	217, 1739,
	218, 1739,
	219, 1739,
	221, 1739,
	222, 1739,
	224, 1739,
	225, 1739,
	226, 1739,
	227, 1739,
	228, 1739,
	232, 1739,
	233, 1739,
	234, 1739,
	235, 1739,
	236, 1739,
	239, 1739,
	240, 1739,
	241, 1739,
	243, 1739,
	245, 1739,
	246, 1739,
	248, 1739,
	250, 1739,
	251, 1739,
	252, 1739,
	254, 1739,
	258, 1739,
	259, 1739,
	260, 1739,
	261, 1739,
	262, 1739,
	263, 1739,
	265, 1739,
	266, 1739,
	267, 1739,
	269, 1739,
	270, 1739,
	272, 1739,
	273, 1739,
	276, 1739,
	277, 1739,
	278, 1739,
	279, 1739,
	280, 1739,
	281, 1739,
	282, 1739,
	285, 1739,
	286, 1739,
	287, 1739,
	288, 1739,
	290, 1739,
	291, 1739,
	292, 1739,
	293, 1739,
	294, 1739,
	295, 1739,
	296, 1739,
	297, 1739,
	298, 1739,
	299, 1739,
	300, 1739,
	301, 1739,
	302, 1739,
	303, 1739,
	304, 1739,
	305, 1739,
	306, 1739,
	307, 1739,
	308, 1739,
	309, 1739,
	310, 1739,
	311, 1739,
	313, 1739,
	315, 1739,
	316, 1739,
	317, 1739,
	318, 1739,
	319, 1739,
	320, 1739,
	321, 1739,
	322, 1739,
	323, 1739,
	324, 1739,
	325, 1739,
	326, 1739,
	327, 1739,
	328, 1739,
	329, 1739,
	331, 1739,
	332, 1739,
	334, 1739,
	336, 1739,
	337, 1739,
	339, 1739,
	340, 1739,
	341, 1739,
	342, 1739,
	343, 1739,
	346, 1739,
	350, 1739,
	351, 1739,
	352, 1739,
	355, 1739,
	356, 1739,
	357, 1739,
	359, 1739,
	361, 1739,
	362, 1739,
	363, 1739,
	364, 1739,
	365, 1739,
	366, 1739,
	367, 1739,
	368, 1739,
	369, 1739,
	370, 1739,
	371, 1739,
	372, 1739,
	373, 1739,
	375, 1739,
	376, 1739,
	377, 1739,
	378, 1739,
	379, 1739,
	380, 1739,
	381, 1739,
	382, 1739,
	383, 1739,
	384, 1739,
	385, 1739,
	386, 1739,
	387, 1739,
	388, 1739,
	389, 1739,
	391, 1739,
	392, 1739,
	394, 1739,
	395, 1739,
	396, 1739,
	397, 1739,
	398, 1739,
	399, 1739,
	400, 1739,
	401, 1739,
	402, 1739,
	403, 1739,
	404, 1739,
	405, 1739,
	406, 1739,
	408, 1739,
	410, 1739,
	411, 1739,
	412, 1739,
	418, 1739,
	420, 1739,
	421, 1739,
	422, 1739,
	423, 1739,
	424, 1739,
	425, 1739,
	426, 1739,
	427, 1739,
	428, 1739,
	429, 1739,
	431, 1739,
	432, 1739,
	433, 1739,
	435, 1739,
	436, 1739,
	437, 1739,
	438, 1739,
	439, 1739,
	440, 1739,
	441, 1739,
	443, 1739,
	444, 1739,
	445, 1739,
	446, 1739,
	447, 1739,
	448, 1739,
	449, 1739,
	450, 1739,
	451, 1739,
	452, 1739,
	453, 1739,
	454, 1739,
	456, 1739,
	457, 1739,
	458, 1739,
	459, 1739,
	460, 1739,
	461, 1739,
	463, 1739,
	464, 1739,
	465, 1739,
	466, 1739,
	467, 1739,
	468, 1739,
	470, 1739,
	471, 1739,
	472, 1739,
	473, 1739,
	474, 1739,
	475, 1739,
	476, 1739,
	477, 1739,
	479, 1739,
	481, 1739,
	482, 1739,
	483, 1739,
	484, 1739,
	485, 1739,
	486, 1739,
	487, 1739,
	488, 1739,
	489, 1739,
	490, 1739,
	491, 1739,
	492, 1739,
	493, 1739,
	494, 1739,
	495, 1739,
	496, 1739,
	498, 1739,
	499, 1739,
	501, 1739,
	502, 1739,
	504, 1739,
	505, 1739,
	506, 1739,
	507, 1739,
	508, 1739,
	509, 1739,
	510, 1739,
	511, 1739,
	512, 1739,
	514, 1739,
	515, 1739,
	516, 1739,
	517, 1739,
	518, 1739,
	520, 1739,
	522, 1739,
	523, 1739,
	524, 1739,
	525, 1739,
	526, 1739,
	527, 1739,
	529, 1739,
	530, 1739,
	531, 1739,
	532, 1739,
	534, 1739,
	535, 1739,
	538, 1739,
	539, 1739,
	540, 1739,
	541, 1739,
	542, 1739,
	543, 1739,
	544, 1739,
	546, 1739,
	549, 1739,
	550, 1739,
	551, 1739,
	552, 1739,
	553, 1739,
	554, 1739,
	556, 1739,
	557, 1739,
	558, 1739,
	559, 1739,
	560, 1739,
	561, 1739,
	566, 1739,
	567, 1739,
	568, 1739,
	569, 1739,
	570, 1739,
	571, 1739,
	-2, 0,
	-1, 900,
	262, 413,
	-2, 0,
	-1, 977,
	396, 888,
	461, 888,
	502, 888,
	524, 888,
	-2, 0,
	-1, 978,
	396, 887,
	461, 887,
	502, 887,
	524, 887,
	-2, 819,
	-1, 982,
	1, 940,
	600, 940,
	602, 940,
	604, 940,
	-2, 0,
	-1, 984,
	1, 862,
	600, 862,
	602, 862,
	604, 862,
	-2, 0,
	-1, 985,
	1, 866,
	600, 866,
	602, 866,
	604, 866,
	-2, 0,
	-1, 986,
	1, 1006,
	183, 1006,
	600, 1006,
	602, 1006,
	604, 1006,
	-2, 0,
	-1, 994,
	1, 893,
	600, 893,
	602, 893,
	604, 893,
	-2, 0,
	-1, 1001,
	1, 940,
	600, 940,
	602, 940,
	604, 940,
	-2, 0,
	-1, 1002,
	1, 942,
	600, 942,
	602, 942,
	604, 942,
	-2, 0,
	-1, 1003,
	1, 945,
	600, 945,
	602, 945,
	604, 945,
	-2, 0,
	-1, 1009,
	1, 970,
	600, 970,
	602, 970,
	604, 970,
	-2, 0,
	-1, 1010,
	1, 972,
	600, 972,
	602, 972,
	604, 972,
	-2, 0,
	-1, 1015,
	1, 1000,
	600, 1000,
	602, 1000,
	604, 1000,
	-2, 0,
	-1, 1067,
	170, 1609,
	183, 1609,
	275, 1609,
	344, 1609,
	-2, 1545,
	-1, 1082,
	170, 1608,
	183, 1608,
	275, 1608,
	344, 1608,
	-2, 1542,
	-1, 1109,
	603, 2332,
	-2, 716,
	-1, 1138,
	5, 2324,
	601, 2322,
	-2, 2313,
	-1, 1146,
	5, 2345,
	601, 2342,
	-2, 2333,
	-1, 1147,
	5, 2346,
	601, 2343,
	-2, 2334,
	-1, 1155,
	603, 2330,
	-2, 2312,
	-1, 1156,
	601, 2773,
	-2, 2331,
	-1, 1179,
	601, 2772,
	-2, 2347,
	-1, 1180,
	5, 1814,
	-2, 2743,
	-1, 1181,
	5, 1815,
	-2, 2744,
	-1, 1182,
	5, 1816,
	-2, 2758,
	-1, 1183,
	5, 1817,
	-2, 2722,
	-1, 1184,
	5, 1818,
	-2, 2756,
	-1, 1185,
	5, 1826,
	-2, 2735,
	-1, 1186,
	5, 1813,
	-2, 2731,
	-1, 1187,
	5, 1813,
	-2, 2730,
	-1, 1188,
	5, 1813,
	-2, 2749,
	-1, 1189,
	5, 1824,
	-2, 2724,
	-1, 1190,
	5, 1829,
	-2, 2723,
	-1, 1191,
	5, 1831,
	-2, 2768,
	-1, 1194,
	5, 1853,
	-2, 2761,
	-1, 1195,
	5, 1845,
	-2, 2762,
	-1, 1196,
	5, 1853,
	-2, 2763,
	-1, 1197,
	5, 1849,
	-2, 2764,
	-1, 1198,
	5, 1799,
	-2, 2736,
	-1, 1199,
	5, 1800,
	-2, 2737,
	-1, 1200,
	5, 1801,
	-2, 2725,
	-1, 1228,
	5, 1836,
	-2, 2769,
	-1, 1229,
	5, 1837,
	-2, 2759,
	-1, 1230,
	5, 1838,
	557, 1838,
	-2, 2726,
	-1, 1231,
	5, 1839,
	557, 1839,
	-2, 2727,
	-1, 1268,
	601, 2342,
	-2, 2333,
	-1, 1269,
	601, 2343,
	-2, 2334,
	-1, 1365,
	188, 2689,
	519, 2689,
	584, 2689,
	603, 2689,
	-2, 0,
	-1, 1370,
	1, 692,
	604, 692,
	-2, 1457,
	-1, 1500,
	363, 2307,
	420, 2307,
	463, 2307,
	594, 2307,
	-2, 2297,
	-1, 1511,
	605, 2307,
	-2, 2309,
	-1, 1519,
	1, 1305,
	425, 1269,
	463, 1269,
	578, 1269,
	600, 1305,
	602, 1305,
	604, 1305,
	-2, 1594,
	-1, 1525,
	204, 1402,
	223, 1402,
	433, 1402,
	-2, 0,
	-1, 1581,
	404, 1086,
	556, 1086,
	-2, 408,
	-1, 1598,
	43, 2305,
	-2, 1052,
	-1, 1605,
	1, 1305,
	600, 1305,
	602, 1305,
	604, 1305,
	-2, 1594,
	-1, 1613,
	4, 1330,
	21, 1330,
	22, 1330,
	23, 1330,
	24, 1330,
	25, 1330,
	26, 1330,
	27, 1330,
	29, 1330,
	30, 1330,
	36, 1330,
	41, 1330,
	42, 1330,
	44, 1330,
	45, 1330,
	46, 1330,
	47, 1330,
	48, 1330,
	49, 1330,
	50, 1330,
	51, 1330,
	53, 1330,
	54, 1330,
	55, 1330,
	56, 1330,
	58, 1330,
	59, 1330,
	60, 1330,
	61, 1330,
	62, 1330,
	63, 1330,
	64, 1330,
	68, 1330,
	69, 1330,
	70, 1330,
	71, 1330,
	73, 1330,
	74, 1330,
	75, 1330,
	79, 1330,
	80, 1330,
	81, 1330,
	82, 1330,
	83, 1330,
	84, 1330,
	85, 1330,
	88, 1330,
	89, 1330,
	90, 1330,
	91, 1330,
	92, 1330,
	94, 1330,
	96, 1330,
	97, 1330,
	98, 1330,
	99, 1330,
	100, 1330,
	101, 1330,
	103, 1330,
	104, 1330,
	105, 1330,
	107, 1330,
	108, 1330,
	109, 1330,
	117, 1330,
	118, 1330,
	119, 1330,
	120, 1330,
	121, 1330,
	123, 1330,
	124, 1330,
	125, 1330,
	126, 1330,
	128, 1330,
	129, 1330,
	130, 1330,
	132, 1330,
	133, 1330,
	134, 1330,
	136, 1330,
	137, 1330,
	138, 1330,
	141, 1330,
	142, 1330,
	143, 1330,
	145, 1330,
	146, 1330,
	148, 1330,
	149, 1330,
	150, 1330,
	152, 1330,
	153, 1330,
	154, 1330,
	155, 1330,
	156, 1330,
	157, 1330,
	158, 1330,
	159, 1330,
	160, 1330,
	161, 1330,
	162, 1330,
	163, 1330,
	164, 1330,
	165, 1330,
	166, 1330,
	167, 1330,
	175, 1330,
	176, 1330,
	177, 1330,
	178, 1330,
	182, 1330,
	184, 1330,
	185, 1330,
	186, 1330,
	190, 1330,
	191, 1330,
	192, 1330,
	193, 1330,
	194, 1330,
	195, 1330,
	196, 1330,
	197, 1330,
	198, 1330,
	199, 1330,
	200, 1330,
	201, 1330,
	202, 1330,
	203, 1330,
	205, 1330,
	206, 1330,
	208, 1330,
	209, 1330,
	211, 1330,
	212, 1330,
	213, 1330,
	214, 1330,
	215, 1330,
	216, 1330,
	217, 1330,
	218, 1330,
	219, 1330,
	221, 1330,
	222, 1330,
	224, 1330,
	225, 1330,
	226, 1330,
	227, 1330,
	228, 1330,
	233, 1330,
	234, 1330,
	235, 1330,
	236, 1330,
	239, 1330,
	240, 1330,
	241, 1330,
	243, 1330,
	245, 1330,
	246, 1330,
	248, 1330,
	250, 1330,
	251, 1330,
	252, 1330,
	254, 1330,
	258, 1330,
	259, 1330,
	260, 1330,
	261, 1330,
	262, 1330,
	263, 1330,
	265, 1330,
	266, 1330,
	267, 1330,
	269, 1330,
	270, 1330,
	272, 1330,
	273, 1330,
	276, 1330,
	277, 1330,
	278, 1330,
	279, 1330,
	280, 1330,
	281, 1330,
	282, 1330,
	285, 1330,
	286, 1330,
	287, 1330,
	288, 1330,
	290, 1330,
	291, 1330,
	292, 1330,
	293, 1330,
	294, 1330,
	295, 1330,
	296, 1330,
	297, 1330,
	298, 1330,
	299, 1330,
	300, 1330,
	301, 1330,
	302, 1330,
	303, 1330,
	304, 1330,
	305, 1330,
	306, 1330,
	307, 1330,
	308, 1330,
	309, 1330,
	310, 1330,
	311, 1330,
	313, 1330,
	315, 1330,
	316, 1330,
	317, 1330,
	318, 1330,
	319, 1330,
	320, 1330,
	321, 1330,
	322, 1330,
	323, 1330,
	324, 1330,
	325, 1330,
	326, 1330,
	327, 1330,
	328, 1330,
	329, 1330,
	331, 1330,
	332, 1330,
	336, 1330,
	337, 1330,
	339, 1330,
	340, 1330,
	341, 1330,
	342, 1330,
	343, 1330,
	346, 1330,
	348, 1330,
	350, 1330,
	351, 1330,
	352, 1330,
	355, 1330,
	356, 1330,
	357, 1330,
	359, 1330,
	361, 1330,
	362, 1330,
	363, 1330,
	364, 1330,
	365, 1330,
	366, 1330,
	367, 1330,
	368, 1330,
	369, 1330,
	370, 1330,
	371, 1330,
	372, 1330,
	373, 1330,
	375, 1330,
	376, 1330,
	377, 1330,
	378, 1330,
	379, 1330,
	380, 1330,
	381, 1330,
	382, 1330,
	383, 1330,
	384, 1330,
	385, 1330,
	386, 1330,
	387, 1330,
	388, 1330,
	389, 1330,
	391, 1330,
	392, 1330,
	394, 1330,
	395, 1330,
	396, 1330,
	397, 1330,
	398, 1330,
	399, 1330,
	400, 1330,
	401, 1330,
	402, 1330,
	403, 1330,
	404, 1330,
	405, 1330,
	406, 1330,
	408, 1330,
	410, 1330,
	411, 1330,
	412, 1330,
	418, 1330,
	420, 1330,
	421, 1330,
	422, 1330,
	423, 1330,
	424, 1330,
	425, 1330,
	426, 1330,
	427, 1330,
	428, 1330,
	429, 1330,
	431, 1330,
	432, 1330,
	433, 1330,
	435, 1330,
	436, 1330,
	437, 1330,
	438, 1330,
	439, 1330,
	440, 1330,
	441, 1330,
	443, 1330,
	444, 1330,
	445, 1330,
	446, 1330,
	447, 1330,
	448, 1330,
	449, 1330,
	450, 1330,
	451, 1330,
	452, 1330,
	453, 1330,
	454, 1330,
	456, 1330,
	457, 1330,
	458, 1330,
	459, 1330,
	460, 1330,
	461, 1330,
	463, 1330,
	464, 1330,
	465, 1330,
	466, 1330,
	467, 1330,
	468, 1330,
	470, 1330,
	471, 1330,
	472, 1330,
	473, 1330,
	474, 1330,
	475, 1330,
	476, 1330,
	477, 1330,
	479, 1330,
	481, 1330,
	482, 1330,
	483, 1330,
	484, 1330,
	485, 1330,
	486, 1330,
	487, 1330,
	488, 1330,
	489, 1330,
	490, 1330,
	491, 1330,
	492, 1330,
	493, 1330,
	494, 1330,
	495, 1330,
	496, 1330,
	498, 1330,
	499, 1330,
	501, 1330,
	502, 1330,
	504, 1330,
	505, 1330,
	506, 1330,
	507, 1330,
	508, 1330,
	509, 1330,
	510, 1330,
	511, 1330,
	512, 1330,
	514, 1330,
	515, 1330,
	516, 1330,
	517, 1330,
	518, 1330,
	520, 1330,
	522, 1330,
	523, 1330,
	524, 1330,
	525, 1330,
	526, 1330,
	527, 1330,
	529, 1330,
	530, 1330,
	531, 1330,
	532, 1330,
	534, 1330,
	535, 1330,
	538, 1330,
	539, 1330,
	540, 1330,
	541, 1330,
	542, 1330,
	543, 1330,
	544, 1330,
	546, 1330,
	549, 1330,
	550, 1330,
	551, 1330,
	552, 1330,
	553, 1330,
	554, 1330,
	556, 1330,
	557, 1330,
	558, 1330,
	559, 1330,
	560, 1330,
	561, 1330,
	566, 1330,
	567, 1330,
	568, 1330,
	569, 1330,
	570, 1330,
	571, 1330,
	-2, 0,
	-1, 1636,
	1, 553,
	600, 553,
	602, 553,
	604, 553,
	-2, 1565,
	-1, 1639,
	4, 2767,
	11, 2767,
	12, 2767,
	14, 2767,
	15, 2767,
	16, 2767,
	17, 2767,
	18, 2767,
	19, 2767,
	21, 2767,
	22, 2767,
	23, 2767,
	24, 2767,
	25, 2767,
	26, 2767,
	27, 2767,
	29, 2767,
	30, 2767,
	33, 2767,
	34, 2767,
	36, 2767,
	38, 2767,
	41, 2767,
	42, 2767,
	44, 2767,
	45, 2767,
	46, 2767,
	47, 2767,
	48, 2767,
	49, 2767,
	50, 2767,
	51, 2767,
	53, 2767,
	54, 2767,
	55, 2767,
	56, 2767,
	58, 2767,
	59, 2767,
	60, 2767,
	61, 2767,
	62, 2767,
	63, 2767,
	64, 2767,
	67, 2767,
	68, 2767,
	69, 2767,
	70, 2767,
	71, 2767,
	73, 2767,
	74, 2767,
	75, 2767,
	76, 2767,
	79, 2767,
	80, 2767,
	81, 2767,
	82, 2767,
	83, 2767,
	84, 2767,
	85, 2767,
	86, 2767,
	88, 2767,
	89, 2767,
	90, 2767,
	91, 2767,
	92, 2767,
	94, 2767,
	95, 2767,
	96, 2767,
	97, 2767,
	98, 2767,
	99, 2767,
	100, 2767,
	101, 2767,
	103, 2767,
	104, 2767,
	105, 2767,
	106, 2767,
	107, 2767,
	108, 2767,
	109, 2767,
	117, 2767,
	118, 2767,
	119, 2767,
	120, 2767,
	121, 2767,
	123, 2767,
	124, 2767,
	125, 2767,
	126, 2767,
	128, 2767,
	129, 2767,
	130, 2767,
	132, 2767,
	133, 2767,
	134, 2767,
	136, 2767,
	137, 2767,
	138, 2767,
	141, 2767,
	142, 2767,
	143, 2767,
	145, 2767,
	146, 2767,
	148, 2767,
	149, 2767,
	150, 2767,
	152, 2767,
	153, 2767,
	154, 2767,
	155, 2767,
	156, 2767,
	157, 2767,
	158, 2767,
	159, 2767,
	160, 2767,
	161, 2767,
	162, 2767,
	163, 2767,
	164, 2767,
	165, 2767,
	166, 2767,
	167, 2767,
	171, 2767,
	172, 2767,
	173, 2767,
	174, 2767,
	175, 2767,
	176, 2767,
	177, 2767,
	178, 2767,
	181, 2767,
	182, 2767,
	184, 2767,
	185, 2767,
	186, 2767,
	189, 2767,
	190, 2767,
	191, 2767,
	192, 2767,
	193, 2767,
	194, 2767,
	195, 2767,
	196, 2767,
	197, 2767,
	198, 2767,
	199, 2767,
	200, 2767,
	201, 2767,
	202, 2767,
	203, 2767,
	205, 2767,
	206, 2767,
	208, 2767,
	209, 2767,
	211, 2767,
	212, 2767,
	213, 2767,
	214, 2767,
	215, 2767,
	216, 2767,
	217, 2767,
	218, 2767,
	219, 2767,
	220, 2767,
	221, 2767,
	222, 2767,
	223, 2767,
	224, 2767,
	225, 2767,
	226, 2767,
	227, 2767,
	228, 2767,
	230, 2767,
	231, 2767,
	233, 2767,
	234, 2767,
	235, 2767,
	236, 2767,
	238, 2767,
	239, 2767,
	240, 2767,
	241, 2767,
	243, 2767,
	245, 2767,
	246, 2767,
	247, 2767,
	248, 2767,
	249, 2767,
	250, 2767,
	251, 2767,
	252, 2767,
	253, 2767,
	254, 2767,
	256, 2767,
	257, 2767,
	258, 2767,
	259, 2767,
	260, 2767,
	261, 2767,
	262, 2767,
	263, 2767,
	265, 2767,
	266, 2767,
	267, 2767,
	269, 2767,
	270, 2767,
	271, 2767,
	272, 2767,
	273, 2767,
	274, 2767,
	276, 2767,
	277, 2767,
	278, 2767,
	279, 2767,
	280, 2767,
	281, 2767,
	282, 2767,
	285, 2767,
	286, 2767,
	287, 2767,
	288, 2767,
	289, 2767,
	290, 2767,
	291, 2767,
	292, 2767,
	293, 2767,
	294, 2767,
	295, 2767,
	296, 2767,
	297, 2767,
	298, 2767,
	299, 2767,
	300, 2767,
	301, 2767,
	302, 2767,
	303, 2767,
	304, 2767,
	305, 2767,
	306, 2767,
	307, 2767,
	308, 2767,
	309, 2767,
	310, 2767,
	311, 2767,
	313, 2767,
	314, 2767,
	315, 2767,
	316, 2767,
	317, 2767,
	318, 2767,
	319, 2767,
	320, 2767,
	321, 2767,
	322, 2767,
	323, 2767,
	324, 2767,
	325, 2767,
	326, 2767,
	327, 2767,
	328, 2767,
	329, 2767,
	331, 2767,
	332, 2767,
	335, 2767,
	336, 2767,
	337, 2767,
	339, 2767,
	340, 2767,
	341, 2767,
	342, 2767,
	343, 2767,
	346, 2767,
	350, 2767,
	351, 2767,
	352, 2767,
	353, 2767,
	355, 2767,
	356, 2767,
	357, 2767,
	359, 2767,
	361, 2767,
	362, 2767,
	363, 2767,
	364, 2767,
	365, 2767,
	366, 2767,
	367, 2767,
	368, 2767,
	369, 2767,
	370, 2767,
	371, 2767,
	372, 2767,
	373, 2767,
	375, 2767,
	376, 2767,
	377, 2767,
	378, 2767,
	379, 2767,
	380, 2767,
	381, 2767,
	382, 2767,
	383, 2767,
	384, 2767,
	385, 2767,
	386, 2767,
	387, 2767,
	388, 2767,
	389, 2767,
	391, 2767,
	392, 2767,
	394, 2767,
	395, 2767,
	396, 2767,
	397, 2767,
	398, 2767,
	399, 2767,
	400, 2767,
	401, 2767,
	402, 2767,
	403, 2767,
	404, 2767,
	405, 2767,
	406, 2767,
	408, 2767,
	410, 2767,
	411, 2767,
	412, 2767,
	418, 2767,
	419, 2767,
	420, 2767,
	421, 2767,
	422, 2767,
	423, 2767,
	424, 2767,
	425, 2767,
	426, 2767,
	427, 2767,
	428, 2767,
	429, 2767,
	431, 2767,
	432, 2767,
	433, 2767,
	434, 2767,
	435, 2767,
	436, 2767,
	437, 2767,
	438, 2767,
	439, 2767,
	440, 2767,
	441, 2767,
	442, 2767,
	443, 2767,
	444, 2767,
	445, 2767,
	446, 2767,
	447, 2767,
	448, 2767,
	449, 2767,
	450, 2767,
	451, 2767,
	452, 2767,
	453, 2767,
	454, 2767,
	456, 2767,
	457, 2767,
	458, 2767,
	459, 2767,
	460, 2767,
	461, 2767,
	463, 2767,
	464, 2767,
	465, 2767,
	466, 2767,
	467, 2767,
	468, 2767,
	469, 2767,
	470, 2767,
	471, 2767,
	472, 2767,
	473, 2767,
	474, 2767,
	475, 2767,
	476, 2767,
	477, 2767,
	479, 2767,
	481, 2767,
	482, 2767,
	483, 2767,
	484, 2767,
	485, 2767,
	486, 2767,
	487, 2767,
	488, 2767,
	489, 2767,
	490, 2767,
	491, 2767,
	492, 2767,
	493, 2767,
	494, 2767,
	495, 2767,
	496, 2767,
	498, 2767,
	499, 2767,
	500, 2767,
	501, 2767,
	502, 2767,
	504, 2767,
	505, 2767,
	506, 2767,
	507, 2767,
	508, 2767,
	509, 2767,
	510, 2767,
	511, 2767,
	512, 2767,
	514, 2767,
	515, 2767,
	516, 2767,
	517, 2767,
	518, 2767,
	520, 2767,
	522, 2767,
	523, 2767,
	524, 2767,
	525, 2767,
	526, 2767,
	527, 2767,
	529, 2767,
	530, 2767,
	531, 2767,
	532, 2767,
	534, 2767,
	535, 2767,
	538, 2767,
	539, 2767,
	540, 2767,
	541, 2767,
	542, 2767,
	543, 2767,
	544, 2767,
	546, 2767,
	549, 2767,
	550, 2767,
	551, 2767,
	552, 2767,
	553, 2767,
	554, 2767,
	556, 2767,
	557, 2767,
	558, 2767,
	559, 2767,
	560, 2767,
	561, 2767,
	566, 2767,
	567, 2767,
	568, 2767,
	569, 2767,
	570, 2767,
	571, 2767,
	572, 2767,
	574, 2767,
	582, 2767,
	583, 2767,
	584, 2767,
	585, 2767,
	586, 2767,
	587, 2767,
	589, 2767,
	590, 2767,
	591, 2767,
	592, 2767,
	593, 2767,
	594, 2767,
	595, 2767,
	596, 2767,
	597, 2767,
	599, 2767,
	602, 2767,
	603, 2767,
	605, 2767,
	606, 2767,
	-2, 0,
	-1, 1644,
	188, 2648,
	519, 2648,
	584, 2648,
	603, 2648,
	-2, 0,
	-1, 1697,
	396, 888,
	461, 888,
	502, 888,
	524, 888,
	-2, 0,
	-1, 1708,
	1, 1402,
	600, 1402,
	602, 1402,
	604, 1402,
	-2, 0,
	-1, 1725,
	1, 883,
	600, 883,
	602, 883,
	604, 883,
	-2, 0,
	-1, 1726,
	1, 927,
	600, 927,
	602, 927,
	604, 927,
	-2, 0,
	-1, 1727,
	1, 935,
	600, 935,
	602, 935,
	604, 935,
	-2, 0,
	-1, 1730,
	1, 892,
	600, 892,
	602, 892,
	604, 892,
	-2, 0,
	-1, 1732,
	1, 898,
	600, 898,
	602, 898,
	604, 898,
	-2, 0,
	-1, 1735,
	1, 894,
	600, 894,
	602, 894,
	604, 894,
	-2, 0,
	-1, 1740,
	1, 908,
	600, 908,
	602, 908,
	604, 908,
	-2, 0,
	-1, 1771,
	1, 2631,
	600, 2631,
	602, 2631,
	603, 2631,
	604, 2631,
	-2, 0,
	-1, 1775,
	1, 981,
	600, 981,
	602, 981,
	604, 981,
	-2, 0,
	-1, 1792,
	1, 1452,
	604, 1452,
	-2, 1457,
	-1, 1795,
	170, 1608,
	183, 1608,
	275, 1608,
	344, 1608,
	-2, 1546,
	-1, 1895,
	151, 1567,
	170, 1567,
	183, 1567,
	242, 1567,
	275, 1567,
	344, 1567,
	354, 1567,
	536, 1567,
	-2, 2018,
	-1, 1956,
	602, 2193,
	-2, 0,
	-1, 1991,
	151, 1567,
	170, 1567,
	183, 1567,
	242, 1567,
	275, 1567,
	344, 1567,
	354, 1567,
	536, 1567,
	-2, 1700,
	-1, 2030,
	519, 2645,
	603, 2645,
	606, 2645,
	-2, 0,
	-1, 2047,
	601, 1841,
	-2, 1829,
	-1, 2079,
	188, 2645,
	603, 2645,
	606, 2645,
	-2, 0,
	-1, 2121,
	1, 694,
	604, 694,
	-2, 1457,
	-1, 2260,
	223, 258,
	-2, 2341,
	-1, 2261,
	223, 259,
	-2, 310,
	-1, 2370,
	1, 885,
	600, 885,
	602, 885,
	604, 885,
	-2, 0,
	-1, 2371,
	1, 929,
	600, 929,
	602, 929,
	604, 929,
	-2, 0,
	-1, 2372,
	1, 937,
	600, 937,
	602, 937,
	604, 937,
	-2, 0,
	-1, 2373,
	1, 983,
	600, 983,
	602, 983,
	604, 983,
	-2, 0,
	-1, 2414,
	1, 910,
	600, 910,
	602, 910,
	604, 910,
	-2, 0,
	-1, 2433,
	1, 966,
	600, 966,
	602, 966,
	604, 966,
	-2, 0,
	-1, 2480,
	440, 1635,
	441, 1635,
	-2, 1874,
	-1, 2511,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1894,
	-1, 2512,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1895,
	-1, 2513,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1896,
	-1, 2514,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1897,
	-1, 2515,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1898,
	-1, 2516,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1899,
	-1, 2517,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1900,
	-1, 2518,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1901,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1913,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1914,
	-1, 2532,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1915,
	-1, 2536,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1922,
	-1, 2542,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1926,
	-1, 2544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1934,
	-1, 2545,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1935,
	-1, 2546,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1936,
	-1, 2547,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1937,
	-1, 2721,
	5, 2345,
	188, 2204,
	601, 2342,
	-2, 2333,
	-1, 2722,
	188, 2205,
	-2, 2718,
	-1, 2723,
	188, 2206,
	-2, 2535,
	-1, 2724,
	188, 2207,
	-2, 2415,
	-1, 2725,
	188, 2208,
	-2, 2472,
	-1, 2726,
	188, 2209,
	-2, 2520,
	-1, 2727,
	188, 2210,
	-2, 2643,
	-1, 2728,
	188, 2211,
	-2, 2001,
	-1, 2799,
	1, 1701,
	2, 1701,
	106, 1701,
	151, 1701,
	170, 1701,
	183, 1701,
	189, 1701,
	207, 1701,
	210, 1701,
	238, 1701,
	242, 1701,
	253, 1701,
	271, 1701,
	275, 1701,
	314, 1701,
	344, 1701,
	348, 1701,
	354, 1701,
	430, 1701,
	434, 1701,
	536, 1701,
	547, 1701,
	563, 1701,
	564, 1701,
	565, 1701,
	575, 1701,
	600, 1701,
	602, 1701,
	604, 1701,
	606, 1701,
	-2, 1700,
	-1, 2812,
	601, 2314,
	-2, 2328,
	-1, 2814,
	1, 327,
	563, 327,
	-2, 1594,
	-1, 2844,
	601, 1840,
	-2, 1830,
	-1, 3029,
	1, 1305,
	425, 1269,
	463, 1269,
	578, 1269,
	600, 1305,
	602, 1305,
	604, 1305,
	-2, 1594,
	-1, 3204,
	349, 1638,
	-2, 2757,
	-1, 3205,
	349, 1639,
	-2, 2628,
	-1, 3209,
	440, 2270,
	441, 2270,
	-2, 1999,
	-1, 3210,
	440, 2274,
	441, 2274,
	-2, 2000,
	-1, 3211,
	440, 2271,
	441, 2271,
	-2, 1999,
	-1, 3212,
	440, 2275,
	441, 2275,
	-2, 2000,
	-1, 3225,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1924,
	-1, 3226,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1928,
	-1, 3232,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1930,
	-1, 3458,
	1, 689,
	600, 689,
	602, 689,
	604, 689,
	-2, 1457,
	-1, 3632,
	43, 2305,
	-2, 1053,
	-1, 3637,
	1, 1305,
	600, 1305,
	602, 1305,
	604, 1305,
	-2, 1594,
	-1, 3740,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1932,
	-1, 3747,
	247, 0,
	249, 0,
	335, 0,
	-2, 1951,
	-1, 3815,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1980,
	-1, 3816,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1981,
	-1, 3817,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1982,
	-1, 3821,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1986,
	-1, 3822,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1987,
	-1, 3823,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1988,
	-1, 3871,
	601, 2315,
	-2, 2329,
	-1, 4054,
	603, 2874,
	-2, 1520,
	-1, 4108,
	247, 0,
	249, 0,
	335, 0,
	-2, 1952,
	-1, 4111,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1955,
	-1, 4112,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1957,
	-1, 4213,
	603, 2330,
	-2, 1340,
	-1, 4366,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1956,
	-1, 4367,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1958,
	-1, 4378,
	247, 0,
	-2, 1991,
	-1, 4555,
	247, 0,
	-2, 1992,
	-1, 4763,
	50, 0,
	220, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 2721,
}

const sqlPrivate = 57344

const sqlLast = 132895

var sqlAct = [...]int{
	275, 4785, 4960, 3621, 3101, 3363, 4786, 4882, 4825, 4597,
	4488, 3114, 4640, 4589, 4428, 4762, 4865, 2906, 4773, 3620,
	4750, 4661, 4621, 1343, 4895, 4734, 4712, 4692, 2170, 4775,
	4715, 2257, 4774, 1534, 4501, 2950, 4328, 2975, 4410, 4525,
	2334, 4473, 3780, 2754, 4832, 4209, 1272, 4323, 4559, 4091,
	4283, 4433, 4387, 4355, 4761, 4046, 4258, 2490, 2021, 3732,
	4038, 2346, 3654, 4312, 4310, 4510, 4303, 3966, 712, 3218,
	4190, 2559, 4210, 4625, 2034, 823, 1092, 1561, 1804, 2344,
	2090, 1336, 3071, 3648, 3606, 4333, 4012, 2103, 2498, 1083,
	3993, 783, 3481, 2178, 3995, 3595, 2491, 3685, 3611, 4383,
	1404, 2988, 3126, 823, 3687, 3085, 3090, 3087, 3060, 3610,
	1997, 3588, 3587, 3613, 2342, 1338, 3409, 1497, 3369, 3386,
	3378, 4090, 1329, 723, 3874, 1091, 182, 3346, 902, 3116,
	2307, 1662, 3367, 898, 4, 4147, 3416, 1966, 2244, 3121,
	3476, 3036, 4866, 2189, 1149, 3500, 2246, 3102, 2908, 2637,
	4560, 3538, 3345, 1903, 1942, 1873, 3841, 2495, 2572, 3202,
	2639, 2792, 1504, 818, 3120, 3064, 1341, 2221, 2035, 893,
	1600, 2245, 269, 779, 3005, 3072, 2791, 2205, 1252, 2240,
	2228, 1142, 1385, 2794, 2158, 2162, 2101, 1792, 1315, 1986,
	2628, 2772, 2556, 2479, 2462, 1147, 1967, 2148, 2460, 2827,
	756, 3095, 2015, 1637, 1326, 1705, 2294, 1603, 2931, 1192,
	820, 268, 824, 3614, 825, 4662, 2894, 3987, 1563, 971,
	182, 2262, 1372, 1937, 2631, 2826, 1255, 2781, 1976, 2762,
	1660, 1234, 2717, 699, 1140, 2609, 2683, 721, 1887, 1805,
	1806, 2461, 1269, 2949, 2463, 1983, 2751, 829, 1740, 191,
	764, 192, 775, 2254, 2320, 1251, 1628, 2293, 1529, 2177,
	111, 4826, 4883, 2484, 1725, 1123, 716, 1635, 1257, 3255,
	713, 44, 724, 43, 813, 829, 41, 32, 1232, 30,
	28, 1811, 1791, 992, 1540, 739, 832, 874, 3855, 875,
	3856, 2092, 3249, 4974, 2092, 4963, 2092, 2771, 2092, 3673,
	3365, 4946, 4945, 1819, 1820, 2771, 2771, 2092, 4803, 1863,
	1864, 1865, 2092, 919, 832, 1138, 1819, 1820, 4935, 4918,
	4916, 4851, 2266, 4432, 4432, 2266, 1850, 4811, 4800, 4400,
	4798, 4812, 2771, 1822, 2771, 4403, 4795, 4792, 1087, 1850,
	4796, 4793, 1869, 3663, 4759, 1087, 1822, 4758, 2266, 2113,
	4757, 2266, 4748, 4746, 3131, 3098, 4432, 4432, 4743, 1875,
	1249, 4738, 4513, 4737, 1533, 4432, 4710, 4432, 1821, 4681,
	4432, 4674, 1875, 2835, 3673, 2771, 4673, 3664, 1841, 4666,
	2771, 1821, 4639, 2266, 4636, 4617, 2266, 1838, 4432, 4274,
	3316, 3317, 4557, 4539, 4503, 4451, 2835, 4075, 4504, 2266,
	4171, 4450, 4439, 3316, 3317, 2266, 2266, 4438, 4431, 4394,
	1077, 4432, 4432, 2266, 1381, 4368, 2110, 1235, 1235, 2835,
	4344, 4341, 2266, 3217, 3131, 3673, 1819, 1820, 3443, 4253,
	1381, 4236, 1068, 2771, 1067, 2771, 2771, 3441, 4110, 4062,
	1261, 2113, 2835, 3680, 4056, 2343, 4009, 3866, 3680, 1850,
	4010, 3867, 3426, 3864, 1088, 3848, 1822, 3865, 2113, 2771,
	2855, 3845, 1082, 1844, 1845, 1846, 1847, 3764, 3760, 1286,
	3679, 2266, 2771, 1827, 3680, 3362, 3357, 3356, 2634, 2771,
	2771, 2771, 1875, 3307, 3305, 3297, 1827, 3308, 3306, 3298,
	3295, 1821, 3266, 3264, 2771, 2764, 2771, 3130, 3112, 3265,
	2831, 3131, 2330, 1819, 1820, 4682, 1852, 1853, 1854, 1863,
	1864, 1865, 1860, 1236, 1293, 1870, 3111, 2878, 94, 4561,
	2330, 2771, 1849, 1851, 2834, 1856, 1850, 2824, 2835, 4552,
	2816, 2771, 4540, 1822, 2266, 1849, 1851, 4513, 3131, 2110,
	2770, 2113, 1869, 3845, 2771, 1671, 2329, 2113, 1836, 1837,
	2330, 1238, 2763, 1239, 4321, 4274, 1287, 1267, 2110, 1875,
	3322, 1287, 4237, 4075, 4011, 2978, 1858, 2893, 1821, 2635,
	2127, 2091, 2107, 3322, 239, 2182, 3066, 2265, 1841, 2998,
	2891, 1842, 1962, 1528, 3949, 3735, 3709, 1838, 1984, 1707,
	2771, 2406, 1731, 2233, 1842, 3665, 1827, 3254, 2808, 2807,
	2806, 2805, 2804, 1240, 1237, 2585, 2586, 2587, 2604, 2605,
	2606, 1076, 1075, 1074, 3666, 1533, 1073, 1072, 1145, 1071,
	1070, 1066, 241, 1065, 239, 2607, 1064, 3175, 2666, 1063,
	1819, 1820, 1062, 1061, 1060, 1059, 1058, 1057, 1056, 1055,
	1054, 1053, 1052, 1051, 1050, 1849, 1851, 1049, 1819, 1820,
	1031, 2636, 969, 2633, 2093, 968, 1872, 2093, 1875, 2093,
	1822, 2093, 967, 1844, 1845, 1846, 1847, 966, 3332, 1872,
	2093, 240, 241, 1827, 965, 2093, 964, 2597, 1822, 963,
	962, 3332, 961, 239, 233, 960, 2593, 959, 958, 957,
	956, 955, 954, 234, 953, 1821, 952, 951, 950, 949,
	948, 947, 946, 945, 1842, 944, 943, 942, 941, 940,
	939, 1848, 1860, 1821, 938, 1870, 937, 936, 935, 934,
	193, 240, 1849, 1851, 923, 922, 1542, 921, 917, 916,
	909, 241, 908, 907, 1843, 892, 891, 848, 847, 1866,
	1675, 1867, 846, 1872, 845, 836, 835, 1843, 1836, 1837,
	1653, 1554, 834, 2110, 833, 1541, 1872, 1348, 1147, 799,
	790, 1861, 2598, 2599, 2600, 2601, 1858, 789, 788, 770,
	193, 263, 2592, 1542, 262, 261, 260, 1144, 259, 1872,
	240, 1842, 258, 257, 256, 1147, 1147, 1147, 255, 254,
	253, 252, 1874, 233, 251, 3663, 250, 249, 248, 247,
	1827, 246, 234, 1407, 245, 1874, 244, 1407, 243, 2638,
	242, 239, 4165, 1121, 1348, 4122, 3889, 3860, 1827, 3681,
	4335, 3333, 3412, 3360, 153, 3277, 3260, 1868, 3251, 3097,
	2664, 2650, 3155, 2113, 3333, 2648, 2865, 1945, 2091, 1147,
	2110, 1147, 3046, 1147, 1944, 1857, 1287, 2602, 2603, 2107,
	1566, 4543, 4541, 2839, 2455, 2110, 1872, 1843, 1376, 241,
	1264, 1389, 1390, 1391, 1859, 3361, 2813, 2798, 2452, 2156,
	2112, 1948, 2010, 1905, 1914, 1786, 1348, 1862, 1839, 1835,
	2595, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	1512, 1657, 1987, 1819, 1820, 1507, 1566, 1823, 1824, 1825,
	1826, 1828, 1829, 1566, 1536, 1393, 1271, 4423, 240, 1912,
	3080, 1848, 1147, 2763, 1147, 1874, 1850, 1354, 4784, 1566,
	1818, 233, 4783, 1822, 4780, 2632, 4760, 1147, 1502, 1147,
	234, 1542, 1287, 4745, 1843, 4647, 1542, 4549, 1532, 1320,
	1323, 4382, 4342, 4564, 4320, 4177, 4145, 4144, 4138, 1875,
	4137, 1368, 4136, 4129, 1333, 4128, 2848, 193, 1821, 1609,
	1612, 1861, 3316, 3317, 4126, 1553, 1370, 4121, 3327, 3325,
	3326, 3318, 3319, 3320, 3321, 3323, 3324, 1566, 4118, 1517,
	1400, 4022, 1494, 1499, 3318, 3319, 3320, 3321, 3323, 3324,
	4117, 4008, 1874, 3893, 2310, 3316, 3317, 1147, 239, 829,
	1147, 1872, 3892, 1615, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 1945, 3891, 3870, 3836, 2273, 3835, 1263,
	1944, 3834, 182, 182, 3316, 3317, 3756, 1362, 4337, 3751,
	3407, 3353, 1906, 2596, 1904, 3316, 3317, 3331, 832, 1531,
	1598, 1530, 3344, 3315, 239, 239, 241, 1943, 1248, 3312,
	3311, 3309, 3304, 3316, 3317, 1265, 3334, 3335, 3336, 1676,
	3303, 3302, 3299, 1827, 1859, 3296, 1640, 1642, 3276, 3259,
	3252, 1559, 3250, 3113, 1833, 1834, 1840, 1862, 1839, 1835,
	1907, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	3947, 1874, 241, 241, 4695, 240, 3316, 3317, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 2799, 2621, 233, 1818,
	1905, 1090, 1849, 1851, 1638, 1376, 2271, 234, 1376, 1817,
	4968, 4023, 4905, 4904, 1646, 4867, 4824, 4822, 3331, 1273,
	3782, 1147, 3322, 3358, 4702, 4624, 4608, 1147, 4605, 4604,
	1661, 240, 240, 4603, 193, 4583, 1631, 4582, 4580, 4563,
	1548, 4562, 1733, 4537, 233, 233, 1088, 1796, 2562, 4523,
	3082, 4520, 4519, 234, 234, 3322, 4514, 4499, 4498, 4447,
	4418, 1842, 4380, 2582, 2583, 2584, 2608, 2594, 2588, 4363,
	2590, 2591, 2589, 2576, 2577, 2578, 2579, 2580, 2581, 4362,
	193, 193, 1681, 239, 3322, 4306, 4299, 1652, 1689, 4296,
	4275, 4164, 4143, 239, 239, 3322, 4076, 1749, 239, 3404,
	3935, 1790, 1670, 1825, 1826, 1828, 1829, 3934, 3917, 3916,
	3433, 3914, 3851, 3322, 3839, 3746, 1892, 4566, 2665, 1823,
	1824, 1825, 1826, 1828, 1829, 3682, 4023, 3674, 4565, 1894,
	3332, 241, 1147, 1147, 1147, 3640, 1872, 3555, 1147, 3513,
	3480, 241, 241, 3435, 3281, 1269, 241, 1269, 3280, 3275,
	3241, 3059, 1698, 1951, 1950, 3339, 3322, 1949, 1946, 1938,
	1936, 2568, 1407, 3332, 2846, 2845, 2810, 2803, 2769, 1734,
	2646, 4336, 1964, 1147, 1891, 2009, 823, 1348, 1965, 3338,
	240, 1973, 2052, 823, 1348, 1960, 1348, 1959, 1797, 1958,
	240, 240, 3332, 233, 1957, 240, 1956, 2013, 1955, 1954,
	2031, 1953, 234, 233, 233, 1872, 1952, 2080, 233, 2082,
	1933, 1793, 234, 234, 1843, 1801, 2025, 234, 1800, 1932,
	1931, 3332, 1930, 1929, 1928, 1927, 1926, 1795, 1925, 193,
	1924, 1068, 1923, 1067, 239, 1922, 1921, 1920, 1872, 193,
	193, 1947, 1919, 1918, 193, 1907, 1348, 1819, 1820, 1893,
	1890, 1885, 1147, 3081, 1547, 1361, 2020, 1814, 1815, 1291,
	239, 1282, 1629, 4309, 4173, 1994, 4114, 1872, 3888, 2115,
	1970, 1971, 1874, 3863, 182, 3854, 1147, 1822, 1872, 3263,
	2837, 1088, 241, 3333, 1407, 2801, 4401, 2014, 4175, 1634,
	3887, 2097, 1906, 3431, 2099, 2119, 1872, 2172, 1888, 3669,
	2104, 1939, 1940, 2005, 2106, 3316, 3317, 1235, 241, 2109,
	2145, 4239, 1821, 1386, 4544, 4542, 3333, 1388, 2139, 2138,
	2663, 2649, 2147, 2149, 2147, 2647, 2046, 4902, 2147, 4894,
	2147, 240, 2976, 4606, 4515, 1376, 4506, 1995, 4505, 4340,
	4277, 2118, 4276, 4238, 233, 3333, 4167, 4081, 829, 2018,
	4080, 4079, 2154, 234, 1928, 829, 4511, 240, 4078, 4077,
	3858, 3857, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	233, 3684, 3683, 1992, 3333, 3676, 2954, 3675, 4776, 234,
	193, 4847, 1387, 4845, 1381, 1945, 2026, 832, 1985, 4026,
	1987, 2049, 1944, 2075, 832, 1913, 4422, 3547, 2095, 1381,
	3733, 1788, 1963, 3961, 2230, 3301, 193, 1088, 2216, 3300,
	3223, 1381, 1047, 1989, 2936, 1384, 2040, 1566, 1566, 3932,
	2004, 2133, 2003, 3482, 2247, 2002, 2000, 1407, 1999, 1998,
	3327, 3325, 3326, 3318, 3319, 3320, 3321, 3323, 3324, 1697,
	3623, 2142, 3622, 2121, 2032, 1916, 3003, 2311, 1706, 1750,
	4872, 2634, 2117, 1928, 239, 4016, 3516, 1048, 2335, 4502,
	1267, 4807, 1267, 4788, 3325, 3326, 3318, 3319, 3320, 3321,
	3323, 3324, 4772, 3596, 3127, 2182, 1707, 2248, 4030, 4442,
	4005, 3963, 3958, 2019, 3940, 3706, 2212, 2362, 2220, 3456,
	2340, 2225, 4384, 239, 3326, 3318, 3319, 3320, 3321, 3323,
	3324, 3365, 241, 3269, 1382, 3784, 3318, 3319, 3320, 3321,
	3323, 3324, 2629, 2844, 3328, 3329, 3330, 1961, 2984, 4781,
	1941, 3327, 3325, 3326, 3318, 3319, 3320, 3321, 3323, 3324,
	3604, 2995, 1566, 2304, 1566, 1608, 1566, 1247, 2150, 1633,
	2140, 241, 2635, 1524, 2933, 1357, 1319, 4797, 2258, 2263,
	4794, 240, 3659, 3909, 1566, 1566, 4414, 2144, 2992, 4598,
	4324, 2215, 2990, 2188, 233, 4709, 4576, 1566, 3485, 3320,
	3321, 3323, 3324, 234, 887, 3927, 3094, 2470, 3579, 1566,
	2983, 1566, 1566, 1566, 2250, 2251, 4782, 4849, 4848, 4445,
	240, 829, 4441, 2252, 4420, 2143, 3727, 4469, 3976, 4887,
	193, 3460, 4226, 233, 1583, 823, 2932, 1575, 2210, 1634,
	2300, 1747, 234, 1045, 1043, 1685, 4205, 2879, 4962, 4612,
	2361, 1041, 4462, 1378, 2636, 1039, 2633, 1147, 2420, 1036,
	832, 1531, 2122, 1530, 2305, 1748, 2554, 2468, 2418, 193,
	4453, 2134, 4267, 4266, 1388, 3974, 1027, 3973, 3965, 3955,
	4198, 3954, 2317, 3952, 2209, 2206, 3951, 2224, 3939, 2897,
	4224, 3904, 1147, 1526, 3903, 2552, 3975, 2338, 4221, 3585,
	3584, 2897, 3425, 3274, 2895, 3273, 2366, 2264, 3154, 39,
	888, 3272, 3271, 3227, 3001, 3038, 2895, 3000, 2997, 2986,
	2970, 1584, 2354, 2969, 2964, 2963, 2962, 2941, 1147, 2940,
	1147, 4443, 3432, 2901, 2325, 4199, 1383, 1147, 2314, 1387,
	2052, 2052, 1407, 1746, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1638, 1147, 1638, 1147, 1147, 1147, 1147, 2333, 2286, 2285,
	2454, 1382, 3545, 1264, 1379, 1264, 2248, 2327, 1631, 2319,
	2322, 2323, 2322, 1380, 2472, 2347, 2349, 829, 4415, 1147,
	2459, 2825, 2638, 1147, 1147, 2348, 2469, 1362, 2352, 1371,
	3482, 1147, 1088, 2543, 1088, 1147, 1683, 1147, 1147, 2331,
	2360, 2332, 2363, 2364, 2365, 1407, 4888, 1794, 2548, 3091,
	2934, 1147, 1147, 1147, 1147, 2391, 832, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 2353, 2610, 2611, 3462, 2335,
	2549, 2852, 2179, 1829, 2445, 2550, 2934, 1388, 2679, 2555,
	2610, 2626, 2838, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 2381, 2370, 2046, 2046, 1147, 762, 2678, 1633,
	2467, 1086, 2500, 3707, 762, 3515, 2175, 2674, 1269, 2378,
	1621, 4889, 1620, 1678, 4220, 1407, 4361, 4183, 2496, 2497,
	1378, 2414, 2829, 4478, 1269, 2958, 2720, 2720, 2734, 4222,
	2610, 3324, 2938, 2755, 2757, 2180, 2181, 2483, 2632, 2761,
	1147, 1407, 1387, 4240, 1579, 2450, 2151, 2152, 2951, 2952,
	1729, 4194, 2951, 2952, 2951, 2952, 4195, 2470, 1382, 2049,
	2049, 2629, 1263, 3546, 1263, 2176, 4200, 1619, 2458, 1618,
	2442, 2457, 2284, 2464, 2471, 2456, 1699, 2574, 1527, 1033,
	4182, 2358, 1729, 2811, 2040, 2040, 2444, 1784, 1381, 2886,
	2625, 1068, 1085, 2487, 1068, 1068, 2488, 2489, 1265, 1305,
	1265, 1592, 2910, 1383, 4591, 2218, 2558, 3134, 4197, 4890,
	1787, 2433, 2815, 2432, 1745, 2371, 2786, 2468, 2558, 2005,
	1597, 2379, 890, 889, 1759, 4201, 2778, 1819, 1820, 2676,
	3170, 1679, 797, 2924, 2677, 4848, 2424, 2680, 800, 2681,
	2682, 2412, 1994, 3200, 1348, 1348, 4920, 1726, 2994, 2163,
	1850, 1707, 1707, 3181, 2164, 2570, 1728, 1822, 2375, 1975,
	1695, 1379, 3215, 811, 2923, 2551, 2431, 4778, 2874, 2369,
	1380, 2324, 2623, 3716, 2828, 2553, 1235, 1378, 2372, 2566,
	2993, 1088, 3912, 1875, 3715, 1799, 2564, 1407, 1728, 182,
	2182, 1088, 1821, 3459, 3172, 1088, 1763, 2832, 2777, 2466,
	4218, 2638, 2800, 2785, 1087, 2790, 2860, 2991, 2796, 2797,
	1727, 2989, 2864, 932, 4265, 3924, 2729, 2913, 2716, 2868,
	4892, 2052, 2746, 2851, 2759, 761, 2875, 4593, 1360, 2840,
	2767, 2768, 761, 3773, 1742, 711, 1376, 2779, 2783, 2784,
	3936, 4223, 1979, 3953, 795, 3950, 3896, 4874, 3883, 4862,
	1992, 1947, 2896, 3984, 3532, 4196, 805, 2871, 2867, 3591,
	1383, 706, 3583, 817, 1407, 3184, 2469, 3543, 2165, 1604,
	2900, 4479, 2996, 2961, 1037, 1037, 2939, 810, 2876, 3238,
	1348, 2900, 1037, 4477, 1088, 2169, 1038, 4360, 2419, 4475,
	1037, 1982, 2902, 3770, 4206, 4207, 3214, 1827, 2417, 4898,
	1684, 1147, 1147, 2937, 1147, 2847, 1977, 2870, 3236, 2451,
	3985, 3533, 4873, 2859, 3524, 1939, 1940, 2862, 1379, 2863,
	4678, 1602, 2823, 1267, 1980, 3033, 809, 1380, 823, 2854,
	1348, 2877, 2850, 2899, 3922, 763, 4474, 2202, 2869, 1267,
	2467, 2441, 763, 762, 4779, 1381, 1849, 1851, 2959, 2540,
	2987, 2270, 2269, 3983, 3531, 4921, 3063, 2443, 2234, 2166,
	2171, 1566, 2943, 2241, 4476, 2046, 4837, 1978, 807, 924,
	4096, 3525, 3105, 4095, 1566, 3771, 1566, 3710, 3592, 2880,
	3207, 3208, 3034, 2927, 3078, 3122, 1084, 1277, 885, 2944,
	884, 2638, 2377, 1566, 2203, 925, 2942, 3657, 3656, 3178,
	3183, 3380, 1279, 3041, 1581, 1842, 4216, 2905, 3043, 2960,
	4949, 2915, 2918, 1179, 3523, 2968, 4891, 1348, 2185, 1348,
	2912, 4219, 3589, 3135, 3136, 3032, 2092, 816, 1578, 1274,
	2049, 3180, 2974, 2243, 3142, 3143, 3144, 2201, 3937, 4688,
	3156, 1147, 3157, 2167, 1760, 4752, 4406, 4753, 4777, 2898,
	2977, 3233, 2966, 3002, 2965, 2040, 3470, 2967, 3030, 3031,
	1604, 4599, 796, 2982, 4619, 3074, 2972, 2231, 829, 2953,
	2955, 2956, 2957, 1280, 2231, 2186, 3125, 2235, 3234, 3656,
	1872, 2190, 3239, 1304, 3124, 182, 3039, 1981, 3461, 1757,
	2242, 760, 2173, 3132, 1708, 3119, 4592, 3152, 1525, 3137,
	829, 3138, 1381, 802, 2194, 3128, 1147, 832, 1531, 4676,
	3044, 798, 1147, 1147, 1680, 794, 1289, 837, 2184, 2538,
	2227, 2219, 2541, 3057, 1934, 3497, 4836, 3558, 3429, 3109,
	2217, 3151, 3067, 2638, 806, 3158, 3182, 2231, 3068, 832,
	3107, 1278, 2897, 844, 4293, 3465, 3161, 2226, 3163, 4859,
	3165, 3089, 4677, 4896, 2173, 3100, 4092, 2916, 1843, 4373,
	3186, 2191, 3188, 3229, 3110, 4217, 4732, 2911, 1147, 1147,
	4720, 761, 4250, 2537, 1147, 2557, 910, 2413, 1353, 1638,
	1034, 2222, 3496, 4205, 729, 1761, 812, 1147, 1147, 1884,
	3279, 1975, 804, 1147, 1147, 2736, 2814, 933, 3189, 1147,
	3379, 3191, 915, 2620, 3108, 4357, 3129, 1758, 2782, 707,
	2180, 2181, 3149, 3039, 3141, 2882, 1874, 4198, 926, 927,
	3159, 4191, 2374, 1694, 1696, 4922, 1264, 1682, 3160, 1019,
	3162, 2565, 3164, 2368, 3166, 3167, 2884, 2795, 4189, 801,
	2223, 1087, 1264, 3230, 1147, 1147, 1147, 4193, 1798, 3786,
	1147, 3590, 4908, 1081, 3923, 1270, 1079, 3176, 1019, 1539,
	1147, 1546, 4897, 1552, 3195, 3471, 4308, 808, 3235, 3206,
	2195, 1979, 4199, 2885, 1979, 2168, 4634, 1147, 3237, 1762,
	4313, 763, 1081, 3197, 3262, 4817, 3196, 4086, 3257, 3258,
	708, 1359, 803, 3261, 2883, 4818, 4906, 2238, 4899, 3201,
	4314, 4270, 3884, 2483, 3501, 3216, 1294, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 4192, 814, 815, 4097, 3729, 3198,
	1982, 1713, 4641, 1982, 4725, 4660, 4522, 4269, 1080, 4626,
	4835, 3253, 1651, 2973, 1656, 2780, 2196, 2197, 1977, 709,
	4268, 710, 4627, 4044, 4356, 1020, 3998, 1669, 3644, 1674,
	2822, 3998, 2292, 1980, 2236, 3996, 1980, 1972, 3503, 1275,
	3996, 2192, 1292, 3228, 1285, 4294, 838, 839, 2539, 1147,
	1147, 1147, 1147, 4950, 1020, 698, 4628, 1808, 4021, 1147,
	1147, 1147, 1808, 1809, 1147, 1263, 4093, 2486, 2183, 2093,
	1803, 2135, 4440, 4531, 1147, 1269, 1407, 2237, 4575, 1978,
	1147, 1263, 1147, 3372, 3373, 2193, 3825, 3876, 3417, 4141,
	4045, 1269, 1276, 2132, 1732, 928, 929, 3477, 4927, 3969,
	3956, 1265, 3502, 3908, 3645, 911, 912, 3355, 3636, 1407,
	3473, 3079, 3073, 3061, 4000, 2318, 2312, 1265, 2306, 4000,
	4630, 1269, 2298, 3374, 1407, 3769, 2278, 2277, 3268, 4642,
	3900, 1572, 1296, 1088, 2917, 2945, 1348, 3840, 769, 2476,
	4693, 3877, 3730, 4629, 2773, 2900, 2052, 1808, 4663, 3999,
	1407, 3397, 2425, 2128, 3999, 4047, 4329, 3058, 4194, 3424,
	1348, 4631, 1807, 4195, 4358, 1307, 1348, 1807, 3878, 2130,
	3875, 1025, 1024, 4200, 4494, 4098, 4492, 4417, 3488, 2776,
	3484, 3483, 3221, 3439, 3199, 2359, 1736, 1735, 1147, 3853,
	3377, 841, 840, 3376, 2351, 4311, 1981, 2341, 2275, 1981,
	1025, 1024, 1147, 1730, 3880, 1884, 2198, 2821, 3384, 3382,
	2172, 3411, 1348, 2131, 2820, 4197, 2819, 2052, 1021, 2818,
	2775, 4816, 3466, 3467, 3406, 2774, 1346, 2817, 1613, 1627,
	1625, 1809, 4201, 931, 4004, 1147, 1809, 3065, 4429, 1085,
	4586, 3994, 1614, 3486, 2172, 4489, 3490, 1021, 4284, 2921,
	3446, 1348, 1807, 3448, 3449, 842, 843, 4017, 3452, 3915,
	3453, 4099, 3454, 3450, 3457, 3419, 3420, 3421, 3422, 1376,
	3366, 3415, 3383, 1348, 3403, 1348, 3479, 3395, 3463, 2477,
	3826, 3381, 2199, 3398, 3399, 3487, 2316, 3396, 3492, 3827,
	2046, 3494, 4142, 3599, 3905, 2230, 4856, 1407, 4496, 3401,
	1019, 3402, 913, 914, 2230, 3350, 3351, 3352, 1348, 4926,
	2946, 2947, 1348, 3474, 3430, 4623, 3436, 3437, 3561, 3438,
	3563, 3997, 4404, 3567, 1081, 3548, 3997, 3573, 4643, 3901,
	4699, 3037, 3442, 3427, 3133, 3042, 3518, 1566, 3040, 2345,
	1022, 2247, 1688, 4587, 4430, 4412, 4425, 1714, 3559, 4424,
	1348, 1566, 4706, 1566, 4690, 2049, 4148, 1407, 2001, 3842,
	3447, 2046, 4196, 3451, 823, 1566, 2645, 1023, 4860, 1022,
	1780, 4495, 3879, 3593, 2789, 4727, 1566, 3458, 4861, 4858,
	2040, 1782, 3522, 2437, 1779, 3478, 4481, 3609, 1348, 3464,
	1267, 3536, 4413, 1777, 1078, 1105, 1023, 1754, 3556, 1752,
	4799, 4206, 4207, 3544, 4615, 1269, 1267, 4607, 4379, 3652,
	3388, 3469, 4632, 4140, 4003, 3628, 1020, 3347, 4633, 4700,
	1026, 3418, 3504, 3745, 1724, 3122, 2049, 768, 3541, 3514,
	1566, 3635, 4588, 1722, 3122, 3704, 1267, 3703, 3440, 3650,
	3527, 3310, 1566, 3240, 1566, 3530, 3062, 2985, 2935, 1026,
	2849, 2040, 3520, 2446, 2336, 2012, 2008, 3906, 1783, 1664,
	3348, 3580, 3725, 1720, 3672, 3557, 3724, 1803, 3174, 3549,
	3173, 1626, 1624, 3661, 3534, 930, 3643, 3140, 3581, 2644,
	1718, 1716, 3594, 1710, 3597, 2465, 1704, 2968, 3570, 3576,
	1741, 1407, 3708, 2386, 1407, 2297, 1270, 1702, 1623, 2416,
	1270, 2383, 2276, 2081, 2256, 3646, 3389, 1917, 3528, 3568,
	1677, 3582, 3529, 3574, 1596, 4771, 4251, 3960, 3959, 4252,
	4235, 4689, 3718, 4327, 3586, 3651, 2943, 3601, 1147, 4257,
	4248, 4187, 4043, 4322, 1147, 1147, 829, 3653, 1147, 1147,
	1147, 1035, 1147, 1270, 3631, 3701, 3632, 182, 182, 3766,
	3633, 1147, 2052, 4034, 3699, 3972, 3387, 3394, 3577, 3560,
	1147, 3410, 1025, 1024, 2439, 1147, 3957, 1781, 3930, 2438,
	1778, 1407, 3658, 3928, 2019, 832, 4830, 3907, 3639, 1776,
	1147, 3667, 3723, 1753, 3634, 1751, 3602, 3624, 1407, 1270,
	3393, 3670, 3671, 3660, 3722, 3092, 1270, 3629, 2052, 2052,
	1147, 1147, 3084, 1147, 1147, 1147, 3077, 3069, 3055, 1021,
	1723, 3054, 1270, 3035, 3720, 3649, 2866, 2861, 2274, 1721,
	2272, 1147, 2249, 3726, 3731, 1147, 3748, 2052, 2052, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1719,
	1147, 3678, 3798, 3719, 3799, 2232, 3758, 3759, 1147, 1147,
	2052, 2200, 2187, 3700, 2174, 1147, 1717, 1715, 1088, 1709,
	1270, 3728, 1703, 2114, 3702, 2111, 1147, 3712, 2108, 3713,
	2415, 3714, 2382, 1701, 1622, 2255, 2105, 1269, 1269, 2100,
	2098, 1147, 2094, 1264, 2085, 4833, 2046, 2024, 3390, 3391,
	3392, 3571, 1040, 1042, 1044, 4313, 2241, 1812, 3837, 1264,
	4849, 2136, 1244, 4585, 3219, 3192, 3190, 3755, 3753, 3028,
	1267, 2124, 2125, 1407, 2449, 4314, 4740, 4343, 4264, 3765,
	3872, 1022, 3772, 3774, 3775, 4179, 1348, 1348, 1245, 1264,
	3781, 3123, 2046, 2046, 2155, 1577, 3776, 2897, 2897, 4533,
	2922, 1348, 1348, 3859, 1348, 3788, 4526, 2182, 1023, 3881,
	3882, 2049, 2895, 2919, 3796, 4055, 2496, 3789, 3797, 3795,
	2447, 2046, 2046, 1147, 3894, 3895, 3801, 3897, 1774, 1775,
	2373, 1328, 2410, 3829, 3803, 2315, 2040, 2405, 4739, 1327,
	3697, 1147, 3844, 2380, 182, 2496, 3804, 2207, 4227, 1819,
	1820, 4259, 3838, 3695, 2046, 3849, 3850, 2049, 2049, 3830,
	3220, 1026, 3688, 1819, 1820, 1700, 2448, 4551, 1813, 2925,
	3572, 4427, 4149, 4127, 1147, 1147, 3499, 2926, 3833, 1822,
	2948, 1816, 2040, 2040, 1355, 2407, 2049, 2049, 3898, 3846,
	3847, 1295, 3899, 3968, 2123, 4852, 264, 4843, 4031, 1246,
	4808, 2926, 1263, 3053, 2299, 1366, 2992, 2990, 2999, 2979,
	2928, 2040, 2040, 2182, 1821, 3967, 1147, 3941, 1263, 2049,
	1328, 2981, 2213, 3861, 1328, 4698, 4683, 4654, 1821, 2930,
	4648, 3929, 4584, 3931, 2980, 4517, 4487, 4405, 1265, 3862,
	1566, 4041, 2929, 695, 2040, 1348, 4033, 4020, 1263, 3869,
	3638, 3099, 2760, 2120, 1265, 2033, 3890, 4893, 4729, 3964,
	4426, 3690, 2971, 4730, 1523, 1522, 2208, 3945, 3428, 4925,
	2052, 3946, 3948, 3316, 3317, 4729, 3689, 1819, 1820, 1533,
	4730, 2889, 2890, 4864, 1265, 2887, 2888, 4650, 3911, 1687,
	4119, 2640, 3886, 2889, 2887, 1686, 2675, 4040, 1270, 1756,
	1270, 4518, 1755, 3970, 3971, 3933, 4463, 4261, 4256, 3938,
	4255, 1566, 4115, 3885, 3777, 1270, 3565, 1147, 3986, 3988,
	3562, 1911, 1910, 3194, 2453, 1269, 1147, 4913, 4057, 4875,
	4687, 4686, 3698, 4685, 2943, 2053, 1566, 1566, 1566, 4614,
	4613, 3105, 4568, 1566, 1566, 1566, 4064, 4048, 4490, 4457,
	4402, 4399, 1267, 1267, 4002, 4397, 4301, 4281, 3122, 4225,
	3962, 4174, 4071, 4061, 1566, 4027, 4007, 3990, 3686, 3992,
	1407, 3926, 4001, 1264, 3918, 3642, 3982, 3641, 4052, 4068,
	3493, 3445, 4015, 3179, 3171, 3148, 3147, 4019, 4049, 3146,
	1519, 3145, 3083, 1096, 3991, 4006, 1407, 3056, 4028, 1147,
	1147, 2920, 4051, 2857, 4072, 1147, 1147, 2052, 2853, 2842,
	1147, 1147, 4032, 1147, 2046, 4013, 2841, 2830, 1147, 1155,
	3979, 2569, 2440, 2411, 2404, 2403, 2402, 2401, 2400, 1147,
	4037, 2313, 1227, 2287, 2283, 2282, 4035, 1270, 3478, 2281,
	2280, 2279, 2088, 2087, 2086, 1147, 3980, 2084, 2023, 1773,
	1772, 1711, 1605, 1591, 4053, 1590, 4113, 4059, 4050, 1589,
	1588, 3977, 4082, 4063, 4100, 271, 271, 271, 4069, 701,
	702, 4058, 717, 701, 717, 727, 1587, 4083, 767, 2049,
	4070, 4109, 787, 1586, 1585, 1580, 2204, 793, 3696, 3691,
	3692, 3693, 3694, 1576, 271, 4084, 2217, 4101, 1574, 1573,
	1516, 1515, 1514, 1398, 2040, 4094, 1269, 1397, 1396, 1395,
	1394, 1358, 1314, 2219, 1269, 906, 1313, 1312, 1407, 1407,
	1311, 1407, 271, 1310, 1309, 1308, 1306, 1405, 1269, 1301,
	1300, 1505, 1263, 1299, 1298, 1297, 899, 8, 2126, 1566,
	1566, 1046, 1032, 2214, 4590, 4154, 4204, 4203, 2216, 4202,
	1407, 2046, 2436, 93, 3697, 1582, 861, 4065, 4066, 4067,
	87, 2239, 3925, 4802, 2347, 4073, 4074, 3695, 1265, 998,
	1270, 1270, 4726, 4618, 1557, 1269, 3688, 1269, 869, 4708,
	1270, 4180, 4181, 4089, 4029, 3495, 2211, 3004, 2385, 4139,
	1712, 2387, 3405, 2802, 4675, 4123, 3278, 4558, 4372, 2643,
	1348, 1915, 3359, 89, 1131, 1177, 4228, 4292, 4291, 4188,
	1407, 4215, 1348, 3910, 3612, 1348, 2049, 4288, 2218, 4157,
	4159, 4287, 4214, 2037, 4150, 182, 1407, 2039, 4230, 4231,
	1095, 4153, 4155, 4146, 1410, 4156, 4162, 4751, 2137, 1137,
	1267, 2040, 4151, 4152, 4163, 2153, 2146, 2843, 2719, 4229,
	4260, 1154, 4262, 701, 701, 1264, 1264, 1151, 4166, 4172,
	2041, 271, 2043, 1153, 1566, 1566, 4186, 1152, 2042, 1935,
	1150, 2036, 4178, 4039, 3103, 3690, 3668, 4170, 1632, 1630,
	1000, 2141, 2563, 2627, 3267, 1270, 1908, 1270, 4285, 1270,
	3689, 1111, 1348, 1133, 2624, 1290, 1122, 1110, 3385, 3364,
	3655, 2215, 3868, 2475, 1407, 879, 3313, 1270, 1270, 1566,
	2630, 1281, 2743, 4282, 2735, 2731, 3455, 4263, 4184, 3047,
	1270, 3093, 3050, 1789, 3052, 4279, 4386, 4254, 1886, 3104,
	1785, 1392, 1270, 4247, 1270, 1270, 1270, 1115, 1566, 1566,
	1566, 1566, 1566, 4244, 4319, 4330, 3698, 2561, 4273, 1899,
	3245, 2485, 3662, 1407, 3408, 2836, 4733, 4278, 3785, 3177,
	4168, 4169, 2291, 4272, 4271, 1147, 1147, 1147, 1243, 4249,
	3096, 1242, 1288, 3096, 1241, 4316, 4714, 4711, 2229, 4295,
	3607, 4290, 4297, 1407, 4286, 4298, 4331, 3608, 1147, 2129,
	4334, 1147, 1147, 4307, 2881, 2573, 4280, 3625, 1127, 1510,
	4233, 1147, 2429, 3370, 2052, 4325, 4018, 4339, 1593, 1147,
	1147, 792, 4434, 4242, 1263, 1263, 4245, 4332, 1139, 1871,
	3025, 1267, 3024, 4579, 1377, 4318, 1407, 1375, 1566, 1267,
	1374, 4364, 1373, 4884, 4346, 4948, 3921, 3920, 3919, 238,
	4345, 3213, 1810, 1267, 1802, 235, 4352, 237, 236, 4302,
	1265, 1265, 1407, 4359, 3873, 3168, 3414, 4806, 3943, 4353,
	1147, 3598, 23, 2053, 2053, 1270, 4369, 22, 21, 116,
	4348, 42, 20, 1147, 155, 133, 1897, 152, 4381, 151,
	1902, 125, 1147, 150, 4375, 2347, 149, 2052, 148, 147,
	1267, 154, 1267, 146, 145, 140, 1147, 144, 143, 1147,
	142, 141, 3696, 3691, 3692, 3693, 3694, 139, 4408, 137,
	267, 4392, 4393, 1147, 138, 132, 136, 135, 134, 131,
	1407, 130, 129, 128, 127, 4437, 126, 1348, 124, 4395,
	156, 4396, 123, 122, 121, 120, 119, 1566, 1566, 118,
	4409, 117, 780, 1264, 781, 61, 4407, 60, 2046, 4416,
	115, 113, 114, 19, 40, 14, 65, 1269, 1270, 4347,
	66, 4349, 4350, 4351, 18, 13, 35, 92, 3410, 4448,
	4449, 4480, 105, 104, 103, 4456, 36, 101, 100, 34,
	4468, 17, 16, 15, 3609, 98, 97, 4508, 1407, 4454,
	96, 1566, 4493, 4500, 33, 4458, 2011, 31, 11, 4464,
	9, 4466, 4497, 4467, 37, 1996, 12, 5, 4465, 187,
	186, 189, 185, 2049, 188, 4211, 91, 4211, 184, 183,
	90, 1270, 29, 1147, 1147, 4516, 4483, 4527, 1270, 4482,
	4532, 2046, 4491, 4460, 10, 179, 4486, 1270, 2040, 4509,
	1147, 2052, 4025, 4536, 82, 4538, 181, 180, 4512, 4398,
	178, 4507, 177, 176, 1270, 4446, 4530, 83, 4472, 80,
	4459, 1348, 175, 86, 1348, 174, 4547, 4548, 4528, 4485,
	2163, 81, 4535, 85, 84, 2164, 4529, 27, 4334, 1147,
	6, 1147, 64, 1147, 4567, 4534, 7, 4569, 4354, 4524,
	3705, 108, 109, 1269, 38, 78, 2049, 77, 76, 75,
	26, 63, 1263, 25, 173, 220, 1147, 219, 1269, 4546,
	218, 4574, 217, 216, 215, 4556, 214, 213, 2157, 208,
	207, 2040, 4550, 1283, 1264, 212, 210, 209, 4470, 211,
	206, 230, 1264, 229, 223, 222, 228, 227, 1265, 4573,
	226, 225, 224, 221, 232, 205, 1264, 204, 203, 201,
	197, 196, 200, 4602, 202, 2172, 1303, 199, 4484, 1269,
	1269, 198, 195, 4601, 4595, 4594, 1147, 1147, 271, 231,
	271, 271, 72, 1332, 271, 1342, 1147, 4622, 171, 172,
	71, 1269, 170, 169, 1269, 2046, 1356, 168, 1566, 2165,
	167, 4609, 166, 1264, 787, 1264, 165, 787, 1566, 164,
	1270, 70, 24, 2, 4637, 4638, 2169, 1, 0, 4610,
	4616, 4611, 1147, 1147, 0, 0, 4570, 0, 0, 0,
	0, 271, 1147, 271, 271, 1332, 4657, 271, 271, 4659,
	4635, 4644, 1342, 0, 2053, 4649, 4671, 4651, 4672, 4652,
	4656, 0, 4645, 4646, 0, 4665, 271, 0, 1535, 4512,
	2049, 0, 4667, 0, 4670, 4679, 0, 4668, 0, 4669,
	4701, 2267, 0, 0, 1555, 4664, 1147, 1147, 4705, 1147,
	4680, 1570, 1267, 1348, 4684, 2040, 1348, 1270, 0, 0,
	2166, 2171, 0, 1263, 0, 0, 0, 0, 0, 0,
	1595, 1263, 0, 1342, 0, 0, 4723, 271, 271, 4724,
	1332, 4731, 4735, 0, 0, 1263, 4736, 0, 4704, 4717,
	0, 4728, 4721, 4713, 4716, 4703, 0, 0, 0, 1265,
	0, 787, 0, 271, 271, 4696, 4697, 1265, 4722, 0,
	0, 0, 4756, 0, 0, 1658, 0, 1147, 1147, 1147,
	0, 1265, 0, 4718, 0, 1665, 0, 0, 0, 0,
	906, 0, 1263, 0, 1263, 0, 0, 0, 4741, 0,
	0, 4754, 4755, 0, 2167, 0, 4747, 0, 0, 0,
	1147, 0, 0, 0, 1270, 0, 0, 0, 3508, 3509,
	4791, 3510, 3511, 3512, 0, 0, 4770, 1270, 1265, 1270,
	1265, 4769, 4767, 4768, 0, 0, 4787, 4211, 0, 0,
	4815, 0, 0, 0, 4809, 0, 1270, 4814, 1267, 3507,
	4813, 0, 4819, 2173, 4789, 0, 4821, 0, 0, 2347,
	0, 0, 4823, 1267, 1147, 0, 0, 4805, 271, 3550,
	3551, 0, 3552, 3553, 3554, 0, 0, 4820, 0, 4834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4827,
	4828, 0, 271, 0, 0, 4829, 0, 0, 4831, 0,
	4850, 0, 4854, 4801, 4844, 4804, 3505, 0, 4846, 0,
	4842, 0, 4840, 4841, 1267, 1267, 0, 4853, 0, 4871,
	4855, 0, 0, 1269, 4869, 1269, 2172, 4857, 4870, 0,
	4735, 0, 0, 4877, 4880, 4878, 1267, 0, 4868, 1267,
	4863, 0, 4876, 4713, 0, 0, 4716, 0, 4622, 3506,
	0, 4886, 0, 2163, 0, 0, 4901, 0, 2164, 0,
	0, 4885, 1348, 0, 0, 0, 0, 0, 4879, 0,
	4881, 4910, 4903, 4211, 4900, 0, 0, 4912, 0, 0,
	0, 4911, 4917, 0, 0, 4907, 2499, 0, 4211, 4915,
	0, 0, 0, 0, 1147, 1147, 4914, 0, 0, 0,
	0, 4909, 0, 1147, 0, 1147, 1147, 4919, 0, 4923,
	0, 0, 0, 4937, 4936, 1264, 0, 4939, 4929, 0,
	4933, 4941, 0, 0, 0, 4944, 4940, 4938, 4943, 0,
	0, 0, 4942, 0, 0, 0, 2168, 0, 3105, 4211,
	4211, 4952, 4951, 4954, 0, 0, 4947, 4956, 4930, 4931,
	4959, 4958, 4961, 4957, 4955, 4953, 0, 0, 4964, 4967,
	4965, 4211, 0, 0, 4211, 0, 4966, 0, 4969, 1147,
	2567, 4970, 2165, 4972, 0, 0, 4973, 4976, 4975, 2641,
	0, 4961, 0, 0, 0, 0, 1897, 0, 4932, 2169,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 4971, 0, 271, 0, 271, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2873, 0, 0, 1535, 1332, 2016, 271, 0, 271, 2022,
	0, 2742, 0, 0, 0, 271, 0, 717, 0, 0,
	0, 1264, 271, 0, 0, 1500, 0, 0, 1511, 1337,
	0, 0, 0, 2166, 2171, 0, 1264, 2089, 0, 0,
	0, 0, 0, 0, 1263, 2812, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1265, 0, 0, 0, 0, 0, 0, 1264, 1264, 787,
	0, 0, 3242, 3243, 0, 0, 0, 0, 1337, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 1264,
	1267, 0, 1264, 0, 0, 0, 0, 2167, 1270, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 3029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2161, 0, 1270, 0, 2173, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1263, 0, 0, 0, 0, 0, 3070, 0, 0, 2053,
	0, 2892, 0, 1270, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 0, 2159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1265, 0, 4211, 0, 4211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1263, 1263, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 271, 0,
	2053, 0, 2160, 0, 0, 0, 0, 0, 1263, 0,
	0, 1263, 0, 0, 3340, 3341, 3342, 3343, 0, 0,
	0, 0, 1265, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 271, 0, 0, 0,
	0, 3020, 271, 0, 0, 0, 0, 0, 271, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 2168,
	0, 0, 0, 0, 271, 0, 271, 0, 0, 0,
	701, 0, 271, 0, 3012, 3010, 0, 0, 0, 0,
	0, 3014, 3016, 3006, 787, 0, 0, 0, 906, 0,
	1270, 0, 0, 0, 0, 0, 0, 3316, 3317, 0,
	3334, 3335, 3336, 0, 1270, 0, 1270, 0, 4036, 0,
	1270, 0, 0, 0, 0, 0, 0, 271, 1270, 1332,
	271, 1264, 0, 1264, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 2384,
	0, 0, 0, 0, 271, 271, 0, 271, 1270, 271,
	0, 271, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 3331, 0, 4085, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 2421, 0,
	0, 2422, 0, 2423, 0, 1270, 0, 1270, 0, 0,
	0, 0, 0, 1819, 1820, 271, 271, 271, 271, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2480, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 1822, 767, 0, 0, 0, 787, 0,
	0, 2742, 0, 0, 1270, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 1875,
	0, 0, 0, 0, 3008, 0, 0, 3322, 1821, 0,
	0, 0, 0, 0, 0, 3022, 0, 0, 1841, 0,
	1263, 0, 1263, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3021, 3013, 3011,
	3015, 3017, 3007, 3009, 3023, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 3019, 0, 1265, 0, 1265, 0,
	0, 0, 2742, 2742, 1270, 0, 0, 0, 0, 0,
	0, 2575, 0, 3338, 0, 0, 0, 0, 0, 0,
	0, 1270, 4104, 0, 0, 0, 0, 3026, 0, 0,
	0, 2053, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 2737,
	0, 0, 0, 1827, 0, 3332, 0, 0, 0, 0,
	2053, 2053, 0, 3316, 3317, 0, 3334, 3335, 3336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 4106, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 271, 0, 0,
	0, 0, 1849, 1851, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 271, 0, 701, 0, 0, 0, 0,
	1270, 1270, 0, 0, 0, 0, 0, 271, 1836, 1837,
	1872, 0, 3444, 0, 0, 0, 0, 0, 3331, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 1342, 0,
	0, 0, 0, 0, 3741, 3742, 1270, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	4300, 0, 0, 0, 0, 0, 0, 0, 3472, 0,
	0, 0, 0, 4317, 2742, 2742, 2742, 2742, 0, 0,
	3371, 0, 0, 0, 0, 0, 271, 1342, 0, 0,
	0, 717, 0, 0, 0, 2856, 4338, 3027, 3333, 0,
	0, 271, 0, 2303, 271, 0, 3018, 3521, 271, 0,
	271, 0, 0, 3400, 0, 1332, 0, 271, 271, 0,
	1342, 1342, 2872, 3322, 0, 0, 1872, 271, 3413, 3535,
	0, 3537, 0, 0, 3805, 3806, 3807, 3808, 3809, 3810,
	3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820,
	3821, 3822, 3823, 3824, 3434, 3828, 0, 3316, 3317, 0,
	3334, 3335, 3336, 0, 3569, 0, 0, 0, 3575, 0,
	0, 0, 0, 2909, 0, 0, 0, 0, 0, 4105,
	0, 1848, 0, 0, 271, 0, 0, 0, 0, 3338,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	271, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3332, 3331, 0, 0, 0, 0, 0, 3328, 3329,
	3330, 0, 271, 2053, 3637, 3327, 3325, 3326, 3318, 3319,
	3320, 3321, 3323, 3324, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 2430,
	0, 0, 0, 0, 0, 271, 3045, 0, 0, 0,
	0, 1102, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 1535, 0, 0, 271, 1872, 271, 0, 1270,
	1270, 1270, 0, 0, 271, 0, 1270, 1270, 1270, 0,
	0, 0, 0, 0, 3088, 0, 0, 3322, 0, 0,
	0, 0, 0, 0, 2909, 0, 701, 1270, 0, 0,
	0, 0, 0, 1270, 0, 3117, 906, 2909, 1839, 1835,
	73, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 3413, 0, 0, 0, 0, 0, 74, 271, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 79, 3333, 0, 0, 271, 1332, 271,
	0, 0, 0, 3338, 0, 0, 0, 0, 0, 1342,
	271, 0, 0, 1332, 0, 1332, 0, 1332, 0, 0,
	0, 3316, 3317, 0, 3334, 3335, 3336, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3750, 0, 3332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 271, 271, 1332, 0, 0, 1332, 3203,
	271, 0, 0, 0, 900, 271, 0, 0, 0, 0,
	3316, 3317, 0, 3334, 3335, 3336, 49, 0, 110, 1270,
	0, 0, 0, 94, 107, 0, 3331, 1270, 0, 0,
	0, 1270, 1270, 0, 1270, 1505, 271, 0, 1405, 0,
	0, 1270, 0, 0, 271, 0, 0, 0, 0, 0,
	1872, 0, 1270, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 3328, 3329, 3330, 4620, 1337, 0,
	0, 3327, 3325, 3326, 3318, 3319, 3320, 3321, 3323, 3324,
	2737, 2737, 0, 95, 0, 3331, 0, 0, 1270, 0,
	1270, 0, 0, 0, 0, 0, 0, 4655, 0, 0,
	0, 0, 0, 0, 2742, 2742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3762, 0, 1337, 0, 0,
	0, 3322, 0, 1270, 0, 0, 0, 0, 3333, 0,
	0, 0, 3778, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 1337,
	0, 1132, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 0, 1270, 1270, 0,
	3322, 0, 0, 0, 0, 0, 0, 3338, 0, 0,
	0, 0, 0, 0, 2742, 2742, 2742, 2742, 2742, 2742,
	2742, 2742, 2742, 2742, 2742, 2742, 2742, 2742, 2742, 2742,
	2742, 2742, 2742, 2742, 0, 2742, 0, 1270, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 4742, 3332,
	0, 99, 0, 0, 4744, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 1270, 1270, 1270, 1270, 1270, 0, 0, 0, 0,
	0, 0, 2737, 2737, 2737, 2737, 1270, 3871, 3328, 3329,
	3330, 0, 0, 1511, 0, 3327, 3325, 3326, 3318, 3319,
	3320, 3321, 3323, 3324, 0, 0, 190, 102, 3332, 0,
	106, 3981, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 239, 2053, 0, 0,
	0, 0, 0, 0, 901, 0, 0, 0, 0, 153,
	271, 0, 0, 0, 1069, 701, 0, 0, 0, 1270,
	701, 1270, 0, 701, 0, 1089, 701, 701, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1872, 241, 1270, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3333, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 1253, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 271, 0, 240, 0, 271, 271, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 1337, 0, 1270, 0, 234, 0, 0, 0, 0,
	0, 3333, 0, 0, 2909, 2909, 271, 0, 2016, 0,
	1270, 1270, 0, 0, 2909, 0, 0, 2022, 0, 0,
	0, 0, 193, 0, 0, 2909, 2022, 0, 2909, 2022,
	1270, 0, 2022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 1511, 0, 271, 271, 2016,
	0, 271, 0, 0, 0, 0, 4378, 0, 0, 0,
	0, 1270, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 2016, 0, 271, 0, 3540, 3540, 0, 0, 0,
	1332, 0, 3328, 3329, 3330, 0, 0, 0, 0, 3327,
	3325, 3326, 3318, 3319, 3320, 3321, 3323, 3324, 0, 0,
	2909, 0, 2909, 0, 3566, 2909, 2016, 0, 0, 2909,
	2016, 0, 0, 787, 2053, 4419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 3328, 3329, 3330, 0, 271, 0, 0, 3327, 3325,
	3326, 3318, 3319, 3320, 3321, 3323, 3324, 0, 0, 0,
	0, 0, 0, 271, 0, 3603, 1270, 0, 3605, 2909,
	0, 0, 271, 0, 0, 0, 271, 0, 0, 1342,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 3088,
	0, 0, 1332, 0, 271, 0, 4234, 2909, 0, 701,
	0, 0, 0, 0, 0, 0, 2909, 0, 4243, 0,
	0, 4246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 163, 1270, 0, 0,
	0, 1270, 0, 0, 73, 3711, 46, 45, 0, 0,
	0, 1270, 0, 0, 0, 4161, 0, 0, 0, 0,
	0, 74, 0, 0, 158, 3717, 0, 0, 1535, 0,
	0, 1332, 271, 0, 271, 4555, 0, 79, 4315, 0,
	1332, 0, 0, 0, 4176, 0, 0, 0, 67, 0,
	0, 0, 2737, 2737, 0, 48, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 3316, 3317, 0, 3334, 3335,
	3336, 271, 0, 0, 0, 47, 4578, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4600, 0, 0, 50, 68, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 0, 0, 57, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 3783,
	49, 0, 110, 0, 0, 0, 0, 94, 107, 894,
	3331, 0, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
	2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
	2737, 2737, 0, 2737, 0, 0, 73, 0, 897, 896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 79,
	0, 0, 0, 0, 0, 0, 1511, 1511, 0, 0,
	112, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 0,
	0, 0, 0, 0, 0, 3322, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 701, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4471, 0, 0, 0, 4370, 0, 1511,
	900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 49, 112, 110, 112, 1270, 0, 1270, 94,
	107, 3338, 0, 0, 2303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2742, 0, 0, 0,
	4370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3332, 0, 99, 2499, 1089, 112, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 53, 112, 787, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 2742, 0, 0, 56, 112,
	0, 112, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 3540, 58,
	190, 102, 0, 0, 106, 0, 0, 0, 54, 0,
	0, 271, 162, 0, 2499, 0, 0, 73, 1872, 0,
	55, 0, 0, 0, 0, 1337, 0, 0, 0, 0,
	239, 0, 0, 2016, 74, 271, 0, 0, 62, 717,
	717, 1342, 0, 153, 0, 0, 112, 0, 0, 0,
	79, 0, 0, 0, 271, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 271, 3088, 0, 0, 3088,
	0, 0, 0, 1855, 271, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 271,
	88, 0, 0, 0, 271, 0, 3333, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 99, 0, 0,
	0, 0, 0, 2909, 271, 0, 0, 0, 0, 194,
	0, 0, 0, 3117, 3117, 1511, 0, 240, 0, 906,
	2909, 900, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 1069, 0, 110, 0, 0, 0, 234,
	94, 107, 0, 0, 0, 2742, 0, 271, 0, 0,
	0, 0, 190, 102, 1889, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 3,
	0, 0, 1895, 0, 0, 0, 1901, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 2742, 0, 0, 0,
	901, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	95, 0, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 2742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4124, 0, 0, 1850, 3328, 3329, 3330, 0,
	241, 0, 1822, 3327, 3325, 3326, 3318, 3319, 3320, 3321,
	3323, 3324, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 1855, 157, 0, 1875, 0,
	0, 1855, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 1841, 0, 240,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 1535, 233, 271, 0, 0, 1988, 0, 1991, 0,
	112, 234, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 895, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 2909, 2909, 0, 3540, 2909, 99, 0,
	0, 0, 0, 0, 4213, 0, 4213, 1535, 0, 0,
	0, 1855, 1844, 1845, 1846, 1847, 1855, 0, 2909, 73,
	2022, 0, 1827, 0, 1535, 1535, 271, 2016, 0, 1855,
	0, 0, 0, 0, 1855, 0, 74, 0, 0, 0,
	2016, 0, 271, 2016, 0, 271, 0, 3540, 0, 0,
	0, 0, 79, 190, 102, 0, 0, 106, 0, 0,
	1974, 0, 2909, 0, 2909, 271, 0, 0, 0, 0,
	0, 1849, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 901, 88, 0, 0, 0, 153, 0, 0, 1855,
	2909, 2909, 0, 0, 0, 1855, 3088, 3088, 0, 0,
	0, 0, 0, 4304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	1842, 241, 0, 900, 271, 0, 0, 0, 0, 0,
	0, 0, 1337, 0, 0, 49, 0, 110, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 157, 0, 0,
	0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 1856, 1850, 0, 0, 0, 0,
	0, 0, 1822, 233, 0, 0, 0, 0, 0, 0,
	0, 1869, 234, 0, 2737, 1872, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 2303, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 1841, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 1855, 0,
	1848, 0, 0, 2737, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 2909, 73, 2022,
	0, 0, 4411, 1843, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 4435, 0, 4435, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 2741, 0, 0,
	0, 0, 1844, 1845, 1846, 1847, 0, 787, 0, 0,
	1855, 0, 1827, 1089, 0, 1089, 1855, 0, 3540, 0,
	1332, 1874, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 2016, 0, 271, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 1849, 1851, 4411, 0, 0, 4213, 0, 0, 1535,
	0, 0, 900, 0, 0, 0, 2909, 0, 1866, 0,
	1867, 0, 0, 0, 0, 0, 110, 1836, 1837, 0,
	0, 94, 107, 0, 4521, 190, 102, 0, 0, 106,
	0, 0, 0, 0, 0, 1858, 1535, 112, 0, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	1842, 0, 0, 2737, 0, 239, 0, 0, 0, 0,
	271, 271, 0, 901, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 3783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2737, 0, 1868, 0, 0, 0,
	0, 0, 0, 241, 3540, 4572, 0, 0, 0, 0,
	0, 0, 4411, 1069, 1857, 0, 1069, 1069, 0, 2737,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 157,
	0, 0, 4213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 2303, 4213, 0, 1109,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 1337, 0, 0, 271,
	0, 0, 2560, 0, 234, 0, 0, 0, 0, 0,
	1848, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 4213, 4213,
	0, 1643, 1895, 1843, 4304, 0, 1895, 0, 0, 2833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4213, 0, 271, 4213, 0, 0, 0, 0, 0, 99,
	1861, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 1535, 0, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	4694, 0, 0, 0, 190, 102, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 1991, 4435, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 901, 0, 2909, 0, 0, 153, 0, 0,
	0, 0, 0, 1859, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	271, 0, 241, 4132, 0, 0, 0, 4131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 3783, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1535, 194, 0, 0, 1855, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 1351, 0,
	0, 0, 271, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	1855, 0, 0, 0, 0, 1094, 1094, 1094, 0, 0,
	193, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 4411, 0, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1537,
	0, 1543, 2909, 1549, 1855, 0, 1855, 1855, 1855, 1855,
	0, 0, 4213, 0, 4213, 0, 0, 1535, 2741, 2741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 1535, 0, 0,
	0, 112, 1819, 1820, 112, 0, 112, 0, 0, 0,
	74, 0, 1649, 0, 1654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 1850, 79, 1667, 0, 1672,
	0, 0, 1822, 0, 0, 0, 0, 0, 3117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2909, 0, 112, 0, 1855, 112, 0, 1855, 1875, 0,
	1855, 112, 0, 1855, 3117, 0, 88, 1821, 0, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 110, 0, 0, 0, 0, 94, 107, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 112, 3337, 0,
	2741, 2741, 2741, 2741, 0, 0, 0, 1855, 0, 1855,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 1844, 1845, 1846, 1847, 0, 0, 0, 1109,
	1109, 1109, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 1491, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 1849, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 1856, 1850, 0, 0, 1909, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 1836, 1837, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 2560, 0, 0, 1821, 0, 0, 0,
	1842, 0, 1819, 1820, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 1895, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 1875, 0,
	0, 0, 1968, 1968, 1968, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 190,
	102, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	1860, 3744, 0, 1870, 0, 0, 0, 901, 0, 0,
	1849, 1851, 153, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1845, 1846, 1847, 0, 1866, 0, 1867,
	1855, 1855, 1827, 1855, 0, 0, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1094, 0, 0, 1842,
	0, 1874, 0, 157, 0, 0, 1253, 0, 1143, 0,
	0, 1849, 1851, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 1253, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 1837, 233,
	0, 0, 0, 0, 0, 1868, 0, 0, 234, 0,
	0, 0, 0, 0, 270, 270, 270, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 1872, 1641, 0, 0, 0, 0,
	0, 1855, 0, 830, 0, 0, 0, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 1855, 1855, 0,
	2741, 2741, 0, 0, 1855, 1872, 0, 0, 0, 0,
	0, 0, 1843, 0, 3337, 3337, 0, 0, 1855, 1855,
	0, 0, 0, 0, 0, 0, 1491, 0, 1855, 0,
	112, 112, 0, 112, 112, 112, 0, 0, 0, 1861,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 112, 1843, 112, 112, 112, 0, 0, 0,
	2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741,
	2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741, 2741,
	1266, 2741, 3337, 3337, 3337, 3337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1109, 1874, 1859, 0, 0, 0, 0, 1855, 1491, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 3291, 0, 0, 0, 3292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 2408, 0, 0,
	0, 0, 0, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 2434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 2474, 0,
	2478, 0, 0, 0, 0, 0, 0, 2492, 0, 0,
	0, 1491, 0, 0, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	0, 2542, 0, 2544, 2545, 2546, 2547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 2622, 0, 0, 0, 0,
	0, 0, 1819, 1820, 0, 0, 0, 0, 0, 0,
	0, 2652, 2655, 2658, 2661, 0, 0, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 0, 1850, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2733, 0, 2745, 2747, 2752,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	112, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1253, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 1855,
	0, 0, 1855, 3337, 3337, 1855, 0, 0, 0, 1855,
	0, 3739, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 1844, 1845, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 1855, 1855, 1855, 1855, 0, 0, 0,
	0, 0, 1855, 0, 1855, 0, 1491, 3337, 3337, 3337,
	3337, 3337, 3337, 3337, 3337, 3337, 3337, 3337, 3337, 3337,
	3337, 3337, 3337, 3337, 3337, 3337, 3337, 0, 0, 0,
	3337, 1849, 1851, 1855, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 270, 0, 270,
	270, 0, 0, 270, 1855, 0, 0, 1836, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	270, 0, 270, 270, 1855, 0, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 1491,
	112, 3048, 3049, 0, 3051, 0, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 1253, 0, 0, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 1855, 1855, 0, 270, 0, 1855,
	1855, 3169, 0, 1855, 1855, 0, 0, 0, 1855, 0,
	0, 0, 1855, 0, 0, 0, 0, 1855, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 2741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 1253, 0, 0,
	0, 0, 1876, 1877, 0, 1253, 0, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 2741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3225, 3226,
	0, 0, 0, 730, 3232, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3246, 3247, 0, 0, 0, 0, 2622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3256, 0, 0, 0, 0, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 3282, 0, 0,
	0, 0, 112, 1990, 0, 1266, 0, 0, 0, 270,
	0, 0, 735, 0, 0, 112, 0, 1855, 1855, 1855,
	0, 0, 0, 0, 0, 270, 1990, 270, 1855, 1855,
	3337, 2741, 0, 0, 830, 736, 0, 1855, 112, 0,
	1855, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 3337, 2741, 0, 0, 270, 0, 0, 762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 1855, 2741, 0, 2752,
	2752, 2752, 0, 752, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 1968, 0, 0, 0, 0, 0,
	0, 0, 3375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3337, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 0, 0, 1094, 1855,
	3337, 0, 0, 1855, 0, 740, 0, 0, 1856, 1850,
	0, 0, 1094, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 3337, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 760, 0, 741, 0, 0, 0,
	0, 0, 1875, 270, 0, 3498, 0, 830, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 1855, 761, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 0, 757,
	758, 755, 2560, 0, 0, 0, 0, 750, 0, 0,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 270, 751, 270, 1844, 1845, 1846, 1847,
	0, 270, 0, 745, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	1491, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 1855, 0,
	0, 0, 0, 0, 0, 1860, 270, 748, 1870, 270,
	0, 0, 0, 1491, 0, 1849, 1851, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 1491, 0,
	270, 0, 1866, 0, 1867, 0, 1156, 0, 0, 0,
	0, 1836, 1837, 830, 270, 0, 270, 0, 270, 112,
	270, 0, 270, 0, 1491, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1820,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 112,
	0, 0, 272, 272, 272, 0, 0, 0, 0, 0,
	0, 1850, 1109, 0, 270, 270, 270, 270, 1822, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 1857, 272,
	0, 0, 0, 1841, 0, 0, 0, 0, 2492, 1872,
	0, 0, 1838, 0, 3736, 3737, 1855, 0, 3740, 0,
	1855, 0, 3743, 0, 0, 0, 0, 0, 0, 0,
	0, 3747, 0, 0, 0, 0, 0, 0, 0, 0,
	3754, 0, 0, 0, 0, 3375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3767, 1491, 0, 0, 1848, 0, 0, 3738, 0, 0,
	112, 0, 0, 0, 0, 0, 112, 0, 0, 1259,
	3790, 3791, 0, 3792, 3793, 3794, 0, 1843, 1844, 1845,
	1846, 1847, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 3800, 0, 0, 0, 3802, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 266, 266, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3831, 3832,
	0, 0, 0, 0, 0, 1874, 0, 1849, 1851, 1819,
	1820, 0, 0, 0, 0, 0, 3843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1266, 0, 0, 0,
	0, 3852, 1850, 1836, 1837, 0, 0, 0, 0, 1822,
	0, 0, 1266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 1842, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 270, 1859, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 1838, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 0, 0, 2618, 0, 0,
	0, 2619, 0, 3902, 0, 1491, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 3913, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 1872, 0, 270, 0, 0, 0, 270, 3231, 270,
	0, 0, 0, 0, 0, 0, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 3942, 270, 0, 0, 1844,
	1845, 1846, 1847, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 270, 0, 0, 0, 0, 1849, 1851,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 1836, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 830, 0, 4060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 830, 1491, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4102,
	4103, 0, 0, 0, 0, 4107, 4108, 0, 0, 0,
	4111, 4112, 0, 0, 0, 0, 0, 270, 4116, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 4120,
	0, 0, 0, 0, 0, 0, 270, 0, 270, 0,
	0, 0, 0, 0, 0, 4125, 0, 0, 0, 270,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 270, 270, 270, 0, 0, 0, 0, 1874, 270,
	0, 0, 0, 0, 270, 272, 0, 272, 272, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 1411,
	272, 272, 0, 1411, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0,
	0, 1819, 1820, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 1875, 0, 1411,
	272, 272, 0, 0, 0, 0, 1821, 0, 0, 0,
	1491, 0, 0, 0, 0, 1411, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 1318, 0,
	1318, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	3224, 1402, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 4365, 4366, 4367, 0, 0,
	0, 1844, 1845, 1846, 1847, 272, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 2492, 0,
	0, 4376, 4377, 0, 0, 0, 0, 822, 0, 272,
	0, 0, 1491, 1491, 0, 1491, 0, 0, 0, 4385,
	4388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1266, 0, 822, 0, 0, 0, 0,
	1849, 1851, 0, 0, 1491, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1648, 0, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 4436, 0, 0, 0, 0, 0, 0,
	0, 270, 4444, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 1491, 0, 4452, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 4461, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 270, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 1764, 1850,
	0, 0, 0, 0, 1872, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 1875, 0, 0, 0, 270, 270, 0, 0,
	270, 1821, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 1848,
	1838, 0, 270, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 1411, 0,
	0, 0, 1843, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4577,
	0, 0, 0, 4581, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 272, 270, 0, 1844, 1845, 1846, 1847,
	1874, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	1491, 0, 830, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 270, 0, 1860, 0, 0, 1870, 0,
	0, 0, 0, 1266, 0, 1849, 1851, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 1094, 1094, 0, 0,
	0, 0, 1866, 0, 1867, 0, 4653, 0, 0, 0,
	0, 1836, 1837, 1109, 0, 0, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 1858,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	2006, 0, 0, 2492, 1842, 0, 0, 0, 0, 0,
	0, 0, 4388, 0, 0, 0, 2017, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 1094, 0, 1318,
	0, 0, 1491, 0, 0, 0, 1509, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 272, 0, 1411, 1411, 272, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4766, 4766, 4766,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 272, 0, 0, 0, 1843, 0, 272,
	4790, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 272, 1861, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	1411, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4766, 1874, 0, 0, 0, 0,
	1411, 1411, 0, 0, 0, 1266, 1266, 0, 0, 0,
	0, 0, 0, 1411, 272, 0, 0, 272, 0, 0,
	1109, 1109, 0, 0, 0, 1411, 0, 1411, 1411, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 272, 0, 272, 0, 272, 0, 272, 0,
	272, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 1408, 0, 0, 0, 1408,
	0, 0, 272, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 2289, 0, 0, 0, 2296, 0, 0, 0,
	0, 1109, 0, 0, 4766, 4924, 0, 0, 2309, 0,
	0, 0, 0, 4928, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 0, 2321, 0, 2321, 0, 0, 0,
	0, 0, 2328, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1850, 0, 1567, 0,
	270, 0, 0, 1822, 0, 1567, 0, 2296, 0, 0,
	2356, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 270, 0, 0, 0, 0, 1875,
	0, 2376, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 270, 0, 2392, 0, 2394, 1841, 2396,
	0, 2398, 0, 2399, 270, 0, 0, 1838, 0, 0,
	0, 1411, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 270, 1567,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2426, 2427, 2428, 0, 0,
	0, 0, 0, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0,
	0, 1411, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 1850, 1827, 0, 0, 270, 0, 0, 1822,
	0, 0, 0, 0, 272, 0, 0, 1411, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 1875, 0, 0, 0, 0,
	0, 0, 1860, 0, 1821, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 1866,
	0, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 272, 0,
	0, 272, 0, 0, 0, 272, 0, 272, 0, 0,
	0, 1842, 0, 0, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1845, 1846, 1847, 0, 1266, 0, 0, 0, 0, 1827,
	0, 0, 1266, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 1411, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 1872, 0, 1860, 0,
	0, 1870, 0, 0, 272, 0, 0, 2809, 1849, 1851,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 1990, 0, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 270, 0, 0, 0, 272,
	1411, 1848, 1858, 0, 0, 0, 0, 0, 822, 0,
	0, 270, 0, 0, 270, 822, 0, 1842, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 270, 0, 0, 0, 0, 0,
	0, 2858, 0, 0, 1318, 0, 0, 0, 1318, 0,
	1318, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 272, 0, 0, 2309, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 270, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	1411, 0, 1411, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 272, 1848, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	1843, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 1509, 0, 0, 1409, 0, 0, 4130, 1409,
	0, 0, 0, 0, 0, 0, 0, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	272, 272, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2296, 0, 0, 0, 1567,
	1567, 0, 0, 272, 2309, 0, 0, 0, 0, 1408,
	270, 272, 0, 0, 2712, 2713, 2714, 2715, 2708, 2709,
	2710, 2711, 0, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1568, 0, 0, 0, 0, 0, 0, 3139, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 270, 3150, 0, 3153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2688, 2689, 2690, 2691,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1568,
	0, 0, 0, 0, 1567, 0, 1567, 0, 1567, 2700,
	2701, 2702, 2703, 2696, 2697, 2698, 2699, 2704, 2705, 2706,
	2707, 0, 0, 0, 0, 0, 1567, 1567, 0, 0,
	0, 3185, 1509, 3187, 1509, 0, 0, 0, 0, 1567,
	3193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1567, 0, 1567, 1567, 1567, 0, 0, 0, 270,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1318, 822, 0, 0,
	0, 0, 0, 0, 3222, 0, 0, 2684, 2685, 2686,
	2687, 2692, 2693, 2694, 2695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 1990, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	1411, 270, 1990, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 272, 272, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 270, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 272, 272, 0, 1408, 272, 0,
	0, 0, 0, 0, 0, 272, 0, 1856, 1850, 270,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	272, 0, 0, 1408, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 1411, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 3423, 0, 0, 0, 1409, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 747, 0, 1411, 0, 1411,
	0, 1318, 0, 1411, 0, 1509, 1509, 0, 0, 0,
	272, 1411, 0, 0, 0, 730, 0, 0, 0, 272,
	731, 0, 1411, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3468, 0, 0, 0,
	0, 272, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1408,
	733, 1990, 0, 1990, 0, 0, 1411, 3517, 3519, 0,
	0, 2309, 0, 0, 0, 0, 0, 0, 1411, 0,
	1411, 734, 0, 0, 1860, 0, 0, 1870, 0, 1568,
	1568, 0, 0, 0, 1849, 1851, 0, 0, 0, 1409,
	0, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1867, 0, 0, 0, 0, 0, 0,
	1836, 1837, 0, 0, 735, 0, 0, 1411, 0, 272,
	1411, 272, 0, 0, 0, 0, 1408, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	737, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	762, 0, 3626, 0, 0, 0, 3630, 0, 0, 1868,
	822, 0, 0, 0, 1568, 0, 1568, 1411, 1568, 0,
	0, 0, 0, 0, 0, 752, 0, 1857, 0, 0,
	0, 0, 0, 0, 1411, 0, 1568, 1568, 1872, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 1567, 0, 1567, 0,
	0, 1568, 0, 1568, 1568, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 3721, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 740, 0, 0,
	0, 3734, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 741, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	0, 757, 758, 755, 0, 0, 1859, 0, 0, 750,
	0, 0, 743, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	3752, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 744, 0, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 746,
	0, 0, 0, 0, 754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 763, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0,
	0, 0, 1411, 1411, 1411, 0, 0, 0, 0, 1411,
	1411, 1411, 1856, 1850, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	1411, 0, 0, 0, 272, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 1408, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2309, 1408, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2309, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 4014, 0, 0, 0, 0,
	0, 0, 0, 0, 4024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2309,
	1844, 1845, 1846, 1847, 4042, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 1411, 1411, 0, 1411, 0, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 0, 1860,
	0, 0, 1870, 0, 0, 1411, 1411, 0, 0, 1849,
	1851, 0, 0, 0, 852, 0, 1411, 4087, 0, 853,
	0, 0, 0, 0, 0, 0, 1866, 0, 1867, 0,
	0, 0, 0, 0, 0, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 854, 0,
	871, 0, 0, 272, 0, 0, 0, 0, 1842, 1408,
	0, 0, 0, 1568, 0, 0, 1411, 0, 0, 272,
	0, 0, 272, 0, 0, 855, 1568, 0, 1568, 0,
	856, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 1568, 0, 0, 0, 1567,
	0, 0, 880, 0, 1868, 0, 0, 0, 0, 857,
	0, 0, 0, 1567, 0, 1567, 0, 0, 0, 1408,
	1411, 1411, 1857, 878, 0, 0, 822, 1567, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 1567, 0,
	0, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 272, 0, 0, 0, 1411, 0, 0, 0, 858,
	0, 0, 859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 1848, 762,
	0, 0, 1567, 0, 1411, 1411, 1411, 1411, 1411, 0,
	0, 0, 0, 0, 1567, 0, 1567, 0, 0, 1411,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4232, 0, 1861, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2309, 1408, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 876, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 2309, 860, 0, 0, 0, 0,
	0, 1859, 0, 0, 4326, 0, 862, 0, 0, 0,
	1408, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 3294, 1411, 863, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 873, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 1411, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 272, 0,
	0, 0, 0, 865, 0, 1408, 0, 866, 885, 0,
	884, 0, 0, 0, 867, 0, 0, 0, 1409, 0,
	0, 4421, 0, 0, 0, 0, 0, 0, 868, 0,
	0, 0, 0, 877, 0, 0, 0, 0, 0, 886,
	0, 883, 0, 0, 0, 0, 0, 763, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2309, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1820,
	0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1850, 0, 0, 0, 0, 0, 0, 1822, 272,
	0, 0, 0, 0, 1411, 0, 0, 1869, 0, 0,
	0, 0, 1567, 0, 1411, 0, 0, 0, 0, 0,
	4545, 1509, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 1409,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1567, 1567,
	1567, 0, 0, 0, 0, 1567, 1567, 1567, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 1845,
	1846, 1847, 0, 1568, 0, 1568, 1567, 272, 1827, 1409,
	0, 0, 1408, 0, 0, 0, 0, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	1870, 0, 4658, 0, 0, 0, 0, 1849, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 1867, 0, 0, 272,
	0, 0, 1568, 1836, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 1568, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 1408, 1868, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1567, 1567, 0, 0, 0, 0, 0, 0, 0,
	4749, 1872, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4810, 0, 0, 0, 0, 0, 1408, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	1567, 1567, 1567, 1567, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 1408, 0, 0, 0, 0,
	0, 0, 0, 3293, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1850, 0, 0, 0, 1408, 0,
	1567, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1567,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 1568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 1567, 0, 0, 0, 0, 1568, 1568,
	1568, 0, 0, 0, 0, 1568, 1568, 1568, 0, 0,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 1866, 0, 1867,
	0, 0, 0, 0, 0, 0, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1850, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 1857, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 1409, 0, 1409, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1567, 1568, 1568, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	1874, 0, 0, 0, 1860, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1867, 0, 0, 1568, 1568, 0, 0,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1842, 0, 0, 1409, 0, 0, 0,
	0, 1568, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 3290, 0, 0, 0,
	1568, 1568, 1568, 1568, 1568, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	1568, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	1409, 0, 0, 1568, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	3289, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 1412, 287, 288,
	1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 1421, 648, 299, 300,
	301, 302, 303, 304, 1422, 1423, 0, 305, 649, 650,
	651, 1424, 306, 307, 652, 1425, 1492, 1426, 308, 309,
	310, 311, 312, 313, 314, 0, 1427, 316, 317, 318,
	315, 319, 1428, 320, 0, 321, 322, 323, 324, 325,
	326, 1429, 327, 328, 329, 1211, 330, 331, 332, 1430,
	1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 1437, 343, 339, 341,
	1438, 344, 342, 345, 1439, 346, 347, 348, 1440, 1441,
	349, 350, 351, 1442, 352, 353, 1443, 354, 355, 356,
	1444, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 1445, 277, 1446,
	1568, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	1568, 374, 1447, 375, 376, 377, 1448, 1449, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1450, 390, 661, 1451, 662, 391, 1452,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 1453, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1454, 1213, 407, 666,
	667, 1455, 668, 1456, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1457, 421, 423, 422, 1458, 424, 670,
	1218, 425, 426, 1219, 1459, 427, 428, 429, 430, 431,
	432, 435, 1460, 1461, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1462, 279, 1222, 478, 479, 1463, 671, 480,
	672, 482, 483, 1464, 0, 484, 0, 1465, 1466, 486,
	487, 488, 1467, 1468, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1469, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 1470,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 1471, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 1472,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1473, 568, 569, 567, 570, 571,
	572, 1474, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1475,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1476, 600, 601, 0,
	597, 588, 1477, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 1478, 610, 684, 685, 686, 687, 1479, 619,
	1480, 611, 612, 613, 688, 614, 689, 1481, 615, 616,
	617, 618, 0, 620, 621, 1482, 1483, 622, 623, 624,
	626, 627, 625, 628, 1484, 629, 1485, 0, 630, 631,
	632, 690, 691, 692, 1486, 634, 633, 635, 693, 636,
	637, 1487, 1488, 1489, 1490, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 2787, 0,
	0, 0, 0, 0, 0, 0, 2788, 280, 282, 281,
	283, 284, 285, 286, 1412, 287, 288, 1413, 1414, 1415,
	0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1421, 648, 299, 300, 301, 302, 303,
	304, 1422, 1423, 0, 305, 649, 650, 651, 1424, 306,
	307, 652, 1425, 1492, 1426, 308, 309, 310, 311, 312,
	313, 314, 0, 1427, 316, 317, 318, 315, 319, 1428,
	320, 0, 321, 322, 323, 324, 325, 326, 1429, 327,
	328, 329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432,
	1434, 1435, 1436, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1437, 343, 339, 341, 1438, 344, 342,
	345, 1439, 346, 347, 348, 1440, 1441, 349, 350, 351,
	1442, 352, 353, 1443, 354, 355, 356, 1444, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1445, 277, 1446, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1447,
	375, 376, 377, 1448, 1449, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1450, 390, 661, 1451, 662, 391, 1452, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 1453,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1454, 1213, 407, 666, 667, 1455, 668,
	1456, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1457, 421, 423, 422, 1458, 424, 670, 1218, 425, 426,
	1219, 1459, 427, 428, 429, 430, 431, 432, 435, 1460,
	1461, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1462,
	279, 1222, 478, 479, 1463, 671, 480, 672, 482, 483,
	1464, 0, 484, 0, 1465, 1466, 486, 487, 488, 1467,
	1468, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1469, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1470, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1471, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1472, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1473, 568, 569, 567, 570, 571, 572, 1474, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1475, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1476, 600, 601, 0, 597, 588, 1477,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1478,
	610, 684, 685, 686, 687, 1479, 619, 1480, 611, 612,
	613, 688, 614, 689, 1481, 615, 616, 617, 618, 0,
	620, 621, 1482, 1483, 622, 623, 624, 626, 627, 625,
	628, 1484, 629, 1485, 0, 630, 631, 632, 690, 691,
	692, 1486, 634, 633, 635, 693, 636, 637, 1487, 1488,
	1489, 1490, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	3761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3763, 280, 282, 281, 283, 284, 285, 286, 1412,
	287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418,
	1419, 1420, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 1421, 648,
	299, 300, 301, 302, 303, 304, 1422, 1423, 0, 305,
	649, 650, 651, 1424, 306, 307, 652, 1425, 1492, 1426,
	308, 309, 310, 311, 312, 313, 314, 0, 1427, 316,
	317, 318, 315, 319, 1428, 320, 0, 321, 322, 323,
	324, 325, 326, 1429, 327, 328, 329, 1211, 330, 331,
	332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 1437, 343,
	339, 341, 1438, 344, 342, 345, 1439, 346, 347, 348,
	1440, 1441, 349, 350, 351, 1442, 352, 353, 1443, 354,
	355, 356, 1444, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 1445,
	277, 1446, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1447, 375, 376, 377, 1448, 1449,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1450, 390, 661, 1451, 662,
	391, 1452, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 1453, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1454, 1213,
	407, 666, 667, 1455, 668, 1456, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1457, 421, 423, 422, 1458,
	424, 670, 1218, 425, 426, 1219, 1459, 427, 428, 429,
	430, 431, 432, 435, 1460, 1461, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1462, 279, 1222, 478, 479, 1463,
	671, 480, 672, 482, 483, 1464, 0, 484, 0, 1465,
	1466, 486, 487, 488, 1467, 1468, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1469, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 1470, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 1471, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 1472, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1473, 568, 569, 567,
	570, 571, 572, 1474, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1475, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1476, 600,
	601, 0, 597, 588, 1477, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 1478, 610, 684, 685, 686, 687,
	1479, 619, 1480, 611, 612, 613, 688, 614, 689, 1481,
	615, 616, 617, 618, 0, 620, 621, 1482, 1483, 622,
	623, 624, 626, 627, 625, 628, 1484, 629, 1485, 0,
	630, 631, 632, 690, 691, 692, 1486, 634, 633, 635,
	693, 636, 637, 1487, 1488, 1489, 1490, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4160, 280, 282, 281, 283, 284, 285, 286, 1412, 287,
	288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419,
	1420, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 1421, 648, 299,
	300, 301, 302, 303, 304, 1422, 1423, 0, 305, 649,
	650, 651, 1424, 306, 307, 652, 1425, 1492, 1426, 308,
	309, 310, 311, 312, 313, 314, 0, 1427, 316, 317,
	318, 315, 319, 1428, 320, 0, 321, 322, 323, 324,
	325, 326, 1429, 327, 328, 329, 1211, 330, 331, 332,
	1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 1437, 343, 339,
	341, 1438, 344, 342, 345, 1439, 346, 347, 348, 1440,
	1441, 349, 350, 351, 1442, 352, 353, 1443, 354, 355,
	356, 1444, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 1445, 277,
	1446, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1447, 375, 376, 377, 1448, 1449, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1450, 390, 661, 1451, 662, 391,
	1452, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 1453, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1454, 1213, 407,
	666, 667, 1455, 668, 1456, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1457, 421, 423, 422, 1458, 424,
	670, 1218, 425, 426, 1219, 1459, 427, 428, 429, 430,
	431, 432, 435, 1460, 1461, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1462, 279, 1222, 478, 479, 1463, 671,
	480, 672, 482, 483, 1464, 0, 484, 0, 1465, 1466,
	486, 487, 488, 1467, 1468, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1469, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	1470, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 1471, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	1472, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1473, 568, 569, 567, 570,
	571, 572, 1474, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1475, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1476, 600, 601,
	0, 597, 588, 1477, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 1478, 610, 684, 685, 686, 687, 1479,
	619, 1480, 611, 612, 613, 688, 614, 689, 1481, 615,
	616, 617, 618, 0, 620, 621, 1482, 1483, 622, 623,
	624, 626, 627, 625, 628, 1484, 629, 1485, 0, 630,
	631, 632, 690, 691, 692, 1486, 634, 633, 635, 693,
	636, 637, 1487, 1488, 1489, 1490, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4158,
	280, 282, 281, 283, 284, 285, 286, 1412, 287, 288,
	1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 1421, 648, 299, 300,
	301, 302, 303, 304, 1422, 1423, 0, 305, 649, 650,
	651, 1424, 306, 307, 652, 1425, 1492, 1426, 308, 309,
	310, 311, 312, 313, 314, 0, 1427, 316, 317, 318,
	315, 319, 1428, 320, 0, 321, 322, 323, 324, 325,
	326, 1429, 327, 328, 329, 1211, 330, 331, 332, 1430,
	1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 1437, 343, 339, 341,
	1438, 344, 342, 345, 1439, 346, 347, 348, 1440, 1441,
	349, 350, 351, 1442, 352, 353, 1443, 354, 355, 356,
	1444, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 1445, 277, 1446,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1447, 375, 376, 377, 1448, 1449, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1450, 390, 661, 1451, 662, 391, 1452,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 1453, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1454, 1213, 407, 666,
	667, 1455, 668, 1456, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1457, 421, 423, 422, 1458, 424, 670,
	1218, 425, 426, 1219, 1459, 427, 428, 429, 430, 431,
	432, 435, 1460, 1461, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1462, 279, 1222, 478, 479, 1463, 671, 480,
	672, 482, 483, 1464, 0, 484, 0, 1465, 1466, 486,
	487, 488, 1467, 1468, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1469, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 1470,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 1471, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 1472,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1473, 568, 569, 567, 570, 571,
	572, 1474, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1475,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1476, 600, 601, 0,
	597, 588, 1477, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 1478, 610, 684, 685, 686, 687, 1479, 619,
	1480, 611, 612, 613, 688, 614, 689, 1481, 615, 616,
	617, 618, 0, 620, 621, 1482, 1483, 622, 623, 624,
	626, 627, 625, 628, 1484, 629, 1485, 0, 630, 631,
	632, 690, 691, 692, 1486, 634, 633, 635, 693, 636,
	637, 1487, 1488, 1489, 1490, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4371, 280, 282, 281, 283, 284, 285,
	286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643,
	1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	1421, 648, 299, 300, 301, 302, 303, 304, 1422, 1423,
	0, 305, 649, 650, 651, 1424, 306, 307, 652, 1425,
	1492, 1426, 308, 309, 310, 311, 312, 313, 314, 0,
	1427, 316, 317, 318, 315, 319, 1428, 320, 0, 321,
	322, 323, 324, 325, 326, 1429, 327, 328, 329, 1211,
	330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	1437, 343, 339, 341, 1438, 344, 342, 345, 1439, 346,
	347, 348, 1440, 1441, 349, 350, 351, 1442, 352, 353,
	1443, 354, 355, 356, 1444, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 1445, 277, 1446, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1447, 375, 376, 377,
	1448, 1449, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1450, 390, 661,
	1451, 662, 391, 1452, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 1453, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1454, 1213, 407, 666, 667, 1455, 668, 1456, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1457, 421, 423,
	422, 1458, 424, 670, 1218, 425, 426, 1219, 1459, 427,
	428, 429, 430, 431, 432, 435, 1460, 1461, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1462, 279, 1222, 478,
	479, 1463, 671, 480, 672, 482, 483, 1464, 0, 484,
	0, 1465, 1466, 486, 487, 488, 1467, 1468, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1469, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 1470, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	1471, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 1472, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1473, 568,
	569, 567, 570, 571, 572, 1474, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1475, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1476, 600, 601, 0, 597, 588, 1477, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 1478, 610, 684, 685,
	686, 687, 1479, 619, 1480, 611, 612, 613, 688, 614,
	689, 1481, 615, 616, 617, 618, 0, 620, 621, 1482,
	1483, 622, 623, 624, 626, 627, 625, 628, 1484, 629,
	1485, 0, 630, 631, 632, 690, 691, 692, 1486, 634,
	633, 635, 693, 636, 637, 1487, 1488, 1489, 1490, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4241, 280, 282,
	281, 283, 284, 285, 286, 1412, 287, 288, 1413, 1414,
	1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1421, 648, 299, 300, 301, 302,
	303, 304, 1422, 1423, 0, 305, 649, 650, 651, 1424,
	306, 307, 652, 1425, 1492, 1426, 308, 309, 310, 311,
	312, 313, 314, 0, 1427, 316, 317, 318, 315, 319,
	1428, 320, 0, 321, 322, 323, 324, 325, 326, 1429,
	327, 328, 329, 1211, 330, 331, 332, 1430, 1431, 1433,
	1432, 1434, 1435, 1436, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1437, 343, 339, 341, 1438, 344,
	342, 345, 1439, 346, 347, 348, 1440, 1441, 349, 350,
	351, 1442, 352, 353, 1443, 354, 355, 356, 1444, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1445, 277, 1446, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1447, 375, 376, 377, 1448, 1449, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1450, 390, 661, 1451, 662, 391, 1452, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	1453, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1454, 1213, 407, 666, 667, 1455,
	668, 1456, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1457, 421, 423, 422, 1458, 424, 670, 1218, 425,
	426, 1219, 1459, 427, 428, 429, 430, 431, 432, 435,
	1460, 1461, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1462, 279, 1222, 478, 479, 1463, 671, 480, 672, 482,
	483, 1464, 0, 484, 0, 1465, 1466, 486, 487, 488,
	1467, 1468, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1469, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1470, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1471, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1472, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1473, 568, 569, 567, 570, 571, 572, 1474,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1475, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1476, 600, 601, 0, 597, 588,
	1477, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1478, 610, 684, 685, 686, 687, 1479, 619, 1480, 611,
	612, 613, 688, 614, 689, 1481, 615, 616, 617, 618,
	0, 620, 621, 1482, 1483, 622, 623, 624, 626, 627,
	625, 628, 1484, 629, 1485, 0, 630, 631, 632, 690,
	691, 692, 1486, 634, 633, 635, 693, 636, 637, 1487,
	1488, 1489, 1490, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4088, 280, 282, 281, 283, 284, 285, 286, 1412,
	287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418,
	1419, 1420, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 1421, 648,
	299, 300, 301, 302, 303, 304, 1422, 1423, 0, 305,
	649, 650, 651, 1424, 306, 307, 652, 1425, 1492, 1426,
	308, 309, 310, 311, 312, 313, 314, 0, 1427, 316,
	317, 318, 315, 319, 1428, 320, 0, 321, 322, 323,
	324, 325, 326, 1429, 327, 328, 329, 1211, 330, 331,
	332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 1437, 343,
	339, 341, 1438, 344, 342, 345, 1439, 346, 347, 348,
	1440, 1441, 349, 350, 351, 1442, 352, 353, 1443, 354,
	355, 356, 1444, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 1445,
	277, 1446, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1447, 375, 376, 377, 1448, 1449,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1450, 390, 661, 1451, 662,
	391, 1452, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 1453, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1454, 1213,
	407, 666, 667, 1455, 668, 1456, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1457, 421, 423, 422, 1458,
	424, 670, 1218, 425, 426, 1219, 1459, 427, 428, 429,
	430, 431, 432, 435, 1460, 1461, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1462, 279, 1222, 478, 479, 1463,
	671, 480, 672, 482, 483, 1464, 0, 484, 0, 1465,
	1466, 486, 487, 488, 1467, 1468, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1469, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 1470, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 1471, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 1472, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1473, 568, 569, 567,
	570, 571, 572, 1474, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1475, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1476, 600,
	601, 0, 597, 588, 1477, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 1478, 610, 684, 685, 686, 687,
	1479, 619, 1480, 611, 612, 613, 688, 614, 689, 1481,
	615, 616, 617, 618, 0, 620, 621, 1482, 1483, 622,
	623, 624, 626, 627, 625, 628, 1484, 629, 1485, 0,
	630, 631, 632, 690, 691, 692, 1486, 634, 633, 635,
	693, 636, 637, 1487, 1488, 1489, 1490, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3779, 280, 282, 281, 283,
	284, 285, 286, 1412, 287, 288, 1413, 1414, 1415, 0,
	1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 1421, 648, 299, 300, 301, 302, 303, 304,
	1422, 1423, 0, 305, 649, 650, 651, 1424, 306, 307,
	652, 1425, 1492, 1426, 308, 309, 310, 311, 312, 313,
	314, 0, 1427, 316, 317, 318, 315, 319, 1428, 320,
	0, 321, 322, 323, 324, 325, 326, 1429, 327, 328,
	329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434,
	1435, 1436, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 1437, 343, 339, 341, 1438, 344, 342, 345,
	1439, 346, 347, 348, 1440, 1441, 349, 350, 351, 1442,
	352, 353, 1443, 354, 355, 356, 1444, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 1445, 277, 1446, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1447, 375,
	376, 377, 1448, 1449, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1450,
	390, 661, 1451, 662, 391, 1452, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 1453, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1454, 1213, 407, 666, 667, 1455, 668, 1456,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1457,
	421, 423, 422, 1458, 424, 670, 1218, 425, 426, 1219,
	1459, 427, 428, 429, 430, 431, 432, 435, 1460, 1461,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1462, 279,
	1222, 478, 479, 1463, 671, 480, 672, 482, 483, 1464,
	0, 484, 0, 1465, 1466, 486, 487, 488, 1467, 1468,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1469,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 1470, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 1471, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 1472, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1473, 568, 569, 567, 570, 571, 572, 1474, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1475, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1476, 600, 601, 0, 597, 588, 1477, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 1478, 610,
	684, 685, 686, 687, 1479, 619, 1480, 611, 612, 613,
	688, 614, 689, 1481, 615, 616, 617, 618, 0, 620,
	621, 1482, 1483, 622, 623, 624, 626, 627, 625, 628,
	1484, 629, 1485, 0, 630, 631, 632, 690, 691, 692,
	1486, 634, 633, 635, 693, 636, 637, 1487, 1488, 1489,
	1490, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3600,
	280, 282, 281, 283, 284, 285, 286, 1412, 287, 288,
	1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 1421, 648, 299, 300,
	301, 302, 303, 304, 1422, 1423, 0, 305, 649, 650,
	651, 1424, 306, 307, 652, 1425, 1492, 1426, 308, 309,
	310, 311, 312, 313, 314, 0, 1427, 316, 317, 318,
	315, 319, 1428, 320, 0, 321, 322, 323, 324, 325,
	326, 1429, 327, 328, 329, 1211, 330, 331, 332, 1430,
	1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 1437, 343, 339, 341,
	1438, 344, 342, 345, 1439, 346, 347, 348, 1440, 1441,
	349, 350, 351, 1442, 352, 353, 1443, 354, 355, 356,
	1444, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 1445, 277, 1446,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1447, 375, 376, 377, 1448, 1449, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1450, 390, 661, 1451, 662, 391, 1452,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 1453, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1454, 1213, 407, 666,
	667, 1455, 668, 1456, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1457, 421, 423, 422, 1458, 424, 670,
	1218, 425, 426, 1219, 1459, 427, 428, 429, 430, 431,
	432, 435, 1460, 1461, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1462, 279, 1222, 478, 479, 1463, 671, 480,
	672, 482, 483, 1464, 0, 484, 0, 1465, 1466, 486,
	487, 488, 1467, 1468, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1469, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 1470,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 1471, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 1472,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1473, 568, 569, 567, 570, 571,
	572, 1474, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1475,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1476, 600, 601, 0,
	597, 588, 1477, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 1478, 610, 684, 685, 686, 687, 1479, 619,
	1480, 611, 612, 613, 688, 614, 689, 1481, 615, 616,
	617, 618, 0, 620, 621, 1482, 1483, 622, 623, 624,
	626, 627, 625, 628, 1484, 629, 1485, 0, 630, 631,
	632, 690, 691, 692, 1486, 634, 633, 635, 693, 636,
	637, 1487, 1488, 1489, 1490, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2642, 280, 282, 281, 283, 284, 285,
	286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643,
	1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	1421, 648, 299, 300, 301, 302, 303, 304, 1422, 1423,
	0, 305, 649, 650, 651, 1424, 306, 307, 652, 1425,
	1492, 1426, 308, 309, 310, 311, 312, 313, 314, 0,
	1427, 316, 317, 318, 315, 319, 1428, 320, 0, 321,
	322, 323, 324, 325, 326, 1429, 327, 328, 329, 1211,
	330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	1437, 343, 339, 341, 1438, 344, 342, 345, 1439, 346,
	347, 348, 1440, 1441, 349, 350, 351, 1442, 352, 353,
	1443, 354, 355, 356, 1444, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 1445, 277, 1446, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1447, 375, 376, 377,
	1448, 1449, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1450, 390, 661,
	1451, 662, 391, 1452, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 1453, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1454, 1213, 407, 666, 667, 1455, 668, 1456, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1457, 421, 423,
	422, 1458, 424, 670, 1218, 425, 426, 1219, 1459, 427,
	428, 429, 430, 431, 432, 435, 1460, 1461, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1462, 279, 1222, 478,
	479, 1463, 671, 480, 672, 482, 483, 1464, 0, 484,
	0, 1465, 1466, 486, 487, 488, 1467, 1468, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1469, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 1470, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	1471, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 1472, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1473, 568,
	569, 567, 570, 571, 572, 1474, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1475, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1476, 600, 601, 0, 597, 588, 1477, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 1478, 610, 684, 685,
	686, 687, 1479, 619, 1480, 611, 612, 613, 688, 614,
	689, 1481, 615, 616, 617, 618, 0, 620, 621, 1482,
	1483, 622, 623, 624, 626, 627, 625, 628, 1484, 629,
	1485, 0, 630, 631, 632, 690, 691, 692, 1486, 634,
	633, 635, 693, 636, 637, 1487, 1488, 1489, 1490, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 1503,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2268, 280, 282,
	281, 283, 284, 285, 286, 1412, 287, 288, 1413, 1414,
	1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1421, 648, 299, 300, 301, 302,
	303, 304, 1422, 1423, 0, 305, 649, 650, 651, 1424,
	306, 307, 652, 1425, 1492, 1426, 308, 309, 310, 311,
	312, 313, 314, 0, 1427, 316, 317, 318, 315, 319,
	1428, 320, 0, 321, 322, 323, 324, 325, 326, 1429,
	327, 328, 329, 1211, 330, 331, 332, 1430, 1431, 1433,
	1432, 1434, 1435, 1436, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1437, 343, 339, 341, 1438, 344,
	342, 345, 1439, 346, 347, 348, 1440, 1441, 349, 350,
	351, 1442, 352, 353, 1443, 354, 355, 356, 1444, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1445, 277, 1446, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1447, 375, 376, 377, 1448, 1449, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1450, 390, 661, 1451, 662, 391, 1452, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	1453, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1454, 1213, 407, 666, 667, 1455,
	668, 1456, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1457, 421, 423, 422, 1458, 424, 670, 1218, 425,
	426, 1219, 1459, 427, 428, 429, 430, 431, 432, 435,
	1460, 1461, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1462, 279, 1222, 478, 479, 1463, 671, 480, 672, 482,
	483, 1464, 0, 484, 0, 1465, 1466, 486, 487, 488,
	1467, 1468, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1469, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1470, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1471, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1472, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1473, 568, 569, 567, 570, 571, 572, 1474,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1475, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1476, 600, 601, 0, 597, 588,
	1477, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1478, 610, 684, 685, 686, 687, 1479, 619, 1480, 611,
	612, 613, 688, 614, 689, 1481, 615, 616, 617, 618,
	0, 620, 621, 1482, 1483, 622, 623, 624, 626, 627,
	625, 628, 1484, 629, 1485, 0, 630, 631, 632, 690,
	691, 692, 1486, 634, 633, 635, 693, 636, 637, 1487,
	1488, 1489, 1490, 638, 639, 694, 640, 641, 642, 1403,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 1412, 287, 288, 1413, 1414,
	1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1421, 648, 299, 300, 301, 302,
	303, 304, 1422, 1423, 0, 305, 649, 650, 651, 1424,
	306, 307, 652, 1425, 1492, 1426, 308, 309, 310, 311,
	312, 313, 314, 0, 1427, 316, 317, 318, 315, 319,
	1428, 320, 0, 321, 322, 323, 324, 325, 326, 1429,
	327, 328, 329, 1211, 330, 331, 332, 1430, 1431, 1433,
	1432, 1434, 1435, 1436, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1437, 343, 339, 341, 1438, 344,
	342, 345, 1439, 346, 347, 348, 1440, 1441, 349, 350,
	351, 1442, 352, 353, 1443, 354, 355, 356, 1444, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1445, 277, 1446, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1447, 375, 376, 377, 1448, 1449, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1450, 390, 661, 1451, 662, 391, 1452, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	1453, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1454, 1213, 407, 666, 667, 1455,
	668, 1456, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1457, 421, 423, 422, 1458, 424, 670, 1218, 425,
	426, 1219, 1459, 427, 428, 429, 430, 431, 432, 435,
	1460, 1461, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1462, 279, 1222, 478, 479, 1463, 671, 480, 672, 482,
	483, 1464, 0, 484, 0, 1465, 1466, 486, 487, 488,
	1467, 1468, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1469, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1470, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1471, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1472, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1473, 568, 569, 567, 570, 571, 572, 1474,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1475, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1476, 600, 601, 0, 597, 588,
	1477, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1478, 610, 684, 685, 686, 687, 1479, 619, 1480, 611,
	612, 613, 688, 614, 689, 1481, 615, 616, 617, 618,
	0, 620, 621, 1482, 1483, 622, 623, 624, 626, 627,
	625, 628, 1484, 629, 1485, 0, 630, 631, 632, 690,
	691, 692, 1486, 634, 633, 635, 693, 636, 637, 1487,
	1488, 1489, 1490, 638, 639, 694, 640, 641, 642, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 1412, 287, 288, 1413, 1414, 1415, 0,
	1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 1421, 648, 299, 300, 301, 302, 303, 304,
	1422, 1423, 0, 305, 649, 650, 651, 1424, 306, 307,
	652, 1425, 1492, 1426, 308, 309, 310, 311, 312, 313,
	314, 0, 1427, 316, 317, 318, 315, 319, 1428, 320,
	0, 321, 322, 323, 324, 325, 326, 1429, 327, 328,
	329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434,
	1435, 1436, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 1437, 343, 339, 341, 1438, 344, 342, 345,
	1439, 346, 347, 348, 1440, 1441, 349, 350, 351, 1442,
	352, 353, 1443, 354, 355, 356, 1444, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 1445, 277, 1446, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1447, 375,
	376, 377, 1448, 1449, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1450,
	390, 661, 1451, 662, 391, 1452, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 1453, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1454, 1213, 407, 666, 667, 1455, 668, 1456,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1457,
	421, 423, 422, 1458, 424, 670, 1218, 425, 426, 1219,
	1459, 427, 428, 429, 430, 431, 432, 435, 1460, 1461,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1462, 279,
	1222, 478, 479, 1463, 671, 480, 672, 482, 483, 1464,
	0, 484, 0, 1465, 1466, 486, 487, 488, 1467, 1468,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1469,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 1470, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 1471, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 1472, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1473, 568, 569, 567, 570, 571, 572, 1474, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1475, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1476, 600, 601, 0, 597, 588, 1477, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 1478, 610,
	684, 685, 686, 687, 1479, 619, 1480, 611, 612, 613,
	688, 614, 689, 1481, 615, 616, 617, 618, 0, 620,
	621, 1482, 1483, 622, 623, 624, 626, 627, 625, 628,
	1484, 629, 1485, 0, 630, 631, 632, 690, 691, 692,
	1486, 634, 633, 635, 693, 636, 637, 1487, 1488, 1489,
	1490, 638, 639, 694, 640, 641, 642, 2617, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 2614, 287, 288, 0, 0, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 2615, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	2613, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 2616,
	0, 0, 0, 0, 0, 0, 1130, 2612, 0, 1090,
	1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 239, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	241, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 1639,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 233, 638, 639, 694, 640, 641, 642, 1104,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 1900, 1898,
	0, 0, 1128, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 239, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	241, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 1639,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 233, 638, 639, 694, 640, 641, 642, 1104,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 1900, 3244,
	0, 0, 1128, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 239, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	241, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 1639,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 233, 638, 639, 694, 640, 641, 642, 1104,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 1900, 1898,
	0, 0, 1128, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 2748, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 2753, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 2749, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 2750, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 2662, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 0, 0, 0, 0, 0, 0,
	0, 1130, 2660, 0, 2659, 1128, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 0, 0, 0, 0,
	0, 0, 0, 1130, 2657, 0, 2656, 1128, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 0, 0,
	0, 0, 0, 0, 0, 1130, 2654, 0, 2653, 1128,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	0, 0, 0, 0, 0, 0, 0, 1130, 2651, 0,
	1739, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	1738, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 1093, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 1108,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 4719, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 1108, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 2494,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 2493, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 1108, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 4455, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 1108, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	4054, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	1969, 0, 0, 0, 0, 0, 0, 1130, 0, 0,
	0, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 3757, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 1969, 0, 0, 0, 0,
	0, 0, 1130, 0, 0, 0, 1128, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 2753, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	0, 0, 0, 0, 0, 0, 0, 1130, 1898, 0,
	2758, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 2756, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 2744, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 2732,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 2730, 0, 2721, 2728, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 2724, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 2725, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 2726, 445, 2723, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 2727, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	2722, 642, 1104, 0, 0, 2718, 0, 2721, 2728, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 2724, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 2725, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 2726,
	445, 2723, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 2727, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 2722, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	0, 0, 0, 0, 0, 1906, 0, 1130, 0, 0,
	0, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 2473, 287, 288, 0,
	0, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 2435, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 2409, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 1744,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 1673, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 1668, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 1655, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 1650, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 1551, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1550, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 1545, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1544, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	1538, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 1352, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 4765, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 4764, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	4763, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 4765,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 4764, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 4390, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 4391, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 4389, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 3211, 3212, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 1146, 1118, 1119, 1120, 3209, 3210, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 0, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 2481, 2482, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 0, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	2740, 0, 0, 0, 0, 0, 0, 2738, 2739, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 0, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 3204, 3205,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 0, 0, 0, 0, 0, 0, 0,
	2151, 2152, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 0, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	4765, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 0, 1173,
	0, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 0, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 4764, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 1090, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 0, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	1169, 0, 305, 649, 650, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1254, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 279, 1222,
	478, 479, 0, 1174, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1260, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 1262, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 0, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 1639, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1268, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 1258, 0, 1993, 0, 0, 1170, 0,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 1169, 0,
	305, 649, 650, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1254, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 279, 1222, 478, 479,
	0, 1174, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 1260, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 1262, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 239, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 0, 597, 588, 241, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 1639, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 233, 638, 639,
	694, 640, 641, 642, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 3368, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 0, 1993, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1170,
	0, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 1169,
	0, 305, 649, 650, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 666, 667, 0, 668, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1254, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 0, 279, 1222, 478,
	479, 0, 1174, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 1260, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 1262, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 1250, 0, 1268, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 0, 1258, 0, 1256, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	1169, 0, 305, 649, 650, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1254, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 279, 1222,
	478, 479, 0, 1174, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1260, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 1262, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 1268,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 0, 1258, 0, 1256, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 1169, 0, 305, 649, 650, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1254,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 279,
	1222, 478, 479, 0, 1174, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 1260, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 1262, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	1268, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1170, 0, 1258, 0, 1256, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 1169, 0, 305, 649, 650, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 666, 667, 0, 668,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	279, 1222, 478, 479, 0, 1174, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 1268, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 1170, 0, 0, 0, 4212, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 1169, 0, 305, 649, 650, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 279, 1222, 478, 479, 0, 1174, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 1262, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 274,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 2585,
	2586, 2587, 2604, 2605, 2606, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 2607,
	0, 643, 0, 0, 0, 0, 289, 290, 1890, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 1875, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 2597, 0, 316, 317, 318, 315, 319, 0, 320,
	2593, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 2598, 2599, 2600, 2601,
	371, 372, 373, 658, 0, 0, 2592, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 2602, 2603, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 2595, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 2596, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 1874, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 1565, 2582, 2583, 2584,
	2608, 2594, 2588, 0, 2590, 2591, 2589, 2576, 2577, 2578,
	2579, 2580, 2581, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1492,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 0, 1222, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 239, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 241, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 1639, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 233, 638, 639,
	694, 640, 641, 642, 0, 0, 234, 1636, 0, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 193, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	239, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 241, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 1639, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	233, 638, 639, 694, 640, 641, 642, 1565, 1564, 234,
	0, 0, 0, 1562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 193, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	1492, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1213, 407, 666, 667, 0, 668, 0, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 0, 0, 1222, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1565, 1564, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 1663, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 1492, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1213,
	407, 666, 667, 0, 668, 0, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 0, 0, 1222, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1565, 1564, 0, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 3677, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 1492, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1213, 407, 666,
	667, 0, 668, 0, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 0, 0, 1222, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 2350, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1565, 2260, 0, 0, 0, 0, 2261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	1663, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 1492, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 2259, 423, 422, 0, 424, 670, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 0, 1222, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1565,
	1564, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 1663, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 1090, 0,
	274, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 1645, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 239, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 241,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 1639, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 274, 0,
	0, 233, 638, 639, 694, 640, 641, 642, 0, 0,
	234, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 193, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 1268,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 2007, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 1169, 0, 305, 649, 650, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 279,
	1222, 478, 479, 0, 1174, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 274, 3118, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 274, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 4934, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 274, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	3627, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 274, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 1633,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	3106, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 274,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 3782, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 920, 0,
	821, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 2337, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 828, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 918, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 826,
	602, 603, 604, 605, 606, 827, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 821, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 2078, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	831, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 828, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 2077, 563, 564,
	565, 566, 0, 2079, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	826, 602, 603, 604, 605, 606, 827, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 2076, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 821, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 2029, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 831, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 828, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 2028, 563,
	564, 565, 566, 0, 2030, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 826, 602, 603, 604, 605, 606, 827, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 2027,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	819, 0, 821, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 831, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 828, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 826, 602, 603, 604, 605, 606, 827, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	2051, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 831, 0, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 0, 2057, 0, 297,
	2047, 298, 2063, 0, 2070, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 2073, 2074, 0, 0, 306,
	307, 0, 0, 1492, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 1193, 338,
	340, 2061, 2060, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 2059, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 2068,
	2069, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1213, 407, 2054, 2055, 0, 2050,
	0, 409, 410, 1215, 0, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	0, 1222, 478, 479, 0, 0, 480, 2062, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 0, 1223, 491, 1224, 0, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 2044, 505, 506, 507, 2045, 508, 509,
	510, 0, 511, 0, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 2058, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 2056, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 2072, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 2064, 2065, 2066, 2067, 0, 619, 0, 611, 612,
	613, 0, 614, 0, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 0, 2048,
	2071, 0, 634, 633, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 2038, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 828, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 826, 602, 603,
	604, 605, 606, 827, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 821,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 831, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 828, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	2388, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 2389, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 826, 602,
	603, 604, 605, 606, 827, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 2390, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 831,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1565, 1564, 0, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 1492, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1213, 407,
	666, 667, 0, 668, 0, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 0, 1222, 478, 479, 3978, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1565, 1564, 0, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 1492, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1213, 407, 666, 667,
	0, 668, 0, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 0, 1222, 478, 479, 3578, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1693, 0, 1565, 1564, 0, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 1492, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 1692, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1213, 407, 666, 667,
	0, 668, 0, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 0, 1222, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 1691, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 1690,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1558, 0, 1565, 1564, 0, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 1492, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1560, 664, 665, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1213, 407, 666, 667,
	0, 668, 0, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 0, 1222, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1565, 1564, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 1492, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1213, 407, 666, 667, 0, 668,
	0, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	0, 1222, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1565, 1564,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 1492, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 669, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 0, 1222,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 1565,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 2910, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 2907,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 2914, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 3619, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 2913, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 3616, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 3618, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	3615, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 2912, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 3617, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 2910,
	306, 307, 652, 0, 0, 2904, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	2907, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 2914,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 2913, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 2903, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 2912, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 2911, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1770,
	0, 274, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 1769, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 1768, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 1771, 555, 562, 563, 564,
	565, 566, 0, 1767, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	1765, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 1766, 633, 635, 693, 636, 637, 1496,
	0, 274, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1498, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 1260, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1493,
	0, 274, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1495, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 1260, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1399,
	0, 274, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1401, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 1260, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 726,
	0, 274, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 725, 285, 286, 715, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 718,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 719, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 720, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 714,
	0, 274, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 715, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 718,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 719, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 720, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 715, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	718, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 719, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 720, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 715, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 718, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 3989, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 720, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 1260,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 3526, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 3076, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3075, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 2357, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 2295, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 2302, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 2301, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 2288, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 2290, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 2253,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 1260, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1611, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1610,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1513, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1506, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1508,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1335, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1334,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1325, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1324,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1322, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1321,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1317, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1316,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 696, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 265, 0, 274, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 718, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 719,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	720, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2397, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 2395, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 2393, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2308, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 2102, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 2096, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 905, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 904, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 903, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 3619, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 4289, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1363, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1366, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 1364, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 786, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 785, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 784, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 1367, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 782, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1363, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1366, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 1364, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 786, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 785, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 784, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 1367, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 782, 685, 686,
	687, 0, 619, 0, 611, 1365, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 705, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	704, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	703, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 274, 3118, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 274, 4305, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 4571,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	4185, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 3944, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	2793, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 274, 3118, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 3115, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 2219, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 785, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 784, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 782, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	2367, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 2355, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1666, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1659, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 776, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 772, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 777, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 786, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 785, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 784, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 1644, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 782, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1617, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1616, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1601, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1599, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1594, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1571, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1569, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1556, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1518, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1501, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1369, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 785, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 784, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 782, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1340, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1339, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1331, 0, 274, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1330, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 1284, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 791, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 776, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 772, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 771, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 777, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 786, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 773, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 774, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 778, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 765, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 766,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 728, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 722, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 700, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 3647, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 785, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 784, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 782, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3564, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3542, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 3539, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3491, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 3489, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3475,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	3086, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	766, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 2326, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 0,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1302, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 1233, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 0, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 0, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 0, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	0, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1607, 0, 1347, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 0, 0,
	0, 0, 306, 307, 0, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 1349, 333, 334, 335, 336,
	337, 0, 338, 340, 0, 0, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 1606, 0, 0, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 0,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 0, 480,
	0, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 0, 0, 491, 0,
	0, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	0, 508, 509, 510, 0, 511, 0, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	0, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 0,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1350, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 0, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 0, 591,
	592, 593, 594, 0, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 0, 0, 0, 0, 0, 619,
	0, 611, 612, 613, 0, 614, 0, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 0, 1521, 0, 1347, 634, 633, 635, 0, 636,
	637, 0, 0, 0, 0, 638, 639, 0, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 1349, 333, 334, 335,
	336, 337, 0, 338, 340, 0, 0, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 1520, 0, 0, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	0, 0, 0, 0, 0, 409, 410, 0, 0, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	0, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 0,
	480, 0, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 0, 0, 491,
	0, 0, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 0, 508, 509, 510, 0, 511, 0, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 0, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	0, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1350, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 0, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 0,
	591, 592, 593, 594, 0, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 0, 0, 0, 0, 0,
	619, 0, 611, 612, 613, 0, 614, 0, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 0, 1345, 0, 1347, 634, 633, 635, 0,
	636, 637, 0, 0, 0, 0, 638, 639, 0, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 1349, 333, 334,
	335, 336, 337, 0, 338, 340, 0, 0, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 1344, 0, 0,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	0, 480, 0, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 0,
	491, 0, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 0, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 0, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 0, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1350, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 0, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	0, 591, 592, 593, 594, 0, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 2116, 0, 1347, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 0, 0, 0, 0, 306, 307, 0, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 1349, 333,
	334, 335, 336, 337, 0, 338, 340, 0, 0, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 0, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 0, 480, 0, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 0,
	0, 491, 0, 0, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 0, 508, 509, 510, 0, 511, 0,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 0, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 0, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1350, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 0,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 0, 591, 592, 593, 594, 0, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 0, 0, 0,
	0, 0, 619, 0, 611, 612, 613, 0, 614, 0,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 0, 2083, 0, 1347, 634, 633,
	635, 0, 636, 637, 0, 0, 0, 0, 638, 639,
	0, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 0, 0, 0, 0, 306, 307, 0, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 1349,
	333, 334, 335, 336, 337, 0, 338, 340, 0, 0,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 0, 0, 0, 0, 0, 409, 410,
	0, 0, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 0, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 0, 480, 0, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	0, 0, 491, 0, 0, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 0, 508, 509, 510, 0, 511,
	0, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 0, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 0, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1350, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	0, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 0, 591, 592, 593, 594, 0, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 0, 0,
	0, 0, 0, 619, 0, 611, 612, 613, 0, 614,
	0, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 0, 0, 0, 1347, 634,
	633, 635, 0, 636, 637, 0, 0, 0, 0, 638,
	639, 0, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 0, 0, 0, 0, 306, 307, 0,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	1349, 333, 334, 335, 336, 337, 0, 338, 340, 0,
	0, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 0, 0, 0, 0, 0, 409,
	410, 0, 0, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 0, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 0, 480, 0, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 0, 0, 491, 0, 0, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 0, 508, 509, 510, 0,
	511, 0, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 0, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 0, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1350, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 0, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 0, 591, 592, 593, 594, 0, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 0,
	0, 0, 0, 0, 619, 0, 611, 612, 613, 0,
	614, 0, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 0, 0, 0, 0,
	634, 633, 635, 0, 636, 637, 0, 0, 0, 0,
	638, 639, 0, 640, 641, 642, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1850,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1856,
	1850, 1821, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 1841, 0, 0, 0, 0, 1869, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1845, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 0, 1860, 0, 1827, 1870, 0,
	0, 0, 0, 0, 0, 1849, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 1867, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 0, 0, 1860, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 1849, 1851, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1842, 1867, 0, 0, 0, 0,
	0, 0, 1836, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1843, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 1856, 1850, 0,
	0, 0, 0, 0, 1861, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 1819, 1820, 1843, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1874, 0, 0, 1856, 1850,
	1821, 0, 0, 0, 0, 1861, 1822, 0, 0, 0,
	1841, 0, 0, 0, 0, 1869, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 1874, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 3288, 0, 0, 0, 1827, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 1844, 1845, 1846, 1847,
	0, 0, 2619, 0, 1860, 0, 1827, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1867, 0, 0, 0, 0, 0, 0,
	1836, 1837, 0, 0, 0, 1860, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 1849, 1851, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1842, 1867, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 1856, 1850, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 1843, 0, 0,
	0, 1869, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 0, 1874, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 1861, 1856, 1850, 1821, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1841, 0, 0,
	0, 0, 1869, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 1859, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 4691, 0, 0, 0,
	0, 0, 1844, 1845, 1846, 1847, 0, 1859, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 0, 0, 4596, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 1860, 0, 1827, 1870, 0, 0, 0, 0, 0,
	0, 1849, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	1867, 0, 0, 0, 0, 0, 0, 1836, 1837, 0,
	0, 0, 1860, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1842, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1856, 1850, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 1843, 0, 0, 0, 1869, 0,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0,
	0, 1874, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 1861, 1856, 1850, 1821, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 1841, 0, 0, 0, 0, 1869,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 1859, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 0, 4554, 0, 0, 0, 0, 0, 1844,
	1845, 1846, 1847, 0, 1859, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 0, 0, 4553, 0, 0, 0, 0, 0,
	1844, 1845, 1846, 1847, 0, 0, 0, 0, 1860, 0,
	1827, 1870, 0, 0, 0, 0, 0, 0, 1849, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 1867, 0, 0,
	0, 0, 0, 0, 1836, 1837, 0, 0, 0, 1860,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1849,
	1851, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1842, 1867, 0,
	0, 0, 0, 0, 0, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1856, 1850,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 1843, 0, 0, 0, 1869, 0, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 1874, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 1861, 1856,
	1850, 1821, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 1841, 0, 0, 0, 0, 1869, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	1859, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0,
	4374, 0, 0, 0, 0, 0, 1844, 1845, 1846, 1847,
	0, 1859, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 4208, 0, 0, 0, 0, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 0, 1860, 0, 1827, 1870, 0,
	0, 0, 0, 0, 0, 1849, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 1867, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 0, 0, 1860, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 1849, 1851, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1842, 1867, 0, 0, 0, 0,
	0, 0, 1836, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 1856, 1850, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 1843, 0,
	0, 0, 1869, 0, 1819, 1820, 0, 1852, 1853, 1854,
	1863, 1864, 1865, 0, 0, 1874, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 1861, 1856, 1850, 1821, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 1841, 0,
	0, 0, 0, 1869, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 1859, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 0, 0, 4135, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 1859, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 0, 4134, 0,
	0, 0, 0, 0, 1844, 1845, 1846, 1847, 0, 0,
	0, 0, 1860, 0, 1827, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 1860, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1849, 1851, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1842, 1867, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 1856, 1850, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 1843, 0, 0, 0, 1869,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 0, 1874, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 1861, 1856, 1850, 1821, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 1841, 0, 0, 0, 0,
	1869, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 1859, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 0, 0, 4133, 0, 0, 0, 0, 0,
	1844, 1845, 1846, 1847, 0, 1859, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839,
	1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 0, 0, 0, 3787, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 1860,
	0, 1827, 1870, 0, 0, 0, 0, 0, 0, 1849,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 1867, 0,
	0, 0, 0, 0, 0, 1836, 1837, 0, 0, 0,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1842, 1867,
	0, 0, 0, 0, 0, 0, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1856,
	1850, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 1843, 0, 0, 0, 1869, 0, 1819, 1820,
	0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 1874,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 1861,
	1856, 1850, 1821, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 1841, 0, 0, 0, 0, 1869, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 1859, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 3286, 0, 0, 0, 0, 0, 1844, 1845, 1846,
	1847, 0, 1859, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 3285, 0, 0, 0, 0, 0, 1844, 1845,
	1846, 1847, 0, 0, 0, 0, 1860, 0, 1827, 1870,
	0, 0, 0, 0, 0, 0, 1849, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 1867, 0, 0, 0, 0,
	0, 0, 1836, 1837, 0, 0, 0, 1860, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 1849, 1851, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1842, 1867, 0, 0, 0,
	0, 0, 0, 1836, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854,
	1863, 1864, 1865, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1856, 1850, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 1843,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 1861, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 0, 3284, 0,
	0, 0, 0, 0, 1844, 1845, 1846, 1847, 0, 1859,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0, 3283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1849, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 1867, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 1819, 1820,
	0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	1856, 1850, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1868, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 1857, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 1845,
	1846, 1847, 0, 0, 0, 1843, 0, 0, 1827, 4839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1850, 0, 1860, 0, 0,
	1870, 0, 1822, 0, 0, 0, 0, 1849, 1851, 0,
	0, 1869, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 1867, 0, 1875, 0,
	0, 0, 0, 1836, 1837, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 1858, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839,
	1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 1868, 3248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1844, 1845, 1846, 1847, 0, 0, 0, 0,
	0, 1872, 1827, 0, 3348, 0, 0, 0, 0, 3347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 1849, 1851, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	1867, 0, 0, 0, 0, 0, 0, 1836, 1837, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 0, 0, 0,
	1842, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1850, 0, 0, 1874, 0, 3219,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1857, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 3220, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 2766, 0,
	1861, 0, 0, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1850, 0,
	1860, 1874, 2765, 1870, 0, 1822, 0, 0, 0, 0,
	1849, 1851, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 1867,
	0, 1875, 0, 0, 0, 0, 1836, 1837, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 1858, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 0, 0, 1872, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 1860, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 1856, 1850, 1848,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 1866, 0, 1867, 1869, 0, 0, 0, 0, 0,
	1836, 1837, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1858, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1841, 0, 0, 1842, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 0, 1848, 1860, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 1866, 0, 1867, 0, 0, 0, 0, 0, 0,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 0, 0, 1858, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 1856, 1850, 0, 1874, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1868,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 1857, 1087, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1845, 1846, 1847, 0, 0, 0, 1843, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1850, 0, 1860, 0,
	0, 1870, 0, 1822, 0, 0, 0, 0, 1849, 1851,
	0, 0, 1869, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 1867, 0, 1875,
	0, 0, 0, 0, 1836, 1837, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 1858, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 1872, 1827, 0, 0, 0, 0, 0, 0,
	3354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 1860, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 1856, 1850, 1848, 0, 0,
	3349, 0, 0, 1822, 0, 0, 0, 0, 0, 1866,
	0, 1867, 1869, 0, 0, 0, 0, 0, 1836, 1837,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1858, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1841, 0,
	0, 1842, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3768, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0,
	0, 1848, 1860, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 1866,
	0, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 1858, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 1856,
	1850, 0, 1874, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1868, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 1857, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 1843, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1850, 0, 1860, 0, 3287, 1870,
	0, 1822, 0, 0, 0, 0, 1849, 1851, 0, 0,
	1869, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 1867, 0, 1875, 0, 0,
	0, 0, 1836, 1837, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	1858, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	1872, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	3314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 1856, 1850, 1848, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 1866, 0, 1867,
	1869, 0, 0, 0, 0, 0, 1836, 1837, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1858, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1841, 0, 0, 1842,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 0, 0, 1848,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 1866, 0, 1867,
	0, 0, 0, 0, 0, 0, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 1858, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 1856, 1850, 0,
	1874, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1868, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 1857, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 1843, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 1850, 0, 1860, 0, 0, 1870, 0, 1822,
	0, 0, 0, 0, 1849, 1851, 0, 0, 1869, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1867, 0, 1875, 0, 0, 0, 0,
	1836, 1837, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 1858, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2339, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 1844,
	1845, 1846, 1847, 0, 0, 0, 0, 0, 1872, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 1849, 1851,
	0, 0, 0, 1848, 0, 970, 0, 1019, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 1867, 0, 0,
	0, 0, 0, 0, 1836, 1837, 1843, 0, 0, 0,
	0, 978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 993, 0, 976,
	975, 0, 0, 1861, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 995, 0, 0, 0, 0, 0, 977, 0, 0,
	0, 0, 980, 0, 1874, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 990, 991, 0, 0,
	0, 0, 0, 1868, 0, 1008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 982, 0, 0, 0, 0, 0,
	983, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 1859, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 1018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 986, 0,
	1843, 0, 0, 0, 0, 0, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 987, 988, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 994, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 1005, 0, 1874, 1025,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1027, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0,
	0, 981, 0, 0, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 0, 0,
	0, 1012, 1013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1022, 1010,
	0, 0, 0, 0, 0, 0, 0, 1028, 1006, 0,
	0, 999, 997, 0, 1002, 0, 0, 0, 0, 0,
	1003, 0, 0, 972, 0, 1023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1014,
	0, 1004, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 0, 1007, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1011,
}

var sqlPact = [...]int{
	6885, -1000, -1000, -1000, -1000, 206, -1000, -1000, 204, 202,
	200, 197, 195, 194, 193, 192, 190, 187, 186, -1000,
	-1000, -1000, -1000, -1000, -1000, 185, -1000, -1000, 184, -1000,
	180, 179, 178, -1000, -1000, 174, -1000, 172, -1000, -1000,
	-1000, -1000, 171, 170, 167, 89683, 89123, 90234, 2397, 113604,
	96882, 2203, 79097, 113044, 78537, 112484, 2192, 13873, 111924, 2826,
	165, -1000, 111364, 164, 163, 156, -1000, 110804, -1000, 1982,
	-1000, 155, -1000, 2106, 68448, 150, 148, 142, 141, 2485,
	140, -1000, 138, 134, -1000, -1000, 133, -1000, 14702, 1551,
	-1000, 132, 131, -1000, 7047, 94651, 129, 128, 126, 2544,
	125, 124, 66786, 123, 121, 120, 2337, 2921, -1000, -1000,
	2115, -1000, -1000, 115, 114, 113, 112, 110, 106, 105,
	104, 103, 102, 101, 99, 98, -1000, 97, 96, 95,
	94, 93, -1000, 92, 90, 88, -1000, 87, -1000, 86,
	85, 84, 83, 81, 78, 76, 75, 72, 70, 63,
	58, 51, 48, 132323, -1000, -1000, 46, 2047, 1737, 1733,
	1729, 1722, 1721, 999, 43, 40, 39, 38, 37, 36,
	35, 34, 33, 32, 31, 30, 29, 28, 25, 22,
	19, 17, 169, 16, 15, 13, 12, 9, 8, 7,
	2624, -1000, 1820, 1109, 30791, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 121318, 114155, 0, -53, -1, -1000, 3400,
	1046, 54964, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	303, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 528, 2279, 770,
	-1000, -1000, -1000, 110253, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2386, -50, -1000, 2094, -1000, -1000, -1000, -1000,
	-1000, 768, -1000, 2384, 326, 2325, -1000, -1000, -1000, 3471,
	2527, 3873, 3872, 3871, 3868, 3867, 120767, 1950, 3864, 2593,
	3863, 3862, 3861, 3858, 3855, 3854, 3850, -1000, 88563, 1100,
	88003, 87443, 3477, 109702, 86883, 109142, 123531, 46951, 915, 3464,
	-1000, -1000, -1000, -1000, -1000, -1000, 114155, -1000, 1099, -1000,
	-1000, 3849, 2196, 764, 96322, -1000, -1000, 108582, 1897, -1000,
	-1000, -1000, 954, 1235, 32510, 32510, 32510, 302, -1000, -1000,
	-1000, -1000, -1000, -1000, 3848, 3847, 3846, 3845, 3841, -1000,
	-1000, 77977, 23727, 77417, 76857, 108022, 23157, 86323, 85763, 3840,
	3839, 3838, 107462, 122980, 3577, 3576, 1097, 2076, 1529, -1000,
	-1000, -1000, -1000, -1000, -1000, -23, 70676, 3611, 114155, -1000,
	301, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46378, 753,
	45805, 1148, 45232, 749, 106902, -1000, -1000, -1000, -1000, 72958,
	-1000, 106342, 2526, 3837, 3836, 1191, 3831, 3337, 1895, 3823,
	1952, 1271, 3822, 3821, 3814, 3798, 3797, 3793, 3791, 1568,
	105782, 3021, 1603, 105222, 1835, 122429, 1089, 85203, 90234, 2686,
	104662, 1531, 1474, -1000, -1000, -1000, -1000, 3186, 2918, 2917,
	1370, -1000, -1000, -1000, -1000, 58355, 8594, 7660, -1000, -1000,
	10251, 104102, 61195, 90234, 90234, -1000, -1000, -1000, -1000, -1000,
	-1000, 44659, 748, 44086, 889, 103542, -1000, -1000, 58923, 2961,
	-1000, -1000, -1000, -1000, -1000, 102982, 43513, 543, 42940, 738,
	114155, -1000, 3017, 1981, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2595, 1723, 3627, 2809, 72388, 2128, 1475, 3431,
	3185, 3174, 1556, 2072, 3171, 3789, 2689, 3169, 3168, 3151,
	3121, 3112, 1656, 2641, 590, 2625, 30218, 2997, 1755, 42367,
	1562, 1557, 3087, 3085, 3637, 2062, 2092, 2164, 76297, 3788,
	3787, 3380, 3081, 3072, 2857, 3069, -1000, 2960, 1554, 272,
	-1000, -1000, -1000, -1000, -1000, -1000, 1509, -1000, -1000, -1000,
	-1000, -1000, 80750, -1000, -1000, 1483, -1000, -1000, 1483, -1000,
	-1000, -1000, -1000, -1000, 1398, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1820, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2986, -1000,
	2153, -1000, -1000, 2577, 3369, 3369, 3369, 3461, 517, 507,
	-1000, 169, -1000, -1000, 131904, -1000, -1000, 47524, 47524, 47524,
	47524, 47524, 47524, 47524, 47524, 2199, -1000, 760, -1000, -1000,
	809, -1000, 759, 683, 625, -1000, -1000, -1000, -1000, -1000,
	-1000, 758, -1000, -1000, -1000, -1000, -1000, -1000, 3611, -1000,
	26647, -1000, -1000, -1000, 433, 754, 47524, -1000, -1000, 3657,
	3656, 904, -1000, 271, 989, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3014, 752, 751,
	-1000, 746, 745, 744, 741, 739, -1000, 737, -1000, 735,
	734, 733, 732, 731, 729, 728, 719, -1000, 2107, -1000,
	-1000, -1000, -1000, -1000, -1000, 669, 668, 668, 668, -1000,
	1073, -1000, -1000, -1000, 446, 667, 270, 666, 663, 662,
	-1000, 715, 710, 708, 707, 705, 703, 698, 696, 694,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1070, -1000, -1000,
	-1000, -1000, -24, 114155, -1000, 528, -24, -1000, -1000, 687,
	-1000, 34831, 34831, 34831, -1000, -1000, 2379, 47524, -1000, 2455,
	-1000, -17, -17, 926, 56647, -1000, 53822, 926, 356, 819,
	62314, -1000, 2958, -1000, -1000, 684, 269, -1000, -1000, -1000,
	-1000, 24295, 2957, 114155, 114155, 114155, 90234, 90234, 90234, 114155,
	3786, 3249, 47524, -1000, -1000, 67888, 125184, 90785, -1000, -1000,
	3557, 69006, 67337, 125184, 3010, 124633, 3785, -1000, -1000, -1000,
	-1000, -1000, 3230, 3782, 3781, 3780, -1000, 114155, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 232, 3228, -1000, -1000, 94091,
	232, 3226, -1000, 232, 3225, -1000, 93540, -1000, -1000, 2332,
	3222, -1000, -1000, 243, 3214, -1000, -1000, -1000, 234, 3211,
	-1000, -1000, 267, -148, 3209, -1000, -1000, -1000, -1000, -1000,
	-1000, 131904, -1000, -1000, -1000, 124082, -1000, 3384, -1000, 114155,
	-1000, 47524, -1000, -1000, 3555, 1740, 3407, 3502, -1000, -1000,
	-36, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2570, 2571,
	1182, 2419, -1000, 3270, 1424, 32510, 3325, -1000, -1000, -1000,
	-1000, -1000, 266, 24295, -1000, -1000, -1000, -1000, -1000, -1000,
	4829, 3200, 1495, -1000, 2416, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2025, 3198, -1000, 2413, 3197, 1944,
	-1000, -1000, 3463, -1000, 3357, -1000, -1000, 2070, 3191, -12,
	-1000, -1000, 2304, -1000, -1000, -1000, -1000, 2040, -1000, 1311,
	3158, -1000, 2808, 2808, 84643, 3192, 60627, 58923, 70676, -29,
	-1000, -1000, -1000, -1000, -184, -1000, 22583, 131904, -1000, -1000,
	-1000, -1000, 1873, 131904, 962, -1000, -1000, 3156, -1000, 131904,
	863, -1000, -1000, 3154, -1000, 2636, -1000, 3009, -1000, -1000,
	2484, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2483,
	-1000, -1000, 3779, -1000, -1000, 3778, -1000, 3777, 3773, 3772,
	-1000, 1852, 2068, 3771, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 84092, 2374, -1000, -1000, 82972, 3002, -1000, 2479,
	3501, -1000, 83532, 1087, -1000, 1022, 2475, -1000, 92989, 956,
	2473, -1000, 3769, 3473, 2744, 1022, 2472, -1000, -1000, -1000,
	-1000, -1000, 1050, -1000, 64550, -1000, 64550, -1000, 1678, -1000,
	120216, -17, 90234, 3611, -1000, -56, -1000, -1000, -1000, 1046,
	-1000, 57782, -1000, 57782, 95762, 73526, 1003, 2956, 66225, 131640,
	-1000, 1035, -1000, -1000, 131904, -1000, -1000, -1000, 2635, -1000,
	-161, 2806, -1000, 73526, 60059, 2632, -1000, 131904, -1000, -1000,
	-1000, -1000, 131904, -1000, -1000, -1000, 73526, 82972, -1000, 102422,
	82421, -1000, -1000, 1548, 2621, -1000, -1000, -1000, 73526, 1374,
	73526, 73526, 73526, -1000, 101862, -1000, -1000, 2137, 1624, 3381,
	2126, 90234, -1000, 1859, -1000, -1000, -1000, 3403, 3189, 114155,
	-1000, -1000, 3000, -1000, 70125, 92438, -1000, 91887, -1000, 91336,
	-1000, 90234, -1000, 90234, -1000, 3766, 3765, 3764, -1000, -1000,
	3763, -1000, 3762, 3392, -1000, 589, 41794, 131904, 3387, -1000,
	3761, 2065, 2997, 131904, -1000, 3187, 1746, 1736, 114155, -1000,
	-1000, 114155, -1000, 114155, -1000, -1000, -1000, 1622, -1000, -1000,
	2569, -1000, -1000, -1000, -1000, 90234, 90234, 90234, 90234, 1632,
	-1000, 41221, -1000, -1000, 3071, 3760, 1808, -1000, 1824, -1000,
	2955, 3386, -1000, 1512, 1833, 265, 3660, -1000, -1000, 248,
	-1000, -1000, -36, -1000, 119665, -1000, 2577, -1000, 114155, -1000,
	2582, 2974, 2992, 1769, 2409, 2667, -1000, 40648, 2652, 50962,
	2415, 169, -1000, -1000, 169, 169, 31937, -1000, -1000, 69006,
	69006, 24295, 1457, 47524, 47524, 47524, 47524, 47524, 47524, 47524,
	47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524,
	47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524,
	47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524, 47524, 2269,
	47524, 1384, 47524, 47524, 47524, 47524, 1607, -1000, -1000, 2048,
	557, 2121, 683, -1000, -1000, -1000, 3606, 3606, 3606, 637,
	637, 637, 11995, 11995, 670, 3759, 809, -1000, 47524, -1000,
	119, 57205, 47524, 24865, -1000, 507, 10585, 2535, -1000, 505,
	25467, -1000, -1000, -1000, 26647, 625, 40046, 47524, 1060, 131904,
	-1000, -1000, 1438, 3623, 22009, 2993, 2849, 679, 833, 829,
	29616, 29014, 28412, 27810, 828, 626, 47524, 47524, 47524, 47524,
	47524, 47524, 47524, 47524, -1000, -1000, 3628, -1000, 3623, -1000,
	-1000, -1000, -1000, 3623, 1453, 1433, 3623, -1000, 3623, 3623,
	13140, 13140, 39473, 38900, 38327, 51535, 37754, 47524, 27237, 37181,
	36608, -1000, 114155, -24, 3554, 47524, 307, -1000, 130144, -1000,
	307, 307, 677, -62, 131904, 2623, 2623, 55525, 2452, 2220,
	2220, 2220, -1000, 926, 16809, 926, 100202, 2252, 926, 926,
	264, 318, 504, 53254, 2455, 100202, 795, 676, -2, -3,
	-4, -1000, -1000, -5, -6, -1000, -1000, 90234, 675, 24865,
	24295, 263, 2080, -72, 2670, 2662, -1000, 2659, 2657, -1000,
	2650, 2372, -1000, -1000, 1851, -75, 1372, 90234, 114155, 1488,
	3755, -65, -1000, 7919, -78, -1000, 1353, 250, 3623, -1000,
	-1000, -1000, -1000, -1000, 3754, 3747, -1000, 1066, 674, 673,
	355, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 669,
	668, 668, 668, -1000, 446, 667, 270, 666, 663, 662,
	-1000, -1000, -1000, -1000, -1000, 2952, 90234, 114155, 1437, 3746,
	-148, 90785, -59, -1000, -1000, 114155, -1000, -1000, -1000, 3741,
	-1000, 90234, -1000, -1000, 90234, 232, 3153, -1000, 90234, -1000,
	90234, 230, 3152, -1000, -1000, 114155, -1000, 90234, 90234, -1000,
	114155, 114155, 114155, 125184, 125184, 227, -1000, 90234, 908, -85,
	1204, -36, -1000, -1000, -1000, -1000, 1483, -1000, 2185, -1000,
	-1000, -1000, -1000, -1000, -1000, 1560, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 904, -1000, -1000, -1000, -1000, -1000,
	-1000, 3617, 3613, -26, -1000, -1000, 24295, -1000, -39, 1703,
	1969, 1294, -1000, 75737, 2434, 3360, 3739, 2705, 3347, 1671,
	-1000, 1619, -1000, 3481, 80750, 3509, 3541, 1385, -1000, 2950,
	-1000, -1000, 953, 1770, 1796, 1290, 1288, 80750, 2413, -1000,
	69006, -1000, 2707, 3460, 1432, 1426, 1432, 1432, 1430, -1000,
	80750, 1793, 1287, 1286, 1285, -1000, -1000, 2014, 2012, -1000,
	-1000, 101311, -1000, 1284, 1281, 3574, 2986, 2275, 858, 2010,
	-1000, -41, 3508, 3533, 1359, -1000, 2949, 1280, -1000, -1000,
	-1000, 3457, 90234, 24295, 1630, 1626, 1599, 1792, 1279, -27,
	-1000, 3506, 1278, 1275, -1000, 1093, 5298, 3289, -1000, 125184,
	1093, 1093, 1932, 3149, 2798, 1767, -1000, 2805, 919, 2802,
	-1000, -1000, -1000, 919, -29, 70676, 114155, 239, -1000, 119,
	47524, 47524, 119, 47524, 119, -1000, 3497, 3147, 3144, -1000,
	-1000, -1000, -1000, -1000, 3735, 2026, 2585, -1000, -1000, 660,
	2470, 2948, 114155, 2683, -30, 90234, -1000, 69574, 3143, 125184,
	2413, 2469, -1000, -1000, 81861, -1000, 3142, 528, 2468, -1000,
	762, 3730, 3138, -1000, 119114, -1000, 3384, 1412, 3131, 1139,
	228, 3553, -1000, 228, 65109, -1000, 114155, -1000, -17, 6071,
	74635, -86, -104, 471, -1000, 100760, 114155, 114155, 3312, 2052,
	2044, -1000, 1019, 58923, -1000, 58923, -105, -1000, -161, 2801,
	1590, -1000, 1003, 1003, 919, -1000, 919, -1000, 90234, 2984,
	-1000, -1000, 73526, 1003, 1003, 1003, -1000, -1000, -1000, -1000,
	3729, 3727, 3724, 3723, -1000, -1000, 1021, 90234, 114155, 90234,
	-1000, -1000, 1760, -1000, 229, -1000, 125184, -1000, 125184, 114155,
	90234, -1000, 1021, 114155, 1021, 114155, 1021, 114155, 1021, 1021,
	-1000, -1000, -1000, -1000, -1000, 119, -1000, -1000, 131904, -1000,
	47524, -1000, -1000, 1616, 3722, 1704, -1000, 2977, -1000, 2975,
	-1000, 24, -1000, -1000, 1939, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3721, 131904, -1000, 2003, -1000, -1000, -1000,
	-1000, 90234, 90234, 90234, 90234, 114155, 3286, -1000, 114155, 3284,
	90234, -1000, 3659, -1000, -1000, 80750, -1000, 2582, 2974, -1000,
	-1000, -1000, -1000, -1000, -1000, 1429, 2340, -1000, 2616, -1000,
	1646, -1000, -1000, -1000, 131904, 52108, -1000, -1000, 131904, 1910,
	-1000, 50389, 49816, -1000, -1000, 1795, 90234, 2687, -1000, 2687,
	-183, -1000, 129960, 2614, 90234, -1000, -1000, -1000, -1000, -1000,
	949, 619, 619, 1346, 1346, 1346, 1346, 3478, 2086, 305,
	882, 292, 292, 7511, 7511, 7511, 7511, 7511, 292, 415,
	637, 637, 415, 415, 415, 415, 415, 637, 637, 637,
	292, 292, 292, 637, 11995, 132088, 11670, 47524, 47524, 1274,
	2036, 557, 11078, 47524, 8621, 8621, 8621, 8621, -1000, 2110,
	-1000, -1000, -1000, -1000, 2945, 659, 51535, 51535, -1000, -1000,
	-1000, -1000, 26057, 47524, -1000, -1000, -1000, -1000, 36006, -1000,
	-1000, 129233, -317, 470, -1000, 225, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 468,
	-170, -9, -1000, 47524, 47524, 47524, 467, -1000, 223, 47524,
	114155, -1000, 125786, 789, -107, -1000, -110, 1469, -1000, 47524,
	-1000, -1000, 1273, -1000, 1272, 1266, 1264, -1000, 658, 466,
	-1000, 222, -1000, 2201, 657, 653, 47524, -1000, -1000, -1000,
	-1000, -1000, 128837, -1000, -1000, 128796, -1000, -1000, 128400, -1000,
	-1000, 128359, -1000, -1000, -1000, -1000, -1000, 131440, 125745, 16204,
	15920, 8830, 15317, 14489, -112, 463, -117, 460, 948, 944,
	459, 458, 450, -118, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -119, 449, -1000, 2943,
	-170, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 448,
	-1000, 447, -1000, 131256, -170, 441, 1042, -1000, 51535, 51535,
	51535, 51535, -1000, 440, -1000, 129681, -1000, 130992, 35433, 35433,
	35433, 429, 130792, 47524, -170, -125, -1000, -126, -1000, -1000,
	532, -127, 1048, 34831, 54403, 24295, -1000, 1048, 1048, 47524,
	-1000, 47524, 2630, -1000, -1000, -1000, -1000, 2627, 2023, 2623,
	55525, -1000, -1000, -1000, -1000, 100202, -1000, 3611, 3061, -1000,
	100202, -1000, -1000, 114155, 528, -1000, 100202, 100202, 24295, 926,
	-1000, 926, 100202, 607, -1000, -1000, -1000, -1000, -1000, 428,
	62875, -9, 219, 24295, 1022, -1000, -1000, 2773, 2773, 2773,
	2773, 2773, 90234, -1000, -1000, 125184, 1263, -34, -67, 2800,
	-1000, 3583, -1000, 2123, -1000, 69006, -1000, 804, 1212, 24295,
	-1000, -1000, -1000, 652, -1000, 3623, 3623, -1000, 3623, 125184,
	2940, 249, 2799, -1000, 240, 125184, 3719, -1000, -1000, 232,
	-1000, 90234, 232, 232, -1000, 90234, 90234, 2332, -1000, 243,
	-1000, 234, -1000, -1000, -148, -1000, 1034, 32510, -1000, 1483,
	-1000, -1000, 1628, -1000, 2058, -1000, 1423, -1000, -1000, -1000,
	-1000, 32510, -1000, 2095, 114155, 114155, 90234, -1000, 114155, -1000,
	2224, 125184, -1000, 2467, 118563, 2454, 69006, 114155, -1000, -1000,
	649, 966, 2613, 2612, 1131, 114155, 114155, 2610, 118012, 117461,
	-1000, 3718, 114155, 2152, 47524, 3456, 2394, 4386, 119, 119,
	-1000, 119, 119, 119, -1000, 648, 1428, 90234, 90234, 114155,
	125184, 90234, 1921, -1000, -1000, -1000, -1000, -1000, 81301, -1000,
	-1000, 3626, 3625, -1000, 1432, -1000, -1000, -1000, 1432, 2413,
	1861, 114155, 125184, 90234, 125184, 116910, 116359, -1000, -1000, 1787,
	114155, -1000, -1000, -1000, -1000, 1462, -1000, 858, 2140, 119,
	119, -1000, 119, 119, 119, 646, 24295, 2077, -1000, 3033,
	114155, 3655, 115808, 3651, 114155, 114155, 114155, 125184, 3367, 114155,
	114155, 125184, -1000, 115257, 5298, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 71818, 1145, 114155, 1311,
	-1000, -1000, 1782, 1261, 1260, 80750, 2188, 1779, 1912, 125184,
	58923, 1018, 58923, 2755, -1000, -1000, 21435, -1000, 131904, 131904,
	-1000, 131904, -1000, 69574, 73526, 114155, -1000, 1084, 114155, 75186,
	985, 3123, 63991, -184, 1003, 73526, 90234, -30, 2683, 114155,
	-1000, -1000, 2413, 3120, 528, 2465, -1000, 125184, 3552, 3114,
	644, 3715, 3713, -1000, 90234, 2370, 2461, -1000, -1000, 114706,
	3160, 858, 114155, 1048, 55525, 2019, -1000, 61756, 1110, 114155,
	1938, 189, -1000, -1000, -1000, 11, 114155, -1000, 815, -1000,
	-1000, 6071, 6071, 1003, -232, 636, -1000, 903, 901, 59491,
	-132, -1000, 216, 634, 898, 897, -1000, 3356, -1000, -161,
	-1000, 73526, 1019, 58923, 2939, 2937, -1000, -1000, 1030, -1000,
	1470, 1003, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -19, 1911, 114155, -148, -148, -48, -34,
	-1000, 1021, -1000, 1021, -1000, 1021, -1000, -1000, -1000, 131904,
	-1000, -1000, -1000, 1694, 1683, 114155, -1000, -1000, 114155, -1000,
	24295, 114155, 90234, 24295, 90234, 2973, 2969, -1000, -1000, -1000,
	114155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1165,
	-1000, 1910, 2339, -1000, 625, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2547, -1000, -35, 31937, 937, -1000,
	-1000, 90234, -20, 47524, 47524, 10857, 9631, 47524, 51535, 51535,
	-1000, 47524, 8901, -1000, -1000, -1000, -1000, -1000, 2925, 624,
	47524, 69006, 6964, 6150, -1000, 427, 13754, 415, -1000, 47524,
	-1000, 591, -1000, 424, 34258, -1000, 130344, -16, -134, -1000,
	17396, -170, -135, -1000, -1000, 803, -1000, 3092, -1000, 47524,
	130608, 2517, 2049, 1907, 1717, 3623, 3649, 20861, -1000, 65667,
	1052, 2265, 127963, -1000, -1000, -1000, -1000, 69006, 69006, 47524,
	47524, -1000, 47524, 47524, 47524, -1000, -1000, -1000, 3623, 928,
	-1000, -1000, -1000, 928, -1000, -1000, 1432, -1000, 1432, -1000,
	47524, -1000, -1000, 2919, 47524, -1000, 69006, 69006, 51535, 51535,
	51535, 51535, 51535, 51535, 51535, 51535, 51535, 51535, 51535, 51535,
	51535, 51535, 51535, 51535, 51535, 51535, 51535, 51535, 2637, 51535,
	3602, 3602, 3602, 1024, -1000, 2967, 2919, 47524, 47524, 69006,
	419, 416, 414, -1000, 47524, -170, -1000, -1000, 7298, 623,
	-1000, 2536, -1000, 2842, -1000, 47524, -1000, -145, -1000, 2455,
	-1000, -1000, 2842, 2842, -147, 131904, 55525, 55525, -1000, 621,
	47524, 2626, -1000, -1000, 785, -318, -1000, 887, -1000, -1000,
	-1000, -1000, -1000, -1000, 886, -1000, 528, -1000, -1000, -1000,
	214, 100202, 100202, 783, -1000, -149, -1000, -1000, -155, -1000,
	3551, 413, 24295, -1000, 1048, 2724, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2647, -148, 125184, 125184, 1768, 2321, 3648,
	-1000, 3624, 801, 778, 213, 3623, 412, 400, 391, -148,
	125184, 125184, 1766, 125184, -1000, -1000, -1000, 232, -1000, -1000,
	-1000, 230, -1000, -1000, -1000, -1000, 2701, -1000, -36, -1000,
	-1000, -1000, 47524, -1000, -1000, 3359, 1255, 1252, -1000, -1000,
	-1000, 2924, -1000, 3113, -1000, 2460, -1000, 1114, -1000, 2000,
	47524, 620, 2717, 618, 617, 3712, 2161, 3709, 1138, 3109,
	2332, 3104, 2332, -1000, -1000, -1000, 960, -1000, 131904, 2394,
	-1000, 616, 609, -1000, -39, 1691, 1958, 1249, 1029, -1000,
	-1000, -1000, -1000, 47524, 47524, 99651, -1000, 485, 3357, -21,
	-1000, -1000, -1000, 1765, 1247, 1244, -1000, -1000, -1000, -1000,
	2413, 1763, 1242, 1240, -1000, -1000, -1000, -1000, -1000, 2457,
	-1000, -1000, 3102, 1027, -1000, 3041, 3040, 942, 114155, -1000,
	1026, -1000, -1000, -1000, -1000, 47524, -1000, -41, 1239, 3507,
	2456, 90234, -1000, 2332, 3091, 1238, -1000, 1236, -1000, -1000,
	-1000, 3505, 3504, 1245, -1000, -1000, -1000, -1000, -1000, 71250,
	-1000, -1000, 1093, 114155, 125184, 90234, 1860, -1000, -1000, 79648,
	80199, 114155, 2798, -148, 919, -1000, 2579, 919, 1018, 2916,
	-1000, 2680, -1000, 1025, 90234, 3704, 389, -156, -42, 69006,
	-1000, -1000, -1000, -1000, 2454, 90234, 114155, 1333, 2715, 114155,
	3549, -1000, 2402, 635, 90234, 934, -1000, 3611, -1000, -1000,
	-1000, 1023, -1000, 3495, 90234, 3548, 3089, 1022, 119, 90234,
	3632, -1000, -1000, 3543, 90234, 3068, 2365, 2447, 2578, 858,
	74084, 1022, 2257, -63, -1000, 1938, 33656, 3364, -158, -1000,
	-1000, -1000, 1048, 65109, 55525, 47524, 3701, -163, -1000, -1000,
	-1000, -1000, -1000, 97440, 97440, 73526, 73526, 73526, 1003, 114155,
	114155, 3700, 73526, 73526, 73526, -43, 605, -1000, 885, 884,
	877, -1000, -1000, -1000, -1000, -1000, -1000, 876, 873, 1019,
	-1000, -1000, -161, 58923, 119, -1000, 2305, 90234, -1000, 20287,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1021, -184, -1000,
	-1000, 2159, 2414, 2159, 1903, 1900, -1000, -1000, 2338, -1000,
	-1000, -1000, -1000, 2688, 3365, 24295, 3492, 8621, 47524, 47524,
	5512, 5896, 5692, 8621, 47524, 47524, 69006, 12798, -164, 47524,
	47524, -1000, 47524, 776, 131904, -1000, 3647, 47524, 388, 376,
	-1000, -1000, -1000, 3622, -1000, -1000, -1000, 131904, 47524, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 365, -1000, 212, -1000,
	-1000, -1000, 121869, -1000, 47524, 362, 3453, -1000, 353, 351,
	12652, 7821, 127922, 127526, 127485, 350, -1000, -1000, 348, 346,
	131904, 2967, 131904, -1000, -1000, 1085, 1085, 1404, 1404, 1404,
	1404, 3602, 1013, 392, 984, 951, 951, 951, 379, 1024,
	1024, 951, 951, 951, 1024, 2915, 2640, 601, 5406, -1000,
	-1000, 131904, 131904, 345, -1000, -1000, -1000, -170, 344, 7298,
	-1000, 2836, 3452, 131904, -1000, 55525, 2836, 2836, -1000, -1000,
	2023, 114155, 131904, 55525, -1000, 3061, -1000, 18560, 17981, -1000,
	24295, -1000, -1000, -1000, -1000, 3611, -1000, 62875, -1000, 600,
	-1000, 209, -1000, 2724, -1000, 872, -1000, -1000, 73526, 73526,
	2773, -148, -165, 114155, -1000, -1000, 774, 3699, 799, 24295,
	343, -1000, -1000, -1000, -148, -148, 114155, -148, -1000, -1000,
	-1000, 3306, 131904, 114155, 114155, 1547, 99100, 114155, 3067, -1000,
	2515, -1000, 1131, 127089, 56086, -1000, 56086, 114155, -1000, -1000,
	-1000, -1000, 2043, 1651, 3697, 1181, -1000, 3409, 114155, -1000,
	114155, -1000, -1000, -1000, 114155, 114155, 90234, 114155, -1000, 125184,
	3049, -171, 131904, -44, -1000, 869, -1000, 1419, -1000, 19713,
	114155, 125184, 90234, 114155, 125184, 90234, 3066, 114155, 2177, -1000,
	-1000, 3039, -1000, 3048, -173, 24295, -1000, 3645, 3643, 3065,
	3415, -1000, 114155, 3642, 114155, 90234, 3299, -1000, -1000, -1000,
	-1000, -1000, -1000, 1734, 1234, 1233, 2362, -45, 2349, 2320,
	-48, 2188, 1018, -51, 599, -1000, 868, -1000, -1000, 866,
	-1000, 1018, -1000, 73526, 58923, 3695, 528, -1000, 2704, -1000,
	95202, 75186, 2345, -1000, -1000, 598, 114155, 114155, 595, -1000,
	119, -1000, 3694, 97998, 594, -1000, 2284, -1000, 773, -1000,
	2533, 125184, 2413, 119, 90234, -1000, -1000, 528, 342, -52,
	-1000, 3075, 1123, 24295, 90234, 3059, 2580, 858, 74084, -1000,
	1412, 2667, -1000, -54, -1000, 680, 119, 2257, -1000, -63,
	131904, -1000, 865, -1000, -181, -1000, -1000, 340, -1000, 3298,
	-1000, -1000, -182, -1000, -1000, 3770, 3770, 73526, 58923, 73526,
	73526, 73526, -1000, 1019, 919, -1000, 2482, -1000, -1000, -1000,
	-1000, -1000, 24295, 1754, -1000, 588, 578, -1000, -1000, -1000,
	-1000, 3365, 8621, 8621, 47524, 47524, 47524, 8621, 12798, -187,
	-1000, 8621, 8621, -170, -1000, -1000, 130344, -1000, -1000, -1000,
	131904, -1000, 19139, 2162, -1000, 127048, -1000, 31937, -1000, -1000,
	47524, 47524, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	51535, 2910, 571, 69006, -1000, -1000, 339, 1038, 47524, 49243,
	2455, 1038, 1038, -1000, -193, -1000, -1000, -1000, 3611, -1000,
	3611, 209, -1000, -1000, 3693, 24295, -1000, 73526, -1000, -1000,
	-1000, 3689, -190, 797, -1000, 3688, -1000, -1000, 147, -1000,
	-1000, -1000, 2789, 3539, -1000, 2006, -1000, 114155, -1000, 114155,
	-1000, 24295, 114155, 2866, 1328, -1000, 966, 2609, 569, 51535,
	1163, 90234, 905, 2824, 2821, -1000, 3570, 3451, 2797, -194,
	-1000, 114155, 47524, 114155, -195, -200, 2424, -1000, -1000, 1161,
	1251, 47524, 1158, -1000, -1000, -1000, 69006, 568, 2332, 2332,
	-201, -207, -1000, -1000, -1000, 47524, 1231, 114155, 33083, -1000,
	3687, 3357, -1000, -1000, -1000, -1000, -1000, -1000, 114155, -1000,
	114155, -1000, 47524, 1213, -1000, -1000, -1000, 3641, 2332, 24295,
	2332, -1000, 2332, 3415, 1176, 114155, 125184, 90234, 1802, 1802,
	2893, -1000, -1000, -1000, 2584, 2584, 73526, 58923, -1000, -68,
	1018, -1000, 3538, 2699, 3686, -1000, -1000, -1000, -1000, 2608,
	-1000, -1000, -1000, 114155, 2606, 2835, 56086, 567, 566, 114155,
	1004, -1000, -208, -1000, 864, 862, 75186, 985, 946, -1000,
	-69, 565, -1000, 860, -1000, -1000, -1000, -1000, 528, 3537,
	-1000, 3636, 561, 560, 114155, 2348, 558, 24295, 3354, 858,
	74084, -1000, 3160, 1938, -1000, 2429, 114155, 3346, -1000, 2667,
	557, -1000, 1003, 552, 1003, -1000, -209, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -74, -1000, 824, 823, -1000, -1000,
	90234, 90234, 47524, 47524, -1000, 8621, 8621, 8621, -1000, 335,
	-1000, -1000, 2257, 3447, -1000, -77, 126652, 126611, 6209, 51535,
	69006, -210, -1000, -1000, 114155, 131904, -87, -1000, 131904, 550,
	548, 479, -1000, -1000, -1000, 638, 627, -1000, -1000, -1000,
	125184, 3680, -1000, 125184, 98549, 114155, -1000, -1000, 1688, -1000,
	-1000, -1000, 114155, 2435, -1000, -1000, -1000, 1129, 47524, 5406,
	51535, 547, 47524, -1000, 546, 544, 3534, 3276, -1000, 2693,
	2901, 1973, 56086, -1000, 3365, -1000, 126215, -1000, 1122, 2024,
	-1000, -1000, -1000, -1000, 131904, 51535, 3415, 56086, -1000, -1000,
	542, 538, 131904, 537, 859, 2909, -1000, -1000, -1000, -1000,
	-1000, 131904, 535, 3507, -1000, -1000, -1000, -1000, 2332, 90234,
	-1000, -1000, -1000, 1210, -1000, -1000, -1000, -1000, 3678, 3677,
	2906, 79648, -1000, -217, -1000, -1000, 2029, 119, 2157, 2782,
	-1000, 2345, 534, -1000, -1000, 2618, 2618, -218, 56086, 56086,
	-220, 2344, 2700, -1000, 97998, 32510, 32510, 333, 3532, 946,
	-1000, 3618, -1000, 3278, 3278, 47524, 3529, 119, -1000, 3632,
	56086, -1000, 90234, 56086, 2347, 2101, 2563, 74084, -1000, 2578,
	-1000, -1000, -223, 114155, 1938, -1000, -1000, 73526, -1000, -1000,
	2482, -1000, 114155, -1000, 114155, -1000, -1000, -226, -231, -1000,
	2081, 47524, 31937, -1000, -1000, 6209, -233, -1000, -101, -1000,
	3528, 49243, 3671, 3669, 3668, -1000, -1000, -148, -1000, -148,
	-1000, 1999, -1000, -1000, -1000, 3057, 2833, 126174, 5406, 2540,
	114155, 492, 2413, 2413, -1000, 3527, 2888, -1000, -1000, 2699,
	533, -1000, -1000, -1000, -1000, 937, 114155, 2699, 2831, 90234,
	5406, 1128, -236, 2159, 2159, 47524, 31364, 2175, 47524, -1000,
	-1000, 3415, 125184, -1000, -1000, 125184, 2346, -1000, 2876, 3610,
	-1000, 985, -1000, 2171, 114155, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1122, -239, -241, -1000,
	-1000, 3396, -1000, 3297, -1000, -1000, -1000, 2704, 119, -1000,
	-1000, -1000, -244, 131904, 119, -1000, 331, -249, 1123, -250,
	90234, 2005, -1000, 858, -1000, 2580, 1048, -1000, -1000, -252,
	-1000, -255, -258, -1000, -1000, 324, 48670, 48670, 48670, -170,
	-183, -1000, 114155, 529, -1000, -1000, -1000, -1000, -1000, 3036,
	1017, -1000, 907, 1948, 322, 1137, 320, 316, -1000, -1000,
	-1000, 2140, 114155, -1000, -1000, -1000, 1008, 528, -1000, 47524,
	1122, -265, -1000, 1108, -266, -1000, 1105, -272, -1000, 2902,
	-1000, -274, 2332, -257, 227, 1802, 1006, 3494, -1000, -1000,
	-1000, 2344, 90234, -275, -1000, -1000, 1973, 1122, 2140, 2522,
	-1000, 2699, 1004, -1000, -1000, -1000, 1122, 526, 1973, 525,
	1580, 858, -1000, -1000, 1432, 3354, 3126, 1003, -1000, -1000,
	-1000, 3233, -1000, 52681, 2314, 1896, 129497, 3233, 3233, -1000,
	-1000, 114155, 3482, -1000, 912, 910, 1564, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2797, -1000, -281, 3480, 2540,
	131904, 2699, -1000, 2159, 2763, -1000, 2159, 2881, -1000, 2154,
	-1000, -1000, -1000, 2854, -1000, 2880, -1000, 1771, 3593, 2553,
	524, -1000, 114155, 2699, 1973, 995, 1841, 1776, 3667, 2157,
	2344, 1973, 56086, 2699, 56086, 2127, -1000, 114155, -1000, 2101,
	1375, -1000, -1000, 1872, 3564, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 855, -1000, 3267, -1000, 1157, 2205, 2205,
	1048, -1000, 853, 907, -1000, -1000, 522, -1000, 521, -1000,
	2315, 125184, 2270, -1000, -1000, -1000, -1000, 114155, -1000, 2140,
	2699, 1048, 520, -1000, 3665, -1000, 985, -1000, 2699, -282,
	2140, -283, -1000, -1000, -1000, -184, 2005, -1000, 1653, 1885,
	-1000, -1000, 2239, 48097, 47524, -1000, 3586, -1000, -1000, 2661,
	-1000, -1000, 47524, 2797, 47524, 47524, -1000, 227, 63433, -284,
	995, 2140, -1000, -1000, 2344, 2140, 1122, 995, 1973, 1580,
	65109, -1000, -1000, -1000, 131904, -1000, -1000, -1000, 131904, -1000,
	-300, -301, -1000, -232, 97440, 2316, 1048, 995, 2553, 995,
	1973, 1048, 2699, 2127, -263, 2140, 1209, -307, -1000, -1000,
	-1000, -1000, 1048, -1000, 1048, 2699, -1000, 2140, -1000, -1000,
	-1000, -1000, 519, -1000, -1000, -1000, 2140, 995, 47524, 995,
	1048, -309, 1048, -1000, 2140, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4547, 4543, 4542, 4541, 4539, 4536, 4532, 4530, 4527,
	4523, 4522, 4520, 177, 4519, 4518, 4512, 4509, 4502, 4501,
	4497, 4494, 4492, 4491, 4490, 4489, 4488, 4487, 4485, 4484,
	4483, 4482, 4481, 4480, 4477, 4476, 4475, 4474, 4473, 4471,
	4470, 4469, 4467, 4466, 4465, 4460, 4459, 4457, 4456, 4454,
	4453, 4452, 4450, 4447, 4445, 4444, 4443, 4441, 4440, 4439,
	4438, 4437, 4435, 4434, 4432, 4431, 4430, 4428, 53, 4426,
	4422, 4420, 4417, 4414, 4413, 4411, 4405, 4403, 4402, 4399,
	4397, 4393, 4392, 4390, 4387, 4386, 4384, 4382, 4379, 65,
	4375, 280, 4374, 4362, 4360, 4359, 4358, 4356, 4354, 4352,
	4351, 4350, 4349, 4347, 279, 4346, 133, 169, 4345, 4344,
	3876, 4340, 4338, 277, 4337, 4334, 4330, 4326, 4325, 284,
	4323, 4322, 4321, 4319, 4318, 4317, 4316, 4314, 4313, 4312,
	4307, 4306, 131, 230, 4305, 4304, 1789, 4300, 4296, 4295,
	4294, 4293, 4292, 4291, 4290, 4287, 4285, 4284, 252, 173,
	4282, 276, 4281, 4279, 4276, 4275, 4274, 4273, 4272, 4270,
	4268, 4266, 4264, 4263, 4262, 4261, 4259, 4258, 4257, 4256,
	4255, 4254, 4249, 4247, 4241, 4240, 4238, 4237, 4235, 4234,
	4233, 4231, 4229, 4228, 4226, 4223, 4221, 4219, 4217, 4215,
	4214, 264, 219, 136, 4212, 4211, 273, 271, 4209, 4208,
	4207, 4202, 4201, 129, 11, 40, 4198, 4197, 95, 94,
	90, 102, 104, 97, 4196, 124, 4194, 128, 66, 4189,
	19, 3, 260, 251, 6361, 249, 4188, 4187, 4185, 244,
	194, 4184, 240, 4182, 4181, 4179, 4178, 4177, 4176, 69,
	59, 185, 184, 180, 167, 80, 4175, 140, 106, 83,
	55, 36, 20, 151, 215, 21, 7, 262, 4173, 261,
	8, 142, 16, 39, 4172, 4170, 4167, 4164, 3759, 107,
	4163, 266, 250, 174, 4162, 4160, 4159, 813, 4158, 4152,
	56, 4151, 122, 101, 105, 17, 139, 4148, 150, 171,
	38, 4146, 183, 58, 4143, 162, 100, 88, 9128, 11019,
	4142, 4139, 117, 81, 130, 4250, 211, 172, 199, 202,
	166, 170, 115, 214, 212, 181, 315, 4138, 254, 4137,
	3536, 87, 186, 155, 6031, 4135, 4134, 4129, 84, 4127,
	108, 4120, 4119, 73, 12, 10, 2, 6, 145, 22,
	28, 1, 4118, 49, 121, 50, 26, 4117, 30, 4116,
	4114, 4112, 4111, 4108, 46, 164, 4102, 4099, 269, 4098,
	89, 57, 45, 4096, 33, 217, 4095, 229, 132, 4094,
	4092, 258, 206, 188, 4091, 43, 235, 4090, 4089, 4087,
	4077, 4071, 4070, 137, 4, 147, 4069, 4068, 156, 4066,
	52, 241, 198, 4063, 62, 4061, 4056, 175, 82, 143,
	281, 205, 227, 120, 228, 191, 232, 4055, 4054, 4052,
	246, 4051, 4050, 224, 149, 4046, 4045, 204, 283, 92,
	47, 78, 239, 85, 193, 159, 4043, 201, 4042, 4040,
	282, 187, 222, 9, 13, 98, 109, 4039, 5, 238,
	158, 245, 119, 4038, 7730, 2565, 3733, 4037, 4036, 152,
	127, 71, 135, 153, 265, 74, 4035, 4034, 3085, 4033,
	4031, 4026, 4024, 190, 4023, 4022, 4021, 161, 176, 189,
	4020, 96, 72, 51, 25, 118, 255, 268, 116, 226,
	178, 256, 4019, 4018, 4016, 196, 4014, 79, 114, 165,
	203, 267, 60, 4013, 168, 4011, 157, 234, 67, 154,
	4010, 223, 4009, 4008, 4007, 4003, 4002, 4000, 3997, 209,
	236, 3991, 3988, 3987, 35, 197, 3986, 263, 160, 243,
	110, 76, 3985, 91, 3064, 3979, 144, 218, 77, 2916,
	23, 3978, 221, 61, 3977, 0, 12452, 2383, 10836, 11792,
	3974, 8014, 3970, 3967, 3963, 213, 148, 3961, 3957, 3954,
	113, 3953, 86, 3949, 3948, 70, 3947, 27, 18, 24,
	29, 32, 777, 618, 3945, 3944, 440, 146, 125, 3943,
	278, 231, 3942, 3941, 3939, 3938, 99, 3937, 48, 3936,
	42, 3935, 3934, 54, 15, 44, 3933, 3932, 210, 3931,
	225, 257, 3930, 163, 3928, 68, 138, 3927, 3925, 3924,
	63, 64, 259, 93, 3919, 287, 3918, 200, 3914, 3913,
	31, 3912, 3909, 248, 112, 111, 3903, 253, 141, 41,
	208, 182, 216, 3902, 3901, 179, 3900, 3896, 3895, 285,
	3893, 3892, 34, 3889, 3887, 3886, 14, 3884, 3882, 207,
	3231, 3881, 3878, 37, 3772, 192,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	602, 602, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 603, 603, 603, 603, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	598, 598, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 604, 604, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 498, 498,
	498, 529, 529, 529, 529, 530, 530, 624, 624, 625,
	625, 625, 625, 625, 135, 135, 396, 396, 396, 56,
	56, 56, 56, 56, 593, 593, 208, 208, 208, 210,
	210, 209, 209, 209, 209, 209, 80, 80, 610, 610,
	609, 608, 608, 608, 611, 611, 611, 207, 207, 207,
	131, 131, 131, 131, 131, 131, 132, 132, 133, 133,
	211, 211, 211, 213, 213, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 217, 16, 16, 16,
	114, 114, 114, 114, 114, 114, 114, 109, 109, 532,
	532, 533, 533, 202, 202, 203, 203, 203, 203, 204,
	204, 205, 205, 205, 71, 71, 214, 214, 216, 216,
	215, 215, 215, 215, 215, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 62, 62, 69, 69, 69, 69, 69, 69, 69,
	193, 193, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 77, 77, 77, 77, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 627, 627,
	628, 628, 629, 629, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	86, 86, 356, 356, 319, 319, 87, 87, 87, 88,
	88, 89, 89, 73, 73, 591, 591, 372, 372, 489,
	489, 74, 599, 599, 599, 601, 601, 600, 600, 91,
	91, 395, 395, 92, 92, 92, 92, 92, 92, 93,
	93, 93, 93, 93, 93, 93, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	101, 101, 101, 101, 101, 102, 102, 102, 99, 99,
	99, 96, 96, 96, 95, 95, 95, 100, 100, 100,
	590, 308, 308, 98, 98, 98, 97, 97, 97, 373,
	373, 103, 103, 103, 103, 320, 104, 104, 104, 104,
	104, 104, 104, 104, 107, 107, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 491,
	491, 105, 105, 105, 456, 456, 110, 110, 110, 411,
	411, 111, 111, 111, 111, 111, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 134, 134, 134, 134, 134,
	134, 134, 134, 595, 595, 365, 365, 271, 271, 271,
	271, 123, 123, 123, 123, 124, 124, 124, 125, 125,
	198, 198, 141, 141, 141, 141, 140, 140, 140, 140,
	140, 140, 140, 140, 63, 63, 63, 64, 64, 65,
	65, 66, 66, 67, 67, 68, 68, 68, 68, 68,
	144, 144, 621, 621, 146, 143, 143, 143, 143, 143,
	142, 142, 145, 145, 145, 145, 147, 149, 149, 149,
	149, 149, 148, 148, 148, 148, 148, 150, 150, 523,
	523, 381, 381, 521, 521, 542, 542, 522, 522, 326,
	326, 326, 326, 326, 327, 327, 327, 531, 531, 531,
	531, 531, 531, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 199, 199, 200, 201,
	201, 201, 201, 201, 176, 176, 176, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 382, 382,
	179, 179, 179, 163, 163, 152, 152, 152, 152, 152,
	152, 152, 157, 157, 157, 157, 157, 157, 157, 157,
	153, 153, 165, 165, 165, 165, 165, 158, 158, 159,
	159, 159, 160, 160, 160, 160, 186, 186, 162, 162,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 154,
	154, 154, 154, 167, 167, 167, 167, 418, 418, 418,
	191, 191, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 189, 189,
	189, 189, 189, 189, 612, 612, 613, 613, 613, 183,
	183, 183, 183, 183, 183, 470, 470, 177, 177, 177,
	177, 182, 182, 182, 182, 185, 185, 185, 185, 401,
	401, 174, 174, 174, 175, 175, 175, 180, 180, 181,
	357, 357, 178, 178, 184, 184, 184, 184, 155, 155,
	155, 155, 155, 155, 155, 155, 156, 156, 156, 156,
	187, 187, 173, 173, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 631, 631, 169, 169, 169,
	168, 168, 168, 168, 171, 171, 172, 172, 172, 172,
	172, 172, 170, 161, 190, 592, 592, 588, 588, 588,
	588, 588, 588, 588, 588, 589, 589, 589, 589, 594,
	594, 115, 115, 115, 115, 115, 115, 115, 126, 126,
	126, 126, 126, 126, 126, 129, 129, 116, 116, 116,
	116, 116, 116, 116, 119, 119, 117, 117, 117, 117,
	118, 118, 81, 81, 81, 81, 81, 15, 15, 15,
	82, 82, 262, 262, 220, 220, 220, 345, 345, 221,
	221, 334, 334, 334, 334, 218, 218, 219, 219, 83,
	83, 632, 632, 632, 605, 605, 605, 606, 606, 606,
	606, 606, 606, 328, 328, 329, 329, 436, 436, 436,
	436, 436, 332, 332, 332, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 335, 335, 246, 246, 246, 343,
	344, 344, 336, 336, 342, 341, 341, 340, 340, 339,
	339, 337, 338, 338, 338, 347, 347, 346, 349, 349,
	348, 435, 551, 551, 553, 553, 553, 553, 553, 553,
	553, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 419, 419,
	633, 633, 634, 635, 549, 549, 549, 550, 545, 545,
	546, 546, 546, 546, 546, 330, 330, 331, 331, 331,
	331, 547, 548, 363, 363, 474, 552, 552, 554, 554,
	556, 636, 636, 636, 636, 636, 636, 637, 637, 637,
	434, 434, 433, 433, 354, 354, 557, 557, 557, 557,
	558, 558, 558, 558, 558, 561, 560, 559, 559, 559,
	559, 559, 85, 85, 85, 398, 398, 397, 397, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 195, 195, 274, 274, 79, 79,
	79, 12, 12, 12, 12, 12, 12, 12, 289, 289,
	13, 13, 13, 607, 607, 607, 84, 84, 84, 84,
	84, 84, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 597, 597, 596, 596, 275, 275, 639, 639,
	90, 90, 90, 90, 90, 90, 90, 90, 492, 492,
	493, 493, 78, 78, 78, 78, 78, 420, 420, 417,
	417, 416, 416, 362, 362, 472, 472, 472, 473, 279,
	279, 280, 280, 239, 239, 239, 31, 30, 21, 21,
	26, 26, 27, 27, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 28, 28, 49, 49, 49, 49, 50,
	50, 50, 50, 53, 53, 54, 54, 48, 48, 48,
	48, 51, 51, 44, 44, 55, 55, 55, 55, 55,
	614, 616, 616, 615, 615, 619, 619, 619, 619, 619,
	619, 617, 617, 618, 618, 622, 622, 623, 623, 122,
	122, 127, 127, 127, 127, 127, 128, 128, 128, 128,
	130, 130, 130, 130, 139, 139, 194, 194, 194, 194,
	194, 194, 194, 57, 57, 57, 57, 70, 70, 70,
	70, 137, 641, 641, 641, 138, 138, 138, 640, 640,
	272, 272, 430, 430, 431, 431, 642, 642, 432, 432,
	432, 432, 432, 265, 264, 266, 266, 267, 267, 76,
	76, 76, 255, 255, 254, 256, 256, 257, 257, 252,
	252, 534, 534, 259, 259, 259, 260, 260, 248, 248,
	249, 249, 250, 250, 251, 251, 263, 263, 643, 643,
	113, 113, 113, 197, 197, 318, 318, 318, 427, 427,
	427, 355, 355, 286, 286, 429, 429, 429, 429, 394,
	394, 394, 196, 196, 370, 370, 384, 384, 385, 385,
	486, 486, 386, 120, 120, 121, 121, 136, 136, 224,
	224, 222, 222, 222, 222, 222, 222, 222, 222, 229,
	229, 230, 230, 231, 231, 232, 233, 233, 233, 233,
	374, 374, 234, 234, 234, 223, 223, 223, 225, 225,
	225, 225, 225, 225, 225, 228, 228, 228, 228, 235,
	235, 235, 227, 227, 568, 568, 568, 570, 570, 572,
	572, 571, 571, 567, 567, 569, 569, 638, 638, 400,
	400, 400, 352, 353, 350, 350, 351, 351, 360, 360,
	358, 359, 359, 361, 361, 471, 471, 471, 240, 240,
	240, 391, 391, 391, 391, 392, 392, 423, 423, 421,
	421, 421, 421, 422, 422, 424, 424, 424, 425, 425,
	426, 426, 388, 388, 389, 389, 390, 390, 390, 390,
	452, 452, 226, 226, 226, 367, 367, 367, 368, 368,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 443, 443, 441, 441, 441, 441, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 476, 477, 477, 369,
	369, 478, 428, 428, 586, 586, 586, 587, 587, 469,
	469, 479, 479, 479, 479, 479, 479, 467, 467, 468,
	468, 487, 488, 488, 404, 404, 404, 404, 402, 402,
	405, 405, 405, 405, 405, 403, 403, 480, 480, 480,
	480, 393, 393, 481, 481, 481, 481, 482, 483, 483,
	484, 484, 437, 438, 438, 494, 494, 494, 494, 496,
	366, 366, 366, 366, 366, 544, 543, 543, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 511,
	511, 511, 511, 511, 511, 511, 497, 497, 497, 497,
	497, 501, 501, 501, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 502, 502, 507, 507, 508,
	508, 508, 503, 504, 509, 509, 509, 509, 644, 644,
	513, 513, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 499, 499, 499, 506, 506, 506, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	412, 412, 414, 414, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 446, 446, 446, 446, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 562, 562, 562, 562, 562, 562,
	562, 562, 448, 448, 565, 565, 566, 566, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 573,
	573, 574, 574, 576, 576, 577, 577, 578, 579, 579,
	579, 580, 581, 581, 575, 575, 582, 582, 582, 582,
	583, 583, 584, 584, 584, 584, 584, 585, 585, 585,
	585, 585, 458, 458, 459, 459, 465, 465, 465, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 325, 325, 324, 276, 276, 276,
	276, 276, 276, 379, 379, 377, 377, 377, 380, 380,
	378, 378, 376, 376, 375, 375, 455, 455, 453, 453,
	457, 457, 406, 406, 512, 512, 512, 512, 512, 512,
	512, 512, 407, 407, 407, 415, 408, 408, 409, 409,
	409, 409, 409, 449, 450, 410, 410, 410, 451, 451,
	460, 464, 464, 463, 462, 462, 461, 461, 439, 439,
	440, 440, 387, 387, 645, 645, 383, 383, 485, 485,
	485, 485, 322, 322, 371, 371, 321, 321, 313, 313,
	314, 314, 314, 314, 364, 364, 466, 466, 514, 514,
	515, 515, 516, 516, 517, 517, 518, 519, 520, 454,
	454, 297, 296, 283, 284, 295, 294, 293, 282, 285,
	290, 291, 292, 287, 288, 304, 303, 302, 253, 258,
	309, 310, 310, 312, 312, 311, 311, 299, 300, 301,
	490, 281, 315, 315, 316, 316, 316, 317, 317, 317,
	317, 277, 277, 278, 278, 305, 305, 306, 307, 307,
	298, 298, 298, 268, 268, 268, 269, 269, 270, 270,
	528, 528, 525, 525, 525, 526, 526, 526, 527, 527,
	527, 527, 524, 524, 524, 524, 524, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 536, 536, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 538, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 541, 541,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 9, 10, 5, 2, 6, 4, 7, 7, 7,
	10, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 11, 12, 9, 5, 3, 1,
	5, 10, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 5, 7, 5, 5, 3, 3, 0,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 2,
	2, 3, 0, 3, 0, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 13,
	16, 3, 1, 0, 4, 1, 0, 2, 2, 3,
	0, 1, 1, 4, 4, 5, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 5, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 604, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 388, 433, 445, 403, 143, 424, 408,
	-145, -146, 463, -57, -70, -138, -137, 73, 130, 418,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -569,
	-94, -97, -130, -630, 162, 222, -116, -117, -118, 370,
	-124, -125, 426, -127, -128, -129, 429, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 468, -181, -190, -159, 529, 49, 483,
	82, 147, 437, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -568, -95, -96, -99, -101, -102, -98, -100,
	425, -225, -223, 601, 544, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 565, 574, -228, -226, -227, -235, 455,
	552, 503, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, -320, 2, -299, -305, -306, -307,
	-298, -268, -538, -541, 4, -535, -539, 169, 232, 334,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 511, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 332, 327, 328, 329, 322,
	323, 319, 324, 320, 321, 325, 326, 331, 336, 337,
	340, 219, 342, 343, 346, 364, 350, 351, 352, 355,
	356, 359, 362, 363, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 375, 376, 378, 379, 380, 382, 383,
	384, 386, 388, 389, 391, 392, 394, 395, 396, 397,
	398, 399, 400, 402, 403, 405, 404, 406, 408, 410,
	411, 412, 418, 424, 420, 421, 422, 423, 425, 426,
	427, 428, 429, 431, 432, 433, 435, 436, 437, 438,
	439, 441, 443, 444, 448, 449, 465, 466, 485, 445,
	446, 447, 450, 451, 452, 453, 454, 458, 456, 457,
	459, 460, 461, 463, 464, 467, 468, 470, 471, 472,
	473, 474, 475, 476, 479, 481, 482, 483, 502, 484,
	486, 490, 491, 492, 493, 487, 488, 501, 495, 496,
	498, 499, 504, 505, 506, 507, 508, 509, 510, 512,
	514, 522, 523, 524, 526, 529, 530, 531, 532, 520,
	534, 535, 538, 539, 540, 543, 541, 542, 544, 546,
	549, 550, 551, 557, 556, 558, 560, 561, 566, 567,
	569, 570, 571, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 154, 165, 166, 178, 193,
	194, 206, 208, 216, 217, 218, 240, 241, 243, 248,
	270, 339, 341, 357, 361, 377, 381, 385, 387, 401,
	440, 477, 489, 494, 515, 516, 517, 518, 525, 527,
	552, 553, 554, 559, 568, -320, 2, -299, 348, -292,
	2, -268, -268, 388, 28, 2, 28, 376, 457, 506,
	508, 2, -595, -365, 2, 28, -271, -268, 102, 204,
	455, -292, 2, -595, -365, 25, 2, -268, 2, 362,
	22, 27, 66, 77, 98, 141, 164, 187, 190, -629,
	364, 395, 443, 459, 501, 512, 526, 2, 556, 291,
	456, 503, 232, 120, 531, 450, -607, 448, 449, 362,
	393, 435, 207, 545, -272, 2, 445, -268, 291, 2,
	604, 94, 74, 440, 460, -148, 2, 281, 523, -149,
	-150, -147, 515, -523, 450, 435, 313, -268, 604, 604,
	604, 28, -281, -268, 503, 232, 450, 120, 499, 604,
	2, 503, 367, 556, 456, 120, 398, 232, 531, 190,
	141, 27, 450, -607, 579, 580, 291, 127, -593, 2,
	-588, 4, -539, -535, -314, -313, 503, 509, 120, -307,
	-298, 594, -306, 604, 604, 604, 604, 2, 251, 252,
	397, 396, 460, 461, 28, 604, 604, 604, 604, 448,
	2, 164, 22, 27, 66, 93, 98, 127, 187, 190,
	353, -627, 364, 395, 459, 501, 505, 512, 526, -606,
	484, 68, 423, 450, -605, -607, 291, 531, 141, -416,
	120, 281, 202, 539, 508, 506, 537, 133, 239, 542,
	541, 604, 604, -107, 2, 601, 32, 31, -106, -110,
	143, 463, -217, 503, 244, 2, -268, 604, 604, 604,
	2, 251, 252, 448, 449, 28, 604, 604, 188, -588,
	2, 604, 604, 604, 2, 28, 251, 252, 448, 449,
	244, 2, 68, 452, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	2, -192, 460, 484, 213, 47, 46, 74, 28, 394,
	79, 368, 121, 127, 149, 532, 205, 232, 233, 259,
	93, 94, -418, 44, 252, 68, 251, 449, -612, 448,
	-470, 504, 451, 457, 498, 263, 445, 523, 102, 546,
	436, 571, 398, 399, 496, 412, 282, 158, 189, 4,
	120, 313, 435, 462, 267, 266, 515, 281, 444, 371,
	84, 604, -638, 2, 503, -640, 2, 523, 523, 2,
	-640, 2, -640, 2, -640, 2, -641, 523, 568, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, -223, -225, -224,
	604, 604, 604, 604, 604, 604, 604, -192, 460, 2,
	74, 28, -358, -360, 536, 242, 151, 354, -222, -224,
	2, -568, -521, 2, -444, -542, -446, 592, 593, 585,
	500, 67, -324, 333, 572, -458, 127, 537, 348, -541,
	-447, -460, 154, 364, 440, -380, 8, 9, 5, 6,
	7, -277, -448, -454, 528, 168, 338, -317, 605, 10,
	601, -565, -224, -459, 37, 208, 65, -525, -316, -278,
	-497, 243, -315, -298, -562, -563, 4, -535, -536, -526,
	-500, -508, -504, -505, -511, -268, -538, 77, 111, 112,
	110, 115, 114, 284, 283, 116, 113, 462, 545, 66,
	36, 216, 217, 248, 339, 218, 75, -564, 142, -537,
	240, 241, 477, 51, 401, 178, 126, 125, 341, 56,
	54, 553, -509, 122, 515, 516, 517, 518, 193, 194,
	58, 165, 166, 361, 385, 494, 525, 527, 206, 270,
	43, 106, 189, 238, 220, 247, 249, 253, 271, 274,
	314, 330, 335, 358, 360, 434, 469, -644, 554, 489,
	69, 70, -570, 404, -571, -292, -570, 604, 604, 606,
	604, -350, -352, -353, 2, 28, 139, 601, 2, -475,
	2, -476, -480, -224, 264, -479, 601, -477, 599, -299,
	349, -566, 441, -562, -563, -277, -298, -316, 4, -535,
	-537, 603, -354, 601, 120, 450, 503, 78, 232, 93,
	164, -411, 601, -268, 28, 348, 519, 606, -351, 392,
	-456, 601, 348, 188, 351, 60, 295, 2, 2, 2,
	2, 2, 216, -268, 503, 119, 2, 262, 2, 2,
	2, 2, 2, 2, 2, -373, 216, 2, -299, 556,
	-373, 216, 2, -373, 216, 2, -417, 2, 87, -282,
	216, 2, -268, -308, 216, 2, -303, -305, -312, 216,
	2, -310, -268, -530, 216, 2, -529, 4, -535, 116,
	462, -444, 2, -136, 2, 60, -268, 556, 2, 465,
	2, 601, -148, 2, 71, 523, 43, 460, -149, 2,
	-431, 2, -432, -264, -265, -266, -487, -267, 250, 391,
	400, 575, 131, 333, 571, -621, 188, 584, 519, -521,
	-521, -521, -381, 603, 2, 2, 2, 2, 2, 2,
	-480, 216, -299, 2, -296, -524, 4, -535, -539, -536,
	-540, -538, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	110, 111, 113, 112, 114, 115, 116, 127, 131, 135,
	139, 140, 144, 147, 151, 168, 170, 183, 187, 188,
	204, 207, 210, 223, 237, 242, 244, 264, 268, 275,
	283, 284, 333, 338, 344, 348, 349, 353, 354, 374,
	390, 407, 430, 455, 462, 480, 497, 503, 513, 519,
	521, 528, 536, 537, 545, 547, 555, 562, 563, 564,
	565, -541, 77, 2, -480, 216, 2, -302, 216, -480,
	-305, 2, -282, 2, -295, -524, 2, -321, 216, -299,
	-301, -305, -303, 2, 2, 2, 2, -310, 2, -529,
	216, 2, 28, 28, 556, 392, 244, 519, 606, -371,
	-313, -314, -520, 8, -364, -268, 603, -444, 2, -136,
	-119, 2, 183, -444, 216, 2, -136, 216, 2, -444,
	216, 2, -136, 216, 2, -268, 2, -608, 2, -532,
	216, -528, 10, -527, 5, 4, -535, -539, -536, 216,
	-268, 2, 295, 2, 2, 526, 2, 98, 503, 119,
	2, 422, -628, 443, 530, 2, 2, 2, 2, 2,
	2, 2, 503, -287, 2, -268, 183, 487, -310, 216,
	-311, 2, 456, -639, 404, -529, 216, 2, 556, -303,
	216, 2, -303, 232, 246, -282, 216, 2, 508, 506,
	508, 506, 188, 2, 244, 2, 244, 2, -481, 2,
	-482, -476, -483, 599, 349, -491, 2, -490, -527, 552,
	-107, 601, -107, 601, 460, 601, -532, -299, -299, -444,
	2, -136, -119, 2, -444, 2, -136, 2, -268, 2,
	-133, -532, -132, 601, 188, -268, 2, -444, 2, -136,
	-119, 2, -444, 2, -136, 2, -217, 183, 2, 120,
	503, -192, 2, 183, 547, 2, 8, 2, 223, -532,
	451, 399, 175, 2, 465, 2, 466, 74, -418, 571,
	74, 188, 2, 188, 2, -401, 2, 565, 392, 188,
	2, 2, -592, 2, 348, 188, 2, 188, 2, 188,
	2, 188, 2, 188, 2, -191, 461, 524, 502, 396,
	252, 2, -136, 562, -119, 252, 251, -444, 562, 2,
	-613, 183, 449, -444, 2, 522, 261, 159, 188, -401,
	2, 188, 2, 188, 2, 5, 2, 397, 485, 2,
	250, 391, 485, 2, -299, 503, 556, 456, 120, 28,
	2, 448, 2, 2, 88, 89, 188, 2, 188, 2,
	203, 188, 2, 188, 503, -382, 603, 571, 2, -393,
	-480, -430, -431, -430, 519, -358, -360, -192, 465, 2,
	-229, -391, -231, 183, -421, -422, -232, 275, 170, 344,
	-233, -400, 28, 139, -400, -400, 60, 602, 602, 11,
	12, 76, 41, 592, 593, 594, 595, 181, 596, 597,
	590, 591, 589, 582, 583, 587, 256, 257, 95, 586,
	584, 86, 289, 442, 171, 172, 173, 174, 419, 230,
	34, 231, 14, 15, 16, -324, 33, 353, 274, 572,
	220, 469, 585, 17, 18, 19, 247, 249, 335, 50,
	223, -276, 364, -323, 500, 67, -444, -444, -444, -444,
	-444, -444, -444, -444, 360, 601, -387, -439, 599, -224,
	601, 601, 601, 601, -520, -224, -444, -458, 602, -378,
	601, -224, -458, -453, 601, 440, 599, 601, -461, -444,
	5, 5, 5, 601, 603, -573, 566, 183, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 387, -502, 601, -501, 601, -501,
	-501, 557, -499, 601, 574, 567, 601, -499, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 557, 606, -570, -354, 601, -383, -485, -444, 594,
	-383, -383, 348, -375, -444, 106, -404, 253, 314, 189,
	271, 434, 238, -441, 605, -441, -469, 574, -224, -477,
	-298, -224, -479, 601, -475, -469, -108, -520, -91, -104,
	-113, -136, -151, -196, -197, 594, -299, 601, 188, 601,
	603, -524, 188, -364, -282, -309, -268, -299, -315, -316,
	-321, -293, -268, 2, 138, -375, -588, 531, 450, 28,
	456, -530, -271, 38, -455, -494, -495, -544, 605, -543,
	-497, -507, -503, -506, 377, 381, -526, 54, 553, -509,
	243, 4, -535, -537, 240, 241, 477, 51, 401, 178,
	126, 125, 341, 56, 515, 516, 517, 518, 193, 194,
	58, 554, 489, 69, 70, -588, 531, 450, 28, 456,
	-530, 183, -530, 2, 2, 154, 2, 2, 2, -268,
	-245, 606, 64, 427, 154, -373, 216, -245, 154, -245,
	154, -322, 216, -321, -245, 154, -245, 606, 154, -245,
	606, 154, 603, 606, 154, -530, 2, -417, -523, -375,
	38, -431, 2, 127, 4, 5, -642, 606, 273, -327,
	288, 332, 212, 349, 569, 342, 131, -531, 5, 4,
	-454, -466, 127, 281, 243, -514, -516, 8, -515, 9,
	-517, 592, 593, -522, -521, 109, 603, -524, -242, 420,
	463, 363, -241, 24, 29, 143, 234, 318, 550, 160,
	-340, 235, -337, 367, 154, 481, 540, -602, -603, 447,
	510, 511, 90, 342, 463, 363, 420, 154, -397, -399,
	38, 118, 318, 362, 61, 227, 293, 294, 483, 559,
	154, 463, 363, 420, 363, -13, -257, 24, 143, -259,
	-254, 463, -603, 99, 420, 578, 425, 373, 495, 390,
	-603, -244, 481, 540, -602, -603, 447, 420, -243, -342,
	-337, 367, 154, 605, 24, 143, 420, 463, 363, -624,
	-625, 29, 420, 363, -596, -289, -567, 223, 565, 154,
	-289, -289, -480, 216, -617, 183, 2, -610, -132, 265,
	5, 10, -532, -132, -371, 606, 606, -524, 594, 449,
	448, 154, 154, 154, 154, 252, 183, 333, 333, 2,
	2, 2, 2, 2, 190, -605, -629, 2, 2, -299,
	216, -356, 348, -591, -372, 503, -299, 183, 333, 43,
	-302, 216, 2, -305, 556, -596, 333, -304, 216, -299,
	38, 601, 333, 2, -417, 2, 232, -567, 333, -481,
	-318, -299, -476, -318, 463, -292, 38, -441, -299, 602,
	606, -491, -491, -532, -205, 565, 188, 601, -217, 565,
	565, 252, -488, 606, -487, 223, -533, -532, -133, -532,
	423, 252, -532, -591, -282, 2, -299, 2, 503, 254,
	-532, -205, 223, -532, -532, -532, -523, 28, 466, 2,
	-191, 461, 524, 89, 466, 2, -299, 503, 120, 232,
	80, -617, 183, 2, -268, -594, 183, -589, 435, 450,
	531, -588, -299, 120, -299, 120, -299, 120, -299, -299,
	2, 2, 2, 2, 2, 85, 2, -136, -444, 2,
	85, 2, 46, 482, -613, 183, 2, 522, 2, 522,
	2, -268, -268, -268, 484, 273, -299, -299, -299, -300,
	-305, 504, 451, 449, -444, 2, -631, 2, 188, 183,
	2, 503, 232, 503, 232, 120, 188, 74, 120, 28,
	503, 446, 603, 4, -245, 606, -272, -229, -391, -523,
	-392, -391, -230, -229, -232, 183, 400, 541, 318, 467,
	258, -422, -421, 28, -444, -426, 177, 317, -444, -424,
	-446, 592, 593, -515, -517, -374, 342, -223, -223, -223,
	-361, -471, -444, 390, 232, -496, -494, -494, -297, -524,
	515, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, 274, 220, 469,
	50, 223, -444, 519, -444, -444, -444, -444, 311, 333,
	338, 528, 168, 538, 139, 342, -645, 497, 40, -451,
	-224, -379, 601, -465, 35, 480, 28, -458, 601, 2,
	-439, -444, -440, -325, -323, -268, 592, 593, 594, 595,
	596, 597, 582, 583, 584, 14, 15, 16, 587, 591,
	589, 590, 181, 95, 586, 289, 442, 86, 171, 172,
	173, 174, 256, 257, 17, 18, 19, 34, 585, -376,
	-375, -375, 602, 555, 28, 139, 594, 2, 602, 606,
	38, 602, -444, -376, -457, -453, -375, -464, -463, 562,
	-412, -413, 570, 298, 123, 214, 296, -414, 454, -518,
	8, -524, 594, -574, 176, 207, 601, 602, 2, 602,
	2, 602, -444, 2, 602, -444, 2, 602, -444, 2,
	602, -444, 2, 602, 2, 602, 2, -444, -444, -444,
	-444, -444, -444, -444, -375, 8, -518, -518, 515, 515,
	-518, -518, -518, -510, 377, 378, 379, 380, 276, 277,
	278, 279, 381, 382, 383, 384, 303, 304, 305, 306,
	299, 300, 301, 302, 307, 308, 309, 310, 198, 199,
	200, 201, 194, 195, 196, 197, -510, -406, 2, -512,
	-375, 4, 570, 298, 123, 214, 296, 454, 5, -406,
	2, -407, 2, -444, -375, -408, -445, -446, 592, 593,
	585, -324, -458, -409, 2, -444, -376, -444, 57, 268,
	521, -410, -444, 188, -375, -375, 2, -375, 2, -571,
	38, -375, -367, 606, 188, 38, 4, -367, -367, 601,
	602, 606, -405, 211, 292, 287, 246, -405, -475, -404,
	253, -402, 358, -402, -402, -469, -283, 599, 607, -524,
	-469, -468, -467, 38, -292, 355, -469, -469, 603, 602,
	-468, 600, -586, 601, 604, 604, 604, 604, 604, -299,
	601, -375, -524, 603, 486, 2, 602, 247, 247, 247,
	247, 247, 348, 441, 602, 519, -590, -308, -312, 504,
	2, 565, -106, 350, 602, 606, -366, 37, 599, 603,
	-518, 2, 2, -513, 557, 601, 601, -413, 601, 188,
	-590, -312, 504, 2, -365, 519, -268, 2, -299, -373,
	-245, 154, -373, -373, -245, 606, 154, -282, -303, -308,
	-310, -312, -268, -529, -530, -245, -304, -621, 602, 523,
	-432, -326, 400, 479, 421, 458, 499, 8, 9, 8,
	9, 606, -524, 606, -622, 93, 519, 78, 450, -261,
	282, 519, -435, 216, 78, -545, -285, 93, -546, -268,
	72, 537, 390, 187, 152, -622, 93, 390, -622, 93,
	2, 234, 93, 463, 484, 28, 60, -480, 41, 41,
	28, -620, 331, 269, 561, 188, 571, 503, 232, 450,
	519, 519, -480, -399, -494, 118, 293, 294, 60, -519,
	-514, 592, 593, -519, 60, -519, -519, -519, 565, -302,
	-480, 450, 519, 519, 519, 410, 410, -254, -149, 519,
	519, 28, -192, 428, 127, -643, 584, 410, 606, 41,
	41, 28, -620, 331, 269, 188, 519, -321, -283, 551,
	42, 551, 42, 551, 519, 42, 450, 519, 606, 42,
	519, 519, -13, 463, -597, -273, 105, 324, 286, 325,
	97, 321, 96, 320, 103, 322, 104, 323, 558, 336,
	63, 319, 297, 326, -274, -275, 369, 549, 120, -529,
	-13, -13, 463, 363, 420, 154, -618, 223, 28, -607,
	223, -488, 223, -488, -313, -268, 603, -136, -444, -444,
	-136, -444, -136, 46, 154, 154, 2, -639, 262, 601,
	-330, 333, 188, -364, -489, 244, 606, -372, -588, 154,
	-529, -398, -397, 333, -304, 216, 2, 154, -354, 333,
	148, 601, 398, 2, 154, -284, 216, -269, -268, -417,
	-248, 507, 154, -395, 547, -427, -136, 601, 127, 38,
	-427, -384, -385, -486, -386, -285, 601, -292, -441, -107,
	-490, 602, 602, 602, -204, 352, -203, -268, 5, -217,
	-355, -286, -285, 119, 402, 402, -211, 565, -132, -133,
	602, 606, -488, 223, 487, -205, -205, -488, -488, -299,
	183, -532, -205, -205, -205, 2, 2, 2, 2, -401,
	-299, -282, -321, -299, 28, 603, -530, -530, -312, -308,
	-401, -282, -401, -282, -401, -282, -401, -401, -136, -444,
	484, 2, 460, 183, 183, 603, -401, -357, 430, 2,
	398, 120, 503, 367, 232, -299, -321, -299, -321, -282,
	120, -282, 121, -299, 4, -480, -392, -230, 349, 258,
	467, -424, -425, -446, 440, 441, -425, 440, 441, 8,
	9, 8, 9, -234, 471, 337, -373, 606, -239, 39,
	135, 258, -299, 571, 150, -444, -444, 519, -645, 497,
	-451, 150, -444, 311, 338, 528, 168, 538, 139, 342,
	188, 601, -445, -445, 602, -377, -444, -444, 600, 609,
	602, 603, 602, -360, 606, -358, -444, -375, -375, 602,
	603, -375, -364, 600, 600, 606, 602, -462, -463, 144,
	-444, 519, 519, 519, 519, 601, 602, 603, -579, 359,
	601, 601, -444, 602, 602, 602, 602, 38, 606, 606,
	606, 602, 606, 606, 606, 602, 602, 602, 606, 602,
	571, 571, 602, 602, 602, 602, 606, 602, 606, 602,
	188, 602, 602, -415, 374, 602, 11, 12, 592, 593,
	594, 595, 181, 596, 597, 590, 591, 589, 582, 583,
	584, 86, 289, 442, 14, 15, 16, -324, 247, 223,
	-445, -445, -445, -445, 602, -449, -450, 188, 183, 38,
	-410, -410, -410, 602, 188, -375, 602, 602, 601, -572,
	291, 333, 602, -438, -437, 563, -485, -368, 2, -475,
	-294, -524, -438, -438, -375, -444, 253, 253, -403, 547,
	348, -405, -475, -468, -520, -443, -442, 185, 39, 135,
	327, 328, 329, 219, 186, -468, -292, -354, -468, -468,
	-524, -469, -469, -467, 602, -587, -520, 602, -369, -478,
	-566, -360, 603, -524, -214, -567, -193, 5, 338, -193,
	-193, -193, -193, -299, -530, 519, 519, 223, 25, 375,
	-494, 599, 600, 8, -524, 601, -518, -518, -518, -530,
	188, 188, 223, 188, -529, 2, -245, -373, -245, -245,
	-321, -322, -245, -245, -245, -396, 565, -521, -431, 535,
	83, 400, 515, -521, -241, 420, -285, -285, -299, -309,
	202, 411, -529, 333, -435, 216, -247, 333, -494, -293,
	601, -419, 567, 258, 258, 547, -285, -293, 258, 216,
	-285, 216, -293, 2, -293, -598, 400, 343, -444, 60,
	-338, 280, 398, 334, -242, 420, 463, 363, -136, -136,
	-136, -136, -136, 601, -621, 547, 138, -299, -321, -299,
	-309, -529, -304, 463, 363, 420, 330, -315, -519, -519,
	-397, 463, 363, 420, -309, -529, -302, -529, -253, 216,
	-268, -253, 216, 450, -282, 410, 571, 45, -643, -243,
	-136, -136, -136, -136, -136, 601, -283, -244, 420, 5,
	216, -285, 5, -285, 216, 5, -268, -285, -309, -529,
	-625, 24, 143, -285, -309, -529, -273, -532, 338, 543,
	-282, -596, -289, 450, 519, 519, -480, -614, -615, 204,
	433, 450, 436, -530, -132, -208, 565, -132, -202, 228,
	594, -593, -532, -268, 556, -268, -328, -331, -329, -285,
	-436, -435, -549, -550, -545, 274, 232, 537, 246, 169,
	-220, -221, 567, 565, 154, -319, -299, 599, -205, -532,
	-299, -489, -310, -311, 154, -354, 333, -529, 38, 154,
	601, 2, 2, -303, 348, 333, -284, 216, -249, 145,
	-643, -282, -438, -368, -394, -429, 430, 348, -355, 552,
	-292, -394, -370, 606, 188, 584, 603, -355, -484, 594,
	-107, -107, -205, 606, 601, 584, 584, 601, -532, 602,
	606, 603, 601, 584, 584, -213, 352, -212, 146, 260,
	245, 473, 474, 475, 476, 137, 472, 124, 316, -488,
	-532, -211, -133, 188, 188, -66, 565, 503, -205, 605,
	436, -268, -401, -401, -401, 460, 460, -268, -364, -295,
	-282, -299, -296, -321, 183, 183, -282, 541, -425, 349,
	285, -471, -240, 573, -299, 605, -444, -444, 150, 150,
	-444, -445, -445, -444, 150, 188, 601, -444, -455, 33,
	33, 602, 606, -440, -444, -323, 602, 555, -360, -360,
	602, 594, -524, 605, 602, -453, 147, -444, 513, 298,
	214, 296, -414, 296, -414, -414, -518, 5, -524, 594,
	-580, -288, 601, -268, 563, -359, 354, 602, -496, -494,
	-444, -444, -444, -444, -444, -518, -499, -499, -514, -514,
	-444, -449, -444, -496, -494, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, 139, 333, 342, -445, -450,
	-449, -444, -444, -494, 602, 602, 602, -375, -106, 601,
	291, -388, 207, -444, -488, 606, -388, -388, 602, -475,
	-475, 601, -444, 253, 600, 606, 608, 584, 584, -354,
	603, -467, -468, 600, 602, 606, 602, 606, -428, 38,
	602, -524, -438, -216, -215, 136, 53, 107, 134, 338,
	247, -530, -530, 450, 351, 5, 8, 599, 600, 603,
	-518, 602, 602, 602, -530, -530, 450, -530, -245, -245,
	119, 318, -444, 519, 519, 60, 223, 154, 333, 549,
	-551, -546, 152, -444, 601, 232, 601, 601, 2, -236,
	-237, -238, 143, 463, 24, -623, 2, 547, 154, -245,
	154, -245, 569, -338, 601, 601, 519, 450, -261, 519,
	565, -375, -444, -206, 127, -523, -603, 605, -603, 605,
	450, 519, 519, 450, 519, 519, 333, 154, 565, 167,
	167, 571, -253, 565, -375, 519, -498, 48, 26, 333,
	-303, -245, 154, 519, 519, 531, 463, -532, 338, -13,
	-309, -529, -304, 463, 363, 420, -595, -365, -595, 204,
	-312, -618, -488, -210, 352, -209, 146, 432, 137, 260,
	225, -488, -208, 188, 244, 565, -304, 2, 602, 602,
	606, 606, -552, -247, -299, -284, 232, 232, -291, -269,
	38, 346, 346, 601, -299, -87, 565, -487, -520, -599,
	565, 43, -302, 38, 154, -596, -136, -304, -492, -493,
	5, 38, -299, 154, 348, 333, -250, 267, -643, -528,
	-567, -360, -394, -383, 334, 91, 602, -438, -385, -368,
	-444, 2, 602, -203, -204, -532, -532, -532, -205, -217,
	-286, 2, -533, -532, -532, 606, 601, 584, 584, 584,
	584, 584, -211, -488, -132, -136, 352, -299, 594, -401,
	-344, -343, 367, 342, -344, 440, 440, 349, 177, 263,
	-239, -283, -444, -444, 150, 33, 33, -444, -444, -455,
	602, -444, -444, -375, 600, 5, -444, 602, 602, 8,
	-444, 602, 603, -581, -268, -444, 602, 60, 602, 602,
	606, 606, 602, 602, 602, 602, 602, 602, 602, -450,
	188, 139, 342, 601, 602, 602, -106, -452, 210, 60,
	-475, -452, -452, -403, -364, -475, -442, -283, 599, -283,
	599, -524, -520, -478, 601, 603, -215, 584, -532, -532,
	-193, 565, -312, 600, 2, 599, -524, 602, -312, 119,
	-285, -285, 503, 440, -253, 390, -435, 154, -553, 93,
	-555, 76, 169, 102, 333, 338, 537, 390, 72, 127,
	348, 407, -633, -634, -635, 38, 576, 577, 602, -362,
	-472, -566, 601, -268, -362, -364, 333, 492, 127, 348,
	333, 127, 348, 560, 119, 2, 531, 79, -285, -293,
	-364, -364, -299, -309, -529, 161, 602, 606, 584, 2,
	594, 594, -309, -529, -304, -309, -529, -302, 154, -253,
	365, 167, 161, 602, -283, 5, 5, 154, -280, 76,
	-285, 5, -285, -303, 119, 450, 519, 519, 348, 348,
	351, -614, -615, -208, 606, 601, 584, 584, -208, -533,
	-132, 2, -354, -345, 234, -285, -550, -547, -548, 390,
	-436, -554, -556, 169, 390, -332, 601, -284, -269, 601,
	-136, 2, -219, -218, -268, 5, 601, -330, 352, 600,
	-601, 352, -600, 117, 137, -529, -398, -136, -304, -354,
	602, 606, 148, -420, 547, -283, -299, 154, -251, 266,
	-643, -528, -248, -423, -421, 140, 601, 348, -136, -360,
	584, 602, 602, 119, 602, -212, -213, -532, -132, -532,
	-532, -532, -211, -488, -67, -68, 232, 93, 372, -296,
	503, 232, 601, 601, -239, -444, -444, -444, 602, -360,
	-524, 594, -575, 367, 602, -471, -444, -444, -445, 188,
	601, -455, 602, -576, 564, -444, -389, -390, -444, 438,
	108, 208, -576, -576, 602, -520, -520, 2, -532, 2,
	519, 599, 2, 188, 223, 38, 410, -435, -293, -297,
	-290, -268, 169, 216, 338, 560, -419, 258, 601, -445,
	541, -299, 601, 2, 215, 215, 30, 60, -636, 131,
	237, 602, 606, -473, -279, -268, -444, -473, 602, 602,
	338, 541, 338, 560, -444, 541, -494, 601, -245, -245,
	602, 602, -444, 519, -523, 100, -521, 2, -603, -253,
	-282, -444, 519, 5, -245, -297, -245, -245, -280, 531,
	-309, -529, -304, -619, 504, 457, 532, 451, 191, 439,
	-619, 183, -209, -210, -532, -132, -208, 38, -335, 236,
	2, -552, 258, -290, 258, 226, 153, -362, 601, 601,
	-364, -632, 565, 602, 606, 584, 584, -328, -220, -88,
	-89, 520, -487, 606, 601, 584, -354, 38, 5, 601,
	601, -268, 348, 601, -283, -263, 92, -643, -528, -249,
	-394, 334, -364, 93, -423, -451, -205, 601, -205, 602,
	606, 28, 601, 28, 601, -299, -321, -375, -375, 602,
	-360, 60, 606, 602, 602, -445, -455, 602, -577, -578,
	-288, 606, 601, 601, 464, 600, 600, -530, 2, -530,
	-253, 390, -268, -555, -290, 333, 547, -444, -445, -270,
	601, -444, 601, 601, 38, 127, 237, 132, 221, -434,
	-637, 101, 493, 224, -472, -239, 602, -433, 547, 407,
	-445, -280, -362, 601, 601, 601, 584, 188, 601, -498,
	-245, -303, 519, 2, 2, 188, -595, 602, -609, 405,
	-136, -339, -340, 223, 601, -333, 81, 94, 128, 215,
	192, 233, 484, 490, 28, -333, 602, -362, -362, 602,
	-334, 348, 119, 318, -218, -521, -521, 602, 38, -89,
	9, -600, -601, -444, 38, -136, -492, -362, -299, -362,
	348, -255, -254, 275, -528, -250, 602, -293, -394, -533,
	-68, -364, -364, 602, 602, -582, 398, 441, 209, -375,
	-361, 602, 606, 38, -390, 2, 2, 2, 410, 154,
	211, 602, -557, 290, -268, 602, -398, -398, 38, 132,
	221, -335, 601, -240, -473, -335, 211, -299, -604, 547,
	602, -347, -346, -343, -349, -348, -343, -375, -521, 100,
	365, -375, -280, -530, -530, 348, -611, 189, -610, 5,
	10, -220, 365, -363, -474, -285, -433, 602, 602, 82,
	119, -345, -136, 602, -136, 602, 602, -420, 602, -299,
	-252, -534, 410, 412, -643, -251, -438, 602, 602, 602,
	602, -583, -584, 50, 534, 109, -444, -583, -583, -578,
	-580, 169, 565, -558, -561, -560, 581, 470, 189, 366,
	602, 492, 559, 602, 602, -341, -337, -364, 565, -354,
	-444, -433, 602, 606, 552, 602, 606, 552, 602, 188,
	602, -245, -616, 565, -245, -619, -207, 565, 46, -334,
	-299, 602, 606, -434, -433, -341, 389, 133, 143, -335,
	-632, -433, 601, -434, 601, -260, -259, -643, -514, -263,
	140, -205, -585, 152, -584, 386, 182, 440, 386, 182,
	-585, -585, -290, 55, -560, 581, -561, 581, 541, 133,
	-636, 602, 55, -557, -335, -346, 223, -348, 188, 365,
	204, 188, 448, -610, 30, -262, -261, 601, -474, -335,
	-434, -221, 565, 441, 441, 2, -339, -334, -434, -362,
	-335, -362, -256, -257, -258, -364, -255, 334, 541, 109,
	207, 514, 318, 33, 584, -559, 318, 427, 64, 463,
	-559, -438, 584, -558, 601, 601, 351, -530, 352, -364,
	-341, -335, -438, 2, -220, -335, 602, -341, 602, -252,
	463, 440, 356, -584, -444, 23, 338, 127, -444, -636,
	-375, -375, -245, -204, 601, 602, -221, -341, -334, -341,
	-433, -221, -434, -260, -384, 602, 602, -204, -246, 64,
	427, -438, -221, -262, -221, -434, -438, -335, -256, -438,
	-336, -337, 519, 602, -438, -438, -335, -341, 601, -341,
	-221, -375, -221, -438, 602, -438, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 556, 557, 559, 560, 561, 563,
	564, 566, 568, 570, 571, 572, 574, 575, 577, 578,
	579, 580, 581, 583, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	652, 654, 0, 1426, 1428, 1430, 1432, 0, 808, 0,
	36, 37, 39, 0, -2, 335, 337, 339, 341, 0,
	372, 374, 375, 377, 379, 380, 381, 383, -2, 0,
	489, 490, 492, 494, -2, 0, 1021, 1023, 1025, 0,
	641, 643, 0, 1028, 1030, 1032, 0, 0, 664, 665,
	0, 1537, -2, 656, 658, 660, 662, 733, 735, 737,
	739, 741, 743, 745, 747, 749, 751, 752, 754, 756,
	758, 760, 762, 763, 765, 767, 769, 770, 772, 773,
	775, 777, 779, 781, 783, 785, 787, 789, 791, 793,
	795, 797, 799, -2, 802, 803, 804, -2, -2, 0,
	-2, -2, -2, 1444, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 433, 435, 437, 439, 441, 444,
	446, 448, 1595, 496, 498, 500, 502, 504, 506, 508,
	0, -2, 1609, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1568, 1570, 1572, 1574, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 558, 562, 565, 567, 569, 573,
	576, 582, 584, 586, 541, 542, 545, 2307, 2325, 2326,
	2327, 2330, 2331, 2332, 2333, 2334, 2335, 2792, 2873, 2874,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 543, 544, 1215, 0, 610,
	608, 2292, 611, 2589, 613, 615, 483, 484, 485, 486,
	487, 488, 0, 634, 624, 1607, 635, 637, 638, 639,
	640, 605, 603, 0, 634, 2361, 632, 1424, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	412, 1273, 1274, 1275, 1409, 1410, 2636, 1451, 0, 235,
	653, -2, -2, 2757, -2, 687, 688, -2, -2, 702,
	706, 697, 2761, 0, 2639, 2623, -2, 709, 1427, 1429,
	1431, 806, 807, 2311, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	245, -2, -2, -2, -2, 0, 0, 2684, 2413, 2260,
	2327, 2263, 2258, 336, 338, 340, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 373, 376, 378, 382, -2,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 1084, 1085, 1331, 0, 0, 0,
	-2, 491, 493, 546, 547, 0, 1596, 1596, 554, 555,
	-2, 0, 0, 0, 0, 306, 296, 1022, 1024, 1026,
	1027, 0, 0, 0, 0, 0, 642, 644, 0, 0,
	275, 1029, 1031, 1033, 1034, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 657, 659, 661, 663, 734, 736,
	738, 740, 742, 744, 746, 748, 750, 753, 755, 757,
	759, 761, 764, 766, 768, 771, 774, 776, 778, 780,
	782, 784, 786, 788, 790, 792, 794, 796, 798, 800,
	801, 814, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 916, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 1002, 0, 0, 817,
	820, 821, 822, 823, 824, 825, 0, 889, 914, 915,
	925, 805, 0, 1255, 1597, 1453, 1434, 1448, 1453, 1436,
	1437, 1438, 1439, 1440, 1445, 1447, 1441, 1442, 1443, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 60, 434,
	436, 438, 440, 442, 445, 447, 449, -2, 1566, 1567,
	497, 499, 501, 503, 505, 507, 509, 645, 0, 647,
	0, 819, -2, 0, 1601, 1601, 1601, 0, 0, 1567,
	1565, 0, 650, 651, 713, 714, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 2134, 1962, 0, 715, -2,
	1995, 1997, 2732, 2562, 2757, 2133, 1999, 2000, 2001, 2002,
	2003, 0, 2005, 2006, 2007, 2008, 2009, 2010, 0, 2012,
	0, 2017, 2018, 2019, 0, 2739, 2237, 2321, -2, 0,
	0, 2745, 2317, 0, 2100, 2035, -2, -2, 2344, 2323,
	1806, 1807, 1808, 1809, 1810, -2, -2, 2775, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 0,
	2720, 2740, 2741, 2746, 2748, 2742, 2729, 2060, 2427, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1833, 1842, -2, -2, -2, -2, -2, -2,
	-2, 2733, 2734, 2751, 2754, 2760, 2765, 2766, 2738, 2747,
	2774, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 1834, -2, -2,
	-2, -2, 1584, 2603, 1587, 1215, 1585, 1569, 1571, 0,
	1573, 0, 0, 0, 1578, 1604, 1602, 0, 1653, 1582,
	1583, 1676, 1676, 1700, 0, 1681, 0, 1700, 1596, 1727,
	0, 1687, 2628, 2036, 2037, 0, 2327, 2322, -2, -2,
	2772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 612, 614, 0, 0, 0, 633, 1606,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 2740, 0, 0, 0, 424, 0, 426, 427,
	428, 429, 430, 431, 432, 205, 2740, 514, 539, 0,
	205, 2740, 517, 205, 2740, 520, 0, 523, 1329, 205,
	2740, 526, 2288, 205, 2740, 529, 531, 2296, 205, 2740,
	535, 2303, 2301, 536, 0, 538, 225, 221, 222, 223,
	224, 1420, 1421, 1422, 1423, 0, 1450, 1330, 655, 0,
	681, 0, 685, 686, 2728, -2, 0, 2648, 690, 691,
	-2, 693, 1454, 1458, 1459, 1460, 1461, 1462, 0, 0,
	0, 0, 1467, 0, 0, 0, 0, 682, 683, 700,
	701, 707, 710, 0, 809, 810, 811, 812, 813, 72,
	0, 2740, 1727, 74, 0, 2282, 2352, 2353, 2354, 2355,
	2356, 2773, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2775, 78, 0, 2740, 83, 0, 2740, 0,
	-2, 96, 0, 108, 0, 2285, 117, 0, 2740, 0,
	2257, -2, 0, 217, 297, 298, 299, 0, 1059, -2,
	0, 1267, 1269, 1269, 0, -2, 0, 0, 0, 1012,
	2254, 2259, 1013, 2278, 1014, 2264, 0, 344, 345, 346,
	347, 348, 0, 349, 2740, 351, 352, 0, 354, 355,
	2740, 357, 358, 0, 360, 0, 362, 0, 257, 261,
	2740, 309, 310, 2340, 2341, 2348, 2349, 2350, 2351, 2740,
	386, 388, 0, 390, 391, 0, 393, 0, 0, 0,
	397, -2, 413, 0, 410, 400, 401, 403, 404, 405,
	406, 407, 0, 453, 451, 2293, 0, 0, -2, 2740,
	0, 1056, 0, 0, 1309, -2, 0, 1260, 0, 1316,
	2740, 1312, 0, -2, 0, 1594, 2740, 1471, 1088, 1089,
	1090, 1091, 1739, 480, 0, 1502, 0, 1504, 0, 1523,
	1733, 1676, 0, 0, 1738, 0, -2, 599, 2310, -2,
	549, 0, 550, 0, -2, 0, 323, 0, 0, 1037,
	1039, 1040, 1042, 1043, 1046, 1047, 1048, 1049, 0, 1051,
	1713, 276, 278, 0, 0, 0, 1036, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 0, 0, 666, 0,
	0, 815, 816, 0, 0, 832, 833, 834, 0, 323,
	2640, 2598, 2448, 841, 0, 844, 847, -2, 0, 0,
	0, 0, 851, 0, 856, 857, 858, 0, -2, 0,
	865, 867, 1020, 869, 0, 0, 871, 0, 875, 0,
	878, 0, 880, 0, 882, -2, -2, -2, 890, 891,
	-2, 896, -2, 0, 900, -2, 0, 903, 0, 906,
	-2, 0, 916, 912, 913, 0, 0, 0, 0, 933,
	934, 0, 943, 0, 946, 947, 948, 0, 952, 953,
	0, 955, 956, 957, 958, 0, 2711, 2645, 2413, 0,
	965, -2, 971, 973, 0, -2, 0, 989, 0, 993,
	0, 0, 1001, 0, 0, 818, 0, 826, 827, 205,
	1731, 1433, -2, 1435, 0, -2, 0, 646, 0, 649,
	1626, 1552, 1549, 0, 1623, 1624, 1553, 0, 0, 0,
	1560, 0, 1599, 1600, 0, 0, 0, 1539, 1540, 0,
	0, 0, 0, 2139, 2140, 2141, 2142, 2155, 2143, 2144,
	2154, 2152, 2153, 2145, 2146, 2151, 2165, 2166, 2156, 2157,
	2147, 2160, 2158, 2159, 2161, 2162, 2163, 2164, 0, 0,
	2170, 0, 2148, 2149, 2150, 2178, 0, 0, 2179, 0,
	2181, 0, 2171, 2167, 2168, 2169, 0, 1941, 1943, 2245,
	0, 0, 0, 2177, 2172, 2173, 1879, 1880, 1881, 1882,
	1883, 1916, 1920, 1921, 0, 0, 1996, 2242, 2241, 1998,
	0, 0, 2193, 0, 2011, -2, 0, 2134, 2188, 0,
	0, 2020, 2021, 2022, 0, 0, 2193, 0, 0, 2236,
	2032, 2033, 1871, 0, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1819, 0, 1821, 0, 1822,
	1823, 1830, 1843, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 2217, -2, 0, 0, 0,
	0, 1835, 0, 1586, 0, 0, 1657, 2246, 2250, 2251,
	1657, 1657, 0, 0, 2194, 1724, 1724, 0, 0, 1719,
	1719, 1719, 1717, 1700, 0, 1700, 1710, 0, 1700, 1700,
	0, -2, 1681, 0, 0, 1710, 0, 1694, 587, 589,
	591, 593, 594, 595, 597, 1728, 1729, 0, 0, 0,
	0, 2328, 0, 0, 0, 0, 2300, 0, 0, 2313,
	0, 0, 2287, 369, 0, 0, 0, 2694, 2639, 0,
	-2, 617, 636, 1596, 0, 2196, 1754, 1758, 0, 1760,
	1761, 1762, 1763, 1764, 0, 0, 1755, -2, 1831, 1833,
	1854, 2345, 2346, 2347, 1814, 1815, 1816, 1817, 1818, 1826,
	1813, 1813, 1813, 1824, 1853, 1845, 1853, 1849, 1799, 1800,
	1801, 1836, 1837, 1838, 1839, 0, 2694, 2639, 0, -2,
	626, 0, 0, 1534, 414, 0, 421, 422, 423, 0,
	510, 0, 203, 204, 0, 205, 2740, 515, 0, 518,
	0, 205, 2740, 2252, 524, 0, 527, 0, 0, 533,
	0, 0, 0, 0, 0, 205, 1536, 0, 0, 0,
	0, -2, 695, 703, 704, 705, 0, 1456, 0, 1463,
	724, 725, 726, 1465, 1466, 0, 1468, 698, 727, 728,
	729, 730, 731, 732, 0, 2266, 2267, 2268, 2269, 2272,
	2273, 0, 0, 696, 717, 699, 0, 711, 118, 1406,
	0, 0, 161, 0, 1406, 1406, 0, 0, 0, 0,
	188, 0, 1127, 0, 0, 0, 0, 133, 146, 157,
	130, 131, 0, 0, 0, 0, 0, 0, 84, 1237,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 98, 99, 0, 0, 104,
	105, 0, 145, 0, 0, 0, 0, 0, 1499, 0,
	140, 120, 0, 0, 133, 147, 159, 0, 192, 194,
	1124, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	227, 0, 0, 0, 1261, 0, 0, 0, 1593, 0,
	0, 0, 0, 2740, 1404, 0, 1389, 0, 1713, 2498,
	-2, -2, 276, 1713, 1011, 0, 0, 2328, 2262, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 0, 389,
	392, 394, 395, 396, 0, 1308, 0, 402, 443, 1186,
	2740, 0, 0, 470, 465, 0, 467, 0, 0, 0,
	1236, 2740, 1234, 2297, 0, 1258, 0, 1215, 2740, 2295,
	0, 0, 0, 1317, 2337, 1326, 1330, 1489, 0, 482,
	0, 1505, 1507, 0, 0, 1734, 0, 1736, 1676, 1596,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 1050, 282, 0, 1712, 0, 0, 311, 1713, 276,
	2614, 1035, 323, 323, 1713, 668, 1713, 670, 0, 0,
	835, 836, 0, 323, 323, 323, 842, 843, 845, 846,
	-2, -2, -2, -2, 848, 849, 940, 0, 0, 0,
	939, 859, 0, 861, 864, 868, 0, 1005, 2623, 2639,
	2694, 1018, 940, 2413, 940, 2413, 940, 2413, 940, 940,
	884, 928, 936, 895, 902, 0, 897, 901, 904, 907,
	0, 909, 917, 0, -2, 0, 920, 0, 922, 0,
	924, 940, 941, 944, 951, 954, 959, 960, 961, 962,
	2308, 963, 964, -2, 968, 969, 0, 980, 985, 986,
	982, 0, 0, 0, 0, 0, 0, 996, 997, 0,
	0, 1004, 0, 828, 1254, 0, 1446, 1626, 1552, 648,
	1543, 1625, 1544, 1551, 1554, 0, 0, 1556, 0, 1558,
	0, 1621, 1622, 1629, 1630, 0, 1640, 1641, 1633, 0,
	-2, 0, 0, 1636, 1637, 1562, 0, 1579, 1580, 1581,
	1610, 1613, 1345, 0, 2873, 1875, 1749, 1876, 1877, 2281,
	0, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, -2, -2, -2, -2, -2, -2, -2, -2, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	-2, -2, -2, 1917, 1918, 1919, -2, 2180, 2182, 0,
	2245, 0, -2, 0, -2, -2, -2, -2, 1938, 0,
	1940, 1945, 1947, 1949, 0, 0, 0, 0, 2244, 1959,
	2228, 2229, 0, 0, 2136, 2137, 2138, 1944, 0, 1963,
	2243, 2240, 0, 0, 2174, 0, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 0,
	2192, 1609, 2024, 0, 0, 0, 0, 2031, 2016, 2190,
	0, 2189, 0, 0, 0, 2200, 0, 2235, 2231, 0,
	2279, 1870, 1857, 1858, 1859, 1860, 1861, 1862, 1872, 0,
	2276, 2314, 2320, 2110, 0, 0, 0, 2061, 2062, 2063,
	2064, 2065, 0, 2067, 2068, 0, 2070, 2071, 0, 2073,
	2074, 0, 2076, 2077, 2078, 2079, 2080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 0, 0, 2082, 0,
	2203, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2084, 0, 2086, 2194, 2214, 0, 0, 1964, 0, 0,
	0, 0, 2134, 0, 2089, 2194, 2222, 0, 0, 0,
	0, 0, 2194, 0, 2227, 0, 2096, 0, 2098, 1588,
	0, 0, 1744, 0, 0, 0, 2249, 1744, 1744, 0,
	1652, 0, 0, 1720, 1721, 1722, 1723, 0, 0, 1724,
	0, 1714, 1718, 1715, 1716, 1710, 1673, 0, 0, 2283,
	1710, 1679, 1709, 0, 1215, 1699, 1710, 1710, 0, -2,
	1683, 1700, 0, 0, 588, 590, 592, 596, 598, 0,
	0, 1609, -2, 0, -2, 325, 1214, 0, 0, 0,
	0, 0, 0, 607, 609, 0, 0, 530, 0, 0,
	623, 0, 601, 0, 604, 0, 1745, 1748, 0, 0,
	1759, 1765, 1766, 0, -2, 0, 0, 1855, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 425, 540, 205,
	512, 0, 205, 205, 521, 0, 0, 205, 532, 205,
	2304, 205, 2302, 226, 537, 1535, 238, 0, 684, 0,
	1455, 1464, 0, 721, 0, 723, 0, 2270, 2274, 2271,
	2275, 0, 712, 0, 0, 0, 0, 1405, 0, 1352,
	0, 0, 165, 2740, 0, 207, 0, 0, 1179, 2289,
	0, 1169, 0, 0, 2434, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 1239, 1241, 1248, 1250, 0, 1244,
	2277, 0, 0, 1245, 0, 1247, 1249, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1270, 0,
	0, 1271, 1272, 1477, 1478, 0, 1498, 1499, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 2256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 1304, 1302, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 0, 0, 0, -2,
	1265, 1266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 314, 2255, 2265, 0, 1044, 1045, 350,
	353, 356, 359, 244, 0, 0, 398, 0, 0, 1094,
	1069, 0, 0, 452, 323, 0, 0, 466, 470, 2306,
	1054, 1232, 1235, 0, 1215, 2740, 1281, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 2740, 2284, 2336, 2337,
	1491, 1499, 0, 1744, 0, 1521, 1508, 0, 0, 0,
	1521, 1525, 1526, 1528, 1529, 0, 0, 1735, 1741, 548,
	600, 1596, 1596, 323, 321, 2565, 319, 316, 318, 0,
	0, 1511, 1513, 0, 0, 0, 270, 0, 279, 1713,
	277, 0, 282, 0, 0, 0, 464, 667, 672, 830,
	0, 323, 838, 839, 840, 886, 930, 938, 984, 850,
	852, 853, 854, 0, 0, 0, 1019, 1015, 1016, 1017,
	870, 940, 873, 940, 876, 940, 879, 881, 899, 905,
	918, 911, 919, 0, 0, 0, 932, 949, 0, 967,
	0, 0, 0, 0, 0, 0, 0, 990, 991, 992,
	994, 999, 998, 1003, 829, 1732, 1547, 1548, 1550, 0,
	1559, 0, 0, 1635, -2, -2, 1634, 1638, 1639, -2,
	-2, -2, -2, 1555, 0, 1564, 1561, 0, 1620, 1343,
	1344, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1960, 0, -2, 1939, 1942, 1946, 1948, 1950, 0, 0,
	0, 0, 0, 0, 2183, 0, 2185, 1961, 2238, 2241,
	2176, 0, 2132, 0, 0, 1608, 1609, 1609, 0, 2030,
	0, 2191, 0, 2198, 2199, 0, 2023, 0, 2232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 2066, 2069, 2072, 2075, 0, 0, 0,
	0, 2055, 0, 0, 0, 2059, 1825, 1811, 0, 1853,
	1851, 1852, 1846, 1853, 1850, 1803, 0, 1802, 0, 2081,
	0, 2083, 2085, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1968, 1969, 1989, 2088, 2220, 2221, 0, 0, 0,
	0, 0, 0, 2094, 0, 2226, 2095, 2097, 1596, 0,
	1589, 0, 1654, 1643, 1743, 0, 2247, 1713, 1656, 1658,
	2248, 2286, 1643, 1643, 0, 2195, 0, 0, 1704, 0,
	0, 0, 1706, 1677, 0, 0, 1671, 0, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1678, 1215, 1708, 1680, 1684,
	2314, 0, 1710, 0, 1695, 0, 1697, 1730, 0, 1689,
	1692, 0, 0, 2329, 1744, 0, 363, 370, 371, 364,
	365, 366, 367, 0, 616, 0, 0, 0, 0, 0,
	2197, 0, 1750, 0, 1756, 0, 0, 0, 0, 625,
	0, 0, 0, 0, 1533, 420, 511, 205, 516, 519,
	2253, 205, 525, 528, 534, 234, 0, 680, -2, 719,
	720, 722, 0, 718, 162, 1406, 0, 0, 1348, 1350,
	1354, 1360, 1363, 0, 167, 2740, 179, 0, 1143, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 2740,
	205, 2740, 205, 182, 184, 187, 0, 191, 189, 0,
	1131, 0, 0, 1134, 119, 1406, 0, 0, 122, 126,
	134, 135, 138, 0, 0, 0, 144, 0, 0, 0,
	1365, 1369, 1377, 0, 0, 0, 1242, 1243, 1246, 1252,
	85, 0, 0, 0, 1373, 1375, 1381, 97, 100, 2740,
	2298, 102, 2740, 0, 1347, 0, 0, 0, 0, 193,
	124, 128, 136, 137, 139, 0, 1383, 121, 0, 220,
	0, 0, 210, 205, 2740, 0, 212, 0, 213, 214,
	228, 0, 0, 0, 1057, 1058, 1303, 1256, 1257, 0,
	1268, 1262, 0, 0, 0, 0, 0, 1385, 1386, 0,
	0, 0, 1404, 1401, 1713, 240, 0, 1713, 248, 0,
	2261, 0, 262, 385, 0, 0, 0, 0, 1093, 1197,
	1095, 1097, 1098, 1099, 207, 0, 2337, 1169, 2487, 2337,
	0, 1064, 0, 0, 0, 458, 454, 0, 463, 469,
	468, 474, -2, 0, 0, 0, 0, -2, 0, 0,
	1319, 1313, 1314, 0, 0, 0, 0, 2740, 1493, 1499,
	0, 1594, 1609, 481, 1500, 1521, 0, 0, 0, 1510,
	1506, 1503, 1744, 0, 0, 0, 0, 0, 1737, 1740,
	551, 552, 300, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 280, 0, 283, 0, 0,
	0, 288, 289, 290, 291, 292, 293, 0, 0, 282,
	312, 272, 1713, 0, 0, 669, 0, 0, 837, 0,
	860, 863, 872, 874, 877, 921, 923, 940, 950, 974,
	975, 1121, 0, 1121, 0, 0, 995, 1557, 0, 1632,
	1563, 1614, 1615, 0, 1345, 0, 1878, 1923, 0, 0,
	-2, 0, 0, 1927, 0, 0, 0, -2, 0, 0,
	0, 2184, 2186, 0, 2240, 2175, 2025, 0, 0, 0,
	2029, 2013, 2014, 0, 2135, 2201, 2230, 2234, 0, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 0, 2280, 2315, 2319,
	2108, 2109, 2113, 2294, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1848, 0, 0,
	2202, 2213, 2215, 1965, 1966, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, -2, -2, -2, 1983, 1984,
	1985, -2, -2, -2, 1990, 0, 0, 0, 2216, 2218,
	2219, 2223, 2224, 0, 2091, 2092, 2093, 2225, 0, 1596,
	1590, 1651, 0, 1742, 1655, 0, 1651, 1651, 1603, 1702,
	0, 0, 1726, 0, 1674, 0, 1675, 0, 0, 1707,
	0, 1682, 1685, 1686, 1696, 0, 1688, 0, 1691, 0,
	2025, -2, 324, 326, 328, 0, 331, 332, 0, 0,
	0, 619, 620, 0, 618, 602, 0, 0, 1752, 0,
	0, 1828, 1832, 1856, 628, 629, 0, 627, 513, 522,
	236, 0, 1711, 0, 0, 0, 0, 0, 0, 206,
	1141, 1178, 0, 0, 0, 1168, 0, 0, 1184, 169,
	170, 171, 0, 0, 0, 0, 180, 0, 0, 177,
	0, 186, 190, 1128, 0, 0, 0, 0, 1353, 0,
	0, 0, 141, 142, 143, 0, 148, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	1484, 0, 1474, 0, 0, 0, 208, 0, 0, 0,
	1342, 230, 0, 0, 0, 0, 0, 1306, 1307, 1264,
	1366, 1370, 1378, 0, 0, 0, 0, 634, 0, 639,
	1403, 0, 248, 246, 0, 249, 0, 252, 253, 0,
	255, 248, 242, 0, 0, 0, 1215, 399, 1067, 1185,
	0, 0, 1187, 1100, 1104, 0, 2337, 2337, 0, 2291,
	0, 1065, 0, 0, 1186, 450, 0, 457, 0, 471,
	0, 0, 1236, 0, 0, 1259, 1279, 1215, 0, 1318,
	1320, 0, 1328, 0, 0, 0, 1495, 1499, 0, 1488,
	1489, 1628, 1501, 1519, -2, 0, 0, 1609, 1527, 1524,
	1530, 1531, 0, 320, 0, 315, 317, 0, 303, 0,
	1512, 1514, 0, 1038, 1041, 0, 0, 0, 0, 0,
	0, 0, 271, 282, 1713, 307, 0, 831, 855, 931,
	976, 1120, 0, 0, 978, 0, 0, 1631, 1618, 1619,
	1616, 1345, 1925, 1929, 0, 0, 0, 1931, -2, 0,
	1953, -2, -2, 2187, 2239, 2004, 1609, 2026, 2028, 2015,
	2233, 1873, 0, 2115, 2112, 0, 2099, 0, 2050, 2051,
	0, 0, 2054, 2056, 2057, 2058, 1812, 1805, 1804, 2212,
	0, 0, 0, 0, 2090, 1591, 0, 2104, 0, 0,
	1659, 2104, 2104, 1703, 0, 1705, 1672, 1660, 0, 1669,
	0, 2315, 1698, 1690, 0, 0, 329, 0, 333, 334,
	368, 0, 0, 1746, 1751, 0, 1757, 1827, 0, 237,
	163, 164, 1357, 1361, 1358, 0, 166, 0, 1142, 0,
	1145, 0, 0, 0, 0, 1152, 1169, 0, 0, 0,
	0, 0, 0, 1171, 0, 1170, 0, 0, 1201, 0,
	1333, 1340, 0, -2, 0, 0, 0, 173, 196, 0,
	0, 0, 0, 199, 1407, 175, 0, 0, 205, 205,
	0, 0, 1349, 1351, 1364, 0, 0, 0, 0, 151,
	0, 0, 1367, 1371, 1379, 1374, 1376, 1382, 0, 103,
	0, 1485, 0, 0, 1384, 218, 219, 0, 205, 0,
	205, 211, 205, 1342, 0, 0, 0, 0, 0, 0,
	0, 1387, 1388, 239, 0, 0, 0, 0, 241, 313,
	248, 387, 0, 1115, 0, 1197, 1189, 1190, 1191, 0,
	1096, 1196, 1198, 0, 0, 1101, 0, 0, 0, 0,
	1081, 1066, 0, 1077, 0, 0, 1094, 1069, 0, 455,
	472, 0, 475, 0, 478, 1055, 1233, 1276, 1215, 0,
	1310, 0, 0, 0, 0, 0, 0, 0, 1497, 1499,
	0, 1490, 1491, 1521, 1627, 0, 0, 0, 1509, 1628,
	0, 322, 323, 0, 323, 284, 0, 285, 286, 287,
	294, 295, 273, 274, 671, 673, 0, 0, 679, 1119,
	0, 0, 0, 0, 1617, 1933, -2, -2, 1954, 0,
	2316, 2318, 1609, 0, 2101, 1611, 0, 0, -2, 0,
	0, 0, 1592, 1575, 0, 1650, 1642, 1644, 1646, 2626,
	2408, 2739, 1576, 1577, 1725, 0, 0, 1693, 330, 621,
	0, 0, 1753, 0, 0, 0, 1359, 168, 0, 1146,
	1147, 2290, 1149, 0, 1151, 1153, 1154, 1155, 0, 1158,
	0, 2339, 0, 1163, 1166, 1167, 0, 0, 1180, 1202,
	0, 1211, 0, 1335, 1345, 1339, 0, 1337, 1213, 0,
	172, 198, 174, 200, 195, 0, 1342, 0, 176, 185,
	0, 0, 123, 0, 0, 2402, 154, 152, 150, 101,
	1346, 125, 0, 220, 229, 1341, 231, 215, 205, 0,
	1368, 1372, 1380, 0, 1395, 1396, 1397, 1398, 0, 0,
	0, 0, 250, 0, 251, 254, 0, 0, 1130, 0,
	1068, 1188, 0, 1199, 1200, 0, 0, 0, 0, 0,
	0, 1071, 0, 1070, 0, 0, 0, 0, 0, 456,
	459, 0, 462, 0, 0, 0, 0, 0, 1321, 1319,
	0, 1327, 0, 0, 0, 1473, 0, 0, 1492, 1493,
	479, 1515, 0, 0, 1521, 1532, 302, 0, 305, 281,
	0, 675, 0, 677, 0, 977, 979, 0, 0, 2027,
	2119, 0, 0, 2052, 2053, -2, 0, 1993, 2103, 2105,
	0, 0, 0, 0, 0, 1661, 1670, 622, 1747, 630,
	1355, 0, 1362, 1144, 1148, 0, 0, 0, 1159, 1219,
	0, 0, 1236, 1236, 1172, 0, 0, 1205, 1206, 1115,
	0, 1207, 1208, 1209, 1334, 1620, 1340, 1115, 0, 0,
	197, 202, 0, 0, 0, 0, 0, 0, 0, 209,
	232, 1342, 0, 1399, 1400, 0, 0, 247, 266, 0,
	1277, 1069, 1129, 0, 0, 1102, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1103, 1213, 0, 0, 1177,
	1079, 0, 1082, 0, 1078, 1075, 1076, 1067, 0, 460,
	461, 476, 0, 477, 0, 1280, 0, 0, 1328, 0,
	0, 1480, 1472, 1499, 1494, 1495, 1744, 1518, 1522, 0,
	674, 0, 0, 987, 988, 0, 0, 0, 0, 2114,
	1612, 1994, 0, 0, 1645, 1647, 1648, 1649, 1356, 0,
	0, 1157, 1224, 0, 0, 0, 0, 0, 1173, 1203,
	1204, 1126, 0, 1338, 1336, 1182, 0, 1215, 178, 0,
	1213, 0, 1135, 0, 0, 1138, 0, 0, 155, 2402,
	153, 0, 205, 1392, 205, 0, 269, 0, 260, 258,
	259, 1071, 0, 0, 1193, 1195, 1211, 1213, 1126, 0,
	1083, 1115, 1081, 473, 1278, 1311, 1213, 0, 1211, 0,
	1487, 1499, 1481, 1482, 0, 1497, 0, 323, 676, 678,
	2111, 2131, 2120, -2, 2697, 2409, 0, 2131, 2131, 2106,
	2107, 0, 0, 1160, 1220, 1221, 0, 1216, 1217, 1218,
	2338, 1161, 1162, 1164, 1165, 1201, 1125, 0, 0, 1219,
	201, 1115, 1132, 0, 0, 1133, 0, 0, 158, 0,
	160, 233, 1390, 0, 1393, 0, 256, 0, 0, 1063,
	0, 1192, 0, 1115, 1211, 1069, 0, 0, 0, 1130,
	1071, 1211, 0, 1115, 0, 1476, 1486, 0, 1496, 1473,
	0, 304, 2116, 0, 0, 2122, 2123, 2124, 2125, 2126,
	2117, 2118, 1150, 0, 1222, 0, 1223, 0, 0, 0,
	1744, 1210, 0, 1224, 183, 1136, 0, 1139, 0, 156,
	0, 0, 0, 264, 265, 1060, 1062, 0, 1194, 1126,
	1115, 1744, 0, 1072, 0, 1074, 1069, 1080, 1115, 0,
	1126, 0, 1469, 1475, 1479, 2299, 1480, 1516, 0, 0,
	2128, 2129, 0, 0, 0, 1225, 0, 1228, 1229, 0,
	1226, 1181, 0, 1201, 0, 0, 1391, 205, 0, 0,
	1069, 1126, 1176, 1073, 1071, 1126, 1213, 1069, 1211, 1487,
	0, 2127, 2130, 2121, 1156, 1227, 1230, 1231, 1212, 1183,
	0, 0, 1394, 267, 0, 1118, 1744, 1069, 1063, 1069,
	1211, 1744, 1115, 1476, 1744, 1123, 0, 0, 1114, 1116,
	1117, 1174, 1744, 1061, 1744, 1115, 1324, 1126, 1470, 1517,
	1137, 1122, 0, 268, 1175, 1322, 1126, 1069, 0, 1069,
	1744, 0, 1744, 1325, 1123, 1323, 1140,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 590, 3, 596, 591, 3,
	601, 602, 594, 592, 606, 593, 603, 595, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 3,
	582, 584, 583, 587, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 599, 3, 600, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 589, 608, 585,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 586,
	57925, 588, 57926, 598, 57927, 604, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1509
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1632
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1699
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1795
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1827
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1851
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1912
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1913
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1962
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1986
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2005
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2026
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2036
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2045
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2056
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2062
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2093
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2184
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2230
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2471
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2478
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2808
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = nil
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3092
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3101
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = nil
		}
	case 324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3225
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3259
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3446
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3470
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "create access method")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplemented(sqllex, "create cast")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "create publication")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "create rule")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "create server")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3510
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3513
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3514
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplemented(sqllex, "drop server")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3665
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3700
		{

			sqlVAL.union.val = nil
		}
	case 471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "DELETE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3787
		{
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "DROP")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4013
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4079
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4095
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4103
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4111
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "DELETE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "INSERT")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "DELETE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "INSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4192
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4225
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4315
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4330
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "GRANT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4405
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			return helpWith(sqllex, "RESET")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "RESET")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "USE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "USE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return unimplemented(sqllex, "set from current")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4713
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4718
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.Low
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = tree.Normal
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.High
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4933
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.str = "client_encoding"
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.str = "timezone"
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5019
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5082
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5091
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = true
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = true
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = false
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5467
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5474
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = true
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = false
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5498
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5529
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = true
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = false
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5591
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5602
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5624
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5653
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5658
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5738
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5746
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5781
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5790
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5813
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5894
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6143
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6168
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6196
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6363
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6379
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{

			sqlVAL.union.val = nil
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.str = ""
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6424
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = nil
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6447
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6451
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6477
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6491
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6506
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6607
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6613
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6629
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6634
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.str = ""
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6777
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6881
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{

			sqlVAL.union.val = true
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = false
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6936
		{
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6940
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6943
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7043
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7081
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7161
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7163
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7322
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7331
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7339
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7355
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7417
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.str = ""
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = true
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7485
		{

			sqlVAL.union.val = true
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = false
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7500
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7514
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7526
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7538
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7548
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7558
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = nil
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7668
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7669
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7694
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7696
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7698
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7700
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7704
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7742
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7760
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7779
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7796
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7813
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = false
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = true
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = true
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = false
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7877
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7891
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.str = ""
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.str = ""
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7950
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7956
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8181
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8187
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8199
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8205
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8219
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8225
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8284
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = false
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.Types
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8373
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8377
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8388
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8436
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8473
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8489
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8527
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8532
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8541
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8560
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8564
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8607
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.str = ""
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8728
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{

		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8760
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.str = ""
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.str = ""
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.str = ""
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8815
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8829
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8938
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8965
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9060
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9075
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9255
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = true
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9431
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = nil
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9445
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = true
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = true
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9475
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9479
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9537
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9655
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9724
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9739
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9761
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9808
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9839
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9881
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9891
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9926
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9967
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10000
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = nil
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = true
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = false
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.str = tree.AstFull
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.str = tree.AstRight
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.str = tree.AstInner
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10120
		{
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.str = tree.AstHash
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.str = ""
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10212
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10224
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10234
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = true
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = false
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = true
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = false
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10296
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10304
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10323
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10333
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10353
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10402
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = types.Geography
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10464
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10472
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10506
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = nil
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = types.Int2
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = types.Int
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = types.Float4
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = types.Float
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = types.Bool
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = types.Float
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10598
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10604
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10626
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = types.String
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = true
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = false
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = types.Date
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10675
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10683
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10697
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10706
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10714
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10731
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = true
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = false
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = false
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = types.Interval
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10755
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10854
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = nil
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10884
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11280
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11410
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11519
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11545
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11569
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11599
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11610
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11611
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11635
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11701
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11826
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11902
		{
			return unimplemented(sqllex, "treat")
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11928
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.str = ""
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12064
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12077
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12145
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12174
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12590
		{
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12591
		{
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12663
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12744
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12760
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12769
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12780
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12789
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12797
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12814
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12907
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13046
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13053
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.str = ""
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
