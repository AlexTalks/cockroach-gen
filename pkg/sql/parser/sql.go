// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:667
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11227

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1252,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	429, 186,
	-2, 0,
	-1, 77,
	202, 1060,
	214, 1060,
	229, 305,
	325, 305,
	334, 858,
	365, 305,
	377, 858,
	414, 858,
	439, 305,
	464, 858,
	-2, 0,
	-1, 83,
	229, 309,
	-2, 0,
	-1, 84,
	118, 1252,
	208, 1252,
	449, 1252,
	450, 1252,
	-2, 0,
	-1, 100,
	133, 1223,
	151, 1223,
	164, 1223,
	211, 1223,
	241, 1223,
	284, 1223,
	294, 1223,
	444, 1223,
	-2, 1194,
	-1, 133,
	141, 747,
	228, 747,
	328, 717,
	382, 717,
	432, 747,
	-2, 0,
	-1, 135,
	4, 1254,
	21, 1254,
	22, 1254,
	23, 1254,
	24, 1254,
	25, 1254,
	26, 1254,
	28, 1254,
	29, 1254,
	35, 1254,
	40, 1254,
	41, 1254,
	42, 1254,
	43, 1254,
	44, 1254,
	45, 1254,
	46, 1254,
	47, 1254,
	48, 1254,
	50, 1254,
	51, 1254,
	52, 1254,
	54, 1254,
	55, 1254,
	56, 1254,
	57, 1254,
	58, 1254,
	62, 1254,
	63, 1254,
	64, 1254,
	65, 1254,
	67, 1254,
	68, 1254,
	69, 1254,
	73, 1254,
	74, 1254,
	75, 1254,
	76, 1254,
	77, 1254,
	78, 1254,
	79, 1254,
	82, 1254,
	83, 1254,
	84, 1254,
	85, 1254,
	87, 1254,
	89, 1254,
	90, 1254,
	91, 1254,
	93, 1254,
	95, 1254,
	96, 1254,
	104, 1254,
	105, 1254,
	106, 1254,
	107, 1254,
	109, 1254,
	110, 1254,
	111, 1254,
	113, 1254,
	114, 1254,
	115, 1254,
	117, 1254,
	118, 1254,
	120, 1254,
	121, 1254,
	124, 1254,
	125, 1254,
	126, 1254,
	128, 1254,
	129, 1254,
	131, 1254,
	132, 1254,
	134, 1254,
	135, 1254,
	136, 1254,
	137, 1254,
	138, 1254,
	139, 1254,
	140, 1254,
	141, 1254,
	142, 1254,
	143, 1254,
	144, 1254,
	145, 1254,
	146, 1254,
	147, 1254,
	148, 1254,
	150, 1254,
	156, 1254,
	157, 1254,
	158, 1254,
	159, 1254,
	163, 1254,
	165, 1254,
	169, 1254,
	170, 1254,
	171, 1254,
	172, 1254,
	173, 1254,
	174, 1254,
	176, 1254,
	177, 1254,
	179, 1254,
	180, 1254,
	182, 1254,
	183, 1254,
	184, 1254,
	185, 1254,
	186, 1254,
	187, 1254,
	188, 1254,
	189, 1254,
	190, 1254,
	192, 1254,
	193, 1254,
	195, 1254,
	196, 1254,
	197, 1254,
	198, 1254,
	202, 1254,
	203, 1254,
	204, 1254,
	205, 1254,
	208, 1254,
	209, 1254,
	210, 1254,
	212, 1254,
	214, 1254,
	216, 1254,
	218, 1254,
	219, 1254,
	220, 1254,
	222, 1254,
	226, 1254,
	227, 1254,
	228, 1254,
	229, 1254,
	230, 1254,
	232, 1254,
	233, 1254,
	235, 1254,
	236, 1254,
	238, 1254,
	239, 1254,
	242, 1254,
	243, 1254,
	244, 1254,
	247, 1254,
	248, 1254,
	249, 1254,
	250, 1254,
	252, 1254,
	253, 1254,
	254, 1254,
	255, 1254,
	256, 1254,
	257, 1254,
	258, 1254,
	259, 1254,
	260, 1254,
	261, 1254,
	262, 1254,
	264, 1254,
	266, 1254,
	267, 1254,
	268, 1254,
	269, 1254,
	270, 1254,
	271, 1254,
	273, 1254,
	275, 1254,
	277, 1254,
	279, 1254,
	280, 1254,
	281, 1254,
	282, 1254,
	283, 1254,
	286, 1254,
	289, 1254,
	290, 1254,
	291, 1254,
	292, 1254,
	295, 1254,
	296, 1254,
	297, 1254,
	299, 1254,
	301, 1254,
	302, 1254,
	303, 1254,
	304, 1254,
	305, 1254,
	306, 1254,
	307, 1254,
	308, 1254,
	309, 1254,
	310, 1254,
	311, 1254,
	312, 1254,
	314, 1254,
	315, 1254,
	316, 1254,
	317, 1254,
	318, 1254,
	319, 1254,
	320, 1254,
	321, 1254,
	322, 1254,
	324, 1254,
	326, 1254,
	327, 1254,
	328, 1254,
	329, 1254,
	330, 1254,
	331, 1254,
	332, 1254,
	333, 1254,
	334, 1254,
	335, 1254,
	336, 1254,
	343, 1254,
	345, 1254,
	346, 1254,
	347, 1254,
	348, 1254,
	349, 1254,
	350, 1254,
	351, 1254,
	352, 1254,
	354, 1254,
	355, 1254,
	356, 1254,
	358, 1254,
	359, 1254,
	360, 1254,
	361, 1254,
	362, 1254,
	363, 1254,
	365, 1254,
	366, 1254,
	367, 1254,
	368, 1254,
	369, 1254,
	370, 1254,
	371, 1254,
	372, 1254,
	373, 1254,
	374, 1254,
	375, 1254,
	377, 1254,
	378, 1254,
	379, 1254,
	380, 1254,
	381, 1254,
	382, 1254,
	384, 1254,
	385, 1254,
	386, 1254,
	387, 1254,
	388, 1254,
	390, 1254,
	391, 1254,
	392, 1254,
	394, 1254,
	396, 1254,
	397, 1254,
	398, 1254,
	399, 1254,
	400, 1254,
	401, 1254,
	402, 1254,
	403, 1254,
	404, 1254,
	405, 1254,
	406, 1254,
	407, 1254,
	408, 1254,
	410, 1254,
	411, 1254,
	413, 1254,
	415, 1254,
	416, 1254,
	417, 1254,
	418, 1254,
	419, 1254,
	420, 1254,
	421, 1254,
	422, 1254,
	424, 1254,
	425, 1254,
	426, 1254,
	427, 1254,
	428, 1254,
	430, 1254,
	432, 1254,
	433, 1254,
	434, 1254,
	435, 1254,
	436, 1254,
	438, 1254,
	439, 1254,
	440, 1254,
	442, 1254,
	443, 1254,
	446, 1254,
	447, 1254,
	448, 1254,
	449, 1254,
	450, 1254,
	451, 1254,
	452, 1254,
	454, 1254,
	457, 1254,
	458, 1254,
	459, 1254,
	460, 1254,
	461, 1254,
	462, 1254,
	464, 1254,
	465, 1254,
	466, 1254,
	471, 1254,
	472, 1254,
	473, 1254,
	474, 1254,
	475, 1254,
	476, 1254,
	-2, 0,
	-1, 136,
	1, 1128,
	218, 1128,
	324, 1128,
	332, 1128,
	479, 1128,
	503, 1128,
	-2, 0,
	-1, 138,
	1, 1128,
	503, 1128,
	-2, 0,
	-1, 139,
	1, 1128,
	503, 1128,
	-2, 0,
	-1, 140,
	1, 1128,
	429, 1128,
	503, 1128,
	-2, 0,
	-1, 167,
	133, 1222,
	151, 1222,
	164, 1222,
	211, 1222,
	241, 1222,
	284, 1222,
	294, 1222,
	444, 1222,
	-2, 1197,
	-1, 203,
	4, 1261,
	5, 1261,
	6, 1261,
	7, 1261,
	8, 1261,
	9, 1261,
	10, 1261,
	21, 1261,
	22, 1261,
	23, 1261,
	24, 1261,
	25, 1261,
	26, 1261,
	28, 1261,
	29, 1261,
	35, 1261,
	36, 1261,
	40, 1261,
	41, 1261,
	42, 1261,
	43, 1261,
	44, 1261,
	45, 1261,
	46, 1261,
	47, 1261,
	48, 1261,
	50, 1261,
	51, 1261,
	52, 1261,
	54, 1261,
	55, 1261,
	56, 1261,
	57, 1261,
	58, 1261,
	59, 1261,
	60, 1261,
	61, 1261,
	62, 1261,
	63, 1261,
	64, 1261,
	65, 1261,
	67, 1261,
	68, 1261,
	69, 1261,
	71, 1261,
	73, 1261,
	74, 1261,
	75, 1261,
	76, 1261,
	77, 1261,
	78, 1261,
	79, 1261,
	82, 1261,
	83, 1261,
	84, 1261,
	85, 1261,
	87, 1261,
	89, 1261,
	90, 1261,
	91, 1261,
	93, 1261,
	94, 1261,
	95, 1261,
	96, 1261,
	97, 1261,
	98, 1261,
	99, 1261,
	100, 1261,
	101, 1261,
	102, 1261,
	103, 1261,
	104, 1261,
	105, 1261,
	106, 1261,
	107, 1261,
	108, 1261,
	109, 1261,
	110, 1261,
	111, 1261,
	112, 1261,
	113, 1261,
	114, 1261,
	115, 1261,
	117, 1261,
	118, 1261,
	120, 1261,
	121, 1261,
	124, 1261,
	125, 1261,
	126, 1261,
	128, 1261,
	129, 1261,
	131, 1261,
	132, 1261,
	134, 1261,
	135, 1261,
	136, 1261,
	137, 1261,
	138, 1261,
	139, 1261,
	140, 1261,
	141, 1261,
	142, 1261,
	143, 1261,
	144, 1261,
	145, 1261,
	146, 1261,
	147, 1261,
	148, 1261,
	149, 1261,
	150, 1261,
	156, 1261,
	157, 1261,
	158, 1261,
	159, 1261,
	163, 1261,
	165, 1261,
	168, 1261,
	169, 1261,
	170, 1261,
	171, 1261,
	172, 1261,
	173, 1261,
	174, 1261,
	176, 1261,
	177, 1261,
	179, 1261,
	180, 1261,
	182, 1261,
	183, 1261,
	184, 1261,
	185, 1261,
	186, 1261,
	187, 1261,
	188, 1261,
	189, 1261,
	190, 1261,
	191, 1261,
	192, 1261,
	193, 1261,
	195, 1261,
	196, 1261,
	197, 1261,
	198, 1261,
	202, 1261,
	203, 1261,
	204, 1261,
	205, 1261,
	207, 1261,
	208, 1261,
	209, 1261,
	210, 1261,
	212, 1261,
	214, 1261,
	215, 1261,
	216, 1261,
	217, 1261,
	218, 1261,
	219, 1261,
	220, 1261,
	221, 1261,
	222, 1261,
	226, 1261,
	227, 1261,
	228, 1261,
	229, 1261,
	230, 1261,
	232, 1261,
	233, 1261,
	235, 1261,
	236, 1261,
	237, 1261,
	238, 1261,
	239, 1261,
	240, 1261,
	242, 1261,
	243, 1261,
	244, 1261,
	245, 1261,
	246, 1261,
	247, 1261,
	248, 1261,
	249, 1261,
	250, 1261,
	252, 1261,
	253, 1261,
	254, 1261,
	255, 1261,
	256, 1261,
	257, 1261,
	258, 1261,
	259, 1261,
	260, 1261,
	261, 1261,
	262, 1261,
	264, 1261,
	265, 1261,
	266, 1261,
	267, 1261,
	268, 1261,
	269, 1261,
	270, 1261,
	271, 1261,
	272, 1261,
	273, 1261,
	274, 1261,
	275, 1261,
	276, 1261,
	277, 1261,
	278, 1261,
	279, 1261,
	280, 1261,
	281, 1261,
	282, 1261,
	283, 1261,
	286, 1261,
	290, 1261,
	291, 1261,
	292, 1261,
	295, 1261,
	296, 1261,
	297, 1261,
	298, 1261,
	299, 1261,
	300, 1261,
	301, 1261,
	302, 1261,
	303, 1261,
	304, 1261,
	305, 1261,
	306, 1261,
	307, 1261,
	308, 1261,
	309, 1261,
	310, 1261,
	311, 1261,
	312, 1261,
	314, 1261,
	315, 1261,
	316, 1261,
	317, 1261,
	318, 1261,
	319, 1261,
	320, 1261,
	321, 1261,
	322, 1261,
	324, 1261,
	326, 1261,
	327, 1261,
	328, 1261,
	329, 1261,
	330, 1261,
	331, 1261,
	332, 1261,
	333, 1261,
	334, 1261,
	335, 1261,
	336, 1261,
	343, 1261,
	345, 1261,
	346, 1261,
	347, 1261,
	348, 1261,
	349, 1261,
	350, 1261,
	351, 1261,
	352, 1261,
	354, 1261,
	355, 1261,
	356, 1261,
	357, 1261,
	358, 1261,
	359, 1261,
	360, 1261,
	361, 1261,
	362, 1261,
	363, 1261,
	365, 1261,
	366, 1261,
	367, 1261,
	368, 1261,
	369, 1261,
	370, 1261,
	371, 1261,
	372, 1261,
	373, 1261,
	374, 1261,
	375, 1261,
	377, 1261,
	378, 1261,
	379, 1261,
	380, 1261,
	381, 1261,
	382, 1261,
	383, 1261,
	384, 1261,
	385, 1261,
	386, 1261,
	387, 1261,
	388, 1261,
	389, 1261,
	390, 1261,
	391, 1261,
	392, 1261,
	394, 1261,
	396, 1261,
	397, 1261,
	398, 1261,
	399, 1261,
	400, 1261,
	401, 1261,
	402, 1261,
	403, 1261,
	404, 1261,
	405, 1261,
	406, 1261,
	407, 1261,
	408, 1261,
	410, 1261,
	411, 1261,
	412, 1261,
	413, 1261,
	415, 1261,
	416, 1261,
	417, 1261,
	418, 1261,
	419, 1261,
	420, 1261,
	421, 1261,
	422, 1261,
	424, 1261,
	425, 1261,
	426, 1261,
	427, 1261,
	428, 1261,
	430, 1261,
	432, 1261,
	433, 1261,
	434, 1261,
	435, 1261,
	436, 1261,
	437, 1261,
	438, 1261,
	439, 1261,
	440, 1261,
	442, 1261,
	443, 1261,
	445, 1261,
	446, 1261,
	447, 1261,
	448, 1261,
	449, 1261,
	450, 1261,
	451, 1261,
	452, 1261,
	453, 1261,
	454, 1261,
	457, 1261,
	458, 1261,
	459, 1261,
	460, 1261,
	461, 1261,
	462, 1261,
	464, 1261,
	465, 1261,
	466, 1261,
	471, 1261,
	472, 1261,
	473, 1261,
	474, 1261,
	475, 1261,
	476, 1261,
	477, 1261,
	484, 1261,
	491, 1261,
	492, 1261,
	493, 1261,
	500, 1261,
	504, 1261,
	-2, 0,
	-1, 602,
	167, 1967,
	429, 1967,
	483, 1967,
	502, 1967,
	-2, 0,
	-1, 603,
	167, 2049,
	429, 2049,
	483, 2049,
	502, 2049,
	-2, 0,
	-1, 604,
	167, 1955,
	429, 1955,
	483, 1955,
	502, 1955,
	-2, 0,
	-1, 606,
	167, 2147,
	429, 2147,
	483, 2147,
	502, 2147,
	-2, 0,
	-1, 608,
	167, 2177,
	429, 2177,
	483, 2177,
	502, 2177,
	-2, 0,
	-1, 615,
	167, 2064,
	429, 2064,
	483, 2064,
	502, 2064,
	-2, 571,
	-1, 644,
	502, 1908,
	505, 1908,
	-2, 801,
	-1, 645,
	502, 1910,
	505, 1910,
	-2, 802,
	-1, 646,
	502, 1909,
	505, 1909,
	-2, 803,
	-1, 647,
	505, 1843,
	-2, 804,
	-1, 669,
	164, 199,
	-2, 0,
	-1, 692,
	464, 1037,
	-2, 859,
	-1, 731,
	4, 1058,
	21, 1058,
	22, 1058,
	23, 1058,
	24, 1058,
	25, 1058,
	26, 1058,
	28, 1058,
	29, 1058,
	35, 1058,
	40, 1058,
	41, 1058,
	42, 1058,
	43, 1058,
	44, 1058,
	45, 1058,
	46, 1058,
	47, 1058,
	48, 1058,
	50, 1058,
	51, 1058,
	52, 1058,
	54, 1058,
	55, 1058,
	56, 1058,
	57, 1058,
	58, 1058,
	62, 1058,
	63, 1058,
	64, 1058,
	65, 1058,
	67, 1058,
	68, 1058,
	69, 1058,
	73, 1058,
	74, 1058,
	75, 1058,
	76, 1058,
	77, 1058,
	78, 1058,
	79, 1058,
	82, 1058,
	83, 1058,
	84, 1058,
	85, 1058,
	87, 1058,
	89, 1058,
	90, 1058,
	91, 1058,
	93, 1058,
	95, 1058,
	96, 1058,
	104, 1058,
	105, 1058,
	106, 1058,
	107, 1058,
	109, 1058,
	110, 1058,
	111, 1058,
	113, 1058,
	114, 1058,
	115, 1058,
	117, 1058,
	118, 1058,
	120, 1058,
	121, 1058,
	124, 1058,
	125, 1058,
	126, 1058,
	128, 1058,
	129, 1058,
	131, 1058,
	132, 1058,
	134, 1058,
	135, 1058,
	136, 1058,
	137, 1058,
	138, 1058,
	139, 1058,
	140, 1058,
	141, 1058,
	142, 1058,
	143, 1058,
	144, 1058,
	145, 1058,
	146, 1058,
	147, 1058,
	148, 1058,
	150, 1058,
	156, 1058,
	157, 1058,
	158, 1058,
	159, 1058,
	163, 1058,
	165, 1058,
	169, 1058,
	170, 1058,
	171, 1058,
	172, 1058,
	173, 1058,
	174, 1058,
	176, 1058,
	177, 1058,
	179, 1058,
	180, 1058,
	182, 1058,
	183, 1058,
	184, 1058,
	185, 1058,
	186, 1058,
	187, 1058,
	188, 1058,
	189, 1058,
	190, 1058,
	192, 1058,
	193, 1058,
	195, 1058,
	196, 1058,
	197, 1058,
	198, 1058,
	202, 1058,
	203, 1058,
	204, 1058,
	205, 1058,
	208, 1058,
	209, 1058,
	210, 1058,
	212, 1058,
	214, 1058,
	216, 1058,
	218, 1058,
	219, 1058,
	220, 1058,
	222, 1058,
	226, 1058,
	227, 1058,
	228, 1058,
	229, 1058,
	230, 1058,
	232, 1058,
	233, 1058,
	235, 1058,
	236, 1058,
	238, 1058,
	239, 1058,
	242, 1058,
	243, 1058,
	244, 1058,
	247, 1058,
	248, 1058,
	249, 1058,
	250, 1058,
	252, 1058,
	253, 1058,
	254, 1058,
	255, 1058,
	256, 1058,
	257, 1058,
	258, 1058,
	259, 1058,
	260, 1058,
	261, 1058,
	262, 1058,
	264, 1058,
	266, 1058,
	267, 1058,
	268, 1058,
	269, 1058,
	270, 1058,
	271, 1058,
	273, 1058,
	275, 1058,
	277, 1058,
	279, 1058,
	280, 1058,
	281, 1058,
	282, 1058,
	283, 1058,
	286, 1058,
	290, 1058,
	291, 1058,
	292, 1058,
	295, 1058,
	296, 1058,
	297, 1058,
	299, 1058,
	301, 1058,
	302, 1058,
	303, 1058,
	304, 1058,
	305, 1058,
	306, 1058,
	307, 1058,
	308, 1058,
	309, 1058,
	310, 1058,
	311, 1058,
	312, 1058,
	314, 1058,
	315, 1058,
	316, 1058,
	317, 1058,
	318, 1058,
	319, 1058,
	320, 1058,
	321, 1058,
	322, 1058,
	324, 1058,
	326, 1058,
	327, 1058,
	328, 1058,
	329, 1058,
	330, 1058,
	331, 1058,
	332, 1058,
	333, 1058,
	334, 1058,
	335, 1058,
	336, 1058,
	343, 1058,
	345, 1058,
	346, 1058,
	347, 1058,
	348, 1058,
	349, 1058,
	350, 1058,
	351, 1058,
	352, 1058,
	354, 1058,
	355, 1058,
	356, 1058,
	358, 1058,
	359, 1058,
	360, 1058,
	361, 1058,
	362, 1058,
	363, 1058,
	365, 1058,
	366, 1058,
	367, 1058,
	368, 1058,
	369, 1058,
	370, 1058,
	371, 1058,
	372, 1058,
	373, 1058,
	374, 1058,
	375, 1058,
	377, 1058,
	378, 1058,
	379, 1058,
	380, 1058,
	381, 1058,
	382, 1058,
	384, 1058,
	385, 1058,
	386, 1058,
	387, 1058,
	388, 1058,
	390, 1058,
	391, 1058,
	392, 1058,
	394, 1058,
	396, 1058,
	397, 1058,
	398, 1058,
	399, 1058,
	400, 1058,
	401, 1058,
	402, 1058,
	403, 1058,
	404, 1058,
	405, 1058,
	406, 1058,
	407, 1058,
	408, 1058,
	410, 1058,
	411, 1058,
	413, 1058,
	415, 1058,
	416, 1058,
	417, 1058,
	418, 1058,
	419, 1058,
	420, 1058,
	421, 1058,
	422, 1058,
	424, 1058,
	425, 1058,
	426, 1058,
	427, 1058,
	428, 1058,
	430, 1058,
	432, 1058,
	433, 1058,
	434, 1058,
	435, 1058,
	436, 1058,
	438, 1058,
	439, 1058,
	440, 1058,
	442, 1058,
	443, 1058,
	446, 1058,
	447, 1058,
	448, 1058,
	449, 1058,
	450, 1058,
	451, 1058,
	452, 1058,
	454, 1058,
	457, 1058,
	458, 1058,
	459, 1058,
	460, 1058,
	461, 1058,
	462, 1058,
	464, 1058,
	465, 1058,
	466, 1058,
	471, 1058,
	472, 1058,
	473, 1058,
	474, 1058,
	475, 1058,
	476, 1058,
	-2, 0,
	-1, 807,
	328, 718,
	382, 718,
	-2, 0,
	-1, 808,
	328, 717,
	382, 717,
	-2, 665,
	-1, 812,
	1, 757,
	499, 757,
	501, 757,
	503, 757,
	-2, 0,
	-1, 813,
	1, 800,
	164, 800,
	499, 800,
	501, 800,
	503, 800,
	-2, 0,
	-1, 821,
	1, 721,
	499, 721,
	501, 721,
	503, 721,
	-2, 0,
	-1, 827,
	1, 757,
	499, 757,
	501, 757,
	503, 757,
	-2, 0,
	-1, 828,
	1, 759,
	499, 759,
	501, 759,
	503, 759,
	-2, 0,
	-1, 829,
	1, 762,
	499, 762,
	501, 762,
	503, 762,
	-2, 0,
	-1, 835,
	1, 779,
	499, 779,
	501, 779,
	503, 779,
	-2, 0,
	-1, 836,
	1, 781,
	499, 781,
	501, 781,
	503, 781,
	-2, 0,
	-1, 884,
	151, 1263,
	164, 1263,
	241, 1263,
	284, 1263,
	-2, 1201,
	-1, 898,
	151, 1262,
	164, 1262,
	241, 1262,
	284, 1262,
	-2, 1198,
	-1, 924,
	502, 1907,
	-2, 579,
	-1, 952,
	5, 1899,
	500, 1897,
	-2, 1888,
	-1, 960,
	5, 1920,
	500, 1917,
	-2, 1908,
	-1, 961,
	5, 1921,
	500, 1918,
	-2, 1909,
	-1, 969,
	502, 1905,
	-2, 1887,
	-1, 970,
	500, 2255,
	-2, 1906,
	-1, 993,
	500, 2254,
	-2, 1922,
	-1, 994,
	5, 1427,
	-2, 2225,
	-1, 995,
	5, 1428,
	-2, 2226,
	-1, 996,
	5, 1429,
	-2, 2240,
	-1, 997,
	5, 1430,
	-2, 2205,
	-1, 998,
	5, 1431,
	-2, 2238,
	-1, 999,
	5, 1439,
	-2, 2217,
	-1, 1000,
	5, 1426,
	-2, 2213,
	-1, 1001,
	5, 1426,
	-2, 2212,
	-1, 1002,
	5, 1426,
	-2, 2231,
	-1, 1003,
	5, 1437,
	-2, 2207,
	-1, 1004,
	5, 1442,
	-2, 2206,
	-1, 1005,
	5, 1444,
	-2, 2250,
	-1, 1008,
	5, 1466,
	-2, 2243,
	-1, 1009,
	5, 1458,
	-2, 2244,
	-1, 1010,
	5, 1466,
	-2, 2245,
	-1, 1011,
	5, 1462,
	-2, 2246,
	-1, 1012,
	5, 1413,
	-2, 2218,
	-1, 1013,
	5, 1414,
	-2, 2219,
	-1, 1040,
	5, 1449,
	-2, 2251,
	-1, 1041,
	5, 1450,
	-2, 2241,
	-1, 1042,
	5, 1451,
	465, 1451,
	-2, 2208,
	-1, 1043,
	5, 1452,
	465, 1452,
	-2, 2209,
	-1, 1080,
	500, 1917,
	-2, 1908,
	-1, 1081,
	500, 1918,
	-2, 1909,
	-1, 1110,
	167, 2177,
	429, 2177,
	483, 2177,
	502, 2177,
	-2, 0,
	-1, 1113,
	1, 557,
	503, 557,
	-2, 1136,
	-1, 1238,
	345, 1883,
	384, 1883,
	493, 1883,
	-2, 1881,
	-1, 1250,
	504, 1883,
	-2, 1884,
	-1, 1254,
	1, 1034,
	499, 1034,
	501, 1034,
	503, 1034,
	-2, 1250,
	-1, 1306,
	334, 858,
	464, 858,
	-2, 304,
	-1, 1329,
	1, 1034,
	499, 1034,
	501, 1034,
	503, 1034,
	-2, 1250,
	-1, 1335,
	4, 1058,
	21, 1058,
	22, 1058,
	23, 1058,
	24, 1058,
	25, 1058,
	26, 1058,
	28, 1058,
	29, 1058,
	35, 1058,
	40, 1058,
	41, 1058,
	42, 1058,
	43, 1058,
	44, 1058,
	45, 1058,
	46, 1058,
	47, 1058,
	48, 1058,
	50, 1058,
	51, 1058,
	52, 1058,
	54, 1058,
	55, 1058,
	56, 1058,
	57, 1058,
	58, 1058,
	62, 1058,
	63, 1058,
	64, 1058,
	65, 1058,
	67, 1058,
	68, 1058,
	69, 1058,
	73, 1058,
	74, 1058,
	75, 1058,
	76, 1058,
	77, 1058,
	78, 1058,
	79, 1058,
	82, 1058,
	83, 1058,
	84, 1058,
	85, 1058,
	87, 1058,
	89, 1058,
	90, 1058,
	91, 1058,
	93, 1058,
	95, 1058,
	96, 1058,
	104, 1058,
	105, 1058,
	106, 1058,
	107, 1058,
	109, 1058,
	110, 1058,
	111, 1058,
	113, 1058,
	114, 1058,
	115, 1058,
	117, 1058,
	118, 1058,
	120, 1058,
	121, 1058,
	124, 1058,
	125, 1058,
	126, 1058,
	128, 1058,
	129, 1058,
	131, 1058,
	132, 1058,
	134, 1058,
	135, 1058,
	136, 1058,
	137, 1058,
	138, 1058,
	139, 1058,
	140, 1058,
	141, 1058,
	142, 1058,
	143, 1058,
	144, 1058,
	145, 1058,
	146, 1058,
	147, 1058,
	148, 1058,
	156, 1058,
	157, 1058,
	158, 1058,
	159, 1058,
	163, 1058,
	165, 1058,
	169, 1058,
	170, 1058,
	171, 1058,
	172, 1058,
	173, 1058,
	174, 1058,
	176, 1058,
	177, 1058,
	179, 1058,
	180, 1058,
	182, 1058,
	183, 1058,
	184, 1058,
	185, 1058,
	186, 1058,
	187, 1058,
	188, 1058,
	189, 1058,
	190, 1058,
	192, 1058,
	193, 1058,
	195, 1058,
	196, 1058,
	197, 1058,
	198, 1058,
	203, 1058,
	204, 1058,
	205, 1058,
	208, 1058,
	209, 1058,
	210, 1058,
	212, 1058,
	214, 1058,
	216, 1058,
	218, 1058,
	219, 1058,
	220, 1058,
	222, 1058,
	226, 1058,
	227, 1058,
	228, 1058,
	229, 1058,
	230, 1058,
	232, 1058,
	233, 1058,
	235, 1058,
	236, 1058,
	238, 1058,
	239, 1058,
	242, 1058,
	243, 1058,
	244, 1058,
	247, 1058,
	248, 1058,
	249, 1058,
	250, 1058,
	252, 1058,
	253, 1058,
	254, 1058,
	255, 1058,
	256, 1058,
	257, 1058,
	258, 1058,
	259, 1058,
	260, 1058,
	261, 1058,
	262, 1058,
	264, 1058,
	266, 1058,
	267, 1058,
	268, 1058,
	269, 1058,
	270, 1058,
	271, 1058,
	273, 1058,
	277, 1058,
	279, 1058,
	280, 1058,
	281, 1058,
	282, 1058,
	283, 1058,
	286, 1058,
	288, 1058,
	290, 1058,
	291, 1058,
	292, 1058,
	295, 1058,
	296, 1058,
	297, 1058,
	299, 1058,
	301, 1058,
	302, 1058,
	303, 1058,
	304, 1058,
	305, 1058,
	306, 1058,
	307, 1058,
	308, 1058,
	309, 1058,
	310, 1058,
	311, 1058,
	312, 1058,
	314, 1058,
	315, 1058,
	316, 1058,
	317, 1058,
	318, 1058,
	319, 1058,
	320, 1058,
	321, 1058,
	322, 1058,
	324, 1058,
	326, 1058,
	327, 1058,
	328, 1058,
	329, 1058,
	330, 1058,
	331, 1058,
	332, 1058,
	333, 1058,
	334, 1058,
	335, 1058,
	336, 1058,
	343, 1058,
	345, 1058,
	346, 1058,
	347, 1058,
	348, 1058,
	349, 1058,
	350, 1058,
	351, 1058,
	352, 1058,
	354, 1058,
	355, 1058,
	356, 1058,
	358, 1058,
	359, 1058,
	360, 1058,
	361, 1058,
	362, 1058,
	363, 1058,
	365, 1058,
	366, 1058,
	367, 1058,
	368, 1058,
	369, 1058,
	370, 1058,
	371, 1058,
	372, 1058,
	373, 1058,
	374, 1058,
	375, 1058,
	377, 1058,
	378, 1058,
	379, 1058,
	380, 1058,
	381, 1058,
	382, 1058,
	384, 1058,
	385, 1058,
	386, 1058,
	387, 1058,
	388, 1058,
	390, 1058,
	391, 1058,
	392, 1058,
	394, 1058,
	396, 1058,
	397, 1058,
	398, 1058,
	399, 1058,
	400, 1058,
	401, 1058,
	402, 1058,
	403, 1058,
	404, 1058,
	405, 1058,
	406, 1058,
	407, 1058,
	408, 1058,
	410, 1058,
	411, 1058,
	413, 1058,
	415, 1058,
	416, 1058,
	417, 1058,
	418, 1058,
	419, 1058,
	420, 1058,
	421, 1058,
	422, 1058,
	424, 1058,
	425, 1058,
	426, 1058,
	427, 1058,
	428, 1058,
	430, 1058,
	432, 1058,
	433, 1058,
	434, 1058,
	435, 1058,
	436, 1058,
	438, 1058,
	439, 1058,
	440, 1058,
	442, 1058,
	443, 1058,
	446, 1058,
	447, 1058,
	448, 1058,
	449, 1058,
	450, 1058,
	451, 1058,
	452, 1058,
	454, 1058,
	457, 1058,
	458, 1058,
	459, 1058,
	460, 1058,
	461, 1058,
	462, 1058,
	464, 1058,
	465, 1058,
	466, 1058,
	471, 1058,
	472, 1058,
	473, 1058,
	474, 1058,
	475, 1058,
	476, 1058,
	-2, 0,
	-1, 1404,
	1, 434,
	499, 434,
	501, 434,
	503, 434,
	-2, 1221,
	-1, 1407,
	4, 2249,
	11, 2249,
	12, 2249,
	14, 2249,
	15, 2249,
	16, 2249,
	17, 2249,
	18, 2249,
	19, 2249,
	21, 2249,
	22, 2249,
	23, 2249,
	24, 2249,
	25, 2249,
	26, 2249,
	28, 2249,
	29, 2249,
	32, 2249,
	33, 2249,
	35, 2249,
	37, 2249,
	40, 2249,
	41, 2249,
	42, 2249,
	43, 2249,
	44, 2249,
	45, 2249,
	46, 2249,
	47, 2249,
	48, 2249,
	50, 2249,
	51, 2249,
	52, 2249,
	54, 2249,
	55, 2249,
	56, 2249,
	57, 2249,
	58, 2249,
	62, 2249,
	63, 2249,
	64, 2249,
	65, 2249,
	67, 2249,
	68, 2249,
	69, 2249,
	70, 2249,
	73, 2249,
	74, 2249,
	75, 2249,
	76, 2249,
	77, 2249,
	78, 2249,
	79, 2249,
	80, 2249,
	82, 2249,
	83, 2249,
	84, 2249,
	85, 2249,
	87, 2249,
	88, 2249,
	89, 2249,
	90, 2249,
	91, 2249,
	93, 2249,
	94, 2249,
	95, 2249,
	96, 2249,
	104, 2249,
	105, 2249,
	106, 2249,
	107, 2249,
	109, 2249,
	110, 2249,
	111, 2249,
	113, 2249,
	114, 2249,
	115, 2249,
	117, 2249,
	118, 2249,
	120, 2249,
	121, 2249,
	124, 2249,
	125, 2249,
	126, 2249,
	128, 2249,
	129, 2249,
	131, 2249,
	132, 2249,
	134, 2249,
	135, 2249,
	136, 2249,
	137, 2249,
	138, 2249,
	139, 2249,
	140, 2249,
	141, 2249,
	142, 2249,
	143, 2249,
	144, 2249,
	145, 2249,
	146, 2249,
	147, 2249,
	148, 2249,
	152, 2249,
	153, 2249,
	154, 2249,
	155, 2249,
	156, 2249,
	157, 2249,
	158, 2249,
	159, 2249,
	162, 2249,
	163, 2249,
	165, 2249,
	168, 2249,
	169, 2249,
	170, 2249,
	171, 2249,
	172, 2249,
	173, 2249,
	174, 2249,
	176, 2249,
	177, 2249,
	179, 2249,
	180, 2249,
	182, 2249,
	183, 2249,
	184, 2249,
	185, 2249,
	186, 2249,
	187, 2249,
	188, 2249,
	189, 2249,
	190, 2249,
	191, 2249,
	192, 2249,
	193, 2249,
	194, 2249,
	195, 2249,
	196, 2249,
	197, 2249,
	198, 2249,
	200, 2249,
	201, 2249,
	203, 2249,
	204, 2249,
	205, 2249,
	207, 2249,
	208, 2249,
	209, 2249,
	210, 2249,
	212, 2249,
	214, 2249,
	215, 2249,
	216, 2249,
	217, 2249,
	218, 2249,
	219, 2249,
	220, 2249,
	221, 2249,
	222, 2249,
	224, 2249,
	225, 2249,
	226, 2249,
	227, 2249,
	228, 2249,
	229, 2249,
	230, 2249,
	232, 2249,
	233, 2249,
	235, 2249,
	236, 2249,
	237, 2249,
	238, 2249,
	239, 2249,
	240, 2249,
	242, 2249,
	243, 2249,
	244, 2249,
	247, 2249,
	248, 2249,
	249, 2249,
	250, 2249,
	251, 2249,
	252, 2249,
	253, 2249,
	254, 2249,
	255, 2249,
	256, 2249,
	257, 2249,
	258, 2249,
	259, 2249,
	260, 2249,
	261, 2249,
	262, 2249,
	264, 2249,
	265, 2249,
	266, 2249,
	267, 2249,
	268, 2249,
	269, 2249,
	270, 2249,
	271, 2249,
	273, 2249,
	276, 2249,
	277, 2249,
	279, 2249,
	280, 2249,
	281, 2249,
	282, 2249,
	283, 2249,
	286, 2249,
	290, 2249,
	291, 2249,
	292, 2249,
	293, 2249,
	295, 2249,
	296, 2249,
	297, 2249,
	299, 2249,
	301, 2249,
	302, 2249,
	303, 2249,
	304, 2249,
	305, 2249,
	306, 2249,
	307, 2249,
	308, 2249,
	309, 2249,
	310, 2249,
	311, 2249,
	312, 2249,
	314, 2249,
	315, 2249,
	316, 2249,
	317, 2249,
	318, 2249,
	319, 2249,
	320, 2249,
	321, 2249,
	322, 2249,
	324, 2249,
	326, 2249,
	327, 2249,
	328, 2249,
	329, 2249,
	330, 2249,
	331, 2249,
	332, 2249,
	333, 2249,
	334, 2249,
	335, 2249,
	336, 2249,
	343, 2249,
	344, 2249,
	345, 2249,
	346, 2249,
	347, 2249,
	348, 2249,
	349, 2249,
	350, 2249,
	351, 2249,
	352, 2249,
	354, 2249,
	355, 2249,
	356, 2249,
	357, 2249,
	358, 2249,
	359, 2249,
	360, 2249,
	361, 2249,
	362, 2249,
	363, 2249,
	364, 2249,
	365, 2249,
	366, 2249,
	367, 2249,
	368, 2249,
	369, 2249,
	370, 2249,
	371, 2249,
	372, 2249,
	373, 2249,
	374, 2249,
	375, 2249,
	377, 2249,
	378, 2249,
	379, 2249,
	380, 2249,
	381, 2249,
	382, 2249,
	384, 2249,
	385, 2249,
	386, 2249,
	387, 2249,
	388, 2249,
	389, 2249,
	390, 2249,
	391, 2249,
	392, 2249,
	394, 2249,
	396, 2249,
	397, 2249,
	398, 2249,
	399, 2249,
	400, 2249,
	401, 2249,
	402, 2249,
	403, 2249,
	404, 2249,
	405, 2249,
	406, 2249,
	407, 2249,
	408, 2249,
	410, 2249,
	411, 2249,
	413, 2249,
	415, 2249,
	416, 2249,
	417, 2249,
	418, 2249,
	419, 2249,
	420, 2249,
	421, 2249,
	422, 2249,
	424, 2249,
	425, 2249,
	426, 2249,
	427, 2249,
	428, 2249,
	430, 2249,
	432, 2249,
	433, 2249,
	434, 2249,
	435, 2249,
	436, 2249,
	438, 2249,
	439, 2249,
	440, 2249,
	442, 2249,
	443, 2249,
	446, 2249,
	447, 2249,
	448, 2249,
	449, 2249,
	450, 2249,
	451, 2249,
	452, 2249,
	454, 2249,
	457, 2249,
	458, 2249,
	459, 2249,
	460, 2249,
	461, 2249,
	462, 2249,
	464, 2249,
	465, 2249,
	466, 2249,
	471, 2249,
	472, 2249,
	473, 2249,
	474, 2249,
	475, 2249,
	476, 2249,
	477, 2249,
	478, 2249,
	481, 2249,
	482, 2249,
	483, 2249,
	484, 2249,
	485, 2249,
	486, 2249,
	488, 2249,
	489, 2249,
	490, 2249,
	491, 2249,
	492, 2249,
	493, 2249,
	494, 2249,
	495, 2249,
	496, 2249,
	498, 2249,
	501, 2249,
	502, 2249,
	504, 2249,
	505, 2249,
	-2, 0,
	-1, 1412,
	167, 2147,
	429, 2147,
	483, 2147,
	502, 2147,
	-2, 0,
	-1, 1460,
	328, 718,
	382, 718,
	-2, 0,
	-1, 1484,
	1, 713,
	499, 713,
	501, 713,
	503, 713,
	-2, 0,
	-1, 1485,
	1, 748,
	499, 748,
	501, 748,
	503, 748,
	-2, 0,
	-1, 1486,
	1, 720,
	499, 720,
	501, 720,
	503, 720,
	-2, 0,
	-1, 1488,
	1, 724,
	499, 724,
	501, 724,
	503, 724,
	-2, 0,
	-1, 1493,
	1, 730,
	499, 730,
	501, 730,
	503, 730,
	-2, 0,
	-1, 1521,
	1, 2197,
	499, 2197,
	501, 2197,
	502, 2197,
	503, 2197,
	-2, 777,
	-1, 1522,
	1, 2144,
	499, 2144,
	501, 2144,
	502, 2144,
	503, 2144,
	-2, 778,
	-1, 1537,
	1, 1131,
	503, 1131,
	-2, 1136,
	-1, 1540,
	151, 1262,
	164, 1262,
	241, 1262,
	284, 1262,
	-2, 1202,
	-1, 1634,
	133, 1223,
	151, 1223,
	164, 1223,
	211, 1223,
	241, 1223,
	284, 1223,
	294, 1223,
	444, 1223,
	-2, 1627,
	-1, 1694,
	501, 1777,
	-2, 0,
	-1, 1729,
	133, 1223,
	151, 1223,
	164, 1223,
	211, 1223,
	241, 1223,
	284, 1223,
	294, 1223,
	444, 1223,
	-2, 1343,
	-1, 1776,
	500, 1454,
	-2, 1442,
	-1, 1809,
	1, 559,
	503, 559,
	-2, 1136,
	-1, 2027,
	1, 715,
	499, 715,
	501, 715,
	503, 715,
	-2, 0,
	-1, 2028,
	1, 750,
	499, 750,
	501, 750,
	503, 750,
	-2, 0,
	-1, 2058,
	1, 732,
	499, 732,
	501, 732,
	503, 732,
	-2, 0,
	-1, 2104,
	362, 1289,
	363, 1289,
	-2, 1487,
	-1, 2135,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1507,
	-1, 2136,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1508,
	-1, 2137,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1509,
	-1, 2138,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1510,
	-1, 2139,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1511,
	-1, 2140,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1512,
	-1, 2141,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1513,
	-1, 2142,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1514,
	-1, 2154,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1526,
	-1, 2155,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1527,
	-1, 2156,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1528,
	-1, 2159,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1533,
	-1, 2165,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1537,
	-1, 2167,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1545,
	-1, 2168,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1546,
	-1, 2169,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1547,
	-1, 2170,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1548,
	-1, 2282,
	5, 1920,
	167, 1788,
	500, 1917,
	-2, 1908,
	-1, 2283,
	167, 1789,
	-2, 2201,
	-1, 2284,
	167, 1790,
	-2, 2063,
	-1, 2285,
	167, 1791,
	-2, 1978,
	-1, 2286,
	167, 1792,
	-2, 2020,
	-1, 2287,
	167, 1793,
	-2, 2058,
	-1, 2288,
	167, 1794,
	-2, 2142,
	-1, 2289,
	167, 1795,
	-2, 1610,
	-1, 2358,
	1, 1344,
	2, 1344,
	94, 1344,
	133, 1344,
	151, 1344,
	164, 1344,
	168, 1344,
	178, 1344,
	181, 1344,
	207, 1344,
	211, 1344,
	221, 1344,
	237, 1344,
	241, 1344,
	265, 1344,
	284, 1344,
	288, 1344,
	294, 1344,
	353, 1344,
	357, 1344,
	444, 1344,
	455, 1344,
	468, 1344,
	469, 1344,
	470, 1344,
	479, 1344,
	499, 1344,
	501, 1344,
	503, 1344,
	505, 1344,
	-2, 1343,
	-1, 2371,
	500, 1889,
	-2, 1903,
	-1, 2395,
	500, 1453,
	-2, 1443,
	-1, 2510,
	1, 1034,
	499, 1034,
	501, 1034,
	503, 1034,
	-2, 1250,
	-1, 2668,
	289, 1292,
	-2, 2239,
	-1, 2669,
	289, 1293,
	-2, 2128,
	-1, 2673,
	362, 1854,
	363, 1854,
	-2, 1608,
	-1, 2674,
	362, 1858,
	363, 1858,
	-2, 1609,
	-1, 2675,
	362, 1855,
	363, 1855,
	-2, 1608,
	-1, 2676,
	362, 1859,
	363, 1859,
	-2, 1609,
	-1, 2689,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1535,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1539,
	-1, 2696,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1541,
	-1, 2893,
	218, 1136,
	324, 1136,
	332, 1136,
	479, 1136,
	-2, 556,
	-1, 3014,
	1, 1034,
	499, 1034,
	501, 1034,
	503, 1034,
	-2, 1250,
	-1, 3105,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1543,
	-1, 3112,
	215, 0,
	217, 0,
	276, 0,
	-2, 1562,
	-1, 3179,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1591,
	-1, 3180,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1592,
	-1, 3181,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1593,
	-1, 3185,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1597,
	-1, 3186,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1598,
	-1, 3187,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1599,
	-1, 3233,
	500, 1890,
	-2, 1904,
	-1, 3345,
	502, 2355,
	-2, 1180,
	-1, 3396,
	215, 0,
	217, 0,
	276, 0,
	-2, 1563,
	-1, 3399,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1566,
	-1, 3400,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1568,
	-1, 3598,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1567,
	-1, 3599,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1569,
	-1, 3610,
	215, 0,
	-2, 1600,
	-1, 3753,
	215, 0,
	-2, 1601,
	-1, 3905,
	47, 0,
	191, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 2204,
}

const sqlPrivate = 57344

const sqlLast = 97994

var sqlAct = [...]int{

	236, 3683, 3775, 3641, 3530, 3915, 4012, 2590, 3798, 3874,
	3255, 3880, 3379, 2823, 3904, 3862, 3000, 3917, 3644, 3859,
	3844, 3962, 3916, 3629, 2564, 1084, 1975, 3690, 3144, 2824,
	1272, 3903, 3757, 3561, 3556, 3514, 908, 3587, 2114, 3699,
	1395, 2911, 1257, 3337, 3293, 3521, 925, 3029, 1119, 3543,
	1986, 1394, 3523, 2428, 3463, 1549, 2182, 1763, 3721, 3566,
	3022, 3024, 2996, 3256, 3316, 3306, 2489, 1861, 646, 2122,
	963, 3097, 613, 2682, 1735, 2599, 2115, 1142, 2536, 2314,
	2553, 1999, 3615, 2866, 2527, 2838, 1073, 2601, 959, 2539,
	3378, 2609, 646, 2846, 1235, 2806, 3435, 2548, 1468, 2592,
	2827, 2550, 2598, 1427, 2565, 1704, 2829, 1908, 1907, 1871,
	2805, 2430, 1680, 2351, 744, 2350, 3758, 1764, 2466, 907,
	159, 3204, 2195, 1642, 2006, 2608, 1243, 4, 2224, 641,
	1984, 2119, 2501, 1904, 1895, 1888, 2666, 230, 1126, 1845,
	229, 3684, 1848, 2332, 1705, 2465, 2215, 1322, 2872, 2179,
	2537, 1537, 956, 952, 1835, 2103, 1006, 2084, 2086, 1405,
	2558, 2998, 1391, 899, 1375, 1327, 1941, 647, 648, 1724,
	1064, 961, 1385, 1115, 1240, 581, 2311, 2602, 2226, 954,
	2419, 1675, 2218, 2353, 1067, 2340, 1714, 36, 1046, 2278,
	2268, 2322, 1627, 2196, 1551, 167, 1550, 168, 2085, 597,
	643, 2087, 1721, 99, 159, 652, 1081, 1493, 655, 1259,
	1940, 1426, 738, 607, 1961, 1403, 718, 1267, 692, 1350,
	1860, 2108, 584, 937, 1069, 41, 40, 592, 38, 652,
	567, 29, 655, 27, 589, 25, 1044, 802, 819, 1536,
	1556, 1278, 3218, 2717, 3219, 1487, 2713, 2825, 903, 3039,
	1977, 1977, 1271, 1977, 4070, 1977, 4065, 4053, 2331, 4052,
	3054, 2331, 4029, 2331, 4027, 4023, 3479, 3945, 3479, 1914,
	3939, 3946, 3937, 3934, 2331, 1063, 2331, 3935, 3931, 3926,
	1435, 3901, 3932, 1914, 3038, 1914, 3900, 3899, 2891, 3895,
	1914, 1992, 759, 1992, 1076, 3894, 3889, 3887, 3870, 1992,
	3479, 3479, 3678, 3857, 3838, 3831, 3830, 3479, 2386, 2331,
	2331, 3825, 1061, 3824, 3818, 3479, 3755, 3479, 1914, 3735,
	2386, 3732, 3692, 1914, 3661, 3479, 3693, 3660, 1914, 2778,
	2779, 1914, 3652, 3651, 3621, 3600, 1914, 3479, 1914, 2386,
	3585, 3574, 3509, 3498, 1992, 3054, 2331, 2331, 3478, 3398,
	3353, 1398, 3479, 2386, 3070, 885, 3347, 884, 2726, 1079,
	3070, 1123, 1564, 1565, 2727, 1597, 1598, 1599, 1607, 1608,
	1609, 3314, 3228, 904, 3226, 3315, 3229, 903, 3227, 3054,
	2681, 1047, 1047, 1600, 1595, 3211, 2485, 3208, 84, 2331,
	228, 1567, 2382, 2331, 2324, 3128, 1564, 1565, 1613, 1914,
	1095, 3124, 3069, 3061, 893, 2331, 3070, 3062, 2221, 2822,
	2817, 2816, 898, 2331, 2331, 2331, 1100, 3839, 1595, 2778,
	2779, 1566, 2796, 2797, 2798, 1567, 2769, 1914, 1564, 1565,
	2770, 1586, 2767, 2759, 958, 1048, 2768, 2760, 1123, 1583,
	3394, 2757, 1280, 2728, 2614, 2331, 3750, 2331, 1992, 1050,
	1595, 1051, 2588, 1564, 1565, 1566, 1995, 1567, 2587, 2331,
	3738, 1992, 1995, 2403, 2007, 1586, 2451, 2331, 2385, 2380,
	2374, 3678, 2386, 2331, 1914, 1595, 1096, 2330, 3208, 1994,
	2784, 2331, 1567, 1995, 2222, 2323, 3555, 1566, 2793, 3499,
	1914, 3062, 2480, 2418, 1815, 1976, 2533, 1913, 203, 2497,
	2416, 1700, 1266, 1589, 1590, 1591, 1592, 3285, 3100, 1865,
	1421, 3078, 1566, 1572, 1722, 1898, 3040, 1470, 2778, 2779,
	2367, 2366, 1586, 2365, 2364, 2363, 203, 203, 1052, 1049,
	1583, 892, 891, 890, 889, 3041, 205, 1589, 1590, 1591,
	1592, 888, 1604, 1978, 1978, 1614, 1978, 1572, 1978, 2646,
	3451, 1594, 1596, 887, 883, 882, 2223, 2220, 881, 880,
	879, 878, 877, 876, 205, 205, 1610, 875, 1611, 2794,
	2784, 874, 873, 872, 3392, 1581, 1582, 871, 870, 1572,
	869, 868, 204, 850, 800, 1594, 1596, 3038, 2716, 799,
	798, 1602, 197, 797, 1589, 1590, 1591, 1592, 796, 795,
	198, 794, 1587, 793, 1572, 792, 1292, 203, 791, 790,
	204, 204, 961, 1286, 789, 788, 961, 1594, 1596, 203,
	203, 197, 169, 2799, 3639, 3410, 1096, 1612, 787, 198,
	786, 1145, 133, 785, 784, 1145, 1587, 783, 1262, 782,
	1075, 781, 1594, 1596, 1601, 205, 780, 779, 1125, 778,
	169, 169, 1130, 1271, 203, 777, 776, 205, 205, 2794,
	775, 961, 774, 961, 773, 961, 1581, 1582, 1587, 2784,
	1262, 772, 1280, 762, 2225, 761, 1279, 757, 756, 750,
	749, 709, 2795, 708, 668, 667, 1246, 666, 1251, 658,
	657, 204, 205, 1587, 1262, 1593, 3239, 2578, 1990, 656,
	1976, 197, 2079, 204, 204, 627, 619, 618, 617, 198,
	1489, 601, 224, 197, 197, 1588, 223, 2778, 2779, 222,
	221, 198, 198, 220, 219, 1270, 218, 217, 216, 1593,
	3222, 169, 2323, 215, 3071, 1262, 961, 214, 204, 213,
	1605, 1262, 212, 169, 169, 1262, 1332, 1334, 197, 1588,
	211, 210, 2869, 961, 1096, 961, 198, 209, 2794, 1262,
	1113, 208, 207, 206, 2739, 961, 2722, 961, 2544, 2514,
	2390, 2372, 2795, 2820, 2219, 2357, 1683, 1843, 169, 1748,
	3922, 1588, 1682, 2002, 2251, 2237, 1593, 652, 1653, 2235,
	655, 1291, 1439, 1725, 2821, 1274, 1132, 1083, 1285, 2399,
	1138, 3902, 1232, 1237, 1686, 1425, 1588, 1262, 2788, 2780,
	2781, 2782, 2783, 2785, 2786, 3805, 1563, 1269, 1268, 3741,
	1108, 3747, 1644, 961, 3614, 3739, 961, 3575, 1603, 3554,
	3570, 3456, 1578, 1579, 1585, 1606, 1584, 1580, 1280, 1577,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 3433, 1277,
	3432, 1284, 3420, 1290, 2778, 2779, 3419, 3426, 2001, 2778,
	2779, 159, 159, 3425, 1402, 3424, 3417, 3416, 2784, 1408,
	1410, 2795, 1337, 1577, 1575, 1576, 1568, 1569, 1570, 1571,
	1573, 1574, 3414, 1440, 203, 3409, 1651, 3406, 3405, 2790,
	2791, 2792, 3313, 3320, 1379, 1382, 2789, 2787, 2788, 2780,
	2781, 2782, 2783, 2785, 2786, 3243, 3242, 1388, 1568, 1569,
	1570, 1571, 1573, 1574, 961, 961, 961, 961, 961, 961,
	961, 2561, 205, 3241, 1401, 3232, 1502, 1584, 1580, 3283,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 3199,
	3198, 1419, 1683, 1424, 904, 961, 3197, 3120, 1682, 3116,
	1406, 961, 2864, 1433, 3065, 1438, 2813, 2794, 1645, 2804,
	1643, 1060, 2777, 2774, 2773, 2771, 2766, 2546, 204, 2765,
	1681, 906, 2764, 2761, 2758, 2738, 2721, 2714, 197, 2589,
	203, 2358, 2208, 1353, 1563, 1952, 198, 203, 1921, 1254,
	1919, 1644, 1562, 4064, 4021, 1420, 2787, 2788, 2780, 2781,
	2782, 2783, 2785, 2786, 4020, 2784, 3955, 1434, 169, 1488,
	2784, 2778, 2779, 3953, 2796, 2797, 2798, 1633, 205, 3944,
	2818, 1295, 1535, 1238, 1085, 205, 1250, 1253, 3146, 3797,
	3785, 3782, 3393, 3781, 3780, 3774, 3767, 2778, 2779, 3736,
	3720, 1445, 3569, 3719, 2185, 1329, 3707, 1461, 1541, 3704,
	203, 3679, 3657, 3635, 961, 961, 961, 3612, 1564, 1565,
	961, 3595, 3594, 3582, 204, 2778, 2779, 1081, 3581, 1081,
	2795, 204, 3547, 1702, 197, 3450, 3431, 3368, 3365, 3273,
	2793, 197, 198, 3272, 1145, 1253, 1253, 1567, 205, 198,
	3259, 3258, 961, 3214, 2794, 646, 1414, 1538, 1546, 1781,
	646, 1545, 3202, 885, 169, 884, 2793, 3319, 961, 3111,
	1428, 169, 1262, 1631, 3072, 3055, 1751, 1566, 3015, 2964,
	2939, 2914, 3638, 1685, 1253, 2913, 1760, 961, 1540, 2191,
	2886, 1804, 1542, 1145, 204, 2743, 2742, 2545, 2737, 1711,
	1756, 935, 1559, 1560, 197, 3759, 2861, 2884, 904, 2705,
	2526, 1689, 198, 1688, 1812, 1076, 1687, 1076, 1452, 1684,
	1708, 1709, 2784, 1841, 1676, 1674, 203, 2397, 2396, 1775,
	2369, 1758, 2362, 2329, 169, 1732, 2233, 1747, 1806, 203,
	1703, 1698, 1697, 1677, 1678, 203, 1696, 1807, 2784, 1695,
	159, 2003, 1694, 1693, 2789, 2787, 2788, 2780, 2781, 2782,
	2783, 2785, 2786, 1692, 205, 1564, 1565, 2795, 1691, 1572,
	1690, 1671, 1670, 1669, 1668, 2799, 2784, 205, 1667, 1666,
	1079, 1665, 1079, 205, 1664, 1663, 1662, 1661, 1660, 1047,
	1564, 1565, 652, 1659, 1567, 655, 1658, 652, 203, 1733,
	655, 1754, 1755, 1832, 1657, 1646, 1632, 1630, 1625, 1107,
	204, 2794, 2914, 1730, 1098, 1778, 1091, 3550, 1739, 1567,
	197, 1752, 1809, 204, 1566, 3452, 1262, 1723, 198, 204,
	3402, 3238, 904, 197, 3225, 1145, 205, 2794, 1769, 197,
	1854, 198, 1701, 2250, 2236, 3217, 3624, 198, 2234, 1566,
	169, 1727, 3742, 2725, 2360, 1759, 1742, 1741, 3740, 1740,
	1803, 2388, 1738, 169, 1737, 3454, 1736, 3501, 1885, 2560,
	3237, 1887, 2778, 2779, 1892, 1645, 2882, 1628, 1834, 1761,
	1743, 1129, 204, 2942, 4018, 4011, 1460, 1834, 3783, 1834,
	3025, 3700, 197, 912, 2780, 2781, 2782, 2783, 2785, 2786,
	198, 2782, 2783, 2785, 2786, 203, 1837, 1077, 1827, 3695,
	3694, 3680, 1666, 3573, 1666, 3500, 1572, 3220, 3057, 3056,
	1683, 3323, 169, 1123, 2795, 1725, 1682, 1533, 1127, 1911,
	1123, 2763, 2762, 1120, 2470, 1128, 2297, 866, 2687, 2453,
	1123, 1652, 1124, 205, 2221, 3271, 1870, 3002, 1896, 3001,
	2795, 1655, 2000, 1503, 1469, 3691, 3942, 3927, 3914, 3307,
	1470, 1909, 3290, 3276, 652, 3076, 1980, 655, 3616, 1982,
	1262, 2825, 1262, 3148, 1262, 1987, 3923, 867, 1989, 1821,
	2216, 1945, 2731, 1865, 2491, 2395, 1699, 1679, 2994, 204,
	1262, 1262, 1949, 3936, 1269, 1268, 1310, 3933, 1950, 197,
	3034, 1262, 3250, 3776, 3557, 1958, 3856, 198, 1953, 3764,
	2917, 3266, 2596, 2557, 1262, 1262, 1262, 2494, 2987, 1059,
	2222, 1449, 3978, 1810, 704, 3817, 3092, 1891, 3979, 169,
	2009, 2895, 3303, 3677, 646, 2008, 3924, 3489, 1308, 1121,
	1250, 2790, 2791, 2792, 1912, 1298, 864, 1122, 2789, 2787,
	2788, 2780, 2781, 2782, 2783, 2785, 2786, 2404, 4060, 862,
	860, 1075, 846, 1075, 2502, 858, 3670, 3663, 1955, 3309,
	3299, 3298, 3292, 855, 2789, 2787, 2788, 2780, 2781, 2782,
	2783, 2785, 2786, 2064, 1932, 1931, 3289, 2062, 3302, 3287,
	2023, 2005, 2223, 2220, 2019, 3247, 1966, 1114, 1568, 1569,
	1570, 1571, 1573, 1574, 3246, 2780, 2781, 2782, 2783, 2785,
	2786, 2736, 1309, 961, 705, 961, 1968, 1969, 1501, 2897,
	2735, 2078, 961, 1964, 1960, 1781, 1781, 1145, 2264, 961,
	961, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	961, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	961, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	961, 961, 961, 961, 1822, 961, 2096, 961, 961, 961,
	961, 652, 2734, 904, 655, 904, 2083, 1428, 2013, 1406,
	1353, 1406, 1963, 1447, 1963, 1996, 1108, 1997, 2733, 961,
	1129, 1129, 961, 961, 1123, 1775, 1775, 1500, 2883, 3816,
	961, 2691, 2010, 2496, 961, 2487, 961, 961, 2263, 1865,
	2225, 2479, 2012, 2478, 1145, 2457, 2381, 2941, 2166, 2504,
	961, 961, 961, 961, 1539, 961, 961, 961, 961, 961,
	961, 961, 961, 1265, 2041, 2124, 1343, 1930, 1342, 1120,
	2503, 2505, 2120, 2121, 1128, 1128, 2422, 1570, 1571, 1573,
	1574, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	2420, 1826, 1825, 2058, 961, 1834, 1836, 1862, 2554, 2107,
	902, 2197, 2198, 2422, 3077, 1574, 1081, 1948, 2077, 2411,
	2508, 1778, 1778, 1145, 1499, 2197, 2213, 2420, 1341, 1364,
	1340, 2017, 1081, 2094, 1462, 1858, 1317, 2076, 2373, 2080,
	2082, 1304, 2088, 2081, 1769, 1769, 2095, 2181, 961, 1145,
	2219, 2259, 885, 1120, 2111, 885, 885, 2112, 2113, 1863,
	1864, 3475, 2216, 2389, 3593, 1998, 2455, 852, 2649, 2212,
	2281, 2281, 2295, 3646, 2197, 2092, 1250, 2315, 2317, 1512,
	2474, 2094, 1428, 2321, 2444, 1121, 2181, 1859, 901, 2345,
	3471, 2664, 2011, 1122, 2073, 707, 706, 2786, 3502, 3978,
	579, 2467, 2468, 1442, 1076, 2020, 2021, 2022, 2068, 1829,
	2467, 2468, 2467, 2468, 1262, 2679, 1458, 3892, 2432, 2193,
	1076, 3485, 2337, 2092, 1713, 574, 3262, 2370, 2031, 2443,
	1965, 4006, 1743, 2075, 904, 1849, 3472, 2894, 1732, 2210,
	1850, 1532, 2490, 904, 1145, 2493, 2026, 904, 3083, 2359,
	1544, 3082, 1849, 2643, 1106, 2261, 1812, 1850, 2336, 1121,
	2262, 1470, 1470, 2265, 2652, 2266, 2267, 1122, 2509, 1079,
	2034, 903, 1856, 1781, 2225, 2492, 1516, 3648, 2027, 3920,
	2277, 2290, 159, 770, 1047, 1079, 3253, 2090, 2306, 2319,
	2383, 2344, 3137, 2349, 2093, 2189, 2355, 2356, 1717, 1145,
	2327, 2328, 2187, 2338, 2342, 2343, 1328, 1443, 1685, 1831,
	1894, 1262, 3288, 4007, 1448, 3286, 1730, 856, 2435, 961,
	961, 1484, 961, 3275, 702, 2424, 701, 2495, 1498, 2678,
	856, 856, 2028, 1893, 2477, 904, 857, 1720, 1851, 625,
	1123, 1830, 2093, 1775, 856, 2402, 2391, 2456, 2488, 1326,
	1088, 1715, 2956, 2063, 1853, 1851, 2091, 2061, 2423, 920,
	2008, 1889, 2398, 4022, 2348, 1495, 2035, 1718, 2949, 2651,
	2530, 1853, 1677, 1678, 3995, 1485, 3592, 2475, 2454, 3994,
	2459, 2401, 2379, 3483, 1086, 1863, 1864, 1446, 2405, 841,
	2460, 2955, 2648, 1262, 1262, 1716, 1262, 841, 3467, 4032,
	1884, 4015, 3468, 4009, 2091, 1868, 2072, 2948, 1262, 3967,
	2225, 2577, 897, 1890, 1123, 3384, 1855, 3921, 2840, 2568,
	897, 900, 3031, 2469, 2471, 2472, 2473, 2427, 2446, 1778,
	3383, 2437, 2440, 1855, 2584, 624, 2511, 3526, 1363, 1883,
	2458, 4045, 2581, 3274, 1867, 2074, 3524, 3470, 2450, 1306,
	1303, 652, 1769, 2476, 655, 1977, 961, 1865, 2610, 2008,
	1856, 3473, 2008, 3777, 2008, 1328, 1872, 628, 3793, 2632,
	2421, 2633, 1849, 1918, 1917, 2434, 2650, 1850, 3835, 2484,
	1089, 1269, 2512, 2928, 3263, 1876, 2630, 1719, 2612, 3647,
	2896, 842, 1513, 2616, 2617, 3032, 2177, 2524, 2967, 842,
	961, 3919, 2622, 2623, 2624, 2515, 961, 961, 2518, 2534,
	2520, 2613, 1510, 575, 159, 3484, 2595, 2693, 3134, 1856,
	2702, 737, 2585, 2175, 2654, 2563, 2656, 3966, 2671, 2672,
	2552, 2627, 2927, 1873, 3539, 2615, 1856, 1672, 2618, 2880,
	2619, 2634, 1856, 2636, 2574, 2638, 2575, 2700, 2576, 2559,
	1075, 2570, 2559, 3380, 2582, 2586, 2180, 2934, 3605, 4008,
	3031, 961, 961, 2580, 2647, 2597, 1075, 961, 3988, 3469,
	3867, 633, 2163, 2207, 1846, 1851, 576, 1511, 2033, 853,
	961, 961, 763, 1624, 3796, 2839, 961, 961, 1838, 1839,
	3135, 1853, 961, 2741, 771, 2341, 2935, 2433, 1514, 1457,
	1459, 961, 961, 961, 3476, 1406, 4033, 961, 1077, 2629,
	1077, 4013, 2030, 1847, 577, 1444, 578, 961, 2635, 2354,
	2637, 2694, 2639, 751, 903, 3150, 1877, 4043, 3833, 3549,
	2025, 2407, 3374, 1543, 961, 3234, 2171, 1105, 2724, 2660,
	2670, 2661, 2640, 639, 626, 2409, 1101, 623, 2172, 843,
	2659, 2657, 2173, 1855, 2107, 2665, 2178, 843, 3948, 1717,
	2697, 3834, 2510, 2188, 3385, 2422, 3949, 635, 3094, 2662,
	1852, 1472, 3525, 1238, 1515, 2680, 2698, 3799, 2410, 2438,
	2703, 2719, 2720, 3965, 1878, 1879, 2723, 1852, 1250, 3918,
	3977, 3730, 1087, 2408, 4014, 3975, 3813, 1874, 1720, 1899,
	961, 961, 961, 2930, 1906, 3706, 1713, 3540, 2225, 961,
	961, 961, 2339, 2692, 961, 3335, 2161, 3318, 1886, 2164,
	895, 3018, 841, 1939, 961, 1081, 1145, 4016, 1718, 3526,
	961, 1875, 961, 1710, 4046, 2932, 3589, 1554, 3524, 3722,
	1081, 2832, 2833, 1099, 2583, 897, 1094, 566, 1978, 3381,
	3429, 3723, 2110, 1866, 1823, 3098, 1856, 1553, 1145, 1428,
	3654, 2730, 2715, 3653, 2873, 2160, 4038, 3633, 844, 3763,
	1081, 3488, 630, 1145, 3336, 3296, 844, 3724, 3487, 2854,
	1717, 1253, 1253, 3249, 3019, 3013, 896, 1781, 2909, 904,
	2931, 1145, 2905, 2815, 2900, 634, 2538, 2528, 1959, 764,
	765, 1951, 1905, 961, 1944, 1926, 3133, 3188, 3203, 2834,
	845, 2174, 2878, 1076, 3800, 2100, 3845, 961, 845, 1720,
	2176, 2844, 1820, 638, 842, 3095, 1250, 1880, 1076, 1781,
	1553, 2890, 2461, 1715, 3726, 2699, 1624, 2863, 2069, 2892,
	752, 753, 632, 1548, 2701, 961, 2842, 1552, 1719, 1718,
	3725, 1553, 3588, 2898, 2848, 2871, 2867, 1775, 1076, 1816,
	2843, 3562, 3947, 3338, 1250, 2852, 1250, 3727, 2826, 2525,
	2333, 2855, 2856, 2901, 2902, 2860, 3875, 1716, 1079, 629,
	2919, 3876, 2841, 2924, 2925, 2810, 2811, 2812, 1145, 1818,
	1554, 2918, 1366, 1079, 2922, 1881, 3386, 1262, 3689, 1775,
	3687, 3522, 2906, 3634, 2881, 636, 2944, 1852, 2920, 1262,
	3430, 2018, 1819, 2916, 2162, 1145, 2439, 2915, 640, 2685,
	1552, 2663, 646, 1079, 2101, 2875, 2876, 2877, 2858, 631,
	2859, 3216, 4037, 1262, 2868, 2849, 2853, 2335, 2837, 2976,
	3486, 1552, 2334, 1778, 1262, 2970, 2910, 2947, 2973, 766,
	767, 2836, 2981, 2983, 2965, 1486, 2893, 1473, 1081, 3189,
	1854, 2899, 3590, 1554, 3525, 3012, 1769, 3190, 3387, 1719,
	3027, 2904, 2378, 2958, 2532, 2887, 2888, 3801, 2889, 1902,
	2999, 2847, 843, 2462, 2463, 1778, 2933, 2377, 1854, 2376,
	754, 755, 2940, 2375, 659, 1143, 1262, 1262, 1335, 1244,
	901, 3044, 3045, 3046, 2946, 1349, 2851, 3049, 1769, 3050,
	1336, 3036, 3770, 3007, 2610, 2960, 2952, 2951, 1755, 2988,
	2953, 1900, 1896, 2610, 2966, 2957, 2954, 3531, 1347, 3047,
	1896, 2979, 769, 2984, 3642, 2936, 2937, 2874, 3066, 2938,
	1957, 2990, 3985, 2974, 3685, 3848, 1076, 2459, 3631, 1145,
	3020, 2992, 1145, 3771, 2959, 3853, 3842, 3579, 3028, 652,
	1901, 3436, 655, 3728, 3205, 2968, 2232, 3872, 3729, 2961,
	2962, 3053, 3987, 2963, 3938, 1530, 3784, 1528, 2276, 2272,
	1507, 3611, 961, 3010, 3428, 3632, 3033, 2850, 961, 961,
	1505, 1483, 961, 961, 961, 3042, 961, 3073, 3308, 894,
	2807, 844, 3064, 3089, 3110, 961, 1781, 159, 159, 3068,
	3048, 1079, 1481, 3074, 961, 3051, 3052, 961, 3578, 2772,
	3849, 2704, 2529, 1145, 3643, 1479, 1477, 1475, 3772, 3088,
	3026, 2486, 961, 2452, 3079, 1467, 3080, 3873, 3081, 2400,
	1145, 1750, 1746, 845, 1465, 1531, 3035, 1345, 2270, 1430,
	1781, 1781, 961, 961, 2808, 961, 961, 961, 3096, 1075,
	3091, 2060, 3090, 3113, 904, 2274, 2275, 2273, 1548, 2645,
	2644, 2621, 2089, 961, 1075, 3085, 1775, 961, 2071, 1781,
	1781, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	961, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	1494, 961, 3093, 2038, 1075, 1923, 1805, 1656, 961, 961,
	1781, 660, 661, 1441, 1321, 961, 1348, 3913, 2231, 3508,
	1775, 1775, 2269, 2271, 3086, 3497, 961, 3841, 3560, 3989,
	3513, 3460, 3334, 3328, 3301, 3269, 3118, 1081, 1081, 1346,
	1529, 961, 1527, 768, 854, 1506, 1250, 2969, 3267, 1775,
	1775, 3129, 3248, 3011, 3003, 1504, 1482, 1077, 3145, 3130,
	2985, 3963, 1778, 3136, 3138, 3139, 2579, 2120, 3153, 1948,
	1145, 2555, 2543, 1077, 3160, 2535, 2008, 1480, 3161, 3221,
	1775, 3152, 3122, 3123, 3008, 1769, 3165, 3162, 2104, 3163,
	1478, 1476, 1474, 2522, 3200, 3014, 2120, 3168, 961, 1993,
	1466, 3192, 1991, 1988, 1636, 1983, 1778, 1778, 1641, 1464,
	3167, 1981, 1344, 1979, 961, 961, 3140, 3193, 1970, 1922,
	663, 662, 3244, 2059, 1920, 1076, 1076, 3196, 1910, 1769,
	1769, 1897, 1882, 1869, 1857, 1778, 1778, 3023, 159, 3159,
	961, 961, 3713, 3212, 3213, 1757, 3201, 3059, 3060, 3268,
	1557, 3270, 3207, 2683, 3209, 3210, 1056, 2980, 1769, 1769,
	3979, 3883, 1906, 3584, 3577, 961, 1778, 3576, 3520, 1250,
	1250, 2611, 3223, 664, 665, 3224, 1842, 1300, 3715, 2442,
	2422, 1057, 2422, 859, 861, 863, 3346, 1865, 1262, 1769,
	1079, 1079, 1075, 1071, 2420, 2029, 2441, 1387, 3882, 637,
	1781, 1525, 1526, 2055, 2054, 2036, 3490, 1956, 3300, 3515,
	1386, 3282, 3284, 1463, 3281, 1564, 1565, 3749, 3437, 3277,
	3415, 2464, 3297, 3252, 2445, 1262, 1561, 2298, 580, 3981,
	3973, 3943, 961, 3475, 2684, 3295, 227, 227, 565, 2521,
	1081, 961, 2057, 1250, 3291, 1558, 225, 2491, 1749, 1813,
	2499, 3348, 2498, 3324, 2481, 3294, 2483, 1262, 1262, 1262,
	1905, 2447, 3471, 3356, 2459, 3240, 3464, 3340, 3840, 2482,
	1775, 1564, 1565, 1262, 1566, 3354, 1058, 693, 3343, 1145,
	591, 3325, 3462, 734, 3311, 3339, 1387, 3809, 3466, 1387,
	563, 3806, 2568, 3769, 2449, 3682, 3327, 1844, 3317, 3231,
	1567, 1145, 2562, 2320, 961, 961, 3326, 2448, 3472, 1808,
	961, 961, 1781, 3372, 1762, 961, 961, 2910, 961, 4010,
	3875, 3640, 961, 3329, 2610, 3876, 2879, 4036, 1076, 1271,
	1566, 2778, 2779, 961, 3341, 1564, 1565, 3344, 2414, 2415,
	3350, 3360, 3808, 3349, 3991, 1451, 3465, 2412, 2413, 961,
	3407, 1450, 2227, 3236, 3355, 2414, 1778, 2412, 2260, 3703,
	3671, 1509, 3370, 3366, 1508, 3363, 3516, 3389, 3367, 3397,
	3512, 3511, 3403, 3388, 3332, 3361, 3362, 3235, 3141, 1769,
	3382, 969, 1775, 3377, 3369, 2971, 1650, 1649, 4024, 3996,
	3760, 3342, 3667, 1079, 3625, 3623, 3546, 3401, 3453, 3371,
	3352, 3312, 3310, 3265, 3260, 3043, 3017, 3016, 2642, 1081,
	2626, 2625, 2572, 2547, 2523, 2393, 2392, 1081, 2192, 2056,
	2053, 1145, 2052, 1145, 232, 232, 232, 2051, 569, 570,
	1081, 585, 569, 585, 595, 600, 2050, 1973, 616, 1915,
	1145, 1972, 1971, 622, 1954, 3442, 1934, 1933, 1929, 232,
	1928, 1927, 1925, 1924, 1524, 1523, 1374, 1373, 1372, 961,
	1371, 3427, 3373, 1370, 1369, 1368, 1367, 748, 1778, 3481,
	3467, 1075, 1075, 232, 3468, 1365, 1360, 1359, 1358, 1357,
	1356, 1316, 1315, 1314, 1313, 1312, 1145, 3445, 1311, 1305,
	3482, 1769, 1299, 1145, 1297, 1296, 1136, 1076, 1135, 3441,
	3457, 3458, 3448, 3493, 3494, 1076, 3439, 3440, 1134, 1262,
	1262, 3492, 3444, 3449, 1133, 3438, 2867, 1104, 1076, 3470,
	1103, 3491, 159, 3443, 3459, 1039, 1814, 865, 851, 3645,
	3434, 3480, 3474, 3473, 1518, 1145, 82, 3529, 1307, 3304,
	1262, 680, 76, 1903, 2975, 3264, 824, 3871, 1293, 3527,
	3792, 688, 3855, 3517, 3519, 3518, 2926, 2500, 2037, 3510,
	1471, 1253, 1079, 2039, 2862, 2361, 961, 3832, 3411, 3532,
	1079, 2740, 3756, 3604, 2230, 1654, 3580, 3505, 2819, 569,
	569, 1145, 3564, 1079, 3507, 78, 945, 232, 991, 3538,
	3537, 3461, 3251, 961, 961, 961, 2600, 3535, 3567, 3583,
	3563, 3558, 1948, 3533, 3534, 3551, 3548, 1766, 3357, 3358,
	3359, 1145, 1768, 3528, 911, 1148, 961, 1824, 3553, 961,
	961, 951, 3565, 3496, 1840, 1833, 2394, 2280, 968, 961,
	965, 1770, 1781, 2667, 3504, 1772, 3506, 961, 961, 967,
	966, 3469, 1771, 1673, 964, 1765, 3331, 3330, 2531, 2566,
	1352, 826, 1145, 1828, 2186, 2214, 2729, 1647, 3591, 926,
	947, 2211, 1097, 3596, 936, 1145, 1077, 2845, 3030, 3230,
	3568, 2099, 696, 961, 1075, 2775, 3476, 2217, 1090, 2303,
	961, 1077, 2296, 2292, 2556, 1534, 1626, 2567, 961, 3613,
	1781, 1131, 3607, 929, 2184, 1638, 2709, 2109, 961, 3037,
	2865, 961, 1775, 2387, 3627, 3541, 3879, 3149, 1938, 961,
	1055, 1077, 3572, 2298, 2298, 3552, 1145, 3618, 3658, 3659,
	1054, 3622, 3619, 3620, 1053, 3861, 3858, 3364, 2997, 1817,
	2406, 2123, 1616, 3004, 3628, 3571, 3626, 3666, 941, 1249,
	2830, 3672, 3067, 3649, 3674, 3675, 1318, 621, 953, 1615,
	2507, 2506, 3650, 3766, 1118, 3676, 2706, 2707, 1117, 1116,
	1775, 1145, 2908, 3688, 1262, 3697, 4044, 3261, 3601, 202,
	2677, 3668, 3664, 1555, 1547, 199, 201, 200, 3542, 3702,
	3941, 3279, 961, 961, 2190, 3673, 2989, 20, 1778, 19,
	18, 103, 3733, 3734, 3681, 961, 961, 3686, 3701, 1636,
	3714, 2999, 39, 17, 116, 132, 3710, 3656, 131, 130,
	3696, 1769, 961, 1781, 3712, 129, 128, 134, 2228, 127,
	126, 121, 125, 1140, 3709, 124, 3711, 3708, 3567, 1248,
	3717, 123, 3716, 2298, 2298, 2298, 961, 122, 3731, 961,
	120, 119, 118, 1075, 3744, 117, 1778, 115, 114, 3773,
	113, 1075, 112, 2302, 111, 3762, 110, 3718, 961, 109,
	108, 1428, 107, 106, 1075, 105, 104, 3737, 3779, 1769,
	3754, 612, 609, 55, 3745, 3746, 2801, 2802, 2803, 54,
	1948, 1262, 3761, 1775, 102, 101, 16, 37, 14, 59,
	60, 13, 3778, 1253, 32, 961, 961, 81, 93, 1077,
	3795, 1354, 92, 3787, 33, 961, 90, 89, 961, 31,
	1262, 15, 87, 2371, 86, 3810, 3786, 30, 3812, 28,
	1262, 1262, 1378, 1378, 1378, 3790, 11, 9, 8, 3788,
	34, 3789, 1734, 12, 5, 3823, 164, 1262, 3807, 1415,
	1416, 3803, 3804, 3802, 163, 165, 162, 3701, 80, 161,
	961, 961, 3814, 1092, 160, 3815, 79, 3819, 26, 10,
	3821, 3822, 156, 3698, 3820, 3322, 74, 158, 3748, 1778,
	157, 3828, 155, 3829, 154, 3850, 3827, 3826, 153, 75,
	3852, 1102, 72, 961, 961, 152, 961, 151, 616, 3837,
	73, 150, 1769, 3860, 3863, 24, 6, 58, 7, 3586,
	3075, 96, 97, 35, 3877, 3851, 70, 69, 2417, 68,
	3884, 232, 23, 232, 232, 1241, 57, 232, 232, 22,
	3865, 192, 191, 190, 3869, 189, 188, 3897, 1517, 3836,
	187, 232, 182, 1273, 961, 961, 961, 181, 186, 3898,
	184, 183, 3896, 185, 180, 194, 3888, 193, 3893, 3891,
	196, 3881, 179, 177, 3925, 173, 172, 961, 1302, 176,
	3930, 178, 3864, 175, 174, 3868, 3909, 3910, 171, 3912,
	3794, 1320, 3911, 1325, 195, 149, 232, 232, 65, 1241,
	3928, 148, 147, 146, 145, 144, 3950, 143, 142, 232,
	3952, 64, 21, 2, 1, 0, 3940, 1362, 0, 0,
	0, 3959, 0, 0, 0, 0, 961, 0, 3954, 0,
	232, 232, 232, 3951, 1241, 232, 3960, 3956, 0, 0,
	3964, 0, 0, 0, 0, 616, 0, 232, 232, 0,
	0, 3970, 3971, 0, 3974, 3983, 0, 3972, 0, 3980,
	3976, 0, 0, 0, 0, 3860, 2568, 0, 3863, 3982,
	748, 3986, 3984, 3990, 961, 0, 961, 0, 3993, 4001,
	3998, 4004, 0, 0, 4000, 4005, 4002, 3997, 0, 0,
	4003, 3999, 0, 0, 0, 3992, 3957, 3958, 1077, 1077,
	0, 3961, 0, 0, 1250, 0, 4017, 0, 4019, 0,
	0, 0, 0, 0, 3885, 0, 0, 3886, 0, 0,
	3881, 0, 0, 4028, 4026, 0, 4025, 4031, 0, 0,
	0, 961, 961, 0, 0, 0, 232, 0, 4030, 961,
	0, 961, 961, 4040, 0, 4034, 2298, 2298, 4047, 0,
	4048, 0, 3791, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 4049, 0, 0, 4051, 0, 0, 4050, 0,
	0, 4054, 0, 0, 4059, 4058, 0, 0, 0, 2302,
	4063, 4056, 4062, 4061, 4066, 961, 1744, 4057, 1253, 3106,
	3107, 0, 4071, 0, 0, 0, 0, 4067, 0, 0,
	4069, 1753, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4041, 4042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2298, 2298, 2298, 2298, 2298, 2298,
	2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298,
	2298, 2298, 2298, 0, 2298, 0, 0, 0, 0, 2302,
	2302, 0, 0, 0, 4068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3169, 3170, 3171,
	3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181,
	3182, 3183, 3184, 3185, 3186, 3187, 0, 3191, 0, 0,
	0, 1077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 1564, 1565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	232, 0, 0, 0, 232, 1595, 0, 0, 0, 2302,
	2302, 2302, 1567, 0, 0, 0, 0, 1273, 1241, 232,
	0, 232, 0, 0, 0, 0, 232, 1273, 585, 0,
	0, 232, 1273, 0, 0, 0, 0, 616, 0, 0,
	2831, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 0,
	1583, 1936, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 2857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2870, 1354, 0,
	1962, 0, 1962, 1564, 1565, 0, 0, 0, 0, 0,
	1077, 0, 0, 0, 3109, 2885, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 1595, 0, 1712, 0, 0,
	0, 1077, 1567, 0, 1589, 1590, 1591, 1592, 0, 1248,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 0,
	1583, 0, 1594, 1596, 0, 0, 0, 739, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 0, 1581, 1582, 232, 0,
	0, 0, 0, 66, 0, 742, 741, 0, 2032, 0,
	0, 0, 0, 0, 3104, 0, 0, 0, 2042, 67,
	2044, 0, 2046, 1587, 2048, 0, 2049, 0, 0, 2870,
	0, 0, 71, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 232,
	0, 0, 0, 232, 0, 0, 0, 0, 232, 0,
	0, 0, 2070, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 232, 0,
	232, 0, 1594, 1596, 569, 0, 0, 0, 910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 83, 0, 0, 0, 0, 1581, 1582, 0, 0,
	0, 0, 0, 0, 98, 0, 1593, 232, 66, 84,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 67, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 71, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 1244, 0, 0, 1143, 0, 85, 0,
	0, 0, 0, 232, 0, 1241, 232, 67, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 616,
	71, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 2302, 2302, 0, 232, 232, 0, 232, 0,
	232, 0, 232, 0, 232, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 1593, 0, 0, 98,
	0, 0, 0, 2065, 84, 95, 2066, 3126, 2067, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	232, 0, 0, 0, 3142, 0, 0, 1584, 1580, 83,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 600, 98, 0, 0, 616, 0, 84, 95, 0,
	0, 0, 0, 85, 0, 88, 0, 0, 0, 2368,
	2302, 2302, 2302, 2302, 2302, 2302, 2302, 2302, 2302, 2302,
	2302, 2302, 2302, 2302, 2302, 2302, 2302, 2302, 2302, 0,
	2302, 0, 2298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 91, 85, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2778, 2779, 0, 2796, 2797, 2798, 0,
	0, 203, 0, 0, 0, 3610, 2298, 0, 0, 743,
	0, 0, 0, 133, 1564, 1565, 0, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	2384, 0, 0, 0, 3233, 0, 1595, 0, 0, 205,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 3636,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2793, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1566, 0, 0, 0, 170, 0, 0,
	0, 0, 569, 0, 0, 204, 0, 0, 0, 166,
	91, 1248, 94, 88, 0, 197, 0, 232, 0, 0,
	0, 0, 0, 198, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 232, 0, 569, 203, 0, 0, 0,
	0, 0, 0, 0, 743, 740, 0, 232, 133, 0,
	0, 0, 166, 91, 0, 94, 1943, 0, 0, 0,
	0, 0, 0, 2542, 2784, 2298, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 1572, 0, 743, 0, 0,
	2573, 133, 0, 1378, 0, 1378, 0, 1378, 135, 910,
	0, 0, 0, 910, 0, 0, 0, 585, 3753, 0,
	0, 0, 170, 0, 0, 0, 0, 205, 0, 0,
	204, 0, 0, 1594, 1596, 0, 0, 0, 0, 0,
	197, 2620, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 135, 0, 0, 0, 0, 0, 2628, 1275, 2631,
	1281, 2431, 1287, 2794, 0, 170, 0, 0, 0, 232,
	169, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 197, 1587, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 232, 0, 2653, 1248, 2655, 1248,
	0, 2658, 0, 0, 0, 0, 0, 0, 66, 232,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 67, 232, 2513, 0, 0, 0,
	0, 0, 0, 1399, 1378, 0, 0, 71, 0, 0,
	0, 0, 2686, 0, 0, 0, 0, 0, 0, 0,
	1417, 1273, 1422, 0, 232, 0, 0, 0, 0, 0,
	0, 232, 1431, 0, 1436, 0, 0, 2551, 0, 0,
	0, 0, 77, 0, 0, 0, 2795, 2431, 0, 569,
	0, 0, 2571, 0, 0, 0, 0, 0, 232, 0,
	0, 232, 0, 232, 0, 232, 0, 1588, 0, 0,
	1241, 0, 232, 232, 0, 0, 83, 0, 0, 0,
	0, 0, 2593, 748, 0, 2431, 2431, 3447, 0, 98,
	1490, 0, 0, 1496, 84, 95, 0, 0, 0, 232,
	0, 0, 0, 0, 3455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 1241, 232, 0, 0,
	1273, 0, 1273, 0, 0, 1241, 0, 1241, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 232, 232, 232, 1241, 232,
	0, 232, 0, 2790, 2791, 2792, 0, 0, 0, 0,
	2789, 2787, 2788, 2780, 2781, 2782, 2783, 2785, 2786, 0,
	0, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 0, 0,
	0, 0, 232, 1576, 1568, 1569, 1570, 1571, 1573, 1574,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1600, 1595, 0, 0,
	88, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 3602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2302, 1273,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 166,
	91, 0, 94, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 1583, 0, 0, 2903, 3602, 0, 0, 0,
	0, 1706, 1706, 1706, 0, 0, 203, 0, 0, 2123,
	0, 0, 2302, 0, 743, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 2943, 2945,
	0, 2542, 0, 0, 0, 0, 0, 0, 0, 0,
	67, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 1589, 1590, 1591, 1592,
	2123, 0, 0, 0, 0, 0, 1572, 0, 135, 0,
	0, 0, 0, 0, 910, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 232, 0, 77, 0,
	204, 0, 234, 0, 0, 1604, 0, 0, 1614, 0,
	197, 232, 0, 3005, 1594, 1596, 569, 3009, 198, 0,
	0, 569, 0, 0, 569, 0, 0, 569, 569, 1610,
	0, 1611, 83, 569, 0, 0, 0, 0, 1581, 1582,
	1411, 232, 0, 0, 0, 98, 0, 0, 0, 0,
	84, 95, 0, 1273, 1602, 0, 0, 0, 0, 0,
	0, 2302, 1248, 1248, 0, 1587, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3063, 0, 0,
	1612, 2431, 2431, 232, 0, 1325, 0, 0, 2431, 85,
	0, 2912, 0, 0, 0, 0, 0, 1601, 0, 2431,
	2912, 0, 2431, 2912, 2912, 0, 0, 0, 0, 2778,
	2779, 0, 2796, 2797, 2798, 0, 232, 232, 1325, 232,
	0, 0, 0, 0, 3087, 0, 1248, 0, 0, 0,
	3115, 0, 0, 0, 2302, 2302, 0, 0, 0, 1325,
	232, 1241, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 2431, 0, 2972, 2431, 1325, 0, 3099,
	2431, 2431, 0, 924, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2793, 0,
	0, 0, 0, 232, 2993, 0, 0, 2995, 2431, 0,
	0, 232, 0, 1605, 0, 232, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 2551, 0, 0, 1241, 0, 232,
	0, 0, 2431, 0, 569, 0, 0, 0, 0, 0,
	0, 2431, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 232, 0, 0, 0, 166, 91, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2784, 0, 0, 0, 0, 232, 2551, 0, 0, 2551,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	743, 1603, 0, 0, 133, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 2753, 0, 0, 3084, 2754,
	205, 1241, 232, 2799, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 170, 2794,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	2098, 0, 2102, 3147, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 0, 0, 0, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 0, 2165, 0, 2167, 2168, 2169, 2170, 0, 0,
	0, 0, 2795, 0, 0, 0, 0, 0, 2542, 0,
	0, 0, 0, 0, 0, 0, 2194, 3321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 2209, 3333, 0, 0, 0, 0, 0, 232, 232,
	0, 0, 0, 0, 0, 0, 0, 2239, 2242, 2245,
	2248, 0, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 0,
	569, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2294, 0, 2305, 2307, 2312, 0, 0, 0, 0, 0,
	0, 3375, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2790,
	2791, 2792, 0, 0, 0, 0, 2789, 2787, 2788, 2780,
	2781, 2782, 2783, 2785, 2786, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 924, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 1229, 0, 0,
	0, 0, 232, 1564, 1565, 0, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1595, 232, 0, 0, 0,
	0, 0, 1567, 0, 0, 232, 0, 2778, 2779, 1613,
	2796, 2797, 2798, 232, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 3114, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	2431, 232, 1586, 0, 0, 0, 0, 0, 0, 0,
	1583, 0, 1564, 1565, 0, 0, 2593, 2593, 0, 0,
	0, 0, 748, 748, 2431, 0, 0, 2551, 2551, 0,
	0, 748, 2431, 0, 1595, 0, 2793, 0, 0, 232,
	0, 1567, 0, 0, 0, 0, 0, 0, 3495, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2542, 0, 0, 0, 0, 2516, 2517, 0, 2519,
	0, 1566, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 1586, 0, 0, 1572, 0, 0, 0, 0, 1583,
	0, 0, 233, 233, 233, 0, 0, 0, 0, 0,
	0, 0, 2542, 0, 0, 0, 0, 0, 3412, 3559,
	0, 0, 0, 1604, 0, 0, 1614, 233, 2784, 0,
	0, 0, 1594, 1596, 0, 0, 0, 0, 0, 0,
	0, 2778, 2779, 3103, 2796, 2797, 2798, 1610, 0, 1611,
	0, 233, 0, 0, 0, 0, 1581, 1582, 0, 0,
	0, 0, 0, 1589, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 1602, 1572, 0, 0, 0, 0, 0, 0,
	232, 2799, 0, 1587, 0, 0, 1273, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 1612, 0,
	2793, 1594, 1596, 2641, 0, 0, 0, 2794, 2431, 2431,
	2431, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 1581, 1582, 0, 0, 2431,
	0, 2912, 0, 0, 1273, 1273, 232, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3637, 1325, 232,
	1325, 232, 1587, 1617, 1618, 0, 0, 0, 0, 0,
	0, 2431, 0, 2431, 232, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2431, 0, 0,
	0, 3544, 2784, 0, 0, 0, 1588, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2689, 2690,
	0, 1605, 0, 0, 2696, 0, 0, 0, 0, 0,
	2795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 2710, 2711, 2799, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 1593, 0, 0, 2718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2732, 1588, 3743, 1248, 0, 0,
	0, 2794, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 2744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	0, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 924,
	0, 0, 2431, 3847, 2912, 1229, 0, 3630, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 2790, 2791, 2792,
	0, 0, 0, 0, 2789, 2787, 2788, 2780, 2781, 2782,
	2783, 2785, 2786, 0, 0, 0, 2312, 2312, 2312, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 2835,
	3811, 0, 0, 0, 2795, 0, 1584, 1580, 0, 1577,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0,
	0, 3630, 0, 0, 0, 0, 0, 0, 0, 2431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	910, 3854, 0, 0, 232, 232, 0, 946, 100, 0,
	0, 0, 0, 0, 910, 0, 0, 1229, 0, 0,
	3878, 0, 0, 0, 0, 0, 0, 0, 3147, 0,
	0, 0, 0, 0, 0, 0, 0, 3890, 0, 0,
	0, 0, 2929, 3630, 0, 0, 0, 0, 0, 0,
	0, 2790, 2791, 2792, 0, 0, 0, 0, 2789, 2787,
	2788, 2780, 2781, 2782, 2783, 2785, 2786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 0, 232,
	0, 0, 100, 0, 66, 0, 43, 42, 0, 0,
	0, 0, 0, 0, 0, 3544, 0, 0, 0, 0,
	67, 0, 136, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 71, 0, 0, 0, 2912, 0, 233,
	1149, 233, 233, 61, 1149, 233, 233, 1149, 0, 0,
	45, 0, 138, 2778, 2779, 0, 2796, 2797, 2798, 233,
	0, 0, 1273, 0, 1273, 0, 44, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 886, 0, 1149,
	0, 0, 0, 0, 0, 0, 0, 905, 0, 3846,
	47, 62, 0, 0, 0, 0, 1273, 48, 0, 232,
	0, 0, 83, 1149, 233, 233, 139, 0, 0, 0,
	0, 0, 0, 46, 0, 98, 0, 233, 232, 2431,
	84, 95, 2793, 1065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 233, 233,
	233, 0, 0, 233, 1149, 0, 0, 0, 0, 0,
	1149, 49, 1564, 1565, 1149, 233, 233, 0, 0, 0,
	0, 3147, 0, 0, 0, 0, 0, 0, 1149, 85,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 0, 0, 3101, 3102, 0, 0, 3105,
	0, 0, 0, 3108, 2784, 0, 0, 0, 0, 0,
	0, 1566, 3112, 0, 2431, 0, 1149, 0, 0, 1229,
	0, 3119, 0, 0, 2835, 0, 0, 0, 0, 1564,
	1565, 0, 0, 0, 0, 3630, 2800, 0, 0, 3131,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 2799, 1567, 3154,
	3155, 233, 3156, 3157, 3158, 0, 1273, 0, 2431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3164, 0, 0, 0, 3166, 0, 88, 0, 1566, 0,
	0, 0, 0, 2794, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 1572, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 3194, 3195, 0, 0, 63,
	0, 0, 0, 0, 53, 166, 91, 0, 94, 0,
	0, 0, 51, 3206, 0, 0, 140, 0, 0, 0,
	0, 1594, 1596, 52, 0, 0, 0, 0, 3215, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 0, 0, 133, 2593, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 1229, 0, 2593, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 1587, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 3245, 2795, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 1594, 1596,
	0, 3254, 3257, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 3278, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1587,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 3,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 0, 1229, 233, 233, 233,
	0, 0, 0, 0, 233, 1588, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1149, 0, 2790, 2791, 2792, 0, 0, 0, 0,
	2789, 2787, 2788, 2780, 2781, 2782, 2783, 2785, 2786, 1706,
	0, 0, 1149, 0, 0, 0, 0, 0, 3351, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 100, 1588, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3390, 3391, 0, 0, 0, 0, 3395, 3396, 1564,
	1565, 0, 3399, 3400, 0, 1607, 1608, 1609, 0, 3404,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0,
	3408, 1595, 0, 0, 0, 0, 0, 0, 1567, 0,
	0, 0, 0, 0, 100, 1613, 3413, 0, 905, 100,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 100, 0, 1149, 233, 0, 1566, 0,
	0, 0, 0, 100, 1149, 100, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 1575, 1576, 1568,
	1569, 1570, 1571, 1573, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 233, 0, 0, 0, 0, 233, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 233, 0, 233, 0, 233, 0,
	1589, 1590, 1591, 1592, 0, 0, 3257, 0, 0, 0,
	1572, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 1604,
	0, 0, 1614, 0, 0, 0, 0, 711, 1594, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 712, 1149,
	0, 1149, 0, 1149, 0, 886, 0, 0, 0, 0,
	0, 0, 1581, 1582, 0, 0, 713, 0, 0, 1149,
	1149, 0, 0, 0, 0, 1629, 0, 0, 1602, 0,
	1149, 233, 0, 732, 233, 0, 0, 0, 0, 1587,
	0, 0, 1634, 1149, 1149, 1149, 1640, 957, 0, 0,
	0, 714, 0, 3257, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 233, 0, 233, 0, 233, 0,
	233, 0, 233, 715, 0, 0, 0, 0, 0, 0,
	3597, 3598, 3599, 0, 0, 0, 0, 0, 0, 0,
	231, 231, 231, 716, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 2116, 0, 639, 3608, 3609, 233, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 3617, 0, 0, 0, 0, 731,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 0, 0, 0, 1149, 0, 1229, 0,
	0, 0, 0, 0, 1726, 0, 1729, 3257, 100, 0,
	0, 0, 0, 0, 0, 3655, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 3662, 0, 0, 910, 0,
	1229, 0, 0, 0, 0, 0, 3669, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 0, 0, 924, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 0, 0, 0, 0, 924,
	0, 0, 737, 1078, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 0, 0, 0, 3257,
	3257, 0, 1606, 1584, 1580, 0, 1577, 1575, 1576, 1568,
	1569, 1570, 1571, 1573, 1574, 638, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 735, 736, 722, 0,
	0, 0, 0, 0, 729, 0, 0, 723, 0, 0,
	0, 0, 1149, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 3765, 0, 0, 3768, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 1149, 0,
	724, 730, 0, 0, 0, 3257, 0, 1229, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 3257, 0, 0, 3257, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 0, 1564, 1565, 0, 1597,
	1598, 1599, 1607, 1608, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1600, 1595, 0,
	0, 0, 0, 1149, 0, 1567, 0, 0, 2116, 0,
	0, 0, 1613, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 910, 233, 0, 0, 1586, 0, 0, 0, 0,
	0, 1229, 0, 1583, 1229, 0, 0, 233, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 233, 0, 0, 0, 905, 0, 905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3908, 3908, 3908, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 3929, 0, 0, 1589, 1590, 1591,
	1592, 0, 0, 0, 0, 1229, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 233,
	0, 233, 1229, 233, 0, 0, 0, 0, 0, 0,
	233, 233, 1149, 1149, 0, 1149, 1604, 0, 0, 1614,
	0, 0, 0, 3908, 0, 1594, 1596, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	1610, 0, 1611, 0, 0, 0, 0, 0, 0, 1581,
	1582, 0, 0, 233, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 3257, 0, 3257, 0, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 886, 886, 0,
	0, 0, 233, 233, 233, 233, 0, 233, 0, 233,
	0, 1612, 0, 0, 0, 0, 0, 231, 0, 231,
	231, 0, 0, 231, 231, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 3908, 4035,
	233, 0, 1229, 0, 0, 0, 4039, 0, 233, 0,
	0, 0, 2183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1564, 1565, 0, 0, 0, 905, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 1593,
	0, 1634, 231, 231, 0, 1595, 0, 0, 0, 0,
	993, 0, 1567, 0, 0, 231, 0, 0, 0, 1588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 231, 231, 0,
	0, 231, 1566, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 1586, 231, 231, 0, 0, 0, 0, 0,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 0, 1603, 0, 1572, 0, 1578, 1579, 1585, 1606,
	1584, 1580, 231, 1577, 1575, 1576, 1568, 1569, 1570, 1571,
	1573, 1574, 0, 0, 0, 0, 2205, 0, 0, 231,
	2206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 1594, 1596, 0, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 1581, 1582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 100, 0,
	0, 0, 1149, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 100, 0, 0, 100, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 233, 0, 233, 0, 0,
	0, 0, 0, 1229, 233, 1229, 1593, 0, 0, 100,
	0, 0, 100, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 1229, 0, 0, 0, 1588, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 1149, 0,
	0, 0, 0, 0, 1149, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 1728, 0, 1078, 0, 1229, 233,
	231, 0, 1149, 233, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 231, 1728, 231, 0, 0,
	0, 0, 653, 0, 0, 0, 0, 653, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 233, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1149, 1149, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1149, 0,
	233, 1149, 233, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1564, 1565, 233, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 1634, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1595, 0, 1229, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 1149, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1149,
	0, 0, 1566, 924, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 1229, 0,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 231,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 1082, 0, 0, 1082, 0,
	0, 0, 231, 1229, 231, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	1082, 0, 1065, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 1065, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 0, 1614, 0, 0, 1149,
	0, 0, 1594, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 1611,
	0, 0, 0, 0, 0, 1082, 1581, 1582, 0, 231,
	0, 1082, 231, 0, 0, 1082, 0, 0, 0, 0,
	0, 962, 1602, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 231, 1587, 0, 0, 0, 0, 0, 0,
	0, 653, 231, 0, 231, 0, 231, 0, 231, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 100, 100, 0, 0, 100,
	0, 0, 0, 0, 0, 1601, 0, 1082, 0, 0,
	233, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 100,
	100, 0, 0, 100, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 1593, 0, 233, 0,
	0, 0, 0, 0, 1149, 0, 924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 1564, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1149, 1149, 1149, 0,
	0, 1605, 0, 0, 1595, 1065, 0, 0, 905, 0,
	0, 1567, 1149, 0, 0, 0, 0, 233, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 100, 0, 0, 0,
	1149, 1566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 237, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	0, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 0, 0, 1078, 0, 0, 0, 3418, 0, 0,
	0, 645, 0, 1589, 1590, 1591, 1592, 0, 0, 1078,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 1149, 0, 0, 0, 0, 1082, 0, 1082,
	0, 1594, 1596, 0, 0, 0, 0, 0, 0, 1149,
	0, 0, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1581, 1582, 0, 0, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 1149, 0, 233, 0, 233,
	0, 0, 1149, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 1149, 1149,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 231, 233, 0,
	0, 0, 0, 0, 1149, 233, 670, 0, 0, 1149,
	231, 0, 0, 0, 1065, 1065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 1593, 0, 0, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 1588, 690, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	673, 0, 0, 674, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 0, 231, 1082, 0, 231, 0, 231,
	697, 231, 0, 0, 0, 0, 675, 0, 231, 231,
	0, 1149, 0, 0, 0, 0, 0, 0, 695, 0,
	0, 0, 0, 0, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 231, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 231, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 678, 0, 0, 0, 0, 699, 0,
	0, 0, 639, 0, 0, 1149, 1584, 1580, 0, 1577,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0,
	231, 231, 231, 231, 0, 231, 0, 231, 0, 0,
	0, 0, 1147, 0, 0, 0, 1147, 1065, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 1149, 0, 0, 0, 0, 231, 0,
	1082, 0, 1082, 0, 1082, 0, 231, 0, 698, 0,
	0, 1264, 100, 0, 0, 0, 0, 681, 0, 0,
	1082, 1082, 233, 233, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 1082, 1082, 1082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 682, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 1264, 0, 0, 0,
	0, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 691, 233, 0, 0, 1149,
	100, 0, 0, 0, 684, 0, 1065, 0, 1264, 1149,
	1149, 0, 0, 0, 1065, 1782, 1782, 1082, 0, 0,
	0, 0, 0, 689, 0, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 685, 1146, 0,
	702, 1263, 701, 0, 0, 0, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 694, 0, 0, 233, 0, 703,
	0, 700, 1078, 1263, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 1078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1263, 0, 0,
	0, 0, 0, 233, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1263, 0,
	0, 0, 0, 0, 1263, 100, 0, 0, 1263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 0, 1082, 0, 0, 231,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 231, 231, 0, 231, 0, 0, 0, 0,
	1263, 0, 1728, 1564, 1565, 0, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 1600, 1595, 0, 0, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 0, 653,
	0, 0, 1566, 0, 0, 0, 0, 231, 0, 0,
	0, 231, 1586, 0, 0, 1147, 0, 0, 0, 0,
	1583, 0, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 0, 0, 1264, 0, 0, 0, 0, 1564, 1565,
	0, 0, 0, 1782, 0, 0, 231, 231, 0, 0,
	0, 0, 0, 0, 1147, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 0, 1567, 0, 1082,
	0, 231, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 1082, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 2183, 0, 0, 0, 0, 0, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 0, 0, 1604, 0, 1583, 1614, 0, 231, 0,
	231, 0, 1594, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 1611,
	0, 0, 0, 0, 0, 0, 1581, 1582, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 2688,
	0, 0, 1602, 1082, 1082, 0, 1082, 0, 0, 0,
	0, 0, 0, 1587, 0, 0, 0, 0, 1082, 1589,
	1590, 1591, 1592, 0, 0, 0, 0, 1264, 0, 1572,
	0, 0, 0, 0, 0, 0, 1147, 0, 1612, 0,
	100, 0, 0, 0, 0, 0, 0, 1146, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 645, 0,
	0, 0, 0, 645, 0, 0, 0, 1594, 1596, 0,
	0, 0, 0, 0, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1581, 1582, 0, 0, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1078, 1078, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 100, 0, 0,
	0, 1264, 0, 1264, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 1264, 1264, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1263,
	0, 1588, 0, 0, 0, 0, 0, 0, 1146, 1603,
	0, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 3117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 231, 0, 1147, 0,
	0, 0, 0, 0, 0, 1082, 1082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1078, 0, 0,
	1082, 0, 1584, 1580, 0, 1577, 1575, 1576, 1568, 1569,
	1570, 1571, 1573, 1574, 0, 0, 0, 0, 1082, 0,
	0, 0, 0, 1263, 0, 1263, 0, 1263, 0, 0,
	1082, 0, 0, 1082, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 1263, 1263, 0, 0, 1782, 0, 0,
	0, 1082, 0, 0, 1263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 0, 1263, 1263, 1263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	1147, 0, 0, 0, 0, 0, 1078, 0, 0, 1082,
	0, 0, 0, 0, 1078, 1082, 0, 0, 0, 0,
	1146, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 1147, 1082, 1082, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 1146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	1147, 0, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 0, 0, 0,
	0, 0, 0, 1564, 1565, 0, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 1600, 1595, 1782, 0, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1082, 0, 1566, 0, 1264, 1264, 0, 1264, 0, 0,
	1782, 1782, 1586, 0, 0, 0, 0, 0, 0, 1264,
	1583, 0, 0, 0, 0, 0, 0, 1263, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 1782,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 1082, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 1263, 0, 1614, 0, 0, 0,
	1082, 0, 1594, 1596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 1611,
	231, 231, 0, 0, 0, 0, 1581, 1582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1263, 1263, 1612, 1263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1263, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	1082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 1082, 1082,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 231, 0, 1147, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 0, 1147,
	0, 231, 1782, 0, 1564, 1565, 0, 1597, 1598, 1599,
	1607, 1608, 1609, 0, 1147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1595, 0, 0, 0,
	0, 0, 1147, 1567, 0, 0, 0, 0, 0, 1603,
	1613, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 0, 0, 1566, 0, 0, 0, 2756, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 0, 0, 0,
	0, 1583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	0, 1082, 0, 1082, 0, 0, 0, 0, 0, 0,
	1082, 0, 0, 0, 0, 0, 0, 0, 0, 1147,
	1082, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 1589, 1590, 1591, 1592, 0,
	1264, 0, 0, 0, 0, 1572, 1147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1146,
	0, 0, 0, 0, 1264, 0, 1082, 0, 0, 0,
	0, 0, 0, 1082, 1604, 1264, 0, 1614, 0, 0,
	0, 0, 0, 1594, 1596, 0, 0, 0, 0, 1082,
	1082, 1146, 0, 0, 0, 0, 0, 0, 1610, 0,
	1611, 0, 0, 0, 0, 0, 1146, 1581, 1582, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	1082, 0, 0, 1602, 1146, 0, 0, 1264, 1264, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1612,
	0, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	1147, 0, 0, 1147, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 1146, 0, 0, 0, 0, 0, 1593, 0, 0,
	1263, 0, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 1082, 0, 1588, 1146, 0,
	0, 0, 0, 0, 1147, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1263, 0, 0, 0,
	1782, 1147, 1605, 0, 0, 0, 0, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1263,
	1263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580,
	0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574,
	0, 0, 1146, 0, 0, 1146, 0, 0, 2755, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1600, 1595, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 1146, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 1583, 0,
	1082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1082, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 1264, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 1264,
	1264, 1604, 0, 0, 1614, 0, 0, 0, 0, 0,
	1594, 1596, 0, 1146, 1264, 0, 0, 0, 0, 0,
	1147, 0, 0, 0, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 0, 1581, 1582, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 1147, 0, 1147, 0, 0, 0, 1263, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	1263, 1263, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1263, 0, 0, 0,
	0, 0, 1146, 0, 0, 0, 0, 1147, 0, 0,
	0, 0, 0, 0, 1147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	1264, 1264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 0, 1147, 0, 0, 0,
	0, 1264, 1600, 1595, 0, 0, 0, 1603, 0, 0,
	1567, 1578, 1579, 1585, 1606, 1584, 1580, 1613, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 2752, 0, 0, 0, 0,
	1566, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1146, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 1147, 841, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 1147, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1146,
	0, 0, 0, 820, 806, 0, 1146, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 0, 0,
	1594, 1596, 1263, 1263, 0, 0, 0, 1147, 807, 0,
	0, 0, 0, 810, 0, 1610, 0, 1611, 849, 0,
	0, 0, 0, 0, 1581, 1582, 817, 818, 1146, 0,
	0, 0, 834, 1263, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 842, 812, 0, 0,
	0, 1587, 1147, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 1612, 0, 0, 0,
	840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 0, 0, 805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 814, 815, 1593, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1146, 822,
	821, 0, 0, 0, 1588, 0, 0, 816, 0, 0,
	831, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 846, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 0, 843, 0, 0, 0, 0, 1146,
	0, 1264, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 811, 0,
	0, 848, 0, 0, 1146, 0, 0, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 809, 0, 0, 0,
	838, 839, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 0, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 836,
	0, 0, 0, 0, 0, 2751, 847, 832, 0, 825,
	823, 0, 828, 0, 0, 0, 0, 0, 829, 0,
	0, 803, 0, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	830, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 0, 0, 0,
	0, 0, 0, 833, 1263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 0,
	0, 1144, 0, 1263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1263, 1263, 0, 837, 0, 241, 242,
	243, 244, 245, 246, 1150, 247, 248, 1151, 1152, 1153,
	1263, 1154, 512, 1155, 1156, 1157, 1158, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	1159, 257, 258, 259, 260, 261, 1160, 1161, 0, 262,
	517, 518, 519, 1162, 263, 264, 520, 1163, 1230, 1164,
	265, 266, 267, 268, 269, 270, 271, 0, 1165, 273,
	274, 275, 272, 1166, 276, 0, 277, 278, 279, 1167,
	280, 1023, 281, 282, 1168, 1169, 1171, 1170, 1172, 1173,
	1174, 283, 284, 285, 286, 0, 287, 521, 522, 1175,
	291, 288, 289, 1176, 292, 290, 1177, 293, 294, 1178,
	1179, 295, 296, 297, 1180, 298, 299, 1181, 300, 301,
	1182, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 1183, 238, 1184, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 1185, 319, 1186, 1187, 1024, 320, 321, 527, 528,
	322, 323, 1188, 324, 529, 1189, 530, 325, 1190, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 1026, 331,
	332, 1191, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 1192, 1025, 339, 534, 535, 1193, 536,
	1194, 341, 1027, 537, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 1195, 352,
	351, 1196, 353, 538, 1030, 354, 355, 1031, 1197, 356,
	357, 358, 1198, 1199, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 1200, 240, 1034, 382, 1201, 539, 383, 540, 385,
	386, 1202, 0, 387, 0, 1203, 1204, 389, 390, 391,
	1205, 1206, 392, 393, 541, 1035, 394, 1036, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	1207, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	1208, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 1209, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	1210, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 1211, 453, 454, 452, 455, 456, 457,
	1212, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 1213, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 1214, 475, 476, 0,
	474, 1215, 477, 478, 479, 480, 481, 482, 309, 483,
	1216, 484, 552, 553, 554, 555, 1217, 491, 1218, 485,
	486, 556, 487, 557, 1219, 488, 489, 490, 0, 492,
	493, 1220, 1221, 494, 495, 496, 498, 499, 497, 500,
	1222, 501, 1223, 0, 502, 503, 504, 558, 559, 560,
	1224, 506, 505, 561, 1225, 1226, 1227, 1228, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1144, 0, 0,
	0, 0, 0, 0, 0, 2346, 0, 0, 0, 0,
	0, 0, 0, 2347, 241, 242, 243, 244, 245, 246,
	1150, 247, 248, 1151, 1152, 1153, 0, 1154, 512, 1155,
	1156, 1157, 1158, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 1159, 257, 258, 259,
	260, 261, 1160, 1161, 0, 262, 517, 518, 519, 1162,
	263, 264, 520, 1163, 1230, 1164, 265, 266, 267, 268,
	269, 270, 271, 0, 1165, 273, 274, 275, 272, 1166,
	276, 0, 277, 278, 279, 1167, 280, 1023, 281, 282,
	1168, 1169, 1171, 1170, 1172, 1173, 1174, 283, 284, 285,
	286, 0, 287, 521, 522, 1175, 291, 288, 289, 1176,
	292, 290, 1177, 293, 294, 1178, 1179, 295, 296, 297,
	1180, 298, 299, 1181, 300, 301, 1182, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 1183, 238, 1184, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 1185, 319, 1186,
	1187, 1024, 320, 321, 527, 528, 322, 323, 1188, 324,
	529, 1189, 530, 325, 1190, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 1026, 331, 332, 1191, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 1192,
	1025, 339, 534, 535, 1193, 536, 1194, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 1195, 352, 351, 1196, 353, 538,
	1030, 354, 355, 1031, 1197, 356, 357, 358, 1198, 1199,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 1200, 240, 1034,
	382, 1201, 539, 383, 540, 385, 386, 1202, 0, 387,
	0, 1203, 1204, 389, 390, 391, 1205, 1206, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 1207, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 1208, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	1209, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 1210, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 1211,
	453, 454, 452, 455, 456, 457, 1212, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 1213, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 1214, 475, 476, 0, 474, 1215, 477, 478,
	479, 480, 481, 482, 309, 483, 1216, 484, 552, 553,
	554, 555, 1217, 491, 1218, 485, 486, 556, 487, 557,
	1219, 488, 489, 490, 0, 492, 493, 1220, 1221, 494,
	495, 496, 498, 499, 497, 500, 1222, 501, 1223, 0,
	502, 503, 504, 558, 559, 560, 1224, 506, 505, 561,
	1225, 1226, 1227, 1228, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1144, 0, 0, 0, 0, 3125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3127, 241, 242,
	243, 244, 245, 246, 1150, 247, 248, 1151, 1152, 1153,
	0, 1154, 512, 1155, 1156, 1157, 1158, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	1159, 257, 258, 259, 260, 261, 1160, 1161, 0, 262,
	517, 518, 519, 1162, 263, 264, 520, 1163, 1230, 1164,
	265, 266, 267, 268, 269, 270, 271, 0, 1165, 273,
	274, 275, 272, 1166, 276, 0, 277, 278, 279, 1167,
	280, 1023, 281, 282, 1168, 1169, 1171, 1170, 1172, 1173,
	1174, 283, 284, 285, 286, 0, 287, 521, 522, 1175,
	291, 288, 289, 1176, 292, 290, 1177, 293, 294, 1178,
	1179, 295, 296, 297, 1180, 298, 299, 1181, 300, 301,
	1182, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 1183, 238, 1184, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 1185, 319, 1186, 1187, 1024, 320, 321, 527, 528,
	322, 323, 1188, 324, 529, 1189, 530, 325, 1190, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 1026, 331,
	332, 1191, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 1192, 1025, 339, 534, 535, 1193, 536,
	1194, 341, 1027, 537, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 1195, 352,
	351, 1196, 353, 538, 1030, 354, 355, 1031, 1197, 356,
	357, 358, 1198, 1199, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 1200, 240, 1034, 382, 1201, 539, 383, 540, 385,
	386, 1202, 0, 387, 0, 1203, 1204, 389, 390, 391,
	1205, 1206, 392, 393, 541, 1035, 394, 1036, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	1207, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	1208, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 1209, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	1210, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 1211, 453, 454, 452, 455, 456, 457,
	1212, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 1213, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 1214, 475, 476, 0,
	474, 1215, 477, 478, 479, 480, 481, 482, 309, 483,
	1216, 484, 552, 553, 554, 555, 1217, 491, 1218, 485,
	486, 556, 487, 557, 1219, 488, 489, 490, 0, 492,
	493, 1220, 1221, 494, 495, 496, 498, 499, 497, 500,
	1222, 501, 1223, 0, 502, 503, 504, 558, 559, 560,
	1224, 506, 505, 561, 1225, 1226, 1227, 1228, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 1144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3446, 241, 242, 243, 244,
	245, 246, 1150, 247, 248, 1151, 1152, 1153, 0, 1154,
	512, 1155, 1156, 1157, 1158, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 1159, 257,
	258, 259, 260, 261, 1160, 1161, 0, 262, 517, 518,
	519, 1162, 263, 264, 520, 1163, 1230, 1164, 265, 266,
	267, 268, 269, 270, 271, 0, 1165, 273, 274, 275,
	272, 1166, 276, 0, 277, 278, 279, 1167, 280, 1023,
	281, 282, 1168, 1169, 1171, 1170, 1172, 1173, 1174, 283,
	284, 285, 286, 0, 287, 521, 522, 1175, 291, 288,
	289, 1176, 292, 290, 1177, 293, 294, 1178, 1179, 295,
	296, 297, 1180, 298, 299, 1181, 300, 301, 1182, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 1183, 238, 1184, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 1185,
	319, 1186, 1187, 1024, 320, 321, 527, 528, 322, 323,
	1188, 324, 529, 1189, 530, 325, 1190, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 1026, 331, 332, 1191,
	333, 334, 335, 336, 0, 0, 0, 239, 337, 338,
	340, 1192, 1025, 339, 534, 535, 1193, 536, 1194, 341,
	1027, 537, 1028, 342, 343, 344, 1029, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 1195, 352, 351, 1196,
	353, 538, 1030, 354, 355, 1031, 1197, 356, 357, 358,
	1198, 1199, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	1032, 375, 376, 377, 380, 381, 379, 1033, 378, 1200,
	240, 1034, 382, 1201, 539, 383, 540, 385, 386, 1202,
	0, 387, 0, 1203, 1204, 389, 390, 391, 1205, 1206,
	392, 393, 541, 1035, 394, 1036, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 1207, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 1208, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 1209, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 1210, 430,
	431, 432, 1037, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 1211, 453, 454, 452, 455, 456, 457, 1212, 458,
	442, 443, 459, 460, 1038, 461, 462, 549, 0, 463,
	1213, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 1214, 475, 476, 0, 474, 1215,
	477, 478, 479, 480, 481, 482, 309, 483, 1216, 484,
	552, 553, 554, 555, 1217, 491, 1218, 485, 486, 556,
	487, 557, 1219, 488, 489, 490, 0, 492, 493, 1220,
	1221, 494, 495, 496, 498, 499, 497, 500, 1222, 501,
	1223, 0, 502, 503, 504, 558, 559, 560, 1224, 506,
	505, 561, 1225, 1226, 1227, 1228, 507, 508, 562, 509,
	510, 511, 1144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3603, 241,
	242, 243, 244, 245, 246, 1150, 247, 248, 1151, 1152,
	1153, 0, 1154, 512, 1155, 1156, 1157, 1158, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 1159, 257, 258, 259, 260, 261, 1160, 1161, 0,
	262, 517, 518, 519, 1162, 263, 264, 520, 1163, 1230,
	1164, 265, 266, 267, 268, 269, 270, 271, 0, 1165,
	273, 274, 275, 272, 1166, 276, 0, 277, 278, 279,
	1167, 280, 1023, 281, 282, 1168, 1169, 1171, 1170, 1172,
	1173, 1174, 283, 284, 285, 286, 0, 287, 521, 522,
	1175, 291, 288, 289, 1176, 292, 290, 1177, 293, 294,
	1178, 1179, 295, 296, 297, 1180, 298, 299, 1181, 300,
	301, 1182, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 1183, 238, 1184,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 1185, 319, 1186, 1187, 1024, 320, 321, 527,
	528, 322, 323, 1188, 324, 529, 1189, 530, 325, 1190,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 1026,
	331, 332, 1191, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 1192, 1025, 339, 534, 535, 1193,
	536, 1194, 341, 1027, 537, 1028, 342, 343, 344, 1029,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 1195,
	352, 351, 1196, 353, 538, 1030, 354, 355, 1031, 1197,
	356, 357, 358, 1198, 1199, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 1032, 375, 376, 377, 380, 381, 379,
	1033, 378, 1200, 240, 1034, 382, 1201, 539, 383, 540,
	385, 386, 1202, 0, 387, 0, 1203, 1204, 389, 390,
	391, 1205, 1206, 392, 393, 541, 1035, 394, 1036, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 1207, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 1208, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 1209, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 1210, 430, 431, 432, 1037, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 1211, 453, 454, 452, 455, 456,
	457, 1212, 458, 442, 443, 459, 460, 1038, 461, 462,
	549, 0, 463, 1213, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 1214, 475, 476,
	0, 474, 1215, 477, 478, 479, 480, 481, 482, 309,
	483, 1216, 484, 552, 553, 554, 555, 1217, 491, 1218,
	485, 486, 556, 487, 557, 1219, 488, 489, 490, 0,
	492, 493, 1220, 1221, 494, 495, 496, 498, 499, 497,
	500, 1222, 501, 1223, 0, 502, 503, 504, 558, 559,
	560, 1224, 506, 505, 561, 1225, 1226, 1227, 1228, 507,
	508, 562, 509, 510, 511, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3503, 241, 242, 243, 244, 245, 246, 1150, 247,
	248, 1151, 1152, 1153, 0, 1154, 512, 1155, 1156, 1157,
	1158, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 1159, 257, 258, 259, 260, 261,
	1160, 1161, 0, 262, 517, 518, 519, 1162, 263, 264,
	520, 1163, 1230, 1164, 265, 266, 267, 268, 269, 270,
	271, 0, 1165, 273, 274, 275, 272, 1166, 276, 0,
	277, 278, 279, 1167, 280, 1023, 281, 282, 1168, 1169,
	1171, 1170, 1172, 1173, 1174, 283, 284, 285, 286, 0,
	287, 521, 522, 1175, 291, 288, 289, 1176, 292, 290,
	1177, 293, 294, 1178, 1179, 295, 296, 297, 1180, 298,
	299, 1181, 300, 301, 1182, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	1183, 238, 1184, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 1185, 319, 1186, 1187, 1024,
	320, 321, 527, 528, 322, 323, 1188, 324, 529, 1189,
	530, 325, 1190, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 1026, 331, 332, 1191, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 1192, 1025, 339,
	534, 535, 1193, 536, 1194, 341, 1027, 537, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 1195, 352, 351, 1196, 353, 538, 1030, 354,
	355, 1031, 1197, 356, 357, 358, 1198, 1199, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 1200, 240, 1034, 382, 1201,
	539, 383, 540, 385, 386, 1202, 0, 387, 0, 1203,
	1204, 389, 390, 391, 1205, 1206, 392, 393, 541, 1035,
	394, 1036, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 1207, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 1208, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 1209, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 1210, 430, 431, 432, 1037, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 1211, 453, 454,
	452, 455, 456, 457, 1212, 458, 442, 443, 459, 460,
	1038, 461, 462, 549, 0, 463, 1213, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	1214, 475, 476, 0, 474, 1215, 477, 478, 479, 480,
	481, 482, 309, 483, 1216, 484, 552, 553, 554, 555,
	1217, 491, 1218, 485, 486, 556, 487, 557, 1219, 488,
	489, 490, 0, 492, 493, 1220, 1221, 494, 495, 496,
	498, 499, 497, 500, 1222, 501, 1223, 0, 502, 503,
	504, 558, 559, 560, 1224, 506, 505, 561, 1225, 1226,
	1227, 1228, 507, 508, 562, 509, 510, 511, 1144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3376, 241, 242, 243, 244, 245,
	246, 1150, 247, 248, 1151, 1152, 1153, 0, 1154, 512,
	1155, 1156, 1157, 1158, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 1159, 257, 258,
	259, 260, 261, 1160, 1161, 0, 262, 517, 518, 519,
	1162, 263, 264, 520, 1163, 1230, 1164, 265, 266, 267,
	268, 269, 270, 271, 0, 1165, 273, 274, 275, 272,
	1166, 276, 0, 277, 278, 279, 1167, 280, 1023, 281,
	282, 1168, 1169, 1171, 1170, 1172, 1173, 1174, 283, 284,
	285, 286, 0, 287, 521, 522, 1175, 291, 288, 289,
	1176, 292, 290, 1177, 293, 294, 1178, 1179, 295, 296,
	297, 1180, 298, 299, 1181, 300, 301, 1182, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 1183, 238, 1184, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 1185, 319,
	1186, 1187, 1024, 320, 321, 527, 528, 322, 323, 1188,
	324, 529, 1189, 530, 325, 1190, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 1026, 331, 332, 1191, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	1192, 1025, 339, 534, 535, 1193, 536, 1194, 341, 1027,
	537, 1028, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 1195, 352, 351, 1196, 353,
	538, 1030, 354, 355, 1031, 1197, 356, 357, 358, 1198,
	1199, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 1200, 240,
	1034, 382, 1201, 539, 383, 540, 385, 386, 1202, 0,
	387, 0, 1203, 1204, 389, 390, 391, 1205, 1206, 392,
	393, 541, 1035, 394, 1036, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 1207, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 1208, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 1209, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 1210, 430, 431,
	432, 1037, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	1211, 453, 454, 452, 455, 456, 457, 1212, 458, 442,
	443, 459, 460, 1038, 461, 462, 549, 0, 463, 1213,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 1214, 475, 476, 0, 474, 1215, 477,
	478, 479, 480, 481, 482, 309, 483, 1216, 484, 552,
	553, 554, 555, 1217, 491, 1218, 485, 486, 556, 487,
	557, 1219, 488, 489, 490, 0, 492, 493, 1220, 1221,
	494, 495, 496, 498, 499, 497, 500, 1222, 501, 1223,
	0, 502, 503, 504, 558, 559, 560, 1224, 506, 505,
	561, 1225, 1226, 1227, 1228, 507, 508, 562, 509, 510,
	511, 1144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3143, 241, 242,
	243, 244, 245, 246, 1150, 247, 248, 1151, 1152, 1153,
	0, 1154, 512, 1155, 1156, 1157, 1158, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	1159, 257, 258, 259, 260, 261, 1160, 1161, 0, 262,
	517, 518, 519, 1162, 263, 264, 520, 1163, 1230, 1164,
	265, 266, 267, 268, 269, 270, 271, 0, 1165, 273,
	274, 275, 272, 1166, 276, 0, 277, 278, 279, 1167,
	280, 1023, 281, 282, 1168, 1169, 1171, 1170, 1172, 1173,
	1174, 283, 284, 285, 286, 0, 287, 521, 522, 1175,
	291, 288, 289, 1176, 292, 290, 1177, 293, 294, 1178,
	1179, 295, 296, 297, 1180, 298, 299, 1181, 300, 301,
	1182, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 1183, 238, 1184, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 1185, 319, 1186, 1187, 1024, 320, 321, 527, 528,
	322, 323, 1188, 324, 529, 1189, 530, 325, 1190, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 1026, 331,
	332, 1191, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 1192, 1025, 339, 534, 535, 1193, 536,
	1194, 341, 1027, 537, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 1195, 352,
	351, 1196, 353, 538, 1030, 354, 355, 1031, 1197, 356,
	357, 358, 1198, 1199, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 1200, 240, 1034, 382, 1201, 539, 383, 540, 385,
	386, 1202, 0, 387, 0, 1203, 1204, 389, 390, 391,
	1205, 1206, 392, 393, 541, 1035, 394, 1036, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	1207, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	1208, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 1209, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	1210, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 1211, 453, 454, 452, 455, 456, 457,
	1212, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 1213, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 1214, 475, 476, 0,
	474, 1215, 477, 478, 479, 480, 481, 482, 309, 483,
	1216, 484, 552, 553, 554, 555, 1217, 491, 1218, 485,
	486, 556, 487, 557, 1219, 488, 489, 490, 0, 492,
	493, 1220, 1221, 494, 495, 496, 498, 499, 497, 500,
	1222, 501, 1223, 0, 502, 503, 504, 558, 559, 560,
	1224, 506, 505, 561, 1225, 1226, 1227, 1228, 507, 508,
	562, 509, 510, 511, 1144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2991, 241, 242, 243, 244, 245, 246, 1150, 247, 248,
	1151, 1152, 1153, 0, 1154, 512, 1155, 1156, 1157, 1158,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 1159, 257, 258, 259, 260, 261, 1160,
	1161, 0, 262, 517, 518, 519, 1162, 263, 264, 520,
	1163, 1230, 1164, 265, 266, 267, 268, 269, 270, 271,
	0, 1165, 273, 274, 275, 272, 1166, 276, 0, 277,
	278, 279, 1167, 280, 1023, 281, 282, 1168, 1169, 1171,
	1170, 1172, 1173, 1174, 283, 284, 285, 286, 0, 287,
	521, 522, 1175, 291, 288, 289, 1176, 292, 290, 1177,
	293, 294, 1178, 1179, 295, 296, 297, 1180, 298, 299,
	1181, 300, 301, 1182, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 1183,
	238, 1184, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 1185, 319, 1186, 1187, 1024, 320,
	321, 527, 528, 322, 323, 1188, 324, 529, 1189, 530,
	325, 1190, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 1026, 331, 332, 1191, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 1192, 1025, 339, 534,
	535, 1193, 536, 1194, 341, 1027, 537, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 1195, 352, 351, 1196, 353, 538, 1030, 354, 355,
	1031, 1197, 356, 357, 358, 1198, 1199, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 1200, 240, 1034, 382, 1201, 539,
	383, 540, 385, 386, 1202, 0, 387, 0, 1203, 1204,
	389, 390, 391, 1205, 1206, 392, 393, 541, 1035, 394,
	1036, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 1207, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 1208, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 1209, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 1210, 430, 431, 432, 1037, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 1211, 453, 454, 452,
	455, 456, 457, 1212, 458, 442, 443, 459, 460, 1038,
	461, 462, 549, 0, 463, 1213, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 1214,
	475, 476, 0, 474, 1215, 477, 478, 479, 480, 481,
	482, 309, 483, 1216, 484, 552, 553, 554, 555, 1217,
	491, 1218, 485, 486, 556, 487, 557, 1219, 488, 489,
	490, 0, 492, 493, 1220, 1221, 494, 495, 496, 498,
	499, 497, 500, 1222, 501, 1223, 0, 502, 503, 504,
	558, 559, 560, 1224, 506, 505, 561, 1225, 1226, 1227,
	1228, 507, 508, 562, 509, 510, 511, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2229, 241, 242, 243, 244, 245, 246,
	1150, 247, 248, 1151, 1152, 1153, 0, 1154, 512, 1155,
	1156, 1157, 1158, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 1159, 257, 258, 259,
	260, 261, 1160, 1161, 0, 262, 517, 518, 519, 1162,
	263, 264, 520, 1163, 1230, 1164, 265, 266, 267, 268,
	269, 270, 271, 0, 1165, 273, 274, 275, 272, 1166,
	276, 0, 277, 278, 279, 1167, 280, 1023, 281, 282,
	1168, 1169, 1171, 1170, 1172, 1173, 1174, 283, 284, 285,
	286, 0, 287, 521, 522, 1175, 291, 288, 289, 1176,
	292, 290, 1177, 293, 294, 1178, 1179, 295, 296, 297,
	1180, 298, 299, 1181, 300, 301, 1182, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 1183, 238, 1184, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 1185, 319, 1186,
	1187, 1024, 320, 321, 527, 528, 322, 323, 1188, 324,
	529, 1189, 530, 325, 1190, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 1026, 331, 332, 1191, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 1192,
	1025, 339, 534, 535, 1193, 536, 1194, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 1195, 352, 351, 1196, 353, 538,
	1030, 354, 355, 1031, 1197, 356, 357, 358, 1198, 1199,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 1200, 240, 1034,
	382, 1201, 539, 383, 540, 385, 386, 1202, 0, 387,
	0, 1203, 1204, 389, 390, 391, 1205, 1206, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 1207, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 1208, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	1209, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 1210, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 1211,
	453, 454, 452, 455, 456, 457, 1212, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 1213, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 1214, 475, 476, 0, 474, 1215, 477, 478,
	479, 480, 481, 482, 309, 483, 1216, 484, 552, 553,
	554, 555, 1217, 491, 1218, 485, 486, 556, 487, 557,
	1219, 488, 489, 490, 0, 492, 493, 1220, 1221, 494,
	495, 496, 498, 499, 497, 500, 1222, 501, 1223, 0,
	502, 503, 504, 558, 559, 560, 1224, 506, 505, 561,
	1225, 1226, 1227, 1228, 507, 508, 562, 509, 510, 511,
	1242, 0, 1144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 0, 0, 241,
	242, 243, 244, 245, 246, 1150, 247, 248, 1151, 1152,
	1153, 0, 1154, 512, 1155, 1156, 1157, 1158, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 1159, 257, 258, 259, 260, 261, 1160, 1161, 0,
	262, 517, 518, 519, 1162, 263, 264, 520, 1163, 1230,
	1164, 265, 266, 267, 268, 269, 270, 271, 0, 1165,
	273, 274, 275, 272, 1166, 276, 0, 277, 278, 279,
	1167, 280, 1023, 281, 282, 1168, 1169, 1171, 1170, 1172,
	1173, 1174, 283, 284, 285, 286, 0, 287, 521, 522,
	1175, 291, 288, 289, 1176, 292, 290, 1177, 293, 294,
	1178, 1179, 295, 296, 297, 1180, 298, 299, 1181, 300,
	301, 1182, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 1183, 238, 1184,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 1185, 319, 1186, 1187, 1024, 320, 321, 527,
	528, 322, 323, 1188, 324, 529, 1189, 530, 325, 1190,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 1026,
	331, 332, 1191, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 1192, 1025, 339, 534, 535, 1193,
	536, 1194, 341, 1027, 537, 1028, 342, 343, 344, 1029,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 1195,
	352, 351, 1196, 353, 538, 1030, 354, 355, 1031, 1197,
	356, 357, 358, 1198, 1199, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 1032, 375, 376, 377, 380, 381, 379,
	1033, 378, 1200, 240, 1034, 382, 1201, 539, 383, 540,
	385, 386, 1202, 0, 387, 0, 1203, 1204, 389, 390,
	391, 1205, 1206, 392, 393, 541, 1035, 394, 1036, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 1207, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 1208, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 1209, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 1210, 430, 431, 432, 1037, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 1211, 453, 454, 452, 455, 456,
	457, 1212, 458, 442, 443, 459, 460, 1038, 461, 462,
	549, 0, 463, 1213, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 1214, 475, 476,
	0, 474, 1215, 477, 478, 479, 480, 481, 482, 309,
	483, 1216, 484, 552, 553, 554, 555, 1217, 491, 1218,
	485, 486, 556, 487, 557, 1219, 488, 489, 490, 0,
	492, 493, 1220, 1221, 494, 495, 496, 498, 499, 497,
	500, 1222, 501, 1223, 0, 502, 503, 504, 558, 559,
	560, 1224, 506, 505, 561, 1225, 1226, 1227, 1228, 507,
	508, 562, 509, 510, 511, 1141, 0, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	1150, 247, 248, 1151, 1152, 1153, 0, 1154, 512, 1155,
	1156, 1157, 1158, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 1159, 257, 258, 259,
	260, 261, 1160, 1161, 0, 262, 517, 518, 519, 1162,
	263, 264, 520, 1163, 1230, 1164, 265, 266, 267, 268,
	269, 270, 271, 0, 1165, 273, 274, 275, 272, 1166,
	276, 0, 277, 278, 279, 1167, 280, 1023, 281, 282,
	1168, 1169, 1171, 1170, 1172, 1173, 1174, 283, 284, 285,
	286, 0, 287, 521, 522, 1175, 291, 288, 289, 1176,
	292, 290, 1177, 293, 294, 1178, 1179, 295, 296, 297,
	1180, 298, 299, 1181, 300, 301, 1182, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 1183, 238, 1184, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 1185, 319, 1186,
	1187, 1024, 320, 321, 527, 528, 322, 323, 1188, 324,
	529, 1189, 530, 325, 1190, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 1026, 331, 332, 1191, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 1192,
	1025, 339, 534, 535, 1193, 536, 1194, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 1195, 352, 351, 1196, 353, 538,
	1030, 354, 355, 1031, 1197, 356, 357, 358, 1198, 1199,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 1200, 240, 1034,
	382, 1201, 539, 383, 540, 385, 386, 1202, 0, 387,
	0, 1203, 1204, 389, 390, 391, 1205, 1206, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 1207, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 1208, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	1209, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 1210, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 1211,
	453, 454, 452, 455, 456, 457, 1212, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 1213, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 1214, 475, 476, 0, 474, 1215, 477, 478,
	479, 480, 481, 482, 309, 483, 1216, 484, 552, 553,
	554, 555, 1217, 491, 1218, 485, 486, 556, 487, 557,
	1219, 488, 489, 490, 0, 492, 493, 1220, 1221, 494,
	495, 496, 498, 499, 497, 500, 1222, 501, 1223, 0,
	502, 503, 504, 558, 559, 560, 1224, 506, 505, 561,
	1225, 1226, 1227, 1228, 507, 508, 562, 509, 510, 511,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 1150, 247, 248, 1151, 1152, 1153, 0,
	1154, 512, 1155, 1156, 1157, 1158, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 1159,
	257, 258, 259, 260, 261, 1160, 1161, 0, 262, 517,
	518, 519, 1162, 263, 264, 520, 1163, 1230, 1164, 265,
	266, 267, 268, 269, 270, 271, 0, 1165, 273, 274,
	275, 272, 1166, 276, 0, 277, 278, 279, 1167, 280,
	1023, 281, 282, 1168, 1169, 1171, 1170, 1172, 1173, 1174,
	283, 284, 285, 286, 0, 287, 521, 522, 1175, 291,
	288, 289, 1176, 292, 290, 1177, 293, 294, 1178, 1179,
	295, 296, 297, 1180, 298, 299, 1181, 300, 301, 1182,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 1183, 238, 1184, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	1185, 319, 1186, 1187, 1024, 320, 321, 527, 528, 322,
	323, 1188, 324, 529, 1189, 530, 325, 1190, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 1026, 331, 332,
	1191, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 1192, 1025, 339, 534, 535, 1193, 536, 1194,
	341, 1027, 537, 1028, 342, 343, 344, 1029, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 1195, 352, 351,
	1196, 353, 538, 1030, 354, 355, 1031, 1197, 356, 357,
	358, 1198, 1199, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 1032, 375, 376, 377, 380, 381, 379, 1033, 378,
	1200, 240, 1034, 382, 1201, 539, 383, 540, 385, 386,
	1202, 0, 387, 0, 1203, 1204, 389, 390, 391, 1205,
	1206, 392, 393, 541, 1035, 394, 1036, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 1207,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 1208,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 1209, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 1210,
	430, 431, 432, 1037, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 1211, 453, 454, 452, 455, 456, 457, 1212,
	458, 442, 443, 459, 460, 1038, 461, 462, 549, 0,
	463, 1213, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 1214, 475, 476, 0, 474,
	1215, 477, 478, 479, 480, 481, 482, 309, 483, 1216,
	484, 552, 553, 554, 555, 1217, 491, 1218, 485, 486,
	556, 487, 557, 1219, 488, 489, 490, 0, 492, 493,
	1220, 1221, 494, 495, 496, 498, 499, 497, 500, 1222,
	501, 1223, 0, 502, 503, 504, 558, 559, 560, 1224,
	506, 505, 561, 1225, 1226, 1227, 1228, 507, 508, 562,
	509, 510, 511, 2204, 0, 960, 932, 933, 934, 930,
	931, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 2201, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 2202, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 2200, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 2203, 0, 0, 0, 0, 0,
	0, 944, 2199, 0, 906, 942, 960, 932, 933, 934,
	930, 931, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 282, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 203, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 205, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 492, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 1407, 1005, 1040, 0, 506, 505, 561, 0,
	0, 0, 197, 507, 508, 562, 509, 510, 511, 919,
	198, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 960, 932, 933, 934, 930,
	931, 943, 1639, 1637, 0, 0, 942, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 203, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 205, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 1407, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 197, 507, 508, 562, 509, 510, 511, 919, 198,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 960, 932, 933, 934, 930, 931,
	943, 1639, 2708, 0, 0, 942, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 984, 948, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 997, 0,
	1004, 256, 1003, 0, 257, 258, 259, 260, 261, 950,
	983, 917, 262, 1042, 1043, 519, 0, 263, 264, 990,
	0, 971, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 974, 972, 973,
	980, 976, 975, 979, 283, 284, 285, 286, 1007, 287,
	1001, 1000, 921, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 927, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 1014, 1015, 939,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 999,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1012, 1013, 322, 323, 0, 324, 1021, 0, 949,
	325, 0, 326, 327, 328, 329, 330, 985, 986, 989,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 1025, 339, 994,
	995, 0, 955, 0, 341, 1027, 987, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 1022, 1030, 354, 355,
	1031, 0, 356, 357, 358, 978, 977, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 918, 240, 1034, 382, 940, 988,
	383, 1002, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 1016, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 1017, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 998, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 928, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 203, 453, 454, 452,
	455, 456, 457, 981, 458, 442, 443, 459, 460, 1038,
	461, 462, 996, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1041, 469, 470, 471, 472, 1018, 0,
	475, 476, 916, 474, 205, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1008, 1009, 1010, 1011, 0,
	491, 0, 485, 486, 1019, 487, 1020, 938, 488, 489,
	490, 0, 492, 493, 0, 922, 494, 495, 496, 498,
	499, 497, 500, 982, 501, 0, 0, 502, 503, 504,
	1407, 1005, 1040, 0, 506, 505, 561, 0, 0, 0,
	197, 507, 508, 562, 509, 510, 511, 919, 198, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	0, 913, 914, 960, 932, 933, 934, 930, 931, 943,
	1639, 1637, 0, 0, 942, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 984, 948, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 997, 0, 1004,
	256, 1003, 2308, 257, 258, 259, 260, 261, 950, 983,
	917, 262, 1042, 1043, 519, 0, 263, 264, 990, 0,
	971, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 1023, 281, 282, 974, 972, 973, 980,
	976, 975, 979, 283, 284, 285, 286, 1007, 287, 1001,
	1000, 921, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 992, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 927, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 1014, 1015, 939, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 999, 0,
	0, 0, 318, 0, 319, 0, 2313, 1024, 320, 321,
	1012, 1013, 322, 323, 0, 324, 1021, 0, 949, 325,
	0, 326, 327, 328, 329, 330, 985, 986, 989, 384,
	1026, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 239, 337, 338, 340, 0, 1025, 339, 994, 995,
	0, 955, 0, 341, 1027, 987, 1028, 342, 343, 344,
	1029, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 2309, 353, 1022, 1030, 354, 355, 1031,
	0, 356, 357, 358, 978, 977, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 1032, 375, 376, 377, 380, 381,
	379, 1033, 378, 918, 240, 1034, 382, 940, 988, 383,
	1002, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 1035, 394, 1036,
	1016, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 1017, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 998, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 1037, 433, 434, 435,
	436, 928, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 981, 458, 442, 443, 459, 460, 1038, 461,
	462, 996, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 1041, 469, 470, 471, 472, 1018, 0, 475,
	476, 916, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 1008, 1009, 1010, 1011, 0, 491,
	2310, 485, 486, 1019, 487, 1020, 938, 488, 489, 490,
	0, 492, 493, 0, 922, 494, 495, 496, 498, 499,
	497, 500, 982, 501, 0, 0, 502, 503, 504, 558,
	1005, 1040, 0, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 919, 0, 0, 0,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	913, 914, 0, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 2249, 942, 960, 932, 933, 934, 930, 931,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 984, 948, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 997, 0,
	1004, 256, 1003, 0, 257, 258, 259, 260, 261, 950,
	983, 917, 262, 1042, 1043, 519, 0, 263, 264, 990,
	0, 971, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 974, 972, 973,
	980, 976, 975, 979, 283, 284, 285, 286, 1007, 287,
	1001, 1000, 921, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 927, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 1014, 1015, 939,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 999,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1012, 1013, 322, 323, 0, 324, 1021, 0, 949,
	325, 0, 326, 327, 328, 329, 330, 985, 986, 989,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 1025, 339, 994,
	995, 0, 955, 0, 341, 1027, 987, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 1022, 1030, 354, 355,
	1031, 0, 356, 357, 358, 978, 977, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 918, 240, 1034, 382, 940, 988,
	383, 1002, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 1016, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 1017, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 998, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 928, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 981, 458, 442, 443, 459, 460, 1038,
	461, 462, 996, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1041, 469, 470, 471, 472, 1018, 0,
	475, 476, 916, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1008, 1009, 1010, 1011, 0,
	491, 0, 485, 486, 1019, 487, 1020, 938, 488, 489,
	490, 0, 492, 493, 0, 922, 494, 495, 496, 498,
	499, 497, 500, 982, 501, 0, 0, 502, 503, 504,
	558, 1005, 1040, 0, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 919, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	0, 913, 914, 0, 0, 0, 0, 0, 0, 0,
	944, 2247, 0, 2246, 942, 960, 932, 933, 934, 930,
	931, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 0, 0, 0, 0, 0, 0,
	0, 944, 2244, 0, 2243, 942, 960, 932, 933, 934,
	930, 931, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 282, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 492, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 558, 1005, 1040, 0, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 919,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 0, 0, 0, 0, 0,
	0, 0, 944, 2241, 0, 2240, 942, 960, 932, 933,
	934, 930, 931, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 984, 948,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 997, 0, 1004, 256, 1003, 0, 257, 258, 259,
	260, 261, 950, 983, 917, 262, 1042, 1043, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 1007, 287, 1001, 1000, 921, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 992, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 927,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 939, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 999, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 1012, 1013, 322, 323, 0, 324,
	1021, 0, 949, 325, 0, 326, 327, 328, 329, 330,
	985, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	1025, 339, 994, 995, 0, 955, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 918, 240, 1034,
	382, 940, 988, 383, 1002, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 998, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 928, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 996, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 1041, 469, 470, 471,
	472, 1018, 0, 475, 476, 916, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 1008, 1009,
	1010, 1011, 0, 491, 0, 485, 486, 1019, 487, 1020,
	938, 488, 489, 490, 0, 492, 493, 0, 922, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 558, 1005, 1040, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	919, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	0, 0, 0, 0, 913, 914, 0, 0, 0, 0,
	0, 0, 0, 944, 2238, 0, 1492, 942, 960, 932,
	933, 934, 930, 931, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 984,
	948, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 997, 0, 1004, 256, 1003, 0, 257, 258,
	259, 260, 261, 950, 983, 917, 262, 1042, 1043, 519,
	0, 263, 264, 990, 0, 971, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 1023, 281,
	282, 974, 972, 973, 980, 976, 975, 979, 283, 284,
	285, 286, 1007, 287, 1001, 1000, 921, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 992,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	927, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 1014, 1015, 939, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 999, 0, 0, 0, 318, 0, 319,
	0, 0, 1024, 320, 321, 1012, 1013, 322, 323, 0,
	324, 1021, 0, 949, 325, 0, 326, 327, 328, 329,
	330, 985, 986, 989, 384, 1026, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 1025, 339, 994, 995, 0, 955, 0, 341, 1027,
	987, 1028, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	1022, 1030, 354, 355, 1031, 0, 356, 357, 358, 978,
	977, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 918, 240,
	1034, 382, 940, 988, 383, 1002, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 1035, 394, 1036, 1016, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 1017, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 998, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 1037, 433, 434, 435, 436, 928, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 981, 458, 442,
	443, 459, 460, 1038, 461, 462, 996, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 1041, 469, 470,
	471, 472, 1018, 0, 475, 476, 916, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 1008,
	1009, 1010, 1011, 0, 491, 0, 485, 486, 1019, 487,
	1020, 938, 488, 489, 490, 0, 492, 493, 0, 922,
	494, 495, 496, 498, 499, 497, 500, 982, 501, 0,
	0, 502, 503, 504, 558, 1005, 1040, 0, 506, 505,
	561, 1491, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 919, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 913, 914, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 909, 942, 960,
	932, 933, 934, 930, 931, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	984, 948, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 997, 0, 1004, 256, 1003, 0, 257,
	258, 259, 260, 261, 950, 983, 917, 262, 1042, 1043,
	519, 0, 263, 264, 990, 0, 971, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 1023,
	281, 282, 974, 972, 973, 980, 976, 975, 979, 283,
	284, 285, 286, 1007, 287, 1001, 1000, 921, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	992, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 927, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 1014, 1015, 939, 238, 0, 0, 0, 0,
	0, 315, 316, 317, 999, 0, 0, 0, 318, 0,
	319, 0, 0, 1024, 320, 321, 1012, 1013, 322, 323,
	0, 324, 1021, 0, 949, 325, 0, 326, 327, 328,
	329, 330, 985, 986, 989, 384, 1026, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 239, 337, 338,
	340, 0, 1025, 339, 994, 995, 0, 955, 0, 341,
	1027, 987, 1028, 342, 343, 344, 1029, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 1022, 1030, 354, 355, 1031, 0, 356, 357, 358,
	978, 977, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	1032, 375, 376, 377, 380, 381, 379, 1033, 378, 918,
	240, 1034, 382, 940, 988, 383, 1002, 385, 386, 0,
	0, 387, 0, 923, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 1035, 394, 1036, 1016, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 1017, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 998, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 1037, 433, 434, 435, 436, 928, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 981, 458,
	442, 443, 459, 460, 1038, 461, 462, 996, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 1041, 469,
	470, 471, 472, 1018, 0, 475, 476, 916, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	1008, 1009, 1010, 1011, 0, 491, 0, 485, 486, 1019,
	487, 1020, 938, 488, 489, 490, 0, 492, 493, 0,
	922, 494, 495, 496, 498, 499, 497, 500, 982, 501,
	0, 0, 502, 503, 504, 558, 1005, 1040, 0, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 919, 0, 0, 0, 0, 0, 0, 915,
	0, 0, 0, 0, 0, 0, 913, 914, 960, 932,
	933, 934, 930, 931, 943, 944, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 984,
	948, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 997, 0, 1004, 256, 1003, 0, 257, 258,
	259, 260, 261, 950, 983, 917, 262, 1042, 1043, 519,
	0, 263, 264, 990, 0, 971, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 3866, 279, 0, 280, 1023, 281,
	282, 974, 972, 973, 980, 976, 975, 979, 283, 284,
	285, 286, 1007, 287, 1001, 1000, 921, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 992,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	927, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 1014, 1015, 939, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 999, 0, 0, 0, 318, 0, 319,
	0, 0, 1024, 320, 321, 1012, 1013, 322, 323, 0,
	324, 1021, 0, 949, 325, 0, 326, 327, 328, 329,
	330, 985, 986, 989, 384, 1026, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 1025, 339, 994, 995, 0, 955, 0, 341, 1027,
	987, 1028, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	1022, 1030, 354, 355, 1031, 0, 356, 357, 358, 978,
	977, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 918, 240,
	1034, 382, 940, 988, 383, 1002, 385, 386, 0, 0,
	387, 0, 923, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 1035, 394, 1036, 1016, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 1017, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 998, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 1037, 433, 434, 435, 436, 928, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 981, 458, 442,
	443, 459, 460, 1038, 461, 462, 996, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 1041, 469, 470,
	471, 472, 1018, 0, 475, 476, 916, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 1008,
	1009, 1010, 1011, 0, 491, 0, 485, 486, 1019, 487,
	1020, 938, 488, 489, 490, 0, 492, 493, 0, 922,
	494, 495, 496, 498, 499, 497, 500, 982, 501, 0,
	0, 502, 503, 504, 558, 1005, 1040, 0, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 919, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 913, 914, 960, 932, 933,
	934, 930, 931, 943, 944, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 984, 948,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 997, 0, 1004, 256, 1003, 0, 257, 258, 259,
	260, 261, 950, 983, 917, 262, 1042, 1043, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 1007, 287, 1001, 1000, 921, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 992, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 927,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 939, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 999, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 1012, 1013, 322, 323, 0, 324,
	1021, 0, 949, 325, 0, 326, 327, 328, 329, 330,
	985, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 2118, 337, 338, 340, 0,
	1025, 339, 994, 995, 0, 955, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 918, 240, 1034,
	382, 940, 988, 383, 1002, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 2117, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 998, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 928, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 996, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 1041, 469, 470, 471,
	472, 1018, 0, 475, 476, 916, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 1008, 1009,
	1010, 1011, 0, 491, 0, 485, 486, 1019, 487, 1020,
	938, 488, 489, 490, 0, 492, 493, 0, 922, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 558, 1005, 1040, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	919, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	0, 0, 0, 0, 913, 914, 960, 932, 933, 934,
	930, 931, 943, 944, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 3665, 279, 0, 280, 1023, 281, 282, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	923, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 492, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 558, 1005, 1040, 0, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 919,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 960, 932, 933, 934, 930,
	931, 943, 944, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 3345, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 1707, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 942, 960, 932, 933, 934,
	930, 931, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 282, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 492, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 558, 1005, 1040, 3121, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 919,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 960, 932, 933, 934, 930,
	931, 943, 944, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 923,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 960, 932, 933, 934, 930, 931,
	943, 944, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 984, 948, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 997, 0,
	1004, 256, 1003, 0, 257, 258, 259, 260, 261, 950,
	983, 917, 262, 1042, 1043, 519, 0, 263, 264, 990,
	0, 971, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 974, 972, 973,
	980, 976, 975, 979, 283, 284, 285, 286, 1007, 287,
	1001, 1000, 921, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 927, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 1014, 1015, 939,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 999,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1012, 1013, 322, 323, 0, 324, 1021, 0, 949,
	325, 0, 326, 327, 328, 329, 330, 985, 986, 989,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 1025, 339, 994,
	995, 0, 955, 0, 341, 1027, 987, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 1022, 1030, 354, 355,
	1031, 0, 356, 357, 358, 978, 977, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 918, 240, 1034, 382, 940, 988,
	383, 1002, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 1016, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 1017, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 998, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 928, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 981, 458, 442, 443, 459, 460, 1038,
	461, 462, 996, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1041, 469, 470, 471, 472, 1018, 0,
	475, 476, 916, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1008, 1009, 1010, 1011, 0,
	491, 0, 485, 486, 1019, 487, 1020, 938, 488, 489,
	490, 0, 492, 493, 0, 922, 494, 495, 496, 498,
	499, 497, 500, 982, 501, 0, 0, 502, 503, 504,
	558, 1005, 1040, 0, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 919, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	0, 913, 914, 1707, 0, 0, 0, 0, 0, 0,
	944, 0, 0, 0, 942, 960, 932, 933, 934, 930,
	931, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 2313, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 960, 932, 933, 934, 930, 931,
	943, 944, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 984, 948, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 997, 0,
	1004, 256, 1003, 0, 257, 258, 259, 260, 261, 950,
	983, 917, 262, 1042, 1043, 519, 0, 263, 264, 990,
	0, 971, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 974, 972, 973,
	980, 976, 975, 979, 283, 284, 285, 286, 1007, 287,
	1001, 1000, 921, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 927, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 1014, 1015, 939,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 999,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1012, 1013, 322, 323, 0, 324, 1021, 0, 949,
	325, 0, 326, 327, 328, 329, 330, 985, 986, 989,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 1025, 339, 994,
	995, 0, 955, 0, 341, 1027, 987, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 1022, 1030, 354, 355,
	1031, 0, 356, 357, 358, 978, 977, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 918, 240, 1034, 382, 940, 988,
	383, 1002, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 1016, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 1017, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 998, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 928, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 981, 458, 442, 443, 459, 460, 1038,
	461, 462, 996, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1041, 469, 470, 471, 472, 1018, 0,
	475, 476, 916, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1008, 1009, 1010, 1011, 0,
	491, 0, 485, 486, 1019, 487, 1020, 938, 488, 489,
	490, 0, 492, 493, 0, 922, 494, 495, 496, 498,
	499, 497, 500, 982, 501, 0, 0, 502, 503, 504,
	558, 1005, 1040, 0, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 919, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	0, 913, 914, 0, 0, 0, 0, 0, 0, 0,
	944, 1637, 0, 2318, 942, 960, 932, 933, 934, 930,
	931, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 2316, 942, 960, 932, 933, 934,
	930, 931, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 282, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 492, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 558, 1005, 1040, 0, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 919,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 2304, 942, 960, 932, 933,
	934, 930, 931, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 984, 948,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 997, 0, 1004, 256, 1003, 0, 257, 258, 259,
	260, 261, 950, 983, 917, 262, 1042, 1043, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 1007, 287, 1001, 1000, 921, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 992, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 927,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 939, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 999, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 1012, 1013, 322, 323, 0, 324,
	1021, 0, 949, 325, 0, 326, 327, 328, 329, 330,
	985, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	1025, 339, 994, 995, 0, 955, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 918, 240, 1034,
	382, 940, 988, 383, 1002, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 998, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 928, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 996, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 1041, 469, 470, 471,
	472, 1018, 0, 475, 476, 916, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 1008, 1009,
	1010, 1011, 0, 491, 0, 485, 486, 1019, 487, 1020,
	938, 488, 489, 490, 0, 492, 493, 0, 922, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 558, 1005, 1040, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	919, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	0, 0, 0, 0, 913, 914, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 2293, 942, 960, 932,
	933, 934, 930, 931, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 984,
	948, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 997, 0, 1004, 256, 1003, 0, 257, 258,
	259, 260, 261, 950, 983, 917, 262, 1042, 1043, 519,
	0, 263, 264, 990, 0, 971, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 1023, 281,
	282, 974, 972, 973, 980, 976, 975, 979, 283, 284,
	285, 286, 1007, 287, 1001, 1000, 921, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 992,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	927, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 1014, 1015, 939, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 999, 0, 0, 0, 318, 0, 319,
	0, 0, 1024, 320, 321, 1012, 1013, 322, 323, 0,
	324, 1021, 0, 949, 325, 0, 326, 327, 328, 329,
	330, 985, 986, 989, 384, 1026, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 1025, 339, 994, 995, 0, 955, 0, 341, 1027,
	987, 1028, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	1022, 1030, 354, 355, 1031, 0, 356, 357, 358, 978,
	977, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 918, 240,
	1034, 382, 940, 988, 383, 1002, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 1035, 394, 1036, 1016, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 1017, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 998, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 1037, 433, 434, 435, 436, 928, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 981, 458, 442,
	443, 459, 460, 1038, 461, 462, 996, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 1041, 469, 470,
	471, 472, 1018, 0, 475, 476, 916, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 1008,
	1009, 1010, 1011, 0, 491, 0, 485, 486, 1019, 487,
	1020, 938, 488, 489, 490, 0, 492, 493, 0, 922,
	494, 495, 496, 498, 499, 497, 500, 982, 501, 0,
	0, 502, 503, 504, 558, 1005, 1040, 0, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 919, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 913, 914, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 2291, 942, 2282,
	2289, 933, 934, 930, 931, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	984, 948, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 997, 0, 1004, 256, 1003, 0, 257,
	258, 259, 260, 261, 950, 983, 917, 262, 1042, 1043,
	519, 0, 263, 264, 990, 0, 971, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 1023,
	281, 282, 974, 972, 973, 980, 976, 975, 979, 283,
	284, 285, 286, 1007, 2285, 1001, 1000, 921, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	992, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 927, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 1014, 1015, 939, 238, 0, 0, 0, 0,
	0, 315, 316, 317, 999, 0, 0, 0, 318, 0,
	319, 0, 0, 1024, 320, 321, 1012, 1013, 322, 323,
	0, 324, 1021, 0, 949, 325, 0, 326, 327, 328,
	2286, 330, 985, 986, 989, 384, 1026, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 239, 337, 338,
	340, 0, 1025, 339, 994, 995, 0, 955, 0, 341,
	1027, 987, 1028, 342, 343, 344, 1029, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 1022, 1030, 354, 355, 1031, 0, 356, 357, 358,
	978, 977, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 2287, 2284, 369, 370, 371, 374, 0, 373,
	1032, 375, 376, 377, 380, 381, 379, 1033, 378, 918,
	240, 1034, 382, 940, 988, 383, 1002, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 1035, 394, 1036, 1016, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 1017, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 998, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 1037, 433, 434, 435, 436, 928, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	2288, 0, 453, 454, 452, 455, 456, 457, 981, 458,
	442, 443, 459, 460, 1038, 461, 462, 996, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 1041, 469,
	470, 471, 472, 1018, 0, 475, 476, 916, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	1008, 1009, 1010, 1011, 0, 491, 0, 485, 486, 1019,
	487, 1020, 938, 488, 489, 490, 0, 492, 493, 0,
	922, 494, 495, 496, 498, 499, 497, 500, 982, 501,
	0, 0, 502, 503, 504, 558, 1005, 1040, 0, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	2283, 511, 919, 0, 0, 0, 0, 0, 0, 915,
	0, 0, 0, 0, 0, 0, 913, 914, 0, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 2279, 942,
	2282, 2289, 933, 934, 930, 931, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 984, 948, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 997, 0, 1004, 256, 1003, 0,
	257, 258, 259, 260, 261, 950, 983, 917, 262, 1042,
	1043, 519, 0, 263, 264, 990, 0, 971, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	1023, 281, 282, 974, 972, 973, 980, 976, 975, 979,
	283, 284, 285, 286, 1007, 2285, 1001, 1000, 921, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 992, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 927, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 1014, 1015, 939, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 999, 0, 0, 0, 318,
	0, 319, 0, 0, 1024, 320, 321, 1012, 1013, 322,
	323, 0, 324, 1021, 0, 949, 325, 0, 326, 327,
	328, 2286, 330, 985, 986, 989, 384, 1026, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 1025, 339, 994, 995, 0, 955, 0,
	341, 1027, 987, 1028, 342, 343, 344, 1029, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 1022, 1030, 354, 355, 1031, 0, 356, 357,
	358, 978, 977, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 2287, 2284, 369, 370, 371, 374, 0,
	373, 1032, 375, 376, 377, 380, 381, 379, 1033, 378,
	918, 240, 1034, 382, 940, 988, 383, 1002, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 1035, 394, 1036, 1016, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 1017, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 998,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 1037, 433, 434, 435, 436, 928, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 2288, 0, 453, 454, 452, 455, 456, 457, 981,
	458, 442, 443, 459, 460, 1038, 461, 462, 996, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 1041,
	469, 470, 471, 472, 1018, 0, 475, 476, 916, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 1008, 1009, 1010, 1011, 0, 491, 0, 485, 486,
	1019, 487, 1020, 938, 488, 489, 490, 0, 492, 493,
	0, 922, 494, 495, 496, 498, 499, 497, 500, 982,
	501, 0, 0, 502, 503, 504, 558, 1005, 1040, 0,
	506, 505, 561, 0, 0, 0, 0, 507, 508, 562,
	509, 2283, 511, 919, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 0, 0, 0, 913, 914, 960,
	932, 933, 934, 930, 931, 943, 944, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	984, 948, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 997, 0, 1004, 256, 1003, 0, 257,
	258, 259, 260, 261, 950, 983, 917, 262, 1042, 1043,
	519, 0, 263, 264, 990, 0, 971, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 1023,
	281, 282, 974, 972, 973, 980, 976, 975, 979, 283,
	284, 285, 286, 1007, 287, 1001, 1000, 921, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	992, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 927, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 1014, 1015, 939, 238, 0, 0, 0, 0,
	0, 315, 316, 317, 999, 0, 0, 0, 318, 0,
	319, 0, 0, 1024, 320, 321, 1012, 1013, 322, 323,
	0, 324, 1021, 0, 949, 325, 0, 326, 327, 328,
	329, 330, 985, 986, 989, 384, 1026, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 239, 337, 338,
	340, 0, 1025, 339, 994, 995, 0, 955, 0, 341,
	1027, 987, 1028, 342, 343, 344, 1029, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 1022, 1030, 354, 355, 1031, 0, 356, 357, 358,
	978, 977, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	1032, 375, 376, 377, 380, 381, 379, 1033, 378, 918,
	240, 1034, 382, 940, 988, 383, 1002, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 1035, 394, 1036, 1016, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 1017, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 998, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 1037, 433, 434, 435, 436, 928, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 981, 458,
	442, 443, 459, 460, 1038, 461, 462, 996, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 1041, 469,
	470, 471, 472, 1018, 0, 475, 476, 916, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	1008, 1009, 1010, 1011, 0, 491, 0, 485, 486, 1019,
	487, 1020, 938, 488, 489, 490, 0, 492, 493, 0,
	922, 494, 495, 496, 498, 499, 497, 500, 982, 501,
	0, 0, 502, 503, 504, 558, 1005, 1040, 0, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 919, 0, 0, 0, 0, 0, 0, 915,
	0, 0, 0, 0, 0, 0, 913, 914, 0, 0,
	0, 0, 0, 1645, 0, 944, 0, 0, 0, 942,
	960, 932, 933, 934, 930, 931, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 2097, 247, 248, 0, 0, 0, 0,
	0, 984, 948, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 997, 0, 1004, 256, 1003, 0,
	257, 258, 259, 260, 261, 950, 983, 917, 262, 1042,
	1043, 519, 0, 263, 264, 990, 0, 971, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	1023, 281, 282, 974, 972, 973, 980, 976, 975, 979,
	283, 284, 285, 286, 1007, 287, 1001, 1000, 921, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 992, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 927, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 1014, 1015, 939, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 999, 0, 0, 0, 318,
	0, 319, 0, 0, 1024, 320, 321, 1012, 1013, 322,
	323, 0, 324, 1021, 0, 949, 325, 0, 326, 327,
	328, 329, 330, 985, 986, 989, 384, 1026, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 1025, 339, 994, 995, 0, 955, 0,
	341, 1027, 987, 1028, 342, 343, 344, 1029, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 1022, 1030, 354, 355, 1031, 0, 356, 357,
	358, 978, 977, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 1032, 375, 376, 377, 380, 381, 379, 1033, 378,
	918, 240, 1034, 382, 940, 988, 383, 1002, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 1035, 394, 1036, 1016, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 1017, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 998,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 1037, 433, 434, 435, 436, 928, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 981,
	458, 442, 443, 459, 460, 1038, 461, 462, 996, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 1041,
	469, 470, 471, 472, 1018, 0, 475, 476, 916, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 1008, 1009, 1010, 1011, 0, 491, 0, 485, 486,
	1019, 487, 1020, 938, 488, 489, 490, 0, 492, 493,
	0, 922, 494, 495, 496, 498, 499, 497, 500, 982,
	501, 0, 0, 502, 503, 504, 558, 1005, 1040, 0,
	506, 505, 561, 0, 0, 0, 0, 507, 508, 562,
	509, 510, 511, 919, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 0, 0, 0, 913, 914, 0,
	0, 0, 0, 0, 0, 0, 944, 0, 0, 1497,
	942, 960, 932, 933, 934, 930, 931, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 984, 948, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 997, 0, 1004, 256, 1003,
	0, 257, 258, 259, 260, 261, 950, 983, 917, 262,
	1042, 1043, 519, 0, 263, 264, 990, 0, 971, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 974, 972, 973, 980, 976, 975,
	979, 283, 284, 285, 286, 1007, 287, 1001, 1000, 921,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 992, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 927, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 1014, 1015, 939, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 999, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 1012, 1013,
	322, 323, 0, 324, 1021, 0, 949, 325, 0, 326,
	327, 328, 329, 330, 985, 986, 989, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 1025, 339, 994, 995, 0, 955,
	0, 341, 1027, 987, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 1022, 1030, 354, 355, 1031, 0, 356,
	357, 358, 978, 977, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 918, 240, 1034, 382, 940, 988, 383, 1002, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 1016, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 1017, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	998, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 928,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	981, 458, 442, 443, 459, 460, 1038, 461, 462, 996,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	1041, 469, 470, 471, 472, 1018, 0, 475, 476, 916,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 1008, 1009, 1010, 1011, 0, 491, 0, 485,
	486, 1019, 487, 1020, 938, 488, 489, 490, 0, 492,
	493, 0, 922, 494, 495, 496, 498, 499, 497, 500,
	982, 501, 0, 0, 502, 503, 504, 558, 1005, 1040,
	0, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 919, 0, 0, 0, 0, 0,
	0, 915, 0, 0, 0, 0, 0, 0, 913, 914,
	0, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	1437, 942, 960, 932, 933, 934, 930, 931, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 984, 948, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 997, 0, 1004, 256,
	1003, 0, 257, 258, 259, 260, 261, 950, 983, 917,
	262, 1042, 1043, 519, 0, 263, 264, 990, 0, 971,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 1023, 281, 282, 974, 972, 973, 980, 976,
	975, 979, 283, 284, 285, 286, 1007, 287, 1001, 1000,
	921, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 992, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 927, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 1014, 1015, 939, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 999, 0, 0,
	0, 318, 0, 319, 0, 0, 1024, 320, 321, 1012,
	1013, 322, 323, 0, 324, 1021, 0, 949, 325, 0,
	326, 327, 328, 329, 330, 985, 986, 989, 384, 1026,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 0, 1025, 339, 994, 995, 0,
	955, 0, 341, 1027, 987, 1028, 342, 343, 344, 1029,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 1022, 1030, 354, 355, 1031, 0,
	356, 357, 358, 978, 977, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 1032, 375, 376, 377, 380, 381, 379,
	1033, 378, 918, 240, 1034, 382, 940, 988, 383, 1002,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 1035, 394, 1036, 1016,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 1017, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 998, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 1037, 433, 434, 435, 436,
	928, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 981, 458, 442, 443, 459, 460, 1038, 461, 462,
	996, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 1041, 469, 470, 471, 472, 1018, 0, 475, 476,
	916, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 1008, 1009, 1010, 1011, 0, 491, 0,
	485, 486, 1019, 487, 1020, 938, 488, 489, 490, 0,
	492, 493, 0, 922, 494, 495, 496, 498, 499, 497,
	500, 982, 501, 0, 0, 502, 503, 504, 558, 1005,
	1040, 0, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 919, 0, 0, 0, 0,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 913,
	914, 0, 0, 0, 0, 0, 0, 0, 944, 0,
	0, 1432, 942, 960, 932, 933, 934, 930, 931, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 984, 948, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 997, 0, 1004,
	256, 1003, 0, 257, 258, 259, 260, 261, 950, 983,
	917, 262, 1042, 1043, 519, 0, 263, 264, 990, 0,
	971, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 1023, 281, 282, 974, 972, 973, 980,
	976, 975, 979, 283, 284, 285, 286, 1007, 287, 1001,
	1000, 921, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 992, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 927, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 1014, 1015, 939, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 999, 0,
	0, 0, 318, 0, 319, 0, 0, 1024, 320, 321,
	1012, 1013, 322, 323, 0, 324, 1021, 0, 949, 325,
	0, 326, 327, 328, 329, 330, 985, 986, 989, 384,
	1026, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 239, 337, 338, 340, 0, 1025, 339, 994, 995,
	0, 955, 0, 341, 1027, 987, 1028, 342, 343, 344,
	1029, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 1022, 1030, 354, 355, 1031,
	0, 356, 357, 358, 978, 977, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 1032, 375, 376, 377, 380, 381,
	379, 1033, 378, 918, 240, 1034, 382, 940, 988, 383,
	1002, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 1035, 394, 1036,
	1016, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 1017, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 998, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 1037, 433, 434, 435,
	436, 928, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 981, 458, 442, 443, 459, 460, 1038, 461,
	462, 996, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 1041, 469, 470, 471, 472, 1018, 0, 475,
	476, 916, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 1008, 1009, 1010, 1011, 0, 491,
	0, 485, 486, 1019, 487, 1020, 938, 488, 489, 490,
	0, 492, 493, 0, 922, 494, 495, 496, 498, 499,
	497, 500, 982, 501, 0, 0, 502, 503, 504, 558,
	1005, 1040, 0, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 919, 0, 0, 0,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	913, 914, 0, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 1423, 942, 960, 932, 933, 934, 930, 931,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 984, 948, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 997, 0,
	1004, 256, 1003, 0, 257, 258, 259, 260, 261, 950,
	983, 917, 262, 1042, 1043, 519, 0, 263, 264, 990,
	0, 971, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 974, 972, 973,
	980, 976, 975, 979, 283, 284, 285, 286, 1007, 287,
	1001, 1000, 921, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 927, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 1014, 1015, 939,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 999,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1012, 1013, 322, 323, 0, 324, 1021, 0, 949,
	325, 0, 326, 327, 328, 329, 330, 985, 986, 989,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 1025, 339, 994,
	995, 0, 955, 0, 341, 1027, 987, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 1022, 1030, 354, 355,
	1031, 0, 356, 357, 358, 978, 977, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 918, 240, 1034, 382, 940, 988,
	383, 1002, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 1016, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 1017, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 998, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 928, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 981, 458, 442, 443, 459, 460, 1038,
	461, 462, 996, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1041, 469, 470, 471, 472, 1018, 0,
	475, 476, 916, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1008, 1009, 1010, 1011, 0,
	491, 0, 485, 486, 1019, 487, 1020, 938, 488, 489,
	490, 0, 492, 493, 0, 922, 494, 495, 496, 498,
	499, 497, 500, 982, 501, 0, 0, 502, 503, 504,
	558, 1005, 1040, 0, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 919, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	0, 913, 914, 0, 0, 0, 0, 0, 0, 0,
	944, 0, 0, 1418, 942, 960, 932, 933, 934, 930,
	931, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 1400, 942, 960, 932, 933, 934,
	930, 931, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 282, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 492, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 558, 1005, 1040, 0, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 919,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 1289, 942, 960, 932, 933,
	934, 930, 931, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 984, 948,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 997, 0, 1004, 256, 1003, 0, 257, 258, 259,
	260, 261, 950, 983, 917, 262, 1042, 1043, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 1007, 287, 1001, 1000, 921, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 992, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 927,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 939, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 999, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 1012, 1013, 322, 323, 0, 324,
	1021, 0, 949, 325, 0, 326, 327, 328, 329, 330,
	1288, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	1025, 339, 994, 995, 0, 955, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 918, 240, 1034,
	382, 940, 988, 383, 1002, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 998, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 928, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 996, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 1041, 469, 470, 471,
	472, 1018, 0, 475, 476, 916, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 1008, 1009,
	1010, 1011, 0, 491, 0, 485, 486, 1019, 487, 1020,
	938, 488, 489, 490, 0, 492, 493, 0, 922, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 558, 1005, 1040, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	919, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	0, 0, 0, 0, 913, 914, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 1283, 942, 960, 932,
	933, 934, 930, 931, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 984,
	948, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 997, 0, 1004, 256, 1003, 0, 257, 258,
	259, 260, 261, 950, 983, 917, 262, 1042, 1043, 519,
	0, 263, 264, 990, 0, 971, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 1023, 281,
	282, 974, 972, 973, 980, 976, 975, 979, 283, 284,
	285, 286, 1007, 287, 1001, 1000, 921, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 992,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	927, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 1014, 1015, 939, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 999, 0, 0, 0, 318, 0, 319,
	0, 0, 1024, 320, 321, 1012, 1013, 322, 323, 0,
	324, 1021, 0, 949, 325, 0, 326, 327, 328, 329,
	330, 1282, 986, 989, 384, 1026, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 1025, 339, 994, 995, 0, 955, 0, 341, 1027,
	987, 1028, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	1022, 1030, 354, 355, 1031, 0, 356, 357, 358, 978,
	977, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 918, 240,
	1034, 382, 940, 988, 383, 1002, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 1035, 394, 1036, 1016, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 1017, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 998, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 1037, 433, 434, 435, 436, 928, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 981, 458, 442,
	443, 459, 460, 1038, 461, 462, 996, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 1041, 469, 470,
	471, 472, 1018, 0, 475, 476, 916, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 1008,
	1009, 1010, 1011, 0, 491, 0, 485, 486, 1019, 487,
	1020, 938, 488, 489, 490, 0, 492, 493, 0, 922,
	494, 495, 496, 498, 499, 497, 500, 982, 501, 0,
	0, 502, 503, 504, 558, 1005, 1040, 0, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 919, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 913, 914, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 1276, 942, 960,
	932, 933, 934, 930, 931, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	984, 948, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 997, 0, 1004, 256, 1003, 0, 257,
	258, 259, 260, 261, 950, 983, 917, 262, 1042, 1043,
	519, 0, 263, 264, 990, 0, 971, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 1023,
	281, 282, 974, 972, 973, 980, 976, 975, 979, 283,
	284, 285, 286, 1007, 287, 1001, 1000, 921, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	992, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 927, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 1014, 1015, 939, 238, 0, 0, 0, 0,
	0, 315, 316, 317, 999, 0, 0, 0, 318, 0,
	319, 0, 0, 1024, 320, 321, 1012, 1013, 322, 323,
	0, 324, 1021, 0, 949, 325, 0, 326, 327, 328,
	329, 330, 985, 986, 989, 384, 1026, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 239, 337, 338,
	340, 0, 1025, 339, 994, 995, 0, 955, 0, 341,
	1027, 987, 1028, 342, 343, 344, 1029, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 1022, 1030, 354, 355, 1031, 0, 356, 357, 358,
	978, 977, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	1032, 375, 376, 377, 380, 381, 379, 1033, 378, 918,
	240, 1034, 382, 940, 988, 383, 1002, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 1035, 394, 1036, 1016, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 1017, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 998, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 1037, 433, 434, 435, 436, 928, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 981, 458,
	442, 443, 459, 460, 1038, 461, 462, 996, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 1041, 469,
	470, 471, 472, 1018, 0, 475, 476, 916, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	1008, 1009, 1010, 1011, 0, 491, 0, 485, 486, 1019,
	487, 1020, 938, 488, 489, 490, 0, 492, 493, 0,
	922, 494, 495, 496, 498, 499, 497, 500, 982, 501,
	0, 0, 502, 503, 504, 558, 1005, 1040, 0, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 919, 0, 0, 0, 0, 0, 0, 915,
	0, 0, 0, 0, 0, 0, 913, 914, 960, 932,
	933, 934, 930, 931, 943, 944, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 984,
	948, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 997, 0, 1004, 256, 1003, 0, 257, 258,
	259, 260, 261, 950, 983, 917, 262, 1042, 1043, 519,
	0, 263, 264, 990, 0, 971, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 1023, 281,
	282, 974, 972, 973, 980, 976, 975, 979, 283, 284,
	285, 286, 1007, 287, 1001, 1000, 921, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 992,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	927, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 1014, 1015, 939, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 999, 0, 0, 0, 318, 0, 319,
	0, 0, 1024, 320, 321, 1012, 1013, 322, 323, 0,
	324, 1021, 0, 949, 325, 0, 326, 327, 328, 329,
	330, 985, 986, 989, 384, 1026, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 1025, 339, 994, 995, 0, 955, 0, 341, 1027,
	987, 1028, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	1022, 1030, 354, 355, 1031, 0, 356, 357, 358, 978,
	977, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 918, 240,
	1034, 382, 940, 988, 383, 1002, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 1035, 394, 1036, 1016, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 1017, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 998, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 1037, 433, 434, 435, 436, 928, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 981, 458, 442,
	443, 459, 460, 1038, 461, 462, 996, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 1041, 469, 470,
	471, 472, 1018, 0, 475, 476, 916, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 1008,
	1009, 1010, 1011, 0, 491, 0, 485, 486, 1019, 487,
	1020, 938, 488, 489, 490, 0, 492, 493, 0, 922,
	494, 495, 496, 498, 499, 497, 500, 982, 501, 0,
	0, 502, 503, 504, 558, 1005, 1040, 0, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 919, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 913, 914, 960, 932, 933,
	934, 930, 931, 943, 944, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 984, 948,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 997, 0, 1004, 256, 1003, 0, 257, 258, 259,
	260, 261, 950, 983, 917, 262, 1042, 1043, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 3907,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 1007, 287, 1001, 1000, 921, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 992, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 927,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 939, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 999, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 1012, 1013, 322, 323, 0, 324,
	1021, 0, 949, 325, 0, 326, 327, 328, 329, 330,
	985, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	1025, 339, 994, 995, 0, 955, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 918, 240, 1034,
	382, 940, 988, 383, 1002, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 998, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 928, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 996, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 1041, 469, 470, 471,
	472, 1018, 0, 475, 476, 916, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 1008, 1009,
	1010, 1011, 0, 491, 0, 485, 486, 1019, 487, 1020,
	938, 488, 489, 490, 0, 3906, 493, 0, 922, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 558, 1005, 1040, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	919, 0, 0, 0, 0, 0, 0, 915, 0, 0,
	0, 0, 0, 0, 913, 914, 960, 932, 933, 934,
	930, 931, 943, 944, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 984, 948, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 3905,
	997, 0, 1004, 256, 1003, 0, 257, 258, 259, 260,
	261, 950, 983, 917, 262, 1042, 1043, 519, 0, 263,
	264, 990, 0, 971, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 3907, 974,
	972, 973, 980, 976, 975, 979, 283, 284, 285, 286,
	1007, 287, 1001, 1000, 921, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 992, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 927, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 1014,
	1015, 939, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 999, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 1012, 1013, 322, 323, 0, 324, 1021,
	0, 949, 325, 0, 326, 327, 328, 329, 330, 985,
	986, 989, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 1025,
	339, 994, 995, 0, 955, 0, 341, 1027, 987, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 1022, 1030,
	354, 355, 1031, 0, 356, 357, 358, 978, 977, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 918, 240, 1034, 382,
	940, 988, 383, 1002, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 1016, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	1017, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 998, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 928, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 981, 458, 442, 443, 459,
	460, 1038, 461, 462, 996, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 1041, 469, 470, 471, 472,
	1018, 0, 475, 476, 916, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 1008, 1009, 1010,
	1011, 0, 491, 0, 485, 486, 1019, 487, 1020, 938,
	488, 489, 490, 0, 3906, 493, 0, 922, 494, 495,
	496, 498, 499, 497, 500, 982, 501, 0, 0, 502,
	503, 504, 558, 1005, 1040, 0, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 919,
	0, 0, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 913, 914, 960, 932, 933, 934, 2675,
	2676, 943, 944, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 917, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 921, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 918, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 928, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 916, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 922, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 919, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 913, 914, 960, 932, 933, 934, 2673, 2674,
	943, 944, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 984, 948, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 997, 0,
	1004, 256, 1003, 0, 257, 258, 259, 260, 261, 950,
	983, 917, 262, 1042, 1043, 519, 0, 263, 264, 990,
	0, 971, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 974, 972, 973,
	980, 976, 975, 979, 283, 284, 285, 286, 1007, 287,
	1001, 1000, 921, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 927, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 1014, 1015, 939,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 999,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1012, 1013, 322, 323, 0, 324, 1021, 0, 949,
	325, 0, 326, 327, 328, 329, 330, 985, 986, 989,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 1025, 339, 994,
	995, 0, 955, 0, 341, 1027, 987, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 1022, 1030, 354, 355,
	1031, 0, 356, 357, 358, 978, 977, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 918, 240, 1034, 382, 940, 988,
	383, 1002, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 1016, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 1017, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 998, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 928, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 981, 458, 442, 443, 459, 460, 1038,
	461, 462, 996, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1041, 469, 470, 471, 472, 1018, 0,
	475, 476, 916, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1008, 1009, 1010, 1011, 0,
	491, 0, 485, 486, 1019, 487, 1020, 938, 488, 489,
	490, 0, 492, 493, 0, 922, 494, 495, 496, 498,
	499, 497, 500, 982, 501, 0, 0, 502, 503, 504,
	558, 1005, 1040, 0, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 919, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	0, 913, 914, 960, 932, 933, 934, 930, 931, 943,
	944, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 984, 948, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 997, 0, 1004,
	256, 1003, 0, 257, 258, 259, 260, 261, 950, 983,
	917, 262, 1042, 1043, 519, 0, 263, 264, 990, 0,
	971, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 1023, 281, 282, 974, 972, 973, 980,
	976, 975, 979, 283, 284, 285, 286, 1007, 287, 1001,
	1000, 921, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 992, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 927, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 1014, 1015, 939, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 999, 0,
	0, 0, 318, 0, 319, 0, 0, 1024, 320, 321,
	1012, 1013, 322, 323, 0, 324, 1021, 0, 949, 325,
	0, 326, 327, 328, 329, 330, 985, 986, 989, 384,
	1026, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 239, 337, 338, 340, 0, 1025, 339, 994, 995,
	0, 955, 0, 341, 1027, 987, 1028, 342, 343, 344,
	1029, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 1022, 1030, 354, 355, 1031,
	0, 356, 357, 358, 978, 977, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 1032, 375, 376, 377, 380, 381,
	379, 1033, 378, 918, 240, 1034, 382, 940, 988, 383,
	1002, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 1035, 394, 1036,
	1016, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 1017, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 998, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 1037, 433, 434, 435,
	436, 928, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 981, 458, 442, 443, 459, 460, 1038, 461,
	462, 996, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 1041, 469, 470, 471, 472, 1018, 0, 475,
	476, 916, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 1008, 1009, 1010, 1011, 0, 491,
	0, 485, 486, 1019, 487, 1020, 938, 488, 489, 490,
	0, 492, 493, 0, 922, 494, 495, 496, 498, 499,
	497, 500, 982, 501, 0, 0, 502, 503, 504, 558,
	1005, 1040, 0, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 919, 0, 0, 0,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	2105, 2106, 960, 932, 933, 934, 930, 931, 943, 944,
	0, 0, 0, 942, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 984, 948, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 997, 0, 1004, 256,
	1003, 0, 257, 258, 259, 260, 261, 950, 983, 0,
	262, 1042, 1043, 519, 0, 263, 264, 990, 0, 971,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 1023, 281, 282, 974, 972, 973, 980, 976,
	975, 979, 283, 284, 285, 286, 1007, 287, 1001, 1000,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 992, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 927, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 1014, 1015, 939, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 999, 0, 0,
	0, 318, 0, 319, 0, 0, 1024, 320, 321, 1012,
	1013, 322, 323, 0, 324, 1021, 0, 949, 325, 0,
	326, 327, 328, 329, 330, 985, 986, 989, 384, 1026,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 0, 1025, 339, 994, 995, 0,
	955, 0, 341, 1027, 987, 1028, 342, 343, 344, 1029,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 1022, 1030, 354, 355, 1031, 0,
	356, 357, 358, 978, 977, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 1032, 375, 376, 377, 380, 381, 379,
	1033, 378, 0, 240, 1034, 382, 940, 988, 383, 1002,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 1035, 394, 1036, 1016,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 1017, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 998, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 1037, 433, 434, 435, 436,
	928, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 981, 458, 442, 443, 459, 460, 1038, 461, 462,
	996, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 1041, 469, 470, 471, 472, 1018, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 1008, 1009, 1010, 1011, 0, 491, 0,
	485, 486, 1019, 487, 1020, 938, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 982, 501, 0, 0, 502, 503, 504, 558, 1005,
	1040, 0, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 960, 932, 933, 934, 930,
	931, 943, 2301, 0, 0, 0, 0, 0, 0, 2299,
	2300, 0, 241, 242, 243, 244, 245, 246, 944, 247,
	248, 0, 942, 0, 0, 0, 984, 948, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 997,
	0, 1004, 256, 1003, 0, 257, 258, 259, 260, 261,
	950, 983, 0, 262, 1042, 1043, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 1007,
	287, 1001, 1000, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 992, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 927, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	939, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	999, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 1012, 1013, 322, 323, 0, 324, 1021, 0,
	949, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	994, 995, 0, 955, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 0, 240, 1034, 382, 940,
	988, 383, 1002, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 998, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 2668, 2669, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 996, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 1041, 469, 470, 471, 472, 1018,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 1008, 1009, 1010, 1011,
	0, 491, 0, 485, 486, 1019, 487, 1020, 938, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 1005, 1040, 0, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 960, 932,
	933, 934, 930, 931, 943, 0, 0, 0, 0, 0,
	0, 0, 1838, 1839, 0, 241, 242, 243, 244, 245,
	246, 944, 247, 248, 0, 942, 0, 0, 0, 984,
	948, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 0, 997, 0, 1004, 256, 1003, 0, 257, 258,
	259, 260, 261, 950, 983, 917, 262, 1042, 1043, 519,
	0, 263, 264, 990, 0, 971, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 1023, 281,
	3907, 974, 972, 973, 980, 976, 975, 979, 283, 284,
	285, 286, 1007, 287, 1001, 1000, 921, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 992,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	927, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 1014, 1015, 939, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 999, 0, 0, 0, 318, 0, 319,
	0, 0, 1024, 320, 321, 1012, 1013, 322, 323, 0,
	324, 1021, 0, 949, 325, 0, 326, 327, 328, 329,
	330, 985, 986, 989, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 1025, 339, 994, 995, 0, 955, 0, 341, 0,
	987, 0, 342, 343, 344, 1029, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	1022, 1030, 354, 355, 0, 0, 356, 357, 358, 978,
	977, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 1032,
	375, 376, 377, 380, 381, 379, 1033, 378, 918, 240,
	0, 382, 940, 988, 383, 1002, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 1035, 394, 1036, 1016, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 1017, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 998, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 1037, 433, 434, 435, 436, 928, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 981, 458, 442,
	443, 459, 460, 0, 461, 462, 996, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 1041, 469, 470,
	471, 472, 1018, 0, 475, 476, 916, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 1008,
	1009, 1010, 1011, 0, 491, 0, 485, 486, 1019, 487,
	1020, 938, 488, 489, 490, 0, 3906, 493, 0, 922,
	494, 495, 496, 498, 499, 497, 500, 982, 501, 0,
	0, 502, 503, 504, 558, 1005, 1040, 0, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 960, 932, 933, 934, 930, 931, 943, 0, 0,
	0, 0, 0, 0, 0, 913, 914, 0, 241, 242,
	243, 244, 245, 246, 944, 247, 248, 0, 942, 0,
	0, 0, 984, 948, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 997, 0, 1004, 256, 1003,
	0, 257, 258, 259, 260, 261, 0, 983, 0, 262,
	1042, 1043, 519, 0, 263, 264, 990, 0, 971, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 974, 972, 973, 980, 976, 975,
	979, 283, 284, 285, 286, 1007, 287, 1001, 1000, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 992, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 1014, 1015, 939, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 999, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 1012, 1013,
	322, 323, 0, 324, 1021, 0, 949, 325, 0, 326,
	327, 328, 329, 330, 985, 986, 989, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 1025, 339, 994, 995, 0, 955,
	0, 341, 1027, 987, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 1022, 1030, 354, 355, 1031, 0, 356,
	357, 358, 978, 977, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 240, 1034, 382, 940, 988, 383, 1002, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 1016, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 1017, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	998, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 928,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	981, 458, 442, 443, 459, 460, 1038, 461, 462, 996,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	1041, 469, 470, 471, 472, 1018, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 1008, 1009, 1010, 1011, 0, 491, 0, 485,
	486, 1019, 487, 1020, 938, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	982, 501, 0, 0, 502, 503, 504, 558, 1005, 1040,
	0, 506, 505, 561, 0, 906, 0, 1080, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 944, 984, 0,
	0, 942, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 983, 0, 262, 517, 518, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	1021, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	985, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 1066, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 240, 1034,
	382, 0, 988, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 1072, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 1074, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 203,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 1018, 0, 475, 476, 0, 474, 205, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 1019, 487, 1020,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 1407, 559, 560, 0, 506, 505, 561,
	0, 1080, 0, 197, 507, 508, 562, 509, 510, 511,
	0, 198, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 1070, 984, 1731, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 983, 0, 262,
	517, 518, 519, 0, 263, 264, 990, 0, 971, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 974, 972, 973, 980, 976, 975,
	979, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 1014, 1015, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 527, 528,
	322, 323, 0, 324, 1021, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 985, 986, 989, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 1025, 339, 534, 535, 0, 536,
	0, 341, 1027, 987, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 1066, 352,
	351, 0, 353, 1022, 1030, 354, 355, 1031, 0, 356,
	357, 358, 978, 977, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 240, 1034, 382, 0, 988, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 1072, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 1016, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 1017, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	1074, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 203, 453, 454, 452, 455, 456, 457,
	981, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 1018, 0, 475, 476, 0,
	474, 205, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 1019, 487, 1020, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	982, 501, 0, 0, 502, 503, 504, 1407, 559, 560,
	0, 506, 505, 561, 0, 0, 0, 197, 507, 508,
	562, 509, 510, 511, 0, 198, 0, 0, 0, 2828,
	0, 1080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 1731, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 983, 0, 262,
	517, 518, 519, 0, 263, 264, 990, 0, 971, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 974, 972, 973, 980, 976, 975,
	979, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 1014, 1015, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 527, 528,
	322, 323, 0, 324, 1021, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 985, 986, 989, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 1025, 339, 534, 535, 0, 536,
	0, 341, 1027, 987, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 1066, 352,
	351, 0, 353, 1022, 1030, 354, 355, 1031, 0, 356,
	357, 358, 978, 977, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 240, 1034, 382, 0, 988, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 1072, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 1016, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 1017, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	1074, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	981, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 1018, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 1019, 487, 1020, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	982, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	0, 506, 505, 561, 0, 1062, 0, 1080, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 1070, 0, 1068, 984, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 983, 0, 262, 517, 518, 519, 0,
	263, 264, 990, 0, 971, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	974, 972, 973, 980, 976, 975, 979, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	1014, 1015, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	1021, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	985, 986, 989, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 987,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 1066, 352, 351, 0, 353, 1022,
	1030, 354, 355, 1031, 0, 356, 357, 358, 978, 977,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 240, 1034,
	382, 0, 988, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 1072, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 1016, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 1017, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 1074, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 981, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 1018, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 1019, 487, 1020,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 982, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	0, 1080, 0, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 1070, 984, 1068, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 983, 0, 262,
	517, 518, 519, 0, 263, 264, 990, 0, 971, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 974, 972, 973, 980, 976, 975,
	979, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 1014, 1015, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 527, 528,
	322, 323, 0, 324, 1021, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 985, 986, 989, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 1025, 339, 534, 535, 0, 536,
	0, 341, 1027, 987, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 1066, 352,
	351, 0, 353, 1022, 1030, 354, 355, 1031, 0, 356,
	357, 358, 978, 977, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 240, 1034, 382, 0, 988, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 1072, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 1016, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 1017, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	1074, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	981, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 1018, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 1019, 487, 1020, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	982, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	0, 506, 505, 561, 0, 1080, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 1070, 984, 1068, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 983, 0, 262, 517, 518, 519, 0, 263, 264,
	990, 0, 971, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 974, 972,
	973, 980, 976, 975, 979, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 1014, 1015,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 527, 528, 322, 323, 0, 324, 1021, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 985, 986,
	989, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 1025, 339,
	534, 535, 0, 536, 0, 341, 1027, 987, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 1022, 1030, 354,
	355, 1031, 0, 356, 357, 358, 978, 977, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 0, 240, 1034, 382, 0,
	988, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 1016, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 1017,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 548, 1074, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 981, 458, 442, 443, 459, 460,
	1038, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 1018,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 1019, 487, 1020, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 982, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 0, 906,
	0, 1261, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 1630, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 1230, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 0,
	337, 338, 340, 0, 1025, 339, 534, 535, 0, 536,
	0, 341, 1027, 537, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 1030, 354, 355, 1031, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 0, 1034, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 203, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 205, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 1407, 559, 560,
	0, 506, 505, 561, 0, 0, 0, 197, 507, 508,
	562, 509, 510, 511, 0, 198, 0, 0, 0, 1404,
	0, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 1230, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 0,
	337, 338, 340, 0, 1025, 339, 534, 535, 0, 536,
	0, 341, 1027, 537, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 1030, 354, 355, 1031, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 0, 1034, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 203, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 205, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 1407, 559, 560,
	0, 506, 505, 561, 0, 0, 0, 197, 507, 508,
	562, 509, 510, 511, 0, 198, 0, 0, 0, 0,
	0, 1261, 1260, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 1230, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 1023, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 1024, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 1026, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 0,
	337, 338, 340, 0, 1025, 339, 534, 535, 0, 536,
	0, 341, 1027, 537, 1028, 342, 343, 344, 1029, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 1030, 354, 355, 1031, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 1032, 375, 376, 377, 380, 381, 379, 1033,
	378, 0, 0, 1034, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 1035, 394, 1036, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 1037, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 1038, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	0, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 1261, 1260, 0, 0, 0, 0,
	1258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 1429, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 1230, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 1025, 339, 534,
	535, 0, 536, 0, 341, 1027, 537, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 1030, 354, 355,
	1031, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 0, 0, 1034, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 1035, 394,
	1036, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 1038,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 1261, 1260, 0,
	0, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	3058, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 1230, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	1030, 354, 355, 1031, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 0, 1034,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	1080, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 984, 0, 1413, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 983, 0, 262, 517,
	518, 519, 0, 263, 264, 990, 0, 971, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	1023, 281, 282, 974, 972, 973, 980, 976, 975, 979,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 1014, 1015, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 1024, 320, 321, 527, 528, 322,
	323, 0, 324, 1021, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 985, 986, 989, 384, 1026, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 1025, 339, 534, 535, 0, 536, 0,
	341, 1027, 987, 1028, 342, 343, 344, 1029, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 1022, 1030, 354, 355, 1031, 0, 356, 357,
	358, 978, 977, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 1032, 375, 376, 377, 380, 381, 379, 1033, 378,
	0, 240, 1034, 382, 0, 988, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 1035, 394, 1036, 1016, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 1017, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 1037, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 981,
	458, 442, 443, 459, 460, 1038, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 1018, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	1019, 487, 1020, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 982,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 906, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 0, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 0, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 203, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 205, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 1407, 559, 560, 0, 506, 505, 561, 235, 0,
	0, 197, 507, 508, 562, 509, 510, 511, 0, 198,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 169, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 240,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 0, 506, 505,
	561, 0, 1351, 0, 235, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 1745, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 240, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 0, 235, 2594,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 1355, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 0, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 0,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 0, 506, 505,
	561, 235, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 4055, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 240, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	235, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 3006, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 235,
	506, 505, 561, 0, 0, 0, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 1355, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 235, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 2569, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 0, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 235, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 3146, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 0, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 0, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 0, 760,
	0, 644, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 2004, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 651, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 758, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 240, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 649, 477, 478, 479, 480, 650, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	0, 506, 505, 561, 0, 642, 0, 644, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	654, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 0, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 651,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 0, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 0, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 239, 337, 338, 340, 0,
	0, 339, 534, 535, 0, 536, 0, 341, 0, 537,
	0, 342, 343, 344, 0, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	0, 354, 355, 0, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 0, 375,
	376, 377, 380, 381, 379, 0, 378, 0, 240, 0,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 0, 394, 0, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	0, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 0, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 649, 477, 478,
	479, 480, 650, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 644, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 654, 512, 0, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	514, 0, 515, 256, 516, 0, 257, 258, 259, 260,
	261, 0, 0, 0, 262, 517, 518, 519, 0, 263,
	264, 520, 0, 0, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 0, 0, 283, 284, 651, 286,
	0, 287, 521, 522, 0, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 523, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 524,
	525, 0, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 526, 0, 0, 0, 318, 0, 319, 0, 0,
	0, 320, 321, 527, 528, 322, 323, 0, 324, 529,
	0, 530, 325, 0, 326, 327, 328, 329, 330, 531,
	532, 533, 384, 0, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 0,
	339, 534, 535, 0, 536, 0, 341, 0, 537, 0,
	342, 343, 344, 0, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 538, 0,
	354, 355, 0, 0, 356, 357, 358, 0, 0, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 0, 375, 376,
	377, 380, 381, 379, 0, 378, 0, 240, 0, 382,
	0, 539, 383, 540, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	0, 394, 0, 542, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	545, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 547, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 0,
	433, 434, 435, 436, 548, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 0, 458, 442, 443, 459,
	460, 0, 461, 462, 549, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 550, 469, 470, 471, 472,
	551, 0, 475, 476, 0, 474, 649, 477, 478, 479,
	480, 650, 482, 309, 483, 0, 484, 552, 553, 554,
	555, 0, 491, 0, 485, 486, 556, 487, 557, 0,
	488, 489, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 498, 499, 497, 500, 0, 501, 0, 0, 502,
	503, 504, 558, 559, 560, 644, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 654, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 651, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 2040,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 649, 477, 478, 479, 480,
	650, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 1780, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 0, 1786, 0,
	1776, 256, 1792, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 1801, 1802, 0, 0, 263, 264, 0,
	0, 1230, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 1023, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 1007, 287,
	1790, 1789, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 992, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 1788,
	0, 0, 0, 318, 0, 319, 0, 0, 1024, 320,
	321, 1797, 1798, 322, 323, 0, 324, 0, 0, 0,
	325, 0, 326, 327, 328, 329, 330, 0, 0, 0,
	384, 1026, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 1025, 339, 1783,
	1784, 0, 1779, 0, 341, 1027, 0, 1028, 342, 343,
	344, 1029, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 0, 1030, 354, 355,
	1031, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 1032, 375, 376, 377, 380,
	381, 379, 1033, 378, 0, 0, 1034, 382, 0, 0,
	383, 1791, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 0, 1035, 394,
	1036, 0, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 1773, 1774, 0, 407,
	0, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 1787, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 1037, 433, 434,
	435, 436, 0, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 1038,
	461, 462, 1785, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 1800, 469, 470, 471, 472, 0, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 1793, 1794, 1795, 1796, 0,
	491, 0, 485, 486, 0, 487, 0, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	0, 1777, 1799, 0, 506, 505, 0, 0, 0, 0,
	0, 507, 508, 0, 509, 510, 511, 1261, 1260, 0,
	0, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 1767, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 1230, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	1030, 354, 355, 1031, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 0, 1034,
	382, 3305, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	1261, 1260, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 1230, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	1023, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 1024, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 1026, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 0, 337,
	338, 340, 0, 1025, 339, 534, 535, 0, 536, 0,
	341, 1027, 537, 1028, 342, 343, 344, 1029, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 1030, 354, 355, 1031, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 1032, 375, 376, 377, 380, 381, 379, 1033, 378,
	0, 0, 1034, 382, 2986, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 1035, 394, 1036, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 1037, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 1038, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1261, 1260, 0, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	1230, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 1023, 281, 282, 0, 0, 0, 0,
	0, 0, 2977, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 1024, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	1026, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 1025, 339, 534, 535,
	0, 536, 0, 341, 1027, 537, 1028, 342, 343, 344,
	1029, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 1030, 354, 355, 1031,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 1032, 375, 376, 377, 380, 381,
	379, 1033, 378, 0, 0, 1034, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 1035, 394, 1036,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 1037, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 2978, 458, 442, 443, 459, 460, 1038, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 235, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 240, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 1456, 0, 1261, 1260, 0,
	0, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 1230, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 238, 0, 0, 0, 0, 0, 1455,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	1030, 354, 355, 1031, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 0, 1034,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 1454, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 1453, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	1397, 0, 1261, 1260, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 1230,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 1023, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 1024, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 1396, 532, 533, 384, 1026,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 1025, 339, 534, 535, 0,
	536, 0, 341, 1027, 537, 1028, 342, 343, 344, 1029,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 1030, 354, 355, 1031, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 1032, 375, 376, 377, 380, 381, 379,
	1033, 378, 0, 0, 1034, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 1035, 394, 1036, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 1037, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 1038, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 1331, 0, 1261, 1260, 0,
	0, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 1230, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	1330, 532, 533, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	1030, 354, 355, 1031, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 0, 1034,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	1294, 0, 1261, 1260, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 1230,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 1023, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 1024, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 1026,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 1025, 339, 534, 535, 0,
	536, 0, 341, 1027, 537, 1028, 342, 343, 344, 1029,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 1030, 354, 355, 1031, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 1032, 375, 376, 377, 380, 381, 379,
	1033, 378, 0, 0, 1034, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 1035, 394, 1036, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 1037, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 1038, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 1256, 0, 1261, 1260, 0,
	0, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 1230, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 1023, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 238, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 1024, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	1255, 532, 533, 384, 1026, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	1025, 339, 534, 535, 0, 536, 0, 341, 1027, 537,
	1028, 342, 343, 344, 1029, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	1030, 354, 355, 1031, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 1032, 375,
	376, 377, 380, 381, 379, 1033, 378, 0, 0, 1034,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 1035, 394, 1036, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	1037, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 1038, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	1261, 1260, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 1230, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	1023, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 1024, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 1026, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 0, 337,
	338, 340, 0, 1025, 339, 534, 535, 0, 536, 0,
	341, 1027, 537, 1028, 342, 343, 344, 1029, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 1030, 354, 355, 1031, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 1032, 375, 376, 377, 380, 381, 379, 1033, 378,
	0, 0, 1034, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 1035, 394, 1036, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 1037, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 1038, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1261, 1260, 0, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	1230, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 1023, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 1811, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 1024, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	1026, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 1025, 339, 534, 535,
	0, 536, 0, 341, 1027, 537, 1028, 342, 343, 344,
	1029, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 1030, 354, 355, 1031,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 1032, 375, 376, 377, 380, 381,
	379, 1033, 378, 0, 0, 1034, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 1035, 394, 1036,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 1037, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 1038, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 0, 506, 505, 561, 1261, 1260, 0, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	514, 0, 515, 256, 516, 0, 257, 258, 259, 260,
	261, 0, 0, 0, 262, 517, 518, 519, 0, 263,
	264, 520, 0, 1230, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 1023, 281, 282, 0,
	0, 0, 0, 0, 0, 0, 283, 284, 285, 286,
	0, 287, 521, 522, 0, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 523, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 524,
	525, 0, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 526, 0, 0, 0, 318, 0, 319, 0, 0,
	1024, 320, 321, 527, 528, 322, 323, 0, 324, 529,
	0, 530, 325, 0, 326, 327, 328, 329, 330, 531,
	532, 533, 384, 1026, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 0, 337, 338, 340, 0, 1025,
	339, 534, 535, 0, 536, 0, 341, 1027, 537, 1028,
	342, 343, 344, 1029, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 538, 1030,
	354, 355, 1031, 0, 356, 357, 358, 0, 0, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 1032, 375, 376,
	377, 380, 381, 379, 1033, 378, 0, 0, 1034, 382,
	0, 539, 383, 540, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	1035, 394, 1036, 542, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	545, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 547, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 1037,
	433, 434, 435, 436, 548, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 0, 458, 442, 443, 459,
	460, 1038, 461, 462, 549, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 550, 469, 470, 471, 472,
	551, 0, 475, 476, 0, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 552, 553, 554,
	555, 0, 491, 0, 485, 486, 556, 487, 557, 0,
	488, 489, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 498, 499, 497, 500, 0, 501, 0, 0, 502,
	503, 504, 558, 559, 560, 1261, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 1230, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 1023, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 1024,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 1026, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 0, 337, 338, 340, 0, 1025, 339,
	534, 535, 0, 536, 0, 341, 1027, 537, 1028, 342,
	343, 344, 1029, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 1030, 354,
	355, 1031, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 1032, 375, 376, 377,
	380, 381, 379, 1033, 378, 0, 0, 1034, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 1035,
	394, 1036, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 1037, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	1038, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 235, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 2432, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 2429, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 2436, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	2607, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 2435, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 2604, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 2606, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	2603, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 2434, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 2605, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 235, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 2432, 263, 264, 520, 0,
	0, 2426, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 2429, 276, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 2436, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 2435, 0, 0, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 2425, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 0, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 2434, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 2433, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 0, 506, 505, 561, 1519, 0, 235, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 240,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 1522, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 1520, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 0, 1521, 505,
	561, 1234, 0, 235, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 1236, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 239, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 240, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 1072, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 0, 506, 505, 561, 1231, 0, 235, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 238, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 1233, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 239, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 240,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 1072, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 0, 506, 505,
	561, 1137, 0, 235, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 238,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 1139, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 239, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 240, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 1072, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 0, 506, 505, 561, 594, 0, 235, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 593, 245,
	246, 583, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 586, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 587,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 0, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 0,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	588, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 0, 506, 505,
	561, 582, 0, 235, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 583, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 586, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 587, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 0, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 588, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 235, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	2950, 378, 0, 240, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 235, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 240, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 1072, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	0, 506, 505, 561, 2541, 0, 235, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	514, 0, 515, 256, 516, 0, 257, 258, 259, 260,
	261, 0, 0, 0, 262, 517, 518, 519, 0, 263,
	264, 520, 0, 0, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 0, 0, 283, 284, 285, 286,
	0, 287, 521, 522, 0, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 523, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 524,
	525, 0, 238, 0, 0, 0, 0, 0, 315, 316,
	317, 526, 0, 0, 0, 318, 0, 319, 0, 0,
	0, 320, 321, 527, 528, 322, 323, 0, 324, 529,
	0, 530, 325, 0, 326, 327, 328, 329, 330, 2540,
	532, 533, 384, 0, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 239, 337, 338, 340, 0, 0,
	339, 534, 535, 0, 536, 0, 341, 0, 537, 0,
	342, 343, 344, 0, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 538, 0,
	354, 355, 0, 0, 356, 357, 358, 0, 0, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 0, 375, 376,
	377, 380, 381, 379, 0, 378, 0, 240, 0, 382,
	0, 539, 383, 540, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	0, 394, 0, 542, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	545, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 547, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 0,
	433, 434, 435, 436, 548, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 0, 458, 442, 443, 459,
	460, 0, 461, 462, 549, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 550, 469, 470, 471, 472,
	551, 0, 475, 476, 0, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 552, 553, 554,
	555, 0, 491, 0, 485, 486, 556, 487, 557, 0,
	488, 489, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 498, 499, 497, 500, 0, 501, 0, 0, 502,
	503, 504, 558, 559, 560, 0, 506, 505, 561, 2016,
	0, 235, 0, 507, 508, 562, 509, 510, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 240, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	235, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	1942, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1947, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 1946, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 1935, 0,
	235, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 1937, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1393, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 1392, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 1384, 0,
	235, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 1383, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1381, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 1380, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 1377, 0,
	235, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 1376, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1333, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 1252, 0,
	235, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 1245, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 1247, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 0, 506, 505, 561, 564, 0,
	235, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 0,
	506, 505, 561, 226, 0, 235, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 238, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 239, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 240, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 235, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	238, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 239, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 240, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 235, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 586, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 587, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 0, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 588, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 235, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 2047, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 238, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	239, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 240, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 235, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 2045, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 238, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 239,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 240, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	235, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 2043, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 238, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 239, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 240, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 235,
	506, 505, 561, 0, 0, 0, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 238, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 1985, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 239, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	240, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 747, 0, 235, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 746, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 745, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 235, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 2607,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 0, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 3536, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 0, 506, 505, 561, 573, 0, 235, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 572, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 0, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 0,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 571, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 0, 506, 505,
	561, 235, 2594, 0, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 0, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 0,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 0, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	0, 506, 505, 561, 235, 3545, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 235, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 3280, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 0, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 458, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 235, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 2352, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 0, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 235, 2594, 0, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 531, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 0, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 0, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 2591, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 235, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 2024, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 2014, 0, 235,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 614, 0, 235, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 1111, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 1109, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 615, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 611, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 1112, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 610, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 614, 0, 235,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 604, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 615,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 611, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 1412, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	610, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 1390, 0, 235, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 1389, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 1339, 0, 235,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 1338, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 1324, 0, 235, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 1323, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 1319, 0, 235,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 1239, 0, 235, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 445, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 0, 506, 505, 561, 614, 0, 235,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 1111, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	1109, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 615,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 611, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 1112, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	610, 553, 554, 555, 0, 491, 0, 485, 1110, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 235, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 1093, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 531, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 0, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 0,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 235, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	620, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 0, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 0, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 0, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	0, 339, 534, 535, 0, 536, 0, 341, 0, 537,
	0, 342, 343, 344, 0, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	0, 354, 355, 0, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 0, 375,
	376, 377, 380, 381, 379, 0, 378, 0, 0, 0,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 0, 394, 0, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	0, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 0, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	614, 0, 235, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 604, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 602, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 603, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 615, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 0, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	605, 437, 0, 438, 439, 445, 446, 440, 441, 611,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 606,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 610, 553, 554, 555, 0, 491, 0,
	485, 608, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 598, 0, 235, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 0, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 0, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 0, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	0, 339, 534, 535, 0, 536, 0, 341, 0, 537,
	0, 342, 343, 344, 0, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	0, 354, 355, 0, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 0, 375,
	376, 377, 380, 381, 379, 0, 378, 0, 0, 0,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 0, 394, 0, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	0, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	599, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 0, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	596, 0, 235, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 0, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 0, 506, 505, 561, 590, 0, 235, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 0, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 0, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	531, 532, 533, 384, 0, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	0, 339, 534, 535, 0, 536, 0, 341, 0, 537,
	0, 342, 343, 344, 0, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	0, 354, 355, 0, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 0, 375,
	376, 377, 380, 381, 379, 0, 378, 0, 0, 0,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 0, 394, 0, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	0, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 0, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 0, 506, 505, 561,
	568, 0, 235, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 531, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 0, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 235, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 531, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 0,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 0, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	235, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 3021, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 0, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 0, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	419, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 235,
	506, 505, 561, 0, 0, 0, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 325, 0, 326, 327, 328,
	329, 330, 2982, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 399, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 415, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 437, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 235, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 0, 0, 0, 241, 242, 243, 244, 245,
	246, 0, 247, 248, 0, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 249, 250, 252, 251, 253, 254,
	255, 513, 514, 0, 515, 256, 516, 0, 257, 258,
	259, 260, 261, 0, 0, 0, 262, 517, 518, 519,
	0, 263, 264, 520, 0, 0, 0, 265, 266, 267,
	268, 269, 270, 271, 0, 0, 273, 274, 275, 272,
	0, 276, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	285, 286, 0, 287, 521, 522, 0, 291, 288, 289,
	0, 292, 290, 0, 293, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 300, 301, 0, 302, 303,
	523, 304, 305, 306, 308, 310, 307, 311, 312, 313,
	314, 524, 525, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 526, 0, 0, 0, 318, 0, 319,
	0, 0, 0, 320, 321, 527, 528, 322, 323, 0,
	324, 529, 0, 530, 325, 0, 326, 327, 328, 329,
	330, 2923, 532, 533, 384, 0, 331, 332, 0, 333,
	334, 335, 336, 0, 0, 0, 0, 337, 338, 340,
	0, 0, 339, 534, 535, 0, 536, 0, 341, 0,
	537, 0, 342, 343, 344, 0, 345, 0, 0, 0,
	346, 347, 348, 349, 350, 0, 352, 351, 0, 353,
	538, 0, 354, 355, 0, 0, 356, 357, 358, 0,
	0, 359, 360, 361, 362, 0, 363, 364, 366, 368,
	365, 367, 372, 369, 370, 371, 374, 0, 373, 0,
	375, 376, 377, 380, 381, 379, 0, 378, 0, 0,
	0, 382, 0, 539, 383, 540, 385, 386, 0, 0,
	387, 0, 0, 0, 389, 390, 391, 0, 0, 392,
	393, 541, 0, 394, 0, 542, 395, 396, 388, 397,
	398, 399, 400, 401, 402, 403, 404, 0, 405, 406,
	543, 544, 545, 407, 546, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 415, 416, 417, 547, 419, 418,
	420, 0, 0, 0, 0, 0, 0, 421, 0, 423,
	424, 425, 422, 426, 427, 428, 429, 0, 430, 431,
	432, 0, 433, 434, 435, 436, 548, 437, 0, 438,
	439, 445, 446, 440, 441, 447, 448, 449, 450, 451,
	0, 453, 454, 452, 455, 456, 457, 0, 458, 442,
	443, 459, 460, 0, 461, 462, 549, 0, 463, 0,
	464, 465, 466, 467, 444, 468, 473, 550, 469, 470,
	471, 472, 551, 0, 475, 476, 0, 474, 0, 477,
	478, 479, 480, 481, 482, 309, 483, 0, 484, 552,
	553, 554, 555, 0, 491, 0, 485, 486, 556, 487,
	557, 0, 488, 489, 490, 0, 492, 493, 0, 0,
	494, 495, 496, 498, 499, 497, 500, 0, 501, 0,
	0, 502, 503, 504, 558, 559, 560, 235, 506, 505,
	561, 0, 0, 0, 0, 507, 508, 562, 509, 510,
	511, 0, 0, 0, 241, 242, 243, 244, 245, 246,
	0, 247, 248, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 249, 250, 252, 251, 253, 254, 255,
	513, 514, 0, 515, 256, 516, 0, 257, 258, 259,
	260, 261, 0, 0, 0, 262, 517, 518, 519, 0,
	263, 264, 520, 0, 0, 0, 265, 266, 267, 268,
	269, 270, 271, 0, 0, 273, 274, 275, 272, 0,
	276, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 285,
	286, 0, 287, 521, 522, 0, 291, 288, 289, 0,
	292, 290, 0, 293, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 300, 301, 0, 302, 303, 523,
	304, 305, 306, 308, 310, 307, 311, 312, 313, 314,
	524, 525, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 526, 0, 0, 0, 318, 0, 319, 0,
	0, 0, 320, 321, 527, 528, 322, 323, 0, 324,
	529, 0, 530, 325, 0, 326, 327, 328, 329, 330,
	2921, 532, 533, 384, 0, 331, 332, 0, 333, 334,
	335, 336, 0, 0, 0, 0, 337, 338, 340, 0,
	0, 339, 534, 535, 0, 536, 0, 341, 0, 537,
	0, 342, 343, 344, 0, 345, 0, 0, 0, 346,
	347, 348, 349, 350, 0, 352, 351, 0, 353, 538,
	0, 354, 355, 0, 0, 356, 357, 358, 0, 0,
	359, 360, 361, 362, 0, 363, 364, 366, 368, 365,
	367, 372, 369, 370, 371, 374, 0, 373, 0, 375,
	376, 377, 380, 381, 379, 0, 378, 0, 0, 0,
	382, 0, 539, 383, 540, 385, 386, 0, 0, 387,
	0, 0, 0, 389, 390, 391, 0, 0, 392, 393,
	541, 0, 394, 0, 542, 395, 396, 388, 397, 398,
	399, 400, 401, 402, 403, 404, 0, 405, 406, 543,
	544, 545, 407, 546, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 415, 416, 417, 547, 419, 418, 420,
	0, 0, 0, 0, 0, 0, 421, 0, 423, 424,
	425, 422, 426, 427, 428, 429, 0, 430, 431, 432,
	0, 433, 434, 435, 436, 548, 437, 0, 438, 439,
	445, 446, 440, 441, 447, 448, 449, 450, 451, 0,
	453, 454, 452, 455, 456, 457, 0, 458, 442, 443,
	459, 460, 0, 461, 462, 549, 0, 463, 0, 464,
	465, 466, 467, 444, 468, 473, 550, 469, 470, 471,
	472, 551, 0, 475, 476, 0, 474, 0, 477, 478,
	479, 480, 481, 482, 309, 483, 0, 484, 552, 553,
	554, 555, 0, 491, 0, 485, 486, 556, 487, 557,
	0, 488, 489, 490, 0, 492, 493, 0, 0, 494,
	495, 496, 498, 499, 497, 500, 0, 501, 0, 0,
	502, 503, 504, 558, 559, 560, 235, 506, 505, 561,
	0, 0, 0, 0, 507, 508, 562, 509, 510, 511,
	0, 0, 0, 241, 242, 243, 244, 245, 246, 0,
	247, 248, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 249, 250, 252, 251, 253, 254, 255, 513,
	514, 0, 515, 256, 516, 0, 257, 258, 259, 260,
	261, 0, 0, 0, 262, 517, 518, 519, 0, 263,
	264, 520, 0, 0, 0, 265, 266, 267, 268, 269,
	270, 271, 0, 0, 273, 274, 275, 272, 0, 276,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 0, 0, 283, 284, 285, 286,
	0, 287, 521, 522, 0, 291, 288, 289, 0, 292,
	290, 0, 293, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 300, 301, 0, 302, 303, 523, 304,
	305, 306, 308, 310, 307, 311, 312, 313, 314, 524,
	525, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 526, 0, 0, 0, 318, 0, 319, 0, 0,
	0, 320, 321, 527, 528, 322, 323, 0, 324, 529,
	0, 530, 325, 0, 326, 327, 328, 329, 330, 2907,
	532, 533, 384, 0, 331, 332, 0, 333, 334, 335,
	336, 0, 0, 0, 0, 337, 338, 340, 0, 0,
	339, 534, 535, 0, 536, 0, 341, 0, 537, 0,
	342, 343, 344, 0, 345, 0, 0, 0, 346, 347,
	348, 349, 350, 0, 352, 351, 0, 353, 538, 0,
	354, 355, 0, 0, 356, 357, 358, 0, 0, 359,
	360, 361, 362, 0, 363, 364, 366, 368, 365, 367,
	372, 369, 370, 371, 374, 0, 373, 0, 375, 376,
	377, 380, 381, 379, 0, 378, 0, 0, 0, 382,
	0, 539, 383, 540, 385, 386, 0, 0, 387, 0,
	0, 0, 389, 390, 391, 0, 0, 392, 393, 541,
	0, 394, 0, 542, 395, 396, 388, 397, 398, 399,
	400, 401, 402, 403, 404, 0, 405, 406, 543, 544,
	545, 407, 546, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 415, 416, 417, 547, 419, 418, 420, 0,
	0, 0, 0, 0, 0, 421, 0, 423, 424, 425,
	422, 426, 427, 428, 429, 0, 430, 431, 432, 0,
	433, 434, 435, 436, 548, 437, 0, 438, 439, 445,
	446, 440, 441, 447, 448, 449, 450, 451, 0, 453,
	454, 452, 455, 456, 457, 0, 458, 442, 443, 459,
	460, 0, 461, 462, 549, 0, 463, 0, 464, 465,
	466, 467, 444, 468, 473, 550, 469, 470, 471, 472,
	551, 0, 475, 476, 0, 474, 0, 477, 478, 479,
	480, 481, 482, 309, 483, 0, 484, 552, 553, 554,
	555, 0, 491, 0, 485, 486, 556, 487, 557, 0,
	488, 489, 490, 0, 492, 493, 0, 0, 494, 495,
	496, 498, 499, 497, 500, 0, 501, 0, 0, 502,
	503, 504, 558, 559, 560, 235, 506, 505, 561, 0,
	0, 0, 0, 507, 508, 562, 509, 510, 511, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 0, 247,
	248, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 249, 250, 252, 251, 253, 254, 255, 513, 514,
	0, 515, 256, 516, 0, 257, 258, 259, 260, 261,
	0, 0, 0, 262, 517, 518, 519, 0, 263, 264,
	520, 0, 0, 0, 265, 266, 267, 268, 269, 270,
	271, 0, 0, 273, 274, 275, 272, 0, 276, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 285, 286, 0,
	287, 521, 522, 0, 291, 288, 289, 0, 292, 290,
	0, 293, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 300, 301, 0, 302, 303, 523, 304, 305,
	306, 308, 310, 307, 311, 312, 313, 314, 524, 525,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	526, 0, 0, 0, 318, 0, 319, 0, 0, 0,
	320, 321, 527, 528, 322, 323, 0, 324, 529, 0,
	530, 325, 0, 326, 327, 328, 329, 330, 2549, 532,
	533, 384, 0, 331, 332, 0, 333, 334, 335, 336,
	0, 0, 0, 0, 337, 338, 340, 0, 0, 339,
	534, 535, 0, 536, 0, 341, 0, 537, 0, 342,
	343, 344, 0, 345, 0, 0, 0, 346, 347, 348,
	349, 350, 0, 352, 351, 0, 353, 538, 0, 354,
	355, 0, 0, 356, 357, 358, 0, 0, 359, 360,
	361, 362, 0, 363, 364, 366, 368, 365, 367, 372,
	369, 370, 371, 374, 0, 373, 0, 375, 376, 377,
	380, 381, 379, 0, 378, 0, 0, 0, 382, 0,
	539, 383, 540, 385, 386, 0, 0, 387, 0, 0,
	0, 389, 390, 391, 0, 0, 392, 393, 541, 0,
	394, 0, 542, 395, 396, 388, 397, 398, 399, 400,
	401, 402, 403, 404, 0, 405, 406, 543, 544, 545,
	407, 546, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 415, 416, 417, 547, 419, 418, 420, 0, 0,
	0, 0, 0, 0, 421, 0, 423, 424, 425, 422,
	426, 427, 428, 429, 0, 430, 431, 432, 0, 433,
	434, 435, 436, 548, 437, 0, 438, 439, 445, 446,
	440, 441, 447, 448, 449, 450, 451, 0, 453, 454,
	452, 455, 456, 457, 0, 458, 442, 443, 459, 460,
	0, 461, 462, 549, 0, 463, 0, 464, 465, 466,
	467, 444, 468, 473, 550, 469, 470, 471, 472, 551,
	0, 475, 476, 0, 474, 0, 477, 478, 479, 480,
	481, 482, 309, 483, 0, 484, 552, 553, 554, 555,
	0, 491, 0, 485, 486, 556, 487, 557, 0, 488,
	489, 490, 0, 492, 493, 0, 0, 494, 495, 496,
	498, 499, 497, 500, 0, 501, 0, 0, 502, 503,
	504, 558, 559, 560, 235, 506, 505, 561, 0, 0,
	0, 0, 507, 508, 562, 509, 510, 511, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 0, 247, 248,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	249, 250, 252, 251, 253, 254, 255, 513, 514, 0,
	515, 256, 516, 0, 257, 258, 259, 260, 261, 0,
	0, 0, 262, 517, 518, 519, 0, 263, 264, 520,
	0, 0, 0, 265, 266, 267, 268, 269, 270, 271,
	0, 0, 273, 274, 275, 272, 0, 276, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 285, 286, 0, 287,
	521, 522, 0, 291, 288, 289, 0, 292, 290, 0,
	293, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 300, 301, 0, 302, 303, 523, 304, 305, 306,
	308, 310, 307, 311, 312, 313, 314, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 526,
	0, 0, 0, 318, 0, 319, 0, 0, 0, 320,
	321, 527, 528, 322, 323, 0, 324, 529, 0, 530,
	325, 0, 326, 327, 328, 329, 330, 531, 532, 533,
	384, 0, 331, 332, 0, 333, 334, 335, 336, 0,
	0, 0, 0, 337, 338, 340, 0, 0, 339, 534,
	535, 0, 536, 0, 341, 0, 537, 0, 342, 343,
	344, 0, 345, 0, 0, 0, 346, 347, 348, 349,
	350, 0, 352, 351, 0, 353, 538, 0, 354, 355,
	0, 0, 356, 357, 358, 0, 0, 359, 360, 361,
	362, 0, 363, 364, 366, 368, 365, 367, 372, 369,
	370, 371, 374, 0, 373, 0, 375, 376, 377, 380,
	381, 379, 0, 378, 0, 0, 0, 382, 0, 539,
	383, 540, 385, 386, 0, 0, 387, 0, 0, 0,
	389, 390, 391, 0, 0, 392, 393, 541, 0, 394,
	0, 542, 395, 396, 388, 397, 398, 399, 400, 401,
	402, 403, 404, 0, 405, 406, 543, 544, 545, 407,
	546, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	415, 416, 417, 547, 419, 418, 420, 0, 0, 0,
	0, 0, 0, 421, 0, 423, 424, 425, 422, 426,
	427, 428, 429, 0, 430, 431, 432, 0, 433, 434,
	435, 436, 548, 437, 0, 438, 439, 599, 446, 440,
	441, 447, 448, 449, 450, 451, 0, 453, 454, 452,
	455, 456, 457, 0, 458, 442, 443, 459, 460, 0,
	461, 462, 549, 0, 463, 0, 464, 465, 466, 467,
	444, 468, 473, 550, 469, 470, 471, 472, 551, 0,
	475, 476, 0, 474, 0, 477, 478, 479, 480, 481,
	482, 309, 483, 0, 484, 552, 553, 554, 555, 0,
	491, 0, 485, 486, 556, 487, 557, 0, 488, 489,
	490, 0, 492, 493, 0, 0, 494, 495, 496, 498,
	499, 497, 500, 0, 501, 0, 0, 502, 503, 504,
	558, 559, 560, 235, 506, 505, 561, 0, 0, 0,
	0, 507, 508, 562, 509, 510, 511, 0, 0, 0,
	241, 242, 243, 244, 245, 246, 0, 247, 248, 0,
	0, 0, 0, 0, 512, 0, 1967, 0, 0, 249,
	250, 252, 251, 253, 254, 255, 513, 514, 0, 515,
	256, 516, 0, 257, 258, 259, 260, 261, 0, 0,
	0, 262, 517, 518, 519, 0, 263, 264, 520, 0,
	0, 0, 265, 266, 267, 268, 269, 270, 271, 0,
	0, 273, 274, 275, 272, 0, 276, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 285, 286, 0, 287, 521,
	522, 0, 291, 288, 289, 0, 292, 290, 0, 293,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	300, 301, 0, 302, 303, 523, 304, 305, 306, 308,
	310, 307, 311, 312, 313, 314, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 526, 0,
	0, 0, 318, 0, 319, 0, 0, 0, 320, 321,
	527, 528, 322, 323, 0, 324, 529, 0, 530, 325,
	0, 326, 327, 328, 329, 330, 531, 532, 533, 384,
	0, 331, 332, 0, 333, 334, 335, 336, 0, 0,
	0, 0, 337, 338, 340, 0, 0, 339, 534, 535,
	0, 536, 0, 341, 0, 537, 0, 342, 343, 344,
	0, 345, 0, 0, 0, 346, 347, 348, 349, 350,
	0, 352, 351, 0, 353, 538, 0, 354, 355, 0,
	0, 356, 357, 358, 0, 0, 359, 360, 361, 362,
	0, 363, 364, 366, 368, 365, 367, 372, 369, 370,
	371, 374, 0, 373, 0, 375, 376, 377, 380, 381,
	379, 0, 378, 0, 0, 0, 382, 0, 539, 383,
	540, 385, 386, 0, 0, 387, 0, 0, 0, 389,
	390, 391, 0, 0, 392, 393, 541, 0, 394, 0,
	542, 395, 396, 388, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 405, 406, 543, 544, 545, 407, 546,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 415,
	416, 417, 547, 419, 418, 420, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 425, 422, 426, 427,
	428, 429, 0, 430, 431, 432, 0, 433, 434, 435,
	436, 548, 437, 0, 438, 439, 445, 446, 440, 441,
	447, 448, 449, 450, 451, 0, 453, 454, 452, 455,
	456, 457, 0, 0, 442, 443, 459, 460, 0, 461,
	462, 549, 0, 463, 0, 464, 465, 466, 467, 444,
	468, 473, 550, 469, 470, 471, 472, 551, 0, 475,
	476, 0, 474, 0, 477, 478, 479, 480, 481, 482,
	309, 483, 0, 484, 552, 553, 554, 555, 0, 491,
	0, 485, 486, 556, 487, 557, 0, 488, 489, 490,
	0, 492, 493, 0, 0, 494, 495, 496, 498, 499,
	497, 500, 0, 501, 0, 0, 502, 503, 504, 558,
	559, 560, 235, 506, 505, 561, 0, 0, 0, 0,
	507, 508, 562, 509, 510, 511, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 0, 247, 248, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 249, 250,
	252, 251, 253, 254, 255, 513, 514, 0, 515, 256,
	516, 0, 257, 258, 259, 260, 261, 0, 0, 0,
	262, 517, 518, 519, 0, 263, 264, 520, 0, 0,
	0, 265, 266, 267, 268, 269, 270, 271, 0, 0,
	273, 274, 275, 272, 0, 276, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 285, 286, 0, 287, 521, 522,
	0, 291, 288, 289, 0, 292, 290, 0, 293, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 300,
	301, 0, 302, 303, 523, 304, 305, 306, 308, 310,
	307, 311, 312, 313, 314, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 526, 0, 0,
	0, 318, 0, 319, 0, 0, 0, 320, 321, 527,
	528, 322, 323, 0, 324, 529, 0, 530, 325, 0,
	326, 327, 328, 329, 330, 1361, 532, 533, 384, 0,
	331, 332, 0, 333, 334, 335, 336, 0, 0, 0,
	0, 337, 338, 340, 0, 0, 339, 534, 535, 0,
	536, 0, 341, 0, 537, 0, 342, 343, 344, 0,
	345, 0, 0, 0, 346, 347, 348, 349, 350, 0,
	352, 351, 0, 353, 538, 0, 354, 355, 0, 0,
	356, 357, 358, 0, 0, 359, 360, 361, 362, 0,
	363, 364, 366, 368, 365, 367, 372, 369, 370, 371,
	374, 0, 373, 0, 375, 376, 377, 380, 381, 379,
	0, 378, 0, 0, 0, 382, 0, 539, 383, 540,
	385, 386, 0, 0, 387, 0, 0, 0, 389, 390,
	391, 0, 0, 392, 393, 541, 0, 394, 0, 542,
	395, 396, 388, 397, 398, 399, 400, 401, 402, 403,
	404, 0, 405, 406, 543, 544, 545, 407, 546, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 415, 416,
	417, 547, 419, 418, 420, 0, 0, 0, 0, 0,
	0, 421, 0, 423, 424, 425, 422, 426, 427, 428,
	429, 0, 430, 431, 432, 0, 433, 434, 435, 436,
	548, 437, 0, 438, 439, 445, 446, 440, 441, 447,
	448, 449, 450, 451, 0, 453, 454, 452, 455, 456,
	457, 0, 458, 442, 443, 459, 460, 0, 461, 462,
	549, 0, 463, 0, 464, 465, 466, 467, 444, 468,
	473, 550, 469, 470, 471, 472, 551, 0, 475, 476,
	0, 474, 0, 477, 478, 479, 480, 481, 482, 309,
	483, 0, 484, 552, 553, 554, 555, 0, 491, 0,
	485, 486, 556, 487, 557, 0, 488, 489, 490, 0,
	492, 493, 0, 0, 494, 495, 496, 498, 499, 497,
	500, 0, 501, 0, 0, 502, 503, 504, 558, 559,
	560, 235, 506, 505, 561, 0, 0, 0, 0, 507,
	508, 562, 509, 510, 511, 0, 0, 0, 241, 242,
	243, 244, 245, 246, 0, 247, 248, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 249, 250, 252,
	251, 253, 254, 255, 513, 514, 0, 515, 256, 516,
	0, 257, 258, 259, 260, 261, 0, 0, 0, 262,
	517, 518, 519, 0, 263, 264, 520, 0, 0, 0,
	265, 266, 267, 268, 269, 270, 271, 0, 0, 273,
	274, 275, 272, 0, 276, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 285, 286, 0, 287, 521, 522, 0,
	291, 288, 289, 0, 292, 290, 0, 293, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 300, 301,
	0, 302, 303, 523, 304, 305, 306, 308, 310, 307,
	311, 312, 313, 314, 524, 525, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 526, 0, 0, 0,
	318, 0, 319, 0, 0, 0, 320, 321, 527, 528,
	322, 323, 0, 324, 529, 0, 530, 325, 0, 326,
	327, 328, 329, 330, 1301, 532, 533, 384, 0, 331,
	332, 0, 333, 334, 335, 336, 0, 0, 0, 0,
	337, 338, 340, 0, 0, 339, 534, 535, 0, 536,
	0, 341, 0, 537, 0, 342, 343, 344, 0, 345,
	0, 0, 0, 346, 347, 348, 349, 350, 0, 352,
	351, 0, 353, 538, 0, 354, 355, 0, 0, 356,
	357, 358, 0, 0, 359, 360, 361, 362, 0, 363,
	364, 366, 368, 365, 367, 372, 369, 370, 371, 374,
	0, 373, 0, 375, 376, 377, 380, 381, 379, 0,
	378, 0, 0, 0, 382, 0, 539, 383, 540, 385,
	386, 0, 0, 387, 0, 0, 0, 389, 390, 391,
	0, 0, 392, 393, 541, 0, 394, 0, 542, 395,
	396, 388, 397, 398, 399, 400, 401, 402, 403, 404,
	0, 405, 406, 543, 544, 545, 407, 546, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 415, 416, 417,
	547, 419, 418, 420, 0, 0, 0, 0, 0, 0,
	421, 0, 423, 424, 425, 422, 426, 427, 428, 429,
	0, 430, 431, 432, 0, 433, 434, 435, 436, 548,
	437, 0, 438, 439, 445, 446, 440, 441, 447, 448,
	449, 450, 451, 0, 453, 454, 452, 455, 456, 457,
	0, 458, 442, 443, 459, 460, 0, 461, 462, 549,
	0, 463, 0, 464, 465, 466, 467, 444, 468, 473,
	550, 469, 470, 471, 472, 551, 0, 475, 476, 0,
	474, 0, 477, 478, 479, 480, 481, 482, 309, 483,
	0, 484, 552, 553, 554, 555, 0, 491, 0, 485,
	486, 556, 487, 557, 0, 488, 489, 490, 0, 492,
	493, 0, 0, 494, 495, 496, 498, 499, 497, 500,
	0, 501, 0, 0, 502, 503, 504, 558, 559, 560,
	235, 506, 505, 561, 0, 0, 0, 0, 507, 508,
	562, 509, 510, 511, 0, 0, 0, 241, 242, 243,
	244, 245, 246, 0, 247, 248, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 249, 250, 252, 251,
	253, 254, 255, 513, 514, 0, 515, 256, 516, 0,
	257, 258, 259, 260, 261, 0, 0, 0, 262, 517,
	518, 519, 0, 263, 264, 520, 0, 0, 0, 265,
	266, 267, 268, 269, 270, 271, 0, 0, 273, 274,
	275, 272, 0, 276, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 285, 286, 0, 287, 521, 522, 0, 291,
	288, 289, 0, 292, 290, 0, 293, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 300, 301, 0,
	302, 303, 523, 304, 305, 306, 308, 310, 307, 311,
	312, 313, 314, 524, 525, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 526, 0, 0, 0, 318,
	0, 319, 0, 0, 0, 320, 321, 527, 528, 322,
	323, 0, 324, 529, 0, 530, 325, 0, 326, 327,
	328, 329, 330, 531, 532, 533, 384, 0, 331, 332,
	0, 333, 334, 335, 336, 0, 0, 0, 0, 337,
	338, 340, 0, 0, 339, 534, 535, 0, 536, 0,
	341, 0, 537, 0, 342, 343, 344, 0, 345, 0,
	0, 0, 346, 347, 348, 349, 350, 0, 352, 351,
	0, 353, 538, 0, 354, 355, 0, 0, 356, 357,
	358, 0, 0, 359, 360, 361, 362, 0, 363, 364,
	366, 368, 365, 367, 372, 369, 370, 371, 374, 0,
	373, 0, 375, 376, 377, 380, 381, 379, 0, 378,
	0, 0, 0, 382, 0, 539, 383, 540, 385, 386,
	0, 0, 387, 0, 0, 0, 389, 390, 391, 0,
	0, 392, 393, 541, 0, 394, 0, 542, 395, 396,
	388, 397, 398, 399, 400, 401, 402, 403, 404, 0,
	405, 406, 543, 544, 545, 407, 546, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 415, 416, 417, 547,
	1045, 418, 420, 0, 0, 0, 0, 0, 0, 421,
	0, 423, 424, 425, 422, 426, 427, 428, 429, 0,
	430, 431, 432, 0, 433, 434, 435, 436, 548, 437,
	0, 438, 439, 445, 446, 440, 441, 447, 448, 449,
	450, 451, 0, 453, 454, 452, 455, 456, 457, 0,
	458, 442, 443, 459, 460, 0, 461, 462, 549, 0,
	463, 0, 464, 465, 466, 467, 444, 468, 473, 550,
	469, 470, 471, 472, 551, 0, 475, 476, 0, 474,
	0, 477, 478, 479, 480, 481, 482, 309, 483, 0,
	484, 552, 553, 554, 555, 0, 491, 0, 485, 486,
	556, 487, 557, 0, 488, 489, 490, 0, 492, 493,
	0, 0, 494, 495, 496, 498, 499, 497, 500, 0,
	501, 0, 0, 502, 503, 504, 558, 559, 560, 235,
	506, 505, 561, 0, 0, 0, 0, 507, 508, 562,
	509, 510, 511, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 0, 247, 248, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 249, 250, 252, 251, 253,
	254, 255, 513, 514, 0, 515, 256, 516, 0, 257,
	258, 259, 260, 261, 0, 0, 0, 262, 517, 518,
	519, 0, 263, 264, 520, 0, 0, 0, 265, 266,
	267, 268, 269, 270, 271, 0, 0, 273, 274, 275,
	272, 0, 276, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 285, 286, 0, 287, 521, 522, 0, 291, 288,
	289, 0, 292, 290, 0, 293, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 300, 301, 0, 302,
	303, 523, 304, 305, 306, 308, 310, 307, 311, 312,
	313, 314, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 526, 0, 0, 0, 318, 0,
	319, 0, 0, 0, 320, 321, 527, 528, 322, 323,
	0, 324, 529, 0, 530, 0, 0, 326, 327, 328,
	329, 330, 531, 532, 533, 384, 0, 331, 332, 0,
	333, 334, 335, 336, 0, 0, 0, 0, 337, 338,
	340, 0, 0, 339, 534, 535, 0, 536, 0, 341,
	0, 537, 0, 342, 343, 344, 0, 345, 0, 0,
	0, 346, 347, 348, 349, 350, 0, 352, 351, 0,
	353, 538, 0, 354, 355, 0, 0, 356, 357, 358,
	0, 0, 359, 360, 361, 362, 0, 363, 364, 366,
	368, 365, 367, 372, 369, 370, 371, 374, 0, 373,
	0, 375, 376, 377, 380, 381, 379, 0, 378, 0,
	0, 0, 382, 0, 539, 383, 540, 385, 386, 0,
	0, 387, 0, 0, 0, 389, 390, 391, 0, 0,
	392, 393, 541, 0, 394, 0, 542, 395, 396, 388,
	397, 398, 0, 400, 401, 402, 403, 404, 0, 405,
	406, 543, 544, 545, 407, 546, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 0, 416, 417, 547, 419,
	418, 420, 0, 0, 0, 0, 0, 0, 421, 0,
	423, 424, 425, 422, 426, 427, 428, 429, 0, 430,
	431, 432, 0, 433, 434, 435, 436, 548, 0, 0,
	438, 439, 445, 446, 440, 441, 447, 448, 449, 450,
	451, 0, 453, 454, 452, 455, 456, 457, 0, 458,
	442, 443, 459, 460, 0, 461, 462, 549, 0, 463,
	0, 464, 465, 466, 467, 444, 468, 473, 550, 469,
	470, 471, 472, 551, 0, 475, 476, 0, 474, 0,
	477, 478, 479, 480, 481, 482, 309, 483, 0, 484,
	552, 553, 554, 555, 0, 491, 0, 485, 486, 556,
	487, 557, 0, 488, 489, 490, 0, 492, 493, 0,
	0, 494, 495, 496, 498, 499, 497, 500, 0, 501,
	0, 0, 502, 503, 504, 558, 559, 560, 0, 506,
	505, 561, 0, 0, 0, 0, 507, 508, 562, 509,
	510, 511, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1595, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 0, 0, 0, 0, 0,
	0, 1566, 0, 0, 0, 0, 1600, 1595, 0, 0,
	0, 1586, 0, 0, 1567, 0, 0, 0, 0, 1583,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1589, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 1614, 1589, 1590, 1591, 1592,
	0, 1594, 1596, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 1611, 0,
	0, 0, 0, 0, 0, 1581, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 0,
	0, 1602, 0, 0, 1594, 1596, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 1587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	1605, 0, 1600, 1595, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0, 1577,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 2750, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 1603, 1572, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 2206,
	0, 1604, 0, 0, 1614, 0, 0, 0, 0, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 0, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 1605,
	0, 0, 1600, 1595, 1594, 1596, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1587, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 3843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 1588, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 1605, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 3752, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 1605,
	0, 0, 1600, 1595, 1594, 1596, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1587, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 3751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 1588, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 1605, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 3606, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 1605,
	0, 0, 1600, 1595, 1594, 1596, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1587, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 3477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 1588, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 1605, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 3423, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 1605,
	0, 0, 1600, 1595, 1594, 1596, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1587, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 3422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 1588, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 1605, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 3421, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 1605,
	0, 0, 1600, 1595, 1594, 1596, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1587, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 3151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 1588, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 1605, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 2748, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 1604, 0, 0, 1614, 1605,
	0, 0, 1600, 1595, 1594, 1596, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 1613, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 1587, 0, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 2747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 1590, 1591, 1592, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 1614, 0, 0, 0, 1588, 0,
	1594, 1596, 0, 0, 0, 1564, 1565, 0, 1597, 1598,
	1599, 1607, 1608, 1609, 0, 1610, 0, 1611, 0, 0,
	0, 0, 0, 1605, 1581, 1582, 1600, 1595, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1602, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 1612, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 0, 0, 2746, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1589, 1590, 1591, 1592,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 1564, 1565, 1588, 1597, 1598, 1599, 1607, 1608,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1595, 1604, 0, 0, 1614, 1605,
	0, 1567, 0, 0, 1594, 1596, 0, 0, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	0, 1611, 0, 0, 0, 0, 0, 0, 1581, 1582,
	0, 1566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 1602, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 1578, 1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575,
	1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0,
	0, 2745, 0, 1589, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 0, 1572, 3969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1604, 0, 0, 1614, 0, 0, 0, 0,
	0, 1594, 1596, 0, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 1611, 0,
	0, 0, 0, 0, 0, 1581, 1582, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3968, 1603, 0, 0, 0, 1578, 1579, 1585, 1606, 1584,
	1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573,
	1574, 0, 0, 2712, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1588, 1564, 1565, 0, 1597,
	1598, 1599, 1607, 1608, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1600, 1595, 0,
	1605, 0, 0, 2683, 0, 1567, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 0, 1583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2684, 0, 0, 0, 1603, 0,
	0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0, 1577,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1589, 1590, 1591,
	1592, 0, 0, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 1564, 1565, 0, 1597, 1598, 1599, 1607, 1608,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1595, 0, 1604, 0, 0, 1614,
	0, 1567, 0, 0, 0, 1594, 1596, 0, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 1611, 0, 0, 0, 0, 0, 0, 1581,
	1582, 1566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 1602, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1589, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 0, 1572, 0, 2808, 0, 0, 2807, 1564,
	1565, 0, 1597, 1598, 1599, 1607, 1608, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	1600, 1595, 1604, 0, 0, 1614, 0, 0, 1567, 0,
	0, 1594, 1596, 0, 0, 1613, 0, 0, 0, 1588,
	0, 0, 0, 0, 0, 0, 1610, 0, 1611, 0,
	0, 0, 0, 0, 0, 1581, 1582, 0, 1566, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 1586, 0,
	0, 1602, 0, 0, 0, 0, 1583, 0, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 1590, 1591, 1592, 0, 0, 0, 0, 0, 0,
	1572, 0, 1603, 0, 0, 0, 1578, 1579, 1585, 1606,
	1584, 1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571,
	1573, 1574, 0, 0, 0, 1593, 0, 0, 0, 1604,
	0, 0, 1614, 0, 0, 0, 2326, 0, 1594, 1596,
	0, 0, 0, 1564, 1565, 1588, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 1610, 0, 1611, 0, 0, 0, 0,
	0, 0, 1581, 1582, 1600, 1595, 0, 0, 0, 2325,
	1605, 0, 1567, 0, 0, 0, 0, 0, 1602, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1587,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 1612, 0, 0, 0, 0, 0,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0, 1577,
	1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0, 0,
	0, 0, 1593, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	1564, 1565, 1588, 1597, 1598, 1599, 1607, 1608, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1600, 1595, 1604, 0, 0, 1614, 1605, 0, 1567,
	0, 0, 1594, 1596, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 1611,
	0, 0, 0, 0, 0, 0, 1581, 1582, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1586,
	0, 0, 1602, 0, 0, 0, 0, 1583, 0, 0,
	0, 0, 0, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 1603, 0, 0, 0, 1578,
	1579, 1585, 1606, 1584, 1580, 1601, 1577, 1575, 1576, 1568,
	1569, 1570, 1571, 1573, 1574, 0, 0, 0, 0, 0,
	0, 1589, 1590, 1591, 1592, 0, 0, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 1564, 1565, 0, 1597,
	1598, 1599, 1607, 1608, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 1600, 1595, 0,
	1604, 0, 0, 1614, 0, 1567, 0, 0, 0, 1594,
	1596, 0, 1613, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 1610, 0, 1611, 0, 0, 0,
	0, 0, 0, 1581, 1582, 1566, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 1586, 0, 0, 0, 1602,
	0, 0, 0, 1583, 0, 0, 0, 0, 0, 0,
	1587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1589, 1590, 1591,
	1592, 0, 0, 0, 0, 0, 0, 1572, 0, 1603,
	0, 0, 2814, 1578, 1579, 1585, 1606, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 0, 0, 1593, 0, 0, 1604, 0, 0, 1614,
	0, 0, 0, 0, 0, 1594, 1596, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	1610, 0, 1611, 0, 0, 0, 0, 0, 0, 1581,
	1582, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3132, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 0, 0,
	1578, 1579, 1585, 1606, 1584, 1580, 0, 1577, 1575, 1576,
	1568, 1569, 1570, 1571, 1573, 1574, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 1565, 1588,
	1597, 1598, 1599, 1607, 1608, 1609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1595,
	0, 0, 0, 2809, 1605, 0, 1567, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 1583, 0, 0, 1564, 1565, 0,
	1597, 1598, 1599, 1607, 1608, 1609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 1595,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 1603, 1613, 0, 0, 1578, 1579, 1585, 1606,
	1584, 1580, 0, 1577, 1575, 1576, 1568, 1569, 1570, 1571,
	1573, 1574, 0, 0, 0, 0, 1566, 0, 1589, 1590,
	1591, 1592, 0, 0, 0, 0, 1586, 0, 1572, 0,
	0, 0, 0, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	1614, 0, 0, 0, 0, 0, 1594, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 1611, 0, 0, 0, 0, 0, 0,
	1581, 1582, 0, 0, 0, 0, 0, 0, 1589, 1590,
	1591, 1592, 0, 0, 0, 0, 1602, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	1614, 0, 1612, 0, 0, 0, 1594, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 1610, 0, 1611, 0, 0, 0, 0, 0, 0,
	1581, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 2776,
	0, 0, 0, 1564, 1565, 0, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1595, 0, 0, 0, 2749,
	1593, 0, 1567, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 1605, 0, 0, 0, 0,
	1583, 0, 0, 1603, 0, 0, 0, 1578, 1579, 1585,
	1606, 1584, 1580, 0, 1577, 1575, 1576, 1568, 1569, 1570,
	1571, 1573, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 0, 0, 0, 1578, 1579, 1585,
	1606, 1584, 1580, 0, 1577, 1575, 1576, 1568, 1569, 1570,
	1571, 1573, 1574, 1604, 0, 0, 1614, 0, 0, 0,
	0, 0, 1594, 1596, 0, 0, 0, 1564, 1565, 0,
	1597, 1598, 1599, 1607, 1608, 1609, 0, 1610, 0, 1611,
	0, 0, 0, 0, 0, 0, 1581, 1582, 1600, 1595,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 1602, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 0, 1612, 0,
	0, 0, 0, 0, 1583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1564, 1565, 0, 1597, 1598, 1599, 1607,
	1608, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1595, 1593, 0, 1589, 1590,
	1591, 1592, 1567, 0, 0, 0, 0, 0, 1572, 1613,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 1604, 0, 0,
	1614, 1605, 1586, 0, 0, 0, 1594, 1596, 0, 0,
	1583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 1611, 0, 0, 0, 0, 0, 0,
	1581, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1589, 1590, 1591, 1592, 0, 0,
	0, 0, 1612, 0, 1572, 0, 0, 0, 0, 1603,
	0, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 1601,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 0, 0, 1604, 0, 0, 1614, 0, 0, 0,
	0, 0, 1594, 1596, 0, 0, 0, 1564, 1565, 0,
	1597, 1598, 1599, 1607, 1608, 1609, 0, 1610, 0, 1611,
	0, 0, 0, 0, 0, 0, 1581, 1582, 0, 1595,
	1593, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 1602, 1613, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 1586, 0, 1612, 0,
	0, 0, 0, 0, 1583, 0, 0, 0, 1564, 1565,
	0, 1597, 1598, 1599, 1607, 1608, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 1566, 1589, 1590,
	1591, 1592, 0, 0, 0, 0, 0, 1586, 1572, 0,
	0, 0, 0, 1603, 0, 1583, 1588, 1578, 1579, 1585,
	1606, 1584, 1580, 0, 1577, 1575, 1576, 1568, 1569, 1570,
	1571, 1573, 1574, 0, 0, 0, 0, 1604, 0, 0,
	1614, 1605, 0, 0, 0, 0, 1594, 1596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 1611, 0, 0, 0, 0, 0, 0,
	1581, 1582, 0, 0, 0, 0, 0, 0, 0, 1589,
	1590, 1591, 1592, 0, 0, 0, 1602, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 0,
	0, 1614, 1612, 0, 0, 0, 0, 1594, 1596, 1603,
	0, 0, 0, 1578, 1579, 1585, 1606, 1584, 1580, 0,
	1577, 1575, 1576, 1568, 1569, 1570, 1571, 1573, 1574, 0,
	0, 1581, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 1603, 0, 0, 0, 1578, 1579, 1585,
	1606, 1584, 1580, 0, 1577, 1575, 1576, 1568, 1569, 1570,
	1571, 1573, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 1578, 1579,
	1585, 1606, 1584, 1580, 0, 1577, 1575, 1576, 1568, 1569,
	1570, 1571, 1573, 1574,
}
var sqlPact = [...]int{

	6836, -1000, -1000, -1000, -1000, 260, -1000, -1000, 259, 258,
	254, 248, 247, 239, 236, 234, -1000, -1000, -1000, -1000,
	-1000, -1000, 230, -1000, -1000, 225, -1000, 224, 223, 221,
	-1000, -1000, 220, -1000, 217, -1000, -1000, -1000, -1000, 216,
	213, 209, 71361, 70896, 71820, 2059, 85698, 75504, 1798, 63939,
	85233, 63474, 84768, 84303, 208, -1000, 83838, 205, 204, 203,
	-1000, 83373, -1000, 1833, -1000, 202, 2065, 52753, 196, 187,
	186, 2592, 184, -1000, 182, 181, -1000, 9604, 1346, -1000,
	180, 178, -1000, 7607, 4425, 74580, 177, 176, 2221, 175,
	174, 52287, 172, 170, 2180, 2630, -1000, -1000, 1821, -1000,
	-1000, 168, 161, 159, 157, 153, 152, 146, 144, 143,
	-1000, 138, 136, 134, 131, 130, 127, 125, 112, -1000,
	111, 106, 105, 102, 100, 98, 96, 95, 90, 87,
	86, 81, -1000, 12630, 80, 1765, 1511, 1503, 1498, 1497,
	1484, 944, 78, 77, 75, 74, 70, 69, 68, 64,
	-1000, 60, 59, 58, 57, 56, 55, 52, 51, 150,
	50, 38, 31, 30, 29, 28, 2318, -1000, 1577, 969,
	24245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 91206, 86157, 26,
	-54, 25, -1000, 2954, 959, 43893, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 295, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 524, 1878, 756, -1000, -1000,
	-1000, 82914, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2058, -29, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 754,
	-1000, 2055, 249, 1955, -1000, -1000, -1000, -1000, -1000, 86157,
	-1000, -1000, 3318, 3315, 1852, 749, 82455, -1000, 1535, -1000,
	906, 27191, -1000, 1201, -1000, 27191, 294, -1000, -1000, -1000,
	-1000, -1000, -1000, 3312, 3306, 3296, 3294, -1000, -1000, 63009,
	18323, 62544, 62079, 81990, 17848, 70431, 69966, 58373, -1000, -1000,
	-1000, 1244, -1000, -1000, -1000, -1000, -1000, -1000, -3, 55998,
	3121, 86157, -1000, 293, -1000, -1000, -1000, -1000, -1000, -1000,
	37175, 674, 36674, 611, 36173, 604, -1000, -1000, -1000, 57898,
	-1000, 3293, 3292, 1050, 3290, 2888, 90747, 1636, 3287, 1702,
	1113, 972, 3286, 3283, 3282, 3281, 3280, 3279, 1322, 81525,
	2650, 81060, 1572, 57423, 69501, 71820, 2396, 80595, 1312, 1260,
	-1000, -1000, -1000, -1000, 2745, 2626, 2603, 49050, -1000, -1000,
	3278, 3277, 3276, 3275, 3274, 90288, 1624, 3273, 2263, 3264,
	3263, 3262, 3261, 3258, 3256, 3255, 3254, -1000, 69036, 68571,
	68106, 3008, 80130, 67641, 56948, 35672, 862, -1000, -1000, -1000,
	45767, 5416, 5050, 79665, 47193, 71820, 71820, -1000, -1000, -1000,
	-1000, -1000, 35171, 508, 34670, 803, -1000, -1000, 46247, 2582,
	-1000, -1000, -1000, -1000, 34169, 278, 33668, 790, 86157, -1000,
	2649, 1801, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1985, 1459, 3143, 56473, 1814, 1258, 2945,
	2742, 2733, 1392, 2269, 2725, 2724, 2723, 2710, 2689, 1593,
	2335, 243, 23744, 2636, 1595, 33167, 1496, 1391, 2688, 2678,
	3159, 1783, 1777, 1874, 61614, 3253, 3252, 2919, 2675, 2673,
	2578, -1000, -1000, -1000, -1000, 1365, -1000, -1000, -1000, -1000,
	-1000, 64857, -1000, -1000, 1155, -1000, -1000, 1155, -1000, -1000,
	-1000, -1000, -1000, 1235, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1993, -1000, 1848, -1000, -1000, 2279,
	2923, 2923, 2923, 2971, 491, 483, -1000, 150, -1000, -1000,
	97106, -1000, -1000, 37664, 37664, 37664, 37664, 37664, 37664, 37664,
	1883, -1000, 748, -1000, -1000, 819, -1000, 747, 613, -1000,
	-1000, -1000, -1000, -1000, -1000, 746, -1000, -1000, -1000, -1000,
	-1000, -1000, 3121, -1000, 20750, -1000, -1000, -1000, 460, 745,
	37664, -1000, -1000, 3182, 3181, 881, -1000, 286, 920, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2643, 744, 736, -1000, 733, 728, 727, 726, 725,
	-1000, -1000, -1000, 724, 721, 719, 718, 714, 713, 712,
	711, -1000, 1817, -1000, -1000, -1000, -1000, -1000, -1000, 665,
	664, 664, 664, -1000, 962, -1000, -1000, -1000, 470, 659,
	304, 656, 653, 651, 710, 708, 703, 693, 692, 689,
	686, 682, 681, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 961,
	-1000, -1000, -1000, -1000, -4, 86157, -1000, 524, -4, -1000,
	-1000, 680, -1000, 27680, 27680, 27680, -1000, -1000, 2045, 37664,
	-1000, 2212, -1000, 10, 10, 887, 44821, -1000, 42947, 887,
	244, 827, 48584, -1000, 2575, -1000, -1000, 677, 277, -1000,
	-1000, -1000, -1000, 18796, 2574, 86157, 86157, 71820, 71820, 71820,
	2824, 37664, -1000, -1000, 53212, 86157, 72279, 3077, 54130, 53212,
	86157, 2642, -1000, -1000, -1000, 86157, -1000, 37664, -1000, 3072,
	1461, 59309, 3007, -11, -1000, -1000, -1000, -1000, -1000, -1000,
	2220, 2239, 1130, 2072, 1697, -1000, 27191, 2880, -1000, -1000,
	-1000, 275, 18796, -1000, -1000, -1000, -1000, -1000, 1829, 2798,
	1339, -1000, 2071, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1660, 2797, -1000, 2029, 2796, 1655, -1000, -1000,
	1973, -1000, -1000, 2903, -1000, -1000, 1565, 2795, 11, -1000,
	-1000, 2276, -1000, -1000, 931, 2792, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46247, 55998, -8, -1000, -1000,
	-1000, -1000, -15, -1000, 17373, 97106, -1000, -1000, -1000, -1000,
	1704, 97106, 854, -1000, -1000, 2788, -1000, 97106, 852, -1000,
	-1000, 2783, -1000, 2641, -1000, -1000, -1000, -1000, 3251, -1000,
	3250, 2131, 3249, 3248, 3246, -1000, 1508, 1796, 3245, -1000,
	3244, -1000, -1000, -1000, -1000, -1000, -1000, 67176, 2035, -1000,
	-1000, 66246, -1000, 2130, -1000, -1000, 66711, 968, -1000, 931,
	2127, -1000, 948, -1000, 3242, 3005, 2438, 931, 2124, -1000,
	-1000, -1000, -1000, -1000, 50436, -1000, 50436, -1000, 50436, -1000,
	1446, -1000, 89829, 10, 10, 3121, -1000, -1000, -1000, -1000,
	-1000, 2782, 3240, 3239, 3235, -1000, 86157, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 195, 2777, -1000, -1000, 195,
	2775, -1000, 195, 2769, -1000, 74115, -1000, -1000, 1997, 2767,
	-1000, 193, 2766, -1000, -1000, -44, 2763, -1000, -1000, 97106,
	-1000, -1000, -1000, -22, -1000, -1000, -1000, 959, -1000, 45287,
	-1000, 45287, 79200, 58846, 922, 691, 51821, 97106, -1000, -1000,
	-1000, -1000, 97106, -1000, -1000, -1000, -41, -1000, -1000, 58846,
	46247, 97106, -1000, -1000, -1000, -1000, 97106, -1000, -1000, -1000,
	58846, 66246, -1000, 78735, 65787, -1000, -1000, 1317, 2289, -1000,
	-1000, -1000, 922, 58846, 58846, 58846, -1000, 78270, -1000, -1000,
	1844, 1550, 2912, 1826, 71820, -1000, 1764, -1000, -1000, -1000,
	2931, 2639, -1000, 53671, 73656, -1000, 73197, -1000, 72738, -1000,
	71820, -1000, 71820, -1000, 3234, 3225, 3220, -1000, 3218, 2925,
	97106, 2924, -1000, 3217, 2998, 2636, 97106, -1000, 2759, 1525,
	1521, 86157, -1000, -1000, 86157, -1000, 86157, -1000, -1000, -1000,
	1409, -1000, -1000, 2199, -1000, -1000, -1000, -1000, 71820, -1000,
	-1000, -1000, -1000, -1000, -1000, 2614, -1000, 1592, -1000, 1631,
	-1000, 1304, -1000, -1000, 197, -1000, -1000, -11, -1000, 89370,
	-1000, 2279, -1000, 86157, -1000, 2206, 2604, 2608, 1555, 2053,
	2300, -1000, 32666, 2257, 40109, 2070, 150, -1000, -1000, 150,
	150, 25223, -1000, -1000, 54130, 54130, 18796, 1250, 37664, 37664,
	37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664,
	37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664,
	37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664, 37664,
	37664, 37664, 37664, 2125, 37664, 1229, 37664, 37664, 37664, 37664,
	1974, -1000, -1000, 1747, 544, 1868, -1000, 3124, 3124, 3124,
	1047, 1047, 97416, 97416, 629, 3216, 819, -1000, 37664, -1000,
	122, 37664, 19271, -1000, 483, 8075, 2136, -1000, 481, 19772,
	-1000, -1000, -1000, 20750, 613, 32165, 37664, 953, 97106, -1000,
	-1000, 1275, 3144, 16900, 2661, 2488, 676, 787, 783, 23243,
	22742, 22241, 21740, 782, 37664, 37664, 37664, 37664, 37664, 37664,
	37664, 37664, -1000, -1000, 3150, -1000, 3144, -1000, -1000, -1000,
	-1000, 3144, 1223, 1143, 3144, -1000, 3144, 3144, 2506, 2506,
	31676, 31175, 30674, 40598, 30173, 37664, 21239, 29672, 29171, -1000,
	86157, -4, 3066, 37664, 227, -1000, 95862, -1000, 227, 227,
	673, -24, 97106, 2288, 2288, 44357, 2091, 1897, 1897, 1897,
	-1000, 887, 13087, 887, 77348, 1924, 887, 887, 273, 315,
	480, 42483, 2212, 77348, 795, 672, 22, 21, 20, -1000,
	-1000, 18, 17, -1000, -1000, 71820, 670, 19271, 18796, 269,
	1337, -31, 2378, 2374, 2372, -1000, 2357, 1619, -32, 1227,
	-78, -1000, 4540, -33, -1000, 1265, 268, 3144, -1000, -1000,
	-1000, -1000, -1000, 3214, 3213, -1000, 960, 668, 667, 299,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 665, 664,
	664, 664, -1000, 470, 659, 304, 656, 653, 651, -1000,
	-1000, -1000, -1000, 2572, -15, 72279, 892, -38, 1064, -11,
	-1000, -1000, -1000, 59309, 1155, -1000, 1899, -1000, -1000, -1000,
	-1000, -1000, -1000, 1308, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 881, -1000, -1000, -1000, -1000, -1000, -1000, 3139, 3130,
	-5, -1000, -1000, 18796, -1000, -12, 1641, 1587, -1000, 61149,
	2193, 2910, 2893, 1445, -1000, 1385, 2969, 64857, 3021, 3067,
	231, -1000, 2566, -1000, -1000, 903, 1564, 1576, 1226, 64857,
	2029, -1000, 54130, -1000, 2328, 2966, 1321, 1319, 1321, 1321,
	1310, -1000, 64857, 1563, 1224, -1000, 1222, -1000, -13, 3014,
	3029, 151, -1000, 2564, 1216, -1000, -1000, 71820, 18796, 1383,
	1416, 1556, 1214, -6, -1000, 3011, 3009, -1000, 1411, -1000,
	58846, 884, -8, 55998, 86157, 267, -1000, 122, 37664, 37664,
	122, 37664, 122, 2995, -1000, -1000, 2757, -1000, -1000, -1000,
	3212, 1731, 2240, -1000, -1000, -1000, 650, 2123, 2555, 86157,
	2361, -9, 71820, -1000, 2739, 2029, 2122, -1000, -1000, 65322,
	-1000, 2736, 637, 3211, -1000, 88911, -1000, 2916, 1291, 2735,
	998, 809, 3065, -1000, 809, 50895, -1000, 86157, -1000, -1000,
	86157, -1000, -1000, -1000, 3210, -1000, 71820, -1000, -1000, 71820,
	-1000, 71820, -1000, 71820, 192, 2730, -1000, -1000, 86157, -1000,
	71820, 71820, 58846, 58846, 4583, 60231, -43, -49, 478, -1000,
	77811, 86157, 997, 60690, 86157, 2866, 922, 46247, -1000, -57,
	-41, 922, 922, 884, -1000, 884, -1000, 71820, 2607, -1000,
	922, 922, 922, -1000, -1000, -1000, -1000, 3209, 3208, -1000,
	-1000, -1000, 930, 71820, 86157, 71820, -1000, -1000, 86157, -1000,
	86157, -1000, 930, 86157, 930, 86157, 930, 86157, -1000, -1000,
	-1000, -1000, -1000, -1000, 122, 37664, -1000, -1000, 3206, 1472,
	-1000, 2606, -1000, 2605, -1000, 47, -1000, -1000, -1000, -1000,
	-1000, 1662, 71820, 71820, 71820, 71820, 86157, 71820, -1000, 64857,
	-1000, 2206, 2604, -1000, -1000, -1000, -1000, -1000, -1000, 1507,
	1980, -1000, 2295, -1000, 1404, -1000, -1000, -1000, 97106, 41071,
	-1000, -1000, 97106, 1766, -1000, 39620, 39131, -1000, -1000, 1538,
	71820, 2389, -1000, 2389, -125, -1000, 95355, 2293, 71820, -1000,
	-1000, -1000, -1000, -1000, 902, 1194, 1194, 1219, 1219, 1219,
	1219, 3060, 4803, 417, 7001, 7468, 7468, 385, 385, 385,
	385, 385, 7468, 7078, 1047, 1047, 7078, 7078, 7078, 7078,
	7078, 1047, 1047, 1047, 7468, 7468, 7468, 97416, 97222, 10287,
	37664, 37664, 1212, 1708, 544, 8392, 37664, 9301, 9301, 9301,
	9301, -1000, 1998, -1000, -1000, -1000, -1000, 2554, 649, 40598,
	40598, -1000, -1000, -1000, -1000, 20261, 37664, -1000, -1000, -1000,
	-1000, 28670, -1000, -1000, 94844, -262, 476, -112, 83, -1000,
	37664, 37664, 37664, 475, -1000, 264, 37664, 86157, -1000, 92174,
	794, -141, -1000, -58, 1295, -1000, 37664, -1000, -1000, 1199,
	-1000, 1183, 1131, 1122, -1000, 638, 474, -1000, 262, -1000,
	1894, 636, 635, 37664, -1000, -1000, -1000, -1000, -1000, 94650,
	-1000, -1000, 94484, -1000, -1000, 94290, -1000, -1000, 94124, -1000,
	-1000, -1000, 96912, 92131, 12490, 12050, 5324, 11533, 11102, -60,
	473, -68, 472, 896, 895, 471, 468, 465, -69, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -75, 464, -1000,
	2552, -112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	463, -1000, 462, -1000, 96606, -112, 461, 6902, -1000, 40598,
	40598, 40598, -1000, 458, -1000, 95511, -1000, 96526, 28181, 28181,
	28181, 455, 96175, 37664, -112, -90, -1000, -91, -1000, -1000,
	520, -92, 943, 27680, 43427, 18796, -1000, 943, 943, 37664,
	-1000, 37664, 2330, -1000, -1000, -1000, 2317, 1730, 2288, 44357,
	-1000, -1000, -1000, -1000, 77348, -1000, 3121, 2416, -1000, 77348,
	-1000, -1000, 86157, 524, -1000, 77348, 77348, 18796, 887, -1000,
	887, 77348, 645, -1000, -1000, -1000, -1000, -1000, 451, 47656,
	83, 250, 18796, 922, -1000, 2359, 2359, 2359, 2359, -1000,
	-1000, 86157, 3102, -1000, 1825, -1000, 54130, -1000, 818, 1139,
	18796, -1000, -1000, -1000, 630, -1000, 3144, 3144, -1000, 3144,
	86157, 121, 27191, -1000, 1155, -1000, -1000, 1394, -1000, 1758,
	-1000, 1134, -1000, -1000, -1000, -1000, 27191, -1000, 2049, 86157,
	86157, 71820, -1000, 86157, -1000, 2118, 88452, 2114, 54130, 86157,
	-1000, -1000, 625, 621, 2291, 2287, 995, 86157, 86157, 2282,
	87993, 87534, 86157, 1800, 37664, 2060, 1812, 122, 122, -1000,
	-1000, 122, 620, 1202, 71820, 71820, 86157, 71820, 1623, -1000,
	-1000, -1000, -1000, -1000, 64398, -1000, -1000, 3149, 3147, -1000,
	1321, -1000, -1000, -1000, 1321, 2029, 1607, 86157, 71820, 86157,
	1835, 122, 122, -1000, -1000, 122, 619, 18796, 1753, -1000,
	2660, 86157, 3180, 86157, 86157, 86157, 55539, 2934, 87075, 86157,
	1411, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55076, 1007,
	931, 2443, -1000, -1000, 16427, -1000, 97106, 97106, -1000, 97106,
	-1000, 53212, 86157, -1000, 964, 86157, 60690, 917, 2718, 49977,
	-15, 922, 58846, 71820, -9, 86157, -1000, 2029, 2717, 524,
	2111, -1000, -1000, 58846, 618, 3205, 3204, -1000, 2033, 2110,
	-1000, -1000, 86616, 2809, 847, 86157, 943, 44357, 1807, -1000,
	48121, 980, 86157, 1669, 82, -1000, -1000, -1000, 33, 86157,
	-1000, 3203, -1000, -1000, 195, 195, 195, -1000, 71820, 71820,
	1997, -1000, 193, -1000, -44, -1000, -1000, 4583, 4583, 922,
	-126, 615, -1000, 876, 875, 46720, 58846, -98, -1000, -1000,
	-1000, -1000, -1000, 71820, 86157, 752, 2436, 86157, -99, -1000,
	232, 614, -1000, -1000, -1000, 922, 2546, -1000, -1000, 935,
	-1000, 1300, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7, -15, -15, -1000, 930, -1000, 930, -1000, 930,
	-1000, 97106, -1000, -1000, 1470, 1467, 86157, -1000, 18796, 86157,
	71820, 18796, 71820, 2598, 2596, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1017, -1000, 1766, 1979, -1000, 613, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2178, -1000,
	-10, 25223, 2075, -1000, -1000, 71820, 4, 37664, 37664, 6221,
	4332, 37664, 40598, 40598, -1000, 37664, 4222, -1000, -1000, -1000,
	-1000, -1000, 2537, 609, 37664, 54130, 6176, 5618, -1000, 448,
	10182, 7078, -1000, 37664, -1000, 446, 26702, -1000, 95668, -46,
	-100, -1000, 13573, -112, -106, -1000, -1000, 817, -1000, 2729,
	-1000, 37664, 96019, 2148, 1933, 1635, 1499, 3144, 3173, 15954,
	-1000, 51358, 945, 1931, 93930, -1000, -1000, -1000, -1000, 54130,
	54130, 37664, 37664, -1000, 37664, 37664, 37664, -1000, -1000, -1000,
	3144, 888, -1000, -1000, -1000, 888, -1000, -1000, 1321, -1000,
	1321, -1000, 37664, -1000, -1000, 2533, 37664, -1000, 54130, 54130,
	40598, 40598, 40598, 40598, 40598, 40598, 40598, 40598, 40598, 40598,
	40598, 40598, 40598, 40598, 40598, 40598, 40598, 40598, 40598, 2285,
	40598, 3120, 3120, 3120, -1000, 2590, 2533, 37664, 37664, 54130,
	445, 439, 438, -1000, 37664, -112, -1000, -1000, 4583, 602,
	-1000, 2155, -1000, 2486, -1000, 37664, -1000, -118, -1000, 2212,
	-1000, -1000, 2486, 2486, -116, 97106, 44357, 44357, -1000, 593,
	37664, 2310, -1000, -1000, 786, -263, -1000, 874, -1000, -1000,
	-1000, -1000, -1000, 524, -1000, -1000, -1000, 228, 77348, 77348,
	775, -1000, -127, -1000, -1000, -129, -1000, 3062, 424, 18796,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -15, 1944,
	3172, -1000, 3145, 812, 772, 194, 3144, 422, 405, 404,
	-15, 86157, -1000, -11, -1000, -1000, -1000, 37664, -1000, -1000,
	2908, 1115, 1106, -1000, -1000, 2716, -1000, 2109, -1000, 985,
	-1000, 1752, -1000, 37664, 37664, 591, 590, 3202, 1700, 3201,
	996, 2712, 1997, 2699, 1997, -1000, -1000, 911, -1000, 97106,
	583, 579, -1000, -12, 1614, 1552, 933, -1000, -1000, 37664,
	37664, 76889, -1000, 425, 2903, 3, -1000, -1000, 1544, 1100,
	-1000, -1000, -1000, -1000, 2029, 1541, 1097, -1000, -1000, -1000,
	-1000, 932, -1000, -1000, 37664, -1000, -13, 1083, 3010, 2101,
	71820, 1082, -1000, 1081, -1000, -1000, -1000, -1000, -1000, -1000,
	3006, 1997, 2698, 1088, -1000, -1000, -1000, 54603, -1000, 929,
	2531, -1000, 1080, 3200, 71820, 3199, 391, -130, -14, 54130,
	3061, 2031, 607, 71820, 891, -1000, 3121, -1000, -1000, -1000,
	-1000, 71820, 3059, 2697, 931, 3169, -1000, -1000, 71820, 2696,
	2027, 2100, 2230, 847, 59772, -1000, 931, 1930, -27, -1000,
	1669, 26201, 2901, -145, -1000, -1000, -1000, 943, 50895, 44357,
	37664, 3198, -151, -1000, -1000, -1000, -1000, -1000, 192, -1000,
	-1000, -1000, -1000, -1000, 75967, 75967, 58846, 58846, 58846, 922,
	86157, 86157, 60690, -1000, 578, 86157, 86157, 577, -1000, 86157,
	86157, 3197, 58846, -1000, 122, -1000, 1940, 71820, 15481, -1000,
	-1000, -1000, -1000, -1000, 930, -1000, -1000, 1846, 2067, 1846,
	1668, 1653, -1000, 1975, -1000, -1000, -1000, -1000, 2338, 2915,
	18796, 3004, 9301, 37664, 37664, 442, 1000, 408, 9301, 37664,
	37664, 54130, 97497, -152, 37664, 37664, -1000, 37664, 771, 97106,
	3167, 37664, 387, 386, -1000, -1000, -1000, 3142, -1000, -1000,
	-1000, 97106, 37664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	384, -1000, 123, -1000, -1000, -1000, 91665, -1000, 37664, 381,
	2965, -1000, 366, 365, 8942, 351, 93764, 93570, 93404, 364,
	-1000, -1000, 362, 356, 97106, 2590, 97106, -1000, -1000, 848,
	848, 1301, 1301, 1301, 1301, 3120, 318, 843, 507, 1026,
	1026, 1026, 706, 1054, 1054, 1026, 1026, 1026, 2517, 2228,
	576, 6340, -1000, -1000, 97106, 97106, 349, -1000, -1000, -1000,
	-112, 347, 4583, -1000, 2480, 2963, 97106, -1000, 44357, 2480,
	2480, -1000, -1000, 1730, 86157, 97106, 44357, -1000, 2416, -1000,
	14057, -1000, 18796, -1000, -1000, -1000, -1000, 3121, -1000, 47656,
	-1000, 575, -1000, 48, -1000, -1000, 766, 3196, 807, 18796,
	330, -1000, -1000, -1000, -15, 97106, 86157, 86157, 86157, 2695,
	-1000, 2996, -1000, 995, 93210, -153, -1000, 95355, 37664, 86157,
	-1000, -1000, 1709, 2266, 1037, -1000, 2933, 86157, -1000, 86157,
	-1000, -1000, 86157, 86157, 71820, 86157, 2682, -158, 97106, -16,
	-1000, 872, -1000, 1305, -1000, 15008, 86157, 71820, 86157, 71820,
	2676, -159, 18796, -1000, 3166, 3165, 2694, 2939, 3161, 86157,
	-1000, 86157, 71820, 2863, -1000, -1000, -1000, 2209, 58846, 46247,
	-1000, 524, -1000, 2422, -1000, 75039, 1984, 122, -1000, 76430,
	3194, 572, -1000, 1937, -1000, 758, 2029, 122, 71820, -1000,
	328, -19, -1000, 989, 18796, 71820, 2692, 2229, 847, 59772,
	-1000, 1291, 2300, -1000, -20, -1000, 542, 122, 1930, -1000,
	-27, 97106, -1000, 870, -1000, -1000, -160, -1000, -1000, 326,
	-1000, 2862, 2859, -1000, 2522, 37664, 568, 563, 86157, 2858,
	-1000, -1000, -161, -1000, 2250, -1000, -1000, -1000, -1000, -1000,
	18796, 1562, -1000, 562, 561, -1000, -1000, -1000, -1000, 2915,
	9301, 9301, 37664, 37664, 37664, 9301, 97497, -166, -1000, 9301,
	9301, -112, -1000, -1000, 95668, -1000, -1000, -1000, 97106, -1000,
	14535, 1851, -1000, 93044, -1000, 25223, -1000, -1000, 37664, 37664,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40598, 2514,
	557, 54130, -1000, -1000, 323, 939, 37664, 37664, 2212, 939,
	939, -1000, -167, -1000, -1000, -1000, 3121, 48, -1000, -1000,
	3193, 18796, 788, -1000, 3192, -1000, -1000, -1000, -1000, -1000,
	86157, -1000, 86157, -1000, 18796, 86157, 2498, 2089, -1000, -1000,
	2277, 553, 40598, 71820, 622, -1000, 3092, 2518, 1682, 37664,
	2075, -168, -169, 2085, -1000, -1000, 2082, 37664, -1000, 54130,
	552, 1997, 1997, -174, -177, -1000, -1000, 37664, 1078, 86157,
	25712, -1000, 3190, 2903, -1000, -1000, -1000, -1000, 37664, 1077,
	-1000, -1000, -1000, 3155, 1997, 18796, -1000, 1997, 1997, 2939,
	1033, -34, 551, -1000, 868, -1000, -1000, -44, 929, 3058,
	1835, 2450, -1000, -1000, -1000, -1000, 2274, -1000, -1000, 86157,
	2272, 925, -179, -1000, 867, 866, -1000, 60690, 917, 901,
	-1000, -1000, -1000, 524, -1000, 3154, 549, 86157, 2017, 546,
	18796, -1000, 847, 59772, -1000, 2809, 1669, -1000, 2819, 86157,
	2892, -1000, 2300, 544, -1000, 922, 543, 540, 2264, 2264,
	-180, 37664, 37664, -182, 539, 922, -45, -1000, 798, 792,
	-1000, -1000, 71820, 71820, 37664, 37664, -1000, 9301, 9301, 9301,
	-1000, 320, -1000, -1000, 1930, 2962, -1000, -59, 92850, 92684,
	4782, 40598, 54130, -185, -1000, -1000, 86157, 97106, -112, -1000,
	-1000, -1000, 646, -1000, 3188, -1000, -1000, 1724, -1000, -1000,
	-1000, 86157, 2095, -1000, 994, 37664, 6340, 536, 37664, -1000,
	3056, -1000, 2406, 2536, 2422, 535, -1000, -1000, -1000, -1000,
	-1000, 988, 1726, -1000, -1000, 97106, 2939, 37664, -1000, -1000,
	534, 533, 97106, 531, 845, 2509, -1000, -1000, -1000, 97106,
	530, 3010, -1000, -1000, -1000, -1000, 1997, 71820, 1917, 1917,
	58846, 1733, 122, 917, -1000, 1879, 1984, 529, -1000, -1000,
	1989, 2309, -1000, 76430, 42017, 42017, 314, 3054, 901, -1000,
	3133, -1000, 3050, -1000, 37664, -1000, 71820, 37664, 2008, 59772,
	-1000, 2230, -1000, 1190, -187, 86157, 1669, -1000, -1000, 58846,
	58846, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 988, -188, -190, -1000, 58846, -1000, 2250, -1000,
	86157, -1000, 86157, -1000, -1000, -195, -196, -1000, 1898, 37664,
	25223, -1000, -1000, 4782, -197, -1000, -88, -1000, 3031, -1000,
	-1000, -1000, -1000, 2691, 2474, 92490, 2164, 86157, 6142, -1000,
	2528, -1000, -1000, 1835, 86157, 2422, 2473, 71820, 991, -198,
	1846, 1846, 37664, 24734, 1865, 37664, -1000, -1000, 2939, -1000,
	-203, -1000, 2499, 2471, -1000, 1989, 71820, 86157, -1000, 2922,
	-1000, 2856, -1000, -1000, -1000, 2422, 122, -1000, -1000, 122,
	-204, 989, -205, 71820, -1000, 2229, 1433, -1000, 943, -1000,
	-1000, -206, -212, 1682, 988, 943, -214, -1000, -215, -220,
	-1000, -1000, 300, 38642, 38642, 38642, -112, -125, -1000, 86157,
	528, 2667, 928, -1000, 2001, 1711, 279, 1010, -1000, -1000,
	2518, -222, -1000, 927, 524, -1000, 37664, 988, -223, -1000,
	977, -228, -1000, 973, -229, -1000, 2507, -1000, -231, 1997,
	-1000, 926, 2987, -1000, -1000, -1000, -1000, -1000, 519, -234,
	-1000, -1000, 2140, -1000, 1835, 925, -1000, 988, 513, 1682,
	506, -1000, 50895, -1000, 922, 922, 2422, 1682, -1000, 922,
	-1000, -1000, -1000, 2727, -1000, 41544, 1964, 1647, 95001, 2727,
	2727, -1000, -1000, 86157, 2979, -1000, 2007, 2002, 1350, -1000,
	-1000, -1000, -1000, -1000, -1000, 943, -1000, 2978, 2164, 97106,
	2422, -1000, 1846, 2448, -1000, 1846, 2505, -1000, 1863, -1000,
	-1000, -1000, 2690, 3115, 86157, -1000, 86157, 1616, 1611, 3187,
	917, 1989, 1682, 37664, 2422, 37664, -221, -1000, -1000, 1835,
	2422, -1000, -1000, 1735, 3087, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 842, -1000, 2842, -1000, 1013, 1943, 1943,
	-1000, 841, 2001, -1000, -1000, 504, -1000, 494, -1000, 1594,
	-1000, -1000, -236, -1000, -1000, 3186, -1000, 1989, -1000, 2422,
	-237, 1835, -239, -1000, 943, 1835, 1637, -1000, -1000, 1910,
	38153, 37664, -1000, 3105, -1000, -1000, 2254, -1000, 37664, 2518,
	37664, 37664, 1935, 1983, -1000, -1000, 1835, 988, 943, 1682,
	-1000, 943, -1000, -1000, -1000, 97106, -1000, -1000, -1000, 97106,
	-1000, -242, -244, 49514, -1000, -1000, -1000, 943, 1682, -1000,
	2422, -1000, 1835, 1069, -126, 75967, -1000, 2422, 1835, -1000,
	493, -245, 1835, 943, 37664, -1000, 943, -1000, -247, -1000,
	1835, -1000,
}
var sqlPgo = [...]int{

	0, 3894, 3893, 3892, 3891, 3888, 3887, 3885, 3884, 3883,
	3882, 3881, 3878, 3875, 3874, 3868, 3864, 3863, 3861, 3859,
	3856, 3855, 3853, 3852, 3850, 3847, 3845, 3844, 3843, 3841,
	3840, 3838, 3837, 3832, 3830, 3826, 3825, 3823, 3822, 3821,
	3819, 3816, 3812, 3809, 3807, 3806, 3803, 3802, 3801, 3800,
	3799, 37, 3798, 3797, 3796, 3795, 3791, 3790, 3787, 3785,
	3782, 3779, 3778, 3774, 3772, 3770, 3767, 3766, 3765, 3763,
	39, 3762, 235, 3759, 3758, 3756, 3754, 3749, 3748, 3746,
	3745, 3744, 3736, 3734, 233, 3733, 127, 3732, 3730, 3728,
	3727, 3726, 231, 3719, 3717, 3714, 3712, 241, 3711, 3709,
	3707, 3706, 3704, 3702, 3698, 3697, 3694, 103, 211, 3691,
	187, 3690, 3689, 3688, 3687, 3686, 3685, 3684, 3679, 3673,
	3672, 213, 3671, 228, 3666, 3665, 3663, 3662, 3660, 3659,
	3656, 3654, 3652, 3650, 3648, 3647, 3645, 3642, 3641, 3640,
	3637, 3631, 3625, 3622, 3621, 3620, 3619, 3617, 3616, 3615,
	3609, 3608, 3605, 3604, 237, 148, 3603, 3602, 226, 225,
	3591, 3590, 3589, 3587, 3586, 99, 7, 81, 3581, 3580,
	65, 52, 45, 114, 49, 3578, 16, 203, 197, 6777,
	195, 3577, 3576, 3575, 201, 158, 3574, 194, 3573, 3570,
	3569, 3567, 73, 71, 142, 139, 134, 135, 26, 3566,
	3562, 80, 60, 43, 33, 3559, 3558, 3554, 3181, 101,
	3553, 222, 199, 132, 3551, 3550, 3549, 1141, 3548, 35,
	3547, 174, 66, 97, 53, 91, 3546, 116, 23, 3542,
	183, 41, 3540, 126, 77, 69, 7727, 2993, 3539, 94,
	51, 89, 390, 140, 137, 162, 147, 168, 167, 152,
	153, 3538, 214, 3533, 3046, 50, 130, 3532, 3530, 3529,
	62, 161, 84, 3528, 3527, 58, 8, 4, 1, 141,
	12, 90, 19, 3526, 15, 3525, 3524, 3520, 3510, 25,
	125, 3508, 243, 3507, 163, 38, 10, 3506, 30, 175,
	3503, 191, 100, 3500, 3499, 217, 166, 164, 3497, 79,
	193, 3496, 3495, 3494, 3493, 3491, 105, 24, 104, 3487,
	3486, 121, 198, 157, 3485, 47, 3484, 150, 78, 109,
	240, 98, 185, 85, 186, 143, 189, 3483, 3482, 3479,
	176, 3478, 3477, 182, 128, 3475, 3472, 172, 238, 34,
	55, 196, 59, 155, 136, 3471, 160, 3470, 3469, 3468,
	239, 151, 173, 2, 18, 75, 102, 29, 13, 192,
	122, 202, 93, 3467, 4367, 1376, 1333, 46, 3464, 110,
	95, 56, 96, 123, 223, 57, 3462, 3461, 1959, 3460,
	3459, 3457, 3456, 146, 3455, 3454, 3453, 113, 115, 169,
	3451, 76, 63, 11, 106, 275, 224, 83, 184, 170,
	219, 3450, 144, 3449, 48, 124, 3448, 159, 215, 3447,
	3446, 117, 3445, 131, 179, 44, 112, 3444, 181, 3443,
	3442, 3440, 3439, 3435, 3431, 3430, 156, 190, 3428, 3427,
	3426, 118, 154, 3425, 221, 178, 145, 74, 36, 3424,
	72, 1964, 3421, 70, 209, 42, 3417, 351, 40, 0,
	9181, 8430, 6269, 9383, 3415, 5512, 3414, 3412, 3407, 177,
	111, 3404, 3397, 3396, 87, 3392, 64, 3391, 3390, 54,
	3389, 20, 5, 6, 17, 22, 434, 88, 3388, 3386,
	86, 107, 119, 3385, 236, 188, 3378, 3375, 3374, 3373,
	82, 3372, 32, 3371, 28, 3368, 3367, 31, 14, 21,
	3365, 3364, 200, 3363, 210, 3360, 129, 3358, 3028, 108,
	3357, 3356, 220, 67, 3352, 218, 3351, 2999, 3350, 3348,
	9, 3347, 3346, 207, 138, 180, 3345, 3344, 3343, 133,
	3342, 3341, 3338, 216, 3336, 3334, 27, 3332, 3, 3329,
	3328, 165, 2844, 3327, 3326, 61, 3325, 149,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 8, 8, 8, 8, 38,
	38, 9, 9, 9, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 15, 15, 27, 27, 16,
	16, 29, 29, 17, 17, 30, 30, 512, 512, 20,
	32, 21, 33, 14, 513, 513, 513, 513, 26, 22,
	34, 24, 24, 24, 24, 24, 168, 168, 168, 168,
	19, 19, 28, 28, 195, 195, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 511, 511,
	197, 197, 196, 191, 191, 514, 514, 198, 198, 198,
	200, 200, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 415, 415, 415, 527, 527, 527, 528, 528, 529,
	529, 529, 529, 529, 40, 40, 506, 506, 170, 170,
	170, 172, 172, 171, 171, 171, 61, 61, 519, 519,
	520, 520, 518, 518, 521, 521, 521, 169, 169, 169,
	106, 106, 106, 107, 107, 108, 108, 173, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 88, 88, 447,
	447, 448, 448, 164, 164, 165, 165, 165, 165, 166,
	166, 167, 167, 167, 54, 42, 42, 42, 42, 42,
	42, 42, 43, 43, 43, 43, 43, 44, 44, 44,
	44, 44, 44, 45, 45, 45, 45, 45, 45, 52,
	52, 52, 52, 155, 155, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 531, 531, 532, 532, 533, 533,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 67, 67, 281,
	281, 253, 253, 68, 68, 68, 69, 69, 70, 70,
	56, 56, 504, 504, 296, 296, 406, 406, 72, 72,
	316, 316, 73, 73, 73, 73, 73, 73, 74, 74,
	74, 74, 74, 74, 74, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 81, 81, 81,
	82, 82, 82, 79, 79, 79, 77, 77, 77, 76,
	76, 76, 80, 80, 80, 245, 245, 78, 78, 78,
	297, 297, 83, 83, 83, 83, 254, 84, 84, 84,
	84, 84, 84, 84, 84, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 408, 408,
	85, 85, 85, 376, 376, 89, 89, 89, 331, 331,
	90, 90, 90, 90, 90, 91, 91, 91, 91, 109,
	109, 109, 109, 508, 508, 289, 289, 211, 211, 211,
	211, 99, 99, 99, 99, 100, 100, 100, 101, 101,
	160, 160, 115, 115, 115, 115, 115, 114, 114, 114,
	114, 114, 114, 46, 46, 46, 47, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 51, 51, 51, 117,
	117, 524, 524, 119, 116, 116, 116, 118, 118, 118,
	118, 120, 121, 121, 121, 121, 121, 121, 121, 121,
	122, 122, 440, 440, 305, 305, 438, 438, 456, 456,
	439, 439, 258, 258, 258, 258, 258, 259, 259, 259,
	446, 446, 446, 446, 446, 446, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 161, 161, 162, 163, 163, 163,
	163, 142, 142, 142, 154, 154, 154, 154, 154, 154,
	154, 145, 145, 145, 132, 132, 124, 124, 124, 124,
	124, 128, 128, 128, 128, 128, 128, 128, 128, 125,
	125, 134, 134, 134, 134, 134, 129, 129, 131, 131,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 126,
	126, 126, 126, 136, 136, 136, 136, 338, 338, 338,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	153, 153, 153, 153, 153, 153, 522, 522, 523, 523,
	149, 149, 149, 149, 149, 149, 390, 390, 143, 143,
	143, 143, 148, 148, 148, 148, 321, 321, 140, 140,
	140, 141, 141, 141, 146, 146, 147, 144, 144, 150,
	150, 150, 150, 127, 127, 127, 535, 535, 535, 151,
	151, 139, 139, 152, 152, 152, 152, 152, 152, 152,
	152, 138, 138, 138, 137, 137, 137, 137, 130, 505,
	505, 502, 502, 502, 502, 502, 502, 502, 502, 503,
	503, 507, 507, 94, 94, 94, 94, 94, 102, 102,
	102, 102, 102, 95, 95, 95, 95, 95, 97, 97,
	96, 96, 96, 96, 62, 62, 62, 63, 63, 176,
	176, 176, 176, 266, 266, 266, 266, 174, 174, 175,
	175, 64, 64, 536, 536, 536, 515, 515, 515, 516,
	516, 516, 516, 516, 516, 260, 260, 261, 261, 356,
	356, 356, 356, 356, 264, 264, 264, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 267, 267, 199, 199,
	199, 270, 271, 271, 268, 268, 269, 269, 269, 273,
	273, 272, 275, 275, 274, 355, 465, 465, 467, 467,
	467, 467, 467, 467, 467, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 537, 537, 463, 463,
	463, 464, 459, 459, 460, 460, 460, 460, 460, 262,
	262, 263, 263, 263, 263, 461, 462, 287, 287, 393,
	466, 466, 468, 468, 470, 538, 538, 538, 538, 538,
	538, 539, 539, 539, 354, 354, 353, 353, 279, 279,
	471, 471, 471, 471, 472, 472, 472, 472, 472, 475,
	474, 473, 473, 473, 473, 473, 66, 66, 66, 318,
	318, 317, 317, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 157, 157,
	214, 214, 60, 60, 60, 12, 12, 12, 517, 517,
	517, 65, 65, 65, 65, 213, 213, 213, 213, 213,
	213, 510, 510, 509, 509, 215, 215, 541, 541, 71,
	71, 71, 71, 71, 71, 71, 409, 409, 410, 410,
	59, 59, 59, 59, 59, 339, 339, 337, 337, 336,
	336, 286, 286, 392, 219, 219, 192, 192, 192, 25,
	18, 18, 23, 23, 36, 36, 39, 39, 35, 35,
	37, 37, 31, 31, 525, 525, 526, 526, 98, 98,
	103, 103, 103, 103, 103, 104, 104, 104, 104, 105,
	105, 105, 105, 113, 113, 156, 156, 156, 156, 156,
	156, 156, 41, 41, 41, 41, 53, 53, 53, 53,
	111, 543, 543, 543, 112, 112, 112, 542, 542, 212,
	212, 350, 350, 351, 351, 544, 544, 352, 352, 352,
	352, 206, 205, 207, 207, 58, 58, 58, 201, 201,
	202, 202, 203, 203, 204, 204, 545, 545, 92, 92,
	92, 159, 159, 252, 252, 252, 346, 346, 346, 280,
	280, 225, 225, 349, 349, 347, 347, 347, 347, 315,
	315, 315, 158, 158, 294, 294, 307, 307, 308, 308,
	403, 403, 309, 110, 110, 179, 179, 177, 177, 177,
	177, 177, 177, 177, 177, 184, 184, 185, 185, 186,
	186, 187, 188, 188, 188, 188, 298, 298, 189, 189,
	189, 178, 178, 178, 180, 180, 180, 180, 180, 180,
	180, 183, 183, 183, 183, 190, 190, 190, 182, 182,
	482, 482, 482, 484, 484, 486, 486, 485, 485, 481,
	481, 483, 483, 540, 540, 320, 320, 320, 277, 278,
	276, 276, 284, 284, 282, 283, 283, 285, 285, 391,
	391, 391, 193, 193, 193, 312, 312, 312, 312, 313,
	313, 342, 342, 340, 340, 340, 340, 341, 341, 343,
	343, 343, 344, 344, 345, 345, 311, 311, 372, 372,
	181, 181, 181, 291, 291, 291, 292, 292, 362, 362,
	362, 362, 362, 362, 363, 363, 361, 361, 361, 361,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 395,
	396, 396, 293, 293, 397, 348, 348, 500, 500, 500,
	501, 501, 389, 389, 398, 398, 398, 398, 398, 398,
	387, 387, 388, 388, 404, 405, 405, 324, 324, 324,
	324, 322, 322, 325, 325, 325, 325, 323, 323, 399,
	399, 399, 399, 314, 314, 400, 400, 400, 400, 401,
	357, 358, 358, 411, 411, 411, 411, 413, 290, 290,
	290, 290, 290, 458, 457, 457, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 427, 427, 427, 427, 427,
	427, 427, 427, 428, 428, 428, 428, 428, 428, 414,
	414, 414, 414, 414, 418, 418, 418, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 419, 419,
	424, 424, 425, 425, 425, 420, 421, 426, 426, 426,
	426, 546, 546, 430, 430, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 416, 416, 416, 423, 423, 423,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 332, 332, 334, 334, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 366, 366, 366, 366, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 476, 476, 476, 476, 476, 476, 476,
	476, 368, 368, 479, 479, 480, 480, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 487, 487, 488, 488,
	490, 490, 491, 491, 492, 493, 493, 493, 494, 495,
	495, 489, 489, 496, 496, 496, 496, 497, 497, 498,
	498, 498, 498, 498, 499, 499, 499, 499, 499, 378,
	378, 379, 379, 385, 385, 385, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 216, 216, 216, 216, 216, 303, 303, 301,
	301, 301, 304, 304, 302, 302, 300, 300, 299, 299,
	375, 375, 373, 373, 377, 377, 326, 326, 429, 429,
	429, 429, 429, 429, 429, 429, 327, 327, 327, 335,
	328, 328, 329, 329, 329, 329, 329, 369, 370, 330,
	330, 330, 371, 371, 380, 384, 384, 383, 382, 382,
	381, 381, 359, 359, 360, 360, 310, 310, 547, 547,
	306, 306, 402, 402, 402, 402, 256, 256, 295, 295,
	255, 255, 247, 247, 248, 248, 248, 248, 288, 288,
	386, 386, 431, 431, 432, 432, 433, 433, 434, 434,
	435, 436, 437, 374, 374, 235, 234, 222, 223, 233,
	232, 231, 221, 224, 228, 229, 230, 226, 227, 241,
	240, 239, 246, 237, 238, 407, 220, 249, 249, 250,
	250, 250, 251, 251, 251, 251, 217, 217, 218, 218,
	242, 242, 243, 244, 244, 236, 236, 236, 208, 208,
	208, 209, 209, 210, 210, 445, 445, 442, 442, 442,
	443, 443, 443, 444, 444, 444, 444, 441, 441, 441,
	441, 441, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 450, 450, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 452, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 455, 455,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 3, 1, 1, 1, 3, 4,
	6, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 10, 3, 6, 4, 3, 1, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 12, 3, 1, 0,
	1, 1, 2, 2, 3, 3, 0, 5, 7, 0,
	5, 6, 2, 1, 3, 1, 3, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 3, 3, 4, 3, 4, 7,
	4, 4, 4, 3, 5, 7, 4, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 11, 14, 0,
	2, 4, 3, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 1, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 9, 9, 3, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 1, 2, 8,
	4, 2, 5, 5, 5, 2, 1, 3, 10, 11,
	7, 5, 3, 1, 5, 9, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 5, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	16, 19, 15, 18, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 3, 2, 0, 1, 1, 0, 6,
	6, 8, 6, 8, 6, 8, 6, 8, 6, 8,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 2, 3, 2, 2, 8, 11, 3, 3, 0,
	3, 0, 3, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 8, 5, 3, 4, 3, 0, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 503, -86, -83, -54, -52, -89, -90,
	-73, -91, -85, -109, -113, -98, -115, -156, -161, -162,
	-163, -3, -40, -42, -55, -72, -74, -84, -93, -92,
	-94, -99, -106, -102, -88, -46, -110, -114, -123, -157,
	-158, -159, 31, 30, 90, 74, 137, 114, 121, 175,
	321, 356, 367, 348, -118, -119, 384, -41, -53, -112,
	-111, 67, 115, 343, -4, -12, 28, 44, -43, -44,
	-45, 57, -60, -57, -67, -61, -530, 92, -483, -75,
	-78, -105, -534, 126, 144, 193, -95, -96, 310, -100,
	-101, 350, -103, -104, 352, 145, -48, -47, 139, -177,
	-179, -116, -117, -160, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -153, -136, -137, -138,
	-139, -144, -140, -141, -142, -143, -145, -146, -148, -149,
	-150, -151, -152, 388, -147, 438, 46, 398, 76, 130,
	360, 21, -5, -6, -7, -8, -9, -10, -11, -13,
	-56, -58, -59, -62, -63, -64, -71, -65, -66, -482,
	-76, -77, -79, -81, -82, -80, 349, -180, -178, 500,
	452, -15, -20, -21, -16, -17, -19, -22, -18, -23,
	-27, -32, -33, -29, -30, -28, -31, -34, -35, -36,
	-37, -38, -39, -25, -26, -14, -24, 470, 478, -183,
	-181, -182, -190, 376, 460, 414, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, -254, 2, -237, -242, -243,
	-244, -236, -208, -452, -455, 4, -449, -453, 150, 202,
	275, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 42, 44, 45, 46, 51, 54, 55, 56,
	57, 58, 62, 67, 68, 73, 74, 75, 76, 77,
	78, 79, 85, 82, 83, 84, 87, 89, 90, 91,
	93, 95, 96, 104, 105, 106, 107, 109, 114, 115,
	118, 113, 117, 120, 121, 124, 125, 126, 128, 129,
	131, 132, 134, 135, 137, 138, 139, 142, 140, 421,
	141, 143, 144, 145, 146, 156, 157, 158, 163, 165,
	169, 170, 173, 174, 176, 180, 182, 183, 184, 185,
	186, 192, 193, 195, 196, 197, 198, 203, 204, 208,
	205, 214, 218, 219, 220, 222, 226, 227, 228, 229,
	230, 233, 232, 235, 238, 239, 242, 243, 244, 247,
	248, 249, 250, 252, 253, 256, 254, 257, 255, 259,
	260, 261, 258, 264, 262, 266, 267, 268, 273, 271,
	269, 270, 277, 280, 190, 282, 283, 286, 304, 290,
	291, 292, 295, 296, 299, 302, 303, 305, 306, 307,
	308, 309, 310, 311, 312, 314, 315, 319, 321, 322,
	324, 326, 327, 328, 329, 330, 331, 332, 335, 334,
	336, 343, 348, 345, 346, 347, 349, 350, 351, 352,
	354, 355, 356, 358, 359, 360, 361, 363, 365, 366,
	369, 370, 385, 386, 400, 367, 368, 371, 372, 373,
	374, 375, 379, 377, 378, 380, 381, 382, 384, 387,
	388, 390, 391, 394, 396, 397, 398, 399, 401, 404,
	405, 406, 407, 402, 413, 410, 411, 415, 416, 417,
	418, 419, 420, 422, 424, 432, 433, 435, 438, 439,
	440, 430, 442, 443, 446, 447, 448, 451, 449, 450,
	452, 454, 457, 458, 459, 465, 464, 471, 472, 474,
	475, 476, 35, 47, 48, 50, 52, 63, 64, 65,
	69, 110, 111, 136, 147, 148, 159, 171, 172, 177,
	179, 187, 188, 189, 209, 210, 212, 216, 236, 279,
	281, 297, 301, 316, 317, 318, 320, 333, 362, 392,
	403, 408, 425, 426, 427, 428, 434, 436, 460, 461,
	462, 466, 473, -254, 2, -237, 288, -230, 2, -208,
	-208, 321, 27, 2, 27, 315, 378, 416, 418, 2,
	-508, -289, 2, 27, -211, -208, 92, 175, 376, -230,
	2, -508, -289, 24, 2, -208, 2, -212, 2, 367,
	-208, 503, 87, 244, 68, 362, 381, -121, 433, -120,
	425, 371, -122, -440, 2, 264, -208, 503, 503, 503,
	27, -220, -208, 414, 202, 106, 411, 503, 2, 414,
	307, 464, 377, 106, 330, 202, 440, -517, 358, 178,
	453, -506, 2, -502, 4, -453, -449, -248, -247, 414,
	419, 106, -244, -236, 493, -243, 503, 503, 503, 2,
	219, 220, 329, 328, 381, 382, 503, 503, 503, 369,
	2, 26, 60, 86, 89, 112, 146, 166, 169, 293,
	-531, 253, 304, 327, 380, 413, 422, 435, -516, 399,
	62, 371, -515, -517, 440, 124, -336, 106, 244, 174,
	447, 418, 416, 445, 118, 208, 450, 449, 503, 503,
	26, 60, 71, 89, 124, 146, 166, 169, -533, 304,
	327, 365, 371, 380, 413, 422, 435, 2, 464, 377,
	414, 202, 106, 440, -517, 369, 370, 325, -86, 2,
	500, 31, 30, 384, -173, 414, 213, 2, -208, 503,
	503, 2, 219, 220, 369, 370, 503, 503, 167, -502,
	2, 503, 503, 2, 219, 220, 369, 370, 213, 2,
	62, 373, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 2, -154, 381, 399, 184, 44, 68, 27, 326,
	73, 308, 107, 176, 202, 203, 227, 86, 87, -338,
	43, 220, 219, 370, -522, 369, -390, 415, 372, 378,
	410, 230, 367, 433, 92, 454, 359, 476, 330, 331,
	140, 4, 106, 264, 383, 425, 244, 366, 311, 78,
	503, -540, 2, 414, -542, 2, 433, 433, 2, -542,
	2, -542, 2, -542, 2, -543, 433, 473, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, -178, -180, -179, 503, 503, 503,
	503, 503, 503, -154, 381, 2, 68, 27, -282, -284,
	444, 211, 133, 294, -177, -179, 2, -482, -438, 2,
	-364, -456, -366, 491, 492, 484, 412, 61, 274, 477,
	-378, 112, 445, 288, -455, -367, -380, 136, 362, -304,
	8, 9, 5, 6, 7, -217, -368, -374, 437, 149,
	278, -251, 504, 10, 500, -479, -179, -379, 36, 179,
	59, -442, -250, -218, -414, 212, -249, -236, -476, -477,
	4, -449, -450, -443, -417, -425, -421, -422, -428, -208,
	-452, 71, 98, 99, 97, 102, 101, 246, 245, 103,
	100, 383, 453, 60, 35, 187, 188, 216, 279, 189,
	69, -478, 125, -451, 209, 210, 392, 48, 333, 159,
	111, 110, 281, 52, 50, 461, -426, 108, 425, 426,
	427, 428, 171, 172, 147, 148, 301, 318, 408, 434,
	436, 177, 236, 94, 168, 207, 191, 215, 217, 221,
	237, 240, 265, 272, 276, 298, 300, 357, 389, -546,
	462, 403, 63, 64, -484, 334, -485, -230, -484, 503,
	503, 505, 503, -276, -277, -278, 2, 27, 122, 500,
	2, -394, 2, -395, -399, -179, 231, -398, 500, -396,
	498, -237, 289, -480, 363, -476, -477, -217, -236, -250,
	4, -449, -451, 502, -279, 500, 106, 414, 72, 202,
	-331, 500, -208, 27, 288, 429, 505, -376, 500, 288,
	167, 291, -208, 2, 2, 385, 2, 500, -121, 65,
	433, 42, 381, -351, 2, -352, -205, -206, -207, -404,
	218, 324, 332, 479, 476, -438, -524, 167, 483, 429,
	-438, -305, 502, 2, 2, 2, 2, 2, -399, 187,
	-237, 2, -234, -441, 4, -449, -453, -450, -454, -452,
	27, 30, 31, 32, 34, 36, 37, 38, 39, 53,
	59, 60, 66, 70, 72, 81, 86, 92, 97, 98,
	100, 99, 101, 102, 103, 112, 116, 119, 122, 123,
	127, 130, 133, 149, 151, 164, 166, 167, 175, 178,
	181, 194, 206, 211, 213, 231, 234, 241, 245, 246,
	274, 278, 284, 288, 289, 293, 294, 313, 323, 337,
	353, 376, 383, 395, 409, 414, 423, 429, 431, 437,
	444, 445, 453, 455, 463, 467, 468, 469, 470, -455,
	71, 2, -399, 187, 2, -239, 187, -399, -242, 2,
	-221, -208, 2, -233, -441, 2, -255, 187, -237, -238,
	-242, -240, 2, -242, -447, 187, 2, -445, 10, -444,
	5, 4, -449, -453, -450, 429, 505, -295, -247, -248,
	-437, 8, -288, -208, 502, -364, 2, -110, -97, 2,
	164, -364, 187, 2, -110, 187, 2, -364, 187, 2,
	-110, 187, 2, -519, 2, -447, 2, 2, 435, 2,
	89, 187, -208, 414, 105, 2, 347, -532, 365, 439,
	464, 2, 2, 2, 2, 2, 2, 414, -226, 2,
	-208, 164, -246, 187, 2, -208, 377, -541, 334, -447,
	187, 2, -240, 2, -240, 202, 214, -221, 187, 2,
	418, 416, 418, 416, 167, 2, 213, 2, 213, 2,
	-400, 2, -401, -395, -237, 498, 2, 2, 2, 2,
	2, 187, -208, 414, 105, 2, 229, 2, 2, 2,
	2, 2, 2, 2, 2, -297, 187, 2, -237, -297,
	187, 2, -297, 187, 2, -337, 2, 81, -221, 187,
	2, -245, 187, 2, -240, -448, 187, 2, -447, -364,
	2, -110, 2, -408, 2, -407, -444, 460, -86, 500,
	-86, 500, 381, 500, -447, -237, -237, -364, 2, -110,
	-97, 2, -364, 2, -110, 2, -108, -107, -447, 500,
	167, -364, 2, -110, -97, 2, -364, 2, -110, 2,
	-173, 164, 2, 106, 414, -154, 2, 164, 455, 2,
	8, 2, -447, 372, 331, 156, 2, 385, 2, 386,
	68, -338, 476, 68, 167, 2, 167, 2, -321, 2,
	470, -505, 2, 288, 167, 2, 167, 2, 167, 2,
	167, 2, 167, 2, 328, 382, 220, 2, -110, 467,
	-364, 467, 2, -523, 164, 370, -364, 2, 432, 228,
	141, 167, -321, 2, 167, 2, 167, 2, 5, 2,
	329, 400, 2, 218, 324, 400, 2, -237, -535, 2,
	414, 464, 377, 2, 2, 82, 83, 167, 2, 167,
	2, 167, 476, 2, -314, -399, -350, -351, -350, 429,
	-282, -284, -154, 385, 2, -184, -312, -186, 164, -340,
	-341, -187, 241, 151, 284, -188, -320, 27, 122, -320,
	-320, 55, 501, 501, 11, 12, 70, 40, 491, 492,
	493, 494, 162, 495, 496, 489, 490, 488, 481, 482,
	486, 224, 225, 88, 485, 483, 80, 251, 364, 152,
	153, 154, 155, 344, 200, 33, 201, 14, 15, 16,
	32, 293, 240, 477, 191, 389, 484, 17, 18, 19,
	215, 217, 276, 47, 194, -216, -257, -364, -364, -364,
	-364, -364, -364, -364, 300, 500, -310, -359, 498, -179,
	500, 500, 500, -437, -179, -364, -378, 501, -302, 500,
	-179, -378, -373, 500, 362, 498, 500, -381, -364, 5,
	5, 5, 500, 502, -487, 471, 164, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 320, -419, 500, -418, 500, -418, -418, 465,
	-416, 500, 478, 472, 500, -416, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 465,
	505, -484, -279, 500, -306, -402, -364, 493, -306, -306,
	288, -299, -364, 94, -324, 221, 265, 168, 237, 357,
	207, -361, 504, -361, -389, 478, -179, -396, -236, -179,
	-398, 500, -394, -389, -87, -437, -72, -84, -92, -110,
	-123, -158, -159, 493, -237, 500, 167, 500, 502, -441,
	167, -288, -221, -237, -249, -250, -255, 121, -299, -502,
	-288, -211, 37, -375, -411, -412, -458, 504, -457, -414,
	-424, -420, -423, 316, 317, -443, 50, 461, -426, 212,
	4, -449, -451, 209, 210, 392, 48, 333, 159, 111,
	110, 281, 52, 425, 426, 427, 428, 171, 172, 462,
	403, 63, 64, -502, -288, 164, -440, -299, 37, -351,
	2, 112, -445, 42, -544, 505, 239, -259, 250, 273,
	183, 289, 474, 282, -446, 5, 4, -374, -386, 112,
	244, 212, -431, -433, 8, -432, 9, -434, 491, 492,
	-439, -438, 96, 502, -441, -195, 345, 384, -194, 23,
	28, 126, 458, 142, -269, 204, 307, 136, 396, 448,
	-512, -513, 368, 420, 421, 84, 282, 384, 345, 136,
	-317, -319, 37, 104, 268, 302, 56, 197, 255, 256,
	398, 466, 136, 384, 345, -513, 345, -513, -197, 396,
	448, -512, -513, 368, 345, -196, -269, 136, 504, 23,
	345, 384, 303, -528, -529, 126, 28, -509, -481, 470,
	136, -107, -295, 505, 505, -441, 493, 370, 369, 136,
	136, 136, 136, 164, 2, 2, 274, 2, 2, 2,
	169, -515, -533, 2, 2, 2, -237, 187, -281, 288,
	-504, -296, 414, -237, 274, -239, 187, 2, -242, 464,
	-509, 274, 37, 500, 2, -337, 2, 202, -481, 274,
	-400, -252, -237, -395, -252, 384, -230, 37, -361, -361,
	136, 2, 2, 2, -208, -198, 505, 58, 351, 136,
	-198, 136, -198, 136, -256, 187, -255, -198, 136, -198,
	505, 136, 505, 136, 501, 505, -408, -408, -447, -167,
	470, 167, 92, 500, 500, -173, -405, 505, -404, -448,
	-108, -447, -504, -221, 2, -237, 2, 414, 222, -167,
	-447, -447, -447, -440, 27, 386, 2, 328, 382, 83,
	386, 2, -237, 414, 106, 202, 74, -507, 164, -503,
	358, -502, -237, 106, -237, 106, -237, 106, -237, -237,
	2, 2, 2, 2, 79, 79, 2, 44, -523, 164,
	2, 432, 2, 432, 2, -208, -208, -208, 399, 239,
	-237, 164, 414, 202, 414, 202, 106, 414, -198, 505,
	-212, -184, -312, -440, -313, -312, -185, -184, -187, 164,
	332, 449, 268, 387, 226, -341, -340, 27, -364, -345,
	158, 267, -364, -343, -366, 491, 492, -432, -434, -298,
	282, -178, -178, -178, -285, -391, -364, 323, 202, -413,
	-411, -411, -235, -441, 425, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	240, 191, 389, 47, 194, -364, 429, -364, -364, -364,
	-364, 262, 274, 278, 437, 149, 446, 122, 282, -547,
	409, 39, -371, -179, -303, 500, -385, 34, 395, 27,
	-378, 500, 2, -359, -364, -360, -300, -299, -299, 501,
	463, 27, 122, 493, 2, 501, 505, 37, 501, -364,
	-300, -377, -373, -299, -384, -383, 467, -332, -333, 475,
	258, 109, 185, 257, -334, 375, -435, 8, -441, 493,
	-488, 157, 178, 500, 501, 2, 501, 2, 501, -364,
	2, 501, -364, 2, 501, -364, 2, 501, -364, 2,
	501, 2, -364, -364, -364, -364, -364, -364, -364, -299,
	8, -435, -435, 425, 425, -435, -435, -435, -427, 316,
	242, 317, 173, 261, 259, 260, 172, -427, -326, 2,
	-429, -299, 4, 475, 258, 109, 185, 257, 375, 5,
	-326, 2, -327, 2, -364, -299, -328, -365, -366, 491,
	492, 484, -378, -329, 2, -364, -300, -364, 53, 234,
	431, -330, -364, 167, -299, -299, 2, -299, 2, -485,
	37, -299, -291, 505, 167, 37, 4, -291, -291, 500,
	501, 505, -325, 182, 254, 249, -325, -394, -324, 221,
	-322, 298, -322, -322, -389, -222, 498, 506, -441, -389,
	-388, -387, 37, -230, 295, -389, -389, 502, 501, -388,
	499, -500, 500, 503, 503, 503, 503, 503, -237, 500,
	-299, -441, 502, 401, 501, 215, 215, 215, 215, 363,
	501, 429, 470, -86, 290, 501, 505, -290, 36, 498,
	502, -435, 2, 2, -430, 465, 500, 500, -333, 500,
	167, -289, -524, 501, 433, -352, -258, 332, 394, 346,
	379, 411, 8, 9, 8, 9, 505, -441, 505, -525,
	86, 429, 72, 371, -355, 187, 72, -459, -224, 86,
	-460, -208, 66, 445, 323, 166, 134, -525, 86, 323,
	-525, 86, 86, 384, 399, 55, -399, 40, 40, 27,
	-110, 235, 167, 476, 414, 202, 371, 429, -399, -319,
	-411, 104, 255, 256, 55, -436, -431, 491, 492, -436,
	55, -436, -436, -436, 470, -239, -399, 371, 429, 429,
	505, 40, 40, 27, -110, 235, 167, 429, -255, -222,
	459, 41, 459, 429, 41, 371, 429, 505, 41, 41,
	-510, -213, 93, 269, 248, 270, -214, -215, 309, 457,
	-447, -405, -247, -208, 502, -110, -364, -364, -110, -364,
	-110, 44, 136, 2, -541, 229, 500, -262, 274, 167,
	-288, -406, 213, 505, -296, 136, -318, -317, 274, -241,
	187, 2, -237, 136, 131, 500, 330, 2, -223, 187,
	-209, -208, -337, -201, 417, 136, -316, 455, -346, -110,
	500, 112, 37, -346, -307, -308, -403, -309, -224, 500,
	-230, -208, 2, -237, -297, -297, -297, -198, 505, 136,
	-221, -240, -245, -447, -448, -86, -407, 501, 501, 501,
	-166, 292, -165, -208, 5, -173, 455, -261, -356, -355,
	-463, -464, -459, 240, 202, 445, 214, 150, -280, -225,
	-224, 105, -167, -107, 501, -405, -167, -167, -405, -405,
	-237, 164, -167, -167, -167, 2, 2, -321, -237, -221,
	-255, -237, -288, -288, -321, -221, -321, -221, -321, -221,
	-110, -364, 2, 381, 164, 164, 502, -321, 330, 106,
	414, 307, 202, -237, -255, -237, -255, -221, -237, -399,
	-313, -185, 289, 226, 387, -343, -344, -366, 362, 363,
	-344, 362, 363, 8, 9, 8, 9, -189, 391, 277,
	-297, 505, -192, 38, 119, 226, -237, 476, 132, -364,
	-364, 429, -547, 409, -371, 132, -364, 262, 278, 437,
	149, 446, 122, 282, 167, 500, -365, -365, 501, -301,
	-364, -364, 499, 508, 501, -284, 505, -282, -364, -299,
	-299, 501, 502, -299, -288, 499, 499, 505, 501, -382,
	-383, 127, -364, 429, 429, 429, 429, 500, 501, 502,
	-493, 299, 500, 500, -364, 501, 501, 501, 501, 37,
	505, 505, 505, 501, 505, 505, 505, 501, 501, 501,
	505, 501, 476, 476, 501, 501, 501, 501, 505, 501,
	505, 501, 167, 501, 501, -335, 313, 501, 11, 12,
	491, 492, 493, 494, 162, 495, 496, 489, 490, 488,
	481, 482, 483, 80, 251, 364, 14, 15, 16, 215,
	194, -365, -365, -365, 501, -369, -370, 167, 164, 37,
	-330, -330, -330, 501, 167, -299, 501, 501, 500, -486,
	253, 274, 501, -358, -357, 468, -402, -292, 2, -394,
	-232, -441, -358, -358, -299, -364, 221, 221, -323, 455,
	288, -325, -394, -388, -437, -363, -362, 165, 38, 119,
	271, 190, -388, -230, -279, -388, -388, -441, -389, -389,
	-387, 501, -501, -437, 501, -293, -397, -480, -284, 502,
	-441, -167, -155, 5, 278, -155, -155, -155, -288, 24,
	314, -411, 498, 499, 8, -441, 500, -435, -435, -435,
	-288, 167, -438, -351, 443, 77, 332, 425, -438, -194,
	345, -224, -224, -237, -246, 274, -355, 187, -200, 274,
	-411, -231, -208, 500, 500, 226, 226, 455, -224, -231,
	226, 187, -224, 187, -231, -231, -511, 332, 283, -364,
	243, 330, 275, -195, 345, 384, -110, -110, -110, 500,
	-524, 455, 121, -237, -255, -237, -246, -241, 384, 345,
	272, -249, -436, -436, -317, 384, 345, -246, -239, -221,
	-196, -110, -110, -110, 500, -222, -197, 345, 5, 187,
	-224, 5, -208, -224, -246, -527, -445, 103, 383, -529,
	23, -224, 187, -224, -213, -447, 278, 451, -509, -164,
	198, 493, -506, -208, 464, -208, -260, -263, -261, -224,
	-176, 472, 470, 136, -253, -237, 498, -167, -447, -237,
	-246, 136, -279, 274, -447, 500, 2, 2, 288, 274,
	-223, 187, -202, 128, -545, 483, -221, -358, -292, -315,
	-349, 353, 288, -280, 460, -230, -315, -294, 505, 167,
	483, 502, -280, 2, -198, -198, -198, -255, -256, -198,
	-198, -86, -86, -167, 505, 500, 483, 483, 500, -447,
	-447, 501, 505, -237, -223, 202, 202, -229, -209, 501,
	505, 502, 500, -167, 167, -49, 470, 414, 504, -321,
	-321, -321, 381, 381, -208, -233, -221, -237, -234, -255,
	164, 164, 449, -344, 289, 247, -391, -193, 280, -237,
	504, -364, -364, 132, 132, -364, -365, -365, -364, 132,
	167, 500, -364, -375, 32, 32, 501, 505, -360, -364,
	501, 463, -284, -284, 501, 493, -441, 504, 501, -373,
	130, -364, 423, 258, 185, 257, -334, 257, -334, -334,
	-435, 5, -441, 493, -494, -227, 500, -208, 468, -283,
	294, 501, -413, -411, -364, -364, -364, -364, -364, -435,
	-416, -416, -431, -431, -364, -369, -364, -413, -411, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, 122, 274,
	282, -365, -370, -369, -364, -364, -411, 501, 501, 501,
	-299, -86, 500, 253, -311, 178, -364, -405, 505, -311,
	-311, 501, -394, -394, 500, -364, 221, 499, 505, 507,
	483, -279, 502, -387, -388, 499, 501, 505, 501, 505,
	-348, 37, 501, -441, 291, 5, 8, 498, 499, 502,
	-435, 501, 501, 501, -288, -364, 429, 429, 136, 274,
	457, -465, -460, 134, -364, -286, -392, -364, 500, 500,
	2, -191, 126, 384, -526, 2, 455, 136, -198, 136,
	-198, 474, 500, 500, 429, 371, 470, -299, -364, -168,
	112, -440, -513, 504, -513, 504, 371, 429, 371, 429,
	470, -299, 429, -415, 45, 25, 274, -240, 429, 429,
	-198, 136, 440, 384, -447, 278, -170, 470, 167, 429,
	2, -241, 2, 501, 501, 505, -466, 37, 286, 500,
	286, -237, -68, 470, -404, -437, -239, 37, 136, -509,
	-409, -410, 5, -237, 136, 288, 274, -203, 233, -545,
	-445, -481, -284, -315, -306, 275, 85, 501, -358, -308,
	-292, -364, 2, 501, -198, -165, -166, -447, -447, -447,
	-167, -173, -173, -356, -264, 500, -223, -209, 500, -173,
	-225, 2, -448, -110, 292, -237, 493, -321, -271, -270,
	307, 282, -271, 362, 362, 289, 158, 230, -192, -222,
	-364, -364, 132, 32, 32, -364, -364, -375, 501, -364,
	-364, -299, 499, 5, -364, 501, 501, 8, -364, 501,
	502, -495, -208, -364, 501, 55, 501, 501, 505, 505,
	501, 501, 501, 501, 501, 501, 501, -370, 167, 122,
	282, 500, 501, 501, -86, -372, 181, 55, -394, -372,
	-372, -323, -288, -394, -362, -222, 498, -441, -437, -397,
	500, 502, 499, 2, 498, -441, 501, -224, -224, -355,
	136, -467, 86, -469, 70, 150, 92, 274, 278, 445,
	323, 66, 112, 337, -537, 37, 480, 501, 501, 505,
	-192, -286, -288, 274, 406, 112, 274, 112, 105, 440,
	73, -224, -231, -288, -288, -237, -246, 143, 501, 505,
	483, 2, 493, 493, -246, -241, -246, -239, 143, 501,
	-222, 5, 5, 136, -219, 70, 5, -224, -224, -240,
	105, -172, 292, -171, 129, 355, 120, -448, -107, -279,
	-267, 205, -224, -464, -461, -462, 323, -468, -470, 150,
	323, -110, -175, -174, -208, 5, 2, 500, -262, 292,
	499, -318, -110, -241, 501, 505, -339, 455, -222, -237,
	136, -204, 232, -545, -445, -201, -342, -340, -347, 500,
	288, -110, -284, 483, 501, 501, 105, 105, 196, 135,
	-286, 500, 500, -288, 105, 501, -50, -51, 202, 86,
	312, -234, 414, 202, 500, 500, -192, -364, -364, -364,
	501, -284, -441, 493, -489, 307, 501, -391, -364, -364,
	-365, 167, 500, -375, 501, -490, 469, -364, -299, -490,
	-490, 501, -437, 2, 498, 2, -355, -231, -235, -228,
	-208, 150, 187, 278, 226, 500, -365, -237, 500, 2,
	29, -538, 116, 206, -354, -539, 91, 407, 195, -392,
	-193, 501, 501, 278, 278, -364, -411, 500, -198, -198,
	501, 501, -364, 429, -440, 90, -438, 2, -513, -364,
	429, 5, -198, -235, -198, -198, -219, 440, 505, 500,
	483, -170, 37, -268, -269, 194, -466, 226, -228, 226,
	-536, 470, 501, 505, 483, 483, -260, -176, -69, -70,
	430, -404, -279, 5, 500, -208, 288, 500, -222, -545,
	-445, -202, -315, 123, -288, 86, -342, -371, -167, 500,
	500, -265, 75, 87, 113, 186, 170, 203, 399, 404,
	27, -265, 501, -286, -286, 501, 500, -167, 505, 27,
	500, 27, 500, -237, -255, -299, -299, 501, -284, 55,
	505, 501, 501, -365, -375, 501, -491, -492, -227, 499,
	2, -469, -228, 274, 455, -364, -210, 500, -364, 37,
	206, 117, 192, -267, 500, -353, 455, 337, -219, -286,
	500, 500, 500, 483, 167, 500, -415, -198, -240, -171,
	-172, -447, -518, 335, -110, -176, 305, 500, -266, 288,
	105, 268, -174, -367, -367, 501, 37, -70, 9, 37,
	-286, -237, -286, 288, -445, -203, 449, 275, 501, -231,
	-315, -448, -448, -353, 501, 501, -448, -51, -288, -288,
	501, 501, -496, 330, 363, 180, -299, -285, 501, 505,
	37, 136, 182, 501, -471, 252, -208, 501, 117, 192,
	-268, -288, -267, 182, -237, -514, 455, 501, -273, -272,
	-270, -275, -274, -270, -299, -438, 90, 305, -299, -219,
	501, -521, 168, 266, -520, 5, 10, -266, -237, -287,
	-393, -224, 76, 105, -267, -110, -110, 501, -339, 501,
	-237, -204, 384, -357, 501, 501, -354, -353, -358, 501,
	501, 501, 501, -497, -498, 47, 442, 96, -364, -497,
	-497, -492, -494, 150, 470, -472, -475, -474, 288, 390,
	168, 306, 501, 406, 466, -538, 501, 470, -279, -364,
	-353, 501, 505, 460, 501, 505, 460, 501, 167, 501,
	-198, -169, 470, 44, 500, 501, 505, 322, 118, 126,
	-268, -536, -353, 500, -354, 500, -307, -167, -167, -267,
	-354, -167, -499, 134, -498, 319, 163, 362, 319, 163,
	-499, -499, -228, 51, -474, 288, -475, 288, 449, 118,
	-358, 51, -471, -267, -272, 194, -274, 167, 305, 139,
	-520, 29, -288, -393, 363, 363, 2, -176, -266, -354,
	-286, -267, -286, -358, -268, -267, 96, 178, 424, 268,
	32, 483, -473, 268, 351, 58, 384, -473, 483, -472,
	500, 500, 369, 501, 2, -266, -267, 501, -268, 501,
	-358, -268, 362, 296, -498, -364, 22, 278, 112, -364,
	-538, -299, -299, 292, -199, 58, 351, -268, -353, -358,
	-354, -358, 501, 501, -166, 500, -358, -354, -267, -268,
	429, -166, -267, -268, 500, 501, -268, -358, -299, -358,
	501, -268,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 435, 436, 438, 439, 440, 442, 443, 445, 447,
	449, 450, 451, 453, 454, 456, 457, 458, 459, 460,
	462, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 524, 0, 1105, 1107, 1109,
	1111, 0, 656, 0, 30, 31, 0, -2, 245, 247,
	249, 0, 275, 277, 278, 280, 282, -2, 0, 378,
	379, 381, 383, -2, -2, 0, 813, 815, 0, 511,
	513, 0, 818, 820, 0, 0, 533, 534, 0, 1193,
	-2, 527, 529, 531, 596, 598, 600, 602, 604, 606,
	608, 609, 611, 613, 615, 617, 619, 621, 623, 625,
	626, 628, 630, 632, 634, 636, 638, 640, 642, 644,
	646, 648, 650, -2, 652, -2, -2, 0, -2, -2,
	-2, 1123, 34, 36, 38, 40, 42, 44, 46, 48,
	329, 330, 332, 334, 336, 338, 341, 343, 345, 1251,
	385, 387, 389, 391, 393, 395, 0, -2, 1263, 0,
	0, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	76, 77, 78, 79, 80, 81, 82, 83, 62, 63,
	65, 66, 67, 71, 72, 74, 60, 0, 0, 1224,
	1226, 1228, 1230, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 437, 441, 444, 446, 448,
	452, 455, 461, 463, 465, 422, 423, 426, 1883, 1900,
	1901, 1902, 1905, 1906, 1907, 1908, 1909, 1910, 2273, 2354,
	2355, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 424, 425, 969, 0, 489, 487, 1876,
	490, 2099, 492, 494, 372, 373, 374, 375, 376, 377,
	0, 504, 498, 503, 505, 507, 508, 509, 510, 484,
	482, 0, 504, 1935, 502, 1103, 1104, 1088, 1089, 2136,
	1130, 523, -2, -2, -2, 2239, -2, 555, -2, 562,
	2243, 2138, 567, 0, 569, -2, 572, 1106, 1108, 1110,
	654, 655, 1886, 0, 0, 0, 0, 32, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1018, 1019,
	1020, 0, 185, 187, -2, -2, -2, -2, 0, 0,
	2172, 1976, 1844, 1902, 1847, 1842, 246, 248, 250, 251,
	0, 0, 0, 0, 0, 0, 276, 279, 281, -2,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	864, 856, 857, 1059, 0, 0, 0, 0, 380, 382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 308, 427, 428,
	0, 1252, 1252, 0, 0, 0, 0, 226, 217, 814,
	816, 817, 0, 0, 0, 0, 512, 514, 0, 0,
	212, 819, 821, 822, 0, 0, 0, 0, 0, 228,
	0, 0, 528, 530, 532, 597, 599, 601, 603, 605,
	607, 610, 612, 614, 616, 618, 620, 622, 624, 627,
	629, 631, 633, 635, 637, 639, 641, 643, 645, 647,
	649, 651, 661, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 738, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 664, 666, 667, 668, 0, 719, 736, 737, 746,
	653, 0, 1009, 1253, 1132, 1113, 1127, 1132, 1115, 1116,
	1117, 1118, 1119, 1124, 1126, 1120, 1121, 1122, 35, 37,
	39, 41, 43, 45, 47, 49, 331, 333, 335, 337,
	339, 342, 344, 346, -2, 1222, 1223, 386, 388, 390,
	392, 394, 396, 515, 0, 517, 0, 665, -2, 0,
	1257, 1257, 1257, 0, 0, 1223, 1221, 0, 520, 521,
	576, 577, 1487, 0, 0, 0, 0, 0, 0, 0,
	1741, 1573, 0, 578, -2, 1604, 1606, 2214, 2239, 1740,
	1608, 1609, 1610, 1611, 1612, 0, 1614, 1615, 1616, 1617,
	1618, 1619, 0, 1621, 0, 1626, 1627, 1628, 0, 2221,
	1821, 1896, -2, 0, 0, 2227, 1892, 0, 1707, 1644,
	-2, -2, 1919, 1898, 1419, 1420, 1421, 1422, 1423, -2,
	-2, 2256, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 0, 2203, 2222, 2223, 2228, 2230, 2224,
	2211, 1669, 1987, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1446, 1455, -2, -2,
	-2, -2, -2, -2, 2215, 2216, 2233, 2236, 2242, 2247,
	2248, 2220, 2229, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 1447,
	-2, -2, -2, -2, 1240, 2110, 1243, 969, 1241, 1225,
	1227, 0, 1229, 0, 0, 0, 1234, 1260, 1258, 0,
	1301, 1238, 1239, 1319, 1319, 1343, 0, 1324, 0, 1343,
	1252, 1369, 0, 1330, 2128, 1645, 1646, 0, 1902, 1897,
	-2, -2, 2254, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 491, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 1129, 525, 526, 0, 550, 0, 554, 2210,
	-2, 1943, 2147, -2, 558, 1133, 1137, 1138, 1139, 1140,
	0, 0, 0, 0, 0, 564, 0, 0, 551, 552,
	570, 573, 0, 657, 658, 659, 660, 59, 0, 2222,
	1369, 61, 0, 1866, 1927, 1928, 1929, 1930, 1931, 2255,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2256, 64, 0, 2222, 68, 0, 2222, 0, -2, 73,
	0, 1872, 75, 0, 1869, 84, 0, 2222, 0, 1841,
	-2, 0, 170, 1880, -2, 2222, 1017, 229, 230, 1915,
	1916, 1923, 1924, 1925, 1926, 0, 0, 806, 1838, 1843,
	807, 1862, 808, 1848, 0, 252, 253, 254, 255, 256,
	0, 257, 2222, 259, 260, 0, 262, 263, 2222, 265,
	266, 0, 268, 0, 197, 198, 284, 285, 0, 287,
	0, 2222, 0, 0, 0, 293, -2, 309, 0, 306,
	0, 297, 298, 300, 301, 302, 303, 0, 350, 348,
	1877, 0, 834, 2222, 836, 1882, 0, 0, 1038, -2,
	2222, 1014, 1044, 1040, 0, -2, 0, 1250, 2222, 1147,
	860, 861, 862, 863, 0, 369, 0, 1160, 0, 1162,
	0, 1183, 1375, 1319, 1319, 0, 310, 311, 312, 313,
	314, 2222, 0, 0, 0, 319, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 159, 2222, 399, 420, 159,
	2222, 402, 159, 2222, 405, 0, 408, 1057, 159, 2222,
	411, 159, 2222, 414, 415, 417, 2222, 419, 231, 1099,
	1100, 1101, 1102, 0, -2, 478, 1885, -2, 430, 0,
	431, 0, -2, 0, 243, 0, 0, 823, 824, 825,
	826, 827, 830, 831, 832, 833, 1356, 215, 213, 0,
	0, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	0, 0, 535, 0, 0, 662, 663, 0, 0, 673,
	674, 675, 243, 2139, 2107, 2006, 680, 0, 683, 686,
	-2, 0, 0, 0, 0, 690, 0, 695, 696, 697,
	0, 812, 699, 0, 0, 701, 0, 705, 0, 708,
	0, 710, 0, 712, -2, -2, -2, 723, -2, 0,
	727, 0, 729, -2, 0, 738, 734, 735, 0, 0,
	0, 0, 754, 755, 0, 760, 0, 763, 764, 765,
	0, 767, 768, 0, 770, 771, 772, 773, 0, 775,
	776, -2, -2, 780, 782, 0, 789, 0, 793, 0,
	797, 0, 669, 670, 159, 1373, 1112, -2, 1114, 0,
	-2, 0, 516, 0, 519, 1280, 1208, 1205, 0, 1277,
	1278, 1209, 0, 0, 0, 1216, 0, 1255, 1256, 0,
	0, 0, 1195, 1196, 0, 0, 0, 0, 1746, 1747,
	1748, 1749, 1750, 1751, 1754, 1755, 1752, 1753, 1756, 1757,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 1760, 1761,
	0, 0, 1763, 0, 1765, 0, 0, 0, 0, 0,
	0, 1552, 1554, 1829, 0, 0, 1762, 1492, 1493, 1494,
	1495, 1496, 1531, 1532, 0, 0, 1605, 1826, 1825, 1607,
	0, 1777, 0, 1620, -2, 0, 1741, 1772, 0, 0,
	1629, 1630, 1631, 0, 0, 1777, 0, 0, 1820, 1641,
	1642, 1484, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1433, 1432, 0, 1434, 0, 1435, 1436, 1443,
	1456, 0, 0, 0, 0, 1460, 0, 0, 0, 0,
	0, 0, 0, 1801, -2, 0, 0, 0, 0, 1448,
	0, 1242, 0, 0, 1305, 1830, 1834, 1835, 1305, 1305,
	0, 0, 1778, 1366, 1366, 0, 0, 1362, 1362, 1362,
	1360, 1343, 0, 1343, 1353, 0, 1343, 1343, 0, -2,
	1324, 0, 0, 1353, 0, 1337, 466, 468, 470, 472,
	473, 474, 476, 1370, 1371, 0, 0, 0, 0, 1903,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 0,
	496, 506, 1252, 0, 1780, 1392, 1396, 0, 1398, 1399,
	1400, 1401, 1402, 0, 0, 1393, -2, 1444, 1446, 1467,
	1920, 1921, 1922, 1427, 1428, 1429, 1430, 1431, 1439, 1426,
	1426, 1426, 1437, 1466, 1458, 1466, 1462, 1413, 1414, 1449,
	1450, 1451, 1452, 0, 500, 0, 0, 0, 0, -2,
	560, 565, 566, 0, 0, 1135, 0, 1141, 587, 588,
	589, 1143, 1144, 0, 563, 590, 591, 592, 593, 594,
	595, 0, 1850, 1851, 1852, 1853, 1856, 1857, 0, 0,
	561, 580, 568, 0, 574, 85, 1085, 0, 124, 0,
	1085, 1085, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 109, 120, 97, 98, 0, 0, 0, 0, 0,
	69, 991, 0, 994, 0, 0, 0, 0, 0, 0,
	0, 1007, 0, 0, 0, 108, 0, 103, 87, 0,
	0, 0, 110, 122, 0, 150, 152, 0, 0, 0,
	0, 0, 0, 169, 177, 0, 0, 1015, 0, 1249,
	0, 1356, 805, 0, 0, 1903, 1846, 0, 0, 0,
	0, 0, 0, 0, 286, 288, 0, 290, 291, 292,
	0, 1037, 0, 299, 296, 340, 940, 2222, 0, 0,
	367, 362, 0, 364, 0, 990, 2222, 988, 1881, 0,
	1012, 0, 0, 0, 1045, 1912, 1054, 1058, 1149, 0,
	371, 0, 1163, 1165, 0, 0, 1376, 0, 1378, 1379,
	0, 316, 317, 318, 0, 397, 0, 157, 158, 0,
	400, 0, 403, 0, 159, 2222, 1836, 409, 0, 412,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 243, 0, 1355, 0,
	1356, 243, 243, 1356, 537, 1356, 539, 0, 0, 676,
	243, 243, 243, 681, 682, 684, 685, -2, -2, 790,
	687, 688, 757, 0, 0, 0, 756, 698, 0, 799,
	2124, 810, 757, 1976, 757, 1976, 757, 1976, 709, 711,
	714, 749, 722, 726, 0, 0, 731, 739, -2, 0,
	741, 0, 743, 0, 745, 757, 758, 761, 766, 769,
	774, 0, 0, 0, 0, 0, 0, 0, 1008, 0,
	1125, 1280, 1208, 518, 1199, 1279, 1200, 1207, 1210, 0,
	0, 1212, 0, 1214, 0, 1275, 1276, 1283, 1284, 0,
	1294, 1295, 1287, 0, -2, 0, 0, 1290, 1291, 1218,
	0, 1235, 1236, 1237, 1264, 1267, 1068, 0, 2354, 1488,
	1387, 1489, 1490, 1865, 0, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, -2, -2, -2, -2, -2,
	-2, -2, -2, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, -2, -2, -2, 1529, 1530, -2,
	1764, 1766, 0, 1829, 0, -2, 0, -2, -2, -2,
	-2, 1549, 0, 1551, 1556, 1558, 1560, 0, 0, 0,
	0, 1828, 1570, 1812, 1813, 0, 0, 1743, 1744, 1745,
	1555, 0, 1574, 1827, 1824, 0, 0, 1776, 1263, 1633,
	0, 0, 0, 0, 1640, 1625, 1774, 0, 1773, 0,
	0, 0, 1784, 0, 1819, 1815, 0, 1863, 1483, 1470,
	1471, 1472, 1473, 1474, 1475, 1485, 0, 1860, 1889, 1895,
	1717, 0, 0, 0, 1670, 1671, 1672, 1673, 1674, 0,
	1676, 1677, 0, 1679, 1680, 0, 1682, 1683, 0, 1685,
	1686, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 0, 0, 1689,
	0, 1787, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1691, 0, 1693, 1778, 1798, 0, 0, 1575, 0,
	0, 0, 1741, 0, 1696, 1778, 1806, 0, 0, 0,
	0, 0, 1778, 0, 1811, 0, 1703, 0, 1705, 1244,
	0, 0, 1382, 0, 0, 0, 1833, 1382, 1382, 0,
	1300, 0, 0, 1363, 1364, 1365, 0, 0, 1366, 0,
	1357, 1361, 1358, 1359, 1353, 1316, 0, 0, 1867, 1353,
	1322, 1352, 0, 969, 1342, 1353, 1353, 0, -2, 1326,
	1343, 0, 0, 467, 469, 471, 475, 477, 0, 0,
	1263, -2, 0, 243, 968, 0, 0, 0, 0, 486,
	488, 0, 0, 480, 0, 483, 0, 1383, 1386, 0,
	0, 1397, 1403, 1404, 0, -2, 0, 0, 1468, 0,
	0, 0, 0, 553, 0, 1134, 1142, 0, 584, 0,
	586, 0, 1854, 1858, 1855, 1859, 0, 575, 0, 0,
	0, 0, 1084, 0, 128, 2222, 0, 161, 0, 0,
	933, 1873, 0, 0, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 992,
	993, 995, 1002, 1004, 0, 998, 1861, 0, 0, 999,
	0, 1001, 1003, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 100, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1033, 1031, 1025, 1026, 1027, 1028, 1029, 1030, 0, 0,
	-2, 234, 1839, 1849, 0, 828, 829, 258, 261, 264,
	267, 186, 0, 294, 0, 0, 866, 839, 0, 0,
	349, 243, 0, 0, 363, 0, 986, 989, 0, 969,
	2222, 1024, 1879, 0, 0, 0, 0, 1043, 0, 2222,
	1868, 1911, 1912, 1151, 1157, 0, 1382, 0, 1181, 1166,
	0, 0, 0, 1181, 1185, 1186, 1188, 1189, 0, 0,
	1377, 0, 320, 421, 159, 159, 159, 406, 0, 0,
	159, 416, 159, 232, 418, 429, 479, 1252, 1252, 243,
	241, 2082, 239, 236, 238, 0, 0, 0, 867, 869,
	870, 871, 872, 0, 1912, 0, 2032, 1912, 0, 1169,
	1171, 0, 210, 216, 214, 243, 0, 361, 536, 541,
	671, 0, 677, 678, 679, 716, 751, 689, 691, 692,
	693, 0, 811, 809, 700, 757, 703, 757, 706, 757,
	725, 728, 733, 740, 0, 0, 0, 753, 0, 0,
	0, 0, 0, 0, 0, 794, 795, 796, 798, 1374,
	1203, 1204, 1206, 0, 1215, 0, 0, 1289, -2, -2,
	1288, 1292, 1293, -2, -2, -2, -2, 1211, 0, 1220,
	1217, 0, 1274, 1066, 1067, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1571, 0, -2, 1550, 1553, 1557,
	1559, 1561, 0, 0, 0, 0, 0, 0, 1767, 0,
	1769, 1572, 1822, 1825, 1739, 0, 0, 1262, 1263, 1263,
	0, 1639, 0, 1775, 0, 1782, 1783, 0, 1632, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 1675, 1678, 1681, 1684, 0,
	0, 0, 0, 1664, 0, 0, 0, 1668, 1438, 1424,
	0, 1466, 1464, 1465, 1459, 1466, 1463, 1416, 0, 1415,
	0, 1688, 0, 1690, 1692, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 1579, 1580, 1695, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1701, 0, 1810, 1702, 1704, 1252, 0,
	1245, 0, 1302, 1297, 1381, 0, 1831, 1356, 1304, 1306,
	1832, 1870, 1297, 1297, 0, 1779, 0, 0, 1347, 0,
	0, 0, 1349, 1320, 0, 0, 1314, 0, 1310, 1311,
	1312, 1313, 1321, 969, 1351, 1323, 1327, 1889, 0, 1353,
	0, 1338, 0, 1340, 1372, 0, 1332, 1335, 0, 0,
	1904, 244, 269, 273, 274, 270, 271, 272, 495, 0,
	0, 1781, 0, 1388, 0, 1394, 0, 0, 0, 0,
	499, 0, 549, -2, 582, 583, 585, 0, 581, 125,
	1085, 0, 0, 1070, 1072, 0, 130, 2222, 139, 0,
	907, 0, 1871, 0, 0, 0, 0, 0, 1087, 0,
	0, 2222, 159, 2222, 159, 142, 145, 0, 149, 147,
	0, 0, 898, 86, 1085, 0, 89, 93, 101, 0,
	0, 0, 107, 0, 0, 0, 1074, 1078, 0, 0,
	996, 997, 1000, 1006, 70, 0, 0, 1076, 1080, 1069,
	151, 91, 95, 102, 0, 1082, 88, 0, 173, 0,
	0, 0, 165, 0, 166, 167, 174, 175, 176, 178,
	0, 159, 2222, 0, 1032, 1010, 1011, 0, 1016, 190,
	0, 1845, 0, 0, 0, 0, 0, 0, 865, 951,
	0, 0, 0, 0, 355, 351, 0, 360, 366, 365,
	835, 0, 0, 0, -2, 1047, 1041, 1042, 0, 0,
	0, 2222, 1153, 1157, 0, 1156, 1250, 1263, 370, 1158,
	1181, 0, 0, 0, 1168, 1164, 1161, 1382, 0, 0,
	0, 0, 0, 315, 398, 401, 404, 1837, 159, 410,
	413, 432, 433, 218, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 876, 0, 1912, 1912, 0, 1875, 0,
	0, 0, 0, 211, 0, 538, 0, 0, 0, 702,
	704, 707, 742, 744, 757, 783, 784, 893, 0, 893,
	0, 0, 1213, 0, 1286, 1219, 1268, 1269, 0, 1068,
	0, 1491, 1534, 0, 0, -2, 0, 0, 1538, 0,
	0, 0, -2, 0, 0, 0, 1768, 1770, 0, 1824,
	1634, 0, 0, 0, 1638, 1622, 1623, 0, 1742, 1785,
	1814, 1818, 0, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	0, 1864, 1890, 1894, 1715, 1716, 1720, 1878, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	1457, 1461, 0, 0, 1786, 1797, 1799, 1576, 1577, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, -2,
	-2, -2, 1594, 1595, 1596, -2, -2, -2, 0, 0,
	0, 1800, 1802, 1803, 1807, 1808, 0, 1698, 1699, 1700,
	1809, 0, 1252, 1246, 1299, 0, 1380, 1303, 0, 1299,
	1299, 1259, 1345, 0, 0, 1368, 0, 1317, 0, 1318,
	0, 1350, 0, 1325, 1328, 1329, 1339, 0, 1331, 0,
	1334, 0, 1634, -2, 497, 481, 0, 0, 1390, 0,
	0, 1441, 1445, 1469, 501, 1354, 0, 0, 0, 0,
	160, 905, 932, 0, 0, 0, 1061, 1068, 0, 0,
	938, 132, 0, 0, 0, 140, 0, 0, 137, 0,
	144, 148, 0, 0, 0, 0, 0, 0, 104, 105,
	106, 0, 111, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 1065, 0, 0,
	180, 0, 0, 0, 1035, 1036, 184, 0, 0, 0,
	289, 969, 295, 887, 939, 0, 941, 0, 840, 0,
	0, 940, 347, 0, 354, 0, 990, 0, 0, 1013,
	0, 1046, 1048, 1056, 0, 0, 0, 1155, 1157, 0,
	1148, 1149, 1282, 1159, 1179, -2, 1178, 0, 1263, 1187,
	1184, 1190, 1191, 0, 407, 240, 0, 235, 237, 0,
	221, 0, 0, 868, 873, 0, 0, 0, 0, 0,
	1170, 1172, 0, 227, 0, 672, 694, 752, 785, 892,
	0, 0, 787, 0, 0, 1285, 1272, 1273, 1270, 1068,
	1536, 1540, 0, 0, 0, 1542, -2, 0, 1564, -2,
	-2, 1771, 1823, 1613, 1263, 1635, 1637, 1624, 1817, 1486,
	0, 1722, 1719, 0, 1706, 0, 1659, 1660, 0, 0,
	1663, 1665, 1666, 1667, 1425, 1418, 1417, 1796, 0, 0,
	0, 0, 1697, 1247, 0, 1711, 0, 0, 1307, 1711,
	1711, 1346, 0, 1348, 1315, 1308, 0, 1890, 1341, 1333,
	0, 0, 1384, 1389, 0, 1395, 1440, 126, 127, 129,
	0, 906, 0, 909, 0, 0, 0, 0, 916, 917,
	0, 0, 0, 0, 0, 926, 0, 955, 965, 0,
	1274, 0, 0, 0, 134, 154, 0, 0, 1086, 0,
	0, 159, 159, 0, 0, 1071, 1073, 0, 0, 0,
	0, 114, 0, 0, 1075, 1079, 1077, 1081, 0, 0,
	1083, 171, 172, 0, 159, 0, 164, 159, 159, 1065,
	0, 188, 0, 191, 0, 194, 195, 233, 190, 0,
	895, 0, 951, 943, 944, 945, 0, 950, 952, 0,
	0, 853, 0, 849, 0, 0, 842, 866, 839, 0,
	352, 987, 1021, 969, 1039, 0, 0, 0, 0, 0,
	0, 1145, 1157, 0, 1150, 1151, 1181, 1281, 0, 0,
	0, 1167, 1282, 0, 242, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 540, 542, 0, 0,
	548, 891, 0, 0, 0, 0, 1271, 1544, -2, -2,
	1565, 0, 1891, 1893, 1263, 0, 1708, 1265, 0, 0,
	-2, 0, 0, 0, 1248, 1231, 0, 1298, 1296, 1232,
	1233, 1367, 0, 1336, 0, 1391, 131, 0, 910, 911,
	1874, 913, 0, 915, 918, 0, 921, 1914, 0, 925,
	0, 934, 956, 0, 887, 0, 961, 962, 963, 1062,
	1063, 967, 0, 133, 135, 153, 1065, 0, 136, 143,
	0, 0, 90, 0, 0, 1969, 117, 115, 113, 92,
	0, 173, 179, 1064, 168, 181, 159, 0, 0, 0,
	0, 0, 0, 839, 894, 0, 942, 0, 953, 954,
	843, 0, 841, 0, 0, 0, 0, 0, 353, 356,
	0, 359, 0, 1049, 0, 1055, 0, 0, 0, 0,
	1152, 1153, 368, 0, 0, 0, 1181, 1192, 220, 0,
	0, 874, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 875, 967, 0, 0, 931, 0, 225, 0, 544,
	0, 546, 0, 786, 788, 0, 0, 1636, 1726, 0,
	0, 1661, 1662, -2, 0, 1602, 1710, 1712, 0, 1309,
	1385, 908, 912, 0, 0, 0, 973, 0, 0, 927,
	0, 959, 960, 895, 0, 887, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 163, 182, 1065, 192,
	0, 193, 206, 0, 1022, 843, 0, 0, 851, 0,
	854, 0, 850, 847, 848, 887, 0, 357, 358, 0,
	0, 1056, 0, 0, 1154, 1155, 0, 1174, 1175, 1177,
	1182, 0, 0, 965, 967, 1382, 0, 543, 0, 0,
	791, 792, 0, 0, 0, 0, 1721, 1266, 1603, 0,
	0, 0, 0, 920, 978, 0, 0, 0, 957, 958,
	955, 0, 936, 0, 969, 138, 0, 967, 0, 899,
	0, 0, 902, 0, 0, 118, 1969, 116, 0, 159,
	189, 209, 0, 202, 203, 200, 201, 837, 0, 0,
	947, 949, 0, 855, 895, 853, 1023, 967, 0, 965,
	0, 1146, 0, 1176, 243, 243, 887, 965, 930, 243,
	545, 547, 1718, 1738, 1727, -2, 2183, 1973, 0, 1738,
	1738, 1713, 1714, 0, 0, 922, 974, 975, 0, 970,
	971, 972, 1913, 923, 924, 1382, 964, 0, 973, 155,
	887, 896, 0, 0, 897, 0, 0, 121, 0, 123,
	183, 196, 0, 0, 0, 946, 0, 0, 0, 0,
	839, 843, 965, 0, 887, 0, 1382, 222, 223, 895,
	887, 224, 1723, 0, 0, 1729, 1730, 1731, 1732, 1733,
	1724, 1725, 914, 0, 976, 0, 977, 0, 0, 0,
	935, 0, 978, 141, 900, 0, 903, 0, 119, 0,
	204, 205, 0, 948, 844, 0, 846, 843, 852, 887,
	0, 895, 0, 1173, 1382, 895, 0, 1735, 1736, 0,
	0, 0, 979, 0, 982, 983, 0, 980, 0, 955,
	0, 0, 0, 890, 845, 838, 895, 967, 1382, 965,
	928, 1382, 1734, 1737, 1728, 919, 981, 984, 985, 966,
	937, 0, 0, 0, 886, 888, 889, 1382, 965, 1052,
	887, 929, 895, 0, 207, 0, 1050, 887, 895, 901,
	0, 0, 895, 1382, 0, 208, 1382, 1053, 0, 1051,
	895, 904,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 489, 3, 495, 490, 3,
	500, 501, 493, 491, 505, 492, 502, 494, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 508, 3,
	481, 483, 482, 486, 504, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 498, 3, 499, 496, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 506, 488, 507, 484,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 485, 57824, 487,
	57825, 497, 57826, 503, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1193
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1198
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1200
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1203
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1204
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1205
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1206
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1207
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1217
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1232
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1332
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1353
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1357
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1390
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1422
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1426
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1436
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1440
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1446
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1455
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1466
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1494
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1508
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1519
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1538
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1545
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1553
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1558
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1573
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1581
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1592
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1602
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1612
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1621
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1632
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1638
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1664
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1669
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1680
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1690
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 141:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1838
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = nil
		}
	case 155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1983
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1987
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1991
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2056
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2074
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2082
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2109
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.partitionedBackup(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = nil
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2313
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2374
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2383
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2394
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2399
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2404
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2409
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2413
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2432
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2440
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = nil
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2510
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2524
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2525
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2527
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2554
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2581
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2590
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2638
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2657
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2662
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2676
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2677
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{
			return helpWith(sqllex, "CREATE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			return unimplemented(sqllex, "create cast")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2684
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2686
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2687
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2688
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2689
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2690
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2692
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2693
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2694
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			return unimplemented(sqllex, "create operator")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			return unimplemented(sqllex, "create publication")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2697
		{
			return unimplemented(sqllex, "create rule")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			return unimplemented(sqllex, "create server")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2704
		{
		}
	case 305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2705
		{
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2709
		{
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2713
		{
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2719
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2721
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2722
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2723
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2724
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2725
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2726
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2731
		{
			return unimplemented(sqllex, "drop server")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2815
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2854
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2889
		{

			sqlVAL.union.val = nil
		}
	case 368:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "DELETE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "DROP")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3045
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3094
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3098
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3163
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3187
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3195
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "DELETE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "INSERT")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DELETE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "INSERT")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3246
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3272
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3305
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3313
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "GRANT")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3417
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "RESET")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "RESET")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "USE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "USE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3713
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return unimplemented(sqllex, "set from current")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.Low
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = tree.Normal
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = tree.High
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "SHOW")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3902
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3911
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3921
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.str = "client_encoding"
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.str = "timezone"
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3966
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4014
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4023
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = true
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = true
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = false
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4317
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4321
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = false
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = false
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4422
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4457
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4512
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4520
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4557
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4580
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4596
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4736
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "RESUME")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4969
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4984
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = nil
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{

			sqlVAL.union.val = nil
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5011
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5031
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5036
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 851:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5063
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5076
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5090
		{
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5091
		{
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = true
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = true
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = false
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = true
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = true
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = true
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = true
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5120
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5175
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5178
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5182
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5188
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5204
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5209
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.str = ""
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 896:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 901:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 904:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5398
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5412
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
		}
	case 928:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5519
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5547
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5557
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5637
		{
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5641
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5798
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5807
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5826
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5841
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5909
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = true
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{

			sqlVAL.union.val = true
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = false
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5934
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5948
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5960
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5971
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = nil
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6024
		{
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6025
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6043
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6045
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6047
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6051
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6087
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6104
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6122
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6138
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = false
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = true
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = false
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = true
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = false
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.str = ""
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6259
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6265
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6315
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6321
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6329
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6335
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6353
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6416
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6464
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6489
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6494
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6512
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6522
		{
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6523
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6544
		{
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6656
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.str = ""
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.str = ""
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.str = ""
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.str = ""
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6700
		{
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6744
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6823
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6902
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7052
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7210
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = true
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = false
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7264
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = nil
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7278
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = true
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = false
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = false
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7308
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7370
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7375
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7404
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7492
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7550
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7589
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7610
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7622
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7641
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7680
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7690
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7736
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7766
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7799
		{
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = nil
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.str = tree.AstFull
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.str = tree.AstRight
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.str = tree.AstInner
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7919
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.str = tree.AstHash
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.str = ""
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7981
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8004
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8016
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8068
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8076
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8077
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8095
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8105
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8125
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8186
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = types.Geography
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8211
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8219
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8253
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = nil
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = types.Int2
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = types.Int
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = types.Float4
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = types.Float
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8296
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = types.Bool
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8326
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = types.Float
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8345
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8351
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8373
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = types.String
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = true
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = false
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = types.Date
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8430
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8444
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8461
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8478
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = true
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = false
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = false
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = types.Interval
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = nil
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8631
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8691
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9009
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9225
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9230
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9265
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9280
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9310
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9321
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9322
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9412
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9607
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9608
		{
			return unimplemented(sqllex, "treat")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.str = ""
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9783
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9880
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = tree.Any
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.Some
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.All
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.Div
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = tree.LT
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = tree.GT
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = tree.LE
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = tree.GE
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = tree.NE
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = tree.Like
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10242
		{
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10460
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10651
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10658
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.str = ""
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
