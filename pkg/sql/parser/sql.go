// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:878
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13783

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1603,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 423,
	-2, 0,
	-1, 74,
	245, 254,
	520, 254,
	-2, 0,
	-1, 88,
	234, 1339,
	247, 1339,
	263, 419,
	394, 419,
	405, 1097,
	445, 419,
	458, 1097,
	505, 1097,
	531, 419,
	557, 1097,
	-2, 0,
	-1, 94,
	133, 1603,
	240, 1603,
	542, 1603,
	543, 1603,
	-2, 0,
	-1, 112,
	152, 1574,
	172, 1574,
	185, 1574,
	243, 1574,
	276, 1574,
	345, 1574,
	355, 1574,
	537, 1574,
	-2, 1545,
	-1, 153,
	160, 936,
	262, 936,
	397, 897,
	463, 897,
	504, 897,
	523, 936,
	525, 897,
	-2, 0,
	-1, 157,
	4, 1605,
	21, 1605,
	22, 1605,
	23, 1605,
	24, 1605,
	25, 1605,
	26, 1605,
	27, 1605,
	29, 1605,
	30, 1605,
	36, 1605,
	41, 1605,
	42, 1605,
	44, 1605,
	45, 1605,
	46, 1605,
	47, 1605,
	48, 1605,
	49, 1605,
	50, 1605,
	51, 1605,
	53, 1605,
	54, 1605,
	55, 1605,
	56, 1605,
	58, 1605,
	59, 1605,
	60, 1605,
	61, 1605,
	62, 1605,
	63, 1605,
	64, 1605,
	68, 1605,
	69, 1605,
	70, 1605,
	71, 1605,
	73, 1605,
	74, 1605,
	75, 1605,
	79, 1605,
	80, 1605,
	81, 1605,
	82, 1605,
	83, 1605,
	84, 1605,
	85, 1605,
	88, 1605,
	89, 1605,
	90, 1605,
	91, 1605,
	92, 1605,
	94, 1605,
	96, 1605,
	97, 1605,
	98, 1605,
	99, 1605,
	100, 1605,
	101, 1605,
	103, 1605,
	104, 1605,
	105, 1605,
	107, 1605,
	108, 1605,
	109, 1605,
	117, 1605,
	118, 1605,
	119, 1605,
	120, 1605,
	121, 1605,
	123, 1605,
	124, 1605,
	125, 1605,
	126, 1605,
	128, 1605,
	129, 1605,
	130, 1605,
	132, 1605,
	133, 1605,
	134, 1605,
	136, 1605,
	137, 1605,
	138, 1605,
	141, 1605,
	142, 1605,
	143, 1605,
	145, 1605,
	146, 1605,
	147, 1605,
	149, 1605,
	150, 1605,
	151, 1605,
	153, 1605,
	154, 1605,
	155, 1605,
	156, 1605,
	157, 1605,
	158, 1605,
	159, 1605,
	160, 1605,
	161, 1605,
	162, 1605,
	163, 1605,
	164, 1605,
	165, 1605,
	166, 1605,
	167, 1605,
	168, 1605,
	169, 1605,
	171, 1605,
	177, 1605,
	178, 1605,
	179, 1605,
	180, 1605,
	184, 1605,
	186, 1605,
	187, 1605,
	188, 1605,
	192, 1605,
	193, 1605,
	194, 1605,
	195, 1605,
	196, 1605,
	197, 1605,
	198, 1605,
	199, 1605,
	200, 1605,
	201, 1605,
	202, 1605,
	203, 1605,
	204, 1605,
	205, 1605,
	207, 1605,
	208, 1605,
	210, 1605,
	211, 1605,
	213, 1605,
	214, 1605,
	215, 1605,
	216, 1605,
	217, 1605,
	218, 1605,
	219, 1605,
	220, 1605,
	221, 1605,
	223, 1605,
	224, 1605,
	226, 1605,
	227, 1605,
	228, 1605,
	229, 1605,
	230, 1605,
	234, 1605,
	235, 1605,
	236, 1605,
	237, 1605,
	240, 1605,
	241, 1605,
	242, 1605,
	244, 1605,
	246, 1605,
	247, 1605,
	249, 1605,
	251, 1605,
	252, 1605,
	253, 1605,
	255, 1605,
	259, 1605,
	260, 1605,
	261, 1605,
	262, 1605,
	263, 1605,
	264, 1605,
	266, 1605,
	267, 1605,
	268, 1605,
	270, 1605,
	271, 1605,
	273, 1605,
	274, 1605,
	277, 1605,
	278, 1605,
	279, 1605,
	280, 1605,
	281, 1605,
	282, 1605,
	283, 1605,
	286, 1605,
	287, 1605,
	288, 1605,
	289, 1605,
	291, 1605,
	292, 1605,
	293, 1605,
	294, 1605,
	295, 1605,
	296, 1605,
	297, 1605,
	298, 1605,
	299, 1605,
	300, 1605,
	301, 1605,
	302, 1605,
	303, 1605,
	304, 1605,
	305, 1605,
	306, 1605,
	307, 1605,
	308, 1605,
	309, 1605,
	310, 1605,
	311, 1605,
	312, 1605,
	314, 1605,
	316, 1605,
	317, 1605,
	318, 1605,
	319, 1605,
	320, 1605,
	321, 1605,
	322, 1605,
	323, 1605,
	324, 1605,
	325, 1605,
	326, 1605,
	327, 1605,
	328, 1605,
	329, 1605,
	330, 1605,
	332, 1605,
	333, 1605,
	335, 1605,
	337, 1605,
	338, 1605,
	340, 1605,
	341, 1605,
	342, 1605,
	343, 1605,
	344, 1605,
	347, 1605,
	350, 1605,
	351, 1605,
	352, 1605,
	353, 1605,
	356, 1605,
	357, 1605,
	358, 1605,
	360, 1605,
	362, 1605,
	363, 1605,
	364, 1605,
	365, 1605,
	366, 1605,
	367, 1605,
	368, 1605,
	369, 1605,
	370, 1605,
	371, 1605,
	372, 1605,
	373, 1605,
	374, 1605,
	376, 1605,
	377, 1605,
	378, 1605,
	379, 1605,
	380, 1605,
	381, 1605,
	382, 1605,
	383, 1605,
	384, 1605,
	385, 1605,
	386, 1605,
	387, 1605,
	388, 1605,
	389, 1605,
	390, 1605,
	392, 1605,
	393, 1605,
	395, 1605,
	396, 1605,
	397, 1605,
	398, 1605,
	399, 1605,
	400, 1605,
	401, 1605,
	402, 1605,
	403, 1605,
	404, 1605,
	405, 1605,
	406, 1605,
	407, 1605,
	409, 1605,
	411, 1605,
	412, 1605,
	413, 1605,
	419, 1605,
	420, 1605,
	422, 1605,
	423, 1605,
	424, 1605,
	425, 1605,
	426, 1605,
	427, 1605,
	428, 1605,
	429, 1605,
	430, 1605,
	431, 1605,
	433, 1605,
	434, 1605,
	435, 1605,
	437, 1605,
	438, 1605,
	439, 1605,
	440, 1605,
	441, 1605,
	442, 1605,
	443, 1605,
	445, 1605,
	446, 1605,
	447, 1605,
	448, 1605,
	449, 1605,
	450, 1605,
	451, 1605,
	452, 1605,
	453, 1605,
	454, 1605,
	455, 1605,
	456, 1605,
	458, 1605,
	459, 1605,
	460, 1605,
	461, 1605,
	462, 1605,
	463, 1605,
	465, 1605,
	466, 1605,
	467, 1605,
	468, 1605,
	469, 1605,
	470, 1605,
	472, 1605,
	473, 1605,
	474, 1605,
	475, 1605,
	476, 1605,
	477, 1605,
	478, 1605,
	479, 1605,
	481, 1605,
	483, 1605,
	484, 1605,
	485, 1605,
	486, 1605,
	487, 1605,
	488, 1605,
	489, 1605,
	490, 1605,
	491, 1605,
	492, 1605,
	493, 1605,
	494, 1605,
	495, 1605,
	496, 1605,
	497, 1605,
	498, 1605,
	500, 1605,
	501, 1605,
	503, 1605,
	504, 1605,
	506, 1605,
	507, 1605,
	508, 1605,
	509, 1605,
	510, 1605,
	511, 1605,
	512, 1605,
	513, 1605,
	515, 1605,
	516, 1605,
	517, 1605,
	518, 1605,
	519, 1605,
	521, 1605,
	523, 1605,
	524, 1605,
	525, 1605,
	526, 1605,
	527, 1605,
	528, 1605,
	530, 1605,
	531, 1605,
	532, 1605,
	533, 1605,
	535, 1605,
	536, 1605,
	539, 1605,
	540, 1605,
	541, 1605,
	542, 1605,
	543, 1605,
	544, 1605,
	545, 1605,
	547, 1605,
	550, 1605,
	551, 1605,
	552, 1605,
	553, 1605,
	554, 1605,
	555, 1605,
	557, 1605,
	558, 1605,
	559, 1605,
	560, 1605,
	561, 1605,
	562, 1605,
	567, 1605,
	568, 1605,
	569, 1605,
	570, 1605,
	571, 1605,
	572, 1605,
	-2, 0,
	-1, 158,
	1, 1456,
	131, 1456,
	251, 1456,
	334, 1456,
	392, 1456,
	401, 1456,
	576, 1456,
	605, 1456,
	-2, 0,
	-1, 160,
	1, 1456,
	605, 1456,
	-2, 0,
	-1, 161,
	1, 1456,
	605, 1456,
	-2, 0,
	-1, 162,
	1, 1456,
	520, 1456,
	605, 1456,
	-2, 0,
	-1, 191,
	152, 1573,
	172, 1573,
	185, 1573,
	243, 1573,
	276, 1573,
	345, 1573,
	355, 1573,
	537, 1573,
	-2, 1548,
	-1, 241,
	4, 1612,
	5, 1612,
	6, 1612,
	7, 1612,
	8, 1612,
	9, 1612,
	10, 1612,
	21, 1612,
	22, 1612,
	23, 1612,
	24, 1612,
	25, 1612,
	26, 1612,
	27, 1612,
	29, 1612,
	30, 1612,
	36, 1612,
	37, 1612,
	41, 1612,
	42, 1612,
	43, 1612,
	44, 1612,
	45, 1612,
	46, 1612,
	47, 1612,
	48, 1612,
	49, 1612,
	50, 1612,
	51, 1612,
	53, 1612,
	54, 1612,
	55, 1612,
	56, 1612,
	58, 1612,
	59, 1612,
	60, 1612,
	61, 1612,
	62, 1612,
	63, 1612,
	64, 1612,
	65, 1612,
	66, 1612,
	67, 1612,
	68, 1612,
	69, 1612,
	70, 1612,
	71, 1612,
	73, 1612,
	74, 1612,
	75, 1612,
	77, 1612,
	79, 1612,
	80, 1612,
	81, 1612,
	82, 1612,
	83, 1612,
	84, 1612,
	85, 1612,
	88, 1612,
	89, 1612,
	90, 1612,
	91, 1612,
	92, 1612,
	94, 1612,
	96, 1612,
	97, 1612,
	98, 1612,
	99, 1612,
	100, 1612,
	101, 1612,
	103, 1612,
	104, 1612,
	105, 1612,
	106, 1612,
	107, 1612,
	108, 1612,
	109, 1612,
	110, 1612,
	111, 1612,
	112, 1612,
	113, 1612,
	114, 1612,
	115, 1612,
	116, 1612,
	117, 1612,
	118, 1612,
	119, 1612,
	120, 1612,
	121, 1612,
	122, 1612,
	123, 1612,
	124, 1612,
	125, 1612,
	126, 1612,
	127, 1612,
	128, 1612,
	129, 1612,
	130, 1612,
	132, 1612,
	133, 1612,
	134, 1612,
	136, 1612,
	137, 1612,
	138, 1612,
	141, 1612,
	142, 1612,
	143, 1612,
	145, 1612,
	146, 1612,
	147, 1612,
	149, 1612,
	150, 1612,
	151, 1612,
	153, 1612,
	154, 1612,
	155, 1612,
	156, 1612,
	157, 1612,
	158, 1612,
	159, 1612,
	160, 1612,
	161, 1612,
	162, 1612,
	163, 1612,
	164, 1612,
	165, 1612,
	166, 1612,
	167, 1612,
	168, 1612,
	169, 1612,
	170, 1612,
	171, 1612,
	177, 1612,
	178, 1612,
	179, 1612,
	180, 1612,
	184, 1612,
	186, 1612,
	187, 1612,
	188, 1612,
	191, 1612,
	192, 1612,
	193, 1612,
	194, 1612,
	195, 1612,
	196, 1612,
	197, 1612,
	198, 1612,
	199, 1612,
	200, 1612,
	201, 1612,
	202, 1612,
	203, 1612,
	204, 1612,
	205, 1612,
	207, 1612,
	208, 1612,
	210, 1612,
	211, 1612,
	213, 1612,
	214, 1612,
	215, 1612,
	216, 1612,
	217, 1612,
	218, 1612,
	219, 1612,
	220, 1612,
	221, 1612,
	222, 1612,
	223, 1612,
	224, 1612,
	226, 1612,
	227, 1612,
	228, 1612,
	229, 1612,
	230, 1612,
	234, 1612,
	235, 1612,
	236, 1612,
	237, 1612,
	239, 1612,
	240, 1612,
	241, 1612,
	242, 1612,
	244, 1612,
	246, 1612,
	247, 1612,
	248, 1612,
	249, 1612,
	250, 1612,
	251, 1612,
	252, 1612,
	253, 1612,
	254, 1612,
	255, 1612,
	259, 1612,
	260, 1612,
	261, 1612,
	262, 1612,
	263, 1612,
	264, 1612,
	266, 1612,
	267, 1612,
	268, 1612,
	270, 1612,
	271, 1612,
	272, 1612,
	273, 1612,
	274, 1612,
	275, 1612,
	277, 1612,
	278, 1612,
	279, 1612,
	280, 1612,
	281, 1612,
	282, 1612,
	283, 1612,
	284, 1612,
	285, 1612,
	286, 1612,
	287, 1612,
	288, 1612,
	289, 1612,
	291, 1612,
	292, 1612,
	293, 1612,
	294, 1612,
	295, 1612,
	296, 1612,
	297, 1612,
	298, 1612,
	299, 1612,
	300, 1612,
	301, 1612,
	302, 1612,
	303, 1612,
	304, 1612,
	305, 1612,
	306, 1612,
	307, 1612,
	308, 1612,
	309, 1612,
	310, 1612,
	311, 1612,
	312, 1612,
	314, 1612,
	315, 1612,
	316, 1612,
	317, 1612,
	318, 1612,
	319, 1612,
	320, 1612,
	321, 1612,
	322, 1612,
	323, 1612,
	324, 1612,
	325, 1612,
	326, 1612,
	327, 1612,
	328, 1612,
	329, 1612,
	330, 1612,
	331, 1612,
	332, 1612,
	333, 1612,
	334, 1612,
	335, 1612,
	336, 1612,
	337, 1612,
	338, 1612,
	339, 1612,
	340, 1612,
	341, 1612,
	342, 1612,
	343, 1612,
	344, 1612,
	347, 1612,
	351, 1612,
	352, 1612,
	353, 1612,
	356, 1612,
	357, 1612,
	358, 1612,
	359, 1612,
	360, 1612,
	361, 1612,
	362, 1612,
	363, 1612,
	364, 1612,
	365, 1612,
	366, 1612,
	367, 1612,
	368, 1612,
	369, 1612,
	370, 1612,
	371, 1612,
	372, 1612,
	373, 1612,
	374, 1612,
	376, 1612,
	377, 1612,
	378, 1612,
	379, 1612,
	380, 1612,
	381, 1612,
	382, 1612,
	383, 1612,
	384, 1612,
	385, 1612,
	386, 1612,
	387, 1612,
	388, 1612,
	389, 1612,
	390, 1612,
	392, 1612,
	393, 1612,
	395, 1612,
	396, 1612,
	397, 1612,
	398, 1612,
	399, 1612,
	400, 1612,
	401, 1612,
	402, 1612,
	403, 1612,
	404, 1612,
	405, 1612,
	406, 1612,
	407, 1612,
	409, 1612,
	411, 1612,
	412, 1612,
	413, 1612,
	419, 1612,
	420, 1612,
	422, 1612,
	423, 1612,
	424, 1612,
	425, 1612,
	426, 1612,
	427, 1612,
	428, 1612,
	429, 1612,
	430, 1612,
	431, 1612,
	433, 1612,
	434, 1612,
	435, 1612,
	436, 1612,
	437, 1612,
	438, 1612,
	439, 1612,
	440, 1612,
	441, 1612,
	442, 1612,
	443, 1612,
	445, 1612,
	446, 1612,
	447, 1612,
	448, 1612,
	449, 1612,
	450, 1612,
	451, 1612,
	452, 1612,
	453, 1612,
	454, 1612,
	455, 1612,
	456, 1612,
	458, 1612,
	459, 1612,
	460, 1612,
	461, 1612,
	462, 1612,
	463, 1612,
	464, 1612,
	465, 1612,
	466, 1612,
	467, 1612,
	468, 1612,
	469, 1612,
	470, 1612,
	471, 1612,
	472, 1612,
	473, 1612,
	474, 1612,
	475, 1612,
	476, 1612,
	477, 1612,
	478, 1612,
	479, 1612,
	481, 1612,
	483, 1612,
	484, 1612,
	485, 1612,
	486, 1612,
	487, 1612,
	488, 1612,
	489, 1612,
	490, 1612,
	491, 1612,
	492, 1612,
	493, 1612,
	494, 1612,
	495, 1612,
	496, 1612,
	497, 1612,
	498, 1612,
	500, 1612,
	501, 1612,
	502, 1612,
	503, 1612,
	504, 1612,
	506, 1612,
	507, 1612,
	508, 1612,
	509, 1612,
	510, 1612,
	511, 1612,
	512, 1612,
	513, 1612,
	515, 1612,
	516, 1612,
	517, 1612,
	518, 1612,
	519, 1612,
	521, 1612,
	523, 1612,
	524, 1612,
	525, 1612,
	526, 1612,
	527, 1612,
	528, 1612,
	529, 1612,
	530, 1612,
	531, 1612,
	532, 1612,
	533, 1612,
	535, 1612,
	536, 1612,
	538, 1612,
	539, 1612,
	540, 1612,
	541, 1612,
	542, 1612,
	543, 1612,
	544, 1612,
	545, 1612,
	546, 1612,
	547, 1612,
	550, 1612,
	551, 1612,
	552, 1612,
	553, 1612,
	554, 1612,
	555, 1612,
	557, 1612,
	558, 1612,
	559, 1612,
	560, 1612,
	561, 1612,
	562, 1612,
	567, 1612,
	568, 1612,
	569, 1612,
	570, 1612,
	571, 1612,
	572, 1612,
	573, 1612,
	586, 1612,
	593, 1612,
	594, 1612,
	595, 1612,
	602, 1612,
	606, 1612,
	-2, 0,
	-1, 755,
	4, 1337,
	21, 1337,
	22, 1337,
	23, 1337,
	24, 1337,
	25, 1337,
	26, 1337,
	27, 1337,
	29, 1337,
	30, 1337,
	36, 1337,
	41, 1337,
	42, 1337,
	44, 1337,
	45, 1337,
	46, 1337,
	47, 1337,
	48, 1337,
	49, 1337,
	50, 1337,
	51, 1337,
	53, 1337,
	54, 1337,
	55, 1337,
	56, 1337,
	58, 1337,
	59, 1337,
	60, 1337,
	61, 1337,
	62, 1337,
	63, 1337,
	64, 1337,
	68, 1337,
	69, 1337,
	70, 1337,
	71, 1337,
	73, 1337,
	74, 1337,
	75, 1337,
	79, 1337,
	80, 1337,
	81, 1337,
	82, 1337,
	83, 1337,
	84, 1337,
	85, 1337,
	88, 1337,
	89, 1337,
	90, 1337,
	91, 1337,
	92, 1337,
	94, 1337,
	96, 1337,
	97, 1337,
	98, 1337,
	99, 1337,
	100, 1337,
	101, 1337,
	103, 1337,
	104, 1337,
	105, 1337,
	107, 1337,
	108, 1337,
	109, 1337,
	117, 1337,
	118, 1337,
	119, 1337,
	120, 1337,
	121, 1337,
	123, 1337,
	124, 1337,
	125, 1337,
	126, 1337,
	128, 1337,
	129, 1337,
	130, 1337,
	132, 1337,
	133, 1337,
	134, 1337,
	136, 1337,
	137, 1337,
	138, 1337,
	141, 1337,
	142, 1337,
	143, 1337,
	145, 1337,
	146, 1337,
	147, 1337,
	149, 1337,
	150, 1337,
	151, 1337,
	153, 1337,
	154, 1337,
	155, 1337,
	156, 1337,
	157, 1337,
	158, 1337,
	159, 1337,
	160, 1337,
	161, 1337,
	162, 1337,
	163, 1337,
	164, 1337,
	165, 1337,
	166, 1337,
	167, 1337,
	168, 1337,
	169, 1337,
	171, 1337,
	177, 1337,
	178, 1337,
	179, 1337,
	180, 1337,
	184, 1337,
	186, 1337,
	187, 1337,
	188, 1337,
	192, 1337,
	193, 1337,
	194, 1337,
	195, 1337,
	196, 1337,
	197, 1337,
	198, 1337,
	199, 1337,
	200, 1337,
	201, 1337,
	202, 1337,
	203, 1337,
	204, 1337,
	205, 1337,
	207, 1337,
	208, 1337,
	210, 1337,
	211, 1337,
	213, 1337,
	214, 1337,
	215, 1337,
	216, 1337,
	217, 1337,
	218, 1337,
	219, 1337,
	220, 1337,
	221, 1337,
	223, 1337,
	224, 1337,
	226, 1337,
	227, 1337,
	228, 1337,
	229, 1337,
	230, 1337,
	234, 1337,
	235, 1337,
	236, 1337,
	237, 1337,
	240, 1337,
	241, 1337,
	242, 1337,
	244, 1337,
	246, 1337,
	247, 1337,
	249, 1337,
	251, 1337,
	252, 1337,
	253, 1337,
	255, 1337,
	259, 1337,
	260, 1337,
	261, 1337,
	262, 1337,
	263, 1337,
	264, 1337,
	266, 1337,
	267, 1337,
	268, 1337,
	270, 1337,
	271, 1337,
	273, 1337,
	274, 1337,
	277, 1337,
	278, 1337,
	279, 1337,
	280, 1337,
	281, 1337,
	282, 1337,
	283, 1337,
	286, 1337,
	287, 1337,
	288, 1337,
	289, 1337,
	291, 1337,
	292, 1337,
	293, 1337,
	294, 1337,
	295, 1337,
	296, 1337,
	297, 1337,
	298, 1337,
	299, 1337,
	300, 1337,
	301, 1337,
	302, 1337,
	303, 1337,
	304, 1337,
	305, 1337,
	306, 1337,
	307, 1337,
	308, 1337,
	309, 1337,
	310, 1337,
	311, 1337,
	312, 1337,
	314, 1337,
	316, 1337,
	317, 1337,
	318, 1337,
	319, 1337,
	320, 1337,
	321, 1337,
	322, 1337,
	323, 1337,
	324, 1337,
	325, 1337,
	326, 1337,
	327, 1337,
	328, 1337,
	329, 1337,
	330, 1337,
	332, 1337,
	333, 1337,
	335, 1337,
	337, 1337,
	338, 1337,
	340, 1337,
	341, 1337,
	342, 1337,
	343, 1337,
	344, 1337,
	347, 1337,
	351, 1337,
	352, 1337,
	353, 1337,
	356, 1337,
	357, 1337,
	358, 1337,
	360, 1337,
	362, 1337,
	363, 1337,
	364, 1337,
	365, 1337,
	366, 1337,
	367, 1337,
	368, 1337,
	369, 1337,
	370, 1337,
	371, 1337,
	372, 1337,
	373, 1337,
	374, 1337,
	376, 1337,
	377, 1337,
	378, 1337,
	379, 1337,
	380, 1337,
	381, 1337,
	382, 1337,
	383, 1337,
	384, 1337,
	385, 1337,
	386, 1337,
	387, 1337,
	388, 1337,
	389, 1337,
	390, 1337,
	392, 1337,
	393, 1337,
	395, 1337,
	396, 1337,
	397, 1337,
	398, 1337,
	399, 1337,
	400, 1337,
	401, 1337,
	402, 1337,
	403, 1337,
	404, 1337,
	405, 1337,
	406, 1337,
	407, 1337,
	409, 1337,
	411, 1337,
	412, 1337,
	413, 1337,
	419, 1337,
	420, 1337,
	422, 1337,
	423, 1337,
	424, 1337,
	425, 1337,
	426, 1337,
	427, 1337,
	428, 1337,
	429, 1337,
	430, 1337,
	431, 1337,
	433, 1337,
	434, 1337,
	435, 1337,
	437, 1337,
	438, 1337,
	439, 1337,
	440, 1337,
	441, 1337,
	442, 1337,
	443, 1337,
	445, 1337,
	446, 1337,
	447, 1337,
	448, 1337,
	449, 1337,
	450, 1337,
	451, 1337,
	452, 1337,
	453, 1337,
	454, 1337,
	455, 1337,
	456, 1337,
	458, 1337,
	459, 1337,
	460, 1337,
	461, 1337,
	462, 1337,
	463, 1337,
	465, 1337,
	466, 1337,
	467, 1337,
	468, 1337,
	469, 1337,
	470, 1337,
	472, 1337,
	473, 1337,
	474, 1337,
	475, 1337,
	476, 1337,
	477, 1337,
	478, 1337,
	479, 1337,
	481, 1337,
	483, 1337,
	484, 1337,
	485, 1337,
	486, 1337,
	487, 1337,
	488, 1337,
	489, 1337,
	490, 1337,
	491, 1337,
	492, 1337,
	493, 1337,
	494, 1337,
	495, 1337,
	496, 1337,
	497, 1337,
	498, 1337,
	500, 1337,
	501, 1337,
	503, 1337,
	504, 1337,
	506, 1337,
	507, 1337,
	508, 1337,
	509, 1337,
	510, 1337,
	511, 1337,
	512, 1337,
	513, 1337,
	515, 1337,
	516, 1337,
	517, 1337,
	518, 1337,
	519, 1337,
	521, 1337,
	523, 1337,
	524, 1337,
	525, 1337,
	526, 1337,
	527, 1337,
	528, 1337,
	530, 1337,
	531, 1337,
	532, 1337,
	533, 1337,
	535, 1337,
	536, 1337,
	539, 1337,
	540, 1337,
	541, 1337,
	542, 1337,
	543, 1337,
	544, 1337,
	545, 1337,
	547, 1337,
	550, 1337,
	551, 1337,
	552, 1337,
	553, 1337,
	554, 1337,
	555, 1337,
	557, 1337,
	558, 1337,
	559, 1337,
	560, 1337,
	561, 1337,
	562, 1337,
	567, 1337,
	568, 1337,
	569, 1337,
	570, 1337,
	571, 1337,
	572, 1337,
	-2, 0,
	-1, 774,
	190, 2404,
	520, 2404,
	585, 2404,
	604, 2404,
	-2, 0,
	-1, 775,
	190, 2391,
	520, 2391,
	585, 2391,
	604, 2391,
	-2, 0,
	-1, 777,
	190, 2656,
	520, 2656,
	585, 2656,
	604, 2656,
	-2, 0,
	-1, 780,
	190, 2516,
	520, 2516,
	585, 2516,
	604, 2516,
	-2, 0,
	-1, 781,
	190, 2697,
	520, 2697,
	585, 2697,
	604, 2697,
	-2, 0,
	-1, 789,
	190, 2543,
	520, 2543,
	585, 2543,
	604, 2543,
	-2, 718,
	-1, 824,
	604, 2340,
	607, 2340,
	-2, 1018,
	-1, 825,
	604, 2342,
	607, 2342,
	-2, 1019,
	-1, 826,
	604, 2341,
	607, 2341,
	-2, 1020,
	-1, 827,
	607, 2266,
	-2, 1021,
	-1, 852,
	185, 273,
	-2, 0,
	-1, 876,
	43, 2313,
	-2, 0,
	-1, 877,
	557, 1315,
	-2, 1098,
	-1, 893,
	4, 1746,
	21, 1746,
	22, 1746,
	23, 1746,
	24, 1746,
	25, 1746,
	26, 1746,
	27, 1746,
	29, 1746,
	30, 1746,
	36, 1746,
	41, 1746,
	42, 1746,
	44, 1746,
	45, 1746,
	46, 1746,
	47, 1746,
	48, 1746,
	49, 1746,
	50, 1746,
	51, 1746,
	53, 1746,
	54, 1746,
	55, 1746,
	56, 1746,
	58, 1746,
	59, 1746,
	60, 1746,
	61, 1746,
	62, 1746,
	63, 1746,
	64, 1746,
	68, 1746,
	69, 1746,
	70, 1746,
	71, 1746,
	73, 1746,
	74, 1746,
	75, 1746,
	79, 1746,
	80, 1746,
	81, 1746,
	82, 1746,
	83, 1746,
	84, 1746,
	85, 1746,
	88, 1746,
	89, 1746,
	90, 1746,
	91, 1746,
	92, 1746,
	94, 1746,
	96, 1746,
	97, 1746,
	98, 1746,
	99, 1746,
	100, 1746,
	101, 1746,
	103, 1746,
	104, 1746,
	105, 1746,
	107, 1746,
	108, 1746,
	109, 1746,
	117, 1746,
	118, 1746,
	119, 1746,
	120, 1746,
	121, 1746,
	123, 1746,
	124, 1746,
	125, 1746,
	126, 1746,
	128, 1746,
	129, 1746,
	130, 1746,
	132, 1746,
	133, 1746,
	134, 1746,
	136, 1746,
	137, 1746,
	138, 1746,
	141, 1746,
	142, 1746,
	143, 1746,
	145, 1746,
	146, 1746,
	147, 1746,
	149, 1746,
	150, 1746,
	151, 1746,
	153, 1746,
	154, 1746,
	155, 1746,
	156, 1746,
	157, 1746,
	158, 1746,
	159, 1746,
	160, 1746,
	161, 1746,
	162, 1746,
	163, 1746,
	164, 1746,
	165, 1746,
	166, 1746,
	167, 1746,
	168, 1746,
	169, 1746,
	171, 1746,
	177, 1746,
	178, 1746,
	179, 1746,
	180, 1746,
	184, 1746,
	186, 1746,
	187, 1746,
	188, 1746,
	192, 1746,
	193, 1746,
	194, 1746,
	195, 1746,
	196, 1746,
	197, 1746,
	198, 1746,
	199, 1746,
	200, 1746,
	201, 1746,
	202, 1746,
	203, 1746,
	204, 1746,
	205, 1746,
	207, 1746,
	208, 1746,
	210, 1746,
	211, 1746,
	213, 1746,
	214, 1746,
	215, 1746,
	216, 1746,
	217, 1746,
	218, 1746,
	219, 1746,
	220, 1746,
	221, 1746,
	223, 1746,
	224, 1746,
	226, 1746,
	227, 1746,
	228, 1746,
	229, 1746,
	230, 1746,
	234, 1746,
	235, 1746,
	236, 1746,
	237, 1746,
	240, 1746,
	241, 1746,
	242, 1746,
	244, 1746,
	246, 1746,
	247, 1746,
	249, 1746,
	251, 1746,
	252, 1746,
	253, 1746,
	255, 1746,
	259, 1746,
	260, 1746,
	261, 1746,
	262, 1746,
	263, 1746,
	264, 1746,
	266, 1746,
	267, 1746,
	268, 1746,
	270, 1746,
	271, 1746,
	273, 1746,
	274, 1746,
	277, 1746,
	278, 1746,
	279, 1746,
	280, 1746,
	281, 1746,
	282, 1746,
	283, 1746,
	286, 1746,
	287, 1746,
	288, 1746,
	289, 1746,
	291, 1746,
	292, 1746,
	293, 1746,
	294, 1746,
	295, 1746,
	296, 1746,
	297, 1746,
	298, 1746,
	299, 1746,
	300, 1746,
	301, 1746,
	302, 1746,
	303, 1746,
	304, 1746,
	305, 1746,
	306, 1746,
	307, 1746,
	308, 1746,
	309, 1746,
	310, 1746,
	311, 1746,
	312, 1746,
	314, 1746,
	316, 1746,
	317, 1746,
	318, 1746,
	319, 1746,
	320, 1746,
	321, 1746,
	322, 1746,
	323, 1746,
	324, 1746,
	325, 1746,
	326, 1746,
	327, 1746,
	328, 1746,
	329, 1746,
	330, 1746,
	332, 1746,
	333, 1746,
	335, 1746,
	337, 1746,
	338, 1746,
	340, 1746,
	341, 1746,
	342, 1746,
	343, 1746,
	344, 1746,
	347, 1746,
	351, 1746,
	352, 1746,
	353, 1746,
	356, 1746,
	357, 1746,
	358, 1746,
	360, 1746,
	362, 1746,
	363, 1746,
	364, 1746,
	365, 1746,
	366, 1746,
	367, 1746,
	368, 1746,
	369, 1746,
	370, 1746,
	371, 1746,
	372, 1746,
	373, 1746,
	374, 1746,
	376, 1746,
	377, 1746,
	378, 1746,
	379, 1746,
	380, 1746,
	381, 1746,
	382, 1746,
	383, 1746,
	384, 1746,
	385, 1746,
	386, 1746,
	387, 1746,
	388, 1746,
	389, 1746,
	390, 1746,
	392, 1746,
	393, 1746,
	395, 1746,
	396, 1746,
	397, 1746,
	398, 1746,
	399, 1746,
	400, 1746,
	401, 1746,
	402, 1746,
	403, 1746,
	404, 1746,
	405, 1746,
	406, 1746,
	407, 1746,
	409, 1746,
	411, 1746,
	412, 1746,
	413, 1746,
	419, 1746,
	420, 1746,
	422, 1746,
	423, 1746,
	424, 1746,
	425, 1746,
	426, 1746,
	427, 1746,
	428, 1746,
	429, 1746,
	430, 1746,
	431, 1746,
	433, 1746,
	434, 1746,
	435, 1746,
	437, 1746,
	438, 1746,
	439, 1746,
	440, 1746,
	441, 1746,
	442, 1746,
	443, 1746,
	445, 1746,
	446, 1746,
	447, 1746,
	448, 1746,
	449, 1746,
	450, 1746,
	451, 1746,
	452, 1746,
	453, 1746,
	454, 1746,
	455, 1746,
	456, 1746,
	458, 1746,
	459, 1746,
	460, 1746,
	461, 1746,
	462, 1746,
	463, 1746,
	465, 1746,
	466, 1746,
	467, 1746,
	468, 1746,
	469, 1746,
	470, 1746,
	472, 1746,
	473, 1746,
	474, 1746,
	475, 1746,
	476, 1746,
	477, 1746,
	478, 1746,
	479, 1746,
	481, 1746,
	483, 1746,
	484, 1746,
	485, 1746,
	486, 1746,
	487, 1746,
	488, 1746,
	489, 1746,
	490, 1746,
	491, 1746,
	492, 1746,
	493, 1746,
	494, 1746,
	495, 1746,
	496, 1746,
	497, 1746,
	498, 1746,
	500, 1746,
	501, 1746,
	503, 1746,
	504, 1746,
	506, 1746,
	507, 1746,
	508, 1746,
	509, 1746,
	510, 1746,
	511, 1746,
	512, 1746,
	513, 1746,
	515, 1746,
	516, 1746,
	517, 1746,
	518, 1746,
	519, 1746,
	521, 1746,
	523, 1746,
	524, 1746,
	525, 1746,
	526, 1746,
	527, 1746,
	528, 1746,
	530, 1746,
	531, 1746,
	532, 1746,
	533, 1746,
	535, 1746,
	536, 1746,
	539, 1746,
	540, 1746,
	541, 1746,
	542, 1746,
	543, 1746,
	544, 1746,
	545, 1746,
	547, 1746,
	550, 1746,
	551, 1746,
	552, 1746,
	553, 1746,
	554, 1746,
	555, 1746,
	557, 1746,
	558, 1746,
	559, 1746,
	560, 1746,
	561, 1746,
	562, 1746,
	567, 1746,
	568, 1746,
	569, 1746,
	570, 1746,
	571, 1746,
	572, 1746,
	-2, 0,
	-1, 903,
	263, 423,
	-2, 0,
	-1, 980,
	397, 898,
	463, 898,
	504, 898,
	525, 898,
	-2, 0,
	-1, 981,
	397, 897,
	463, 897,
	504, 897,
	525, 897,
	-2, 829,
	-1, 985,
	1, 950,
	601, 950,
	603, 950,
	605, 950,
	-2, 0,
	-1, 987,
	1, 872,
	601, 872,
	603, 872,
	605, 872,
	-2, 0,
	-1, 988,
	1, 876,
	601, 876,
	603, 876,
	605, 876,
	-2, 0,
	-1, 989,
	1, 1017,
	185, 1017,
	601, 1017,
	603, 1017,
	605, 1017,
	-2, 0,
	-1, 997,
	1, 903,
	601, 903,
	603, 903,
	605, 903,
	-2, 0,
	-1, 1004,
	1, 950,
	601, 950,
	603, 950,
	605, 950,
	-2, 0,
	-1, 1005,
	1, 952,
	601, 952,
	603, 952,
	605, 952,
	-2, 0,
	-1, 1006,
	1, 955,
	601, 955,
	603, 955,
	605, 955,
	-2, 0,
	-1, 1012,
	1, 981,
	601, 981,
	603, 981,
	605, 981,
	-2, 0,
	-1, 1013,
	1, 983,
	601, 983,
	603, 983,
	605, 983,
	-2, 0,
	-1, 1018,
	1, 1011,
	601, 1011,
	603, 1011,
	605, 1011,
	-2, 0,
	-1, 1070,
	172, 1616,
	185, 1616,
	276, 1616,
	345, 1616,
	-2, 1552,
	-1, 1085,
	172, 1615,
	185, 1615,
	276, 1615,
	345, 1615,
	-2, 1549,
	-1, 1112,
	604, 2339,
	-2, 726,
	-1, 1141,
	5, 2331,
	602, 2329,
	-2, 2320,
	-1, 1149,
	5, 2352,
	602, 2349,
	-2, 2340,
	-1, 1150,
	5, 2353,
	602, 2350,
	-2, 2341,
	-1, 1158,
	604, 2337,
	-2, 2319,
	-1, 1159,
	602, 2781,
	-2, 2338,
	-1, 1182,
	602, 2780,
	-2, 2354,
	-1, 1183,
	5, 1821,
	-2, 2751,
	-1, 1184,
	5, 1822,
	-2, 2752,
	-1, 1185,
	5, 1823,
	-2, 2766,
	-1, 1186,
	5, 1824,
	-2, 2730,
	-1, 1187,
	5, 1825,
	-2, 2764,
	-1, 1188,
	5, 1833,
	-2, 2743,
	-1, 1189,
	5, 1820,
	-2, 2739,
	-1, 1190,
	5, 1820,
	-2, 2738,
	-1, 1191,
	5, 1820,
	-2, 2757,
	-1, 1192,
	5, 1831,
	-2, 2732,
	-1, 1193,
	5, 1836,
	-2, 2731,
	-1, 1194,
	5, 1838,
	-2, 2776,
	-1, 1197,
	5, 1860,
	-2, 2769,
	-1, 1198,
	5, 1852,
	-2, 2770,
	-1, 1199,
	5, 1860,
	-2, 2771,
	-1, 1200,
	5, 1856,
	-2, 2772,
	-1, 1201,
	5, 1806,
	-2, 2744,
	-1, 1202,
	5, 1807,
	-2, 2745,
	-1, 1203,
	5, 1808,
	-2, 2733,
	-1, 1231,
	5, 1843,
	-2, 2777,
	-1, 1232,
	5, 1844,
	-2, 2767,
	-1, 1233,
	5, 1845,
	558, 1845,
	-2, 2734,
	-1, 1234,
	5, 1846,
	558, 1846,
	-2, 2735,
	-1, 1271,
	602, 2349,
	-2, 2340,
	-1, 1272,
	602, 2350,
	-2, 2341,
	-1, 1368,
	190, 2697,
	520, 2697,
	585, 2697,
	604, 2697,
	-2, 0,
	-1, 1373,
	1, 702,
	605, 702,
	-2, 1464,
	-1, 1503,
	364, 2314,
	422, 2314,
	465, 2314,
	595, 2314,
	-2, 2304,
	-1, 1511,
	90, 2693,
	-2, 132,
	-1, 1512,
	90, 2449,
	-2, 133,
	-1, 1513,
	90, 2618,
	-2, 134,
	-1, 1520,
	606, 2314,
	-2, 2316,
	-1, 1528,
	1, 1312,
	427, 1276,
	465, 1276,
	579, 1276,
	601, 1312,
	603, 1312,
	605, 1312,
	-2, 1601,
	-1, 1534,
	206, 1409,
	225, 1409,
	435, 1409,
	-2, 0,
	-1, 1589,
	405, 1097,
	557, 1097,
	-2, 418,
	-1, 1606,
	43, 2312,
	-2, 1063,
	-1, 1613,
	1, 1312,
	601, 1312,
	603, 1312,
	605, 1312,
	-2, 1601,
	-1, 1621,
	4, 1337,
	21, 1337,
	22, 1337,
	23, 1337,
	24, 1337,
	25, 1337,
	26, 1337,
	27, 1337,
	29, 1337,
	30, 1337,
	36, 1337,
	41, 1337,
	42, 1337,
	44, 1337,
	45, 1337,
	46, 1337,
	47, 1337,
	48, 1337,
	49, 1337,
	50, 1337,
	51, 1337,
	53, 1337,
	54, 1337,
	55, 1337,
	56, 1337,
	58, 1337,
	59, 1337,
	60, 1337,
	61, 1337,
	62, 1337,
	63, 1337,
	64, 1337,
	68, 1337,
	69, 1337,
	70, 1337,
	71, 1337,
	73, 1337,
	74, 1337,
	75, 1337,
	79, 1337,
	80, 1337,
	81, 1337,
	82, 1337,
	83, 1337,
	84, 1337,
	85, 1337,
	88, 1337,
	89, 1337,
	90, 1337,
	91, 1337,
	92, 1337,
	94, 1337,
	96, 1337,
	97, 1337,
	98, 1337,
	99, 1337,
	100, 1337,
	101, 1337,
	103, 1337,
	104, 1337,
	105, 1337,
	107, 1337,
	108, 1337,
	109, 1337,
	117, 1337,
	118, 1337,
	119, 1337,
	120, 1337,
	121, 1337,
	123, 1337,
	124, 1337,
	125, 1337,
	126, 1337,
	128, 1337,
	129, 1337,
	130, 1337,
	132, 1337,
	133, 1337,
	134, 1337,
	136, 1337,
	137, 1337,
	138, 1337,
	141, 1337,
	142, 1337,
	143, 1337,
	145, 1337,
	146, 1337,
	147, 1337,
	149, 1337,
	150, 1337,
	151, 1337,
	153, 1337,
	154, 1337,
	155, 1337,
	156, 1337,
	157, 1337,
	158, 1337,
	159, 1337,
	160, 1337,
	161, 1337,
	162, 1337,
	163, 1337,
	164, 1337,
	165, 1337,
	166, 1337,
	167, 1337,
	168, 1337,
	169, 1337,
	177, 1337,
	178, 1337,
	179, 1337,
	180, 1337,
	184, 1337,
	186, 1337,
	187, 1337,
	188, 1337,
	192, 1337,
	193, 1337,
	194, 1337,
	195, 1337,
	196, 1337,
	197, 1337,
	198, 1337,
	199, 1337,
	200, 1337,
	201, 1337,
	202, 1337,
	203, 1337,
	204, 1337,
	205, 1337,
	207, 1337,
	208, 1337,
	210, 1337,
	211, 1337,
	213, 1337,
	214, 1337,
	215, 1337,
	216, 1337,
	217, 1337,
	218, 1337,
	219, 1337,
	220, 1337,
	221, 1337,
	223, 1337,
	224, 1337,
	226, 1337,
	227, 1337,
	228, 1337,
	229, 1337,
	230, 1337,
	235, 1337,
	236, 1337,
	237, 1337,
	240, 1337,
	241, 1337,
	242, 1337,
	244, 1337,
	246, 1337,
	247, 1337,
	249, 1337,
	251, 1337,
	252, 1337,
	253, 1337,
	255, 1337,
	259, 1337,
	260, 1337,
	261, 1337,
	262, 1337,
	263, 1337,
	264, 1337,
	266, 1337,
	267, 1337,
	268, 1337,
	270, 1337,
	271, 1337,
	273, 1337,
	274, 1337,
	277, 1337,
	278, 1337,
	279, 1337,
	280, 1337,
	281, 1337,
	282, 1337,
	283, 1337,
	286, 1337,
	287, 1337,
	288, 1337,
	289, 1337,
	291, 1337,
	292, 1337,
	293, 1337,
	294, 1337,
	295, 1337,
	296, 1337,
	297, 1337,
	298, 1337,
	299, 1337,
	300, 1337,
	301, 1337,
	302, 1337,
	303, 1337,
	304, 1337,
	305, 1337,
	306, 1337,
	307, 1337,
	308, 1337,
	309, 1337,
	310, 1337,
	311, 1337,
	312, 1337,
	314, 1337,
	316, 1337,
	317, 1337,
	318, 1337,
	319, 1337,
	320, 1337,
	321, 1337,
	322, 1337,
	323, 1337,
	324, 1337,
	325, 1337,
	326, 1337,
	327, 1337,
	328, 1337,
	329, 1337,
	330, 1337,
	332, 1337,
	333, 1337,
	337, 1337,
	338, 1337,
	340, 1337,
	341, 1337,
	342, 1337,
	343, 1337,
	344, 1337,
	347, 1337,
	349, 1337,
	351, 1337,
	352, 1337,
	353, 1337,
	356, 1337,
	357, 1337,
	358, 1337,
	360, 1337,
	362, 1337,
	363, 1337,
	364, 1337,
	365, 1337,
	366, 1337,
	367, 1337,
	368, 1337,
	369, 1337,
	370, 1337,
	371, 1337,
	372, 1337,
	373, 1337,
	374, 1337,
	376, 1337,
	377, 1337,
	378, 1337,
	379, 1337,
	380, 1337,
	381, 1337,
	382, 1337,
	383, 1337,
	384, 1337,
	385, 1337,
	386, 1337,
	387, 1337,
	388, 1337,
	389, 1337,
	390, 1337,
	392, 1337,
	393, 1337,
	395, 1337,
	396, 1337,
	397, 1337,
	398, 1337,
	399, 1337,
	400, 1337,
	401, 1337,
	402, 1337,
	403, 1337,
	404, 1337,
	405, 1337,
	406, 1337,
	407, 1337,
	409, 1337,
	411, 1337,
	412, 1337,
	413, 1337,
	419, 1337,
	420, 1337,
	422, 1337,
	423, 1337,
	424, 1337,
	425, 1337,
	426, 1337,
	427, 1337,
	428, 1337,
	429, 1337,
	430, 1337,
	431, 1337,
	433, 1337,
	434, 1337,
	435, 1337,
	437, 1337,
	438, 1337,
	439, 1337,
	440, 1337,
	441, 1337,
	442, 1337,
	443, 1337,
	445, 1337,
	446, 1337,
	447, 1337,
	448, 1337,
	449, 1337,
	450, 1337,
	451, 1337,
	452, 1337,
	453, 1337,
	454, 1337,
	455, 1337,
	456, 1337,
	458, 1337,
	459, 1337,
	460, 1337,
	461, 1337,
	462, 1337,
	463, 1337,
	465, 1337,
	466, 1337,
	467, 1337,
	468, 1337,
	469, 1337,
	470, 1337,
	472, 1337,
	473, 1337,
	474, 1337,
	475, 1337,
	476, 1337,
	477, 1337,
	478, 1337,
	479, 1337,
	481, 1337,
	483, 1337,
	484, 1337,
	485, 1337,
	486, 1337,
	487, 1337,
	488, 1337,
	489, 1337,
	490, 1337,
	491, 1337,
	492, 1337,
	493, 1337,
	494, 1337,
	495, 1337,
	496, 1337,
	497, 1337,
	498, 1337,
	500, 1337,
	501, 1337,
	503, 1337,
	504, 1337,
	506, 1337,
	507, 1337,
	508, 1337,
	509, 1337,
	510, 1337,
	511, 1337,
	512, 1337,
	513, 1337,
	515, 1337,
	516, 1337,
	517, 1337,
	518, 1337,
	519, 1337,
	521, 1337,
	523, 1337,
	524, 1337,
	525, 1337,
	526, 1337,
	527, 1337,
	528, 1337,
	530, 1337,
	531, 1337,
	532, 1337,
	533, 1337,
	535, 1337,
	536, 1337,
	539, 1337,
	540, 1337,
	541, 1337,
	542, 1337,
	543, 1337,
	544, 1337,
	545, 1337,
	547, 1337,
	550, 1337,
	551, 1337,
	552, 1337,
	553, 1337,
	554, 1337,
	555, 1337,
	557, 1337,
	558, 1337,
	559, 1337,
	560, 1337,
	561, 1337,
	562, 1337,
	567, 1337,
	568, 1337,
	569, 1337,
	570, 1337,
	571, 1337,
	572, 1337,
	-2, 0,
	-1, 1644,
	1, 563,
	601, 563,
	603, 563,
	605, 563,
	-2, 1572,
	-1, 1647,
	4, 2775,
	11, 2775,
	12, 2775,
	14, 2775,
	15, 2775,
	16, 2775,
	17, 2775,
	18, 2775,
	19, 2775,
	21, 2775,
	22, 2775,
	23, 2775,
	24, 2775,
	25, 2775,
	26, 2775,
	27, 2775,
	29, 2775,
	30, 2775,
	33, 2775,
	34, 2775,
	36, 2775,
	38, 2775,
	41, 2775,
	42, 2775,
	44, 2775,
	45, 2775,
	46, 2775,
	47, 2775,
	48, 2775,
	49, 2775,
	50, 2775,
	51, 2775,
	53, 2775,
	54, 2775,
	55, 2775,
	56, 2775,
	58, 2775,
	59, 2775,
	60, 2775,
	61, 2775,
	62, 2775,
	63, 2775,
	64, 2775,
	67, 2775,
	68, 2775,
	69, 2775,
	70, 2775,
	71, 2775,
	73, 2775,
	74, 2775,
	75, 2775,
	76, 2775,
	79, 2775,
	80, 2775,
	81, 2775,
	82, 2775,
	83, 2775,
	84, 2775,
	85, 2775,
	86, 2775,
	88, 2775,
	89, 2775,
	90, 2775,
	91, 2775,
	92, 2775,
	94, 2775,
	95, 2775,
	96, 2775,
	97, 2775,
	98, 2775,
	99, 2775,
	100, 2775,
	101, 2775,
	103, 2775,
	104, 2775,
	105, 2775,
	106, 2775,
	107, 2775,
	108, 2775,
	109, 2775,
	117, 2775,
	118, 2775,
	119, 2775,
	120, 2775,
	121, 2775,
	123, 2775,
	124, 2775,
	125, 2775,
	126, 2775,
	128, 2775,
	129, 2775,
	130, 2775,
	132, 2775,
	133, 2775,
	134, 2775,
	136, 2775,
	137, 2775,
	138, 2775,
	141, 2775,
	142, 2775,
	143, 2775,
	145, 2775,
	146, 2775,
	147, 2775,
	149, 2775,
	150, 2775,
	151, 2775,
	153, 2775,
	154, 2775,
	155, 2775,
	156, 2775,
	157, 2775,
	158, 2775,
	159, 2775,
	160, 2775,
	161, 2775,
	162, 2775,
	163, 2775,
	164, 2775,
	165, 2775,
	166, 2775,
	167, 2775,
	168, 2775,
	169, 2775,
	173, 2775,
	174, 2775,
	175, 2775,
	176, 2775,
	177, 2775,
	178, 2775,
	179, 2775,
	180, 2775,
	183, 2775,
	184, 2775,
	186, 2775,
	187, 2775,
	188, 2775,
	191, 2775,
	192, 2775,
	193, 2775,
	194, 2775,
	195, 2775,
	196, 2775,
	197, 2775,
	198, 2775,
	199, 2775,
	200, 2775,
	201, 2775,
	202, 2775,
	203, 2775,
	204, 2775,
	205, 2775,
	207, 2775,
	208, 2775,
	210, 2775,
	211, 2775,
	213, 2775,
	214, 2775,
	215, 2775,
	216, 2775,
	217, 2775,
	218, 2775,
	219, 2775,
	220, 2775,
	221, 2775,
	222, 2775,
	223, 2775,
	224, 2775,
	225, 2775,
	226, 2775,
	227, 2775,
	228, 2775,
	229, 2775,
	230, 2775,
	232, 2775,
	233, 2775,
	235, 2775,
	236, 2775,
	237, 2775,
	239, 2775,
	240, 2775,
	241, 2775,
	242, 2775,
	244, 2775,
	246, 2775,
	247, 2775,
	248, 2775,
	249, 2775,
	250, 2775,
	251, 2775,
	252, 2775,
	253, 2775,
	254, 2775,
	255, 2775,
	257, 2775,
	258, 2775,
	259, 2775,
	260, 2775,
	261, 2775,
	262, 2775,
	263, 2775,
	264, 2775,
	266, 2775,
	267, 2775,
	268, 2775,
	270, 2775,
	271, 2775,
	272, 2775,
	273, 2775,
	274, 2775,
	275, 2775,
	277, 2775,
	278, 2775,
	279, 2775,
	280, 2775,
	281, 2775,
	282, 2775,
	283, 2775,
	286, 2775,
	287, 2775,
	288, 2775,
	289, 2775,
	290, 2775,
	291, 2775,
	292, 2775,
	293, 2775,
	294, 2775,
	295, 2775,
	296, 2775,
	297, 2775,
	298, 2775,
	299, 2775,
	300, 2775,
	301, 2775,
	302, 2775,
	303, 2775,
	304, 2775,
	305, 2775,
	306, 2775,
	307, 2775,
	308, 2775,
	309, 2775,
	310, 2775,
	311, 2775,
	312, 2775,
	314, 2775,
	315, 2775,
	316, 2775,
	317, 2775,
	318, 2775,
	319, 2775,
	320, 2775,
	321, 2775,
	322, 2775,
	323, 2775,
	324, 2775,
	325, 2775,
	326, 2775,
	327, 2775,
	328, 2775,
	329, 2775,
	330, 2775,
	332, 2775,
	333, 2775,
	336, 2775,
	337, 2775,
	338, 2775,
	340, 2775,
	341, 2775,
	342, 2775,
	343, 2775,
	344, 2775,
	347, 2775,
	351, 2775,
	352, 2775,
	353, 2775,
	354, 2775,
	356, 2775,
	357, 2775,
	358, 2775,
	360, 2775,
	362, 2775,
	363, 2775,
	364, 2775,
	365, 2775,
	366, 2775,
	367, 2775,
	368, 2775,
	369, 2775,
	370, 2775,
	371, 2775,
	372, 2775,
	373, 2775,
	374, 2775,
	376, 2775,
	377, 2775,
	378, 2775,
	379, 2775,
	380, 2775,
	381, 2775,
	382, 2775,
	383, 2775,
	384, 2775,
	385, 2775,
	386, 2775,
	387, 2775,
	388, 2775,
	389, 2775,
	390, 2775,
	392, 2775,
	393, 2775,
	395, 2775,
	396, 2775,
	397, 2775,
	398, 2775,
	399, 2775,
	400, 2775,
	401, 2775,
	402, 2775,
	403, 2775,
	404, 2775,
	405, 2775,
	406, 2775,
	407, 2775,
	409, 2775,
	411, 2775,
	412, 2775,
	413, 2775,
	419, 2775,
	420, 2775,
	421, 2775,
	422, 2775,
	423, 2775,
	424, 2775,
	425, 2775,
	426, 2775,
	427, 2775,
	428, 2775,
	429, 2775,
	430, 2775,
	431, 2775,
	433, 2775,
	434, 2775,
	435, 2775,
	436, 2775,
	437, 2775,
	438, 2775,
	439, 2775,
	440, 2775,
	441, 2775,
	442, 2775,
	443, 2775,
	444, 2775,
	445, 2775,
	446, 2775,
	447, 2775,
	448, 2775,
	449, 2775,
	450, 2775,
	451, 2775,
	452, 2775,
	453, 2775,
	454, 2775,
	455, 2775,
	456, 2775,
	458, 2775,
	459, 2775,
	460, 2775,
	461, 2775,
	462, 2775,
	463, 2775,
	465, 2775,
	466, 2775,
	467, 2775,
	468, 2775,
	469, 2775,
	470, 2775,
	471, 2775,
	472, 2775,
	473, 2775,
	474, 2775,
	475, 2775,
	476, 2775,
	477, 2775,
	478, 2775,
	479, 2775,
	481, 2775,
	483, 2775,
	484, 2775,
	485, 2775,
	486, 2775,
	487, 2775,
	488, 2775,
	489, 2775,
	490, 2775,
	491, 2775,
	492, 2775,
	493, 2775,
	494, 2775,
	495, 2775,
	496, 2775,
	497, 2775,
	498, 2775,
	500, 2775,
	501, 2775,
	502, 2775,
	503, 2775,
	504, 2775,
	506, 2775,
	507, 2775,
	508, 2775,
	509, 2775,
	510, 2775,
	511, 2775,
	512, 2775,
	513, 2775,
	515, 2775,
	516, 2775,
	517, 2775,
	518, 2775,
	519, 2775,
	521, 2775,
	523, 2775,
	524, 2775,
	525, 2775,
	526, 2775,
	527, 2775,
	528, 2775,
	530, 2775,
	531, 2775,
	532, 2775,
	533, 2775,
	535, 2775,
	536, 2775,
	539, 2775,
	540, 2775,
	541, 2775,
	542, 2775,
	543, 2775,
	544, 2775,
	545, 2775,
	547, 2775,
	550, 2775,
	551, 2775,
	552, 2775,
	553, 2775,
	554, 2775,
	555, 2775,
	557, 2775,
	558, 2775,
	559, 2775,
	560, 2775,
	561, 2775,
	562, 2775,
	567, 2775,
	568, 2775,
	569, 2775,
	570, 2775,
	571, 2775,
	572, 2775,
	573, 2775,
	575, 2775,
	583, 2775,
	584, 2775,
	585, 2775,
	586, 2775,
	587, 2775,
	588, 2775,
	590, 2775,
	591, 2775,
	592, 2775,
	593, 2775,
	594, 2775,
	595, 2775,
	596, 2775,
	597, 2775,
	598, 2775,
	600, 2775,
	603, 2775,
	604, 2775,
	606, 2775,
	607, 2775,
	-2, 0,
	-1, 1652,
	190, 2656,
	520, 2656,
	585, 2656,
	604, 2656,
	-2, 0,
	-1, 1705,
	397, 898,
	463, 898,
	504, 898,
	525, 898,
	-2, 0,
	-1, 1716,
	1, 1409,
	601, 1409,
	603, 1409,
	605, 1409,
	-2, 0,
	-1, 1733,
	1, 893,
	601, 893,
	603, 893,
	605, 893,
	-2, 0,
	-1, 1734,
	1, 937,
	601, 937,
	603, 937,
	605, 937,
	-2, 0,
	-1, 1735,
	1, 945,
	601, 945,
	603, 945,
	605, 945,
	-2, 0,
	-1, 1738,
	1, 902,
	601, 902,
	603, 902,
	605, 902,
	-2, 0,
	-1, 1740,
	1, 908,
	601, 908,
	603, 908,
	605, 908,
	-2, 0,
	-1, 1743,
	1, 904,
	601, 904,
	603, 904,
	605, 904,
	-2, 0,
	-1, 1748,
	1, 918,
	601, 918,
	603, 918,
	605, 918,
	-2, 0,
	-1, 1779,
	1, 2639,
	601, 2639,
	603, 2639,
	604, 2639,
	605, 2639,
	-2, 0,
	-1, 1783,
	1, 992,
	601, 992,
	603, 992,
	605, 992,
	-2, 0,
	-1, 1800,
	1, 1459,
	605, 1459,
	-2, 1464,
	-1, 1803,
	172, 1615,
	185, 1615,
	276, 1615,
	345, 1615,
	-2, 1553,
	-1, 1903,
	152, 1574,
	172, 1574,
	185, 1574,
	243, 1574,
	276, 1574,
	345, 1574,
	355, 1574,
	537, 1574,
	-2, 2025,
	-1, 1964,
	603, 2200,
	-2, 0,
	-1, 1999,
	152, 1574,
	172, 1574,
	185, 1574,
	243, 1574,
	276, 1574,
	345, 1574,
	355, 1574,
	537, 1574,
	-2, 1707,
	-1, 2038,
	520, 2653,
	604, 2653,
	607, 2653,
	-2, 0,
	-1, 2055,
	602, 1848,
	-2, 1836,
	-1, 2087,
	190, 2653,
	604, 2653,
	607, 2653,
	-2, 0,
	-1, 2129,
	1, 704,
	605, 704,
	-2, 1464,
	-1, 2274,
	225, 268,
	-2, 2348,
	-1, 2275,
	225, 269,
	-2, 320,
	-1, 2384,
	1, 895,
	601, 895,
	603, 895,
	605, 895,
	-2, 0,
	-1, 2385,
	1, 939,
	601, 939,
	603, 939,
	605, 939,
	-2, 0,
	-1, 2386,
	1, 947,
	601, 947,
	603, 947,
	605, 947,
	-2, 0,
	-1, 2387,
	1, 994,
	601, 994,
	603, 994,
	605, 994,
	-2, 0,
	-1, 2428,
	1, 920,
	601, 920,
	603, 920,
	605, 920,
	-2, 0,
	-1, 2448,
	1, 977,
	601, 977,
	603, 977,
	605, 977,
	-2, 0,
	-1, 2495,
	442, 1642,
	443, 1642,
	-2, 1881,
	-1, 2526,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1901,
	-1, 2527,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1902,
	-1, 2528,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1903,
	-1, 2529,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1904,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1905,
	-1, 2531,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1906,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1907,
	-1, 2533,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1908,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1920,
	-1, 2546,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1921,
	-1, 2547,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1922,
	-1, 2551,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1929,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1933,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1941,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1942,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1943,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1944,
	-1, 2736,
	5, 2352,
	190, 2211,
	602, 2349,
	-2, 2340,
	-1, 2737,
	190, 2212,
	-2, 2726,
	-1, 2738,
	190, 2213,
	-2, 2542,
	-1, 2739,
	190, 2214,
	-2, 2422,
	-1, 2740,
	190, 2215,
	-2, 2480,
	-1, 2741,
	190, 2216,
	-2, 2527,
	-1, 2742,
	190, 2217,
	-2, 2651,
	-1, 2743,
	190, 2218,
	-2, 2008,
	-1, 2814,
	1, 1708,
	2, 1708,
	106, 1708,
	152, 1708,
	172, 1708,
	185, 1708,
	191, 1708,
	209, 1708,
	212, 1708,
	239, 1708,
	243, 1708,
	254, 1708,
	272, 1708,
	276, 1708,
	315, 1708,
	345, 1708,
	349, 1708,
	355, 1708,
	432, 1708,
	436, 1708,
	537, 1708,
	548, 1708,
	564, 1708,
	565, 1708,
	566, 1708,
	576, 1708,
	601, 1708,
	603, 1708,
	605, 1708,
	607, 1708,
	-2, 1707,
	-1, 2827,
	602, 2321,
	-2, 2335,
	-1, 2829,
	1, 337,
	564, 337,
	-2, 1601,
	-1, 2859,
	602, 1847,
	-2, 1837,
	-1, 3050,
	1, 1312,
	427, 1276,
	465, 1276,
	579, 1276,
	601, 1312,
	603, 1312,
	605, 1312,
	-2, 1601,
	-1, 3225,
	350, 1645,
	-2, 2765,
	-1, 3226,
	350, 1646,
	-2, 2636,
	-1, 3230,
	442, 2277,
	443, 2277,
	-2, 2006,
	-1, 3231,
	442, 2281,
	443, 2281,
	-2, 2007,
	-1, 3232,
	442, 2278,
	443, 2278,
	-2, 2006,
	-1, 3233,
	442, 2282,
	443, 2282,
	-2, 2007,
	-1, 3246,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1931,
	-1, 3247,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1935,
	-1, 3253,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1937,
	-1, 3479,
	1, 699,
	601, 699,
	603, 699,
	605, 699,
	-2, 1464,
	-1, 3662,
	43, 2312,
	-2, 1064,
	-1, 3667,
	1, 1312,
	601, 1312,
	603, 1312,
	605, 1312,
	-2, 1601,
	-1, 3770,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1939,
	-1, 3777,
	248, 0,
	250, 0,
	336, 0,
	-2, 1958,
	-1, 3845,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1987,
	-1, 3846,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1988,
	-1, 3847,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1989,
	-1, 3851,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1993,
	-1, 3852,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1994,
	-1, 3853,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1995,
	-1, 3901,
	602, 2322,
	-2, 2336,
	-1, 4092,
	604, 2882,
	-2, 1527,
	-1, 4146,
	248, 0,
	250, 0,
	336, 0,
	-2, 1959,
	-1, 4149,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1962,
	-1, 4150,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1964,
	-1, 4252,
	604, 2337,
	-2, 1347,
	-1, 4411,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1963,
	-1, 4412,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1965,
	-1, 4423,
	248, 0,
	-2, 1998,
	-1, 4606,
	248, 0,
	-2, 1999,
	-1, 4815,
	50, 0,
	222, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 2729,
}

const sqlPrivate = 57344

const sqlLast = 134195

var sqlAct = [...]int{
	277, 4755, 2098, 4998, 4641, 3651, 3135, 4929, 3384, 3122,
	4649, 4876, 4814, 4860, 4802, 2922, 4825, 4474, 4942, 4692,
	4713, 3650, 2271, 4765, 4786, 4768, 1264, 4826, 4745, 4754,
	4129, 4827, 4883, 4576, 1346, 1542, 4456, 4248, 2964, 4552,
	4523, 2178, 2769, 4539, 2348, 3810, 4813, 4610, 4373, 1275,
	4368, 4328, 2989, 4479, 3497, 4302, 4432, 3500, 3762, 4400,
	1141, 2505, 4076, 3684, 4355, 4084, 1095, 4561, 4677, 4357,
	4348, 1569, 4003, 715, 3239, 826, 2923, 2358, 3092, 2360,
	4249, 4378, 1339, 4229, 2574, 3678, 1812, 4031, 2513, 2111,
	3503, 3635, 4033, 4050, 1332, 1407, 3624, 2186, 1670, 3008,
	4428, 2042, 3717, 826, 1086, 786, 3111, 3147, 3106, 3640,
	3715, 3081, 3560, 3642, 3639, 2356, 3108, 1152, 3617, 3904,
	3616, 2506, 3430, 3407, 1341, 1500, 2321, 4185, 726, 3437,
	3399, 3390, 4128, 3367, 3142, 3123, 3137, 905, 3388, 1974,
	901, 4, 2258, 2807, 2654, 2260, 1094, 182, 3871, 3057,
	2214, 4861, 4611, 1950, 3522, 3366, 2652, 2510, 1911, 1881,
	2587, 1148, 3141, 2043, 2198, 3223, 1608, 2809, 2806, 3085,
	1507, 2259, 821, 1344, 896, 782, 1255, 2254, 3025, 2235,
	3093, 2242, 1388, 1145, 2166, 2170, 1318, 1147, 1800, 2643,
	2109, 2571, 1713, 2494, 2156, 1150, 2787, 2475, 1645, 269,
	2963, 2477, 2842, 1975, 3116, 759, 2308, 1668, 2231, 1329,
	823, 1611, 827, 828, 1375, 4714, 974, 702, 1571, 3643,
	2766, 724, 1994, 4025, 2909, 2841, 1945, 1258, 2646, 2624,
	1984, 1237, 2796, 2732, 1895, 1813, 2698, 1991, 1814, 767,
	2476, 182, 2268, 191, 1272, 2777, 1748, 2478, 1733, 1538,
	778, 192, 271, 1254, 270, 1643, 2334, 1508, 1195, 1636,
	4877, 2307, 4930, 2499, 719, 1126, 44, 1260, 43, 41,
	32, 1235, 2023, 1819, 3276, 1124, 716, 30, 727, 816,
	28, 1799, 1548, 995, 742, 3885, 877, 3886, 897, 3270,
	2100, 2100, 5009, 2100, 878, 5001, 2786, 3386, 4854, 3703,
	111, 4990, 2100, 73, 1270, 2786, 4989, 4963, 4961, 4448,
	2786, 4478, 4478, 922, 1090, 73, 3694, 900, 899, 2100,
	74, 2100, 4902, 4445, 1514, 3464, 2280, 832, 3462, 835,
	4862, 4851, 74, 4849, 4863, 2786, 79, 2786, 4846, 2121,
	3693, 4843, 4847, 4811, 1090, 4844, 4810, 2280, 79, 4809,
	2280, 3703, 4800, 3152, 4798, 832, 4478, 835, 4478, 4795,
	4790, 4789, 4763, 4564, 4478, 4478, 4478, 4733, 3337, 3338,
	4726, 2850, 2280, 4725, 2786, 1252, 88, 2786, 4718, 4691,
	4688, 4671, 2280, 2280, 4478, 4318, 4608, 4590, 88, 4554,
	2850, 4113, 4497, 4555, 4496, 4485, 2280, 4484, 2280, 2280,
	4209, 4478, 4477, 1238, 1238, 1267, 4478, 1080, 4439, 4413,
	2118, 4389, 2280, 2850, 1384, 3152, 4386, 903, 1739, 3238,
	3703, 4297, 3447, 1679, 4275, 2786, 1071, 2870, 2786, 903,
	49, 1266, 110, 4148, 1070, 1384, 4100, 2850, 94, 107,
	3710, 2121, 49, 4094, 110, 2357, 2779, 3710, 1827, 1828,
	94, 107, 4047, 3896, 3894, 3878, 4048, 3897, 3895, 2786,
	3794, 3790, 2846, 1296, 2280, 2786, 3875, 1085, 3709, 3383,
	3285, 1289, 3710, 2786, 1827, 1828, 3286, 2276, 1830, 3378,
	94, 3377, 3328, 2786, 3326, 2786, 3329, 3318, 3327, 3316,
	2786, 3319, 3287, 2786, 1091, 3151, 2786, 1858, 95, 3152,
	1241, 3133, 1242, 2121, 1830, 2344, 1827, 1828, 1239, 2118,
	95, 3132, 2893, 1829, 2121, 2344, 2786, 2849, 2839, 1268,
	2831, 2850, 2786, 2785, 2280, 2121, 4734, 2786, 2343, 1858,
	1883, 4612, 2344, 4603, 4591, 4564, 1830, 3152, 3875, 1829,
	3343, 2778, 2649, 3337, 3338, 4366, 4318, 3119, 2118, 1849,
	1290, 4276, 241, 4113, 4049, 2998, 2191, 2908, 1290, 2135,
	2099, 2115, 1883, 3087, 2279, 3018, 2786, 2906, 1970, 3337,
	3338, 1829, 3355, 3356, 3357, 1537, 3980, 3765, 3739, 1992,
	2247, 1715, 2823, 3695, 2822, 1827, 1828, 2821, 2820, 2819,
	1243, 1240, 1079, 1078, 1661, 1077, 3275, 1076, 1075, 1074,
	243, 1550, 3696, 241, 1827, 1828, 1550, 1860, 1861, 1862,
	1871, 1872, 1873, 1073, 1069, 1830, 1068, 1067, 3352, 3196,
	1835, 1066, 1065, 1064, 1063, 1062, 1864, 1858, 1061, 1060,
	1059, 1058, 1057, 1056, 1830, 2650, 1852, 1853, 1854, 1855,
	3337, 3338, 1055, 1877, 3352, 99, 1835, 3353, 242, 1054,
	1829, 243, 1053, 1052, 1034, 2101, 2101, 99, 2101, 972,
	1883, 235, 971, 970, 969, 968, 967, 2101, 966, 1829,
	236, 965, 964, 963, 962, 961, 960, 959, 1835, 1849,
	958, 957, 956, 955, 2101, 954, 2101, 953, 1846, 952,
	951, 950, 949, 948, 947, 1857, 1859, 193, 946, 242,
	4203, 190, 102, 945, 944, 106, 1549, 943, 1562, 942,
	941, 940, 939, 190, 102, 3343, 2651, 106, 2648, 938,
	937, 926, 1880, 925, 1514, 924, 2118, 1857, 1859, 920,
	919, 241, 912, 3693, 911, 910, 895, 894, 851, 904,
	4160, 3343, 1290, 241, 153, 2118, 850, 849, 193, 2420,
	848, 904, 839, 1850, 838, 837, 153, 1835, 836, 802,
	1351, 1150, 793, 792, 791, 773, 1852, 1853, 1854, 1855,
	265, 264, 263, 241, 262, 261, 1835, 1550, 260, 243,
	259, 258, 257, 256, 255, 1850, 153, 254, 1150, 1150,
	1150, 243, 253, 252, 251, 250, 249, 248, 247, 246,
	245, 3354, 1880, 244, 157, 3919, 1410, 4380, 3890, 3711,
	1410, 3433, 3343, 3298, 3281, 1868, 157, 1351, 1878, 194,
	3272, 243, 3353, 3381, 3176, 1857, 1859, 242, 1880, 3101,
	2681, 194, 3067, 2121, 2880, 2854, 2099, 2828, 1995, 242,
	235, 1874, 1150, 1875, 1150, 2118, 1150, 2813, 3353, 236,
	1844, 1845, 235, 1574, 1392, 1393, 1394, 3337, 3338, 1379,
	1880, 236, 2115, 2778, 2470, 3382, 1826, 1953, 1866, 242,
	2467, 2164, 2679, 241, 1952, 2653, 193, 241, 241, 1351,
	1290, 2665, 235, 1850, 1856, 2663, 1953, 2120, 898, 1550,
	4836, 236, 2018, 1952, 1521, 1922, 1794, 1880, 1544, 1574,
	1516, 1956, 1396, 1505, 1274, 4835, 1574, 1851, 1143, 1913,
	4832, 1683, 4812, 4797, 4699, 1150, 4615, 1150, 193, 3353,
	1951, 243, 1574, 1880, 1561, 243, 243, 1665, 4600, 1876,
	1150, 4594, 1150, 4592, 4469, 4427, 4387, 4365, 4215, 1851,
	1323, 1326, 4183, 4182, 4176, 4175, 4174, 1865, 3346, 3347,
	3339, 3340, 3341, 3342, 3344, 3345, 1371, 1340, 1880, 4167,
	1336, 4166, 4164, 1617, 1620, 1882, 4159, 4156, 4155, 242,
	1373, 4046, 3923, 242, 242, 4060, 3354, 3922, 1623, 1741,
	1574, 1403, 235, 1497, 1502, 3921, 235, 235, 3900, 1526,
	2647, 236, 3866, 3865, 1880, 236, 236, 1882, 3864, 3786,
	1150, 1556, 3354, 1150, 3781, 3428, 3374, 1503, 3365, 3336,
	1520, 1340, 1357, 3333, 1856, 3332, 4382, 1093, 193, 1920,
	3330, 2863, 3118, 193, 1251, 3325, 3324, 3323, 1365, 3343,
	1831, 1832, 1833, 1834, 1836, 1837, 3320, 1851, 3317, 3297,
	2324, 3280, 1540, 1539, 3337, 3338, 182, 182, 3273, 241,
	1606, 3271, 1915, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 3134, 2814, 1869, 2636, 2287, 1914, 1826, 1912,
	2285, 1684, 3978, 3354, 1648, 1650, 1913, 1825, 5004, 3103,
	1340, 1340, 832, 4061, 835, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 4951, 1882, 4950, 243, 4875, 4873,
	1276, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 3812,
	4756, 4676, 4662, 4657, 4656, 4655, 1379, 1646, 4635, 1379,
	4634, 4632, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344,
	3345, 4614, 4613, 3379, 1150, 4588, 2577, 4574, 4571, 4570,
	1150, 3349, 3350, 3351, 4565, 242, 4550, 1639, 3348, 3346,
	3347, 3339, 3340, 3341, 3342, 3344, 3345, 4549, 235, 4493,
	3454, 241, 4464, 241, 4425, 4408, 1867, 236, 4407, 1833,
	1834, 1836, 1837, 4351, 4344, 1804, 1841, 1842, 1848, 1870,
	1847, 1843, 4341, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 1689, 4319, 193, 4617, 4170, 1757, 1660, 1091,
	4169, 4202, 4181, 4114, 241, 3966, 3965, 3948, 3947, 243,
	3945, 243, 1798, 1678, 3881, 3869, 3343, 1555, 3776, 3348,
	3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345, 1900, 3712,
	4061, 4278, 3704, 3670, 3583, 3535, 2583, 3502, 73, 3456,
	3302, 3301, 3296, 3262, 3080, 1150, 1150, 1150, 1959, 1958,
	1957, 1150, 243, 1954, 1946, 74, 1944, 242, 1272, 242,
	1272, 2861, 2860, 2825, 2818, 1706, 2784, 2661, 1899, 4381,
	235, 79, 235, 2017, 1973, 1410, 1968, 1967, 1966, 236,
	1742, 236, 3102, 2191, 1965, 1964, 1150, 2005, 1972, 826,
	1351, 1827, 1828, 1981, 1963, 2060, 826, 1351, 1805, 1351,
	242, 1962, 1961, 1960, 1941, 1940, 193, 1939, 193, 1938,
	1937, 88, 2021, 235, 1936, 1935, 1934, 1933, 1270, 3425,
	1270, 1830, 236, 1801, 2039, 1932, 2105, 1809, 2033, 2107,
	1567, 2088, 1931, 2090, 1808, 2112, 1930, 1929, 1071, 2114,
	2029, 2027, 1928, 1927, 2117, 1803, 1070, 1926, 1915, 193,
	1901, 1898, 903, 1955, 1893, 2189, 1829, 1364, 1637, 1351,
	1294, 1285, 1822, 1823, 4616, 1150, 241, 110, 4354, 4211,
	4152, 2028, 2022, 94, 107, 3918, 3893, 3884, 3284, 2816,
	4446, 4213, 241, 1654, 3917, 1978, 1979, 1914, 2852, 1150,
	3452, 2002, 1896, 2123, 1642, 3337, 3338, 1410, 1880, 1669,
	3699, 2013, 2155, 1389, 1238, 2180, 4948, 2127, 182, 2155,
	4941, 1391, 2054, 2155, 243, 2990, 4658, 1947, 1948, 1267,
	4566, 1267, 4557, 4556, 2147, 2146, 2153, 4385, 2155, 2157,
	243, 2680, 4322, 95, 1091, 4321, 4320, 4277, 4205, 4119,
	4118, 3341, 3342, 3344, 3345, 1266, 1379, 1266, 4117, 3337,
	3338, 4116, 3355, 3356, 3357, 2162, 241, 1697, 4115, 3888,
	3887, 2968, 242, 3714, 2026, 3713, 3706, 241, 2126, 3705,
	4828, 4144, 241, 2678, 4898, 235, 1390, 4896, 242, 1385,
	4064, 1520, 2664, 2003, 236, 4562, 2662, 2000, 1384, 1953,
	1384, 235, 1995, 1993, 3763, 1796, 1952, 2141, 3992, 2034,
	236, 3538, 3322, 3321, 243, 4595, 2083, 4593, 1971, 2103,
	3244, 193, 2950, 1936, 1387, 243, 2225, 1936, 2244, 1705,
	243, 3963, 1050, 3569, 3352, 1997, 3504, 193, 2012, 1520,
	2011, 2010, 2008, 1268, 4468, 1268, 1574, 1574, 1924, 2007,
	1384, 832, 2006, 835, 3653, 1410, 3652, 2150, 832, 1758,
	835, 4054, 242, 2057, 3023, 2040, 1714, 2129, 2261, 4919,
	1091, 2349, 4553, 242, 2644, 235, 4858, 1051, 242, 2376,
	2125, 4839, 4824, 3625, 236, 3148, 235, 1715, 2262, 4068,
	99, 235, 4043, 4000, 3989, 236, 3971, 3736, 3386, 3477,
	236, 2354, 4429, 3814, 4833, 4488, 3290, 2859, 4460, 1381,
	3004, 193, 3633, 2221, 2325, 2229, 1969, 1949, 2318, 1616,
	1533, 1360, 193, 2190, 2239, 1322, 1921, 193, 4848, 4845,
	3689, 3343, 2995, 3939, 1250, 2948, 3339, 3340, 3341, 3342,
	3344, 3345, 4650, 3015, 2272, 2277, 190, 102, 3012, 1693,
	106, 3010, 2187, 4369, 1641, 2649, 4762, 4628, 3608, 3507,
	1574, 2158, 1574, 2148, 1574, 3337, 3338, 2130, 3958, 3115,
	4834, 4900, 3003, 2185, 2152, 4899, 241, 4491, 2224, 890,
	4487, 2485, 1574, 1574, 904, 4466, 2183, 3757, 4519, 153,
	4934, 2197, 1386, 3481, 2997, 1574, 3359, 2947, 2485, 2448,
	4013, 2445, 1089, 4265, 1583, 1591, 1048, 1574, 1349, 1574,
	1574, 1574, 2151, 2264, 2265, 2188, 1642, 2894, 1535, 5000,
	2266, 2434, 3175, 1755, 243, 3059, 4666, 2142, 4512, 4499,
	4311, 2219, 2432, 826, 1046, 1044, 4310, 1030, 3353, 1042,
	4295, 2483, 4294, 1391, 2184, 2230, 2314, 1756, 2650, 157,
	1382, 1039, 2375, 4011, 2446, 1150, 3337, 3338, 2483, 1383,
	1540, 1539, 1099, 3453, 194, 4263, 2319, 4012, 3483, 4010,
	4002, 3996, 242, 4260, 2912, 3995, 2218, 2234, 2215, 2331,
	2694, 2447, 3986, 3985, 2238, 235, 891, 3983, 3982, 2910,
	1150, 1592, 2368, 1088, 236, 3970, 1385, 2278, 2013, 3934,
	832, 3933, 835, 3614, 2352, 4528, 3613, 2232, 1390, 3574,
	2469, 3446, 3295, 1880, 3294, 3293, 2339, 3292, 2380, 3248,
	2317, 193, 3021, 2481, 3020, 1754, 1150, 4489, 1150, 2651,
	4461, 2648, 1691, 3017, 4279, 1150, 3006, 3343, 2060, 2060,
	1410, 2328, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1646, 1150,
	1646, 1150, 1150, 1150, 1150, 2300, 2299, 2341, 1837, 1374,
	2362, 2484, 3354, 1391, 1639, 3504, 2336, 4935, 2336, 3567,
	2333, 2337, 2233, 765, 2992, 1090, 765, 1150, 2484, 2262,
	2487, 1150, 1150, 1365, 2912, 2345, 1381, 2346, 2984, 1150,
	2349, 3537, 2474, 1150, 2233, 1150, 1150, 2233, 3343, 2910,
	2983, 2867, 2978, 1410, 1384, 2693, 2977, 2976, 2955, 1150,
	1150, 1150, 1150, 2405, 3353, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 2625, 2626, 2054, 2054, 2367, 1390, 2189,
	1091, 2853, 1091, 2954, 2482, 2384, 1641, 2625, 2641, 2395,
	2972, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	4259, 2482, 2925, 2916, 1150, 832, 2444, 835, 2653, 2840,
	2558, 1802, 3345, 1536, 2689, 4261, 1272, 2965, 2966, 1386,
	2515, 2511, 2512, 1410, 2965, 2966, 3112, 2428, 2965, 2966,
	2460, 2751, 1272, 2735, 2735, 2749, 2298, 2625, 1385, 1880,
	2770, 2772, 2498, 2159, 2160, 2644, 2776, 1707, 1150, 1410,
	4221, 3349, 3350, 3351, 1629, 3353, 1628, 2233, 3348, 3346,
	3347, 3339, 3340, 3341, 3342, 3344, 3345, 4406, 1737, 1737,
	2952, 2392, 2471, 4529, 2844, 2473, 1270, 1382, 2486, 2479,
	3568, 3737, 2472, 3942, 2569, 4527, 1383, 1983, 4936, 2589,
	2826, 4525, 1270, 1071, 2216, 1795, 1071, 1071, 1686, 2457,
	4899, 2502, 1036, 2640, 2503, 2504, 1753, 1087, 893, 892,
	1627, 2465, 1626, 4220, 714, 2567, 2057, 2057, 3354, 2928,
	1587, 2691, 2801, 2647, 1308, 2372, 2692, 1509, 1792, 2695,
	1880, 2696, 2697, 1600, 2385, 1734, 2875, 2901, 4524, 2573,
	709, 3014, 2879, 1715, 2459, 2573, 2227, 2793, 1541, 3155,
	1715, 764, 1351, 1351, 764, 2830, 2890, 1605, 1381, 2585,
	2191, 2347, 1767, 2002, 4257, 4526, 3480, 3191, 1238, 2222,
	2939, 3221, 1987, 3013, 2638, 1736, 1736, 1267, 3011, 2361,
	2363, 3009, 2438, 2426, 4643, 2393, 4965, 2889, 4937, 1703,
	2389, 2843, 2366, 1267, 2938, 1410, 2386, 1735, 2581, 1807,
	3259, 4830, 2815, 1266, 2374, 2579, 2377, 2378, 2379, 3354,
	800, 2792, 2847, 2217, 1363, 1692, 1687, 2383, 182, 1266,
	1990, 2855, 2199, 2191, 2761, 2744, 2731, 4262, 2883, 1091,
	2060, 3257, 2774, 2048, 3236, 1985, 3967, 2190, 2882, 1091,
	2866, 1386, 1379, 1091, 2800, 2203, 2805, 2794, 1040, 2811,
	2812, 2798, 2799, 1988, 2782, 2783, 2338, 2563, 1955, 2000,
	766, 1384, 2433, 766, 3746, 1340, 3347, 3339, 3340, 3341,
	3342, 3344, 3345, 2431, 2886, 2897, 1040, 1040, 1410, 2564,
	3745, 1041, 2891, 3955, 2565, 4945, 3193, 2555, 2570, 3803,
	1771, 1268, 935, 1040, 1351, 2189, 1986, 2899, 4939, 1382,
	1612, 2653, 2200, 4309, 3984, 3981, 3926, 1268, 1383, 4645,
	3800, 2917, 3913, 3620, 1340, 1150, 1150, 2862, 1150, 2874,
	3612, 2927, 2885, 2877, 798, 2878, 1947, 1948, 3565, 2188,
	3401, 3016, 1091, 2915, 2900, 2915, 2975, 2953, 4405, 2892,
	2865, 2951, 826, 2869, 1351, 1340, 1340, 2054, 1750, 2884,
	2914, 4912, 888, 1610, 887, 2898, 2284, 2283, 3339, 3340,
	3341, 3342, 3344, 3345, 2466, 2973, 3007, 3202, 840, 3235,
	2456, 4255, 3084, 3254, 4921, 1574, 2911, 4831, 4920, 2895,
	3228, 3229, 2838, 4966, 3126, 4888, 4258, 3740, 1574, 2942,
	1574, 3801, 2957, 2958, 847, 4134, 4133, 3143, 3621, 4022,
	3255, 3099, 3953, 2956, 3260, 1280, 3554, 1574, 3687, 3618,
	3686, 1589, 2204, 2988, 2171, 2458, 2974, 1989, 3062, 2172,
	1282, 2920, 3199, 3064, 2946, 2100, 2982, 2930, 2933, 3546,
	4740, 1351, 2257, 1351, 2213, 2967, 2969, 2970, 2971, 1503,
	3022, 3156, 3157, 927, 2226, 3051, 3052, 1277, 2653, 1902,
	4036, 4451, 3163, 3164, 3165, 1150, 2391, 4023, 2991, 2553,
	4034, 2228, 2556, 4730, 3555, 3177, 2981, 3178, 2926, 928,
	2245, 2980, 2986, 2996, 2566, 3095, 1520, 3002, 2205, 2206,
	2248, 3205, 4829, 1384, 2568, 2255, 3149, 3547, 2057, 710,
	2256, 3686, 2223, 1283, 4938, 2979, 4804, 2225, 4805, 4651,
	4021, 2245, 3968, 2201, 2913, 3060, 1586, 3553, 3153, 4673,
	1307, 3054, 2552, 3173, 3158, 3491, 3159, 3172, 3140, 1612,
	182, 1150, 1540, 3065, 3586, 3146, 3145, 1150, 1150, 3400,
	3545, 4256, 3182, 2173, 3184, 2220, 3186, 3482, 3128, 1768,
	4943, 3078, 799, 4038, 2171, 1528, 3088, 2202, 3130, 2172,
	2653, 2177, 3089, 2190, 3519, 2241, 1765, 763, 3179, 1716,
	2912, 1281, 832, 2226, 835, 1534, 2211, 2227, 1292, 3055,
	3110, 711, 3121, 3131, 4037, 2931, 2228, 3207, 4644, 3209,
	4338, 1942, 2240, 1150, 1150, 3210, 3523, 3450, 3212, 1150,
	3256, 801, 4402, 1646, 832, 797, 835, 3150, 3250, 2249,
	3258, 1688, 1150, 1150, 2572, 1037, 3605, 1613, 1150, 1150,
	3129, 3518, 3053, 3170, 1150, 3204, 2236, 2245, 841, 842,
	712, 2427, 713, 1520, 2212, 4130, 2174, 2179, 4887, 3181,
	2194, 3183, 3060, 3185, 1340, 3187, 3188, 3180, 3619, 2181,
	3525, 2829, 4418, 4868, 4909, 2188, 3201, 1766, 4244, 2224,
	4944, 4728, 2580, 4869, 1702, 1704, 2388, 4773, 3197, 1150,
	1150, 1150, 4289, 2173, 1806, 1150, 4032, 2210, 3300, 2207,
	732, 3251, 4967, 1892, 2237, 1150, 4686, 3216, 936, 1362,
	1769, 2177, 4237, 2382, 2797, 2635, 4946, 1520, 2195, 1520,
	3227, 2810, 1150, 929, 930, 4729, 1090, 3816, 4954, 4353,
	3217, 3283, 3278, 3279, 3524, 3218, 4124, 3282, 2554, 2175,
	4358, 4952, 4314, 4135, 3222, 2498, 2987, 1082, 3237, 1022,
	1987, 1983, 3914, 3492, 3954, 1297, 4036, 3759, 3219, 4678,
	4359, 2193, 1721, 4401, 4693, 4778, 4034, 4238, 4712, 1816,
	4573, 4313, 4679, 1084, 2208, 4312, 4082, 4035, 3674, 2837,
	2306, 1980, 3203, 1295, 3529, 1288, 2174, 2179, 2181, 701,
	4059, 3274, 1817, 844, 843, 3855, 2048, 2048, 1990, 4179,
	4131, 2501, 2192, 1108, 2143, 1770, 4680, 3249, 4972, 1278,
	3438, 4486, 4582, 2795, 1150, 1150, 1150, 1150, 3498, 1083,
	2101, 3727, 4627, 4083, 1150, 1150, 1150, 4006, 3987, 1150,
	4339, 1988, 3940, 3938, 3725, 1816, 1987, 3675, 3666, 1150,
	1272, 1410, 3527, 3906, 3718, 1150, 3799, 1150, 1811, 4038,
	2252, 3393, 3394, 3494, 3100, 3094, 1272, 3082, 845, 846,
	2332, 4886, 1279, 4694, 2326, 1023, 2320, 913, 2312, 2175,
	2292, 3376, 4682, 1815, 1410, 2291, 3930, 2491, 1580, 2140,
	4037, 2959, 1299, 3870, 1990, 3528, 1272, 3395, 3760, 1410,
	4746, 772, 3289, 918, 2915, 4681, 4715, 3907, 2788, 1985,
	1270, 1351, 4403, 2932, 2439, 2136, 1816, 4085, 2250, 4374,
	3079, 2060, 3431, 4683, 3162, 1410, 1270, 1988, 2181, 3418,
	4136, 931, 932, 2373, 3908, 1351, 3905, 1310, 4545, 4543,
	4867, 1351, 2791, 4463, 3510, 3445, 3883, 3467, 1091, 1815,
	3469, 3470, 1817, 3720, 3398, 3473, 1270, 3474, 3506, 3475,
	3505, 2251, 3242, 1150, 2138, 3220, 3397, 2365, 3719, 3460,
	1986, 1744, 1743, 39, 2355, 2289, 1738, 1150, 3910, 2836,
	2180, 2176, 3486, 2790, 4233, 2835, 4356, 1351, 2789, 4234,
	2834, 2833, 4042, 2060, 2832, 3487, 3488, 3403, 1635, 4239,
	3856, 3432, 1690, 3086, 1022, 1989, 1088, 4638, 2139, 3857,
	1150, 1267, 4329, 4180, 2180, 4137, 3508, 1633, 1817, 3512,
	1815, 934, 1028, 1027, 3728, 1351, 2492, 1267, 1084, 3478,
	4971, 3424, 2936, 3440, 3441, 3442, 3443, 1266, 2054, 3404,
	3471, 4236, 1379, 3484, 3416, 3436, 3417, 1351, 1892, 1351,
	3419, 3420, 3387, 1266, 3371, 3372, 3373, 1267, 4240, 3509,
	3716, 3402, 3514, 4035, 4055, 3516, 3946, 2960, 2961, 1024,
	2244, 2804, 1621, 4695, 2330, 3457, 3458, 1410, 3459, 2244,
	1022, 3628, 4475, 1266, 3451, 1622, 3931, 4547, 1351, 3935,
	4906, 1989, 1351, 2027, 4449, 3058, 3589, 3463, 3591, 3495,
	4458, 3595, 3448, 3154, 1084, 3601, 3063, 3422, 3061, 3423,
	2054, 2176, 3540, 2359, 3570, 2261, 1696, 4752, 1574, 1722,
	1023, 4639, 3587, 4471, 4470, 1268, 4759, 914, 915, 4743,
	4186, 1351, 1574, 3468, 1574, 3872, 2660, 4910, 1410, 3909,
	1788, 1268, 3472, 4780, 4911, 826, 1574, 4459, 4908, 3566,
	1520, 1520, 3544, 3479, 3439, 4850, 3501, 1574, 4669, 4659,
	4546, 4424, 4178, 3563, 3485, 3622, 3638, 1790, 1787, 1351,
	4041, 1268, 3368, 3558, 4684, 4531, 3584, 3775, 2048, 2057,
	4685, 3726, 3721, 3722, 3723, 3724, 1272, 3734, 4235, 4476,
	3409, 771, 1025, 3682, 3733, 1785, 1023, 3526, 3576, 1762,
	3658, 1760, 3575, 3536, 3143, 2452, 1732, 1730, 4753, 2430,
	1728, 1574, 4640, 3143, 3609, 3665, 3549, 1081, 3461, 1026,
	3331, 3261, 1520, 1574, 3552, 1574, 3083, 4245, 4246, 3005,
	3623, 2994, 3626, 2993, 2949, 3680, 2864, 2461, 2350, 3550,
	2020, 1634, 2016, 3551, 1791, 1726, 1270, 2317, 1672, 3702,
	3577, 2057, 2397, 4508, 3936, 3691, 3490, 3585, 3673, 4507,
	1632, 2270, 3369, 3610, 933, 3994, 3598, 1028, 1027, 2982,
	3755, 1029, 1410, 3604, 1724, 1410, 3754, 3738, 3681, 1718,
	1811, 3195, 1712, 1710, 3194, 1631, 3410, 3161, 2480, 3676,
	1749, 2400, 3611, 2311, 2290, 2089, 3542, 1925, 1685, 1604,
	2659, 4823, 4290, 3615, 3991, 3748, 3990, 4296, 4274, 1150,
	4742, 4372, 4301, 4287, 1024, 1150, 1150, 3630, 3556, 1150,
	1150, 1150, 4226, 1150, 3683, 916, 917, 3663, 2957, 3661,
	1038, 3731, 1150, 2060, 3662, 3588, 3729, 4225, 3408, 3415,
	4081, 1150, 4072, 1028, 1027, 4009, 1150, 1267, 4884, 182,
	182, 3688, 1410, 3988, 3796, 1789, 1786, 3961, 3690, 3596,
	3697, 1150, 3679, 3602, 3959, 3753, 2171, 3750, 3937, 1410,
	3752, 2172, 3414, 1266, 3669, 1340, 3756, 3700, 3701, 2060,
	2060, 1150, 1150, 1784, 1150, 1150, 1150, 1761, 2454, 1759,
	1024, 3664, 2429, 2453, 1731, 1729, 3654, 832, 1727, 835,
	3113, 3105, 1150, 3098, 3090, 4367, 1150, 3076, 2060, 2060,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	3761, 1150, 3732, 1725, 3778, 2396, 3828, 1025, 3829, 1150,
	1150, 2060, 3749, 3075, 2269, 3742, 1150, 3743, 3056, 3744,
	2054, 2881, 3788, 3789, 2876, 2288, 2286, 1150, 3758, 2263,
	2246, 1268, 1723, 2209, 1026, 2196, 2182, 1717, 1272, 1272,
	1711, 1709, 1150, 1630, 2122, 1520, 2119, 2116, 2113, 3411,
	3412, 3413, 2108, 2106, 2102, 2173, 2093, 4881, 3867, 1091,
	3599, 1043, 1045, 1047, 2032, 2255, 2054, 2054, 1247, 1820,
	4900, 3783, 3785, 2177, 1410, 2144, 3240, 4358, 2132, 2133,
	4637, 3806, 3213, 1025, 3902, 3795, 1029, 1351, 1351, 3211,
	3802, 3804, 3805, 3811, 1248, 2054, 2054, 4359, 1270, 1270,
	2464, 3049, 1351, 1351, 3825, 1351, 3818, 3889, 4792, 4388,
	1026, 3928, 2511, 3819, 3826, 3929, 4308, 4217, 3827, 3144,
	2163, 3911, 3912, 1585, 1150, 4584, 2937, 4577, 2054, 4093,
	3831, 2387, 2912, 2191, 2329, 3833, 3924, 3925, 2912, 3927,
	3859, 2511, 3834, 1150, 3874, 1330, 2462, 2910, 2174, 2179,
	1782, 1783, 1331, 2934, 2424, 3960, 2419, 3962, 4791, 2394,
	3868, 2057, 1029, 3860, 4266, 3606, 182, 1708, 4303, 3879,
	3880, 4602, 3241, 4473, 3863, 4187, 1150, 1150, 4165, 3600,
	1821, 2940, 3876, 3877, 3521, 2941, 1827, 1828, 1827, 1828,
	2962, 1824, 2463, 3631, 1358, 1298, 4903, 4894, 4005, 1267,
	1267, 2131, 4859, 266, 3659, 1249, 3891, 2057, 2057, 3074,
	2495, 4069, 2313, 2941, 1369, 3727, 1830, 3941, 3972, 1331,
	4004, 3012, 3010, 3019, 1150, 1266, 1266, 3001, 3725, 2945,
	1331, 2175, 3892, 2999, 4008, 2943, 2057, 2057, 3718, 4472,
	3000, 3920, 2944, 4751, 4735, 4706, 1574, 1158, 4700, 1574,
	698, 1829, 4636, 1829, 1351, 4568, 4538, 4450, 3708, 4079,
	4071, 4058, 3899, 3668, 3120, 2775, 4001, 2128, 2041, 2057,
	3730, 4940, 2985, 1532, 1531, 3449, 2169, 3977, 3979, 2060,
	2181, 4970, 4782, 3976, 3337, 3338, 4782, 4783, 4702, 1827,
	1828, 4783, 1514, 273, 273, 273, 4157, 704, 705, 2655,
	720, 704, 720, 730, 3916, 1356, 770, 4914, 2904, 2905,
	790, 2904, 4007, 1268, 1268, 796, 3964, 2902, 2903, 1695,
	3969, 1574, 273, 3993, 2902, 1694, 2690, 1150, 1764, 4078,
	4569, 1763, 4024, 4026, 2167, 1272, 1150, 3720, 4051, 4513,
	4305, 4095, 4300, 909, 4299, 4153, 1574, 1574, 1574, 3126,
	273, 4102, 3719, 1574, 1574, 1574, 2752, 2957, 3915, 3807,
	3593, 3590, 1919, 1918, 4040, 3215, 3143, 2468, 4958, 4922,
	4739, 4738, 4086, 4065, 1574, 4737, 4668, 2168, 4667, 4030,
	1410, 4020, 4039, 4619, 4541, 4028, 1547, 4503, 1554, 4090,
	1560, 4447, 4087, 4106, 4053, 1270, 2054, 4444, 4442, 2048,
	4044, 4346, 4017, 4326, 4264, 4057, 1410, 4212, 3728, 1150,
	1150, 4029, 4109, 4099, 4045, 1150, 1150, 2060, 3957, 3949,
	1150, 1150, 3672, 1150, 3671, 3515, 3466, 4089, 1150, 1340,
	4070, 3200, 4110, 3192, 3169, 3168, 4075, 3167, 3166, 1150,
	3104, 3077, 3501, 2935, 2872, 2868, 2857, 1408, 2856, 2845,
	4073, 1510, 2584, 2455, 2425, 1150, 2418, 2417, 2416, 1659,
	2888, 1664, 2415, 2176, 2414, 4151, 4091, 4088, 2327, 4096,
	2301, 2048, 4122, 4097, 1677, 2297, 1682, 4120, 2296, 4138,
	4101, 2295, 2294, 704, 704, 4108, 2293, 4107, 4121, 2096,
	2095, 273, 2094, 2092, 2031, 1781, 1267, 1780, 1719, 1599,
	1598, 1597, 1596, 1595, 2317, 4139, 1594, 1593, 1588, 1584,
	1582, 1581, 275, 1525, 1524, 1523, 1272, 1905, 4147, 1401,
	1400, 1910, 1266, 1399, 1272, 4018, 4132, 1398, 1410, 1410,
	1397, 1410, 1361, 1317, 2054, 1316, 1315, 2057, 1272, 1314,
	1313, 1740, 1312, 1311, 1309, 1304, 1303, 1302, 1301, 1574,
	1574, 1300, 902, 8, 1230, 2134, 1049, 4192, 1035, 4642,
	1410, 4243, 4242, 4241, 3431, 3726, 3721, 3722, 3723, 3724,
	2451, 93, 1590, 864, 87, 2253, 1270, 3956, 4853, 1001,
	4127, 4779, 4672, 1565, 1270, 872, 1272, 4761, 1272, 4218,
	4219, 4067, 3517, 3024, 2399, 1720, 2401, 3426, 1270, 2817,
	4727, 4161, 3050, 3299, 4609, 4177, 4417, 2658, 1923, 3380,
	1268, 1351, 4250, 89, 4250, 4267, 1134, 1180, 4337, 4336,
	4227, 1410, 3943, 1351, 4254, 4253, 1351, 4195, 4197, 3641,
	4333, 4332, 2045, 2047, 1098, 1413, 4803, 2145, 1140, 2161,
	2154, 4269, 4270, 1410, 4189, 4190, 1270, 4188, 1270, 4194,
	4184, 4191, 3091, 2858, 2734, 4193, 182, 1157, 1154, 4268,
	4201, 2049, 2051, 4204, 1156, 4304, 1155, 4306, 2050, 1943,
	1153, 2044, 4077, 3124, 3698, 2057, 1640, 1267, 4210, 1638,
	4208, 1003, 1574, 1574, 2149, 1267, 2578, 4224, 2642, 4222,
	3288, 4216, 1916, 1114, 1136, 2639, 1293, 1125, 1113, 1267,
	3406, 3385, 3685, 1266, 4330, 3898, 2490, 1112, 882, 3334,
	1351, 1266, 2645, 1284, 2758, 2750, 2746, 3476, 3114, 1797,
	4431, 1894, 1410, 4014, 3125, 1266, 4015, 1574, 1793, 1395,
	3405, 1118, 2576, 1907, 4327, 4307, 3266, 2500, 3692, 3429,
	2851, 4288, 4298, 4785, 3815, 3198, 3427, 1267, 2305, 1267,
	4283, 1246, 4286, 1245, 1291, 1244, 1574, 1574, 1574, 1574,
	1574, 4324, 4767, 4764, 2243, 4364, 4340, 4317, 3636, 3637,
	2137, 1410, 2896, 1266, 2588, 1266, 4323, 3655, 4375, 1130,
	1519, 4325, 2443, 1150, 1150, 1150, 3391, 4056, 4316, 4361,
	4315, 1268, 1601, 795, 4480, 1142, 1879, 3045, 4376, 1268,
	3044, 1410, 4331, 4342, 4335, 2009, 1150, 4631, 1380, 1150,
	1150, 2048, 4343, 1268, 4352, 1378, 4379, 1377, 1376, 1150,
	4931, 4370, 2060, 4103, 4104, 4105, 2317, 1150, 1150, 3952,
	2361, 4111, 4112, 3951, 3950, 4377, 240, 3234, 1818, 4363,
	4384, 1810, 237, 239, 1410, 238, 1574, 4347, 3903, 3435,
	4857, 3974, 1340, 3627, 4409, 4393, 4390, 2048, 2048, 23,
	22, 1268, 21, 1268, 116, 4391, 4404, 42, 20, 4397,
	155, 1410, 133, 152, 151, 125, 150, 149, 4398, 1150,
	148, 4272, 147, 3224, 154, 146, 2048, 2048, 145, 140,
	144, 143, 1150, 142, 4281, 141, 139, 4284, 137, 4414,
	138, 1150, 132, 136, 135, 134, 2060, 131, 130, 129,
	4494, 4495, 128, 127, 126, 1150, 2019, 124, 1150, 2048,
	3571, 3572, 3573, 4426, 4453, 156, 4454, 4420, 123, 122,
	4437, 4438, 121, 120, 119, 118, 117, 1150, 783, 2054,
	784, 61, 60, 115, 1410, 4514, 4483, 4516, 113, 4517,
	114, 1351, 19, 40, 1286, 14, 65, 66, 18, 4455,
	13, 1574, 1574, 1574, 2752, 2752, 4462, 35, 92, 105,
	2180, 104, 103, 36, 101, 4452, 100, 34, 17, 16,
	15, 98, 1272, 97, 4502, 96, 33, 1306, 31, 11,
	9, 37, 2004, 12, 4530, 5, 187, 186, 189, 273,
	185, 273, 273, 4518, 1335, 273, 1345, 3638, 4250, 188,
	4540, 91, 184, 1410, 4559, 4544, 1574, 1359, 4504, 4548,
	4551, 183, 4500, 2054, 4506, 790, 4206, 4207, 790, 90,
	29, 10, 4515, 179, 4560, 4063, 82, 181, 2165, 180,
	4505, 178, 1270, 177, 176, 83, 80, 4533, 1150, 1150,
	175, 4532, 273, 4567, 273, 273, 1335, 4583, 273, 273,
	4535, 4536, 4537, 1345, 4542, 1150, 2060, 4578, 86, 4492,
	174, 4563, 4587, 81, 4589, 85, 84, 273, 4522, 1543,
	2057, 27, 4581, 4558, 6, 64, 1351, 4579, 7, 1351,
	4598, 4599, 4399, 3735, 108, 1563, 109, 38, 78, 77,
	76, 75, 1578, 4580, 26, 1150, 4585, 1150, 63, 1150,
	4586, 4379, 4575, 25, 173, 220, 219, 218, 217, 1272,
	4618, 1603, 216, 4620, 1345, 215, 214, 213, 273, 273,
	208, 1335, 1150, 207, 1272, 4626, 4597, 212, 210, 209,
	211, 206, 230, 1267, 229, 4250, 2752, 2752, 2752, 2752,
	223, 222, 790, 228, 273, 273, 227, 226, 225, 2361,
	4250, 4664, 4601, 224, 2057, 221, 1666, 4607, 234, 1266,
	4624, 4654, 205, 204, 203, 201, 1673, 197, 4625, 1270,
	196, 909, 200, 2054, 202, 199, 2281, 2048, 4653, 198,
	1272, 1272, 195, 233, 1270, 4647, 232, 1150, 1150, 4646,
	231, 4675, 4621, 72, 171, 172, 71, 1150, 170, 3465,
	169, 168, 1272, 3263, 3264, 1272, 4250, 4250, 167, 1574,
	166, 165, 4520, 164, 70, 24, 4663, 4689, 4690, 1574,
	2, 1, 0, 4392, 0, 4394, 4395, 4396, 4250, 0,
	0, 4250, 4665, 1150, 1150, 4670, 1520, 0, 0, 4709,
	1270, 1270, 4711, 1150, 0, 3493, 4687, 1268, 0, 273,
	0, 0, 0, 4697, 4698, 0, 4696, 0, 4701, 4723,
	4704, 4724, 1270, 4708, 4703, 1270, 2582, 0, 4563, 0,
	1267, 0, 4719, 273, 0, 4731, 4717, 2421, 0, 4720,
	4716, 4722, 1905, 3543, 0, 1267, 0, 0, 1150, 1150,
	1112, 1112, 1112, 1150, 0, 4732, 1266, 1351, 4721, 4736,
	1351, 0, 0, 0, 0, 3557, 0, 3559, 1494, 4741,
	0, 1266, 1494, 4443, 2057, 2048, 4766, 4769, 0, 0,
	0, 0, 4787, 0, 0, 4784, 4781, 0, 0, 4788,
	4770, 4776, 4758, 0, 4777, 4774, 4757, 2757, 0, 0,
	0, 1267, 1267, 4749, 4750, 0, 3597, 0, 0, 1340,
	3603, 4775, 0, 0, 0, 4771, 0, 4808, 0, 1150,
	1150, 1150, 0, 1267, 0, 0, 1267, 1266, 1266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4793, 0, 0, 1268, 3361, 3362, 3363, 3364, 1266,
	0, 4799, 1266, 1150, 0, 0, 4807, 0, 4806, 1268,
	0, 0, 4837, 0, 4842, 0, 4819, 4820, 4852, 0,
	4855, 4822, 4821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4838, 4864, 0, 2180, 0, 3667, 4534, 0,
	4865, 0, 0, 0, 0, 4874, 0, 0, 0, 4872,
	4840, 0, 0, 0, 0, 0, 1150, 0, 0, 4856,
	4866, 0, 0, 0, 0, 1268, 1268, 0, 4885, 0,
	0, 2514, 0, 0, 4871, 4540, 0, 4870, 0, 0,
	0, 4880, 0, 0, 704, 4879, 4901, 1268, 0, 0,
	1268, 0, 4891, 4892, 4882, 4897, 4878, 0, 4895, 0,
	4893, 0, 3997, 3998, 3999, 273, 0, 273, 4905, 4904,
	4917, 273, 4918, 4907, 1272, 4766, 1272, 4925, 4769, 4787,
	0, 0, 4913, 0, 1543, 1335, 2024, 273, 4915, 273,
	2030, 4924, 4923, 0, 4916, 0, 273, 0, 720, 0,
	4250, 4933, 4250, 273, 4927, 0, 0, 0, 0, 0,
	0, 4926, 1351, 4928, 4932, 0, 0, 0, 2097, 4947,
	0, 4949, 4955, 0, 2656, 0, 0, 4957, 0, 0,
	273, 0, 0, 4962, 1270, 0, 1270, 273, 0, 0,
	0, 1150, 1150, 4959, 0, 4066, 4953, 4956, 4964, 1150,
	0, 1150, 1150, 4968, 0, 4960, 4977, 0, 0, 0,
	0, 4978, 4981, 0, 4980, 0, 4983, 4974, 4986, 0,
	790, 4985, 4984, 4982, 0, 4988, 4987, 0, 0, 0,
	0, 3126, 0, 0, 0, 0, 4991, 0, 0, 4994,
	4992, 4999, 4993, 4975, 4976, 4996, 0, 4997, 0, 0,
	0, 5003, 2752, 2752, 0, 1150, 0, 0, 5005, 0,
	0, 4999, 5006, 5010, 5008, 0, 4995, 0, 0, 0,
	2827, 0, 0, 0, 5002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1266, 0, 1266, 0, 0, 2361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 0, 2752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 273, 0, 1494, 0, 1268,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2907, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 4200, 0, 0, 0, 3068, 0, 0,
	3071, 0, 3073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2757, 0, 0, 4244, 3117, 0,
	273, 3117, 273, 0, 0, 0, 704, 0, 273, 0,
	0, 3771, 3772, 0, 0, 0, 0, 0, 0, 0,
	790, 1112, 0, 0, 909, 0, 0, 0, 0, 1494,
	0, 4237, 0, 0, 0, 4230, 0, 0, 0, 0,
	0, 0, 0, 4292, 4293, 0, 0, 0, 0, 0,
	0, 0, 4228, 273, 0, 1335, 273, 0, 0, 0,
	0, 4232, 0, 0, 0, 0, 0, 73, 0, 0,
	790, 0, 4019, 0, 0, 2757, 2757, 273, 0, 0,
	0, 0, 0, 3189, 74, 2398, 4238, 0, 0, 0,
	273, 273, 0, 273, 2048, 273, 0, 273, 0, 273,
	79, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843,
	3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853,
	3854, 0, 3858, 0, 2435, 0, 0, 2436, 0, 2437,
	4231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 273, 273, 273, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2600, 2601, 2602, 2619, 2620,
	2621, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 790, 2622, 0, 1494, 0, 0,
	0, 903, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1830, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 1827, 1828, 2612, 1829, 0,
	0, 1871, 1872, 1873, 0, 0, 2608, 0, 0, 0,
	0, 0, 0, 0, 4440, 0, 4441, 0, 1858, 0,
	0, 0, 0, 0, 0, 1830, 0, 2757, 2757, 2757,
	2757, 0, 95, 0, 1877, 0, 0, 2590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 4233, 0, 0, 0, 0, 4234, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 4239, 1846,
	0, 0, 0, 0, 2613, 2614, 2615, 2616, 0, 0,
	0, 0, 0, 0, 2607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 704, 0,
	0, 0, 4509, 4510, 0, 0, 0, 0, 0, 0,
	4236, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 4240, 0, 273,
	0, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 1857, 1859, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 1835, 2617, 2618,
	0, 0, 0, 273, 1345, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4273,
	0, 2610, 0, 0, 0, 0, 1868, 0, 0, 1878,
	0, 4282, 1850, 0, 4285, 0, 1857, 1859, 0, 0,
	0, 0, 273, 1345, 0, 0, 0, 720, 0, 0,
	0, 2871, 1494, 0, 0, 190, 102, 273, 0, 106,
	273, 1844, 1845, 0, 273, 0, 273, 0, 0, 0,
	0, 1335, 0, 273, 273, 0, 1345, 1345, 2887, 1866,
	0, 0, 73, 273, 0, 241, 0, 4235, 0, 0,
	0, 0, 0, 904, 1850, 0, 0, 0, 153, 74,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 4360, 0,
	0, 0, 0, 0, 0, 0, 4245, 4246, 0, 2924,
	0, 0, 3392, 243, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 88, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 3421, 0, 273, 0, 1880,
	0, 0, 0, 194, 0, 2611, 0, 0, 790, 0,
	3434, 242, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 903, 3530, 3531, 1105,
	3532, 3533, 3534, 236, 273, 0, 3455, 0, 0, 0,
	0, 110, 0, 0, 0, 1494, 0, 94, 107, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	1651, 0, 0, 1882, 0, 0, 0, 273, 3066, 0,
	0, 1494, 0, 0, 1882, 0, 0, 0, 1851, 0,
	0, 0, 0, 3578, 3579, 0, 3580, 3581, 3582, 0,
	0, 0, 0, 0, 1543, 0, 0, 273, 0, 273,
	0, 0, 0, 0, 0, 1869, 273, 95, 0, 0,
	0, 2752, 0, 0, 0, 0, 3109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2924, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 1882, 3138, 909, 2924,
	0, 0, 0, 0, 2597, 2598, 2599, 2623, 2609, 2603,
	0, 2605, 2606, 2604, 2591, 2592, 2593, 2594, 2595, 2596,
	273, 0, 0, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 2752, 0, 2757, 2757, 0, 0, 0, 0, 273,
	1335, 273, 0, 0, 0, 0, 0, 0, 0, 4521,
	0, 1345, 273, 0, 0, 1335, 0, 1335, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 2848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 273, 273, 273, 1335, 3434,
	0, 1335, 0, 273, 99, 0, 0, 0, 273, 0,
	0, 0, 0, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 0, 2757, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 3040, 0, 0, 273, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3032, 3030, 0,
	0, 0, 0, 0, 3034, 3036, 3026, 0, 1827, 1828,
	241, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 153, 0, 0, 0, 2752, 0, 0,
	4423, 1858, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 3046, 0, 0,
	0, 0, 0, 1510, 0, 0, 1408, 0, 243, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 2752,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	4465, 0, 0, 1543, 2752, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 73, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 3792, 0, 0, 1827, 1828, 74, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	3808, 0, 0, 0, 79, 193, 0, 0, 1864, 1858,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 1827, 1828, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 3028, 0,
	0, 0, 1883, 0, 88, 0, 0, 0, 0, 3042,
	1858, 1829, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 3041, 3033, 3031, 3035, 3037, 3027, 3029, 3043, 1857,
	1859, 0, 0, 1883, 0, 903, 0, 273, 3039, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 49, 0,
	110, 0, 0, 273, 0, 0, 94, 107, 704, 0,
	0, 0, 0, 704, 0, 0, 704, 0, 0, 704,
	704, 3047, 0, 0, 0, 704, 4606, 0, 0, 0,
	0, 0, 0, 273, 0, 3901, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 1852, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 4630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 273, 273,
	0, 0, 0, 4652, 0, 0, 0, 1868, 0, 1835,
	1878, 0, 0, 0, 0, 0, 0, 1857, 1859, 0,
	0, 0, 1880, 0, 0, 0, 0, 2924, 2924, 273,
	0, 2024, 0, 1874, 0, 1875, 0, 2924, 0, 2030,
	0, 0, 1844, 1845, 0, 0, 0, 0, 2924, 2030,
	0, 2924, 2030, 0, 0, 2030, 0, 0, 1857, 1859,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	273, 2024, 0, 273, 0, 1850, 0, 0, 0, 0,
	0, 0, 4074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 273, 0, 3562, 3562, 0,
	0, 1851, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 3048, 0, 0, 0, 0, 1850, 0, 0, 0,
	3038, 1876, 0, 99, 0, 0, 0, 0, 2924, 0,
	2924, 0, 3594, 2924, 2024, 0, 0, 2924, 2024, 1865,
	0, 790, 0, 0, 0, 0, 0, 0, 4123, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 1494, 0, 0, 0, 1335, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 190,
	102, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 1880, 273, 0, 3632, 0, 1494, 3634, 2924, 0,
	0, 273, 0, 0, 0, 273, 1856, 0, 1345, 241,
	0, 1494, 0, 0, 0, 0, 0, 904, 0, 0,
	0, 0, 153, 273, 0, 0, 0, 0, 3109, 1851,
	0, 1335, 0, 273, 0, 0, 2924, 1494, 704, 0,
	0, 0, 0, 0, 0, 2924, 0, 0, 0, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 1869, 243, 0, 0,
	0, 0, 0, 3337, 3338, 0, 3355, 3356, 3357, 0,
	1851, 0, 0, 0, 0, 1112, 0, 1827, 1828, 0,
	0, 0, 157, 0, 0, 4143, 0, 1882, 0, 1112,
	0, 0, 0, 0, 3741, 0, 0, 194, 0, 0,
	1858, 0, 0, 0, 0, 242, 0, 1830, 0, 0,
	0, 0, 0, 0, 3747, 0, 0, 1543, 235, 0,
	1335, 273, 0, 273, 0, 0, 0, 236, 1882, 1335,
	0, 0, 0, 1883, 0, 0, 0, 0, 3352, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 1649, 0, 0, 0, 1867, 0,
	273, 1846, 3337, 3338, 0, 3355, 3356, 3357, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 3780, 0, 0, 0, 3312, 1494,
	0, 0, 3313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4199, 0, 0, 0, 0, 0, 4291, 0,
	0, 0, 0, 0, 0, 0, 0, 4142, 3813, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 0,
	0, 4214, 2757, 0, 0, 3343, 0, 3352, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	1494, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 2727, 2728, 2729, 2730, 2723, 2724,
	2725, 2726, 4345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4362, 0, 0, 0, 0,
	0, 0, 2757, 0, 0, 0, 0, 0, 1857, 1859,
	3359, 0, 0, 0, 0, 0, 0, 0, 4383, 0,
	0, 0, 0, 0, 0, 273, 273, 0, 0, 0,
	0, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3343, 0, 0, 0, 0, 0,
	704, 704, 3353, 0, 0, 2703, 2704, 2705, 2706, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 1827,
	1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 2715, 2716,
	2717, 2718, 2711, 2712, 2713, 2714, 2719, 2720, 2721, 2722,
	0, 1864, 1858, 0, 1494, 0, 0, 1494, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 3359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 1880, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 3353, 1408, 1846, 0, 0, 2699, 2700, 2701, 2702,
	2707, 2708, 2709, 2710, 0, 790, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 4415, 0, 0, 0, 0, 0, 2757, 0,
	0, 1494, 0, 0, 0, 0, 0, 1856, 3562, 0,
	0, 0, 0, 0, 0, 0, 3354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	1851, 0, 0, 0, 1863, 4415, 1880, 0, 0, 0,
	2757, 1852, 1853, 1854, 1855, 0, 0, 0, 0, 0,
	2024, 1835, 273, 0, 0, 0, 720, 720, 1345, 0,
	0, 0, 2514, 0, 0, 2757, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 3109, 0, 0, 3109, 2030, 1882, 0,
	1868, 0, 273, 1878, 0, 0, 0, 0, 0, 0,
	1857, 1859, 273, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 273, 0, 0, 3354, 1874, 0, 1875, 0,
	0, 0, 0, 0, 0, 1844, 1845, 0, 0, 0,
	0, 2924, 273, 0, 0, 2514, 1494, 0, 0, 0,
	0, 3138, 3138, 1866, 0, 0, 0, 909, 2924, 0,
	0, 0, 0, 0, 0, 3349, 3350, 3351, 1850, 0,
	0, 0, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344,
	3345, 0, 0, 1847, 1843, 273, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 1863, 0, 0, 0, 0,
	0, 1863, 0, 1880, 0, 0, 0, 1863, 0, 0,
	0, 4660, 4661, 0, 0, 0, 0, 0, 0, 0,
	4162, 0, 0, 0, 3349, 3350, 3351, 0, 0, 0,
	0, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345,
	0, 0, 4674, 0, 3337, 3338, 0, 3355, 3356, 3357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 3779, 0, 0, 0,
	0, 0, 4707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 273, 0, 0, 0, 0, 1982, 1543,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 1863, 0, 1869,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 3352,
	0, 1345, 0, 0, 0, 1863, 0, 0, 0, 0,
	1863, 0, 3337, 3338, 1345, 3355, 3356, 3357, 0, 0,
	1882, 2924, 2924, 0, 3562, 2924, 0, 0, 0, 0,
	0, 0, 0, 4252, 0, 4252, 1543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2924, 0, 2030,
	0, 0, 0, 1543, 1543, 273, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 273, 2024, 0, 273, 1863, 3562, 0, 0, 0,
	0, 1863, 0, 0, 4794, 0, 0, 3352, 0, 0,
	4796, 1867, 1494, 0, 0, 0, 3343, 2924, 0, 2924,
	273, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 1494, 0,
	0, 2633, 1827, 1828, 0, 2634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2924, 2924, 0, 0,
	0, 0, 3109, 3109, 0, 1858, 0, 0, 0, 4349,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	273, 3359, 0, 1097, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 3343, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 3353, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 0, 0, 0, 0, 3360, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	1494, 1494, 0, 1494, 0, 0, 0, 1863, 0, 3359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 3353, 0, 2756, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 1863, 2924, 2030, 0, 2030, 0, 0, 4457,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 4481, 0,
	4481, 0, 0, 1857, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 3354, 0, 0,
	0, 0, 0, 0, 790, 0, 1880, 0, 1844, 1845,
	0, 0, 0, 0, 0, 3562, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 273,
	0, 1850, 0, 0, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4457, 0, 1858, 4252,
	0, 0, 1543, 0, 1494, 1830, 0, 0, 0, 2924,
	0, 0, 0, 0, 0, 3354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4572, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 1543,
	1829, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	1849, 0, 0, 1494, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 273, 273, 0, 3349, 3350, 3351, 0,
	0, 0, 0, 3348, 3346, 3347, 3339, 3340, 3341, 3342,
	3344, 3345, 0, 1494, 0, 0, 0, 3813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 3562, 4623, 0,
	0, 0, 0, 0, 0, 3769, 4457, 0, 0, 0,
	1827, 1828, 0, 0, 0, 1851, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4252, 1852, 1853, 1854,
	1855, 0, 0, 1858, 0, 0, 0, 1835, 0, 0,
	1830, 4252, 0, 1494, 3349, 3350, 3351, 0, 0, 0,
	0, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345,
	0, 0, 0, 0, 0, 0, 1883, 273, 0, 0,
	0, 0, 0, 1882, 0, 1829, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 1849, 1857, 1859, 0, 0,
	1112, 0, 0, 0, 1846, 0, 0, 4252, 4252, 0,
	0, 0, 0, 4349, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 1494, 0, 0, 4252,
	0, 273, 4252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 1543, 1850, 0, 0, 0, 0, 0,
	3768, 0, 0, 0, 0, 0, 0, 0, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	4747, 0, 1835, 0, 0, 1494, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 4481, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 1097, 1097, 1097, 1880,
	0, 0, 0, 0, 2924, 0, 0, 0, 0, 0,
	0, 1857, 1859, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1845, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 1551, 0, 1557, 1856, 0, 0, 0, 1863,
	0, 0, 3813, 1863, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 1863, 1851, 0,
	0, 0, 0, 0, 1543, 0, 1863, 1863, 1863, 1863,
	1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 0, 1657, 0, 1662, 0, 1863, 0, 1863,
	1863, 1863, 1863, 0, 1827, 1828, 1882, 0, 1675, 0,
	1680, 2756, 2756, 0, 1880, 0, 0, 0, 0, 1112,
	1112, 4457, 0, 0, 0, 0, 1863, 1858, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 2924, 0, 0, 0, 0, 0, 0, 0, 1829,
	1856, 4252, 0, 4252, 0, 0, 1543, 1863, 1745, 1849,
	0, 1751, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 1847, 1843, 1851, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 0, 0, 1863, 0, 0,
	1863, 0, 0, 1863, 0, 0, 1863, 0, 0, 0,
	0, 1112, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3252, 0, 0, 0, 0, 0,
	0, 1882, 3138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2924, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 3138, 0, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 0, 1863, 0,
	0, 3358, 0, 2756, 2756, 2756, 2756, 0, 0, 0,
	1863, 0, 1863, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 1904, 0, 0, 0, 0, 0, 1917, 0,
	0, 0, 0, 0, 0, 1857, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 1976, 1976, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 0, 3245, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 1883, 0, 0, 0, 1835, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	1146, 0, 0, 0, 0, 0, 1857, 1859, 0, 1863,
	1863, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 272, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 1850, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 0, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 833, 0, 0, 0, 0, 1868, 0,
	0, 1878, 0, 0, 0, 0, 0, 1858, 1857, 1859,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 1874, 0, 1875, 0, 0, 1880,
	0, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 1850, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 1863, 1863, 0, 2756,
	2756, 0, 0, 1863, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 3358, 3358, 0, 0, 1863, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1851, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1863, 1269, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 0,
	2756, 3358, 3358, 3358, 3358, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 1857, 1859, 0, 0, 0,
	0, 0, 0, 2422, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 2449, 0,
	0, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 2489, 0, 2493, 0, 1182, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 0, 2557, 1880, 2559,
	2560, 2561, 2562, 0, 0, 0, 0, 0, 0, 1867,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 2586, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 1904, 0, 0,
	0, 2637, 0, 4168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 2667, 2670, 2673,
	2676, 0, 0, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	0, 0, 0, 163, 0, 0, 0, 1851, 0, 0,
	0, 73, 0, 46, 45, 0, 0, 0, 0, 0,
	0, 2748, 0, 2760, 2762, 2767, 0, 0, 74, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3337, 3338, 79, 3355, 3356, 3357, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 0, 0, 0,
	0, 0, 48, 0, 160, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 68, 0, 0, 0, 0, 3352, 0, 0,
	51, 0, 1273, 0, 0, 57, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	110, 0, 0, 0, 0, 0, 94, 107, 0, 0,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 1863, 52, 0,
	1863, 3358, 3358, 1863, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 1863, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 3343, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 272, 272, 0, 0, 272, 0,
	1863, 1863, 1863, 1863, 1863, 0, 0, 0, 0, 0,
	1863, 0, 1863, 0, 0, 3358, 3358, 3358, 3358, 3358,
	3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358,
	3358, 3358, 3358, 3358, 3358, 0, 0, 0, 3358, 3359,
	0, 1863, 1863, 0, 0, 272, 0, 272, 272, 0,
	0, 272, 272, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 3353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 814, 3069, 3070, 0, 3072, 0, 0, 0,
	0, 0, 1863, 99, 0, 0, 0, 0, 0, 0,
	0, 272, 272, 0, 1863, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 272, 272, 0,
	0, 59, 0, 1863, 0, 0, 1880, 0, 0, 0,
	0, 69, 0, 0, 0, 0, 0, 0, 58, 190,
	102, 0, 0, 106, 0, 0, 0, 54, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 55,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 241,
	0, 0, 820, 0, 0, 0, 0, 62, 0, 0,
	0, 0, 153, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 3354, 0, 0, 0, 0,
	0, 0, 0, 3190, 0, 0, 0, 243, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 812, 0, 0,
	0, 0, 157, 0, 0, 0, 272, 0, 1863, 0,
	0, 0, 0, 0, 765, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 810,
	0, 0, 0, 0, 0, 1884, 1885, 236, 0, 0,
	1863, 1863, 0, 0, 0, 1863, 1863, 0, 0, 1863,
	1863, 0, 0, 0, 1863, 0, 0, 0, 1863, 0,
	0, 0, 0, 1863, 193, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2756, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 3246, 3247, 0, 3349, 3350, 3351, 3253, 0, 0,
	0, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345,
	0, 0, 0, 0, 0, 0, 3267, 3268, 0, 0,
	0, 0, 2637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 805, 1273, 0, 0, 3277, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 0, 0,
	3303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 1998, 0,
	1269, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 0, 0, 0, 0, 0, 0,
	272, 1998, 272, 0, 0, 0, 0, 815, 0, 833,
	0, 0, 0, 807, 0, 0, 833, 1273, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 2767, 2767, 2767, 0, 0, 0, 0, 0,
	1863, 1863, 1863, 0, 0, 0, 0, 1976, 0, 0,
	0, 1863, 1863, 3358, 2756, 3396, 0, 811, 0, 0,
	1863, 0, 0, 1863, 0, 0, 0, 0, 1273, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3358, 2756, 0, 0, 0,
	0, 0, 0, 0, 0, 817, 818, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	1863, 2756, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 0, 0, 0, 1097, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 3520, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 272, 0, 0, 0, 833, 0,
	0, 0, 1846, 0, 0, 0, 3358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	3358, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3358, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 272, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 272, 0, 272, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 1878, 1273, 0, 0, 0, 0, 0, 1857,
	1859, 0, 0, 0, 0, 0, 272, 0, 0, 272,
	0, 0, 0, 2061, 0, 1874, 0, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	272, 0, 0, 0, 853, 0, 0, 0, 0, 0,
	0, 0, 1866, 833, 272, 0, 272, 0, 272, 0,
	272, 0, 272, 0, 855, 0, 0, 1850, 0, 856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 272, 272, 272, 857, 0,
	874, 1863, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 858, 0, 0, 0, 0,
	859, 0, 1880, 0, 0, 0, 0, 2507, 0, 0,
	0, 0, 0, 3766, 3767, 0, 0, 3770, 0, 0,
	0, 3773, 883, 0, 0, 0, 0, 0, 0, 860,
	3777, 0, 0, 0, 0, 0, 0, 0, 0, 3784,
	0, 0, 0, 881, 3396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 3797,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3820,
	3821, 1851, 3822, 3823, 3824, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 862, 0, 0, 0, 0, 1863,
	3830, 0, 0, 1863, 3832, 0, 885, 0, 1869, 0,
	0, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 1273, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 3861, 3862, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3882, 0, 0, 0, 0, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 272, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 1273, 0,
	1273, 0, 1273, 0, 3782, 0, 0, 0, 0, 0,
	0, 0, 3932, 0, 0, 0, 863, 0, 0, 0,
	1273, 1273, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 3944, 0, 1273, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 1273, 1273, 1273,
	272, 0, 0, 272, 0, 0, 0, 272, 866, 272,
	0, 0, 0, 0, 0, 3973, 272, 272, 0, 0,
	0, 0, 0, 0, 1827, 1828, 272, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 1858, 0, 764,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 852, 1877, 876, 0, 0, 0, 0, 0,
	0, 0, 0, 867, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 272, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 272, 873, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	272, 0, 0, 0, 0, 868, 0, 0, 0, 869,
	888, 0, 887, 0, 0, 870, 2061, 2061, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 0, 880, 0, 0, 272, 0, 0,
	889, 0, 886, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 4098, 0, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 833, 0, 0, 0, 0, 0, 0, 272,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 1857, 1859, 4140, 4141, 0,
	0, 0, 0, 4145, 4146, 0, 0, 0, 4149, 4150,
	0, 1874, 0, 1875, 0, 0, 4154, 0, 0, 0,
	1844, 1845, 0, 272, 0, 0, 0, 4158, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 1866, 0,
	0, 1273, 272, 4163, 272, 0, 0, 0, 0, 0,
	1273, 0, 0, 1850, 0, 272, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 272, 272, 272,
	272, 0, 0, 0, 1883, 0, 272, 1865, 0, 0,
	0, 272, 0, 1829, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 1868,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 1857,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 1273, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 1870,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	3315, 4410, 4411, 4412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 2507, 0, 0, 4421, 4422, 0,
	0, 1865, 0, 0, 0, 0, 1273, 0, 1273, 0,
	0, 0, 1880, 0, 0, 4430, 4433, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 1827, 1828, 0, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 1858,
	0, 0, 0, 0, 0, 0, 1830, 0, 1856, 0,
	0, 0, 0, 0, 0, 1877, 1998, 0, 0, 0,
	4482, 0, 0, 0, 0, 0, 0, 0, 272, 4490,
	0, 1851, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 4498, 0, 0, 1097, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 1869, 0,
	1846, 1262, 0, 0, 0, 4511, 0, 272, 0, 0,
	0, 272, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 268, 268, 700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	1854, 1855, 272, 272, 0, 0, 272, 0, 1835, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 1868, 0, 0,
	1878, 0, 0, 0, 3314, 0, 0, 1857, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 1875, 0, 0, 0, 0,
	0, 0, 1844, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4629, 0, 0, 0, 4633, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 1097, 1097, 0, 0, 0,
	1880, 0, 0, 0, 0, 4705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 1273,
	0, 0, 2507, 0, 0, 0, 0, 0, 0, 0,
	0, 4433, 0, 0, 1273, 0, 1856, 0, 0, 0,
	750, 0, 0, 0, 272, 0, 272, 0, 0, 1159,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 1851,
	733, 0, 0, 0, 1273, 734, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 272, 0, 0, 1869, 0, 0, 2061,
	0, 0, 0, 1273, 0, 274, 274, 274, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 1882, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4818, 4818, 4818,
	0, 0, 274, 0, 0, 0, 0, 0, 756, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 4841, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 739, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 3311, 0, 0, 0, 0, 740, 0, 0,
	741, 0, 0, 0, 4818, 0, 0, 0, 1269, 1269,
	0, 0, 0, 0, 0, 1273, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 1273, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 4818,
	4969, 0, 0, 0, 0, 0, 0, 4973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 763, 0, 744, 0, 0, 0, 0, 0,
	1273, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 1321, 1321, 0, 0, 0,
	0, 0, 0, 0, 272, 764, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 272, 0, 0, 760, 761,
	758, 0, 0, 0, 0, 272, 753, 0, 0, 746,
	0, 2061, 0, 0, 0, 272, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 272, 1405, 0, 0, 0,
	1273, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 1273, 0, 0,
	0, 747, 0, 754, 0, 0, 0, 2061, 2061, 0,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 749, 0, 0, 0, 0,
	757, 0, 0, 0, 0, 0, 2061, 2061, 272, 0,
	0, 0, 0, 0, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 1656,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 1273, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 1273, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 1269, 0, 0, 0,
	0, 0, 0, 1772, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1998, 0, 1998, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	0, 274, 0, 274, 274, 0, 0, 274, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 1878, 0, 0, 1273, 0, 0, 1273, 1857, 1859,
	0, 0, 0, 272, 274, 1414, 274, 274, 0, 1414,
	274, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1845, 0, 0, 2061, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	274, 274, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 1273, 1273, 0, 1414, 0,
	0, 1273, 1273, 1273, 0, 1414, 274, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 1273, 0, 0, 2014, 0, 0, 1273, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 1321, 0, 0, 1856, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 274, 0, 0, 0, 0, 1135, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 274, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 1882, 750,
	0, 0, 1273, 0, 0, 0, 1273, 1273, 0, 1273,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 733,
	0, 0, 0, 0, 734, 0, 0, 1273, 1273, 0,
	1151, 0, 272, 0, 0, 0, 0, 0, 1273, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 735, 1273, 0, 1273, 0, 0, 1867,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 737, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 0,
	0, 1273, 0, 0, 0, 0, 272, 272, 0, 1072,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 0, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 740, 0, 0, 741,
	1256, 0, 2303, 274, 0, 0, 2310, 0, 0, 1998,
	1273, 0, 0, 0, 1414, 1273, 765, 0, 2323, 274,
	274, 274, 0, 0, 1998, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 2335, 274, 2335, 0, 0, 0,
	0, 755, 2342, 0, 1273, 1273, 1273, 1273, 1273, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 1998, 0, 0, 0, 0, 0, 2310, 0, 1273,
	2370, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 1998, 0, 272, 1998, 0, 0, 0, 0,
	2061, 2390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2406, 0, 2408, 0, 2410,
	0, 2412, 1273, 2413, 1273, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 743, 1411, 0, 2440, 2441, 2442, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 763, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 764, 0, 0, 0, 0, 1273,
	1273, 1273, 745, 0, 0, 0, 0, 760, 761, 758,
	0, 0, 1575, 0, 0, 753, 0, 0, 746, 1575,
	1273, 0, 0, 274, 0, 1414, 1414, 274, 0, 0,
	0, 0, 0, 0, 1414, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 1273, 0, 0, 0, 0, 0,
	747, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 0, 0, 0, 0, 757,
	274, 0, 0, 1575, 274, 0, 0, 0, 0, 0,
	274, 0, 0, 766, 2061, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 274, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 1414, 0, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 1998, 1273, 0, 0,
	0, 1414, 1414, 0, 0, 0, 0, 2824, 0, 0,
	0, 0, 1273, 0, 1414, 274, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 1414, 1414,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 274, 0, 274, 0, 274, 0, 274,
	0, 274, 0, 0, 0, 0, 0, 0, 1273, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 2873, 0, 1273, 1321, 0, 0, 1273, 1321, 0,
	1321, 0, 0, 274, 274, 274, 274, 1273, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 2323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 112, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 1518, 0,
	1412, 0, 825, 0, 0, 1092, 112, 112, 0, 825,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 112,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2310, 0, 0, 0, 0, 0, 0, 0, 0,
	2323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 112, 274, 0, 0, 1414, 0,
	1411, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3160, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3171, 0, 3174, 0, 0, 0, 0,
	0, 0, 1273, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 274, 0, 0, 0, 274, 0, 274, 0,
	0, 1072, 0, 0, 0, 274, 274, 0, 3206, 1518,
	3208, 1518, 0, 0, 0, 274, 0, 3214, 0, 0,
	0, 0, 1897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1903, 0, 0, 0, 1909, 0, 0, 0, 0, 1575,
	1575, 0, 0, 1321, 1414, 0, 0, 0, 1411, 0,
	0, 3243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 1996, 1575, 1999, 1575, 112, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1575, 274,
	0, 274, 0, 0, 0, 0, 0, 0, 274, 0,
	1575, 0, 1575, 1575, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 1412, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 1858, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 1411, 0, 0, 274, 274, 274, 274,
	0, 0, 0, 0, 0, 274, 0, 0, 1883, 0,
	274, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1412, 0, 3444,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 1518, 1518, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3489, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3539, 3541, 0, 1411, 2323, 0, 0,
	0, 0, 0, 1868, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 1857, 1859, 0, 1576, 1576, 0, 0,
	0, 0, 1411, 0, 0, 1412, 0, 0, 0, 1874,
	0, 1875, 0, 0, 0, 0, 0, 0, 1844, 1845,
	0, 0, 0, 0, 0, 0, 1092, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 3656, 0, 0, 0, 3660,
	1576, 0, 1576, 0, 1576, 1865, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 1576, 1576, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 0, 0, 1576, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 0, 1576,
	1576, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 1414, 0,
	0, 0, 0, 0, 0, 0, 1072, 274, 0, 1072,
	1072, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3751, 0, 1518, 0, 0,
	0, 1411, 1869, 0, 0, 0, 274, 0, 0, 0,
	274, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2575, 0, 0, 0, 0,
	0, 0, 0, 1882, 3764, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 0, 0, 0, 1903,
	1412, 0, 0, 0, 0, 825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 274, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 1867, 0, 0, 274, 0, 0,
	0, 1575, 0, 1575, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	1575, 0, 1256, 0, 0, 0, 1414, 0, 3310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 112, 0,
	0, 1414, 0, 1414, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 274, 1414, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 1414, 274, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 274, 1414, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 274, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 2323, 0, 0, 0,
	0, 1414, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 2323, 0, 0, 1414, 0,
	112, 0, 1846, 112, 0, 112, 4052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2323, 0, 0, 0, 0, 4080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	0, 112, 0, 0, 112, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 4125,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 1878, 1414, 0, 0, 112, 1411, 0, 1857,
	1859, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 1874, 0, 1875, 1576, 0,
	1576, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 1411, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 2575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1414, 0, 0, 1414, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 4271,
	1411, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 2323, 0, 0, 0, 0,
	0, 1851, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 274,
	0, 1575, 0, 0, 274, 0, 0, 0, 1869, 0,
	1414, 0, 0, 0, 0, 1575, 0, 1575, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 825, 1575,
	0, 0, 0, 0, 0, 1414, 1414, 1414, 0, 1882,
	1575, 0, 1414, 1414, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 2323, 0, 0, 274, 0, 1414,
	0, 0, 0, 0, 4371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 1575, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 1256, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0,
	0, 0, 1256, 0, 3309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 1414, 1414, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4467, 0, 0, 1411, 0, 0, 1414, 1414,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 1414,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1412, 0, 0, 0, 0,
	112, 112, 0, 112, 112, 112, 0, 274, 0, 0,
	0, 0, 0, 2323, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 274, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 112, 112, 0, 112,
	112, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4596, 1518, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 274, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 1414, 1414, 1414, 1414, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 1256, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 112,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 1576, 0, 1576, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 0, 1414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1414, 0, 1575, 0, 0, 4710, 0, 0, 0, 0,
	274, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 1414, 1575, 1412, 0, 0, 0, 0,
	0, 274, 0, 4760, 0, 0, 0, 0, 0, 0,
	1414, 1414, 1414, 0, 0, 0, 0, 0, 0, 1575,
	1575, 1575, 0, 0, 0, 0, 1575, 1575, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 4801, 1414, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 1412,
	0, 0, 0, 0, 0, 274, 274, 0, 0, 0,
	0, 0, 0, 0, 1256, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1411, 0, 1411, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 1575, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 1864, 1858, 0, 0, 1414, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 1414, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 1576, 0, 0, 1576,
	1575, 1256, 274, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1575, 1575, 1575, 1575, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 1857, 1859, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 1411, 0, 0, 0, 0, 1874,
	0, 1875, 0, 0, 0, 0, 0, 0, 1844, 1845,
	0, 0, 0, 0, 0, 0, 1576, 1576, 1576, 0,
	0, 0, 0, 1576, 1576, 1576, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 1575,
	0, 1850, 0, 0, 1576, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 1256, 0, 0, 1865, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1575, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 1412, 1412,
	0, 1412, 0, 0, 0, 0, 1411, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	1576, 112, 1869, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 1827, 1828, 0, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 1864, 1858,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 1412, 1883, 0, 0, 0, 0, 0, 112, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 1412, 0, 0, 0, 0, 0, 0,
	1846, 112, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 1576, 1576, 0, 0, 0, 0, 2634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 1576, 1852, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 1576, 1576, 1576, 1576,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 1868, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 1857, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 1874, 0, 1875, 0, 0, 0, 0,
	0, 0, 1844, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 1850, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2575, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 1576, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 112, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 4748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 112, 282, 284, 283, 285, 286, 287,
	288, 1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646,
	1420, 1421, 1422, 1423, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1424, 651, 301, 302, 303, 304, 305, 306, 1425, 1426,
	0, 307, 652, 653, 654, 1427, 308, 309, 655, 1428,
	1495, 1429, 310, 311, 312, 313, 314, 315, 316, 0,
	1430, 318, 319, 320, 317, 321, 1431, 322, 0, 323,
	324, 325, 326, 327, 328, 1432, 329, 330, 331, 1214,
	332, 333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1440, 345, 341, 343, 1441, 346, 344, 347, 1442, 348,
	349, 350, 1443, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 359, 1447, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 1448, 279, 1449, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1450, 378,
	379, 380, 1451, 1452, 1215, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1453,
	393, 664, 1454, 665, 394, 1455, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1217, 400, 401, 1456, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1457, 1216, 410, 669, 670, 1458, 671, 1459, 411,
	412, 1218, 672, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1460, 423,
	425, 424, 1461, 426, 673, 1221, 427, 428, 1222, 1462,
	429, 430, 431, 432, 433, 434, 437, 1463, 1464, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1465, 281, 1225,
	480, 481, 1466, 674, 482, 675, 484, 485, 1467, 0,
	486, 0, 1468, 1469, 488, 489, 490, 1470, 1471, 491,
	492, 676, 1226, 493, 1227, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1472, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1473, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1474, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1475, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1476, 571, 572, 570, 573, 574, 575, 1477, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1478, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1479, 603, 604, 0, 600, 591, 1480, 605,
	606, 607, 608, 609, 610, 611, 612, 1481, 613, 687,
	688, 689, 690, 1482, 622, 1483, 614, 615, 616, 691,
	617, 692, 1484, 618, 619, 620, 621, 0, 623, 624,
	1485, 1486, 625, 626, 627, 629, 630, 628, 631, 1487,
	632, 1488, 0, 633, 634, 635, 693, 694, 695, 1489,
	637, 636, 638, 696, 639, 640, 1490, 1491, 1492, 1493,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 2802, 0, 0, 0, 0, 0, 0,
	0, 2803, 282, 284, 283, 285, 286, 287, 288, 1415,
	289, 290, 1416, 1417, 1418, 0, 1419, 646, 1420, 1421,
	1422, 1423, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 1424, 651,
	301, 302, 303, 304, 305, 306, 1425, 1426, 0, 307,
	652, 653, 654, 1427, 308, 309, 655, 1428, 1495, 1429,
	310, 311, 312, 313, 314, 315, 316, 0, 1430, 318,
	319, 320, 317, 321, 1431, 322, 0, 323, 324, 325,
	326, 327, 328, 1432, 329, 330, 331, 1214, 332, 333,
	334, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 1440, 345,
	341, 343, 1441, 346, 344, 347, 1442, 348, 349, 350,
	1443, 1444, 351, 352, 353, 1445, 354, 355, 356, 1446,
	357, 358, 359, 1447, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 1448, 279, 1449, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 1450, 378, 379, 380,
	1451, 1452, 1215, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 1453, 393, 664,
	1454, 665, 394, 1455, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 1217, 400, 401, 1456, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 1457,
	1216, 410, 669, 670, 1458, 671, 1459, 411, 412, 1218,
	672, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1460, 423, 425, 424,
	1461, 426, 673, 1221, 427, 428, 1222, 1462, 429, 430,
	431, 432, 433, 434, 437, 1463, 1464, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 1465, 281, 1225, 480, 481,
	1466, 674, 482, 675, 484, 485, 1467, 0, 486, 0,
	1468, 1469, 488, 489, 490, 1470, 1471, 491, 492, 676,
	1226, 493, 1227, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 1472, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 1473, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 1474,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 1475, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 1476, 571,
	572, 570, 573, 574, 575, 1477, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 1478, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	1479, 603, 604, 0, 600, 591, 1480, 605, 606, 607,
	608, 609, 610, 611, 612, 1481, 613, 687, 688, 689,
	690, 1482, 622, 1483, 614, 615, 616, 691, 617, 692,
	1484, 618, 619, 620, 621, 0, 623, 624, 1485, 1486,
	625, 626, 627, 629, 630, 628, 631, 1487, 632, 1488,
	0, 633, 634, 635, 693, 694, 695, 1489, 637, 636,
	638, 696, 639, 640, 1490, 1491, 1492, 1493, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 3791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3793, 282, 284,
	283, 285, 286, 287, 288, 1415, 289, 290, 1416, 1417,
	1418, 0, 1419, 646, 1420, 1421, 1422, 1423, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 1424, 651, 301, 302, 303, 304,
	305, 306, 1425, 1426, 0, 307, 652, 653, 654, 1427,
	308, 309, 655, 1428, 1495, 1429, 310, 311, 312, 313,
	314, 315, 316, 0, 1430, 318, 319, 320, 317, 321,
	1431, 322, 0, 323, 324, 325, 326, 327, 328, 1432,
	329, 330, 331, 1214, 332, 333, 334, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 1440, 345, 341, 343, 1441, 346,
	344, 347, 1442, 348, 349, 350, 1443, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 359, 1447,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 1448, 279, 1449,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 1450, 378, 379, 380, 1451, 1452, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1453, 393, 664, 1454, 665, 394, 1455,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 1456, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1457, 1216, 410, 669, 670,
	1458, 671, 1459, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1460, 423, 425, 424, 1461, 426, 673, 1221,
	427, 428, 1222, 1462, 429, 430, 431, 432, 433, 434,
	437, 1463, 1464, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1465, 281, 1225, 480, 481, 1466, 674, 482, 675,
	484, 485, 1467, 0, 486, 0, 1468, 1469, 488, 489,
	490, 1470, 1471, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1472, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 1473, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 1474, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1475,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1476, 571, 572, 570, 573, 574,
	575, 1477, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 1478,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 1479, 603, 604, 0,
	600, 591, 1480, 605, 606, 607, 608, 609, 610, 611,
	612, 1481, 613, 687, 688, 689, 690, 1482, 622, 1483,
	614, 615, 616, 691, 617, 692, 1484, 618, 619, 620,
	621, 0, 623, 624, 1485, 1486, 625, 626, 627, 629,
	630, 628, 631, 1487, 632, 1488, 0, 633, 634, 635,
	693, 694, 695, 1489, 637, 636, 638, 696, 639, 640,
	1490, 1491, 1492, 1493, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4198, 282, 284,
	283, 285, 286, 287, 288, 1415, 289, 290, 1416, 1417,
	1418, 0, 1419, 646, 1420, 1421, 1422, 1423, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 1424, 651, 301, 302, 303, 304,
	305, 306, 1425, 1426, 0, 307, 652, 653, 654, 1427,
	308, 309, 655, 1428, 1495, 1429, 310, 311, 312, 313,
	314, 315, 316, 0, 1430, 318, 319, 320, 317, 321,
	1431, 322, 0, 323, 324, 325, 326, 327, 328, 1432,
	329, 330, 331, 1214, 332, 333, 334, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 1440, 345, 341, 343, 1441, 346,
	344, 347, 1442, 348, 349, 350, 1443, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 359, 1447,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 1448, 279, 1449,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 1450, 378, 379, 380, 1451, 1452, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1453, 393, 664, 1454, 665, 394, 1455,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 1456, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1457, 1216, 410, 669, 670,
	1458, 671, 1459, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1460, 423, 425, 424, 1461, 426, 673, 1221,
	427, 428, 1222, 1462, 429, 430, 431, 432, 433, 434,
	437, 1463, 1464, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1465, 281, 1225, 480, 481, 1466, 674, 482, 675,
	484, 485, 1467, 0, 486, 0, 1468, 1469, 488, 489,
	490, 1470, 1471, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1472, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 1473, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 1474, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1475,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1476, 571, 572, 570, 573, 574,
	575, 1477, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 1478,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 1479, 603, 604, 0,
	600, 591, 1480, 605, 606, 607, 608, 609, 610, 611,
	612, 1481, 613, 687, 688, 689, 690, 1482, 622, 1483,
	614, 615, 616, 691, 617, 692, 1484, 618, 619, 620,
	621, 0, 623, 624, 1485, 1486, 625, 626, 627, 629,
	630, 628, 631, 1487, 632, 1488, 0, 633, 634, 635,
	693, 694, 695, 1489, 637, 636, 638, 696, 639, 640,
	1490, 1491, 1492, 1493, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4196, 282, 284,
	283, 285, 286, 287, 288, 1415, 289, 290, 1416, 1417,
	1418, 0, 1419, 646, 1420, 1421, 1422, 1423, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 1424, 651, 301, 302, 303, 304,
	305, 306, 1425, 1426, 0, 307, 652, 653, 654, 1427,
	308, 309, 655, 1428, 1495, 1429, 310, 311, 312, 313,
	314, 315, 316, 0, 1430, 318, 319, 320, 317, 321,
	1431, 322, 0, 323, 324, 325, 326, 327, 328, 1432,
	329, 330, 331, 1214, 332, 333, 334, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 1440, 345, 341, 343, 1441, 346,
	344, 347, 1442, 348, 349, 350, 1443, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 359, 1447,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 1448, 279, 1449,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 1450, 378, 379, 380, 1451, 1452, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1453, 393, 664, 1454, 665, 394, 1455,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 1456, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1457, 1216, 410, 669, 670,
	1458, 671, 1459, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1460, 423, 425, 424, 1461, 426, 673, 1221,
	427, 428, 1222, 1462, 429, 430, 431, 432, 433, 434,
	437, 1463, 1464, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1465, 281, 1225, 480, 481, 1466, 674, 482, 675,
	484, 485, 1467, 0, 486, 0, 1468, 1469, 488, 489,
	490, 1470, 1471, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1472, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 1473, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 1474, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1475,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1476, 571, 572, 570, 573, 574,
	575, 1477, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 1478,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 1479, 603, 604, 0,
	600, 591, 1480, 605, 606, 607, 608, 609, 610, 611,
	612, 1481, 613, 687, 688, 689, 690, 1482, 622, 1483,
	614, 615, 616, 691, 617, 692, 1484, 618, 619, 620,
	621, 0, 623, 624, 1485, 1486, 625, 626, 627, 629,
	630, 628, 631, 1487, 632, 1488, 0, 633, 634, 635,
	693, 694, 695, 1489, 637, 636, 638, 696, 639, 640,
	1490, 1491, 1492, 1493, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4416, 282, 284, 283, 285, 286, 287, 288,
	1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646, 1420,
	1421, 1422, 1423, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 1424,
	651, 301, 302, 303, 304, 305, 306, 1425, 1426, 0,
	307, 652, 653, 654, 1427, 308, 309, 655, 1428, 1495,
	1429, 310, 311, 312, 313, 314, 315, 316, 0, 1430,
	318, 319, 320, 317, 321, 1431, 322, 0, 323, 324,
	325, 326, 327, 328, 1432, 329, 330, 331, 1214, 332,
	333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 1440,
	345, 341, 343, 1441, 346, 344, 347, 1442, 348, 349,
	350, 1443, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 359, 1447, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 1448, 279, 1449, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 1450, 378, 379,
	380, 1451, 1452, 1215, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1453, 393,
	664, 1454, 665, 394, 1455, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1217, 400, 401, 1456, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1457, 1216, 410, 669, 670, 1458, 671, 1459, 411, 412,
	1218, 672, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1460, 423, 425,
	424, 1461, 426, 673, 1221, 427, 428, 1222, 1462, 429,
	430, 431, 432, 433, 434, 437, 1463, 1464, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1465, 281, 1225, 480,
	481, 1466, 674, 482, 675, 484, 485, 1467, 0, 486,
	0, 1468, 1469, 488, 489, 490, 1470, 1471, 491, 492,
	676, 1226, 493, 1227, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 1472, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 1473, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	1474, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 1475, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 1476,
	571, 572, 570, 573, 574, 575, 1477, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 1478, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 1479, 603, 604, 0, 600, 591, 1480, 605, 606,
	607, 608, 609, 610, 611, 612, 1481, 613, 687, 688,
	689, 690, 1482, 622, 1483, 614, 615, 616, 691, 617,
	692, 1484, 618, 619, 620, 621, 0, 623, 624, 1485,
	1486, 625, 626, 627, 629, 630, 628, 631, 1487, 632,
	1488, 0, 633, 634, 635, 693, 694, 695, 1489, 637,
	636, 638, 696, 639, 640, 1490, 1491, 1492, 1493, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4280, 282, 284,
	283, 285, 286, 287, 288, 1415, 289, 290, 1416, 1417,
	1418, 0, 1419, 646, 1420, 1421, 1422, 1423, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 1424, 651, 301, 302, 303, 304,
	305, 306, 1425, 1426, 0, 307, 652, 653, 654, 1427,
	308, 309, 655, 1428, 1495, 1429, 310, 311, 312, 313,
	314, 315, 316, 0, 1430, 318, 319, 320, 317, 321,
	1431, 322, 0, 323, 324, 325, 326, 327, 328, 1432,
	329, 330, 331, 1214, 332, 333, 334, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 1440, 345, 341, 343, 1441, 346,
	344, 347, 1442, 348, 349, 350, 1443, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 359, 1447,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 1448, 279, 1449,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 1450, 378, 379, 380, 1451, 1452, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1453, 393, 664, 1454, 665, 394, 1455,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 1456, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1457, 1216, 410, 669, 670,
	1458, 671, 1459, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1460, 423, 425, 424, 1461, 426, 673, 1221,
	427, 428, 1222, 1462, 429, 430, 431, 432, 433, 434,
	437, 1463, 1464, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1465, 281, 1225, 480, 481, 1466, 674, 482, 675,
	484, 485, 1467, 0, 486, 0, 1468, 1469, 488, 489,
	490, 1470, 1471, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1472, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 1473, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 1474, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1475,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1476, 571, 572, 570, 573, 574,
	575, 1477, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 1478,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 1479, 603, 604, 0,
	600, 591, 1480, 605, 606, 607, 608, 609, 610, 611,
	612, 1481, 613, 687, 688, 689, 690, 1482, 622, 1483,
	614, 615, 616, 691, 617, 692, 1484, 618, 619, 620,
	621, 0, 623, 624, 1485, 1486, 625, 626, 627, 629,
	630, 628, 631, 1487, 632, 1488, 0, 633, 634, 635,
	693, 694, 695, 1489, 637, 636, 638, 696, 639, 640,
	1490, 1491, 1492, 1493, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4126, 282, 284, 283, 285, 286, 287, 288,
	1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646, 1420,
	1421, 1422, 1423, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 1424,
	651, 301, 302, 303, 304, 305, 306, 1425, 1426, 0,
	307, 652, 653, 654, 1427, 308, 309, 655, 1428, 1495,
	1429, 310, 311, 312, 313, 314, 315, 316, 0, 1430,
	318, 319, 320, 317, 321, 1431, 322, 0, 323, 324,
	325, 326, 327, 328, 1432, 329, 330, 331, 1214, 332,
	333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 1440,
	345, 341, 343, 1441, 346, 344, 347, 1442, 348, 349,
	350, 1443, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 359, 1447, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 1448, 279, 1449, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 1450, 378, 379,
	380, 1451, 1452, 1215, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1453, 393,
	664, 1454, 665, 394, 1455, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1217, 400, 401, 1456, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1457, 1216, 410, 669, 670, 1458, 671, 1459, 411, 412,
	1218, 672, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1460, 423, 425,
	424, 1461, 426, 673, 1221, 427, 428, 1222, 1462, 429,
	430, 431, 432, 433, 434, 437, 1463, 1464, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1465, 281, 1225, 480,
	481, 1466, 674, 482, 675, 484, 485, 1467, 0, 486,
	0, 1468, 1469, 488, 489, 490, 1470, 1471, 491, 492,
	676, 1226, 493, 1227, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 1472, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 1473, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	1474, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 1475, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 1476,
	571, 572, 570, 573, 574, 575, 1477, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 1478, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 1479, 603, 604, 0, 600, 591, 1480, 605, 606,
	607, 608, 609, 610, 611, 612, 1481, 613, 687, 688,
	689, 690, 1482, 622, 1483, 614, 615, 616, 691, 617,
	692, 1484, 618, 619, 620, 621, 0, 623, 624, 1485,
	1486, 625, 626, 627, 629, 630, 628, 631, 1487, 632,
	1488, 0, 633, 634, 635, 693, 694, 695, 1489, 637,
	636, 638, 696, 639, 640, 1490, 1491, 1492, 1493, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3809, 282, 284,
	283, 285, 286, 287, 288, 1415, 289, 290, 1416, 1417,
	1418, 0, 1419, 646, 1420, 1421, 1422, 1423, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 1424, 651, 301, 302, 303, 304,
	305, 306, 1425, 1426, 0, 307, 652, 653, 654, 1427,
	308, 309, 655, 1428, 1495, 1429, 310, 311, 312, 313,
	314, 315, 316, 0, 1430, 318, 319, 320, 317, 321,
	1431, 322, 0, 323, 324, 325, 326, 327, 328, 1432,
	329, 330, 331, 1214, 332, 333, 334, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 1440, 345, 341, 343, 1441, 346,
	344, 347, 1442, 348, 349, 350, 1443, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 359, 1447,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 1448, 279, 1449,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 1450, 378, 379, 380, 1451, 1452, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1453, 393, 664, 1454, 665, 394, 1455,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 1456, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1457, 1216, 410, 669, 670,
	1458, 671, 1459, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1460, 423, 425, 424, 1461, 426, 673, 1221,
	427, 428, 1222, 1462, 429, 430, 431, 432, 433, 434,
	437, 1463, 1464, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1465, 281, 1225, 480, 481, 1466, 674, 482, 675,
	484, 485, 1467, 0, 486, 0, 1468, 1469, 488, 489,
	490, 1470, 1471, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1472, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 1473, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 1474, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1475,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1476, 571, 572, 570, 573, 574,
	575, 1477, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 1478,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 1479, 603, 604, 0,
	600, 591, 1480, 605, 606, 607, 608, 609, 610, 611,
	612, 1481, 613, 687, 688, 689, 690, 1482, 622, 1483,
	614, 615, 616, 691, 617, 692, 1484, 618, 619, 620,
	621, 0, 623, 624, 1485, 1486, 625, 626, 627, 629,
	630, 628, 631, 1487, 632, 1488, 0, 633, 634, 635,
	693, 694, 695, 1489, 637, 636, 638, 696, 639, 640,
	1490, 1491, 1492, 1493, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3629, 282, 284, 283, 285, 286, 287, 288,
	1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646, 1420,
	1421, 1422, 1423, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 1424,
	651, 301, 302, 303, 304, 305, 306, 1425, 1426, 0,
	307, 652, 653, 654, 1427, 308, 309, 655, 1428, 1495,
	1429, 310, 311, 312, 313, 314, 315, 316, 0, 1430,
	318, 319, 320, 317, 321, 1431, 322, 0, 323, 324,
	325, 326, 327, 328, 1432, 329, 330, 331, 1214, 332,
	333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 1440,
	345, 341, 343, 1441, 346, 344, 347, 1442, 348, 349,
	350, 1443, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 359, 1447, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 1448, 279, 1449, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 1450, 378, 379,
	380, 1451, 1452, 1215, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1453, 393,
	664, 1454, 665, 394, 1455, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1217, 400, 401, 1456, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1457, 1216, 410, 669, 670, 1458, 671, 1459, 411, 412,
	1218, 672, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1460, 423, 425,
	424, 1461, 426, 673, 1221, 427, 428, 1222, 1462, 429,
	430, 431, 432, 433, 434, 437, 1463, 1464, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1465, 281, 1225, 480,
	481, 1466, 674, 482, 675, 484, 485, 1467, 0, 486,
	0, 1468, 1469, 488, 489, 490, 1470, 1471, 491, 492,
	676, 1226, 493, 1227, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 1472, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 1473, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	1474, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 1475, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 1476,
	571, 572, 570, 573, 574, 575, 1477, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 1478, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 1479, 603, 604, 0, 600, 591, 1480, 605, 606,
	607, 608, 609, 610, 611, 612, 1481, 613, 687, 688,
	689, 690, 1482, 622, 1483, 614, 615, 616, 691, 617,
	692, 1484, 618, 619, 620, 621, 0, 623, 624, 1485,
	1486, 625, 626, 627, 629, 630, 628, 631, 1487, 632,
	1488, 0, 633, 634, 635, 693, 694, 695, 1489, 637,
	636, 638, 696, 639, 640, 1490, 1491, 1492, 1493, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2657, 282, 284,
	283, 285, 286, 287, 288, 1415, 289, 290, 1416, 1417,
	1418, 0, 1419, 646, 1420, 1421, 1422, 1423, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 1424, 651, 301, 302, 303, 304,
	305, 306, 1425, 1426, 0, 307, 652, 653, 654, 1427,
	308, 309, 655, 1428, 1495, 1429, 310, 311, 312, 313,
	314, 315, 316, 0, 1430, 318, 319, 320, 317, 321,
	1431, 322, 0, 323, 324, 325, 326, 327, 328, 1432,
	329, 330, 331, 1214, 332, 333, 334, 1433, 1434, 1436,
	1435, 1437, 1438, 1439, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 1440, 345, 341, 343, 1441, 346,
	344, 347, 1442, 348, 349, 350, 1443, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 359, 1447,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 1448, 279, 1449,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 1450, 378, 379, 380, 1451, 1452, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1453, 393, 664, 1454, 665, 394, 1455,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 1456, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1457, 1216, 410, 669, 670,
	1458, 671, 1459, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1460, 423, 425, 424, 1461, 426, 673, 1221,
	427, 428, 1222, 1462, 429, 430, 431, 432, 433, 434,
	437, 1463, 1464, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1465, 281, 1225, 480, 481, 1466, 674, 482, 675,
	484, 485, 1467, 0, 486, 0, 1468, 1469, 488, 489,
	490, 1470, 1471, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1472, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 1473, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 1474, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1475,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1476, 571, 572, 570, 573, 574,
	575, 1477, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 1478,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 1479, 603, 604, 0,
	600, 591, 1480, 605, 606, 607, 608, 609, 610, 611,
	612, 1481, 613, 687, 688, 689, 690, 1482, 622, 1483,
	614, 615, 616, 691, 617, 692, 1484, 618, 619, 620,
	621, 0, 623, 624, 1485, 1486, 625, 626, 627, 629,
	630, 628, 631, 1487, 632, 1488, 0, 633, 634, 635,
	693, 694, 695, 1489, 637, 636, 638, 696, 639, 640,
	1490, 1491, 1492, 1493, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 1506, 0, 1409, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2282, 282, 284, 283, 285, 286, 287, 288,
	1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646, 1420,
	1421, 1422, 1423, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 1424,
	651, 301, 302, 303, 304, 305, 306, 1425, 1426, 0,
	307, 652, 653, 654, 1427, 308, 309, 655, 1428, 1495,
	1429, 310, 311, 312, 313, 314, 315, 316, 0, 1430,
	318, 319, 320, 317, 321, 1431, 322, 0, 323, 324,
	325, 326, 327, 328, 1432, 329, 330, 331, 1214, 332,
	333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 1440,
	345, 341, 343, 1441, 346, 344, 347, 1442, 348, 349,
	350, 1443, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 359, 1447, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 1512, 369, 370, 371, 372, 659,
	660, 373, 1448, 279, 1449, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 1450, 378, 379,
	380, 1451, 1452, 1215, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1453, 393,
	664, 1454, 665, 394, 1455, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1217, 400, 401, 1456, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1457, 1216, 410, 669, 670, 1458, 671, 1459, 411, 412,
	1218, 672, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1460, 423, 425,
	424, 1461, 426, 673, 1221, 427, 428, 1222, 1462, 429,
	430, 431, 432, 433, 434, 437, 1463, 1464, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1465, 281, 1225, 480,
	481, 1466, 674, 482, 675, 484, 485, 1467, 0, 486,
	0, 1468, 1469, 488, 489, 490, 1470, 1471, 491, 492,
	676, 1226, 493, 1227, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 1472, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 1473, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	1474, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 1513, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 1475, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 1476,
	571, 572, 570, 573, 574, 575, 1477, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 1478, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 1479, 603, 604, 0, 600, 591, 1480, 605, 606,
	607, 608, 609, 610, 1511, 612, 1481, 613, 687, 688,
	689, 690, 1482, 622, 1483, 614, 615, 616, 691, 617,
	692, 1484, 618, 619, 620, 621, 0, 623, 624, 1485,
	1486, 625, 626, 627, 629, 630, 628, 631, 1487, 632,
	1488, 0, 633, 634, 635, 693, 694, 695, 1489, 637,
	636, 638, 696, 639, 640, 1490, 1491, 1492, 1493, 641,
	642, 697, 643, 644, 645, 1406, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646,
	1420, 1421, 1422, 1423, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1424, 651, 301, 302, 303, 304, 305, 306, 1425, 1426,
	0, 307, 652, 653, 654, 1427, 308, 309, 655, 1428,
	1495, 1429, 310, 311, 312, 313, 314, 315, 316, 0,
	1430, 318, 319, 320, 317, 321, 1431, 322, 0, 323,
	324, 325, 326, 327, 328, 1432, 329, 330, 331, 1214,
	332, 333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1440, 345, 341, 343, 1441, 346, 344, 347, 1442, 348,
	349, 350, 1443, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 359, 1447, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 1448, 279, 1449, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1450, 378,
	379, 380, 1451, 1452, 1215, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1453,
	393, 664, 1454, 665, 394, 1455, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1217, 400, 401, 1456, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1457, 1216, 410, 669, 670, 1458, 671, 1459, 411,
	412, 1218, 672, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1460, 423,
	425, 424, 1461, 426, 673, 1221, 427, 428, 1222, 1462,
	429, 430, 431, 432, 433, 434, 437, 1463, 1464, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1465, 281, 1225,
	480, 481, 1466, 674, 482, 675, 484, 485, 1467, 0,
	486, 0, 1468, 1469, 488, 489, 490, 1470, 1471, 491,
	492, 676, 1226, 493, 1227, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1472, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1473, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1474, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1475, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1476, 571, 572, 570, 573, 574, 575, 1477, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1478, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1479, 603, 604, 0, 600, 591, 1480, 605,
	606, 607, 608, 609, 610, 611, 612, 1481, 613, 687,
	688, 689, 690, 1482, 622, 1483, 614, 615, 616, 691,
	617, 692, 1484, 618, 619, 620, 621, 0, 623, 624,
	1485, 1486, 625, 626, 627, 629, 630, 628, 631, 1487,
	632, 1488, 0, 633, 634, 635, 693, 694, 695, 1489,
	637, 636, 638, 696, 639, 640, 1490, 1491, 1492, 1493,
	641, 642, 697, 643, 644, 645, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	1415, 289, 290, 1416, 1417, 1418, 0, 1419, 646, 1420,
	1421, 1422, 1423, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 1424,
	651, 301, 302, 303, 304, 305, 306, 1425, 1426, 0,
	307, 652, 653, 654, 1427, 308, 309, 655, 1428, 1495,
	1429, 310, 311, 312, 313, 314, 315, 316, 0, 1430,
	318, 319, 320, 317, 321, 1431, 322, 0, 323, 324,
	325, 326, 327, 328, 1432, 329, 330, 331, 1214, 332,
	333, 334, 1433, 1434, 1436, 1435, 1437, 1438, 1439, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 1440,
	345, 341, 343, 1441, 346, 344, 347, 1442, 348, 349,
	350, 1443, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 359, 1447, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 1448, 279, 1449, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 1450, 378, 379,
	380, 1451, 1452, 1215, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1453, 393,
	664, 1454, 665, 394, 1455, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1217, 400, 401, 1456, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1457, 1216, 410, 669, 670, 1458, 671, 1459, 411, 412,
	1218, 672, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1460, 423, 425,
	424, 1461, 426, 673, 1221, 427, 428, 1222, 1462, 429,
	430, 431, 432, 433, 434, 437, 1463, 1464, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1465, 281, 1225, 480,
	481, 1466, 674, 482, 675, 484, 485, 1467, 0, 486,
	0, 1468, 1469, 488, 489, 490, 1470, 1471, 491, 492,
	676, 1226, 493, 1227, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 1472, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 1473, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	1474, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 1475, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 1476,
	571, 572, 570, 573, 574, 575, 1477, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 1478, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 1479, 603, 604, 0, 600, 591, 1480, 605, 606,
	607, 608, 609, 610, 611, 612, 1481, 613, 687, 688,
	689, 690, 1482, 622, 1483, 614, 615, 616, 691, 617,
	692, 1484, 618, 619, 620, 621, 0, 623, 624, 1485,
	1486, 625, 626, 627, 629, 630, 628, 631, 1487, 632,
	1488, 0, 633, 634, 635, 693, 694, 695, 1489, 637,
	636, 638, 696, 639, 640, 1490, 1491, 1492, 1493, 641,
	642, 697, 643, 644, 645, 2632, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 2629, 289, 290, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 2630, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 2628,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 2631, 0,
	0, 0, 0, 0, 0, 1133, 2627, 0, 1093, 1131,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1173, 1137, 0, 0, 0, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 1186, 0, 299,
	1193, 300, 1192, 0, 1203, 301, 302, 303, 304, 305,
	306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308,
	309, 1179, 0, 1160, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 335, 336, 337, 338, 339, 1196, 340,
	342, 1190, 1189, 1109, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1181, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1115, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1204, 1205, 373, 1128, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1188, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 1201, 1202, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1211, 0, 1138, 394, 0, 395,
	396, 397, 398, 399, 1174, 1175, 1178, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1216, 410, 1183, 1184, 0,
	1144, 0, 411, 412, 1218, 1176, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1212, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	1167, 1166, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 1206, 494,
	495, 1116, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1207, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1187, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 1117, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 241, 571, 572, 570, 573, 574, 575,
	1170, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 1185, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1232, 594, 595,
	596, 597, 1208, 601, 602, 0, 603, 604, 1103, 600,
	591, 243, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1197, 1198, 1199, 1200, 0, 622, 0, 614,
	615, 616, 1209, 617, 1210, 1127, 618, 619, 620, 621,
	0, 623, 624, 0, 1110, 625, 626, 627, 629, 630,
	628, 631, 1171, 632, 0, 0, 633, 634, 635, 1647,
	1194, 1231, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 235, 641, 642, 697, 643, 644, 645, 1107,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1908, 1906,
	0, 0, 1131, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 1218, 1176, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 241, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 243, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 623, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	1647, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 235, 641, 642, 697, 643, 644, 645,
	1107, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1908,
	3265, 0, 0, 1131, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1173, 1137, 0, 0, 0, 291,
	292, 1213, 293, 294, 295, 296, 297, 298, 647, 1186,
	0, 299, 1193, 300, 1192, 0, 1203, 301, 302, 303,
	304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654,
	0, 308, 309, 1179, 0, 1160, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1214, 332, 333, 334, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338, 339,
	1196, 340, 342, 1190, 1189, 1109, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1181, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1115, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1204, 1205, 373, 1128, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1188, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1215,
	381, 382, 383, 1201, 1202, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1211, 0, 1138, 394,
	0, 395, 396, 397, 398, 399, 1174, 1175, 1178, 483,
	1217, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1216, 410, 1183,
	1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219, 413,
	414, 415, 1220, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1212,
	1221, 427, 428, 1222, 0, 429, 430, 431, 432, 433,
	434, 437, 1167, 1166, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1223, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1224,
	479, 467, 1106, 281, 1225, 480, 481, 1129, 1177, 482,
	1191, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1226, 493, 1227,
	1206, 494, 495, 1116, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1207, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1187, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1228, 549, 550, 551, 552, 553,
	1117, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 241, 571, 572, 570, 573,
	574, 575, 1170, 576, 577, 559, 560, 578, 579, 1229,
	580, 581, 582, 583, 584, 585, 586, 1185, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1232,
	594, 595, 596, 597, 1208, 601, 602, 0, 603, 604,
	1103, 600, 591, 243, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1197, 1198, 1199, 1200, 0, 622,
	0, 614, 615, 616, 1209, 617, 1210, 1127, 618, 619,
	620, 621, 0, 623, 624, 0, 1110, 625, 626, 627,
	629, 630, 628, 631, 1171, 632, 0, 0, 633, 634,
	635, 1647, 1194, 1231, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 235, 641, 642, 697, 643, 644,
	645, 1107, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1908, 1906, 0, 0, 1131, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 2763, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 2768,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 2764, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 2765, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 2677, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 0, 1133, 2675, 0, 2674, 1131,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1173, 1137, 0, 0, 0, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 1186, 0, 299,
	1193, 300, 1192, 0, 1203, 301, 302, 303, 304, 305,
	306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308,
	309, 1179, 0, 1160, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 335, 336, 337, 338, 339, 1196, 340,
	342, 1190, 1189, 1109, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1181, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1115, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1204, 1205, 373, 1128, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1188, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 1201, 1202, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1211, 0, 1138, 394, 0, 395,
	396, 397, 398, 399, 1174, 1175, 1178, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1216, 410, 1183, 1184, 0,
	1144, 0, 411, 412, 1218, 1176, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1212, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	1167, 1166, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 1206, 494,
	495, 1116, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1207, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1187, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 1117, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1170, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 1185, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1232, 594, 595,
	596, 597, 1208, 601, 602, 0, 603, 604, 1103, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1197, 1198, 1199, 1200, 0, 622, 0, 614,
	615, 616, 1209, 617, 1210, 1127, 618, 619, 620, 621,
	0, 623, 624, 0, 1110, 625, 626, 627, 629, 630,
	628, 631, 1171, 632, 0, 0, 633, 634, 635, 693,
	1194, 1231, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 0, 0, 0, 0, 0, 0, 1133, 2672,
	0, 2671, 1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 0, 0, 0, 0, 0,
	0, 1133, 2669, 0, 2668, 1131, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1173, 1137,
	0, 0, 0, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 1186, 0, 299, 1193, 300, 1192, 0,
	1203, 301, 302, 303, 304, 305, 306, 1139, 1172, 1104,
	307, 1233, 1234, 654, 0, 308, 309, 1179, 0, 1160,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1214, 332,
	333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335,
	336, 337, 338, 339, 1196, 340, 342, 1190, 1189, 1109,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1181, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1115, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1204,
	1205, 373, 1128, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1188, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1215, 381, 382, 383, 1201, 1202, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1211, 0, 1138, 394, 0, 395, 396, 397, 398, 399,
	1174, 1175, 1178, 483, 1217, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1216, 410, 1183, 1184, 0, 1144, 0, 411, 412,
	1218, 1176, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1212, 1221, 427, 428, 1222, 0, 429,
	430, 431, 432, 433, 434, 437, 1167, 1166, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1106, 281, 1225, 480,
	481, 1129, 1177, 482, 1191, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1226, 493, 1227, 1206, 494, 495, 1116, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1207, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1187, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 1117, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1170, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 1185, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1232, 594, 595, 596, 597, 1208, 601,
	602, 0, 603, 604, 1103, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1197, 1198,
	1199, 1200, 0, 622, 0, 614, 615, 616, 1209, 617,
	1210, 1127, 618, 619, 620, 621, 0, 623, 624, 0,
	1110, 625, 626, 627, 629, 630, 628, 631, 1171, 632,
	0, 0, 633, 634, 635, 693, 1194, 1231, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 0, 0,
	0, 0, 0, 0, 1133, 2666, 0, 1747, 1131, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1173, 1137, 0, 0, 0, 291, 292, 1213, 293,
	294, 295, 296, 297, 298, 647, 1186, 0, 299, 1193,
	300, 1192, 0, 1203, 301, 302, 303, 304, 305, 306,
	1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308, 309,
	1179, 0, 1160, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 335, 336, 337, 338, 339, 1196, 340, 342,
	1190, 1189, 1109, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1181, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1115, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1204, 1205, 373, 1128, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1188, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1215, 381, 382, 383,
	1201, 1202, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1211, 0, 1138, 394, 0, 395, 396,
	397, 398, 399, 1174, 1175, 1178, 483, 1217, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1216, 410, 1183, 1184, 0, 1144,
	0, 411, 412, 1218, 1176, 1219, 413, 414, 415, 1220,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1212, 1221, 427, 428,
	1222, 0, 429, 430, 431, 432, 433, 434, 437, 1167,
	1166, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1223, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1224, 479, 467, 1106,
	281, 1225, 480, 481, 1129, 1177, 482, 1191, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1226, 493, 1227, 1206, 494, 495,
	1116, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1207, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1187, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1228, 549, 550, 551, 552, 553, 1117, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1170,
	576, 577, 559, 560, 578, 579, 1229, 580, 581, 582,
	583, 584, 585, 586, 1185, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1232, 594, 595, 596,
	597, 1208, 601, 602, 0, 603, 604, 1103, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1197, 1198, 1199, 1200, 0, 622, 0, 614, 615,
	616, 1209, 617, 1210, 1127, 618, 619, 620, 621, 0,
	623, 624, 0, 1110, 625, 626, 627, 629, 630, 628,
	631, 1171, 632, 0, 0, 633, 634, 635, 693, 1194,
	1231, 0, 637, 636, 638, 696, 639, 640, 1746, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1107, 0,
	0, 1096, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	282, 284, 283, 285, 286, 287, 288, 1133, 289, 290,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 1111, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 4772, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 1111, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 282, 284,
	283, 285, 286, 287, 288, 1133, 289, 290, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 2509, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 1218, 1176, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 2508, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 623, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	693, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1107, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 282, 284, 283, 285, 286, 287, 288, 1133,
	289, 290, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 1186, 0, 299, 1193, 300, 1192, 0, 1203,
	301, 302, 303, 304, 305, 306, 1139, 1172, 1104, 307,
	1233, 1234, 654, 0, 308, 309, 1179, 0, 1160, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336,
	337, 338, 339, 1196, 340, 342, 1190, 1189, 1109, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1181, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1115, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1204, 1205,
	373, 1128, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1188, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 1201, 1202, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1211,
	0, 1138, 394, 0, 395, 396, 397, 398, 399, 1174,
	1175, 1178, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1216, 410, 1183, 1184, 0, 1144, 0, 411, 412, 1218,
	1176, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1212, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 1167, 1166, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 1106, 281, 1225, 480, 481,
	1129, 1177, 482, 1191, 484, 485, 0, 0, 486, 0,
	1111, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 1206, 494, 495, 1116, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1207, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1187, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 1117, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1170, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	1185, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1232, 594, 595, 596, 597, 1208, 601, 602,
	0, 603, 604, 1103, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1197, 1198, 1199,
	1200, 0, 622, 0, 614, 615, 616, 1209, 617, 1210,
	1127, 618, 619, 620, 621, 0, 623, 624, 0, 1110,
	625, 626, 627, 629, 630, 628, 631, 1171, 632, 0,
	0, 633, 634, 635, 693, 1194, 1231, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1107, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 282, 284, 283, 285,
	286, 287, 288, 1133, 289, 290, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 291, 292, 1213, 293,
	294, 295, 296, 297, 298, 647, 1186, 0, 299, 1193,
	300, 1192, 0, 1203, 301, 302, 303, 304, 305, 306,
	1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308, 309,
	1179, 0, 1160, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 4501, 328, 0, 329, 330,
	331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 335, 336, 337, 338, 339, 1196, 340, 342,
	1190, 1189, 1109, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1181, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1115, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1204, 1205, 373, 1128, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1188, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1215, 381, 382, 383,
	1201, 1202, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1211, 0, 1138, 394, 0, 395, 396,
	397, 398, 399, 1174, 1175, 1178, 483, 1217, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1216, 410, 1183, 1184, 0, 1144,
	0, 411, 412, 1218, 1176, 1219, 413, 414, 415, 1220,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1212, 1221, 427, 428,
	1222, 0, 429, 430, 431, 432, 433, 434, 437, 1167,
	1166, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1223, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1224, 479, 467, 1106,
	281, 1225, 480, 481, 1129, 1177, 482, 1191, 484, 485,
	0, 0, 486, 0, 1111, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1226, 493, 1227, 1206, 494, 495,
	1116, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1207, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1187, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1228, 549, 550, 551, 552, 553, 1117, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1170,
	576, 577, 559, 560, 578, 579, 1229, 580, 581, 582,
	583, 584, 585, 586, 1185, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1232, 594, 595, 596,
	597, 1208, 601, 602, 0, 603, 604, 1103, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1197, 1198, 1199, 1200, 0, 622, 0, 614, 615,
	616, 1209, 617, 1210, 1127, 618, 619, 620, 621, 0,
	623, 624, 0, 1110, 625, 626, 627, 629, 630, 628,
	631, 1171, 632, 0, 0, 633, 634, 635, 693, 1194,
	1231, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1107, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	282, 284, 283, 285, 286, 287, 288, 1133, 289, 290,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 4092, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 1977, 0, 0, 0, 0, 0,
	0, 1133, 0, 0, 0, 1131, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1173, 1137,
	0, 0, 0, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 1186, 0, 299, 1193, 300, 1192, 0,
	1203, 301, 302, 303, 304, 305, 306, 1139, 1172, 1104,
	307, 1233, 1234, 654, 0, 308, 309, 1179, 0, 1160,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1214, 332,
	333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335,
	336, 337, 338, 339, 1196, 340, 342, 1190, 1189, 1109,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1181, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1115, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1204,
	1205, 373, 1128, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1188, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1215, 381, 382, 383, 1201, 1202, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1211, 0, 1138, 394, 0, 395, 396, 397, 398, 399,
	1174, 1175, 1178, 483, 1217, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1216, 410, 1183, 1184, 0, 1144, 0, 411, 412,
	1218, 1176, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1212, 1221, 427, 428, 1222, 0, 429,
	430, 431, 432, 433, 434, 437, 1167, 1166, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1106, 281, 1225, 480,
	481, 1129, 1177, 482, 1191, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1226, 493, 1227, 1206, 494, 495, 1116, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1207, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1187, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 1117, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1170, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 1185, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1232, 594, 595, 596, 597, 1208, 601,
	602, 0, 603, 604, 1103, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1197, 1198,
	1199, 1200, 0, 622, 0, 614, 615, 616, 1209, 617,
	1210, 1127, 618, 619, 620, 621, 0, 623, 624, 0,
	1110, 625, 626, 627, 629, 630, 628, 631, 1171, 632,
	0, 0, 633, 634, 635, 693, 1194, 1231, 3787, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1107, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 282, 284, 283,
	285, 286, 287, 288, 1133, 289, 290, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 1186, 0, 299,
	1193, 300, 1192, 0, 1203, 301, 302, 303, 304, 305,
	306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308,
	309, 1179, 0, 1160, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 335, 336, 337, 338, 339, 1196, 340,
	342, 1190, 1189, 1109, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1181, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1115, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1204, 1205, 373, 1128, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1188, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 1201, 1202, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1211, 0, 1138, 394, 0, 395,
	396, 397, 398, 399, 1174, 1175, 1178, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1216, 410, 1183, 1184, 0,
	1144, 0, 411, 412, 1218, 1176, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1212, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	1167, 1166, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 1206, 494,
	495, 1116, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1207, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1187, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 1117, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1170, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 1185, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1232, 594, 595,
	596, 597, 1208, 601, 602, 0, 603, 604, 1103, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1197, 1198, 1199, 1200, 0, 622, 0, 614,
	615, 616, 1209, 617, 1210, 1127, 618, 619, 620, 621,
	0, 623, 624, 0, 1110, 625, 626, 627, 629, 630,
	628, 631, 1171, 632, 0, 0, 633, 634, 635, 693,
	1194, 1231, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 1977, 0, 0, 0, 0, 0, 0, 1133, 0,
	0, 0, 1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 2768,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 0, 1133, 1906, 0, 2773, 1131,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1173, 1137, 0, 0, 0, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 1186, 0, 299,
	1193, 300, 1192, 0, 1203, 301, 302, 303, 304, 305,
	306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308,
	309, 1179, 0, 1160, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 335, 336, 337, 338, 339, 1196, 340,
	342, 1190, 1189, 1109, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1181, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1115, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1204, 1205, 373, 1128, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1188, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 1201, 1202, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1211, 0, 1138, 394, 0, 395,
	396, 397, 398, 399, 1174, 1175, 1178, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1216, 410, 1183, 1184, 0,
	1144, 0, 411, 412, 1218, 1176, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1212, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	1167, 1166, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 1206, 494,
	495, 1116, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1207, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1187, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 1117, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1170, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 1185, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1232, 594, 595,
	596, 597, 1208, 601, 602, 0, 603, 604, 1103, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1197, 1198, 1199, 1200, 0, 622, 0, 614,
	615, 616, 1209, 617, 1210, 1127, 618, 619, 620, 621,
	0, 623, 624, 0, 1110, 625, 626, 627, 629, 630,
	628, 631, 1171, 632, 0, 0, 633, 634, 635, 693,
	1194, 1231, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1107,
	0, 0, 2771, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 0, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 282, 284, 283, 285, 286, 287, 288, 1133, 289,
	290, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 1186, 0, 299, 1193, 300, 1192, 0, 1203, 301,
	302, 303, 304, 305, 306, 1139, 1172, 1104, 307, 1233,
	1234, 654, 0, 308, 309, 1179, 0, 1160, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337,
	338, 339, 1196, 340, 342, 1190, 1189, 1109, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1181, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1115, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1204, 1205, 373,
	1128, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1188, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 1201, 1202, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1211, 0,
	1138, 394, 0, 395, 396, 397, 398, 399, 1174, 1175,
	1178, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1216,
	410, 1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1212, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 1167, 1166, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 1106, 281, 1225, 480, 481, 1129,
	1177, 482, 1191, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 1206, 494, 495, 1116, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1207, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1187, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 1117, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1170, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 1185,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1232, 594, 595, 596, 597, 1208, 601, 602, 0,
	603, 604, 1103, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1197, 1198, 1199, 1200,
	0, 622, 0, 614, 615, 616, 1209, 617, 1210, 1127,
	618, 619, 620, 621, 0, 623, 624, 0, 1110, 625,
	626, 627, 629, 630, 628, 631, 1171, 632, 0, 0,
	633, 634, 635, 693, 1194, 1231, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1107, 0, 0, 2759, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 282, 284, 283, 285, 286,
	287, 288, 1133, 289, 290, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 291, 292, 1213, 293, 294,
	295, 296, 297, 298, 647, 1186, 0, 299, 1193, 300,
	1192, 0, 1203, 301, 302, 303, 304, 305, 306, 1139,
	1172, 1104, 307, 1233, 1234, 654, 0, 308, 309, 1179,
	0, 1160, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 335, 336, 337, 338, 339, 1196, 340, 342, 1190,
	1189, 1109, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1181, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1115,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1204, 1205, 373, 1128, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1188, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1215, 381, 382, 383, 1201,
	1202, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1211, 0, 1138, 394, 0, 395, 396, 397,
	398, 399, 1174, 1175, 1178, 483, 1217, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1216, 410, 1183, 1184, 0, 1144, 0,
	411, 412, 1218, 1176, 1219, 413, 414, 415, 1220, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1212, 1221, 427, 428, 1222,
	0, 429, 430, 431, 432, 433, 434, 437, 1167, 1166,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1223,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1224, 479, 467, 1106, 281,
	1225, 480, 481, 1129, 1177, 482, 1191, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1226, 493, 1227, 1206, 494, 495, 1116,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1207, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1187, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1228, 549, 550, 551, 552, 553, 1117, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1170, 576,
	577, 559, 560, 578, 579, 1229, 580, 581, 582, 583,
	584, 585, 586, 1185, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1232, 594, 595, 596, 597,
	1208, 601, 602, 0, 603, 604, 1103, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1197, 1198, 1199, 1200, 0, 622, 0, 614, 615, 616,
	1209, 617, 1210, 1127, 618, 619, 620, 621, 0, 623,
	624, 0, 1110, 625, 626, 627, 629, 630, 628, 631,
	1171, 632, 0, 0, 633, 634, 635, 693, 1194, 1231,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1107, 0, 0,
	2747, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 282,
	284, 283, 285, 286, 287, 288, 1133, 289, 290, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 291,
	292, 1213, 293, 294, 295, 296, 297, 298, 647, 1186,
	0, 299, 1193, 300, 1192, 0, 1203, 301, 302, 303,
	304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654,
	0, 308, 309, 1179, 0, 1160, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1214, 332, 333, 334, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338, 339,
	1196, 340, 342, 1190, 1189, 1109, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1181, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1115, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1204, 1205, 373, 1128, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1188, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1215,
	381, 382, 383, 1201, 1202, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1211, 0, 1138, 394,
	0, 395, 396, 397, 398, 399, 1174, 1175, 1178, 483,
	1217, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1216, 410, 1183,
	1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219, 413,
	414, 415, 1220, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1212,
	1221, 427, 428, 1222, 0, 429, 430, 431, 432, 433,
	434, 437, 1167, 1166, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1223, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1224,
	479, 467, 1106, 281, 1225, 480, 481, 1129, 1177, 482,
	1191, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1226, 493, 1227,
	1206, 494, 495, 1116, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1207, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1187, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1228, 549, 550, 551, 552, 553,
	1117, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1170, 576, 577, 559, 560, 578, 579, 1229,
	580, 581, 582, 583, 584, 585, 586, 1185, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1232,
	594, 595, 596, 597, 1208, 601, 602, 0, 603, 604,
	1103, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1197, 1198, 1199, 1200, 0, 622,
	0, 614, 615, 616, 1209, 617, 1210, 1127, 618, 619,
	620, 621, 0, 623, 624, 0, 1110, 625, 626, 627,
	629, 630, 628, 631, 1171, 632, 0, 0, 633, 634,
	635, 693, 1194, 1231, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1107, 0, 0, 2745, 0, 2736, 2743, 1122, 1123,
	1119, 1120, 1132, 0, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 282, 284, 283, 285, 286, 287, 288,
	1133, 289, 290, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 1186, 0, 299, 1193, 300, 1192, 0,
	1203, 301, 302, 303, 304, 305, 306, 1139, 1172, 1104,
	307, 1233, 1234, 654, 0, 308, 309, 1179, 0, 1160,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1214, 332,
	333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335,
	336, 337, 338, 339, 1196, 2739, 342, 1190, 1189, 1109,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1181, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1115, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1204,
	1205, 373, 1128, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1188, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1215, 381, 382, 383, 1201, 1202, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1211, 0, 1138, 394, 0, 395, 396, 397, 2740, 399,
	1174, 1175, 1178, 483, 1217, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1216, 410, 1183, 1184, 0, 1144, 0, 411, 412,
	1218, 1176, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1212, 1221, 427, 428, 1222, 0, 429,
	430, 431, 432, 433, 434, 437, 1167, 1166, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 2741,
	447, 2738, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 1106, 281, 1225, 480,
	481, 1129, 1177, 482, 1191, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1226, 493, 1227, 1206, 494, 495, 1116, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1207, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1187, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 1117, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 2742, 0,
	571, 572, 570, 573, 574, 575, 1170, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 1185, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1232, 594, 595, 596, 597, 1208, 601,
	602, 0, 603, 604, 1103, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1197, 1198,
	1199, 1200, 0, 622, 0, 614, 615, 616, 1209, 617,
	1210, 1127, 618, 619, 620, 621, 0, 623, 624, 0,
	1110, 625, 626, 627, 629, 630, 628, 631, 1171, 632,
	0, 0, 633, 634, 635, 693, 1194, 1231, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 2737, 645, 1107, 0, 0, 2733, 0,
	2736, 2743, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 282, 284, 283,
	285, 286, 287, 288, 1133, 289, 290, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 1186, 0, 299,
	1193, 300, 1192, 0, 1203, 301, 302, 303, 304, 305,
	306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308,
	309, 1179, 0, 1160, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 335, 336, 337, 338, 339, 1196, 2739,
	342, 1190, 1189, 1109, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1181, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1115, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1204, 1205, 373, 1128, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1188, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 1201, 1202, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1211, 0, 1138, 394, 0, 395,
	396, 397, 2740, 399, 1174, 1175, 1178, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1216, 410, 1183, 1184, 0,
	1144, 0, 411, 412, 1218, 1176, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1212, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	1167, 1166, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 2741, 447, 2738, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 1206, 494,
	495, 1116, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1207, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1187, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 1117, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 2742, 0, 571, 572, 570, 573, 574, 575,
	1170, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 1185, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1232, 594, 595,
	596, 597, 1208, 601, 602, 0, 603, 604, 1103, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1197, 1198, 1199, 1200, 0, 622, 0, 614,
	615, 616, 1209, 617, 1210, 1127, 618, 619, 620, 621,
	0, 623, 624, 0, 1110, 625, 626, 627, 629, 630,
	628, 631, 1171, 632, 0, 0, 633, 634, 635, 693,
	1194, 1231, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 2737, 645, 1107,
	0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 0, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 282, 284, 283, 285, 286, 287, 288, 1133, 289,
	290, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 1186, 0, 299, 1193, 300, 1192, 0, 1203, 301,
	302, 303, 304, 305, 306, 1139, 1172, 1104, 307, 1233,
	1234, 654, 0, 308, 309, 1179, 0, 1160, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337,
	338, 339, 1196, 340, 342, 1190, 1189, 1109, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1181, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1115, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1204, 1205, 373,
	1128, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1188, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 1201, 1202, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1211, 0,
	1138, 394, 0, 395, 396, 397, 398, 399, 1174, 1175,
	1178, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1216,
	410, 1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1212, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 1167, 1166, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 1106, 281, 1225, 480, 481, 1129,
	1177, 482, 1191, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 1206, 494, 495, 1116, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1207, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1187, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 1117, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1170, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 1185,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1232, 594, 595, 596, 597, 1208, 601, 602, 0,
	603, 604, 1103, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1197, 1198, 1199, 1200,
	0, 622, 0, 614, 615, 616, 1209, 617, 1210, 1127,
	618, 619, 620, 621, 0, 623, 624, 0, 1110, 625,
	626, 627, 629, 630, 628, 631, 1171, 632, 0, 0,
	633, 634, 635, 693, 1194, 1231, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 0, 0, 0, 0,
	1914, 0, 1133, 0, 0, 0, 1131, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 2488, 289, 290, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 2450,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 282, 284,
	283, 285, 286, 287, 288, 1133, 289, 290, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 1218, 1176, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 623, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	693, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1107, 0, 0, 2423, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 282, 284, 283, 285, 286, 287, 288, 1133,
	289, 290, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 1186, 0, 299, 1193, 300, 1192, 0, 1203,
	301, 302, 303, 304, 305, 306, 1139, 1172, 1104, 307,
	1233, 1234, 654, 0, 308, 309, 1179, 0, 1160, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336,
	337, 338, 339, 1196, 340, 342, 1190, 1189, 1109, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1181, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1115, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1204, 1205,
	373, 1128, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1188, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 1201, 1202, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1211,
	0, 1138, 394, 0, 395, 396, 397, 398, 399, 1174,
	1175, 1178, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1216, 410, 1183, 1184, 0, 1144, 0, 411, 412, 1218,
	1176, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1212, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 1167, 1166, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 1106, 281, 1225, 480, 481,
	1129, 1177, 482, 1191, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 1206, 494, 495, 1116, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1207, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1187, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 1117, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1170, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	1185, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1232, 594, 595, 596, 597, 1208, 601, 602,
	0, 603, 604, 1103, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1197, 1198, 1199,
	1200, 0, 622, 0, 614, 615, 616, 1209, 617, 1210,
	1127, 618, 619, 620, 621, 0, 623, 624, 0, 1110,
	625, 626, 627, 629, 630, 628, 631, 1171, 632, 0,
	0, 633, 634, 635, 693, 1194, 1231, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1107, 0, 0, 1752, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 282, 284, 283, 285,
	286, 287, 288, 1133, 289, 290, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 291, 292, 1213, 293,
	294, 295, 296, 297, 298, 647, 1186, 0, 299, 1193,
	300, 1192, 0, 1203, 301, 302, 303, 304, 305, 306,
	1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308, 309,
	1179, 0, 1160, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 335, 336, 337, 338, 339, 1196, 340, 342,
	1190, 1189, 1109, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1181, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1115, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1204, 1205, 373, 1128, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1188, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1215, 381, 382, 383,
	1201, 1202, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1211, 0, 1138, 394, 0, 395, 396,
	397, 398, 399, 1174, 1175, 1178, 483, 1217, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1216, 410, 1183, 1184, 0, 1144,
	0, 411, 412, 1218, 1176, 1219, 413, 414, 415, 1220,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1212, 1221, 427, 428,
	1222, 0, 429, 430, 431, 432, 433, 434, 437, 1167,
	1166, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1223, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1224, 479, 467, 1106,
	281, 1225, 480, 481, 1129, 1177, 482, 1191, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1226, 493, 1227, 1206, 494, 495,
	1116, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1207, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1187, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1228, 549, 550, 551, 552, 553, 1117, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1170,
	576, 577, 559, 560, 578, 579, 1229, 580, 581, 582,
	583, 584, 585, 586, 1185, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1232, 594, 595, 596,
	597, 1208, 601, 602, 0, 603, 604, 1103, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1197, 1198, 1199, 1200, 0, 622, 0, 614, 615,
	616, 1209, 617, 1210, 1127, 618, 619, 620, 621, 0,
	623, 624, 0, 1110, 625, 626, 627, 629, 630, 628,
	631, 1171, 632, 0, 0, 633, 634, 635, 693, 1194,
	1231, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1107, 0,
	0, 1681, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	282, 284, 283, 285, 286, 287, 288, 1133, 289, 290,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 1676, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 1663,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 282, 284,
	283, 285, 286, 287, 288, 1133, 289, 290, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 1218, 1176, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 623, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	693, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1107, 0, 0, 1658, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 282, 284, 283, 285, 286, 287, 288, 1133,
	289, 290, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 1186, 0, 299, 1193, 300, 1192, 0, 1203,
	301, 302, 303, 304, 305, 306, 1139, 1172, 1104, 307,
	1233, 1234, 654, 0, 308, 309, 1179, 0, 1160, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336,
	337, 338, 339, 1196, 340, 342, 1190, 1189, 1109, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1181, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1115, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1204, 1205,
	373, 1128, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1188, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 1201, 1202, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1211,
	0, 1138, 394, 0, 395, 396, 397, 398, 399, 1174,
	1175, 1178, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1216, 410, 1183, 1184, 0, 1144, 0, 411, 412, 1218,
	1176, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1212, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 1167, 1166, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 1106, 281, 1225, 480, 481,
	1129, 1177, 482, 1191, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 1206, 494, 495, 1116, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1207, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1187, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 1117, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1170, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	1185, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1232, 594, 595, 596, 597, 1208, 601, 602,
	0, 603, 604, 1103, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1197, 1198, 1199,
	1200, 0, 622, 0, 614, 615, 616, 1209, 617, 1210,
	1127, 618, 619, 620, 621, 0, 623, 624, 0, 1110,
	625, 626, 627, 629, 630, 628, 631, 1171, 632, 0,
	0, 633, 634, 635, 693, 1194, 1231, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1107, 0, 0, 1559, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 282, 284, 283, 285,
	286, 287, 288, 1133, 289, 290, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 291, 292, 1213, 293,
	294, 295, 296, 297, 298, 647, 1186, 0, 299, 1193,
	300, 1192, 0, 1203, 301, 302, 303, 304, 305, 306,
	1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308, 309,
	1179, 0, 1160, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 335, 336, 337, 338, 339, 1196, 340, 342,
	1190, 1189, 1109, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1181, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1115, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1204, 1205, 373, 1128, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1188, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1215, 381, 382, 383,
	1201, 1202, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1211, 0, 1138, 394, 0, 395, 396,
	397, 398, 399, 1558, 1175, 1178, 483, 1217, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1216, 410, 1183, 1184, 0, 1144,
	0, 411, 412, 1218, 1176, 1219, 413, 414, 415, 1220,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1212, 1221, 427, 428,
	1222, 0, 429, 430, 431, 432, 433, 434, 437, 1167,
	1166, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1223, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1224, 479, 467, 1106,
	281, 1225, 480, 481, 1129, 1177, 482, 1191, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1226, 493, 1227, 1206, 494, 495,
	1116, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1207, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1187, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1228, 549, 550, 551, 552, 553, 1117, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1170,
	576, 577, 559, 560, 578, 579, 1229, 580, 581, 582,
	583, 584, 585, 586, 1185, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1232, 594, 595, 596,
	597, 1208, 601, 602, 0, 603, 604, 1103, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1197, 1198, 1199, 1200, 0, 622, 0, 614, 615,
	616, 1209, 617, 1210, 1127, 618, 619, 620, 621, 0,
	623, 624, 0, 1110, 625, 626, 627, 629, 630, 628,
	631, 1171, 632, 0, 0, 633, 634, 635, 693, 1194,
	1231, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1107, 0,
	0, 1553, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	282, 284, 283, 285, 286, 287, 288, 1133, 289, 290,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1552, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 1546, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 1355,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 282, 284,
	283, 285, 286, 287, 288, 1133, 289, 290, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 1218, 1176, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 623, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	693, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1107, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 282, 284, 283, 285, 286, 287, 288, 1133,
	289, 290, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 1186, 0, 299, 1193, 300, 1192, 0, 1203,
	301, 302, 303, 304, 305, 306, 1139, 1172, 1104, 307,
	1233, 1234, 654, 0, 308, 309, 1179, 0, 1160, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336,
	337, 338, 339, 1196, 340, 342, 1190, 1189, 1109, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1181, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1115, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1204, 1205,
	373, 1128, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1188, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 1201, 1202, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1211,
	0, 1138, 394, 0, 395, 396, 397, 398, 399, 1174,
	1175, 1178, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1216, 410, 1183, 1184, 0, 1144, 0, 411, 412, 1218,
	1176, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1212, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 1167, 1166, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 1106, 281, 1225, 480, 481,
	1129, 1177, 482, 1191, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 1206, 494, 495, 1116, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1207, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1187, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 1117, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1170, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	1185, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1232, 594, 595, 596, 597, 1208, 601, 602,
	0, 603, 604, 1103, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1197, 1198, 1199,
	1200, 0, 622, 0, 614, 615, 616, 1209, 617, 1210,
	1127, 618, 619, 620, 621, 0, 623, 624, 0, 1110,
	625, 626, 627, 629, 630, 628, 631, 1171, 632, 0,
	0, 633, 634, 635, 693, 1194, 1231, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1107, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 282, 284, 283, 285,
	286, 287, 288, 1133, 289, 290, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 291, 292, 1213, 293,
	294, 295, 296, 297, 298, 647, 1186, 0, 299, 1193,
	300, 1192, 0, 1203, 301, 302, 303, 304, 305, 306,
	1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308, 309,
	1179, 0, 1160, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1214, 332, 333, 4817, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 335, 336, 337, 338, 339, 1196, 340, 342,
	1190, 1189, 1109, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1181, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1115, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1204, 1205, 373, 1128, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1188, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1215, 381, 382, 383,
	1201, 1202, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1211, 0, 1138, 394, 0, 395, 396,
	397, 398, 399, 1174, 1175, 1178, 483, 1217, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1216, 410, 1183, 1184, 0, 1144,
	0, 411, 412, 1218, 1176, 1219, 413, 414, 415, 1220,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1212, 1221, 427, 428,
	1222, 0, 429, 430, 431, 432, 433, 434, 437, 1167,
	1166, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1223, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1224, 479, 467, 1106,
	281, 1225, 480, 481, 1129, 1177, 482, 1191, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1226, 493, 1227, 1206, 494, 495,
	1116, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1207, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1187, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1228, 549, 550, 551, 552, 553, 1117, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1170,
	576, 577, 559, 560, 578, 579, 1229, 580, 581, 582,
	583, 584, 585, 586, 1185, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1232, 594, 595, 596,
	597, 1208, 601, 602, 0, 603, 604, 1103, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1197, 1198, 1199, 1200, 0, 622, 0, 614, 615,
	616, 1209, 617, 1210, 1127, 618, 619, 620, 621, 0,
	4816, 624, 0, 1110, 625, 626, 627, 629, 630, 628,
	631, 1171, 632, 0, 0, 633, 634, 635, 693, 1194,
	1231, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1107, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	282, 284, 283, 285, 286, 287, 288, 1133, 289, 290,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 4815,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 1104, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 4817, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 1109, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 1106, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 1103, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 4816, 624, 0, 1110, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1107, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	1104, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 4435, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	1109, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 4436, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 1106, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 1116, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 4434, 553, 1117, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 1103, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 1110, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1107, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 3232, 3233, 1132, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 282, 284,
	283, 285, 286, 287, 288, 1133, 289, 290, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 1218, 1176, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 1225, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 623, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	693, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1107, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 3230,
	3231, 1132, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 282, 284, 283, 285, 286, 287, 288, 1133,
	289, 290, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 1186, 0, 299, 1193, 300, 1192, 0, 1203,
	301, 302, 303, 304, 305, 306, 1139, 1172, 1104, 307,
	1233, 1234, 654, 0, 308, 309, 1179, 0, 1160, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336,
	337, 338, 339, 1196, 340, 342, 1190, 1189, 1109, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1181, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1115, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1204, 1205,
	373, 1128, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1188, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 1201, 1202, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1211,
	0, 1138, 394, 0, 395, 396, 397, 398, 399, 1174,
	1175, 1178, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1216, 410, 1183, 1184, 0, 1144, 0, 411, 412, 1218,
	1176, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1212, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 1167, 1166, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 1106, 281, 1225, 480, 481,
	1129, 1177, 482, 1191, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 1206, 494, 495, 1116, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1207, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1187, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 1117, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1170, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	1185, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1232, 594, 595, 596, 597, 1208, 601, 602,
	0, 603, 604, 1103, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1197, 1198, 1199,
	1200, 0, 622, 0, 614, 615, 616, 1209, 617, 1210,
	1127, 618, 619, 620, 621, 0, 623, 624, 0, 1110,
	625, 626, 627, 629, 630, 628, 631, 1171, 632, 0,
	0, 633, 634, 635, 693, 1194, 1231, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1107, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 282, 284, 283, 285,
	286, 287, 288, 1133, 289, 290, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 291, 292, 1213, 293,
	294, 295, 296, 297, 298, 647, 1186, 0, 299, 1193,
	300, 1192, 0, 1203, 301, 302, 303, 304, 305, 306,
	1139, 1172, 1104, 307, 1233, 1234, 654, 0, 308, 309,
	1179, 0, 1160, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 335, 336, 337, 338, 339, 1196, 340, 342,
	1190, 1189, 1109, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1181, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1115, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1204, 1205, 373, 1128, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1188, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1215, 381, 382, 383,
	1201, 1202, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1211, 0, 1138, 394, 0, 395, 396,
	397, 398, 399, 1174, 1175, 1178, 483, 1217, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1216, 410, 1183, 1184, 0, 1144,
	0, 411, 412, 1218, 1176, 1219, 413, 414, 415, 1220,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1212, 1221, 427, 428,
	1222, 0, 429, 430, 431, 432, 433, 434, 437, 1167,
	1166, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1223, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1224, 479, 467, 1106,
	281, 1225, 480, 481, 1129, 1177, 482, 1191, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1226, 493, 1227, 1206, 494, 495,
	1116, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1207, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1187, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1228, 549, 550, 551, 552, 553, 1117, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1170,
	576, 577, 559, 560, 578, 579, 1229, 580, 581, 582,
	583, 584, 585, 586, 1185, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1232, 594, 595, 596,
	597, 1208, 601, 602, 0, 603, 604, 1103, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1197, 1198, 1199, 1200, 0, 622, 0, 614, 615,
	616, 1209, 617, 1210, 1127, 618, 619, 620, 621, 0,
	623, 624, 0, 1110, 625, 626, 627, 629, 630, 628,
	631, 1171, 632, 0, 0, 633, 634, 635, 693, 1194,
	1231, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1107, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1102, 0, 0, 0, 0, 0, 0, 2496, 2497,
	282, 284, 283, 285, 286, 287, 288, 1133, 289, 290,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	1186, 0, 299, 1193, 300, 1192, 0, 1203, 301, 302,
	303, 304, 305, 306, 1139, 1172, 0, 307, 1233, 1234,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 1196, 340, 342, 1190, 1189, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1181, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1115, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 1128,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1188,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 1201, 1202, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 1138,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	1183, 1184, 0, 1144, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 0, 281, 1225, 480, 481, 1129, 1177,
	482, 1191, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 1116, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1187, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 1117, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 1185, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1232, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1197, 1198, 1199, 1200, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 1127, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 1194, 1231, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 2755, 0, 0, 0, 0,
	0, 0, 2753, 2754, 282, 284, 283, 285, 286, 287,
	288, 1133, 289, 290, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 291, 292, 1213, 293, 294, 295,
	296, 297, 298, 647, 1186, 0, 299, 1193, 300, 1192,
	0, 1203, 301, 302, 303, 304, 305, 306, 1139, 1172,
	0, 307, 1233, 1234, 654, 0, 308, 309, 1179, 0,
	1160, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1214,
	332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	335, 336, 337, 338, 339, 1196, 340, 342, 1190, 1189,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1181, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1115, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1204, 1205, 373, 1128, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1188, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1215, 381, 382, 383, 1201, 1202,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1211, 0, 1138, 394, 0, 395, 396, 397, 398,
	399, 1174, 1175, 1178, 483, 1217, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1216, 410, 1183, 1184, 0, 1144, 0, 411,
	412, 1218, 1176, 1219, 413, 414, 415, 1220, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1212, 1221, 427, 428, 1222, 0,
	429, 430, 431, 432, 433, 434, 437, 1167, 1166, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1223, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1224, 479, 467, 0, 281, 1225,
	480, 481, 1129, 1177, 482, 1191, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1226, 493, 1227, 1206, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1207,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1187, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1228,
	549, 550, 551, 552, 553, 3225, 3226, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1170, 576, 577,
	559, 560, 578, 579, 1229, 580, 581, 582, 583, 584,
	585, 586, 1185, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1232, 594, 595, 596, 597, 1208,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1197,
	1198, 1199, 1200, 0, 622, 0, 614, 615, 616, 1209,
	617, 1210, 1127, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1171,
	632, 0, 0, 633, 634, 635, 693, 1194, 1231, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 2159, 2160, 282, 284,
	283, 285, 286, 287, 288, 1133, 289, 290, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 0, 1186, 0,
	299, 1193, 300, 1192, 0, 1203, 301, 302, 303, 304,
	305, 306, 1139, 1172, 1104, 307, 1233, 1234, 654, 0,
	308, 309, 1179, 0, 1160, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 4817, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 335, 336, 337, 338, 339, 1196,
	340, 342, 1190, 1189, 1109, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1181,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1115, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1204, 1205, 373, 1128, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1188, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 1201, 1202, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1211, 0, 1138, 394, 0,
	395, 396, 397, 398, 399, 1174, 1175, 1178, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1216, 410, 1183, 1184,
	0, 1144, 0, 411, 412, 0, 1176, 0, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1212, 1221,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 1167, 1166, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 1106, 281, 0, 480, 481, 1129, 1177, 482, 1191,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 1206,
	494, 495, 1116, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1207, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1187,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 1117,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1170, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 1185, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1232, 594,
	595, 596, 597, 1208, 601, 602, 0, 603, 604, 1103,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1197, 1198, 1199, 1200, 0, 622, 0,
	614, 615, 616, 1209, 617, 1210, 1127, 618, 619, 620,
	621, 0, 4816, 624, 0, 1110, 625, 626, 627, 629,
	630, 628, 631, 1171, 632, 0, 0, 633, 634, 635,
	693, 1194, 1231, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 1093, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 1101, 282, 284, 283, 285, 286, 287, 288, 1133,
	289, 290, 0, 1131, 0, 0, 0, 1173, 0, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 1172, 0, 307,
	652, 653, 654, 0, 308, 309, 1179, 0, 1160, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1204, 1205,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1211,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 1174,
	1175, 1178, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1216, 410, 669, 670, 0, 671, 0, 411, 412, 1218,
	1176, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1257, 423, 425, 424,
	0, 426, 1212, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 1167, 1166, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 0, 281, 1225, 480, 481,
	0, 1177, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 1263, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 1206, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1207, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 683, 1265, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 241, 571,
	572, 570, 573, 574, 575, 1170, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 1208, 601, 602,
	0, 603, 604, 0, 600, 591, 243, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 1209, 617, 1210,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 1171, 632, 0,
	0, 633, 634, 635, 1647, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 235, 641, 642,
	697, 643, 644, 645, 1271, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 1261, 0, 2001, 0, 0, 1173, 0, 0, 0,
	0, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 1172, 0, 307, 652,
	653, 654, 0, 308, 309, 1179, 0, 1160, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1204, 1205, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1211, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1174, 1175,
	1178, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1216,
	410, 669, 670, 0, 671, 0, 411, 412, 1218, 1176,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 1257, 423, 425, 424, 0,
	426, 1212, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 1167, 1166, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 0, 281, 1225, 480, 481, 0,
	1177, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	1263, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 1206, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1207, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 683, 1265, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 241, 571, 572,
	570, 573, 574, 575, 1170, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 1208, 601, 602, 0,
	603, 604, 0, 600, 591, 243, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 1209, 617, 1210, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1171, 632, 0, 0,
	633, 634, 635, 1647, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 235, 641, 642, 697,
	643, 644, 645, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 3389, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 2001, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1173, 0,
	0, 0, 0, 291, 292, 1213, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 1172, 0,
	307, 652, 653, 654, 0, 308, 309, 1179, 0, 1160,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1214, 332,
	333, 334, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1204,
	1205, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1215, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1211, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	1174, 1175, 1178, 483, 1217, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1216, 410, 669, 670, 0, 671, 0, 411, 412,
	1218, 1176, 1219, 413, 414, 415, 1220, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1257, 423, 425,
	424, 0, 426, 1212, 1221, 427, 428, 1222, 0, 429,
	430, 431, 432, 433, 434, 437, 1167, 1166, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1223, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1224, 479, 467, 0, 281, 1225, 480,
	481, 0, 1177, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 1263, 488, 489, 490, 0, 0, 491, 492,
	676, 1226, 493, 1227, 1206, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1207, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1228, 549,
	550, 551, 552, 553, 683, 1265, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1170, 576, 577, 559,
	560, 578, 579, 1229, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 1208, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 1209, 617,
	1210, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 1171, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 0, 1253, 0, 1271, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	1173, 0, 1261, 0, 1259, 291, 292, 1213, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	1172, 0, 307, 652, 653, 654, 0, 308, 309, 1179,
	0, 1160, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1214, 332, 333, 334, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1204, 1205, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1215, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1211, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 1174, 1175, 1178, 483, 1217, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1216, 410, 669, 670, 0, 671, 0,
	411, 412, 1218, 1176, 1219, 413, 414, 415, 1220, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 1257,
	423, 425, 424, 0, 426, 1212, 1221, 427, 428, 1222,
	0, 429, 430, 431, 432, 433, 434, 437, 1167, 1166,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1223,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1224, 479, 467, 0, 281,
	1225, 480, 481, 0, 1177, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 1263, 488, 489, 490, 0, 0,
	491, 492, 676, 1226, 493, 1227, 1206, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1207, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1228, 549, 550, 551, 552, 553, 683, 1265, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1170, 576,
	577, 559, 560, 578, 579, 1229, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	1208, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	1209, 617, 1210, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	1171, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	1271, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1173, 0, 1261, 0, 1259, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 1172, 0, 307, 652, 653, 654, 0, 308,
	309, 1179, 0, 1160, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1204, 1205, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1211, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 1174, 1175, 1178, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1216, 410, 669, 670, 0,
	671, 0, 411, 412, 1218, 1176, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 1257, 423, 425, 424, 0, 426, 1212, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	1167, 1166, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	0, 281, 1225, 480, 481, 0, 1177, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 1263, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 1206, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1207, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 683, 1265,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1170, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 1208, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 1209, 617, 1210, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1171, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 1271, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1173, 0, 1261, 0, 1259, 291,
	292, 1213, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 1172, 0, 307, 652, 653, 654,
	0, 308, 309, 1179, 0, 1160, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1214, 332, 333, 334, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1204, 1205, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1215,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1211, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 1174, 1175, 1178, 483,
	1217, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1216, 410, 669,
	670, 0, 671, 0, 411, 412, 1218, 1176, 1219, 413,
	414, 415, 1220, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1212,
	1221, 427, 428, 1222, 0, 429, 430, 431, 432, 433,
	434, 437, 1167, 1166, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1223, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1224,
	479, 467, 0, 281, 1225, 480, 481, 0, 1177, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1226, 493, 1227,
	1206, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1207, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1228, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1170, 576, 577, 559, 560, 578, 579, 1229,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 1208, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 1209, 617, 1210, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 1171, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 1271, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1173, 0, 0, 0,
	4251, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 1172, 0, 307, 652,
	653, 654, 0, 308, 309, 1179, 0, 1160, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1204, 1205, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1211, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1174, 1175,
	1178, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1216,
	410, 669, 670, 0, 671, 0, 411, 412, 1218, 1176,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1212, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 1167, 1166, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 0, 281, 1225, 480, 481, 0,
	1177, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 1206, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1207, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 683, 1265, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1170, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 1208, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 1209, 617, 1210, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1171, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 276, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 2600, 2601, 2602, 2619, 2620, 2621, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 2622, 0, 646, 0, 0, 0, 0,
	291, 292, 1898, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 1883, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 2612, 0, 318, 319, 320,
	317, 321, 0, 322, 2608, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 2613, 2614, 2615, 2616, 374, 375, 376, 661,
	0, 0, 2607, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 2617, 2618, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 2610,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 2611, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 1882, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 1573, 2597, 2598, 2599, 2623, 2609, 2603, 0, 2605,
	2606, 2604, 2591, 2592, 2593, 2594, 2595, 2596, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 1495, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 1216, 410, 669, 670,
	0, 671, 0, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 0, 0, 1225, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 241, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 243, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	1647, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 235, 641, 642, 697, 643, 644, 645,
	0, 0, 236, 1644, 0, 1573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 193,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 1495, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	1216, 410, 669, 670, 0, 671, 0, 411, 412, 1218,
	672, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 0, 0, 1225, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1226, 493, 1227, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 241, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 243, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 1647, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 235, 641, 642,
	697, 643, 644, 645, 1573, 1572, 236, 0, 0, 0,
	1570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 193, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 1495, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 1216,
	410, 669, 670, 0, 671, 0, 411, 412, 1218, 672,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 0, 0, 1225, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1573, 1572, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 1671, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 1495, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1216, 410,
	669, 670, 0, 671, 0, 411, 412, 1218, 672, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 0, 0, 1225, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1573, 1572, 0, 0, 0, 0, 1570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 3707, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 1213, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 1495, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1214, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1215,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1217, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1216, 410, 669,
	670, 0, 671, 0, 411, 412, 1218, 672, 1219, 413,
	414, 415, 1220, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	1221, 427, 428, 1222, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1223, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1224,
	479, 467, 0, 0, 1225, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1226, 493, 1227,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 2364, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1228, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 1229,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1573, 2274, 0, 0, 0, 0, 2275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	1671, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	1213, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 1495, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1214, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1215, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1217,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 1216, 410, 669, 670,
	0, 671, 0, 411, 412, 1218, 672, 1219, 413, 414,
	415, 1220, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 2273, 425, 424, 0, 426, 673, 1221,
	427, 428, 1222, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1223, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1224, 479,
	467, 0, 0, 1225, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1226, 493, 1227, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1228, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 1229, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1573, 1572, 0, 0, 0, 0, 1570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 1671,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 1213,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 1495, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1214, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1215, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 1217, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 1216, 410, 669, 670, 0,
	671, 0, 411, 412, 1218, 672, 1219, 413, 414, 415,
	1220, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 1221, 427,
	428, 1222, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1223, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1224, 479, 467,
	0, 0, 1225, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1226, 493, 1227, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1228, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 1229, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 0,
	1093, 0, 276, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 1653, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 241, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 243, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1647, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 276, 0, 0, 235, 641, 642, 697, 643, 644,
	645, 0, 0, 236, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	193, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 1271, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 2015,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 1172, 0, 307, 652, 653,
	654, 0, 308, 309, 1179, 0, 1160, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1204, 1205, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1211, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 1174, 1175, 1178,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1216, 410,
	669, 670, 0, 671, 0, 411, 412, 1218, 1176, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1212, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 1167, 1166, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 0, 281, 1225, 480, 481, 0, 1177,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 1206, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1207, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1170, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 1208, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 1209, 617, 1210, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1171, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 276, 3139, 0, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 276, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	4979, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 276, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 3657, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 276, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 1641, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	276, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 3127,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 276,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 3812, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 0, 923,
	0, 824, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 2351, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 831, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 921, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 829, 605, 606, 607, 608, 609, 830, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 824, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 2086, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 834, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 831,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 2085, 566, 567, 568, 569, 0, 2087, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 829, 605, 606, 607, 608, 609,
	830, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 2084, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 824, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 2037,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 834, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 831, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 2036, 566, 567, 568, 569, 0, 2038,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 829, 605, 606, 607,
	608, 609, 830, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 2035, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 822, 0, 824, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 834, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 831, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 829, 605, 606,
	607, 608, 609, 830, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 2059, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 0, 291, 292, 1213, 293, 294, 295, 296, 297,
	298, 0, 2065, 0, 299, 2055, 300, 2071, 0, 2078,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	2081, 2082, 0, 0, 308, 309, 0, 0, 1495, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1214, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 1196, 340, 342, 2069, 2068, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1181, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 0, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 2067, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1215, 381, 382, 383, 2076, 2077, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 0,
	0, 0, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 483, 1217, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	1216, 410, 2062, 2063, 0, 2058, 0, 411, 412, 1218,
	0, 1219, 413, 414, 415, 1220, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 0, 1221, 427, 428, 1222, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1223, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1224, 479, 467, 0, 0, 1225, 480, 481,
	0, 0, 482, 2070, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 0,
	1226, 493, 1227, 0, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 2052,
	507, 508, 509, 2053, 510, 511, 512, 0, 513, 0,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 2066, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1228, 549, 550,
	551, 552, 553, 0, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1229, 580, 581, 582, 583, 584, 585, 586,
	2064, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 2080, 594, 595, 596, 597, 0, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 2072, 2073, 2074,
	2075, 0, 622, 0, 614, 615, 616, 0, 617, 0,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 0, 2056, 2079, 0, 637, 636,
	638, 0, 639, 640, 0, 0, 0, 0, 641, 642,
	0, 643, 644, 645, 824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 2046, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	831, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 829, 605, 606, 607, 608,
	609, 830, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 824, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 834, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 831, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 2402,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 2403, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 829, 605, 606,
	607, 608, 609, 830, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 2404, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 834, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 1573, 1572, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 1495, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1216, 410,
	669, 670, 0, 671, 0, 411, 412, 1218, 672, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 0, 0, 1225, 480, 481, 4016, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1573, 1572, 0, 0, 0, 0, 1570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 1213, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 1495, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1214, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1215,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1217, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1216, 410, 669,
	670, 0, 671, 0, 411, 412, 1218, 672, 1219, 413,
	414, 415, 1220, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	1221, 427, 428, 1222, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1223, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1224,
	479, 467, 0, 0, 1225, 480, 481, 3607, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1226, 493, 1227,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1228, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 1229,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1701, 0, 1573, 1572, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 1495, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 1700, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1216, 410,
	669, 670, 0, 671, 0, 411, 412, 1218, 672, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 0, 0, 1225, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 1699,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 1698, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1566, 0, 1573, 1572, 0, 0, 0, 0,
	1570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 1495, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1568, 667,
	668, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 1216,
	410, 669, 670, 0, 671, 0, 411, 412, 1218, 672,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 0, 0, 1225, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1573, 1572, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 1213, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 1495, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1214, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1215, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 1217, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1216, 410,
	669, 670, 0, 671, 0, 411, 412, 1218, 672, 1219,
	413, 414, 415, 1220, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 1221, 427, 428, 1222, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1223, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1224, 479, 467, 0, 0, 1225, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1226, 493,
	1227, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1228, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	1229, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 1573, 1572, 0, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 1213, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 1495, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1214, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1215,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1217, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1216, 410, 669,
	670, 0, 671, 0, 411, 412, 1218, 672, 1219, 413,
	414, 415, 1220, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	1221, 427, 428, 1222, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1223, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1224,
	479, 467, 0, 0, 1225, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1226, 493, 1227,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1228, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 1229,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 1573, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 1213, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 1495, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1214, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1215, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 1217, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 1216,
	410, 669, 670, 0, 671, 0, 411, 412, 1218, 672,
	1219, 413, 414, 415, 1220, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 1221, 427, 428, 1222, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1223, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1224, 479, 467, 0, 0, 1225, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1226,
	493, 1227, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1228, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 1229, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 2925, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 3649, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 2929, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 3648, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 2928, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 3645, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 3647,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 3644, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 2927, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	3646, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 2925, 308, 309, 655,
	0, 0, 2919, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 2921, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 2929, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 2928, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 2918, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 2927, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 2926, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 1778, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 1777, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 1776, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 1779, 558, 565, 566, 567,
	568, 569, 0, 1775, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	1773, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 1774, 636, 638, 696, 639, 640, 1499, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 1501, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 281, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 1263, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 1496,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 1498, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 1263, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1402, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 1404, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 1263, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 729, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 728, 287, 288, 718, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 721, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 722, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 723, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 717, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 718, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 721, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 722, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 723, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	718, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 721, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 722, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 723,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 718, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 721, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	4027, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 723, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 281, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 1263, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 276, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 3548,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 3097, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 3096, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 2371, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 2309, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 2316, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 2315, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 281, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 2302, 0, 276, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 2304, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 2267, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 281, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 1263, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 1619,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 1618, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1522, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 1515, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 1517, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 1338, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1337, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 1328, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 1327,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 1325, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	1324, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 1320, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 1319, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 281, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 699, 0, 276, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 267, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 721, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 722, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 723, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 2411, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 276, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 2409, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 281, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 2407, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 2322, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 2110, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 2104,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 908, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 907, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 906, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 3648, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 4334, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 1366, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 1369, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 1367, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 789,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 788, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 787, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 1370, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 785, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 1366, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 1369,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 1367, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	789, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 788, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 787, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 1370, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 785, 688, 689, 690, 0, 622, 0, 614,
	1368, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 708,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 707, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 706, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	276, 3139, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 276,
	4350, 0, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 4622, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	4223, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 3975, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 276, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 2808, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 276, 3139, 0, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 3136, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 2228, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 788, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 787, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	785, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 2381, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 2369,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1674, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 1667, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 779, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 775, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 780, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 789, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 788, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 787, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 1652, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 785, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 1625, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 1624,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 1609, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	1607, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 1602, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 1579, 0, 276, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 1577, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 1564, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 1527, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 1504,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1372, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 788, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	787, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 785, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 1343, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 1342, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 1334, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1333, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	1287, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 794, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 779, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 775,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 774,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 780, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 789,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 788, 550, 551, 552, 553, 776, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 787, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 777, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 785, 688, 689, 690, 0, 622, 0, 614, 781,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 768, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 769, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 731,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	725, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 703, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 276, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 3677, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 788, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 787, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 785, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 3592, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 3564, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 3561,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 276, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 3513, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 3511, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 3499, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 3496, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 3107,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 276, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	769, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 2340, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	0, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 1305, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 1236, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 0, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 0,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	0, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 0, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 1615, 0, 1350, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 0, 0, 0, 0, 308, 309, 0, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 1352, 335,
	336, 337, 338, 339, 0, 340, 342, 0, 0, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 0, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 0,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 0, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 0, 0, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	0, 0, 0, 394, 0, 395, 396, 397, 398, 399,
	1614, 0, 0, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 0, 0, 0, 0, 0, 411, 412,
	0, 0, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 0, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 0, 482, 0, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	0, 0, 493, 0, 0, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 0, 513,
	0, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 0, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1353, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 0, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 0, 594, 595, 596, 597, 0, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 0, 0,
	0, 0, 0, 622, 0, 614, 615, 616, 0, 617,
	0, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 0, 1530, 0, 1350, 637,
	636, 638, 0, 639, 640, 0, 0, 0, 0, 641,
	642, 0, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 0, 0, 0, 0, 308, 309, 0,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	1352, 335, 336, 337, 338, 339, 0, 340, 342, 0,
	0, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 0,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 0, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 0,
	0, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 0, 0, 0, 394, 0, 395, 396, 397,
	398, 399, 1529, 0, 0, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 0, 0, 0, 0, 0,
	411, 412, 0, 0, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 0, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 0, 482, 0, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 0, 0, 493, 0, 0, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	0, 513, 0, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 0, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1353, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 0, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 1348, 0,
	1350, 637, 636, 638, 0, 639, 640, 0, 0, 0,
	0, 641, 642, 0, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 0, 0, 0, 0, 308,
	309, 0, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 1352, 335, 336, 337, 338, 339, 0, 340,
	342, 0, 0, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 0, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 0, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 0, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 0, 0, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 0, 0, 0, 394, 0, 395,
	396, 397, 398, 399, 1347, 0, 0, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 0, 0, 0,
	0, 0, 411, 412, 0, 0, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 0, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 0, 482, 0, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 0, 0, 493, 0, 0, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 0, 513, 0, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 0, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1353, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 0, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 0, 594, 595,
	596, 597, 0, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 0, 0, 0, 0, 0, 622, 0, 614,
	615, 616, 0, 617, 0, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 0,
	2124, 0, 1350, 637, 636, 638, 0, 639, 640, 0,
	0, 0, 0, 641, 642, 0, 643, 644, 645, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 0, 0, 0,
	0, 308, 309, 0, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 1352, 335, 336, 337, 338, 339,
	0, 340, 342, 0, 0, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 0, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 0, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 0, 0, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 0, 0, 0, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 0,
	0, 0, 0, 0, 411, 412, 0, 0, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 0,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 0, 482,
	0, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 0, 0, 493, 0,
	0, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 0, 513, 0, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	0, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1353, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 0, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 0,
	594, 595, 596, 597, 0, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 0, 0, 0, 0, 0, 622,
	0, 614, 615, 616, 0, 617, 0, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 0, 2091, 0, 1350, 637, 636, 638, 0, 639,
	640, 0, 0, 0, 0, 641, 642, 0, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 0,
	0, 0, 0, 308, 309, 0, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 1352, 335, 336, 337,
	338, 339, 0, 340, 342, 0, 0, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 0, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	0, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 0, 0, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 0, 0,
	0, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 0, 0, 0, 0, 0, 411, 412, 0, 0,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 0, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	0, 482, 0, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 0, 0,
	493, 0, 0, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 0, 513, 0, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 0, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1353, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 0,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 0, 594, 595, 596, 597, 0, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 0, 0, 0, 0,
	0, 622, 0, 614, 615, 616, 0, 617, 0, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 0, 0, 0, 1350, 637, 636, 638,
	0, 639, 640, 0, 0, 0, 0, 641, 642, 0,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 0, 0, 0, 0, 308, 309, 0, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 1352, 335,
	336, 337, 338, 339, 0, 340, 342, 0, 0, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 0, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 0,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 0, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 0, 0, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	0, 0, 0, 394, 0, 395, 396, 397, 398, 399,
	0, 0, 0, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 0, 0, 0, 0, 0, 411, 412,
	0, 0, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 0, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 0, 482, 0, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	0, 0, 493, 0, 0, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 0, 513,
	0, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 0, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1353, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 0, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 0, 594, 595, 596, 597, 0, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 0, 0,
	0, 0, 0, 622, 0, 614, 615, 616, 0, 617,
	0, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 0, 0, 0, 0, 637,
	636, 638, 0, 639, 640, 0, 0, 0, 0, 641,
	642, 0, 643, 644, 645, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 1858, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 1827, 1828, 1877, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 1864, 1858, 0, 0, 0, 0,
	1829, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	1849, 1877, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 1835, 0, 1868, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 1857, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 1875, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1868, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 1857, 1859, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 1875, 0, 0, 1850, 0, 0, 0, 1844, 1845,
	0, 0, 0, 0, 0, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 1858, 0,
	0, 1850, 0, 0, 0, 1830, 0, 0, 0, 0,
	1876, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 1880,
	1829, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 1869, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 1868, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 1857, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 1882, 1875, 0, 0, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 0, 0, 4744, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	1876, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 0, 0, 4648, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 1858, 0, 0,
	0, 0, 0, 0, 1830, 1856, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	1883, 0, 0, 0, 0, 0, 0, 1827, 1828, 1829,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 1869, 0, 0, 1846, 1864,
	1858, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 1868, 0, 4605, 1878, 0,
	0, 0, 0, 0, 0, 1857, 1859, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	0, 1874, 0, 1875, 0, 0, 0, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1827,
	1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 1868, 0,
	0, 1878, 0, 1850, 0, 0, 0, 0, 1857, 1859,
	0, 1864, 1858, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 1874, 0, 1875, 0, 1877, 0,
	0, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 1876,
	0, 1866, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 1850, 1865, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 1853, 1854, 1855, 0, 0, 1851, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	1868, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	1857, 1859, 0, 0, 0, 1882, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 1874, 0, 1875, 0,
	0, 0, 0, 0, 0, 1844, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 1870,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 0, 1876, 0, 4604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 4419,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 1864, 1858, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	0, 1867, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0,
	0, 4247, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 1868, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 1857, 1859, 0, 1864, 1858, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 1874, 0, 1875,
	0, 1877, 0, 0, 0, 0, 1844, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 1866, 1827, 1828, 1829, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 0, 1849, 0, 1850,
	0, 0, 0, 0, 0, 0, 1846, 1864, 1858, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 1876, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 1865, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 1868, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 1857, 1859, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 1851, 0, 0, 0, 1835, 0, 1874,
	0, 1875, 0, 0, 0, 0, 0, 0, 1844, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 1866, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 1868, 0, 0, 1878,
	0, 1850, 0, 0, 0, 0, 1857, 1859, 0, 1864,
	1858, 1882, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 1874, 0, 1875, 0, 1877, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 1876, 0, 1866,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 1850, 1865, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	1876, 0, 4173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 1851, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 1868, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 1857, 1859,
	0, 0, 0, 1882, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 1874, 0, 1875, 0, 0, 0,
	0, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 1876, 0, 4172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 0, 0, 4171, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	1864, 1858, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 1867,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 3817,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 1868,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 1857,
	1859, 0, 1864, 1858, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 1874, 0, 1875, 0, 1877,
	0, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 1866, 1827, 1828, 1829, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 0, 0, 1849, 0, 1850, 0, 0,
	0, 0, 0, 0, 1846, 1864, 1858, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 1876, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1865, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 1868, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 1857, 1859, 0, 0, 1852, 1853, 1854, 1855, 0,
	0, 1851, 0, 0, 0, 1835, 0, 1874, 0, 1875,
	0, 0, 0, 0, 0, 0, 1844, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 1866, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 1868, 0, 0, 1878, 0, 1850,
	0, 0, 0, 0, 1857, 1859, 0, 1864, 1858, 1882,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	1874, 0, 1875, 0, 1877, 0, 0, 0, 0, 1844,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 1876, 0, 1866, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 1850, 1865, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 1876, 0,
	3307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 1851, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 1868, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 1857, 1859, 0, 0,
	0, 1882, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 1874, 0, 1875, 0, 0, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	1876, 0, 3306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 0, 0, 0, 0, 3305, 1827, 1828, 0, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 1864, 1858,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 1867, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 0, 0, 3304, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 1868, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 1857, 1859, 0,
	1864, 1858, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 1874, 0, 1875, 0, 1877, 0, 0,
	0, 0, 1844, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	1866, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 1850, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1835, 4890, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 0, 1868,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 1857,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 1874, 0, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 1866, 1827, 1828, 0, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 1864, 1858, 1882, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 1876, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1865, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 4889, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 3269, 0, 0, 0,
	0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 1864, 1858, 0, 0, 0, 0, 3240,
	0, 1830, 0, 0, 0, 1852, 1853, 1854, 1855, 0,
	1877, 1851, 0, 0, 0, 1835, 0, 3369, 0, 0,
	0, 0, 3368, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 1868, 1846, 0, 1878, 0, 0,
	0, 0, 0, 0, 1857, 1859, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1875, 0, 0, 0, 0, 0, 0, 1844,
	1845, 0, 0, 0, 0, 3241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1853, 1854, 1855, 0, 0, 0,
	1867, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 1878, 1865, 0, 0, 0,
	0, 0, 1857, 1859, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1875, 0, 0, 0, 0, 0, 0, 1844, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2781,
	0, 0, 0, 0, 0, 1866, 1827, 1828, 0, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	1850, 0, 0, 1856, 0, 0, 0, 0, 1864, 1858,
	0, 0, 0, 2780, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 1876, 0, 0, 0,
	0, 1829, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 1865, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	1854, 1855, 0, 0, 1851, 1867, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 1869, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 1868, 0, 0,
	1878, 0, 0, 0, 0, 1864, 1858, 1857, 1859, 0,
	0, 0, 1882, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1874, 0, 1875, 0, 0, 0, 0,
	0, 0, 1844, 1845, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 1850, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 1852, 1853, 1854, 1855, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 0, 0, 1868, 0, 1856, 1878, 1830, 0,
	0, 0, 0, 0, 1857, 1859, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	1874, 0, 1875, 0, 1883, 0, 0, 0, 0, 1844,
	1845, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 1869, 1866, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 1090, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 1880, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 0, 1868,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 1857,
	1859, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1827, 1828, 0, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 1869, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 1864, 1858, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 1876, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1865, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1853, 1854, 1855, 0,
	0, 1851, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 3375, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 0, 0, 1868, 3370, 0, 1878, 1830, 0,
	0, 0, 0, 0, 1857, 1859, 0, 1877, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 3798, 1875, 0, 1883, 0, 0, 0, 0, 1844,
	1845, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 1866, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 1880, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 1878, 1864, 1858, 0, 0, 0, 0, 1857,
	1859, 1830, 0, 1856, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 1874, 0, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 1851, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 1869, 0, 1846, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 1852, 1853, 1854, 1855, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 0, 1868, 0, 0, 1878, 0, 0, 1856, 0,
	0, 0, 1857, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1875, 1851, 0, 0, 0, 0, 0, 1844, 1845, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 1866, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 1864, 1858, 0, 0,
	1850, 3308, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3335, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1868, 0, 0, 1878, 1864,
	1858, 0, 0, 0, 0, 1857, 1859, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 1874, 1882, 1875, 0, 0, 0, 0, 0, 0,
	1844, 1845, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 1876,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 1858, 0, 0, 1868, 0,
	0, 1878, 1830, 0, 1856, 0, 0, 0, 1857, 1859,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 1875, 1851, 1883, 0,
	0, 0, 0, 1844, 1845, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 1866, 0, 0, 1869, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 1880, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 1870,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 1868, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 1857, 1859, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 1875, 0, 0, 0, 0, 0, 0, 1844, 1845,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 1869, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 1876, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 1865, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2353, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 1851, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1868, 0,
	0, 1878, 0, 0, 1877, 0, 0, 0, 1857, 1859,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 1874, 0, 1875, 0, 0, 0,
	1829, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 973, 0, 1022, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	981, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 1876, 0, 0, 0, 996, 0, 979, 978,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	998, 1880, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 983, 0, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 993, 994, 0, 0, 0,
	0, 0, 0, 0, 1011, 0, 1868, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 1857, 1859, 0, 0,
	0, 0, 1023, 985, 0, 0, 0, 1856, 0, 986,
	0, 0, 1874, 0, 1875, 0, 0, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 987, 0, 0, 0, 0, 0, 0, 1866,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 989,
	0, 0, 0, 0, 0, 0, 0, 977, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 990, 991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 999, 997, 0, 0, 0, 0,
	0, 0, 992, 0, 0, 0, 1008, 0, 0, 1028,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 1030, 1019, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 1032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	0, 1015, 1016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1025,
	1013, 0, 0, 0, 0, 0, 0, 0, 1031, 1009,
	0, 0, 1002, 1000, 0, 1005, 0, 1867, 0, 0,
	0, 1006, 0, 0, 975, 0, 1026, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 0, 0, 0, 976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 1007, 0, 0, 0, 0, 0, 1004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1029, 0,
	0, 0, 0, 0, 0, 0, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1014,
}

var sqlPact = [...]int{
	9412, -1000, -1000, -1000, -1000, 198, -1000, -1000, 195, 194,
	193, 192, 191, 190, 189, 188, 187, 182, 179, -1000,
	-1000, -1000, -1000, -1000, -1000, 178, -1000, -1000, 177, -1000,
	176, 175, 173, -1000, -1000, 170, -1000, 169, -1000, -1000,
	-1000, -1000, 167, 166, 165, 90825, 90264, 91377, 2380, 114789,
	98037, 2082, 80220, 114228, 79659, 113667, 2277, 12108, 113106, 2829,
	160, -1000, 112545, 159, 158, 157, -1000, 111984, -1000, 2060,
	-1000, 154, -1000, 9745, 69552, 153, 150, 149, 147, 2336,
	145, -1000, 142, 141, -1000, -1000, 133, -1000, 10622, 1536,
	-1000, 132, 131, -1000, 286, 95802, 130, 129, 127, 2805,
	125, 124, 67887, 120, 118, 116, 2411, 2949, -1000, -1000,
	2194, -1000, -1000, 115, 114, 107, 106, 105, 104, 102,
	99, 98, 93, 89, 88, 87, -1000, 86, 85, 84,
	82, 80, -1000, 78, 77, 76, -1000, 75, -1000, 72,
	71, 70, 69, 68, 67, 66, 63, 61, 60, 59,
	58, 57, 54, 133622, -1000, -1000, 49, 2070, 1739, 1727,
	1723, 1722, 1694, 998, 48, 47, 44, 37, 28, 27,
	26, 25, 24, 23, 20, 19, 18, 17, 16, 12,
	11, 9, 146, 8, -6, -7, -8, -10, -12, -13,
	2685, -1000, 1540, 1015, 31829, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 123069, 115341, -14, -105, -15,
	-1000, 3426, 1022, 56044, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	498, 2297, 759, -1000, -1000, -1000, 111432, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2376, -49, -1000, 2145, -1000,
	-1000, -1000, -1000, -1000, 758, -1000, 2374, 273, 2343, -1000,
	-1000, -1000, 3495, 2526, 3909, 3906, 3905, 3904, 3903, 122517,
	1975, 3902, 2604, 3901, 3900, 3898, 3897, 3894, 3893, 3891,
	-1000, 89703, 1058, 89142, 88581, 3503, 110880, 88020, 110319, 125286,
	48017, 1010, 3494, -1000, -1000, -1000, -1000, -1000, -1000, 115341,
	-1000, 1054, -1000, -1000, 3890, 2182, 755, 97476, -1000, -1000,
	109758, 1877, -1000, -1000, -1000, 942, 1213, 33551, 33551, 33551,
	298, -1000, -1000, -1000, -1000, -1000, -1000, 3888, 3885, 3881,
	3878, 3877, -1000, -1000, 79098, 24753, 78537, 77976, 109197, 24182,
	87459, 86898, 3873, 3872, 3871, 108636, 124734, 3606, 3605, 1053,
	2142, 1463, -1000, -1000, -1000, -1000, -1000, -1000, -32, 71784,
	3644, 115341, -1000, 294, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47443, 704, 46869, 999, 46295, 706, 108075, -1000, -1000,
	-1000, -1000, 74070, -1000, 107514, 2522, 3869, 3868, 1167, 3867,
	3385, 1971, 3866, 1957, 1250, 3865, 3864, 3861, 3860, 3859,
	3858, 3857, 1598, 106953, 3044, 1638, 106392, 1865, 124182, 1052,
	86337, 91377, 2768, 105831, 1572, 1516, -1000, -1000, -1000, -1000,
	3213, 2945, 2926, 1356, -1000, -1000, -1000, -1000, 59441, 6242,
	5278, -1000, -1000, 13187, 105270, 62286, 91377, 91377, -1000, -1000,
	-1000, -1000, -1000, -1000, 45721, 592, 45147, 925, 104709, -1000,
	-1000, 60010, 2988, -1000, -1000, -1000, -1000, -1000, 104148, 44573,
	421, 43999, 909, 115341, -1000, 3043, 2066, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2930, 1637, 3677, 2821, 73499,
	2157, 1445, 3453, 3211, 3210, 1554, 2136, 3207, 3856, 2700,
	3202, 3173, 3138, 3135, 3134, 1642, 2653, 416, 2649, 31255,
	3035, 1867, 43425, 1553, 1547, 3129, 3127, 3686, 2128, 2130,
	2258, 77415, 3855, 3853, 3422, 3123, 3096, 2865, 3095, -1000,
	2984, 1593, 292, -1000, -1000, -1000, -1000, -1000, -1000, 1493,
	-1000, -1000, -1000, -1000, -1000, 81876, -1000, -1000, 1348, -1000,
	-1000, 1348, -1000, -1000, -1000, -1000, -1000, 1461, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1540, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3006, -1000, 2167, -1000, -1000, 2603, 3401, 3401, 3401,
	3491, 474, 465, -1000, 146, -1000, -1000, 133061, -1000, -1000,
	48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 2282, -1000,
	752, -1000, -1000, 792, -1000, 749, 666, 626, -1000, -1000,
	-1000, -1000, -1000, -1000, 748, -1000, -1000, -1000, -1000, -1000,
	-1000, 3644, -1000, 27678, -1000, -1000, -1000, 467, 746, 48591,
	-1000, -1000, 3718, 3717, 1014, -1000, 291, 971, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3042, 745, 741, -1000, 740, 735, 734, 730, 723, -1000,
	715, -1000, 714, 713, 712, 708, 707, 705, 703, 702,
	-1000, 2163, -1000, -1000, -1000, -1000, -1000, -1000, 654, 652,
	652, 652, -1000, 1049, -1000, -1000, -1000, 318, 651, 299,
	648, 647, 646, -1000, 701, 700, 699, 692, 683, 682,
	676, 675, 674, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1048, -1000, -1000, -1000, -1000, -39, 115341, -1000, 498, -39,
	-1000, -1000, 672, -1000, 35876, 35876, 35876, -1000, -1000, 2372,
	48591, -1000, 2585, -1000, -27, -27, 917, 57730, -1000, 54900,
	917, 316, 806, 63407, -1000, 2982, -1000, -1000, 671, 288,
	-1000, -1000, -1000, -1000, 25322, 2980, 115341, 115341, 115341, 91377,
	91377, 91377, 115341, 3852, 3286, 48591, -1000, -1000, 68991, 126942,
	91929, -1000, -1000, 3590, 70111, 68439, 126942, 3040, 126390, 3851,
	-1000, -1000, -1000, -1000, -1000, 3261, 3850, 3848, 3847, -1000,
	115341, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 229, 3259,
	-1000, -1000, 95241, 229, 3258, -1000, 229, 3257, -1000, 94689,
	-1000, -1000, 2331, 3253, -1000, -1000, 255, 3252, -1000, -1000,
	-1000, 238, 3251, -1000, -1000, 283, -82, 3249, -1000, -1000,
	-1000, -1000, -1000, -1000, 133061, -1000, -1000, -1000, 125838, -1000,
	3425, -1000, 115341, -1000, 48591, -1000, -1000, 3589, 1655, 3434,
	3531, -1000, -1000, -48, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2571, 2605, 1147, 2401, -1000, 3304, 1420, 33551, 3371,
	-1000, -1000, -1000, -1000, -1000, 267, 25322, -1000, -1000, -1000,
	-1000, -1000, -1000, 3272, 3241, 1193, -1000, 2399, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2236, 3240, -1000,
	2154, 3238, 2172, -1000, -1000, 2040, -1000, 3403, 1465, 1787,
	-1000, -1000, -1000, -1000, -1000, -1000, 2103, 3235, -26, -1000,
	-1000, 2426, -1000, -1000, -1000, -1000, 2038, -1000, 1333, 3234,
	-1000, 2820, 2820, 85776, 3189, 61717, 60010, 71784, -43, -1000,
	-1000, -1000, -235, -1000, 23607, 133061, -1000, -1000, -1000, -1000,
	1876, 133061, 915, -1000, -1000, 3231, -1000, 133061, 911, -1000,
	-1000, 3230, -1000, 2652, -1000, 3039, -1000, -1000, 2481, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2476, -1000, -1000,
	3844, -1000, -1000, 3840, -1000, 3839, 3836, 3833, -1000, 1814,
	2133, 3828, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	85224, 2371, -1000, -1000, 84102, 3038, -1000, 2474, 3529, -1000,
	84663, 1051, -1000, 1012, 2472, -1000, 94137, 1002, 2470, -1000,
	3826, 3492, 2770, 1012, 2466, -1000, -1000, -1000, -1000, -1000,
	1044, -1000, 65647, -1000, 65647, -1000, 1761, -1000, 121965, -27,
	91377, 3644, -1000, -75, -1000, -1000, -1000, 1022, -1000, 58867,
	-1000, 58867, 96915, 74639, 995, 2978, 67325, 132876, -1000, 1025,
	-1000, -1000, 133061, -1000, -1000, -1000, 2651, -1000, -162, 2818,
	-1000, 74639, 61148, 2644, -1000, 133061, -1000, -1000, -1000, -1000,
	133061, -1000, -1000, -1000, 74639, 84102, -1000, 103587, 83550, -1000,
	-1000, 1590, 2608, -1000, -1000, -1000, 74639, 1344, 74639, 74639,
	74639, -1000, 103026, -1000, -1000, 2185, 1641, 3402, 2158, 91377,
	-1000, 1921, -1000, -1000, -1000, 3439, 3180, 115341, -1000, -1000,
	3036, -1000, 71232, 93585, -1000, 93033, -1000, 92481, -1000, 91377,
	-1000, 91377, -1000, 3822, 3820, 3816, -1000, -1000, 3815, -1000,
	3814, 3431, -1000, 747, 42851, 133061, 3429, -1000, 3812, 2107,
	3035, 133061, -1000, 3137, 1720, 1709, 115341, -1000, -1000, 115341,
	-1000, 115341, -1000, -1000, -1000, 1666, -1000, -1000, 2570, -1000,
	-1000, -1000, -1000, 91377, 91377, 91377, 91377, 1238, -1000, 42277,
	-1000, -1000, 3133, 3811, 1835, -1000, 1880, -1000, 2977, 3432,
	-1000, 1576, 1886, 266, 3723, -1000, -1000, 257, -1000, -1000,
	-48, -1000, 121413, -1000, 2603, -1000, 115341, -1000, 2537, 3025,
	3033, 1412, 2387, 2674, -1000, 41703, 2638, 52035, 2398, 146,
	-1000, -1000, 146, 146, 32977, -1000, -1000, 70111, 70111, 25322,
	1474, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591,
	48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591,
	48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591, 48591,
	48591, 48591, 48591, 48591, 48591, 48591, 48591, 2207, 48591, 1460,
	48591, 48591, 48591, 48591, 1915, -1000, -1000, 2075, 534, 2140,
	666, -1000, -1000, -1000, 3638, 3638, 3638, 437, 437, 437,
	133504, 133504, 634, 3810, 792, -1000, 48591, -1000, 95, 58289,
	48591, 25893, -1000, 465, 7038, 2617, -1000, 462, 26496, -1000,
	-1000, -1000, 27678, 626, 41100, 48591, 1001, 133061, -1000, -1000,
	1522, 3651, 23032, 3052, 2857, 665, 883, 879, 30652, 30049,
	29446, 28843, 870, 828, 48591, 48591, 48591, 48591, 48591, 48591,
	48591, 48591, -1000, -1000, 3678, -1000, 3651, -1000, -1000, -1000,
	-1000, 3651, 1409, 1254, 3651, -1000, 3651, 3651, 6758, 6758,
	40526, 39952, 39378, 52609, 38804, 48591, 28269, 38230, 37656, -1000,
	115341, -39, 3587, 48591, 256, -1000, 131405, -1000, 256, 256,
	664, -80, 133061, 2625, 2625, 56606, 2499, 2295, 2295, 2295,
	-1000, 917, 17823, 917, 101363, 2305, 917, 917, 243, 263,
	460, 54331, 2585, 101363, 778, 662, -16, -17, -18, -1000,
	-1000, -21, -23, -1000, -1000, 91377, 661, 25893, 25322, 233,
	2123, -83, 2676, 2673, -1000, 2672, 2667, -1000, 2661, 2370,
	-1000, -1000, 1909, -85, 1459, 91377, 115341, 1538, 3807, -104,
	-1000, 5703, -86, -1000, 1351, 231, 3651, -1000, -1000, -1000,
	-1000, -1000, 3806, 3804, -1000, 1039, 660, 659, 419, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 654, 652, 652,
	652, -1000, 318, 651, 299, 648, 647, 646, -1000, -1000,
	-1000, -1000, -1000, 2976, 91377, 115341, 1415, 3803, -82, 91929,
	-93, -1000, -1000, 115341, -1000, -1000, -1000, 3802, -1000, 91377,
	-1000, -1000, 91377, 229, 3229, -1000, 91377, -1000, 91377, 227,
	3226, -1000, -1000, 115341, -1000, 91377, 91377, -1000, 115341, 115341,
	115341, 126942, 126942, 226, -1000, 91377, 891, -91, 1183, -48,
	-1000, -1000, -1000, -1000, 1348, -1000, 1844, -1000, -1000, -1000,
	-1000, -1000, -1000, 1606, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1014, -1000, -1000, -1000, -1000, -1000, -1000, 3669,
	3660, -40, -1000, -1000, 25322, -1000, -50, 1826, 2022, 1453,
	-1000, 76854, 2452, 3420, 3801, 2726, 3393, 1699, -1000, 1654,
	-1000, 3513, 81876, 3554, 3561, 1355, -1000, 2974, -1000, -1000,
	-1000, 940, 1806, 1855, 1433, 1408, 81876, 2154, -1000, 70111,
	-1000, 2703, 3490, 1405, 1401, 1405, 1405, 1394, -1000, 81876,
	1854, 1407, 1406, 1402, -1000, -1000, 2054, 2030, -1000, -1000,
	102474, -1000, 1400, 1388, 3604, 3006, 2256, 830, 2017, -1000,
	1374, 2973, 2971, -1000, 1352, -52, 3552, 3559, 1330, -1000,
	2969, 1306, -1000, -1000, -1000, 3485, 91377, 25322, 1599, 1596,
	1591, 1849, 1303, -42, -1000, 3541, 1294, 1292, -1000, 1089,
	6051, 3341, -1000, 126942, 1089, 1089, 2117, 3223, 2800, 1687,
	-1000, 2813, 912, 2811, -1000, -1000, -1000, 912, -43, 71784,
	115341, 228, -1000, 95, 48591, 48591, 95, 48591, 95, -1000,
	3523, 3218, 3182, -1000, -1000, -1000, -1000, -1000, 3799, 2084,
	2587, -1000, -1000, 642, 2463, 2966, 115341, 2688, -44, 91377,
	-1000, 70680, 3179, 126942, 2154, 2461, -1000, -1000, 82989, -1000,
	3178, 498, 2460, -1000, 680, 3798, 3176, -1000, 120861, -1000,
	3425, 1487, 3175, 1111, 420, 3586, -1000, 420, 66207, -1000,
	115341, -1000, -27, 274, 75750, -92, -102, 459, -1000, 101922,
	115341, 115341, 3360, 2093, 2092, -1000, 1009, 60010, -1000, 60010,
	-108, -1000, -162, 2808, 1630, -1000, 995, 995, 912, -1000,
	912, -1000, 91377, 3032, -1000, -1000, 74639, 995, 995, 995,
	-1000, -1000, -1000, -1000, 3796, 3795, 3793, 3792, -1000, -1000,
	1011, 91377, 115341, 91377, -1000, -1000, 1684, -1000, 220, -1000,
	126942, -1000, 126942, 115341, 91377, -1000, 1011, 115341, 1011, 115341,
	1011, 115341, 1011, 1011, -1000, -1000, -1000, -1000, -1000, 95,
	-1000, -1000, 133061, -1000, 48591, -1000, -1000, 1651, 3791, 1794,
	-1000, 3029, -1000, 3026, -1000, 15, -1000, -1000, 1960, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3789, 133061,
	-1000, 2217, -1000, -1000, -1000, -1000, 91377, 91377, 91377, 91377,
	115341, 3329, -1000, 115341, 3321, 91377, -1000, 3721, -1000, -1000,
	81876, -1000, 2537, 3025, -1000, -1000, -1000, -1000, -1000, -1000,
	1429, 2348, -1000, 2636, -1000, 1672, -1000, -1000, -1000, 133061,
	53183, -1000, -1000, 133061, 1908, -1000, 51461, 50887, -1000, -1000,
	1866, 91377, 2693, -1000, 2693, -188, -1000, 131140, 2633, 91377,
	-1000, -1000, -1000, -1000, -1000, 938, 574, 574, 1280, 1280,
	1280, 1280, 3535, 6147, 6316, 5392, 5454, 5454, 463, 463,
	463, 463, 463, 5454, 495, 437, 437, 495, 495, 495,
	495, 495, 437, 437, 437, 5454, 5454, 5454, 437, 133504,
	133326, 8684, 48591, 48591, 1289, 2069, 534, 8403, 48591, 8993,
	8993, 8993, 8993, -1000, 2031, -1000, -1000, -1000, -1000, 2961,
	641, 52609, 52609, -1000, -1000, -1000, -1000, 27087, 48591, -1000,
	-1000, -1000, -1000, 37053, -1000, -1000, 130545, -321, 448, -1000,
	216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 445, -117, -11, -1000, 48591, 48591,
	48591, 438, -1000, 210, 48591, 115341, -1000, 16661, 777, -131,
	-1000, -111, 1452, -1000, 48591, -1000, -1000, 1287, -1000, 1285,
	1284, 1282, -1000, 640, 436, -1000, 209, -1000, 2278, 639,
	638, 48591, -1000, -1000, -1000, -1000, -1000, 130154, -1000, -1000,
	129952, -1000, -1000, 129889, -1000, -1000, 129687, -1000, -1000, -1000,
	-1000, -1000, 132683, 15327, 14521, 11685, 6275, 11307, 11023, -114,
	435, -116, 433, 931, 930, 424, 423, 422, -119, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -121, 417, -1000, 2960, -117, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 412, -1000, 410, -1000, 132430, -117,
	406, 7521, -1000, 52609, 52609, 52609, 52609, -1000, 405, -1000,
	131012, -1000, 132237, 36479, 36479, 36479, 403, 132052, 48591, -117,
	-122, -1000, -124, -1000, -1000, 531, -134, 1024, 35876, 55482,
	25322, -1000, 1024, 1024, 48591, -1000, 48591, 2642, -1000, -1000,
	-1000, -1000, 2630, 1951, 2625, 56606, -1000, -1000, -1000, -1000,
	101363, -1000, 3644, 3081, -1000, 101363, -1000, -1000, 115341, 498,
	-1000, 101363, 101363, 25322, 917, -1000, 917, 101363, 716, -1000,
	-1000, -1000, -1000, -1000, 402, 63969, -11, 207, 25322, 1012,
	-1000, -1000, 2745, 2745, 2745, 2745, 2745, 91377, -1000, -1000,
	126942, 1281, -46, -98, 2807, -1000, 3610, -1000, 2181, -1000,
	70111, -1000, 790, 1152, 25322, -1000, -1000, -1000, 637, -1000,
	3651, 3651, -1000, 3651, 126942, 2958, 138, 2802, -1000, 135,
	126942, 3784, -1000, -1000, 229, -1000, 91377, 229, 229, -1000,
	91377, 91377, 2331, -1000, 255, -1000, 238, -1000, -1000, -82,
	-1000, 1023, 33551, -1000, 1348, -1000, -1000, 1600, -1000, 2106,
	-1000, 1242, -1000, -1000, -1000, -1000, 33551, -1000, 2490, 115341,
	115341, 91377, -1000, 115341, -1000, 2281, 126942, -1000, 2459, 120309,
	2424, 119757, 70111, -1000, -1000, 635, 958, 2631, 2629, 1101,
	115341, 115341, 2615, 119205, 118653, -1000, 3783, 115341, 2180, 48591,
	3484, 2275, 2360, 95, 95, -1000, 95, 95, 95, 633,
	1363, 91377, 91377, 115341, 126942, 91377, 2035, -1000, -1000, -1000,
	-1000, -1000, 82428, -1000, -1000, 3676, 3663, -1000, 1405, -1000,
	-1000, -1000, 1405, 2154, 2012, 115341, 126942, 91377, 126942, 118101,
	117549, -1000, -1000, 1846, 115341, -1000, -1000, -1000, -1000, 1478,
	-1000, 830, 3644, 3644, 3644, 1279, 2942, 2938, 2219, 95,
	95, -1000, 95, 95, 95, 632, 25322, 2072, -1000, 3047,
	115341, 3716, 116997, 3715, 115341, 115341, 115341, 126942, 3396, 115341,
	115341, 126942, -1000, 116445, 6051, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2206, 72928, 1104, 115341,
	1333, -1000, -1000, 1838, 1276, 1273, 81876, 2173, 1831, 1930,
	126942, 60010, 1007, 60010, 2782, -1000, -1000, 22457, -1000, 133061,
	133061, -1000, 133061, -1000, 70680, 74639, 115341, -1000, 1045, 115341,
	76302, 978, 3171, 65087, -235, 995, 74639, 91377, -44, 2688,
	115341, -1000, -1000, 2154, 3166, 498, 2444, -1000, 126942, 3585,
	3149, 631, 3782, 3780, -1000, 91377, 2369, 2443, -1000, -1000,
	115893, 3147, 830, 115341, 1024, 56606, 2029, -1000, 62848, 1067,
	115341, 1948, 126, -1000, -1000, -1000, -2, 115341, -1000, 805,
	-1000, -1000, 274, 274, 995, -256, 630, -1000, 884, 881,
	60579, -135, -1000, 205, 627, 880, 878, -1000, 2637, -1000,
	-162, -1000, 74639, 1009, 60010, 2934, 2927, -1000, -1000, 1021,
	-1000, 1546, 995, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -28, 1919, 115341, -82, -82, -59,
	-46, -1000, 1011, -1000, 1011, -1000, 1011, -1000, -1000, -1000,
	133061, -1000, -1000, -1000, 1788, 1772, 115341, -1000, -1000, 115341,
	-1000, 25322, 115341, 91377, 25322, 91377, 3021, 3015, -1000, -1000,
	-1000, 115341, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1135, -1000, 1908, 2347, -1000, 626, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2542, -1000, -47, 32977, 920,
	-1000, -1000, 91377, -29, 48591, 48591, 8059, 7914, 48591, 52609,
	52609, -1000, 48591, 7631, -1000, -1000, -1000, -1000, -1000, 2917,
	616, 48591, 70111, 7433, 6841, -1000, 401, 10357, 495, -1000,
	48591, -1000, 5381, -1000, 396, 35302, -1000, 131602, -41, -142,
	-1000, 18411, -117, -143, -1000, -1000, 787, -1000, 3136, -1000,
	48591, 131787, 2487, 2064, 1962, 1815, 3651, 3714, 21882, -1000,
	66766, 1029, 2312, 129296, -1000, -1000, -1000, -1000, 70111, 70111,
	48591, 48591, -1000, 48591, 48591, 48591, -1000, -1000, -1000, 3651,
	921, -1000, -1000, -1000, 921, -1000, -1000, 1405, -1000, 1405,
	-1000, 48591, -1000, -1000, 2912, 48591, -1000, 70111, 70111, 52609,
	52609, 52609, 52609, 52609, 52609, 52609, 52609, 52609, 52609, 52609,
	52609, 52609, 52609, 52609, 52609, 52609, 52609, 52609, 52609, 2596,
	52609, 3633, 3633, 3633, 1033, -1000, 3007, 2912, 48591, 48591,
	70111, 395, 390, 389, -1000, 48591, -117, -1000, -1000, 1209,
	613, -1000, 2531, -1000, 2856, -1000, 48591, -1000, -141, -1000,
	2585, -1000, -1000, 2856, 2856, -148, 133061, 56606, 56606, -1000,
	612, 48591, 2622, -1000, -1000, 776, -322, -1000, 875, -1000,
	-1000, -1000, -1000, -1000, -1000, 874, -1000, 498, -1000, -1000,
	-1000, 204, 101363, 101363, 775, -1000, -149, -1000, -1000, -150,
	-1000, 3584, 385, 25322, -1000, 1024, 2730, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2660, -82, 126942, 126942, 1830, 2340,
	3713, -1000, 3656, 784, 774, 201, 3651, 382, 374, 369,
	-82, 126942, 126942, 1824, 126942, -1000, -1000, -1000, 229, -1000,
	-1000, -1000, 227, -1000, -1000, -1000, -1000, 2697, -1000, -48,
	-1000, -1000, -1000, 48591, -1000, -1000, 3414, 1271, 1269, -1000,
	-1000, -1000, 2959, -1000, 3143, -1000, 2439, -1000, 1073, 2438,
	1900, -1000, 48591, 608, 2762, 606, 605, 3777, 2229, 3776,
	1110, 3139, 2331, 3132, 2331, -1000, -1000, -1000, 951, -1000,
	133061, 2275, -1000, 604, 603, -1000, -50, 1686, 2020, 1265,
	1020, -1000, -1000, -1000, -1000, 48591, 48591, 100811, -1000, 466,
	3403, -30, -1000, -1000, -1000, 1823, 1258, 1257, -1000, -1000,
	-1000, -1000, 2154, 1822, 1253, 1252, -1000, -1000, -1000, -1000,
	-1000, 2434, -1000, -1000, 3128, 1018, -1000, 3067, 3065, 926,
	115341, 3010, 1245, 1241, 3644, 3644, 3644, -1000, 1017, -1000,
	-1000, -1000, -1000, 48591, -1000, -52, 1240, 3532, 2433, 91377,
	-1000, 2331, 3120, 1239, -1000, 1223, -1000, -1000, -1000, 3540,
	3539, 1225, -1000, -1000, -1000, 74639, -1000, -1000, 72359, -1000,
	-1000, 1089, 115341, 126942, 91377, 2005, -1000, -1000, 80772, 81324,
	115341, 2800, -82, 912, -1000, 2283, 912, 1007, 2910, -1000,
	2677, -1000, 1016, 91377, 3772, 368, -151, -53, 70111, -1000,
	-1000, -1000, -1000, 2424, 91377, 115341, 1317, 2760, 115341, 115341,
	3583, -1000, 2383, 628, 91377, 914, -1000, 3644, -1000, -1000,
	-1000, 1013, -1000, 3528, 91377, 3582, 3117, 1012, 95, 91377,
	3684, -1000, -1000, 3581, 91377, 3115, 2367, 2429, 2579, 830,
	75198, 1012, 2311, -69, -1000, 1948, 34699, 3398, -160, -1000,
	-1000, -1000, 1024, 66207, 56606, 48591, 3771, -167, -1000, -1000,
	-1000, -1000, -1000, 98596, 98596, 74639, 74639, 74639, 995, 115341,
	115341, 3770, 74639, 74639, 74639, -54, 601, -1000, 873, 866,
	863, -1000, -1000, -1000, -1000, -1000, -1000, 855, 854, 1009,
	-1000, -1000, -162, 60010, 95, -1000, 2323, 91377, -1000, 21307,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1011, -235, -1000,
	-1000, 2227, 2397, 2227, 1924, 1923, -1000, -1000, 2333, -1000,
	-1000, -1000, -1000, 2681, 3397, 25322, 3537, 8993, 48591, 48591,
	6756, 6742, 1438, 8993, 48591, 48591, 70111, 12686, -170, 48591,
	48591, -1000, 48591, 769, 133061, -1000, 3700, 48591, 365, 364,
	-1000, -1000, -1000, 3648, -1000, -1000, -1000, 133061, 48591, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 363, -1000, 136, -1000,
	-1000, -1000, 123621, -1000, 48591, 359, 3478, -1000, 358, 356,
	8796, 593, 129094, 129031, 128829, 343, -1000, -1000, 342, 341,
	133061, 3007, 133061, -1000, -1000, 846, 846, 1384, 1384, 1384,
	1384, 3633, 1644, 1735, 357, 532, 532, 532, 629, 1033,
	1033, 532, 532, 532, 1033, 2902, 2600, 600, 9461, -1000,
	-1000, 133061, 133061, 340, -1000, -1000, -1000, -117, 339, 1209,
	-1000, 2848, 3475, 133061, -1000, 56606, 2848, 2848, -1000, -1000,
	1951, 115341, 133061, 56606, -1000, 3081, -1000, 19577, 18997, -1000,
	25322, -1000, -1000, -1000, -1000, 3644, -1000, 63969, -1000, 599,
	-1000, 96, -1000, 2730, -1000, 853, -1000, -1000, 74639, 74639,
	2745, -82, -166, 115341, -1000, -1000, 768, 3765, 781, 25322,
	335, -1000, -1000, -1000, -82, -82, 115341, -82, -1000, -1000,
	-1000, 3358, 133061, 115341, 115341, 1578, 100259, 115341, 3112, -1000,
	3097, -1000, 1101, 5199, 128438, 57168, -1000, 57168, 115341, -1000,
	-1000, -1000, -1000, 2007, 1636, 3762, 1161, -1000, 3445, 115341,
	-1000, 115341, -1000, -1000, -1000, 115341, 115341, 91377, 115341, -1000,
	126942, 3075, -179, 133061, -56, -1000, 852, -1000, 1229, -1000,
	20732, 115341, 126942, 91377, 115341, 126942, 91377, 3088, 115341, 2266,
	-1000, -1000, 3063, -1000, 95, 3644, 3644, -1000, 1212, 1210,
	3074, -182, 25322, -1000, 3699, 3697, 3087, 3452, -1000, 115341,
	3695, 115341, 91377, 3357, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1821, 1206, 1200, 2366, -57, 2362, 2330, -59, 2173,
	1007, -61, 591, -1000, 851, -1000, -1000, 850, 847, 1007,
	-1000, 74639, 60010, 3761, 498, -1000, 2706, -1000, 96354, 76302,
	2379, -1000, -1000, 580, 115341, 115341, 572, -1000, 95, -1000,
	3759, 99155, 571, -1000, 2316, -1000, 767, -1000, 2563, 126942,
	2154, 95, 91377, -1000, -1000, 498, 334, -62, -1000, 3186,
	1095, 25322, 91377, 3086, 2582, 830, 75198, -1000, 1487, 2674,
	-1000, -66, -1000, 667, 95, 2311, -1000, -69, 133061, -1000,
	842, -1000, -187, -1000, -1000, 333, -1000, 3350, -1000, -1000,
	-192, -1000, -1000, 3451, 3451, 74639, 60010, 74639, 74639, 74639,
	-1000, 1009, 912, -1000, 2469, -1000, -1000, -1000, -1000, -1000,
	25322, 1803, -1000, 566, 563, -1000, -1000, -1000, -1000, 3397,
	8993, 8993, 48591, 48591, 48591, 8993, 12686, -194, -1000, 8993,
	8993, -117, -1000, -1000, 131602, -1000, -1000, -1000, 133061, -1000,
	20157, 2244, -1000, 128236, -1000, 32977, -1000, -1000, 48591, 48591,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52609, 2901,
	562, 70111, -1000, -1000, 332, 1027, 48591, 50313, 2585, 1027,
	1027, -1000, -195, -1000, -1000, -1000, 3644, -1000, 3644, 96,
	-1000, -1000, 3756, 25322, -1000, 74639, -1000, -1000, -1000, 3755,
	-197, 780, -1000, 3749, -1000, -1000, 119, -1000, -1000, -1000,
	2799, 3579, -1000, 2010, -1000, 115341, 115341, -1000, 115341, -1000,
	25322, 115341, 2859, 1259, -1000, 958, 2614, 560, 52609, 1133,
	91377, 932, 2837, 2836, -1000, 3569, 3473, 2881, -201, -1000,
	115341, 48591, 115341, -206, -208, 2412, -1000, -1000, 1128, 1256,
	48591, 1125, -1000, -1000, -1000, 70111, 557, 2331, 2331, -209,
	-211, -1000, -1000, -1000, 48591, 1199, 115341, 34125, -1000, 3745,
	3403, -1000, -1000, -1000, -1000, -1000, -1000, 115341, -1000, 115341,
	-1000, -1000, 3004, 2998, 3644, 3644, 48591, 1198, -1000, -1000,
	-1000, 3694, 2331, 25322, 2331, -1000, 2331, 3452, 1146, 115341,
	126942, 91377, 1602, 1602, 2920, -1000, -1000, -1000, 2559, 2559,
	74639, 60010, 60010, -1000, -70, 1007, -1000, 3578, 2241, 3742,
	-1000, -1000, -1000, -1000, 2610, -1000, -1000, -1000, 115341, 2609,
	2863, 57168, 555, 544, 115341, 996, -1000, -214, -1000, 838,
	837, 76302, 978, 964, -1000, -72, 542, -1000, 835, -1000,
	-1000, -1000, -1000, 498, 3577, -1000, 3685, 537, 536, 115341,
	2361, 535, 25322, 3395, 830, 75198, -1000, 3147, 1948, -1000,
	2417, 115341, 3392, -1000, 2674, 534, -1000, 995, 533, 995,
	-1000, -216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -73,
	-1000, 905, 903, -1000, -1000, 91377, 91377, 48591, 48591, -1000,
	8993, 8993, 8993, -1000, 325, -1000, -1000, 2311, 3471, -1000,
	-74, 128173, 127794, 558, 52609, 70111, -217, -1000, -1000, 115341,
	133061, -76, -1000, 133061, 530, 529, 450, -1000, -1000, -1000,
	763, 594, -1000, -1000, -1000, 126942, 3741, -1000, 126942, 99707,
	115341, -1000, -1000, 1900, 2580, -1000, -1000, -1000, 115341, 2428,
	-1000, -1000, -1000, 1099, 48591, 9461, 52609, 519, 48591, -1000,
	518, 516, 3574, 3313, -1000, 2699, 2919, 2053, 57168, -1000,
	3397, -1000, 127541, -1000, 1084, 2061, -1000, -1000, -1000, -1000,
	133061, 52609, 3452, 57168, -1000, -1000, 513, 512, 133061, 511,
	831, 2899, -1000, -1000, -1000, -1000, -1000, 95, 95, -1000,
	-1000, 133061, 510, 3532, -1000, -1000, -1000, -1000, 2331, 91377,
	-1000, -1000, -1000, 1196, -1000, -1000, -1000, -1000, 3736, 3734,
	2898, 80772, -1000, -222, -1000, -1000, -1000, 2073, 95, 978,
	-1000, -1000, 2379, 509, -1000, -1000, 2618, 2618, -223, 57168,
	57168, -224, 2355, 2684, -1000, 99155, 33551, 33551, 311, 3570,
	964, -1000, 3639, -1000, 3320, 3320, 48591, 3567, 95, -1000,
	3684, 57168, -1000, 91377, 57168, 2359, 2155, 2560, 75198, -1000,
	2579, -1000, -1000, -225, 115341, 1948, -1000, -1000, 74639, -1000,
	-1000, 2469, -1000, 115341, -1000, 115341, -1000, -1000, -230, -233,
	-1000, 2222, 48591, 32977, -1000, -1000, 558, -236, -1000, -81,
	-1000, 3566, 50313, 3733, 3729, 3728, -1000, -1000, -82, -1000,
	-82, -1000, 1989, -1000, 2424, -1000, -1000, 3085, 2846, 127504,
	9461, 2539, 115341, 17135, 2154, 2154, -1000, 3565, 2915, -1000,
	-1000, 2219, 508, -1000, -1000, -1000, -1000, 920, 115341, -1000,
	2843, 91377, 9461, 1098, -241, 2227, 2227, 48591, 32403, 2261,
	-1000, -1000, 48591, -1000, -1000, 3452, 126942, -1000, -1000, 126942,
	2356, -1000, 2882, 3641, -1000, 2355, 115341, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1084, -242,
	-243, -1000, -1000, 3436, -1000, 3349, -1000, -1000, -1000, 2706,
	95, -1000, -1000, -1000, -244, 133061, 95, -1000, 310, -249,
	1095, -251, 91377, 2055, -1000, 830, -1000, 2582, 1024, -1000,
	-1000, -254, -1000, -257, -260, -1000, -1000, 309, 49739, 49739,
	49739, -117, -188, -1000, 115341, 507, -1000, -1000, -1000, -1000,
	-1000, -1000, 3060, 1006, -1000, 888, 1980, 307, 1100, 302,
	287, -1000, -1000, -1000, 2881, -1000, 115341, -1000, -1000, 1005,
	498, -1000, 48591, 1084, -262, -1000, 1066, -265, -1000, 1065,
	-270, -1000, 2895, -1000, -272, 2331, -268, 226, 1602, 1000,
	3516, -1000, -1000, -1000, 2551, -273, -1000, -1000, 2053, 1084,
	2219, 2480, -1000, 2241, 996, -1000, -1000, -1000, 1084, 497,
	2053, 496, 1619, 830, -1000, -1000, 1405, 3395, 3277, 995,
	-1000, -1000, -1000, 3125, -1000, 53757, 2414, 1913, 130747, 3125,
	3125, -1000, -1000, 115341, 3502, -1000, 895, 892, 1528, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1024, -281, 3501,
	2539, 133061, -1000, -1000, 2227, 2795, -1000, 2227, 2888, -1000,
	2248, -1000, -1000, -1000, 2861, -1000, 2884, -1000, 1871, 3637,
	-1000, -1000, -1000, 115341, 2219, 2053, 993, 1905, 1901, 3727,
	978, 2355, 2053, 57168, 2219, 57168, 2159, -1000, 115341, -1000,
	2155, 1345, -1000, -1000, 1949, 3598, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 825, -1000, 3297, -1000, 1123, 2191,
	2191, -1000, -1000, 821, 888, -1000, 494, -1000, 492, -1000,
	2329, 126942, 2315, -1000, -1000, -1000, 993, 2219, 1024, 481,
	-1000, 3726, -1000, 2355, -1000, 2219, -295, 993, -296, -1000,
	-1000, -1000, -235, 2055, -1000, 1691, 1911, -1000, -1000, 2285,
	49165, 48591, -1000, 3618, -1000, -1000, 2621, -1000, 48591, 2881,
	48591, 48591, -1000, 226, 64528, 1024, 993, -1000, -1000, 2551,
	993, 1084, 1024, 2053, 1619, 66207, -1000, -1000, -1000, 133061,
	-1000, -1000, -1000, 133061, -1000, -297, -302, -1000, -256, 98596,
	-1000, 1024, -1000, 1024, 2053, -1000, 2219, 2159, -267, 2219,
	1189, -308, -1000, -1000, 2219, 993, -1000, -1000, -1000, -1000,
	476, -1000, 993, 1024, 48591, 1024, -1000, -311, -1000, 2219,
	-1000,
}

var sqlPgo = [...]int{
	0, 4591, 4590, 4585, 4584, 4583, 4581, 4580, 4578, 4571,
	4570, 4568, 4566, 150, 4565, 4564, 4563, 4560, 4556, 4553,
	4552, 4549, 4545, 4544, 4542, 4540, 4537, 4535, 4534, 4533,
	4532, 4528, 4525, 4523, 4518, 4517, 4516, 4513, 4511, 4510,
	4504, 4502, 4501, 4500, 4499, 4498, 4497, 4493, 4490, 4487,
	4486, 4485, 4482, 4478, 4477, 4476, 4475, 4474, 4473, 4468,
	4464, 4461, 4460, 4459, 4458, 4457, 4456, 4454, 4453, 4452,
	59, 4448, 4445, 4444, 4441, 4436, 4435, 4433, 4430, 4428,
	4410, 4406, 4405, 4404, 4403, 4401, 4399, 4397, 4396, 4395,
	4394, 67, 4393, 280, 4391, 4390, 4389, 4381, 4372, 4371,
	4369, 4360, 4358, 4357, 4356, 4355, 277, 4353, 140, 174,
	4352, 4351, 3912, 4350, 4349, 270, 4348, 4346, 4345, 4343,
	4341, 282, 4340, 4339, 4338, 4337, 4336, 4334, 4333, 4332,
	4331, 4329, 4328, 4327, 98, 207, 4320, 4318, 2903, 4317,
	4316, 4315, 4313, 4312, 4310, 4308, 4303, 4302, 4301, 4300,
	250, 175, 4298, 269, 4296, 4295, 4294, 4293, 4292, 4289,
	4288, 4285, 4277, 4274, 4273, 4272, 4269, 4268, 4267, 4265,
	4264, 4263, 4262, 4260, 4258, 4256, 4255, 4253, 4251, 4250,
	4249, 4248, 4245, 4244, 4242, 4240, 4237, 4236, 4235, 4234,
	4233, 4232, 4230, 248, 216, 129, 4228, 4227, 268, 266,
	4224, 4222, 4220, 4219, 4213, 136, 6, 44, 4211, 4210,
	96, 92, 87, 107, 102, 110, 4209, 119, 4208, 137,
	70, 4207, 21, 5, 300, 251, 13136, 243, 4205, 4203,
	4202, 247, 201, 4201, 238, 4198, 4197, 4196, 4194, 4193,
	4189, 74, 58, 185, 184, 181, 179, 2, 54, 106,
	85, 65, 48, 14, 112, 215, 20, 7, 262, 4180,
	260, 11, 151, 13, 33, 4178, 4177, 4175, 4168, 3607,
	116, 4167, 264, 239, 178, 4160, 4157, 4156, 275, 4155,
	4154, 55, 4153, 94, 99, 108, 15, 134, 4152, 152,
	171, 36, 4147, 167, 57, 4146, 170, 95, 88, 8910,
	11781, 4142, 4140, 125, 82, 126, 199, 254, 252, 202,
	272, 173, 166, 124, 213, 212, 183, 60, 4139, 256,
	4137, 3563, 89, 190, 159, 5849, 4134, 4132, 4130, 91,
	4129, 111, 4128, 4126, 68, 19, 3, 1, 154, 43,
	41, 29, 4124, 30, 132, 51, 23, 4123, 25, 4122,
	4115, 4114, 4113, 4111, 49, 162, 4108, 4105, 274, 4104,
	104, 61, 37, 4103, 35, 223, 4100, 245, 138, 4099,
	4098, 249, 206, 186, 4097, 42, 229, 4096, 4093, 4092,
	4091, 4089, 4088, 139, 9, 135, 4084, 4081, 148, 4080,
	56, 240, 197, 4079, 63, 4078, 4077, 180, 78, 164,
	273, 192, 232, 130, 230, 196, 233, 4076, 4075, 4074,
	220, 4073, 4072, 228, 156, 4069, 4068, 209, 283, 90,
	50, 86, 235, 81, 193, 165, 4066, 204, 4065, 4062,
	281, 188, 214, 10, 4, 109, 114, 4061, 8, 234,
	160, 237, 123, 4060, 7488, 2001, 1752, 4058, 4057, 155,
	133, 84, 127, 158, 265, 101, 4056, 4055, 2743, 4054,
	4053, 4052, 4050, 189, 4048, 4046, 4044, 143, 168, 222,
	4041, 121, 80, 53, 24, 131, 253, 267, 122, 227,
	176, 259, 4039, 4036, 4034, 203, 4033, 77, 115, 169,
	198, 255, 62, 4032, 163, 4031, 157, 908, 72, 153,
	4030, 226, 4029, 4028, 4026, 4024, 4022, 4021, 4018, 258,
	236, 4017, 4014, 4013, 38, 194, 4000, 263, 144, 200,
	1287, 66, 3999, 105, 3001, 3998, 117, 218, 71, 1698,
	34, 3997, 477, 79, 3996, 0, 13220, 9308, 12119, 12743,
	3995, 3872, 3994, 3993, 3992, 219, 76, 3991, 3990, 3989,
	113, 3982, 93, 3980, 3979, 83, 3978, 28, 16, 18,
	31, 27, 187, 161, 3977, 3976, 26, 145, 146, 3973,
	271, 231, 3969, 3968, 3967, 3966, 100, 3964, 47, 3963,
	45, 3961, 3960, 46, 12, 32, 3959, 3957, 210, 3956,
	225, 261, 3955, 172, 3954, 73, 142, 3953, 3952, 3951,
	69, 64, 257, 97, 3947, 286, 3945, 205, 3943, 3942,
	22, 3941, 3939, 246, 120, 118, 3938, 242, 149, 40,
	208, 182, 224, 3937, 3935, 177, 3934, 3933, 3932, 284,
	3931, 3930, 39, 3923, 3922, 3921, 17, 3919, 3918, 211,
	3260, 3916, 3915, 52, 3914, 191,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 54, 54, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 39, 41, 40,
	34, 34, 35, 35, 36, 37, 37, 10, 10, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	20, 20, 42, 42, 21, 21, 44, 44, 22, 22,
	45, 45, 602, 602, 602, 620, 620, 25, 25, 47,
	47, 26, 48, 17, 18, 18, 19, 19, 19, 19,
	603, 603, 603, 603, 38, 27, 49, 31, 31, 31,
	31, 31, 208, 208, 208, 208, 24, 24, 43, 43,
	244, 244, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	598, 598, 246, 246, 245, 238, 238, 239, 239, 240,
	240, 604, 604, 247, 247, 247, 248, 248, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 498, 498,
	498, 529, 529, 529, 529, 530, 530, 624, 624, 625,
	625, 625, 625, 625, 137, 137, 396, 396, 396, 58,
	58, 58, 58, 58, 593, 593, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 211, 82, 82, 610, 610,
	609, 608, 608, 608, 611, 611, 611, 209, 209, 209,
	133, 133, 133, 133, 133, 133, 134, 134, 135, 135,
	213, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 219, 16, 16, 16,
	116, 116, 116, 116, 116, 116, 116, 111, 111, 532,
	532, 533, 533, 204, 204, 205, 205, 205, 205, 206,
	206, 207, 207, 207, 73, 73, 216, 216, 218, 218,
	217, 217, 217, 217, 217, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
	63, 64, 64, 71, 71, 71, 71, 71, 71, 71,
	195, 195, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 79, 79, 79, 79, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 627, 627,
	628, 628, 629, 629, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	88, 88, 356, 356, 320, 320, 89, 89, 89, 90,
	90, 91, 91, 75, 75, 591, 591, 372, 372, 489,
	489, 76, 599, 599, 599, 601, 601, 600, 600, 93,
	93, 395, 395, 94, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 95, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	103, 103, 103, 103, 103, 104, 104, 104, 101, 101,
	101, 98, 98, 98, 97, 97, 97, 102, 102, 102,
	590, 309, 309, 100, 100, 100, 99, 99, 99, 373,
	373, 105, 105, 105, 105, 321, 106, 106, 106, 106,
	106, 106, 106, 106, 109, 109, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 491,
	491, 107, 107, 107, 456, 456, 112, 112, 112, 411,
	411, 113, 113, 113, 113, 113, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 136, 136, 136, 136, 136,
	136, 136, 136, 595, 595, 365, 365, 272, 272, 272,
	272, 125, 125, 125, 125, 126, 126, 126, 127, 127,
	200, 200, 143, 143, 143, 143, 142, 142, 142, 142,
	142, 142, 142, 142, 65, 65, 65, 66, 66, 67,
	67, 68, 68, 69, 69, 70, 70, 70, 70, 70,
	146, 146, 621, 621, 148, 145, 145, 145, 145, 145,
	144, 144, 147, 147, 147, 147, 149, 151, 151, 151,
	151, 151, 150, 150, 150, 150, 150, 152, 152, 523,
	523, 381, 381, 521, 521, 542, 542, 522, 522, 327,
	327, 327, 327, 327, 328, 328, 328, 531, 531, 531,
	531, 531, 531, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 201, 201, 202, 203,
	203, 203, 203, 203, 178, 178, 178, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 382, 382,
	181, 181, 181, 165, 165, 154, 154, 154, 154, 154,
	154, 154, 159, 159, 159, 159, 159, 159, 159, 159,
	155, 155, 167, 167, 167, 167, 167, 160, 160, 161,
	161, 161, 162, 162, 162, 162, 188, 188, 164, 164,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 156,
	156, 156, 156, 169, 169, 169, 169, 418, 418, 418,
	193, 193, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 191, 191,
	191, 191, 191, 191, 612, 612, 613, 613, 613, 185,
	185, 185, 185, 185, 185, 470, 470, 179, 179, 179,
	179, 184, 184, 184, 184, 187, 187, 187, 187, 401,
	401, 176, 176, 176, 177, 177, 177, 182, 182, 183,
	357, 357, 180, 180, 186, 186, 186, 186, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 158, 158, 158,
	158, 189, 189, 175, 175, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 631, 631, 171, 171,
	171, 170, 170, 170, 170, 173, 173, 174, 174, 174,
	174, 174, 174, 172, 163, 192, 592, 592, 588, 588,
	588, 588, 588, 588, 588, 588, 589, 589, 589, 589,
	594, 594, 117, 117, 117, 117, 117, 117, 117, 128,
	128, 128, 128, 128, 128, 128, 131, 131, 118, 118,
	118, 118, 118, 118, 118, 121, 121, 119, 119, 119,
	119, 120, 120, 83, 83, 83, 83, 83, 15, 15,
	15, 84, 84, 263, 263, 222, 222, 222, 345, 345,
	223, 223, 335, 335, 335, 335, 220, 220, 221, 221,
	85, 85, 632, 632, 632, 605, 605, 605, 606, 606,
	606, 606, 606, 606, 329, 329, 330, 330, 436, 436,
	436, 436, 436, 333, 333, 333, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 343, 344, 344, 336, 336,
	342, 341, 341, 340, 340, 339, 339, 337, 338, 338,
	338, 347, 347, 346, 349, 349, 348, 435, 551, 551,
	553, 553, 553, 553, 553, 553, 553, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 419, 419, 633, 633, 634, 635,
	549, 549, 549, 550, 545, 545, 546, 546, 546, 546,
	546, 331, 331, 332, 332, 332, 332, 547, 548, 363,
	363, 474, 552, 552, 554, 554, 556, 636, 636, 636,
	636, 636, 636, 637, 637, 637, 434, 434, 433, 433,
	354, 354, 557, 557, 557, 557, 558, 558, 558, 558,
	558, 561, 560, 559, 559, 559, 559, 559, 87, 87,
	87, 398, 398, 397, 397, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	197, 197, 275, 275, 275, 81, 81, 81, 12, 12,
	12, 12, 12, 12, 12, 290, 290, 13, 13, 13,
	607, 607, 607, 86, 86, 86, 86, 86, 86, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 597,
	597, 596, 596, 276, 276, 639, 639, 92, 92, 92,
	92, 92, 92, 92, 92, 492, 492, 493, 493, 80,
	80, 80, 80, 80, 420, 420, 417, 417, 416, 416,
	362, 362, 472, 472, 472, 473, 280, 280, 281, 281,
	241, 241, 241, 33, 32, 23, 23, 28, 28, 29,
	29, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	30, 30, 51, 51, 51, 51, 52, 52, 52, 52,
	55, 55, 56, 56, 50, 50, 50, 50, 53, 53,
	46, 46, 57, 57, 57, 57, 57, 614, 616, 616,
	615, 615, 619, 619, 619, 619, 619, 619, 617, 617,
	618, 618, 622, 622, 623, 623, 124, 124, 129, 129,
	129, 129, 129, 130, 130, 130, 130, 132, 132, 132,
	132, 141, 141, 196, 196, 196, 196, 196, 196, 196,
	59, 59, 59, 59, 72, 72, 72, 72, 139, 641,
	641, 641, 140, 140, 140, 640, 640, 273, 273, 430,
	430, 431, 431, 642, 642, 432, 432, 432, 432, 432,
	266, 265, 267, 267, 268, 268, 78, 78, 78, 256,
	256, 255, 257, 257, 258, 258, 253, 253, 534, 534,
	260, 260, 260, 261, 261, 249, 249, 250, 250, 251,
	251, 252, 252, 264, 264, 643, 643, 115, 115, 115,
	199, 199, 319, 319, 319, 427, 427, 427, 355, 355,
	287, 287, 429, 429, 429, 429, 394, 394, 394, 198,
	198, 370, 370, 384, 384, 385, 385, 486, 486, 386,
	122, 122, 123, 123, 138, 138, 226, 226, 224, 224,
	224, 224, 224, 224, 224, 224, 231, 231, 232, 232,
	233, 233, 234, 235, 235, 235, 235, 374, 374, 236,
	236, 236, 225, 225, 225, 227, 227, 227, 227, 227,
	227, 227, 230, 230, 230, 230, 237, 237, 237, 229,
	229, 568, 568, 568, 570, 570, 572, 572, 571, 571,
	567, 567, 569, 569, 638, 638, 400, 400, 400, 352,
	353, 350, 350, 351, 351, 360, 360, 358, 359, 359,
	361, 361, 471, 471, 471, 242, 242, 242, 391, 391,
	391, 391, 392, 392, 423, 423, 421, 421, 421, 421,
	422, 422, 424, 424, 424, 425, 425, 426, 426, 388,
	388, 389, 389, 390, 390, 390, 390, 452, 452, 228,
	228, 228, 367, 367, 367, 368, 368, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 443, 443,
	441, 441, 441, 441, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 476, 477, 477, 369, 369, 478, 428,
	428, 586, 586, 586, 587, 587, 469, 469, 479, 479,
	479, 479, 479, 479, 467, 467, 468, 468, 487, 488,
	488, 404, 404, 404, 404, 402, 402, 405, 405, 405,
	405, 405, 403, 403, 480, 480, 480, 480, 393, 393,
	481, 481, 481, 481, 482, 483, 483, 484, 484, 437,
	438, 438, 494, 494, 494, 494, 496, 366, 366, 366,
	366, 366, 544, 543, 543, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 511, 511, 511, 511,
	511, 511, 511, 497, 497, 497, 497, 497, 501, 501,
	501, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 502, 502, 507, 507, 508, 508, 508, 503,
	504, 509, 509, 509, 509, 644, 644, 513, 513, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 499, 499,
	499, 506, 506, 506, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 412, 412, 414,
	414, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 446, 446, 446, 446, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 562, 562, 562, 562, 562, 562, 562, 562, 448,
	448, 565, 565, 566, 566, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 573, 573, 574, 574,
	576, 576, 577, 577, 578, 579, 579, 579, 580, 581,
	581, 575, 575, 582, 582, 582, 582, 583, 583, 584,
	584, 584, 584, 584, 585, 585, 585, 585, 585, 458,
	458, 459, 459, 465, 465, 465, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 326, 326, 325, 277, 277, 277, 277, 277, 277,
	379, 379, 377, 377, 377, 380, 380, 378, 378, 376,
	376, 375, 375, 455, 455, 453, 453, 457, 457, 406,
	406, 512, 512, 512, 512, 512, 512, 512, 512, 407,
	407, 407, 415, 408, 408, 409, 409, 409, 409, 409,
	449, 450, 410, 410, 410, 451, 451, 460, 464, 464,
	463, 462, 462, 461, 461, 439, 439, 440, 440, 387,
	387, 645, 645, 383, 383, 485, 485, 485, 485, 323,
	323, 371, 371, 322, 322, 314, 314, 315, 315, 315,
	315, 364, 364, 466, 466, 514, 514, 515, 515, 516,
	516, 517, 517, 518, 519, 520, 454, 454, 298, 297,
	284, 285, 296, 295, 294, 283, 286, 291, 292, 293,
	288, 289, 305, 304, 303, 254, 259, 310, 311, 311,
	313, 313, 312, 312, 300, 301, 302, 490, 282, 316,
	316, 317, 317, 317, 318, 318, 318, 318, 278, 278,
	279, 279, 306, 306, 307, 308, 308, 299, 299, 299,
	269, 269, 269, 270, 270, 271, 271, 528, 528, 525,
	525, 525, 526, 526, 526, 527, 527, 527, 527, 524,
	524, 524, 524, 524, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	536, 536, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	538, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 541, 541,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 6, 4, 8, 7, 10, 9, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 9, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 9, 10, 5, 2, 6, 4, 7, 7, 7,
	10, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 6, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 13, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 605, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-196, -201, -202, -203, -3, -58, -60, -74, -93, -95,
	-106, -116, -115, -117, -125, -133, -128, -111, -65, -138,
	-142, -153, -197, -198, -199, 32, 31, 100, 80, 156,
	129, 138, 206, 389, 435, 447, 404, 143, 426, 409,
	-147, -148, 465, -59, -72, -140, -139, 73, 130, 419,
	-4, -12, -16, 29, 46, -61, -62, -63, -64, 62,
	-81, -77, -88, -82, -75, -76, -79, -626, 102, -569,
	-96, -99, -132, -630, 164, 224, -118, -119, -120, 371,
	-126, -127, 428, -129, -130, -131, 431, 165, -67, -66,
	158, -224, -226, -145, -144, -146, -200, -154, -155, -156,
	-157, -158, -159, -160, -162, -188, -163, -164, -165, -166,
	-167, -168, -172, -191, -169, -170, -171, -174, -173, -175,
	-180, -176, -177, -178, -179, -181, -182, -184, -185, -186,
	-187, -189, -190, 470, -183, -192, -161, 530, 49, 485,
	82, 148, 439, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -57, -78, -80, -83, -84, -85, -92,
	-86, -87, -568, -97, -98, -101, -103, -104, -100, -102,
	427, -227, -225, 602, 545, -20, -25, -26, -21, -22,
	-24, -27, -23, -28, -29, -30, -42, -47, -48, -44,
	-45, -43, -46, -49, -50, -51, -52, -53, -54, -55,
	-56, -32, -38, -39, -33, -34, -35, -36, -37, -40,
	-41, -17, -18, -19, -31, 566, 575, -230, -228, -229,
	-237, 457, 553, 505, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, -321, 2, -300, -306,
	-307, -308, -299, -269, -538, -541, 4, -535, -539, 171,
	234, 335, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 129, 124, 130, 133, 128, 132, 134, 136, 137,
	138, 141, 142, 143, 145, 146, 147, 149, 150, 151,
	153, 154, 156, 157, 158, 161, 159, 162, 160, 163,
	164, 165, 166, 169, 177, 178, 179, 184, 186, 187,
	188, 192, 193, 194, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 207, 211, 213, 214, 215, 216, 217,
	223, 224, 226, 227, 228, 229, 230, 235, 236, 237,
	240, 246, 247, 251, 252, 253, 255, 259, 260, 261,
	262, 263, 264, 266, 268, 267, 270, 273, 274, 277,
	278, 279, 280, 281, 282, 286, 287, 283, 288, 289,
	291, 292, 295, 293, 296, 297, 294, 298, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	299, 314, 312, 316, 317, 318, 319, 333, 328, 329,
	330, 323, 324, 320, 325, 321, 322, 326, 327, 332,
	337, 338, 341, 221, 343, 344, 347, 365, 351, 352,
	353, 356, 357, 360, 363, 364, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 376, 377, 379, 380, 381,
	383, 384, 385, 387, 389, 390, 392, 393, 395, 396,
	397, 398, 399, 400, 401, 403, 404, 406, 405, 407,
	409, 411, 412, 413, 419, 426, 420, 422, 423, 424,
	425, 427, 428, 429, 430, 431, 433, 434, 435, 437,
	438, 439, 440, 441, 443, 445, 446, 450, 451, 467,
	468, 487, 447, 448, 449, 452, 453, 454, 455, 456,
	460, 458, 459, 461, 462, 463, 465, 466, 469, 470,
	472, 473, 474, 475, 476, 477, 478, 481, 483, 484,
	485, 504, 486, 488, 492, 493, 494, 495, 489, 490,
	503, 497, 498, 500, 501, 506, 507, 508, 509, 510,
	511, 512, 513, 515, 523, 524, 525, 527, 530, 531,
	532, 533, 521, 535, 536, 539, 540, 541, 544, 542,
	543, 545, 547, 550, 551, 552, 558, 557, 559, 561,
	562, 567, 568, 570, 571, 572, 36, 50, 51, 54,
	56, 58, 69, 70, 71, 75, 125, 126, 155, 167,
	168, 180, 195, 196, 208, 210, 218, 219, 220, 241,
	242, 244, 249, 271, 340, 342, 358, 362, 378, 382,
	386, 388, 402, 442, 479, 491, 496, 516, 517, 518,
	519, 526, 528, 553, 554, 555, 560, 569, -321, 2,
	-300, 349, -293, 2, -269, -269, 389, 28, 2, 28,
	377, 459, 508, 510, 2, -595, -365, 2, 28, -272,
	-269, 102, 206, 457, -293, 2, -595, -365, 25, 2,
	-269, 2, 363, 22, 27, 66, 77, 98, 141, 166,
	189, 192, -629, 365, 396, 445, 461, 503, 513, 527,
	2, 557, 292, 458, 505, 234, 120, 532, 452, -607,
	450, 451, 363, 394, 437, 209, 546, -273, 2, 447,
	-269, 292, 2, 605, 94, 74, 442, 462, -150, 2,
	282, 524, -151, -152, -149, 516, -523, 452, 437, 314,
	-269, 605, 605, 605, 28, -282, -269, 505, 234, 452,
	120, 501, 605, 2, 505, 368, 557, 458, 120, 399,
	234, 532, 192, 141, 27, 452, -607, 580, 581, 292,
	127, -593, 2, -588, 4, -539, -535, -315, -314, 505,
	511, 120, -308, -299, 595, -307, 605, 605, 605, 605,
	2, 252, 253, 398, 397, 462, 463, 28, 605, 605,
	605, 605, 450, 2, 166, 22, 27, 66, 93, 98,
	127, 189, 192, 354, -627, 365, 396, 461, 503, 507,
	513, 527, -606, 486, 68, 425, 452, -605, -607, 292,
	532, 141, -416, 120, 282, 204, 540, 510, 508, 538,
	133, 240, 543, 542, 605, 605, -109, 2, 602, 32,
	31, -108, -112, 143, 465, -219, 505, 245, 2, -269,
	605, 605, 605, 2, 252, 253, 450, 451, 28, 605,
	605, 190, -588, 2, 605, 605, 605, 2, 28, 252,
	253, 450, 451, 245, 2, 68, 454, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 2, -194, 462, 486, 215, 47, 46,
	74, 28, 395, 79, 369, 121, 127, 150, 533, 207,
	234, 235, 260, 93, 94, -418, 44, 253, 68, 252,
	451, -612, 450, -470, 506, 453, 459, 500, 264, 447,
	524, 102, 547, 438, 572, 399, 400, 498, 413, 283,
	159, 191, 4, 120, 314, 437, 464, 268, 267, 516,
	282, 446, 372, 84, 605, -638, 2, 505, -640, 2,
	524, 524, 2, -640, 2, -640, 2, -640, 2, -641,
	524, 569, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	-225, -227, -226, 605, 605, 605, 605, 605, 605, 605,
	-194, 462, 2, 74, 28, -358, -360, 537, 243, 152,
	355, -224, -226, 2, -568, -521, 2, -444, -542, -446,
	593, 594, 586, 502, 67, -325, 334, 573, -458, 127,
	538, 349, -541, -447, -460, 155, 365, 442, -380, 8,
	9, 5, 6, 7, -278, -448, -454, 529, 170, 339,
	-318, 606, 10, 602, -565, -226, -459, 37, 210, 65,
	-525, -317, -279, -497, 244, -316, -299, -562, -563, 4,
	-535, -536, -526, -500, -508, -504, -505, -511, -269, -538,
	77, 111, 112, 110, 115, 114, 285, 284, 116, 113,
	464, 546, 66, 36, 218, 219, 249, 340, 220, 75,
	-564, 142, -537, 241, 242, 479, 51, 402, 180, 126,
	125, 342, 56, 54, 554, -509, 122, 516, 517, 518,
	519, 195, 196, 58, 167, 168, 362, 386, 496, 526,
	528, 208, 271, 43, 106, 191, 239, 222, 248, 250,
	254, 272, 275, 315, 331, 336, 359, 361, 436, 471,
	-644, 555, 491, 69, 70, -570, 405, -571, -293, -570,
	605, 605, 607, 605, -350, -352, -353, 2, 28, 139,
	602, 2, -475, 2, -476, -480, -226, 265, -479, 602,
	-477, 600, -300, 350, -566, 443, -562, -563, -278, -299,
	-317, 4, -535, -537, 604, -354, 602, 120, 452, 505,
	78, 234, 93, 166, -411, 602, -269, 28, 349, 520,
	607, -351, 393, -456, 602, 349, 190, 352, 60, 296,
	2, 2, 2, 2, 2, 218, -269, 505, 119, 2,
	263, 2, 2, 2, 2, 2, 2, 2, -373, 218,
	2, -300, 557, -373, 218, 2, -373, 218, 2, -417,
	2, 87, -283, 218, 2, -269, -309, 218, 2, -304,
	-306, -313, 218, 2, -311, -269, -530, 218, 2, -529,
	4, -535, 116, 464, -444, 2, -138, 2, 60, -269,
	557, 2, 467, 2, 602, -150, 2, 71, 524, 43,
	462, -151, 2, -431, 2, -432, -265, -266, -267, -487,
	-268, 251, 392, 401, 576, 131, 334, 572, -621, 190,
	585, 520, -521, -521, -521, -381, 604, 2, 2, 2,
	2, 2, 2, -480, 218, -300, 2, -297, -524, 4,
	-535, -539, -536, -540, -538, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	127, 131, 135, 139, 140, 144, 148, 152, 170, 172,
	185, 189, 190, 206, 209, 212, 225, 238, 243, 245,
	265, 269, 276, 284, 285, 334, 339, 345, 349, 350,
	354, 355, 375, 391, 408, 432, 457, 464, 482, 499,
	505, 514, 520, 522, 529, 537, 538, 546, 548, 556,
	563, 564, 565, 566, -541, 77, 2, -480, 218, 2,
	-303, 218, -480, -306, 2, -283, 2, -296, -602, -520,
	-524, 512, 162, 420, 8, 2, -322, 218, -300, -302,
	-306, -304, 2, 2, 2, 2, -311, 2, -529, 218,
	2, 28, 28, 557, 393, 245, 520, 607, -371, -314,
	-315, -520, -364, -269, 604, -444, 2, -138, -121, 2,
	185, -444, 218, 2, -138, 218, 2, -444, 218, 2,
	-138, 218, 2, -269, 2, -608, 2, -532, 218, -528,
	10, -527, 5, 4, -535, -539, -536, 218, -269, 2,
	296, 2, 2, 527, 2, 98, 505, 119, 2, 424,
	-628, 445, 531, 2, 2, 2, 2, 2, 2, 2,
	505, -288, 2, -269, 185, 489, -311, 218, -312, 2,
	458, -639, 405, -529, 218, 2, 557, -304, 218, 2,
	-304, 234, 247, -283, 218, 2, 510, 508, 510, 508,
	190, 2, 245, 2, 245, 2, -481, 2, -482, -476,
	-483, 600, 350, -491, 2, -490, -527, 553, -109, 602,
	-109, 602, 462, 602, -532, -300, -300, -444, 2, -138,
	-121, 2, -444, 2, -138, 2, -269, 2, -135, -532,
	-134, 602, 190, -269, 2, -444, 2, -138, -121, 2,
	-444, 2, -138, 2, -219, 185, 2, 120, 505, -194,
	2, 185, 548, 2, 8, 2, 225, -532, 453, 400,
	177, 2, 467, 2, 468, 74, -418, 572, 74, 190,
	2, 190, 2, -401, 2, 566, 393, 190, 2, 2,
	-592, 2, 349, 190, 2, 190, 2, 190, 2, 190,
	2, 190, 2, -193, 463, 525, 504, 397, 253, 2,
	-138, 563, -121, 253, 252, -444, 563, 2, -613, 185,
	451, -444, 2, 523, 262, 160, 190, -401, 2, 190,
	2, 190, 2, 5, 2, 398, 487, 2, 251, 392,
	487, 2, -300, 505, 557, 458, 120, 28, 2, 450,
	2, 2, 88, 89, 190, 2, 190, 2, 205, 190,
	2, 190, 505, -382, 604, 572, 2, -393, -480, -430,
	-431, -430, 520, -358, -360, -194, 467, 2, -231, -391,
	-233, 185, -421, -422, -234, 276, 172, 345, -235, -400,
	28, 139, -400, -400, 60, 603, 603, 11, 12, 76,
	41, 593, 594, 595, 596, 183, 597, 598, 591, 592,
	590, 583, 584, 588, 257, 258, 95, 587, 585, 86,
	290, 444, 173, 174, 175, 176, 421, 232, 34, 233,
	14, 15, 16, -325, 33, 354, 275, 573, 222, 471,
	586, 17, 18, 19, 248, 250, 336, 50, 225, -277,
	365, -324, 502, 67, -444, -444, -444, -444, -444, -444,
	-444, -444, 361, 602, -387, -439, 600, -226, 602, 602,
	602, 602, -520, -226, -444, -458, 603, -378, 602, -226,
	-458, -453, 602, 442, 600, 602, -461, -444, 5, 5,
	5, 602, 604, -573, 567, 185, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 388, -502, 602, -501, 602, -501, -501, 558,
	-499, 602, 575, 568, 602, -499, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 558,
	607, -570, -354, 602, -383, -485, -444, 595, -383, -383,
	349, -375, -444, 106, -404, 254, 315, 191, 272, 436,
	239, -441, 606, -441, -469, 575, -226, -477, -299, -226,
	-479, 602, -475, -469, -110, -520, -93, -106, -115, -138,
	-153, -198, -199, 595, -300, 602, 190, 602, 604, -524,
	190, -364, -283, -310, -269, -300, -316, -317, -322, -294,
	-269, 2, 138, -375, -588, 532, 452, 28, 458, -530,
	-272, 38, -455, -494, -495, -544, 606, -543, -497, -507,
	-503, -506, 378, 382, -526, 54, 554, -509, 244, 4,
	-535, -537, 241, 242, 479, 51, 402, 180, 126, 125,
	342, 56, 516, 517, 518, 519, 195, 196, 58, 555,
	491, 69, 70, -588, 532, 452, 28, 458, -530, 185,
	-530, 2, 2, 155, 2, 2, 2, -269, -247, 607,
	64, 429, 155, -373, 218, -247, 155, -247, 155, -323,
	218, -322, -247, 155, -247, 607, 155, -247, 607, 155,
	604, 607, 155, -530, 2, -417, -523, -375, 38, -431,
	2, 127, 4, 5, -642, 607, 274, -328, 289, 333,
	214, 350, 570, 343, 131, -531, 5, 4, -454, -466,
	127, 282, 244, -514, -516, 8, -515, 9, -517, 593,
	594, -522, -521, 109, 604, -524, -244, 422, 465, 364,
	-243, 24, 29, 143, 236, 319, 551, 161, -340, 237,
	-337, 368, 155, 483, 541, -602, -603, 449, 512, 162,
	420, 90, 343, 465, 364, 422, 155, -397, -399, 38,
	118, 319, 363, 61, 228, 294, 295, 485, 560, 155,
	465, 364, 422, 364, -13, -258, 24, 143, -260, -255,
	465, -603, 99, 422, 579, 427, 374, 497, 391, -603,
	270, -620, 332, 562, -602, -246, 483, 541, -602, -603,
	449, 422, -245, -342, -337, 368, 155, 606, 24, 143,
	422, 465, 364, -624, -625, 29, 422, 364, -596, -290,
	-567, 225, 566, 155, -290, -290, -480, 218, -617, 185,
	2, -610, -134, 266, 5, 10, -532, -134, -371, 607,
	607, -524, 595, 451, 450, 155, 155, 155, 155, 253,
	185, 334, 334, 2, 2, 2, 2, 2, 192, -605,
	-629, 2, 2, -300, 218, -356, 349, -591, -372, 505,
	-300, 185, 334, 43, -303, 218, 2, -306, 557, -596,
	334, -305, 218, -300, 38, 602, 334, 2, -417, 2,
	234, -567, 334, -481, -319, -300, -476, -319, 465, -293,
	38, -441, -300, 603, 607, -491, -491, -532, -207, 566,
	190, 602, -219, 566, 566, 253, -488, 607, -487, 225,
	-533, -532, -135, -532, 425, 253, -532, -591, -283, 2,
	-300, 2, 505, 255, -532, -207, 225, -532, -532, -532,
	-523, 28, 468, 2, -193, 463, 525, 89, 468, 2,
	-300, 505, 120, 234, 80, -617, 185, 2, -269, -594,
	185, -589, 437, 452, 532, -588, -300, 120, -300, 120,
	-300, 120, -300, -300, 2, 2, 2, 2, 2, 85,
	2, -138, -444, 2, 85, 2, 46, 484, -613, 185,
	2, 523, 2, 523, 2, -269, -269, -269, 486, 274,
	-300, -300, -300, -301, -306, 453, 506, 533, 451, -444,
	2, -631, 2, 190, 185, 2, 505, 234, 505, 234,
	120, 190, 74, 120, 28, 505, 448, 604, 4, -247,
	607, -273, -231, -391, -523, -392, -391, -232, -231, -234,
	185, 401, 542, 319, 469, 259, -422, -421, 28, -444,
	-426, 179, 318, -444, -424, -446, 593, 594, -515, -517,
	-374, 343, -225, -225, -225, -361, -471, -444, 391, 234,
	-496, -494, -494, -298, -524, 516, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, 275, 222, 471, 50, 225, -444, 520, -444,
	-444, -444, -444, 312, 334, 339, 529, 170, 539, 139,
	343, -645, 499, 40, -451, -226, -379, 602, -465, 35,
	482, 28, -458, 602, 2, -439, -444, -440, -326, -324,
	-269, 593, 594, 595, 596, 597, 598, 583, 584, 585,
	14, 15, 16, 588, 592, 590, 591, 183, 95, 587,
	290, 444, 86, 173, 174, 175, 176, 257, 258, 17,
	18, 19, 34, 586, -376, -375, -375, 603, 556, 28,
	139, 595, 2, 603, 607, 38, 603, -444, -376, -457,
	-453, -375, -464, -463, 563, -412, -413, 571, 299, 123,
	216, 297, -414, 456, -518, 8, -524, 595, -574, 178,
	209, 602, 603, 2, 603, 2, 603, -444, 2, 603,
	-444, 2, 603, -444, 2, 603, -444, 2, 603, 2,
	603, 2, -444, -444, -444, -444, -444, -444, -444, -375,
	8, -518, -518, 516, 516, -518, -518, -518, -510, 378,
	379, 380, 381, 277, 278, 279, 280, 382, 383, 384,
	385, 304, 305, 306, 307, 300, 301, 302, 303, 308,
	309, 310, 311, 200, 201, 202, 203, 196, 197, 198,
	199, -510, -406, 2, -512, -375, 4, 571, 299, 123,
	216, 297, 456, 5, -406, 2, -407, 2, -444, -375,
	-408, -445, -446, 593, 594, 586, -325, -458, -409, 2,
	-444, -376, -444, 57, 269, 522, -410, -444, 190, -375,
	-375, 2, -375, 2, -571, 38, -375, -367, 607, 190,
	38, 4, -367, -367, 602, 603, 607, -405, 213, 293,
	288, 247, -405, -475, -404, 254, -402, 359, -402, -402,
	-469, -284, 600, 608, -524, -469, -468, -467, 38, -293,
	356, -469, -469, 604, 603, -468, 601, -586, 602, 605,
	605, 605, 605, 605, -300, 602, -375, -524, 604, 488,
	2, 603, 248, 248, 248, 248, 248, 349, 443, 603,
	520, -590, -309, -313, 506, 2, 566, -108, 351, 603,
	607, -366, 37, 600, 604, -518, 2, 2, -513, 558,
	602, 602, -413, 602, 190, -590, -313, 506, 2, -365,
	520, -269, 2, -300, -373, -247, 155, -373, -373, -247,
	607, 155, -283, -304, -309, -311, -313, -269, -529, -530,
	-247, -305, -621, 603, 524, -432, -327, 401, 481, 423,
	460, 501, 8, 9, 8, 9, 607, -524, 607, -622,
	93, 520, 78, 452, -262, 283, 520, -435, 218, 78,
	-545, 93, -286, -546, -269, 72, 538, 391, 189, 153,
	-622, 93, 391, -622, 93, 2, 236, 93, 465, 486,
	28, 60, -480, 41, 41, 28, -620, 332, 270, 190,
	572, 505, 234, 452, 520, 520, -480, -399, -494, 118,
	294, 295, 60, -519, -514, 593, 594, -519, 60, -519,
	-519, -519, 566, -303, -480, 452, 520, 520, 520, 411,
	411, -255, -151, 520, 520, 28, -194, 430, 127, -643,
	585, 411, 520, 190, 190, 270, -620, 332, 607, 41,
	41, 28, -620, 332, 270, 190, 520, -322, -284, 552,
	42, 552, 42, 552, 520, 42, 452, 520, 607, 42,
	520, 520, -13, 465, -597, -274, 105, 325, 287, 326,
	97, 322, 96, 321, 103, 323, 104, 324, 559, 337,
	63, 320, 298, 327, -275, -276, 146, 370, 550, 120,
	-529, -13, -13, 465, 364, 422, 155, -618, 225, 28,
	-607, 225, -488, 225, -488, -314, -269, 604, -138, -444,
	-444, -138, -444, -138, 46, 155, 155, 2, -639, 263,
	602, -331, 334, 190, -364, -489, 245, 607, -372, -588,
	155, -529, -398, -397, 334, -305, 218, 2, 155, -354,
	334, 149, 602, 399, 2, 155, -285, 218, -270, -269,
	-417, -249, 509, 155, -395, 548, -427, -138, 602, 127,
	38, -427, -384, -385, -486, -386, -286, 602, -293, -441,
	-109, -490, 603, 603, 603, -206, 353, -205, -269, 5,
	-219, -355, -287, -286, 119, 403, 403, -213, 566, -134,
	-135, 603, 607, -488, 225, 489, -207, -207, -488, -488,
	-300, 185, -532, -207, -207, -207, 2, 2, 2, 2,
	-401, -300, -283, -322, -300, 28, 604, -530, -530, -313,
	-309, -401, -283, -401, -283, -401, -283, -401, -401, -138,
	-444, 486, 2, 462, 185, 185, 604, -401, -357, 432,
	2, 399, 120, 505, 368, 234, -300, -322, -300, -322,
	-283, 120, -283, 121, -300, 4, -480, -392, -232, 350,
	259, 469, -424, -425, -446, 442, 443, -425, 442, 443,
	8, 9, 8, 9, -236, 473, 338, -373, 607, -241,
	39, 135, 259, -300, 572, 151, -444, -444, 520, -645,
	499, -451, 151, -444, 312, 339, 529, 170, 539, 139,
	343, 190, 602, -445, -445, 603, -377, -444, -444, 601,
	610, 603, 604, 603, -360, 607, -358, -444, -375, -375,
	603, 604, -375, -364, 601, 601, 607, 603, -462, -463,
	144, -444, 520, 520, 520, 520, 602, 603, 604, -579,
	360, 602, 602, -444, 603, 603, 603, 603, 38, 607,
	607, 607, 603, 607, 607, 607, 603, 603, 603, 607,
	603, 572, 572, 603, 603, 603, 603, 607, 603, 607,
	603, 190, 603, 603, -415, 375, 603, 11, 12, 593,
	594, 595, 596, 183, 597, 598, 591, 592, 590, 583,
	584, 585, 86, 290, 444, 14, 15, 16, -325, 248,
	225, -445, -445, -445, -445, 603, -449, -450, 190, 185,
	38, -410, -410, -410, 603, 190, -375, 603, 603, 602,
	-572, 292, 334, 603, -438, -437, 564, -485, -368, 2,
	-475, -295, -524, -438, -438, -375, -444, 254, 254, -403,
	548, 349, -405, -475, -468, -520, -443, -442, 187, 39,
	135, 328, 329, 330, 221, 188, -468, -293, -354, -468,
	-468, -524, -469, -469, -467, 603, -587, -520, 603, -369,
	-478, -566, -360, 604, -524, -216, -567, -195, 5, 339,
	-195, -195, -195, -195, -300, -530, 520, 520, 225, 25,
	376, -494, 600, 601, 8, -524, 602, -518, -518, -518,
	-530, 190, 190, 225, 190, -529, 2, -247, -373, -247,
	-247, -322, -323, -247, -247, -247, -396, 566, -521, -431,
	536, 83, 401, 516, -521, -243, 422, -286, -286, -300,
	-310, 204, 412, -529, 334, -435, 218, -248, 334, 218,
	-294, -494, 602, -419, 568, 259, 259, 548, -286, -294,
	259, 218, -286, 218, -294, 2, -294, -598, 401, 344,
	-444, 60, -338, 281, 399, 335, -244, 422, 465, 364,
	-138, -138, -138, -138, -138, 602, -621, 548, 138, -300,
	-322, -300, -310, -529, -305, 465, 364, 422, 331, -316,
	-519, -519, -397, 465, 364, 422, -310, -529, -303, -529,
	-254, 218, -269, -254, 218, 452, -283, 411, 572, 45,
	-643, -520, -520, -520, 520, 190, 190, -245, -138, -138,
	-138, -138, -138, 602, -284, -246, 422, 5, 218, -286,
	5, -286, 218, 5, -269, -286, -310, -529, -625, 24,
	143, -286, -310, -529, -274, 370, -532, 339, 544, -283,
	-596, -290, 452, 520, 520, -480, -614, -615, 206, 435,
	452, 438, -530, -134, -210, 566, -134, -204, 229, 595,
	-593, -532, -269, 557, -269, -329, -332, -330, -286, -436,
	-435, -549, -550, -545, 275, 234, 538, 247, 171, 93,
	-222, -223, 568, 566, 155, -320, -300, 600, -207, -532,
	-300, -489, -311, -312, 155, -354, 334, -529, 38, 155,
	602, 2, 2, -304, 349, 334, -285, 218, -250, 145,
	-643, -283, -438, -368, -394, -429, 432, 349, -355, 553,
	-293, -394, -370, 607, 190, 585, 604, -355, -484, 595,
	-109, -109, -207, 607, 602, 585, 585, 602, -532, 603,
	607, 604, 602, 585, 585, -215, 353, -214, 147, 261,
	246, 475, 476, 477, 478, 137, 474, 124, 317, -488,
	-532, -213, -135, 190, 190, -68, 566, 505, -207, 606,
	438, -269, -401, -401, -401, 462, 462, -269, -364, -296,
	-283, -300, -297, -322, 185, 185, -283, 542, -425, 350,
	286, -471, -242, 574, -300, 606, -444, -444, 151, 151,
	-444, -445, -445, -444, 151, 190, 602, -444, -455, 33,
	33, 603, 607, -440, -444, -324, 603, 556, -360, -360,
	603, 595, -524, 606, 603, -453, 148, -444, 514, 299,
	216, 297, -414, 297, -414, -414, -518, 5, -524, 595,
	-580, -289, 602, -269, 564, -359, 355, 603, -496, -494,
	-444, -444, -444, -444, -444, -518, -499, -499, -514, -514,
	-444, -449, -444, -496, -494, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, 139, 334, 343, -445, -450,
	-449, -444, -444, -494, 603, 603, 603, -375, -108, 602,
	292, -388, 209, -444, -488, 607, -388, -388, 603, -475,
	-475, 602, -444, 254, 601, 607, 609, 585, 585, -354,
	604, -467, -468, 601, 603, 607, 603, 607, -428, 38,
	603, -524, -438, -218, -217, 136, 53, 107, 134, 339,
	248, -530, -530, 452, 352, 5, 8, 600, 601, 604,
	-518, 603, 603, 603, -530, -530, 452, -530, -247, -247,
	119, 319, -444, 520, 520, 60, 225, 155, 334, 550,
	334, -546, 153, -551, -444, 602, 234, 602, 602, 2,
	-238, -239, -240, 143, 465, 24, -623, 2, 548, 155,
	-247, 155, -247, 570, -338, 602, 602, 520, 452, -262,
	520, 566, -375, -444, -208, 127, -523, -603, 606, -603,
	606, 452, 520, 520, 452, 520, 520, 334, 155, 566,
	169, 169, 572, -254, 185, 520, 520, -520, -520, -520,
	566, -375, 520, -498, 48, 26, 334, -304, -247, 155,
	520, 520, 532, 465, -532, -532, 339, -13, -310, -529,
	-305, 465, 364, 422, -595, -365, -595, 206, -313, -618,
	-488, -212, 353, -211, 147, 434, 137, 261, 230, -488,
	-210, 190, 245, 566, -305, 2, 603, 603, 607, 607,
	-552, -248, -300, -285, 234, 234, -292, -270, 38, 347,
	347, 602, -300, -89, 566, -487, -520, -599, 566, 43,
	-303, 38, 155, -596, -138, -305, -492, -493, 5, 38,
	-300, 155, 349, 334, -251, 268, -643, -528, -567, -360,
	-394, -383, 335, 91, 603, -438, -385, -368, -444, 2,
	603, -205, -206, -532, -532, -532, -207, -219, -287, 2,
	-533, -532, -532, 607, 602, 585, 585, 585, 585, 585,
	-213, -488, -134, -138, 353, -300, 595, -401, -344, -343,
	368, 343, -344, 442, 442, 350, 179, 264, -241, -284,
	-444, -444, 151, 33, 33, -444, -444, -455, 603, -444,
	-444, -375, 601, 5, -444, 603, 603, 8, -444, 603,
	604, -581, -269, -444, 603, 60, 603, 603, 607, 607,
	603, 603, 603, 603, 603, 603, 603, -450, 190, 139,
	343, 602, 603, 603, -108, -452, 212, 60, -475, -452,
	-452, -403, -364, -475, -442, -284, 600, -284, 600, -524,
	-520, -478, 602, 604, -217, 585, -532, -532, -195, 566,
	-313, 601, 2, 600, -524, 603, -313, 119, -286, -286,
	505, 442, -254, 391, -435, 155, 155, -553, 93, -555,
	76, 171, 102, 334, 339, 538, 391, 72, 127, 349,
	408, -633, -634, -635, 38, 577, 578, 603, -362, -472,
	-566, 602, -269, -362, -364, 334, 494, 127, 349, 334,
	127, 349, 561, 119, 2, 532, 79, -286, -294, -364,
	-364, -300, -310, -529, 163, 603, 607, 585, 2, 595,
	595, -310, -529, -305, -310, -529, -303, 155, -254, 366,
	169, -138, -520, -520, 520, 520, 163, 603, -284, 5,
	5, 155, -281, 76, -286, 5, -286, -304, 119, 452,
	520, 520, 349, 349, 352, -614, -615, -210, 607, 602,
	585, 585, 585, -210, -533, -134, 2, -354, -345, 236,
	-286, -550, -547, -548, 391, -436, -554, -556, 171, 391,
	-333, 602, -285, -270, 602, -138, 2, -221, -220, -269,
	5, 602, -331, 353, 601, -601, 353, -600, 117, 137,
	-529, -398, -138, -305, -354, 603, 607, 149, -420, 548,
	-284, -300, 155, -252, 267, -643, -528, -249, -423, -421,
	140, 602, 349, -138, -360, 585, 603, 603, 119, 603,
	-214, -215, -532, -134, -532, -532, -532, -213, -488, -69,
	-70, 234, 93, 373, -297, 505, 234, 602, 602, -241,
	-444, -444, -444, 603, -360, -524, 595, -575, 368, 603,
	-471, -444, -444, -445, 190, 602, -455, 603, -576, 565,
	-444, -389, -390, -444, 440, 108, 210, -576, -576, 603,
	-520, -520, 2, -532, 2, 520, 600, 2, 190, 225,
	38, 411, -435, -294, -294, -298, -291, -269, 171, 218,
	339, 561, -419, 259, 602, -445, 542, -300, 602, 2,
	217, 217, 30, 60, -636, 131, 238, 603, 607, -473,
	-280, -269, -444, -473, 603, 603, 339, 542, 339, 561,
	-444, 542, -494, 602, -247, -247, 603, 603, -444, 520,
	-523, 100, -521, 2, -603, -254, -283, 185, 185, -520,
	-520, -444, 520, 5, -247, -298, -247, -247, -281, 532,
	-310, -529, -305, -619, 506, 459, 533, 453, 193, 441,
	-619, 185, -211, -212, -532, -134, -134, -210, 38, -339,
	-340, 2, -552, 259, -291, 259, 227, 154, -362, 602,
	602, -364, -632, 566, 603, 607, 585, 585, -329, -222,
	-90, -91, 521, -487, 607, 602, 585, -354, 38, 5,
	602, 602, -269, 349, 602, -284, -264, 92, -643, -528,
	-250, -394, 335, -364, 93, -423, -451, -207, 602, -207,
	603, 607, 28, 602, 28, 602, -300, -322, -375, -375,
	603, -360, 60, 607, 603, 603, -445, -455, 603, -577,
	-578, -289, 607, 602, 602, 466, 601, 601, -530, 2,
	-530, -254, 391, -269, -546, -555, -291, 334, 548, -444,
	-445, -271, 602, -444, 602, 602, 38, 127, 238, 132,
	223, -434, -637, 101, 495, 226, -472, -241, 603, -433,
	548, 408, -445, -281, -362, 602, 602, 602, 585, 190,
	-138, -138, 602, -498, -247, -304, 520, 2, 2, 190,
	-595, 603, -609, 406, -138, -222, 602, -334, 81, 94,
	128, 217, 194, 235, 486, 492, 28, -334, 603, -362,
	-362, 603, -335, 349, 119, 319, -220, -521, -521, 603,
	38, -91, 9, -600, -601, -444, 38, -138, -492, -362,
	-300, -362, 349, -256, -255, 276, -528, -251, 603, -294,
	-394, -533, -70, -364, -364, 603, 603, -582, 399, 443,
	211, -375, -361, 603, 607, 38, -390, 2, 2, 2,
	411, -248, 155, 213, 603, -557, 291, -269, 603, -398,
	-398, 38, 132, 223, -341, -337, 602, -242, -473, 213,
	-300, -604, 548, 603, -347, -346, -343, -349, -348, -343,
	-375, -521, 100, 366, -375, -281, -530, -530, 349, -611,
	191, -610, 5, 10, -335, -363, -474, -286, -433, 603,
	603, 82, 119, -345, -138, 603, -138, 603, 603, -420,
	603, -300, -253, -534, 411, 413, -643, -252, -438, 603,
	603, 603, 603, -583, -584, 50, 535, 109, -444, -583,
	-583, -578, -580, 171, 566, -558, -561, -560, 582, 472,
	191, 367, 603, 494, 560, 603, 603, -636, -364, 566,
	-354, -444, -433, 603, 607, 553, 603, 607, 553, 603,
	190, 603, -247, -616, 566, -247, -619, -209, 566, 46,
	-263, -262, 603, 607, -434, -433, -341, 390, 133, 143,
	-339, -632, -433, 602, -434, 602, -261, -260, -643, -514,
	-264, 140, -207, -585, 153, -584, 387, 184, 442, 387,
	184, -585, -585, -291, 55, -560, 582, -561, 582, 542,
	133, -438, 603, 55, -557, -346, 225, -348, 190, 366,
	206, 190, 450, -610, 30, -474, -341, -434, -223, 566,
	443, 443, 2, -222, -335, -434, -362, -341, -362, -257,
	-258, -259, -364, -256, 335, 542, 109, 209, 515, 319,
	33, 585, -559, 319, 429, 64, 465, -559, 585, -558,
	602, 602, 352, -530, 353, -223, -341, -438, 2, -335,
	-341, 603, -223, 603, -253, 465, 442, 357, -584, -444,
	23, 339, 127, -444, -636, -375, -375, -247, -206, 602,
	-438, -223, -263, -223, -433, -438, -434, -261, -384, 603,
	603, -206, -438, -438, -434, -341, -257, -438, -336, -337,
	520, 603, -341, -223, 602, -223, -438, -375, -438, 603,
	-336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 566, 567, 569, 570, 571, 573,
	574, 576, 578, 580, 581, 582, 584, 585, 587, 588,
	589, 590, 591, 593, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	662, 664, 0, 1433, 1435, 1437, 1439, 0, 818, 0,
	36, 37, 39, 0, -2, 345, 347, 349, 351, 0,
	382, 384, 385, 387, 389, 390, 391, 393, -2, 0,
	499, 500, 502, 504, -2, 0, 1032, 1034, 1036, 0,
	651, 653, 0, 1039, 1041, 1043, 0, 0, 674, 675,
	0, 1544, -2, 666, 668, 670, 672, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 762, 764, 766,
	768, 770, 772, 773, 775, 777, 779, 780, 782, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, -2, 812, 813, 814, -2, -2, 0,
	-2, -2, -2, 1451, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 443, 445, 447, 449, 451, 454,
	456, 458, 1602, 506, 508, 510, 512, 514, 516, 518,
	0, -2, 1616, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 111, 112, 113, 114,
	115, 116, 117, 118, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 108, 109, 73, 0, 0, 1575, 1577, 1579,
	1581, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 568, 572, 575, 577,
	579, 583, 586, 592, 594, 596, 551, 552, 555, 2314,
	2332, 2333, 2334, 2337, 2338, 2339, 2340, 2341, 2342, 2800,
	2881, 2882, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 553, 554,
	1221, 0, 620, 618, 2299, 621, 2596, 623, 625, 493,
	494, 495, 496, 497, 498, 0, 644, 634, 1614, 645,
	647, 648, 649, 650, 615, 613, 0, 644, 2368, 642,
	1431, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 422, 1280, 1281, 1282, 1416, 1417, 2644,
	1458, 0, 245, 663, -2, -2, 2765, -2, 697, 698,
	-2, -2, 712, 716, 707, 2769, 0, 2647, 2631, -2,
	719, 1434, 1436, 1438, 816, 817, 2318, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 255, -2, -2, -2, -2, 0, 0,
	2692, 2420, 2267, 2334, 2270, 2265, 346, 348, 350, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 383, 386,
	388, 392, -2, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 1095, 1096, 1338,
	0, 0, 0, -2, 501, 503, 556, 557, 0, 1603,
	1603, 564, 565, -2, 0, 0, 0, 0, 316, 306,
	1033, 1035, 1037, 1038, 0, 0, 0, 0, 0, 652,
	654, 0, 0, 285, 1040, 1042, 1044, 1045, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 667, 669, 671,
	673, 744, 746, 748, 750, 752, 754, 756, 758, 760,
	763, 765, 767, 769, 771, 774, 776, 778, 781, 784,
	786, 788, 790, 792, 794, 796, 798, 800, 802, 804,
	806, 808, 810, 811, 824, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	926, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1013,
	0, 0, 827, 830, 831, 832, 833, 834, 835, 0,
	899, 924, 925, 935, 815, 0, 1261, 1604, 1460, 1441,
	1455, 1460, 1443, 1444, 1445, 1446, 1447, 1452, 1454, 1448,
	1449, 1450, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 444, 446, 448, 450, 452, 455, 457, 459,
	-2, 1573, 1574, 507, 509, 511, 513, 515, 517, 519,
	655, 0, 657, 0, 829, -2, 0, 1608, 1608, 1608,
	0, 0, 1574, 1572, 0, 660, 661, 723, 724, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 2141, 1969,
	0, 725, -2, 2002, 2004, 2740, 2569, 2765, 2140, 2006,
	2007, 2008, 2009, 2010, 0, 2012, 2013, 2014, 2015, 2016,
	2017, 0, 2019, 0, 2024, 2025, 2026, 0, 2747, 2244,
	2328, -2, 0, 0, 2753, 2324, 0, 2107, 2042, -2,
	-2, 2351, 2330, 1813, 1814, 1815, 1816, 1817, -2, -2,
	2783, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 0, 2728, 2748, 2749, 2754, 2756, 2750, 2737,
	2067, 2434, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1840, 1849, -2, -2, -2,
	-2, -2, -2, -2, 2741, 2742, 2759, 2762, 2768, 2773,
	2774, 2746, 2755, 2782, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	1841, -2, -2, -2, -2, 1591, 2610, 1594, 1221, 1592,
	1576, 1578, 0, 1580, 0, 0, 0, 1585, 1611, 1609,
	0, 1660, 1589, 1590, 1683, 1683, 1707, 0, 1688, 0,
	1707, 1603, 1734, 0, 1694, 2636, 2043, 2044, 0, 2334,
	2329, -2, -2, 2780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 622, 624, 0, 0,
	0, 643, 1613, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 427, 428, 429, 2748, 0, 0, 0, 434,
	0, 436, 437, 438, 439, 440, 441, 442, 215, 2748,
	524, 549, 0, 215, 2748, 527, 215, 2748, 530, 0,
	533, 1336, 215, 2748, 536, 2295, 215, 2748, 539, 541,
	2303, 215, 2748, 545, 2310, 2308, 546, 0, 548, 235,
	231, 232, 233, 234, 1427, 1428, 1429, 1430, 0, 1457,
	1337, 665, 0, 691, 0, 695, 696, 2736, -2, 0,
	2656, 700, 701, -2, 703, 1461, 1465, 1466, 1467, 1468,
	1469, 0, 0, 0, 0, 1474, 0, 0, 0, 0,
	692, 693, 710, 711, 717, 720, 0, 819, 820, 821,
	822, 823, 72, 0, 2748, 1734, 74, 0, 2289, 2359,
	2360, 2361, 2362, 2363, 2781, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2783, 78, 0, 2748, 83,
	0, 2748, 0, -2, 96, 0, 110, 0, 136, 0,
	2292, -2, -2, -2, 2285, 119, 0, 2748, 0, 2264,
	-2, 0, 227, 307, 308, 309, 0, 1070, -2, 0,
	1274, 1276, 1276, 0, -2, 0, 0, 0, 1023, 2261,
	2266, 1024, 1025, 2271, 0, 354, 355, 356, 357, 358,
	0, 359, 2748, 361, 362, 0, 364, 365, 2748, 367,
	368, 0, 370, 0, 372, 0, 267, 271, 2748, 319,
	320, 2347, 2348, 2355, 2356, 2357, 2358, 2748, 396, 398,
	0, 400, 401, 0, 403, 0, 0, 0, 407, -2,
	423, 0, 420, 410, 411, 413, 414, 415, 416, 417,
	0, 463, 461, 2300, 0, 0, -2, 2748, 0, 1067,
	0, 0, 1316, -2, 0, 1267, 0, 1323, 2748, 1319,
	0, -2, 0, 1601, 2748, 1478, 1099, 1100, 1101, 1102,
	1746, 490, 0, 1509, 0, 1511, 0, 1530, 1740, 1683,
	0, 0, 1745, 0, -2, 609, 2317, -2, 559, 0,
	560, 0, -2, 0, 333, 0, 0, 1048, 1050, 1051,
	1053, 1054, 1057, 1058, 1059, 1060, 0, 1062, 1720, 286,
	288, 0, 0, 0, 1047, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 0, 0, 676, 0, 0, 825,
	826, 0, 0, 842, 843, 844, 0, 333, 2648, 2605,
	2456, 851, 0, 854, 857, -2, 0, 0, 0, 0,
	861, 0, 866, 867, 868, 0, -2, 0, 875, 877,
	1031, 879, 0, 0, 881, 0, 885, 0, 888, 0,
	890, 0, 892, -2, -2, -2, 900, 901, -2, 906,
	-2, 0, 910, -2, 0, 913, 0, 916, -2, 0,
	926, 922, 923, 0, 0, 0, 0, 943, 944, 0,
	953, 0, 956, 957, 958, 0, 962, 963, 0, 965,
	966, 967, 968, 0, 2719, 2653, 2420, 0, 976, -2,
	982, 984, 0, -2, 0, 1000, 0, 1004, 0, 0,
	1012, 0, 0, 828, 0, 836, 837, 215, 1738, 1440,
	-2, 1442, 0, -2, 0, 656, 0, 659, 1633, 1559,
	1556, 0, 1630, 1631, 1560, 0, 0, 0, 1567, 0,
	1606, 1607, 0, 0, 0, 1546, 1547, 0, 0, 0,
	0, 2146, 2147, 2148, 2149, 2162, 2150, 2151, 2161, 2159,
	2160, 2152, 2153, 2158, 2172, 2173, 2163, 2164, 2154, 2167,
	2165, 2166, 2168, 2169, 2170, 2171, 0, 0, 2177, 0,
	2155, 2156, 2157, 2185, 0, 0, 2186, 0, 2188, 0,
	2178, 2174, 2175, 2176, 0, 1948, 1950, 2252, 0, 0,
	0, 2184, 2179, 2180, 1886, 1887, 1888, 1889, 1890, 1923,
	1927, 1928, 0, 0, 2003, 2249, 2248, 2005, 0, 0,
	2200, 0, 2018, -2, 0, 2141, 2195, 0, 0, 2027,
	2028, 2029, 0, 0, 2200, 0, 0, 2243, 2039, 2040,
	1878, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1826, 0, 1828, 0, 1829, 1830, 1837,
	1850, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 2224, -2, 0, 0, 0, 0, 1842,
	0, 1593, 0, 0, 1664, 2253, 2257, 2258, 1664, 1664,
	0, 0, 2201, 1731, 1731, 0, 0, 1726, 1726, 1726,
	1724, 1707, 0, 1707, 1717, 0, 1707, 1707, 0, -2,
	1688, 0, 0, 1717, 0, 1701, 597, 599, 601, 603,
	604, 605, 607, 1735, 1736, 0, 0, 0, 0, 2335,
	0, 0, 0, 0, 2307, 0, 0, 2320, 0, 0,
	2294, 379, 0, 0, 0, 2702, 2647, 0, -2, 627,
	646, 1603, 0, 2203, 1761, 1765, 0, 1767, 1768, 1769,
	1770, 1771, 0, 0, 1762, -2, 1838, 1840, 1861, 2352,
	2353, 2354, 1821, 1822, 1823, 1824, 1825, 1833, 1820, 1820,
	1820, 1831, 1860, 1852, 1860, 1856, 1806, 1807, 1808, 1843,
	1844, 1845, 1846, 0, 2702, 2647, 0, -2, 636, 0,
	0, 1541, 424, 0, 431, 432, 433, 0, 520, 0,
	213, 214, 0, 215, 2748, 525, 0, 528, 0, 215,
	2748, 2259, 534, 0, 537, 0, 0, 543, 0, 0,
	0, 0, 0, 215, 1543, 0, 0, 0, 0, -2,
	705, 713, 714, 715, 0, 1463, 0, 1470, 734, 735,
	736, 1472, 1473, 0, 1475, 708, 737, 738, 739, 740,
	741, 742, 0, 2273, 2274, 2275, 2276, 2279, 2280, 0,
	0, 706, 727, 709, 0, 721, 120, 1413, 0, 0,
	170, 0, 1413, 1413, 0, 0, 0, 0, 198, 0,
	1133, 0, 0, 0, 0, 136, 155, 166, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 84, 1243, 0,
	1246, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 98, 99, 0, 0, 104, 105,
	0, 154, 0, 0, 0, 0, 0, 1506, 0, 143,
	0, 0, 0, 135, 136, 122, 0, 0, 136, 156,
	168, 0, 202, 204, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 237, 0, 0, 0, 1268, 0,
	0, 0, 1600, 0, 0, 0, 0, 2748, 1411, 0,
	1396, 0, 1720, 2505, -2, -2, 286, 1720, 1022, 0,
	0, 2335, 2269, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 399, 402, 404, 405, 406, 0, 1315,
	0, 412, 453, 1192, 2748, 0, 0, 480, 475, 0,
	477, 0, 0, 0, 1242, 2748, 1240, 2304, 0, 1265,
	0, 1221, 2748, 2302, 0, 0, 0, 1324, 2344, 1333,
	1337, 1496, 0, 492, 0, 1512, 1514, 0, 0, 1741,
	0, 1743, 1683, 1603, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 1061, 292, 0, 1719, 0,
	0, 321, 1720, 286, 2622, 1046, 333, 333, 1720, 678,
	1720, 680, 0, 0, 845, 846, 0, 333, 333, 333,
	852, 853, 855, 856, -2, -2, -2, -2, 858, 859,
	950, 0, 0, 0, 949, 869, 0, 871, 874, 878,
	0, 1016, 2631, 2647, 2702, 1029, 950, 2420, 950, 2420,
	950, 2420, 950, 950, 894, 938, 946, 905, 912, 0,
	907, 911, 914, 917, 0, 919, 927, 0, -2, 0,
	930, 0, 932, 0, 934, 950, 951, 954, 961, 964,
	969, 970, 971, 972, 2315, 973, 974, 975, -2, 979,
	980, 0, 991, 996, 997, 993, 0, 0, 0, 0,
	0, 0, 1007, 1008, 0, 0, 1015, 0, 838, 1260,
	0, 1453, 1633, 1559, 658, 1550, 1632, 1551, 1558, 1561,
	0, 0, 1563, 0, 1565, 0, 1628, 1629, 1636, 1637,
	0, 1647, 1648, 1640, 0, -2, 0, 0, 1643, 1644,
	1569, 0, 1586, 1587, 1588, 1617, 1620, 1352, 0, 2881,
	1882, 1756, 1883, 1884, 2288, 0, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, -2, -2, -2, -2,
	-2, -2, -2, -2, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, -2, -2, -2, 1924, 1925,
	1926, -2, 2187, 2189, 0, 2252, 0, -2, 0, -2,
	-2, -2, -2, 1945, 0, 1947, 1952, 1954, 1956, 0,
	0, 0, 0, 2251, 1966, 2235, 2236, 0, 0, 2143,
	2144, 2145, 1951, 0, 1970, 2250, 2247, 0, 0, 2181,
	0, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 0, 2199, 1616, 2031, 0, 0,
	0, 0, 2038, 2023, 2197, 0, 2196, 0, 0, 0,
	2207, 0, 2242, 2238, 0, 2286, 1877, 1864, 1865, 1866,
	1867, 1868, 1869, 1879, 0, 2283, 2321, 2327, 2117, 0,
	0, 0, 2068, 2069, 2070, 2071, 2072, 0, 2074, 2075,
	0, 2077, 2078, 0, 2080, 2081, 0, 2083, 2084, 2085,
	2086, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 0, 0, 2089, 0, 2210, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2091, 0, 2093, 2201, 2221,
	0, 0, 1971, 0, 0, 0, 0, 2141, 0, 2096,
	2201, 2229, 0, 0, 0, 0, 0, 2201, 0, 2234,
	0, 2103, 0, 2105, 1595, 0, 0, 1751, 0, 0,
	0, 2256, 1751, 1751, 0, 1659, 0, 0, 1727, 1728,
	1729, 1730, 0, 0, 1731, 0, 1721, 1725, 1722, 1723,
	1717, 1680, 0, 0, 2290, 1717, 1686, 1716, 0, 1221,
	1706, 1717, 1717, 0, -2, 1690, 1707, 0, 0, 598,
	600, 602, 606, 608, 0, 0, 1616, -2, 0, -2,
	335, 1220, 0, 0, 0, 0, 0, 0, 617, 619,
	0, 0, 540, 0, 0, 633, 0, 611, 0, 614,
	0, 1752, 1755, 0, 0, 1766, 1772, 1773, 0, -2,
	0, 0, 1862, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 435, 550, 215, 522, 0, 215, 215, 531,
	0, 0, 215, 542, 215, 2311, 215, 2309, 236, 547,
	1542, 248, 0, 694, 0, 1462, 1471, 0, 731, 0,
	733, 0, 2277, 2281, 2278, 2282, 0, 722, 0, 0,
	0, 0, 1412, 0, 1359, 0, 0, 174, 2748, 0,
	217, 0, 0, 1185, 2296, 0, 1175, 0, 0, 2442,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 1245, 1247,
	1254, 1256, 0, 1250, 2284, 0, 0, 1251, 0, 1253,
	1255, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 1277, 0, 0, 1278, 1279, 1484, 1485, 0,
	1505, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 2263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 1311, 1309, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 0, 0, 0, 0,
	-2, 1272, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 324, 2262, 2272, 0, 1055, 1056,
	360, 363, 366, 369, 254, 0, 0, 408, 0, 0,
	1105, 1080, 0, 0, 462, 333, 0, 0, 476, 480,
	2313, 1065, 1238, 1241, 0, 1221, 2748, 1288, 0, 0,
	0, 0, 0, 0, 1322, 0, 0, 2748, 2291, 2343,
	2344, 1498, 1506, 0, 1751, 0, 1528, 1515, 0, 0,
	0, 1528, 1532, 1533, 1535, 1536, 0, 0, 1742, 1748,
	558, 610, 1603, 1603, 333, 331, 2572, 329, 326, 328,
	0, 0, 1518, 1520, 0, 0, 0, 280, 0, 289,
	1720, 287, 0, 292, 0, 0, 0, 474, 677, 682,
	840, 0, 333, 848, 849, 850, 896, 940, 948, 995,
	860, 862, 863, 864, 0, 0, 0, 1030, 1026, 1027,
	1028, 880, 950, 883, 950, 886, 950, 889, 891, 909,
	915, 928, 921, 929, 0, 0, 0, 942, 959, 0,
	978, 0, 0, 0, 0, 0, 0, 0, 1001, 1002,
	1003, 1005, 1010, 1009, 1014, 839, 1739, 1554, 1555, 1557,
	0, 1566, 0, 0, 1642, -2, -2, 1641, 1645, 1646,
	-2, -2, -2, -2, 1562, 0, 1571, 1568, 0, 1627,
	1350, 1351, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1967, 0, -2, 1946, 1949, 1953, 1955, 1957, 0,
	0, 0, 0, 0, 0, 2190, 0, 2192, 1968, 2245,
	2248, 2183, 0, 2139, 0, 0, 1615, 1616, 1616, 0,
	2037, 0, 2198, 0, 2205, 2206, 0, 2030, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 2073, 2076, 2079, 2082, 0, 0,
	0, 0, 2062, 0, 0, 0, 2066, 1832, 1818, 0,
	1860, 1858, 1859, 1853, 1860, 1857, 1810, 0, 1809, 0,
	2088, 0, 2090, 2092, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 1975, 1976, 1996, 2095, 2227, 2228, 0, 0,
	0, 0, 0, 0, 2101, 0, 2233, 2102, 2104, 1603,
	0, 1596, 0, 1661, 1650, 1750, 0, 2254, 1720, 1663,
	1665, 2255, 2293, 1650, 1650, 0, 2202, 0, 0, 1711,
	0, 0, 0, 1713, 1684, 0, 0, 1678, 0, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1685, 1221, 1715, 1687,
	1691, 2321, 0, 1717, 0, 1702, 0, 1704, 1737, 0,
	1696, 1699, 0, 0, 2336, 1751, 0, 373, 380, 381,
	374, 375, 376, 377, 0, 626, 0, 0, 0, 0,
	0, 2204, 0, 1757, 0, 1763, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 1540, 430, 521, 215, 526,
	529, 2260, 215, 535, 538, 544, 244, 0, 690, -2,
	729, 730, 732, 0, 728, 171, 1413, 0, 0, 1355,
	1357, 1361, 1367, 1370, 0, 176, 2748, 188, 0, 2748,
	0, 1149, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 2748, 215, 2748, 215, 192, 194, 197, 0, 201,
	199, 0, 1137, 0, 0, 1140, 121, 1413, 0, 0,
	124, 128, 137, 138, 141, 0, 0, 0, 153, 0,
	0, 0, 1372, 1376, 1384, 0, 0, 0, 1248, 1249,
	1252, 1258, 85, 0, 0, 0, 1380, 1382, 1388, 97,
	100, 2748, 2305, 102, 2748, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 126, 130,
	139, 140, 142, 0, 1390, 123, 0, 230, 0, 0,
	220, 215, 2748, 0, 222, 0, 223, 224, 238, 0,
	0, 0, 1068, 1069, 1310, 0, 1263, 1264, 0, 1275,
	1269, 0, 0, 0, 0, 0, 1392, 1393, 0, 0,
	0, 1411, 1408, 1720, 250, 0, 1720, 258, 0, 2268,
	0, 272, 395, 0, 0, 0, 0, 1104, 1203, 1106,
	1108, 1109, 1110, 217, 0, 2344, 1175, 2494, 2344, 0,
	0, 1075, 0, 0, 0, 468, 464, 0, 473, 479,
	478, 484, -2, 0, 0, 0, 0, -2, 0, 0,
	1326, 1320, 1321, 0, 0, 0, 0, 2748, 1500, 1506,
	0, 1601, 1616, 491, 1507, 1528, 0, 0, 0, 1517,
	1513, 1510, 1751, 0, 0, 0, 0, 0, 1744, 1747,
	561, 562, 310, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 290, 0, 293, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 292,
	322, 282, 1720, 0, 0, 679, 0, 0, 847, 0,
	870, 873, 882, 884, 887, 931, 933, 950, 960, 985,
	986, 1127, 0, 1127, 0, 0, 1006, 1564, 0, 1639,
	1570, 1621, 1622, 0, 1352, 0, 1885, 1930, 0, 0,
	-2, 0, 0, 1934, 0, 0, 0, -2, 0, 0,
	0, 2191, 2193, 0, 2247, 2182, 2032, 0, 0, 0,
	2036, 2020, 2021, 0, 2142, 2208, 2237, 2241, 0, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 0, 2287, 2322, 2326,
	2115, 2116, 2120, 2301, 0, 0, 0, 2045, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1855, 0, 0,
	2209, 2220, 2222, 1972, 1973, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, -2, -2, -2, 1990, 1991,
	1992, -2, -2, -2, 1997, 0, 0, 0, 2223, 2225,
	2226, 2230, 2231, 0, 2098, 2099, 2100, 2232, 0, 1603,
	1597, 1658, 0, 1749, 1662, 0, 1658, 1658, 1610, 1709,
	0, 0, 1733, 0, 1681, 0, 1682, 0, 0, 1714,
	0, 1689, 1692, 1693, 1703, 0, 1695, 0, 1698, 0,
	2032, -2, 334, 336, 338, 0, 341, 342, 0, 0,
	0, 629, 630, 0, 628, 612, 0, 0, 1759, 0,
	0, 1835, 1839, 1863, 638, 639, 0, 637, 523, 532,
	246, 0, 1718, 0, 0, 0, 0, 0, 0, 216,
	0, 1184, 0, 1147, 0, 0, 1174, 0, 0, 1190,
	178, 179, 180, 0, 0, 0, 0, 190, 0, 0,
	186, 0, 196, 200, 1134, 0, 0, 0, 0, 1360,
	0, 0, 0, 150, 151, 152, 0, 157, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 1491, 0, 1481, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 1349, 240, 0,
	0, 0, 0, 0, 1262, 1313, 1314, 1271, 1373, 1377,
	1385, 0, 0, 0, 0, 644, 0, 649, 1410, 0,
	258, 256, 0, 259, 0, 262, 263, 0, 0, 258,
	252, 0, 0, 0, 1221, 409, 1078, 1191, 0, 0,
	1193, 1111, 1115, 0, 2344, 2344, 0, 2298, 0, 1076,
	0, 0, 1192, 460, 0, 467, 0, 481, 0, 0,
	1242, 0, 0, 1266, 1286, 1221, 0, 1325, 1327, 0,
	1335, 0, 0, 0, 1502, 1506, 0, 1495, 1496, 1635,
	1508, 1526, -2, 0, 0, 1616, 1534, 1531, 1537, 1538,
	0, 330, 0, 325, 327, 0, 313, 0, 1519, 1521,
	0, 1049, 1052, 0, 0, 0, 0, 0, 0, 0,
	281, 292, 1720, 317, 0, 841, 865, 941, 987, 1126,
	0, 0, 989, 0, 0, 1638, 1625, 1626, 1623, 1352,
	1932, 1936, 0, 0, 0, 1938, -2, 0, 1960, -2,
	-2, 2194, 2246, 2011, 1616, 2033, 2035, 2022, 2240, 1880,
	0, 2122, 2119, 0, 2106, 0, 2057, 2058, 0, 0,
	2061, 2063, 2064, 2065, 1819, 1812, 1811, 2219, 0, 0,
	0, 0, 2097, 1598, 0, 2111, 0, 0, 1666, 2111,
	2111, 1710, 0, 1712, 1679, 1667, 0, 1676, 0, 2322,
	1705, 1697, 0, 0, 339, 0, 343, 344, 378, 0,
	0, 1753, 1758, 0, 1764, 1834, 0, 247, 172, 173,
	1364, 1368, 1365, 0, 175, 0, 0, 1148, 0, 1151,
	0, 0, 0, 0, 1158, 1175, 0, 0, 0, 0,
	0, 0, 1177, 0, 1176, 0, 0, 1207, 0, 1340,
	1347, 0, -2, 0, 0, 0, 182, 206, 0, 0,
	0, 0, 209, 1414, 184, 0, 0, 215, 215, 0,
	0, 1356, 1358, 1371, 0, 0, 0, 0, 160, 0,
	0, 1374, 1378, 1386, 1381, 1383, 1389, 0, 103, 0,
	1492, 144, 0, 0, 0, 0, 0, 0, 1391, 228,
	229, 0, 215, 0, 215, 221, 215, 1349, 0, 0,
	0, 0, 0, 0, 0, 1394, 1395, 249, 0, 0,
	0, 0, 0, 251, 323, 258, 397, 0, 1136, 0,
	1203, 1195, 1196, 1197, 0, 1107, 1202, 1204, 0, 0,
	1112, 0, 0, 0, 0, 1092, 1077, 0, 1088, 0,
	0, 1105, 1080, 0, 465, 482, 0, 485, 0, 488,
	1066, 1239, 1283, 1221, 0, 1317, 0, 0, 0, 0,
	0, 0, 0, 1504, 1506, 0, 1497, 1498, 1528, 1634,
	0, 0, 0, 1516, 1635, 0, 332, 333, 0, 333,
	294, 0, 295, 296, 297, 304, 305, 283, 284, 681,
	683, 0, 0, 689, 1125, 0, 0, 0, 0, 1624,
	1940, -2, -2, 1961, 0, 2323, 2325, 1616, 0, 2108,
	1618, 0, 0, -2, 0, 0, 0, 1599, 1582, 0,
	1657, 1649, 1651, 1653, 2634, 2415, 2747, 1583, 1584, 1732,
	0, 0, 1700, 340, 631, 0, 0, 1760, 0, 0,
	0, 1366, 177, 0, 0, 1152, 1153, 2297, 1155, 0,
	1157, 1159, 1160, 1161, 0, 1164, 0, 2346, 0, 1169,
	1172, 1173, 0, 0, 1186, 1208, 0, 1217, 0, 1342,
	1352, 1346, 0, 1344, 1219, 0, 181, 208, 183, 210,
	205, 0, 1349, 0, 185, 195, 0, 0, 125, 0,
	0, 2409, 163, 161, 159, 101, 1353, 0, 0, 147,
	149, 127, 0, 230, 239, 1348, 241, 225, 215, 0,
	1375, 1379, 1387, 0, 1402, 1403, 1404, 1405, 0, 0,
	0, 0, 260, 0, 261, 264, 265, 0, 0, 1080,
	1135, 1079, 1194, 0, 1205, 1206, 0, 0, 0, 0,
	0, 0, 1082, 0, 1081, 0, 0, 0, 0, 0,
	466, 469, 0, 472, 0, 0, 0, 0, 0, 1328,
	1326, 0, 1334, 0, 0, 0, 1480, 0, 0, 1499,
	1500, 489, 1522, 0, 0, 1528, 1539, 312, 0, 315,
	291, 0, 685, 0, 687, 0, 988, 990, 0, 0,
	2034, 2126, 0, 0, 2059, 2060, -2, 0, 2000, 2110,
	2112, 0, 0, 0, 0, 0, 1668, 1677, 632, 1754,
	640, 1362, 0, 1369, 217, 1150, 1154, 0, 0, 0,
	1165, 1225, 0, 0, 1242, 1242, 1178, 0, 0, 1211,
	1212, 1132, 0, 1213, 1214, 1215, 1341, 1627, 1347, 1188,
	0, 0, 207, 212, 0, 0, 0, 0, 0, 0,
	146, 148, 0, 219, 242, 1349, 0, 1406, 1407, 0,
	0, 257, 276, 0, 1284, 1082, 0, 1113, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1114, 1219, 0,
	0, 1183, 1090, 0, 1093, 0, 1089, 1086, 1087, 1078,
	0, 470, 471, 486, 0, 487, 0, 1287, 0, 0,
	1335, 0, 0, 1487, 1479, 1506, 1501, 1502, 1751, 1525,
	1529, 0, 684, 0, 0, 998, 999, 0, 0, 0,
	0, 2121, 1619, 2001, 0, 0, 1652, 1654, 1655, 1656,
	1363, 189, 0, 0, 1163, 1230, 0, 0, 0, 0,
	0, 1179, 1209, 1210, 1207, 1131, 0, 1345, 1343, 0,
	1221, 187, 0, 1219, 0, 1141, 0, 0, 1144, 0,
	0, 164, 2409, 162, 0, 215, 1399, 215, 0, 279,
	0, 270, 268, 269, 1074, 0, 1199, 1201, 1217, 1219,
	1132, 0, 1094, 1136, 1092, 483, 1285, 1318, 1219, 0,
	1217, 0, 1494, 1506, 1488, 1489, 0, 1504, 0, 333,
	686, 688, 2118, 2138, 2127, -2, 2705, 2416, 0, 2138,
	2138, 2113, 2114, 0, 0, 1166, 1226, 1227, 0, 1222,
	1223, 1224, 2345, 1167, 1168, 1170, 1171, 1751, 0, 0,
	1225, 211, 193, 1138, 0, 0, 1139, 0, 0, 167,
	0, 169, 243, 1397, 0, 1400, 0, 266, 0, 0,
	1071, 1073, 1198, 0, 1132, 1217, 1080, 0, 0, 0,
	1080, 1082, 1217, 0, 1132, 0, 1483, 1493, 0, 1503,
	1480, 0, 314, 2123, 0, 0, 2129, 2130, 2131, 2132,
	2133, 2124, 2125, 1156, 0, 1228, 0, 1229, 0, 0,
	0, 1187, 1216, 0, 1230, 1142, 0, 1145, 0, 165,
	0, 0, 0, 274, 275, 1200, 1080, 1132, 1751, 0,
	1083, 0, 1085, 1082, 1091, 1132, 0, 1080, 0, 1476,
	1482, 1486, 2306, 1487, 1523, 0, 0, 2135, 2136, 0,
	0, 0, 1231, 0, 1234, 1235, 0, 1232, 0, 1207,
	0, 0, 1398, 215, 0, 1751, 1080, 1182, 1084, 1074,
	1080, 1219, 1751, 1217, 1494, 0, 2134, 2137, 2128, 1162,
	1233, 1236, 1237, 1218, 1189, 0, 0, 1401, 277, 0,
	1180, 1751, 1072, 1751, 1217, 1331, 1132, 1483, 1751, 1129,
	0, 0, 1181, 1329, 1132, 1080, 1477, 1524, 1143, 1128,
	0, 278, 1080, 1751, 0, 1751, 1332, 0, 1330, 1129,
	1146,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 591, 3, 597, 592, 3,
	602, 603, 595, 593, 607, 594, 604, 596, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 610, 3,
	583, 585, 584, 588, 606, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 600, 3, 601, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 608, 590, 609, 586,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 587, 57926, 589, 57927, 599, 57928, 605, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1630
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1894
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1918
		{
		}
	case 136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1919
		{
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1975
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[8].union.slct(),
				ToStoreID:         sqlDollar[6].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				ToStoreID:         sqlDollar[7].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2110
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2119
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2130
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2136
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2167
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2555
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2559
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2905
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "alter function")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3198
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3209
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = nil
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3322
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3567
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CREATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create access method")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create cast")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplemented(sqllex, "create publication")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplemented(sqllex, "create rule")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "create server")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3607
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3610
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3611
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3614
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3615
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplemented(sqllex, "drop server")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3797
		{

			sqlVAL.union.val = nil
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DELETE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3884
		{
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4208
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "DELETE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "INSERT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "INSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4289
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4322
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4412
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4427
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "GRANT")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4490
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4502
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "RESET")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "RESET")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4576
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "USE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			return unimplemented(sqllex, "set from current")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = tree.Low
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.Normal
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.High
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4992
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4994
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5030
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.str = "client_encoding"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.str = "timezone"
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5116
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5131
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5179
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5188
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = true
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5469
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5520
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5571
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5641
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = true
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = false
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5699
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5721
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5756
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5761
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5840
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5848
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5892
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5915
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5996
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6194
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6462
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6477
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{

			sqlVAL.union.val = nil
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.str = ""
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6521
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6544
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6548
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6574
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6587
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6601
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6602
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6603
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6701
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6944
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6989
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6999
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7006
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7102
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7220
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7382
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7391
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7491
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.str = ""
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{

			sqlVAL.union.val = true
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = false
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7574
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7588
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7600
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7612
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7622
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7632
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = nil
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7741
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7742
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7769
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7771
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7773
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7777
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7812
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7829
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7847
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7863
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7879
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = false
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = true
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = true
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = false
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7937
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7943
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7949
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.str = ""
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.str = ""
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8016
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8022
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8247
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8253
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8265
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8271
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8285
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8291
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8350
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = true
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = false
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.Types
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8439
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8443
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8598
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8608
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8673
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8766
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.str = ""
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{

		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8826
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.str = ""
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.str = ""
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.str = ""
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8881
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8894
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8955
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9031
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9073
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9126
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9141
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9322
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = false
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = nil
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9511
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = true
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = false
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = true
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9545
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9603
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9662
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9790
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9805
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9827
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9874
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9905
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9957
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10003
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10033
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10066
		{
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = nil
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = true
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = false
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.str = tree.AstFull
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.str = tree.AstRight
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.str = tree.AstInner
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10186
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.str = tree.AstHash
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.str = ""
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10290
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10300
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = true
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = false
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10362
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10370
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10389
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10399
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10419
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = types.Geography
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10530
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10538
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10572
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = nil
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.Int2
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = types.Int
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = types.Float4
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = types.Float
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10615
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10623
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10631
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = types.Bool
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = types.Float
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10664
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10692
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = types.String
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = true
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = false
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = types.Date
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10741
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10749
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10763
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10772
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10780
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10797
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = true
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = false
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = false
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = types.Interval
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10821
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = nil
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10950
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11010
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11159
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11346
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11476
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11580
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11585
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11611
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11635
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11665
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11676
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11677
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11701
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11767
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11968
		{
			return unimplemented(sqllex, "treat")
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.str = ""
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12143
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12240
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12316
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12656
		{
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12657
		{
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12737
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12769
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12773
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12810
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12826
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12835
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12863
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12880
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13099
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13112
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13119
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.str = ""
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
