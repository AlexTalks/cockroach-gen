// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const STREAM = lex.STREAM
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"STREAM",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12772

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1467,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	257, 376,
	-2, 0,
	-1, 73,
	239, 224,
	503, 224,
	-2, 0,
	-1, 84,
	227, 1215,
	241, 1215,
	257, 372,
	383, 372,
	393, 985,
	429, 372,
	441, 985,
	487, 985,
	514, 372,
	540, 985,
	-2, 0,
	-1, 90,
	132, 1467,
	234, 1467,
	525, 1467,
	526, 1467,
	-2, 0,
	-1, 106,
	150, 1438,
	169, 1438,
	182, 1438,
	237, 1438,
	270, 1438,
	335, 1438,
	345, 1438,
	520, 1438,
	-2, 1409,
	-1, 145,
	158, 847,
	256, 847,
	386, 814,
	446, 814,
	486, 814,
	506, 847,
	508, 814,
	-2, 0,
	-1, 147,
	4, 1469,
	21, 1469,
	22, 1469,
	23, 1469,
	24, 1469,
	25, 1469,
	26, 1469,
	27, 1469,
	28, 1469,
	30, 1469,
	31, 1469,
	37, 1469,
	42, 1469,
	43, 1469,
	45, 1469,
	46, 1469,
	47, 1469,
	48, 1469,
	49, 1469,
	50, 1469,
	51, 1469,
	52, 1469,
	54, 1469,
	55, 1469,
	56, 1469,
	57, 1469,
	59, 1469,
	60, 1469,
	61, 1469,
	62, 1469,
	63, 1469,
	64, 1469,
	65, 1469,
	69, 1469,
	70, 1469,
	71, 1469,
	72, 1469,
	74, 1469,
	75, 1469,
	76, 1469,
	80, 1469,
	81, 1469,
	82, 1469,
	83, 1469,
	84, 1469,
	85, 1469,
	86, 1469,
	89, 1469,
	90, 1469,
	91, 1469,
	92, 1469,
	93, 1469,
	95, 1469,
	97, 1469,
	98, 1469,
	99, 1469,
	100, 1469,
	101, 1469,
	102, 1469,
	104, 1469,
	105, 1469,
	106, 1469,
	108, 1469,
	109, 1469,
	110, 1469,
	118, 1469,
	119, 1469,
	120, 1469,
	121, 1469,
	123, 1469,
	124, 1469,
	125, 1469,
	127, 1469,
	128, 1469,
	129, 1469,
	131, 1469,
	132, 1469,
	133, 1469,
	135, 1469,
	136, 1469,
	137, 1469,
	140, 1469,
	141, 1469,
	142, 1469,
	144, 1469,
	145, 1469,
	147, 1469,
	148, 1469,
	149, 1469,
	151, 1469,
	152, 1469,
	153, 1469,
	154, 1469,
	155, 1469,
	156, 1469,
	157, 1469,
	158, 1469,
	159, 1469,
	160, 1469,
	161, 1469,
	162, 1469,
	163, 1469,
	164, 1469,
	165, 1469,
	166, 1469,
	168, 1469,
	174, 1469,
	175, 1469,
	176, 1469,
	177, 1469,
	181, 1469,
	183, 1469,
	187, 1469,
	188, 1469,
	189, 1469,
	190, 1469,
	191, 1469,
	192, 1469,
	193, 1469,
	194, 1469,
	195, 1469,
	196, 1469,
	197, 1469,
	198, 1469,
	199, 1469,
	201, 1469,
	202, 1469,
	204, 1469,
	205, 1469,
	207, 1469,
	208, 1469,
	209, 1469,
	210, 1469,
	211, 1469,
	212, 1469,
	213, 1469,
	214, 1469,
	215, 1469,
	217, 1469,
	218, 1469,
	220, 1469,
	221, 1469,
	222, 1469,
	223, 1469,
	227, 1469,
	228, 1469,
	229, 1469,
	230, 1469,
	231, 1469,
	234, 1469,
	235, 1469,
	236, 1469,
	238, 1469,
	240, 1469,
	241, 1469,
	243, 1469,
	245, 1469,
	246, 1469,
	247, 1469,
	249, 1469,
	253, 1469,
	254, 1469,
	255, 1469,
	256, 1469,
	257, 1469,
	258, 1469,
	260, 1469,
	261, 1469,
	262, 1469,
	264, 1469,
	265, 1469,
	267, 1469,
	268, 1469,
	271, 1469,
	275, 1469,
	276, 1469,
	277, 1469,
	280, 1469,
	281, 1469,
	282, 1469,
	283, 1469,
	285, 1469,
	286, 1469,
	287, 1469,
	288, 1469,
	289, 1469,
	290, 1469,
	291, 1469,
	292, 1469,
	293, 1469,
	294, 1469,
	295, 1469,
	296, 1469,
	297, 1469,
	298, 1469,
	299, 1469,
	300, 1469,
	301, 1469,
	302, 1469,
	303, 1469,
	304, 1469,
	305, 1469,
	306, 1469,
	308, 1469,
	310, 1469,
	311, 1469,
	312, 1469,
	313, 1469,
	314, 1469,
	315, 1469,
	316, 1469,
	317, 1469,
	318, 1469,
	319, 1469,
	320, 1469,
	321, 1469,
	323, 1469,
	325, 1469,
	327, 1469,
	328, 1469,
	330, 1469,
	331, 1469,
	332, 1469,
	333, 1469,
	334, 1469,
	337, 1469,
	340, 1469,
	341, 1469,
	342, 1469,
	343, 1469,
	346, 1469,
	347, 1469,
	348, 1469,
	350, 1469,
	352, 1469,
	353, 1469,
	354, 1469,
	355, 1469,
	356, 1469,
	357, 1469,
	358, 1469,
	359, 1469,
	360, 1469,
	361, 1469,
	362, 1469,
	363, 1469,
	365, 1469,
	366, 1469,
	367, 1469,
	368, 1469,
	369, 1469,
	370, 1469,
	371, 1469,
	372, 1469,
	373, 1469,
	374, 1469,
	375, 1469,
	376, 1469,
	377, 1469,
	378, 1469,
	379, 1469,
	381, 1469,
	382, 1469,
	384, 1469,
	385, 1469,
	386, 1469,
	387, 1469,
	388, 1469,
	389, 1469,
	390, 1469,
	391, 1469,
	392, 1469,
	393, 1469,
	394, 1469,
	395, 1469,
	397, 1469,
	399, 1469,
	400, 1469,
	401, 1469,
	406, 1469,
	408, 1469,
	409, 1469,
	410, 1469,
	411, 1469,
	412, 1469,
	413, 1469,
	414, 1469,
	415, 1469,
	416, 1469,
	418, 1469,
	419, 1469,
	420, 1469,
	422, 1469,
	423, 1469,
	424, 1469,
	425, 1469,
	426, 1469,
	427, 1469,
	429, 1469,
	430, 1469,
	431, 1469,
	432, 1469,
	433, 1469,
	434, 1469,
	435, 1469,
	436, 1469,
	437, 1469,
	438, 1469,
	439, 1469,
	441, 1469,
	442, 1469,
	443, 1469,
	444, 1469,
	445, 1469,
	446, 1469,
	448, 1469,
	449, 1469,
	450, 1469,
	451, 1469,
	452, 1469,
	453, 1469,
	455, 1469,
	456, 1469,
	457, 1469,
	458, 1469,
	459, 1469,
	460, 1469,
	461, 1469,
	463, 1469,
	465, 1469,
	466, 1469,
	467, 1469,
	468, 1469,
	469, 1469,
	470, 1469,
	471, 1469,
	472, 1469,
	473, 1469,
	474, 1469,
	475, 1469,
	476, 1469,
	477, 1469,
	478, 1469,
	479, 1469,
	480, 1469,
	482, 1469,
	483, 1469,
	485, 1469,
	486, 1469,
	488, 1469,
	489, 1469,
	490, 1469,
	491, 1469,
	492, 1469,
	493, 1469,
	494, 1469,
	495, 1469,
	496, 1469,
	498, 1469,
	499, 1469,
	500, 1469,
	501, 1469,
	502, 1469,
	504, 1469,
	506, 1469,
	507, 1469,
	508, 1469,
	509, 1469,
	510, 1469,
	511, 1469,
	513, 1469,
	514, 1469,
	515, 1469,
	516, 1469,
	518, 1469,
	519, 1469,
	522, 1469,
	523, 1469,
	524, 1469,
	525, 1469,
	526, 1469,
	527, 1469,
	528, 1469,
	530, 1469,
	533, 1469,
	534, 1469,
	535, 1469,
	536, 1469,
	537, 1469,
	538, 1469,
	540, 1469,
	541, 1469,
	542, 1469,
	543, 1469,
	549, 1469,
	550, 1469,
	551, 1469,
	552, 1469,
	553, 1469,
	554, 1469,
	-2, 0,
	-1, 148,
	1, 1324,
	130, 1324,
	245, 1324,
	324, 1324,
	381, 1324,
	390, 1324,
	558, 1324,
	582, 1324,
	-2, 0,
	-1, 150,
	1, 1324,
	582, 1324,
	-2, 0,
	-1, 151,
	1, 1324,
	582, 1324,
	-2, 0,
	-1, 152,
	1, 1324,
	503, 1324,
	582, 1324,
	-2, 0,
	-1, 181,
	150, 1437,
	169, 1437,
	182, 1437,
	237, 1437,
	270, 1437,
	335, 1437,
	345, 1437,
	520, 1437,
	-2, 1412,
	-1, 227,
	4, 1476,
	5, 1476,
	6, 1476,
	7, 1476,
	8, 1476,
	9, 1476,
	10, 1476,
	21, 1476,
	22, 1476,
	23, 1476,
	24, 1476,
	25, 1476,
	26, 1476,
	27, 1476,
	28, 1476,
	30, 1476,
	31, 1476,
	37, 1476,
	38, 1476,
	42, 1476,
	43, 1476,
	44, 1476,
	45, 1476,
	46, 1476,
	47, 1476,
	48, 1476,
	49, 1476,
	50, 1476,
	51, 1476,
	52, 1476,
	54, 1476,
	55, 1476,
	56, 1476,
	57, 1476,
	59, 1476,
	60, 1476,
	61, 1476,
	62, 1476,
	63, 1476,
	64, 1476,
	65, 1476,
	66, 1476,
	67, 1476,
	68, 1476,
	69, 1476,
	70, 1476,
	71, 1476,
	72, 1476,
	74, 1476,
	75, 1476,
	76, 1476,
	78, 1476,
	80, 1476,
	81, 1476,
	82, 1476,
	83, 1476,
	84, 1476,
	85, 1476,
	86, 1476,
	89, 1476,
	90, 1476,
	91, 1476,
	92, 1476,
	93, 1476,
	95, 1476,
	97, 1476,
	98, 1476,
	99, 1476,
	100, 1476,
	101, 1476,
	102, 1476,
	104, 1476,
	105, 1476,
	106, 1476,
	107, 1476,
	108, 1476,
	109, 1476,
	110, 1476,
	111, 1476,
	112, 1476,
	113, 1476,
	114, 1476,
	115, 1476,
	116, 1476,
	117, 1476,
	118, 1476,
	119, 1476,
	120, 1476,
	121, 1476,
	122, 1476,
	123, 1476,
	124, 1476,
	125, 1476,
	126, 1476,
	127, 1476,
	128, 1476,
	129, 1476,
	131, 1476,
	132, 1476,
	133, 1476,
	135, 1476,
	136, 1476,
	137, 1476,
	140, 1476,
	141, 1476,
	142, 1476,
	144, 1476,
	145, 1476,
	147, 1476,
	148, 1476,
	149, 1476,
	151, 1476,
	152, 1476,
	153, 1476,
	154, 1476,
	155, 1476,
	156, 1476,
	157, 1476,
	158, 1476,
	159, 1476,
	160, 1476,
	161, 1476,
	162, 1476,
	163, 1476,
	164, 1476,
	165, 1476,
	166, 1476,
	167, 1476,
	168, 1476,
	174, 1476,
	175, 1476,
	176, 1476,
	177, 1476,
	181, 1476,
	183, 1476,
	186, 1476,
	187, 1476,
	188, 1476,
	189, 1476,
	190, 1476,
	191, 1476,
	192, 1476,
	193, 1476,
	194, 1476,
	195, 1476,
	196, 1476,
	197, 1476,
	198, 1476,
	199, 1476,
	201, 1476,
	202, 1476,
	204, 1476,
	205, 1476,
	207, 1476,
	208, 1476,
	209, 1476,
	210, 1476,
	211, 1476,
	212, 1476,
	213, 1476,
	214, 1476,
	215, 1476,
	216, 1476,
	217, 1476,
	218, 1476,
	220, 1476,
	221, 1476,
	222, 1476,
	223, 1476,
	227, 1476,
	228, 1476,
	229, 1476,
	230, 1476,
	231, 1476,
	233, 1476,
	234, 1476,
	235, 1476,
	236, 1476,
	238, 1476,
	240, 1476,
	241, 1476,
	242, 1476,
	243, 1476,
	244, 1476,
	245, 1476,
	246, 1476,
	247, 1476,
	248, 1476,
	249, 1476,
	253, 1476,
	254, 1476,
	255, 1476,
	256, 1476,
	257, 1476,
	258, 1476,
	260, 1476,
	261, 1476,
	262, 1476,
	264, 1476,
	265, 1476,
	266, 1476,
	267, 1476,
	268, 1476,
	269, 1476,
	271, 1476,
	275, 1476,
	276, 1476,
	277, 1476,
	278, 1476,
	279, 1476,
	280, 1476,
	281, 1476,
	282, 1476,
	283, 1476,
	285, 1476,
	286, 1476,
	287, 1476,
	288, 1476,
	289, 1476,
	290, 1476,
	291, 1476,
	292, 1476,
	293, 1476,
	294, 1476,
	295, 1476,
	296, 1476,
	297, 1476,
	298, 1476,
	299, 1476,
	300, 1476,
	301, 1476,
	302, 1476,
	303, 1476,
	304, 1476,
	305, 1476,
	306, 1476,
	308, 1476,
	309, 1476,
	310, 1476,
	311, 1476,
	312, 1476,
	313, 1476,
	314, 1476,
	315, 1476,
	316, 1476,
	317, 1476,
	318, 1476,
	319, 1476,
	320, 1476,
	321, 1476,
	322, 1476,
	323, 1476,
	324, 1476,
	325, 1476,
	326, 1476,
	327, 1476,
	328, 1476,
	329, 1476,
	330, 1476,
	331, 1476,
	332, 1476,
	333, 1476,
	334, 1476,
	337, 1476,
	341, 1476,
	342, 1476,
	343, 1476,
	346, 1476,
	347, 1476,
	348, 1476,
	349, 1476,
	350, 1476,
	351, 1476,
	352, 1476,
	353, 1476,
	354, 1476,
	355, 1476,
	356, 1476,
	357, 1476,
	358, 1476,
	359, 1476,
	360, 1476,
	361, 1476,
	362, 1476,
	363, 1476,
	365, 1476,
	366, 1476,
	367, 1476,
	368, 1476,
	369, 1476,
	370, 1476,
	371, 1476,
	372, 1476,
	373, 1476,
	374, 1476,
	375, 1476,
	376, 1476,
	377, 1476,
	378, 1476,
	379, 1476,
	381, 1476,
	382, 1476,
	384, 1476,
	385, 1476,
	386, 1476,
	387, 1476,
	388, 1476,
	389, 1476,
	390, 1476,
	391, 1476,
	392, 1476,
	393, 1476,
	394, 1476,
	395, 1476,
	397, 1476,
	399, 1476,
	400, 1476,
	401, 1476,
	406, 1476,
	408, 1476,
	409, 1476,
	410, 1476,
	411, 1476,
	412, 1476,
	413, 1476,
	414, 1476,
	415, 1476,
	416, 1476,
	418, 1476,
	419, 1476,
	420, 1476,
	421, 1476,
	422, 1476,
	423, 1476,
	424, 1476,
	425, 1476,
	426, 1476,
	427, 1476,
	429, 1476,
	430, 1476,
	431, 1476,
	432, 1476,
	433, 1476,
	434, 1476,
	435, 1476,
	436, 1476,
	437, 1476,
	438, 1476,
	439, 1476,
	441, 1476,
	442, 1476,
	443, 1476,
	444, 1476,
	445, 1476,
	446, 1476,
	447, 1476,
	448, 1476,
	449, 1476,
	450, 1476,
	451, 1476,
	452, 1476,
	453, 1476,
	454, 1476,
	455, 1476,
	456, 1476,
	457, 1476,
	458, 1476,
	459, 1476,
	460, 1476,
	461, 1476,
	463, 1476,
	465, 1476,
	466, 1476,
	467, 1476,
	468, 1476,
	469, 1476,
	470, 1476,
	471, 1476,
	472, 1476,
	473, 1476,
	474, 1476,
	475, 1476,
	476, 1476,
	477, 1476,
	478, 1476,
	479, 1476,
	480, 1476,
	482, 1476,
	483, 1476,
	484, 1476,
	485, 1476,
	486, 1476,
	488, 1476,
	489, 1476,
	490, 1476,
	491, 1476,
	492, 1476,
	493, 1476,
	494, 1476,
	495, 1476,
	496, 1476,
	498, 1476,
	499, 1476,
	500, 1476,
	501, 1476,
	502, 1476,
	504, 1476,
	506, 1476,
	507, 1476,
	508, 1476,
	509, 1476,
	510, 1476,
	511, 1476,
	512, 1476,
	513, 1476,
	514, 1476,
	515, 1476,
	516, 1476,
	518, 1476,
	519, 1476,
	521, 1476,
	522, 1476,
	523, 1476,
	524, 1476,
	525, 1476,
	526, 1476,
	527, 1476,
	528, 1476,
	529, 1476,
	530, 1476,
	533, 1476,
	534, 1476,
	535, 1476,
	536, 1476,
	537, 1476,
	538, 1476,
	540, 1476,
	541, 1476,
	542, 1476,
	543, 1476,
	549, 1476,
	550, 1476,
	551, 1476,
	552, 1476,
	553, 1476,
	554, 1476,
	555, 1476,
	563, 1476,
	570, 1476,
	571, 1476,
	572, 1476,
	579, 1476,
	583, 1476,
	-2, 0,
	-1, 720,
	4, 1213,
	21, 1213,
	22, 1213,
	23, 1213,
	24, 1213,
	25, 1213,
	26, 1213,
	27, 1213,
	28, 1213,
	30, 1213,
	31, 1213,
	37, 1213,
	42, 1213,
	43, 1213,
	45, 1213,
	46, 1213,
	47, 1213,
	48, 1213,
	49, 1213,
	50, 1213,
	51, 1213,
	52, 1213,
	54, 1213,
	55, 1213,
	56, 1213,
	57, 1213,
	59, 1213,
	60, 1213,
	61, 1213,
	62, 1213,
	63, 1213,
	64, 1213,
	65, 1213,
	69, 1213,
	70, 1213,
	71, 1213,
	72, 1213,
	74, 1213,
	75, 1213,
	76, 1213,
	80, 1213,
	81, 1213,
	82, 1213,
	83, 1213,
	84, 1213,
	85, 1213,
	86, 1213,
	89, 1213,
	90, 1213,
	91, 1213,
	92, 1213,
	93, 1213,
	95, 1213,
	97, 1213,
	98, 1213,
	99, 1213,
	100, 1213,
	101, 1213,
	102, 1213,
	104, 1213,
	105, 1213,
	106, 1213,
	108, 1213,
	109, 1213,
	110, 1213,
	118, 1213,
	119, 1213,
	120, 1213,
	121, 1213,
	123, 1213,
	124, 1213,
	125, 1213,
	127, 1213,
	128, 1213,
	129, 1213,
	131, 1213,
	132, 1213,
	133, 1213,
	135, 1213,
	136, 1213,
	137, 1213,
	140, 1213,
	141, 1213,
	142, 1213,
	144, 1213,
	145, 1213,
	147, 1213,
	148, 1213,
	149, 1213,
	151, 1213,
	152, 1213,
	153, 1213,
	154, 1213,
	155, 1213,
	156, 1213,
	157, 1213,
	158, 1213,
	159, 1213,
	160, 1213,
	161, 1213,
	162, 1213,
	163, 1213,
	164, 1213,
	165, 1213,
	166, 1213,
	168, 1213,
	174, 1213,
	175, 1213,
	176, 1213,
	177, 1213,
	181, 1213,
	183, 1213,
	187, 1213,
	188, 1213,
	189, 1213,
	190, 1213,
	191, 1213,
	192, 1213,
	193, 1213,
	194, 1213,
	195, 1213,
	196, 1213,
	197, 1213,
	198, 1213,
	199, 1213,
	201, 1213,
	202, 1213,
	204, 1213,
	205, 1213,
	207, 1213,
	208, 1213,
	209, 1213,
	210, 1213,
	211, 1213,
	212, 1213,
	213, 1213,
	214, 1213,
	215, 1213,
	217, 1213,
	218, 1213,
	220, 1213,
	221, 1213,
	222, 1213,
	223, 1213,
	227, 1213,
	228, 1213,
	229, 1213,
	230, 1213,
	231, 1213,
	234, 1213,
	235, 1213,
	236, 1213,
	238, 1213,
	240, 1213,
	241, 1213,
	243, 1213,
	245, 1213,
	246, 1213,
	247, 1213,
	249, 1213,
	253, 1213,
	254, 1213,
	255, 1213,
	256, 1213,
	257, 1213,
	258, 1213,
	260, 1213,
	261, 1213,
	262, 1213,
	264, 1213,
	265, 1213,
	267, 1213,
	268, 1213,
	271, 1213,
	275, 1213,
	276, 1213,
	277, 1213,
	280, 1213,
	281, 1213,
	282, 1213,
	283, 1213,
	285, 1213,
	286, 1213,
	287, 1213,
	288, 1213,
	289, 1213,
	290, 1213,
	291, 1213,
	292, 1213,
	293, 1213,
	294, 1213,
	295, 1213,
	296, 1213,
	297, 1213,
	298, 1213,
	299, 1213,
	300, 1213,
	301, 1213,
	302, 1213,
	303, 1213,
	304, 1213,
	305, 1213,
	306, 1213,
	308, 1213,
	310, 1213,
	311, 1213,
	312, 1213,
	313, 1213,
	314, 1213,
	315, 1213,
	316, 1213,
	317, 1213,
	318, 1213,
	319, 1213,
	320, 1213,
	321, 1213,
	323, 1213,
	325, 1213,
	327, 1213,
	328, 1213,
	330, 1213,
	331, 1213,
	332, 1213,
	333, 1213,
	334, 1213,
	337, 1213,
	341, 1213,
	342, 1213,
	343, 1213,
	346, 1213,
	347, 1213,
	348, 1213,
	350, 1213,
	352, 1213,
	353, 1213,
	354, 1213,
	355, 1213,
	356, 1213,
	357, 1213,
	358, 1213,
	359, 1213,
	360, 1213,
	361, 1213,
	362, 1213,
	363, 1213,
	365, 1213,
	366, 1213,
	367, 1213,
	368, 1213,
	369, 1213,
	370, 1213,
	371, 1213,
	372, 1213,
	373, 1213,
	374, 1213,
	375, 1213,
	376, 1213,
	377, 1213,
	378, 1213,
	379, 1213,
	381, 1213,
	382, 1213,
	384, 1213,
	385, 1213,
	386, 1213,
	387, 1213,
	388, 1213,
	389, 1213,
	390, 1213,
	391, 1213,
	392, 1213,
	393, 1213,
	394, 1213,
	395, 1213,
	397, 1213,
	399, 1213,
	400, 1213,
	401, 1213,
	406, 1213,
	408, 1213,
	409, 1213,
	410, 1213,
	411, 1213,
	412, 1213,
	413, 1213,
	414, 1213,
	415, 1213,
	416, 1213,
	418, 1213,
	419, 1213,
	420, 1213,
	422, 1213,
	423, 1213,
	424, 1213,
	425, 1213,
	426, 1213,
	427, 1213,
	429, 1213,
	430, 1213,
	431, 1213,
	432, 1213,
	433, 1213,
	434, 1213,
	435, 1213,
	436, 1213,
	437, 1213,
	438, 1213,
	439, 1213,
	441, 1213,
	442, 1213,
	443, 1213,
	444, 1213,
	445, 1213,
	446, 1213,
	448, 1213,
	449, 1213,
	450, 1213,
	451, 1213,
	452, 1213,
	453, 1213,
	455, 1213,
	456, 1213,
	457, 1213,
	458, 1213,
	459, 1213,
	460, 1213,
	461, 1213,
	463, 1213,
	465, 1213,
	466, 1213,
	467, 1213,
	468, 1213,
	469, 1213,
	470, 1213,
	471, 1213,
	472, 1213,
	473, 1213,
	474, 1213,
	475, 1213,
	476, 1213,
	477, 1213,
	478, 1213,
	479, 1213,
	480, 1213,
	482, 1213,
	483, 1213,
	485, 1213,
	486, 1213,
	488, 1213,
	489, 1213,
	490, 1213,
	491, 1213,
	492, 1213,
	493, 1213,
	494, 1213,
	495, 1213,
	496, 1213,
	498, 1213,
	499, 1213,
	500, 1213,
	501, 1213,
	502, 1213,
	504, 1213,
	506, 1213,
	507, 1213,
	508, 1213,
	509, 1213,
	510, 1213,
	511, 1213,
	513, 1213,
	514, 1213,
	515, 1213,
	516, 1213,
	518, 1213,
	519, 1213,
	522, 1213,
	523, 1213,
	524, 1213,
	525, 1213,
	526, 1213,
	527, 1213,
	528, 1213,
	530, 1213,
	533, 1213,
	534, 1213,
	535, 1213,
	536, 1213,
	537, 1213,
	538, 1213,
	540, 1213,
	541, 1213,
	542, 1213,
	543, 1213,
	549, 1213,
	550, 1213,
	551, 1213,
	552, 1213,
	553, 1213,
	554, 1213,
	-2, 0,
	-1, 739,
	185, 2234,
	503, 2234,
	562, 2234,
	581, 2234,
	-2, 0,
	-1, 740,
	185, 2337,
	503, 2337,
	562, 2337,
	581, 2337,
	-2, 0,
	-1, 741,
	185, 2221,
	503, 2221,
	562, 2221,
	581, 2221,
	-2, 0,
	-1, 743,
	185, 2467,
	503, 2467,
	562, 2467,
	581, 2467,
	-2, 0,
	-1, 745,
	185, 2507,
	503, 2507,
	562, 2507,
	581, 2507,
	-2, 0,
	-1, 752,
	185, 2364,
	503, 2364,
	562, 2364,
	581, 2364,
	-2, 650,
	-1, 781,
	581, 2169,
	584, 2169,
	-2, 916,
	-1, 782,
	581, 2171,
	584, 2171,
	-2, 917,
	-1, 783,
	581, 2170,
	584, 2170,
	-2, 918,
	-1, 784,
	584, 2096,
	-2, 919,
	-1, 807,
	182, 238,
	-2, 0,
	-1, 830,
	44, 2143,
	-2, 0,
	-1, 831,
	540, 1191,
	-2, 986,
	-1, 847,
	4, 1605,
	21, 1605,
	22, 1605,
	23, 1605,
	24, 1605,
	25, 1605,
	26, 1605,
	27, 1605,
	28, 1605,
	30, 1605,
	31, 1605,
	37, 1605,
	42, 1605,
	43, 1605,
	45, 1605,
	46, 1605,
	47, 1605,
	48, 1605,
	49, 1605,
	50, 1605,
	51, 1605,
	52, 1605,
	54, 1605,
	55, 1605,
	56, 1605,
	57, 1605,
	59, 1605,
	60, 1605,
	61, 1605,
	62, 1605,
	63, 1605,
	64, 1605,
	65, 1605,
	69, 1605,
	70, 1605,
	71, 1605,
	72, 1605,
	74, 1605,
	75, 1605,
	76, 1605,
	80, 1605,
	81, 1605,
	82, 1605,
	83, 1605,
	84, 1605,
	85, 1605,
	86, 1605,
	89, 1605,
	90, 1605,
	91, 1605,
	92, 1605,
	93, 1605,
	95, 1605,
	97, 1605,
	98, 1605,
	99, 1605,
	100, 1605,
	101, 1605,
	102, 1605,
	104, 1605,
	105, 1605,
	106, 1605,
	108, 1605,
	109, 1605,
	110, 1605,
	118, 1605,
	119, 1605,
	120, 1605,
	121, 1605,
	123, 1605,
	124, 1605,
	125, 1605,
	127, 1605,
	128, 1605,
	129, 1605,
	131, 1605,
	132, 1605,
	133, 1605,
	135, 1605,
	136, 1605,
	137, 1605,
	140, 1605,
	141, 1605,
	142, 1605,
	144, 1605,
	145, 1605,
	147, 1605,
	148, 1605,
	149, 1605,
	151, 1605,
	152, 1605,
	153, 1605,
	154, 1605,
	155, 1605,
	156, 1605,
	157, 1605,
	158, 1605,
	159, 1605,
	160, 1605,
	161, 1605,
	162, 1605,
	163, 1605,
	164, 1605,
	165, 1605,
	166, 1605,
	168, 1605,
	174, 1605,
	175, 1605,
	176, 1605,
	177, 1605,
	181, 1605,
	183, 1605,
	187, 1605,
	188, 1605,
	189, 1605,
	190, 1605,
	191, 1605,
	192, 1605,
	193, 1605,
	194, 1605,
	195, 1605,
	196, 1605,
	197, 1605,
	198, 1605,
	199, 1605,
	201, 1605,
	202, 1605,
	204, 1605,
	205, 1605,
	207, 1605,
	208, 1605,
	209, 1605,
	210, 1605,
	211, 1605,
	212, 1605,
	213, 1605,
	214, 1605,
	215, 1605,
	217, 1605,
	218, 1605,
	220, 1605,
	221, 1605,
	222, 1605,
	223, 1605,
	227, 1605,
	228, 1605,
	229, 1605,
	230, 1605,
	231, 1605,
	234, 1605,
	235, 1605,
	236, 1605,
	238, 1605,
	240, 1605,
	241, 1605,
	243, 1605,
	245, 1605,
	246, 1605,
	247, 1605,
	249, 1605,
	253, 1605,
	254, 1605,
	255, 1605,
	256, 1605,
	257, 1605,
	258, 1605,
	260, 1605,
	261, 1605,
	262, 1605,
	264, 1605,
	265, 1605,
	267, 1605,
	268, 1605,
	271, 1605,
	275, 1605,
	276, 1605,
	277, 1605,
	280, 1605,
	281, 1605,
	282, 1605,
	283, 1605,
	285, 1605,
	286, 1605,
	287, 1605,
	288, 1605,
	289, 1605,
	290, 1605,
	291, 1605,
	292, 1605,
	293, 1605,
	294, 1605,
	295, 1605,
	296, 1605,
	297, 1605,
	298, 1605,
	299, 1605,
	300, 1605,
	301, 1605,
	302, 1605,
	303, 1605,
	304, 1605,
	305, 1605,
	306, 1605,
	308, 1605,
	310, 1605,
	311, 1605,
	312, 1605,
	313, 1605,
	314, 1605,
	315, 1605,
	316, 1605,
	317, 1605,
	318, 1605,
	319, 1605,
	320, 1605,
	321, 1605,
	323, 1605,
	325, 1605,
	327, 1605,
	328, 1605,
	330, 1605,
	331, 1605,
	332, 1605,
	333, 1605,
	334, 1605,
	337, 1605,
	341, 1605,
	342, 1605,
	343, 1605,
	346, 1605,
	347, 1605,
	348, 1605,
	350, 1605,
	352, 1605,
	353, 1605,
	354, 1605,
	355, 1605,
	356, 1605,
	357, 1605,
	358, 1605,
	359, 1605,
	360, 1605,
	361, 1605,
	362, 1605,
	363, 1605,
	365, 1605,
	366, 1605,
	367, 1605,
	368, 1605,
	369, 1605,
	370, 1605,
	371, 1605,
	372, 1605,
	373, 1605,
	374, 1605,
	375, 1605,
	376, 1605,
	377, 1605,
	378, 1605,
	379, 1605,
	381, 1605,
	382, 1605,
	384, 1605,
	385, 1605,
	386, 1605,
	387, 1605,
	388, 1605,
	389, 1605,
	390, 1605,
	391, 1605,
	392, 1605,
	393, 1605,
	394, 1605,
	395, 1605,
	397, 1605,
	399, 1605,
	400, 1605,
	401, 1605,
	406, 1605,
	408, 1605,
	409, 1605,
	410, 1605,
	411, 1605,
	412, 1605,
	413, 1605,
	414, 1605,
	415, 1605,
	416, 1605,
	418, 1605,
	419, 1605,
	420, 1605,
	422, 1605,
	423, 1605,
	424, 1605,
	425, 1605,
	426, 1605,
	427, 1605,
	429, 1605,
	430, 1605,
	431, 1605,
	432, 1605,
	433, 1605,
	434, 1605,
	435, 1605,
	436, 1605,
	437, 1605,
	438, 1605,
	439, 1605,
	441, 1605,
	442, 1605,
	443, 1605,
	444, 1605,
	445, 1605,
	446, 1605,
	448, 1605,
	449, 1605,
	450, 1605,
	451, 1605,
	452, 1605,
	453, 1605,
	455, 1605,
	456, 1605,
	457, 1605,
	458, 1605,
	459, 1605,
	460, 1605,
	461, 1605,
	463, 1605,
	465, 1605,
	466, 1605,
	467, 1605,
	468, 1605,
	469, 1605,
	470, 1605,
	471, 1605,
	472, 1605,
	473, 1605,
	474, 1605,
	475, 1605,
	476, 1605,
	477, 1605,
	478, 1605,
	479, 1605,
	480, 1605,
	482, 1605,
	483, 1605,
	485, 1605,
	486, 1605,
	488, 1605,
	489, 1605,
	490, 1605,
	491, 1605,
	492, 1605,
	493, 1605,
	494, 1605,
	495, 1605,
	496, 1605,
	498, 1605,
	499, 1605,
	500, 1605,
	501, 1605,
	502, 1605,
	504, 1605,
	506, 1605,
	507, 1605,
	508, 1605,
	509, 1605,
	510, 1605,
	511, 1605,
	513, 1605,
	514, 1605,
	515, 1605,
	516, 1605,
	518, 1605,
	519, 1605,
	522, 1605,
	523, 1605,
	524, 1605,
	525, 1605,
	526, 1605,
	527, 1605,
	528, 1605,
	530, 1605,
	533, 1605,
	534, 1605,
	535, 1605,
	536, 1605,
	537, 1605,
	538, 1605,
	540, 1605,
	541, 1605,
	542, 1605,
	543, 1605,
	549, 1605,
	550, 1605,
	551, 1605,
	552, 1605,
	553, 1605,
	554, 1605,
	-2, 0,
	-1, 855,
	257, 376,
	-2, 0,
	-1, 925,
	386, 815,
	446, 815,
	486, 815,
	508, 815,
	-2, 0,
	-1, 926,
	386, 814,
	446, 814,
	486, 814,
	508, 814,
	-2, 754,
	-1, 930,
	1, 861,
	578, 861,
	580, 861,
	582, 861,
	-2, 0,
	-1, 931,
	1, 789,
	578, 789,
	580, 789,
	582, 789,
	-2, 0,
	-1, 932,
	1, 793,
	578, 793,
	580, 793,
	582, 793,
	-2, 0,
	-1, 933,
	1, 915,
	182, 915,
	578, 915,
	580, 915,
	582, 915,
	-2, 0,
	-1, 941,
	1, 820,
	578, 820,
	580, 820,
	582, 820,
	-2, 0,
	-1, 947,
	1, 861,
	578, 861,
	580, 861,
	582, 861,
	-2, 0,
	-1, 948,
	1, 863,
	578, 863,
	580, 863,
	582, 863,
	-2, 0,
	-1, 949,
	1, 866,
	578, 866,
	580, 866,
	582, 866,
	-2, 0,
	-1, 955,
	1, 883,
	578, 883,
	580, 883,
	582, 883,
	-2, 0,
	-1, 956,
	1, 885,
	578, 885,
	580, 885,
	582, 885,
	-2, 0,
	-1, 961,
	1, 910,
	578, 910,
	580, 910,
	582, 910,
	-2, 0,
	-1, 1007,
	169, 1480,
	182, 1480,
	270, 1480,
	335, 1480,
	-2, 1416,
	-1, 1022,
	169, 1479,
	182, 1479,
	270, 1479,
	335, 1479,
	-2, 1413,
	-1, 1048,
	581, 2168,
	-2, 658,
	-1, 1076,
	5, 2160,
	579, 2158,
	-2, 2149,
	-1, 1084,
	5, 2181,
	579, 2178,
	-2, 2169,
	-1, 1085,
	5, 2182,
	579, 2179,
	-2, 2170,
	-1, 1093,
	581, 2166,
	-2, 2148,
	-1, 1094,
	579, 2589,
	-2, 2167,
	-1, 1117,
	579, 2588,
	-2, 2183,
	-1, 1118,
	5, 1680,
	-2, 2559,
	-1, 1119,
	5, 1681,
	-2, 2560,
	-1, 1120,
	5, 1682,
	-2, 2574,
	-1, 1121,
	5, 1683,
	-2, 2538,
	-1, 1122,
	5, 1684,
	-2, 2572,
	-1, 1123,
	5, 1692,
	-2, 2551,
	-1, 1124,
	5, 1679,
	-2, 2547,
	-1, 1125,
	5, 1679,
	-2, 2546,
	-1, 1126,
	5, 1679,
	-2, 2565,
	-1, 1127,
	5, 1690,
	-2, 2540,
	-1, 1128,
	5, 1695,
	-2, 2539,
	-1, 1129,
	5, 1697,
	-2, 2584,
	-1, 1132,
	5, 1719,
	-2, 2577,
	-1, 1133,
	5, 1711,
	-2, 2578,
	-1, 1134,
	5, 1719,
	-2, 2579,
	-1, 1135,
	5, 1715,
	-2, 2580,
	-1, 1136,
	5, 1665,
	-2, 2552,
	-1, 1137,
	5, 1666,
	-2, 2553,
	-1, 1138,
	5, 1667,
	-2, 2541,
	-1, 1166,
	5, 1702,
	-2, 2585,
	-1, 1167,
	5, 1703,
	-2, 2575,
	-1, 1168,
	5, 1704,
	541, 1704,
	-2, 2542,
	-1, 1169,
	5, 1705,
	541, 1705,
	-2, 2543,
	-1, 1206,
	579, 2178,
	-2, 2169,
	-1, 1207,
	579, 2179,
	-2, 2170,
	-1, 1306,
	185, 2507,
	503, 2507,
	562, 2507,
	581, 2507,
	-2, 0,
	-1, 1309,
	1, 636,
	582, 636,
	-2, 1332,
	-1, 1437,
	354, 2144,
	408, 2144,
	448, 2144,
	572, 2144,
	-2, 2134,
	-1, 1448,
	583, 2144,
	-2, 2145,
	-1, 1453,
	1, 1188,
	578, 1188,
	580, 1188,
	582, 1188,
	-2, 1465,
	-1, 1501,
	393, 985,
	540, 985,
	-2, 371,
	-1, 1517,
	44, 2142,
	-2, 951,
	-1, 1524,
	1, 1188,
	578, 1188,
	580, 1188,
	582, 1188,
	-2, 1465,
	-1, 1532,
	4, 1213,
	21, 1213,
	22, 1213,
	23, 1213,
	24, 1213,
	25, 1213,
	26, 1213,
	27, 1213,
	28, 1213,
	30, 1213,
	31, 1213,
	37, 1213,
	42, 1213,
	43, 1213,
	45, 1213,
	46, 1213,
	47, 1213,
	48, 1213,
	49, 1213,
	50, 1213,
	51, 1213,
	52, 1213,
	54, 1213,
	55, 1213,
	56, 1213,
	57, 1213,
	59, 1213,
	60, 1213,
	61, 1213,
	62, 1213,
	63, 1213,
	64, 1213,
	65, 1213,
	69, 1213,
	70, 1213,
	71, 1213,
	72, 1213,
	74, 1213,
	75, 1213,
	76, 1213,
	80, 1213,
	81, 1213,
	82, 1213,
	83, 1213,
	84, 1213,
	85, 1213,
	86, 1213,
	89, 1213,
	90, 1213,
	91, 1213,
	92, 1213,
	93, 1213,
	95, 1213,
	97, 1213,
	98, 1213,
	99, 1213,
	100, 1213,
	101, 1213,
	102, 1213,
	104, 1213,
	105, 1213,
	106, 1213,
	108, 1213,
	109, 1213,
	110, 1213,
	118, 1213,
	119, 1213,
	120, 1213,
	121, 1213,
	123, 1213,
	124, 1213,
	125, 1213,
	127, 1213,
	128, 1213,
	129, 1213,
	131, 1213,
	132, 1213,
	133, 1213,
	135, 1213,
	136, 1213,
	137, 1213,
	140, 1213,
	141, 1213,
	142, 1213,
	144, 1213,
	145, 1213,
	147, 1213,
	148, 1213,
	149, 1213,
	151, 1213,
	152, 1213,
	153, 1213,
	154, 1213,
	155, 1213,
	156, 1213,
	157, 1213,
	158, 1213,
	159, 1213,
	160, 1213,
	161, 1213,
	162, 1213,
	163, 1213,
	164, 1213,
	165, 1213,
	166, 1213,
	174, 1213,
	175, 1213,
	176, 1213,
	177, 1213,
	181, 1213,
	183, 1213,
	187, 1213,
	188, 1213,
	189, 1213,
	190, 1213,
	191, 1213,
	192, 1213,
	193, 1213,
	194, 1213,
	195, 1213,
	196, 1213,
	197, 1213,
	198, 1213,
	199, 1213,
	201, 1213,
	202, 1213,
	204, 1213,
	205, 1213,
	207, 1213,
	208, 1213,
	209, 1213,
	210, 1213,
	211, 1213,
	212, 1213,
	213, 1213,
	214, 1213,
	215, 1213,
	217, 1213,
	218, 1213,
	220, 1213,
	221, 1213,
	222, 1213,
	223, 1213,
	228, 1213,
	229, 1213,
	230, 1213,
	231, 1213,
	234, 1213,
	235, 1213,
	236, 1213,
	238, 1213,
	240, 1213,
	241, 1213,
	243, 1213,
	245, 1213,
	246, 1213,
	247, 1213,
	249, 1213,
	253, 1213,
	254, 1213,
	255, 1213,
	256, 1213,
	257, 1213,
	258, 1213,
	260, 1213,
	261, 1213,
	262, 1213,
	264, 1213,
	265, 1213,
	267, 1213,
	268, 1213,
	271, 1213,
	275, 1213,
	276, 1213,
	277, 1213,
	280, 1213,
	281, 1213,
	282, 1213,
	283, 1213,
	285, 1213,
	286, 1213,
	287, 1213,
	288, 1213,
	289, 1213,
	290, 1213,
	291, 1213,
	292, 1213,
	293, 1213,
	294, 1213,
	295, 1213,
	296, 1213,
	297, 1213,
	298, 1213,
	299, 1213,
	300, 1213,
	301, 1213,
	302, 1213,
	303, 1213,
	304, 1213,
	305, 1213,
	306, 1213,
	308, 1213,
	310, 1213,
	311, 1213,
	312, 1213,
	313, 1213,
	314, 1213,
	315, 1213,
	316, 1213,
	317, 1213,
	318, 1213,
	319, 1213,
	320, 1213,
	321, 1213,
	323, 1213,
	327, 1213,
	328, 1213,
	330, 1213,
	331, 1213,
	332, 1213,
	333, 1213,
	334, 1213,
	337, 1213,
	339, 1213,
	341, 1213,
	342, 1213,
	343, 1213,
	346, 1213,
	347, 1213,
	348, 1213,
	350, 1213,
	352, 1213,
	353, 1213,
	354, 1213,
	355, 1213,
	356, 1213,
	357, 1213,
	358, 1213,
	359, 1213,
	360, 1213,
	361, 1213,
	362, 1213,
	363, 1213,
	365, 1213,
	366, 1213,
	367, 1213,
	368, 1213,
	369, 1213,
	370, 1213,
	371, 1213,
	372, 1213,
	373, 1213,
	374, 1213,
	375, 1213,
	376, 1213,
	377, 1213,
	378, 1213,
	379, 1213,
	381, 1213,
	382, 1213,
	384, 1213,
	385, 1213,
	386, 1213,
	387, 1213,
	388, 1213,
	389, 1213,
	390, 1213,
	391, 1213,
	392, 1213,
	393, 1213,
	394, 1213,
	395, 1213,
	397, 1213,
	399, 1213,
	400, 1213,
	401, 1213,
	406, 1213,
	408, 1213,
	409, 1213,
	410, 1213,
	411, 1213,
	412, 1213,
	413, 1213,
	414, 1213,
	415, 1213,
	416, 1213,
	418, 1213,
	419, 1213,
	420, 1213,
	422, 1213,
	423, 1213,
	424, 1213,
	425, 1213,
	426, 1213,
	427, 1213,
	429, 1213,
	430, 1213,
	431, 1213,
	432, 1213,
	433, 1213,
	434, 1213,
	435, 1213,
	436, 1213,
	437, 1213,
	438, 1213,
	439, 1213,
	441, 1213,
	442, 1213,
	443, 1213,
	444, 1213,
	445, 1213,
	446, 1213,
	448, 1213,
	449, 1213,
	450, 1213,
	451, 1213,
	452, 1213,
	453, 1213,
	455, 1213,
	456, 1213,
	457, 1213,
	458, 1213,
	459, 1213,
	460, 1213,
	461, 1213,
	463, 1213,
	465, 1213,
	466, 1213,
	467, 1213,
	468, 1213,
	469, 1213,
	470, 1213,
	471, 1213,
	472, 1213,
	473, 1213,
	474, 1213,
	475, 1213,
	476, 1213,
	477, 1213,
	478, 1213,
	479, 1213,
	480, 1213,
	482, 1213,
	483, 1213,
	485, 1213,
	486, 1213,
	488, 1213,
	489, 1213,
	490, 1213,
	491, 1213,
	492, 1213,
	493, 1213,
	494, 1213,
	495, 1213,
	496, 1213,
	498, 1213,
	499, 1213,
	500, 1213,
	501, 1213,
	502, 1213,
	504, 1213,
	506, 1213,
	507, 1213,
	508, 1213,
	509, 1213,
	510, 1213,
	511, 1213,
	513, 1213,
	514, 1213,
	515, 1213,
	516, 1213,
	518, 1213,
	519, 1213,
	522, 1213,
	523, 1213,
	524, 1213,
	525, 1213,
	526, 1213,
	527, 1213,
	528, 1213,
	530, 1213,
	533, 1213,
	534, 1213,
	535, 1213,
	536, 1213,
	537, 1213,
	538, 1213,
	540, 1213,
	541, 1213,
	542, 1213,
	543, 1213,
	549, 1213,
	550, 1213,
	551, 1213,
	552, 1213,
	553, 1213,
	554, 1213,
	-2, 0,
	-1, 1555,
	1, 509,
	578, 509,
	580, 509,
	582, 509,
	-2, 1436,
	-1, 1558,
	4, 2583,
	11, 2583,
	12, 2583,
	14, 2583,
	15, 2583,
	16, 2583,
	17, 2583,
	18, 2583,
	19, 2583,
	21, 2583,
	22, 2583,
	23, 2583,
	24, 2583,
	25, 2583,
	26, 2583,
	27, 2583,
	28, 2583,
	30, 2583,
	31, 2583,
	34, 2583,
	35, 2583,
	37, 2583,
	39, 2583,
	42, 2583,
	43, 2583,
	45, 2583,
	46, 2583,
	47, 2583,
	48, 2583,
	49, 2583,
	50, 2583,
	51, 2583,
	52, 2583,
	54, 2583,
	55, 2583,
	56, 2583,
	57, 2583,
	59, 2583,
	60, 2583,
	61, 2583,
	62, 2583,
	63, 2583,
	64, 2583,
	65, 2583,
	69, 2583,
	70, 2583,
	71, 2583,
	72, 2583,
	74, 2583,
	75, 2583,
	76, 2583,
	77, 2583,
	80, 2583,
	81, 2583,
	82, 2583,
	83, 2583,
	84, 2583,
	85, 2583,
	86, 2583,
	87, 2583,
	89, 2583,
	90, 2583,
	91, 2583,
	92, 2583,
	93, 2583,
	95, 2583,
	96, 2583,
	97, 2583,
	98, 2583,
	99, 2583,
	100, 2583,
	101, 2583,
	102, 2583,
	104, 2583,
	105, 2583,
	106, 2583,
	107, 2583,
	108, 2583,
	109, 2583,
	110, 2583,
	118, 2583,
	119, 2583,
	120, 2583,
	121, 2583,
	123, 2583,
	124, 2583,
	125, 2583,
	127, 2583,
	128, 2583,
	129, 2583,
	131, 2583,
	132, 2583,
	133, 2583,
	135, 2583,
	136, 2583,
	137, 2583,
	140, 2583,
	141, 2583,
	142, 2583,
	144, 2583,
	145, 2583,
	147, 2583,
	148, 2583,
	149, 2583,
	151, 2583,
	152, 2583,
	153, 2583,
	154, 2583,
	155, 2583,
	156, 2583,
	157, 2583,
	158, 2583,
	159, 2583,
	160, 2583,
	161, 2583,
	162, 2583,
	163, 2583,
	164, 2583,
	165, 2583,
	166, 2583,
	170, 2583,
	171, 2583,
	172, 2583,
	173, 2583,
	174, 2583,
	175, 2583,
	176, 2583,
	177, 2583,
	180, 2583,
	181, 2583,
	183, 2583,
	186, 2583,
	187, 2583,
	188, 2583,
	189, 2583,
	190, 2583,
	191, 2583,
	192, 2583,
	193, 2583,
	194, 2583,
	195, 2583,
	196, 2583,
	197, 2583,
	198, 2583,
	199, 2583,
	201, 2583,
	202, 2583,
	204, 2583,
	205, 2583,
	207, 2583,
	208, 2583,
	209, 2583,
	210, 2583,
	211, 2583,
	212, 2583,
	213, 2583,
	214, 2583,
	215, 2583,
	216, 2583,
	217, 2583,
	218, 2583,
	219, 2583,
	220, 2583,
	221, 2583,
	222, 2583,
	223, 2583,
	225, 2583,
	226, 2583,
	228, 2583,
	229, 2583,
	230, 2583,
	231, 2583,
	233, 2583,
	234, 2583,
	235, 2583,
	236, 2583,
	238, 2583,
	240, 2583,
	241, 2583,
	242, 2583,
	243, 2583,
	244, 2583,
	245, 2583,
	246, 2583,
	247, 2583,
	248, 2583,
	249, 2583,
	251, 2583,
	252, 2583,
	253, 2583,
	254, 2583,
	255, 2583,
	256, 2583,
	257, 2583,
	258, 2583,
	260, 2583,
	261, 2583,
	262, 2583,
	264, 2583,
	265, 2583,
	266, 2583,
	267, 2583,
	268, 2583,
	269, 2583,
	271, 2583,
	275, 2583,
	276, 2583,
	277, 2583,
	280, 2583,
	281, 2583,
	282, 2583,
	283, 2583,
	284, 2583,
	285, 2583,
	286, 2583,
	287, 2583,
	288, 2583,
	289, 2583,
	290, 2583,
	291, 2583,
	292, 2583,
	293, 2583,
	294, 2583,
	295, 2583,
	296, 2583,
	297, 2583,
	298, 2583,
	299, 2583,
	300, 2583,
	301, 2583,
	302, 2583,
	303, 2583,
	304, 2583,
	305, 2583,
	306, 2583,
	308, 2583,
	309, 2583,
	310, 2583,
	311, 2583,
	312, 2583,
	313, 2583,
	314, 2583,
	315, 2583,
	316, 2583,
	317, 2583,
	318, 2583,
	319, 2583,
	320, 2583,
	321, 2583,
	323, 2583,
	326, 2583,
	327, 2583,
	328, 2583,
	330, 2583,
	331, 2583,
	332, 2583,
	333, 2583,
	334, 2583,
	337, 2583,
	341, 2583,
	342, 2583,
	343, 2583,
	344, 2583,
	346, 2583,
	347, 2583,
	348, 2583,
	350, 2583,
	352, 2583,
	353, 2583,
	354, 2583,
	355, 2583,
	356, 2583,
	357, 2583,
	358, 2583,
	359, 2583,
	360, 2583,
	361, 2583,
	362, 2583,
	363, 2583,
	365, 2583,
	366, 2583,
	367, 2583,
	368, 2583,
	369, 2583,
	370, 2583,
	371, 2583,
	372, 2583,
	373, 2583,
	374, 2583,
	375, 2583,
	376, 2583,
	377, 2583,
	378, 2583,
	379, 2583,
	381, 2583,
	382, 2583,
	384, 2583,
	385, 2583,
	386, 2583,
	387, 2583,
	388, 2583,
	389, 2583,
	390, 2583,
	391, 2583,
	392, 2583,
	393, 2583,
	394, 2583,
	395, 2583,
	397, 2583,
	399, 2583,
	400, 2583,
	401, 2583,
	406, 2583,
	407, 2583,
	408, 2583,
	409, 2583,
	410, 2583,
	411, 2583,
	412, 2583,
	413, 2583,
	414, 2583,
	415, 2583,
	416, 2583,
	418, 2583,
	419, 2583,
	420, 2583,
	421, 2583,
	422, 2583,
	423, 2583,
	424, 2583,
	425, 2583,
	426, 2583,
	427, 2583,
	428, 2583,
	429, 2583,
	430, 2583,
	431, 2583,
	432, 2583,
	433, 2583,
	434, 2583,
	435, 2583,
	436, 2583,
	437, 2583,
	438, 2583,
	439, 2583,
	441, 2583,
	442, 2583,
	443, 2583,
	444, 2583,
	445, 2583,
	446, 2583,
	448, 2583,
	449, 2583,
	450, 2583,
	451, 2583,
	452, 2583,
	453, 2583,
	454, 2583,
	455, 2583,
	456, 2583,
	457, 2583,
	458, 2583,
	459, 2583,
	460, 2583,
	461, 2583,
	463, 2583,
	465, 2583,
	466, 2583,
	467, 2583,
	468, 2583,
	469, 2583,
	470, 2583,
	471, 2583,
	472, 2583,
	473, 2583,
	474, 2583,
	475, 2583,
	476, 2583,
	477, 2583,
	478, 2583,
	479, 2583,
	480, 2583,
	482, 2583,
	483, 2583,
	485, 2583,
	486, 2583,
	488, 2583,
	489, 2583,
	490, 2583,
	491, 2583,
	492, 2583,
	493, 2583,
	494, 2583,
	495, 2583,
	496, 2583,
	498, 2583,
	499, 2583,
	500, 2583,
	501, 2583,
	502, 2583,
	504, 2583,
	506, 2583,
	507, 2583,
	508, 2583,
	509, 2583,
	510, 2583,
	511, 2583,
	513, 2583,
	514, 2583,
	515, 2583,
	516, 2583,
	518, 2583,
	519, 2583,
	522, 2583,
	523, 2583,
	524, 2583,
	525, 2583,
	526, 2583,
	527, 2583,
	528, 2583,
	530, 2583,
	533, 2583,
	534, 2583,
	535, 2583,
	536, 2583,
	537, 2583,
	538, 2583,
	540, 2583,
	541, 2583,
	542, 2583,
	543, 2583,
	549, 2583,
	550, 2583,
	551, 2583,
	552, 2583,
	553, 2583,
	554, 2583,
	555, 2583,
	557, 2583,
	560, 2583,
	561, 2583,
	562, 2583,
	563, 2583,
	564, 2583,
	565, 2583,
	567, 2583,
	568, 2583,
	569, 2583,
	570, 2583,
	571, 2583,
	572, 2583,
	573, 2583,
	574, 2583,
	575, 2583,
	577, 2583,
	580, 2583,
	581, 2583,
	583, 2583,
	584, 2583,
	-2, 0,
	-1, 1563,
	185, 2467,
	503, 2467,
	562, 2467,
	581, 2467,
	-2, 0,
	-1, 1612,
	386, 815,
	446, 815,
	486, 815,
	508, 815,
	-2, 0,
	-1, 1639,
	1, 810,
	578, 810,
	580, 810,
	582, 810,
	-2, 0,
	-1, 1640,
	1, 848,
	578, 848,
	580, 848,
	582, 848,
	-2, 0,
	-1, 1641,
	1, 856,
	578, 856,
	580, 856,
	582, 856,
	-2, 0,
	-1, 1644,
	1, 819,
	578, 819,
	580, 819,
	582, 819,
	-2, 0,
	-1, 1646,
	1, 823,
	578, 823,
	580, 823,
	582, 823,
	-2, 0,
	-1, 1652,
	1, 830,
	578, 830,
	580, 830,
	582, 830,
	-2, 0,
	-1, 1680,
	1, 2529,
	578, 2529,
	580, 2529,
	581, 2529,
	582, 2529,
	-2, 881,
	-1, 1681,
	1, 2464,
	578, 2464,
	580, 2464,
	581, 2464,
	582, 2464,
	-2, 882,
	-1, 1699,
	1, 1327,
	582, 1327,
	-2, 1332,
	-1, 1702,
	169, 1479,
	182, 1479,
	270, 1479,
	335, 1479,
	-2, 1417,
	-1, 1796,
	150, 1438,
	169, 1438,
	182, 1438,
	237, 1438,
	270, 1438,
	335, 1438,
	345, 1438,
	520, 1438,
	-2, 1880,
	-1, 1856,
	580, 2030,
	-2, 0,
	-1, 1891,
	150, 1438,
	169, 1438,
	182, 1438,
	237, 1438,
	270, 1438,
	335, 1438,
	345, 1438,
	520, 1438,
	-2, 1566,
	-1, 1940,
	579, 1707,
	-2, 1695,
	-1, 2018,
	1, 638,
	582, 638,
	-2, 1332,
	-1, 2143,
	219, 239,
	-2, 2177,
	-1, 2144,
	219, 240,
	-2, 284,
	-1, 2247,
	1, 812,
	578, 812,
	580, 812,
	582, 812,
	-2, 0,
	-1, 2248,
	1, 850,
	578, 850,
	580, 850,
	582, 850,
	-2, 0,
	-1, 2249,
	1, 858,
	578, 858,
	580, 858,
	582, 858,
	-2, 0,
	-1, 2283,
	1, 832,
	578, 832,
	580, 832,
	582, 832,
	-2, 0,
	-1, 2335,
	426, 1506,
	427, 1506,
	-2, 1740,
	-1, 2366,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1760,
	-1, 2367,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1761,
	-1, 2368,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1762,
	-1, 2369,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1763,
	-1, 2370,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1764,
	-1, 2371,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1765,
	-1, 2372,
	96, 0,
	251, 0,
	252, 0,
	564, 0,
	565, 0,
	-2, 1766,
	-1, 2373,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1767,
	-1, 2385,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1779,
	-1, 2386,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1780,
	-1, 2387,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1781,
	-1, 2390,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1786,
	-1, 2396,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1790,
	-1, 2398,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1798,
	-1, 2399,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1799,
	-1, 2400,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1800,
	-1, 2401,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1801,
	-1, 2537,
	5, 2181,
	185, 2041,
	579, 2178,
	-2, 2169,
	-1, 2538,
	185, 2042,
	-2, 2534,
	-1, 2539,
	185, 2043,
	-2, 2363,
	-1, 2540,
	185, 2044,
	-2, 2251,
	-1, 2541,
	185, 2045,
	-2, 2304,
	-1, 2542,
	185, 2046,
	-2, 2348,
	-1, 2543,
	185, 2047,
	-2, 2462,
	-1, 2544,
	185, 2048,
	-2, 1863,
	-1, 2614,
	1, 1567,
	2, 1567,
	107, 1567,
	150, 1567,
	169, 1567,
	182, 1567,
	186, 1567,
	203, 1567,
	206, 1567,
	233, 1567,
	237, 1567,
	248, 1567,
	266, 1567,
	270, 1567,
	309, 1567,
	335, 1567,
	339, 1567,
	345, 1567,
	417, 1567,
	421, 1567,
	520, 1567,
	531, 1567,
	546, 1567,
	547, 1567,
	548, 1567,
	558, 1567,
	578, 1567,
	580, 1567,
	582, 1567,
	584, 1567,
	-2, 1566,
	-1, 2627,
	579, 2150,
	-2, 2164,
	-1, 2629,
	1, 300,
	546, 300,
	-2, 1465,
	-1, 2654,
	579, 1706,
	-2, 1696,
	-1, 2830,
	1, 1188,
	578, 1188,
	580, 1188,
	582, 1188,
	-2, 1465,
	-1, 2997,
	340, 1509,
	-2, 2573,
	-1, 2998,
	340, 1510,
	-2, 2448,
	-1, 3002,
	426, 2107,
	427, 2107,
	-2, 1861,
	-1, 3003,
	426, 2111,
	427, 2111,
	-2, 1862,
	-1, 3004,
	426, 2108,
	427, 2108,
	-2, 1861,
	-1, 3005,
	426, 2112,
	427, 2112,
	-2, 1862,
	-1, 3018,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1788,
	-1, 3019,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1792,
	-1, 3025,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1794,
	-1, 3265,
	1, 635,
	578, 635,
	580, 635,
	582, 635,
	-2, 1332,
	-1, 3418,
	44, 2142,
	-2, 952,
	-1, 3423,
	1, 1188,
	578, 1188,
	580, 1188,
	582, 1188,
	-2, 1465,
	-1, 3528,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1796,
	-1, 3535,
	242, 0,
	244, 0,
	326, 0,
	-2, 1815,
	-1, 3602,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1844,
	-1, 3603,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1845,
	-1, 3604,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1846,
	-1, 3608,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1850,
	-1, 3609,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1851,
	-1, 3610,
	14, 0,
	15, 0,
	16, 0,
	560, 0,
	561, 0,
	562, 0,
	-2, 1852,
	-1, 3656,
	579, 2151,
	-2, 2165,
	-1, 3820,
	581, 2691,
	-2, 1391,
	-1, 3878,
	242, 0,
	244, 0,
	326, 0,
	-2, 1816,
	-1, 3881,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1819,
	-1, 3882,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1821,
	-1, 3979,
	581, 2166,
	-2, 1223,
	-1, 4114,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1820,
	-1, 4115,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	216, 0,
	219, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 1822,
	-1, 4126,
	242, 0,
	-2, 1853,
	-1, 4294,
	242, 0,
	-2, 1854,
	-1, 4479,
	51, 0,
	216, 0,
	269, 0,
	454, 0,
	555, 0,
	563, 0,
	-2, 2537,
}

const sqlPrivate = 57344

const sqlLast = 121722

var sqlAct = [...]int{
	263, 4661, 3408, 4219, 4326, 4575, 3176, 4531, 2894, 4472,
	3407, 4356, 2907, 4334, 4478, 4460, 4471, 4602, 4374, 2066,
	4489, 3975, 4172, 4352, 4448, 2140, 4432, 4412, 4490, 1199,
	1465, 4158, 3861, 4429, 4491, 2780, 4247, 4226, 3567, 4544,
	4071, 1210, 4298, 4066, 4037, 4018, 4177, 4135, 3520, 4477,
	1278, 4103, 2345, 3812, 4235, 3804, 3011, 4051, 3751, 3976,
	1271, 1927, 3291, 1076, 4261, 1282, 3440, 3960, 2569, 1711,
	4076, 1032, 3403, 3771, 783, 2413, 2761, 3773, 3787, 3276,
	2353, 3294, 3434, 4131, 2346, 2000, 2792, 3393, 1342, 2929,
	2074, 2223, 3479, 2916, 1897, 2883, 3481, 2854, 783, 750,
	2864, 2918, 3659, 3219, 1434, 3860, 3199, 3191, 1620, 1031,
	172, 2909, 3159, 2214, 3182, 2895, 3917, 3349, 2926, 2878,
	2880, 2135, 857, 2606, 2085, 3180, 4576, 1579, 1023, 2915,
	1866, 4, 3313, 2134, 1842, 2721, 2607, 3627, 4299, 2455,
	3158, 2350, 2426, 1441, 1804, 3288, 1519, 2925, 778, 2130,
	2807, 2457, 2111, 1276, 1325, 1080, 2118, 2609, 2760, 2865,
	2054, 2995, 2587, 1083, 1190, 2058, 1699, 1998, 2221, 1867,
	1250, 2446, 2410, 2317, 2044, 2566, 2334, 2315, 257, 3226,
	1273, 2639, 3405, 256, 1577, 1085, 1556, 1087, 1886, 2175,
	1082, 1522, 2888, 1261, 2919, 1311, 2449, 2703, 681, 2638,
	172, 1059, 784, 785, 1837, 1130, 1876, 667, 1193, 2596,
	2577, 689, 1078, 1172, 2427, 2533, 1789, 1883, 2499, 1928,
	1713, 780, 850, 1264, 105, 1712, 1652, 2316, 1639, 744,
	1207, 181, 1189, 732, 2200, 1554, 182, 1547, 2318, 1460,
	2073, 4532, 2174, 4375, 2339, 2187, 1061, 1976, 1973, 684,
	44, 255, 789, 692, 43, 41, 32, 792, 30, 28,
	1698, 1170, 1718, 919, 1195, 3046, 1471, 939, 3641, 3042,
	3642, 1989, 707, 1464, 1989, 831, 789, 1987, 1989, 4674,
	1989, 792, 3178, 2586, 1989, 1586, 1989, 4664, 4649, 153,
	4648, 3459, 2586, 1205, 2586, 4638, 1027, 1975, 72, 2149,
	46, 45, 1645, 4620, 4618, 4563, 4520, 4176, 4176, 2149,
	4521, 3450, 4513, 4511, 1320, 73, 2586, 2586, 148, 872,
	3449, 1572, 4508, 4505, 4475, 4474, 4509, 4506, 2149, 2149,
	4473, 77, 4468, 4467, 2010, 4458, 2010, 2010, 3249, 4176,
	2222, 4456, 67, 3248, 1187, 4176, 4427, 1485, 4399, 48,
	4176, 150, 2645, 4392, 1027, 2579, 4391, 2586, 3131, 3132,
	2586, 3149, 3150, 3151, 4386, 1228, 4385, 3459, 4176, 47,
	4176, 84, 4379, 4348, 4296, 1320, 2149, 4029, 2645, 1173,
	1173, 3876, 4278, 4275, 4272, 4228, 3847, 2149, 4176, 4229,
	4192, 4191, 2149, 1202, 2149, 2149, 50, 68, 4183, 4182,
	3234, 3631, 2149, 4176, 1008, 51, 3010, 4175, 1028, 1007,
	57, 4176, 4142, 2586, 151, 4116, 2149, 3131, 3132, 2645,
	1201, 4095, 49, 4084, 104, 2010, 90, 3459, 4013, 90,
	101, 1203, 2586, 3998, 3146, 3880, 3828, 2586, 3822, 2645,
	3476, 3785, 3476, 3651, 1017, 3786, 3649, 3652, 1022, 3634,
	3650, 4400, 2664, 2586, 3551, 2719, 1726, 1727, 2149, 1759,
	1760, 1761, 1769, 1770, 1771, 1473, 3547, 3475, 52, 3466,
	2586, 3476, 3175, 3467, 3170, 2452, 2586, 3055, 2586, 1762,
	1757, 2007, 1473, 3056, 1174, 2641, 91, 1729, 3169, 1726,
	1727, 3122, 2586, 3096, 3088, 3123, 1775, 3097, 3089, 3086,
	3057, 1473, 2933, 2586, 2586, 2905, 2010, 2904, 2687, 2210,
	2644, 2210, 2586, 1757, 2645, 2636, 1176, 1221, 1177, 2586,
	1729, 2149, 1728, 4300, 2630, 2585, 2209, 3137, 2149, 2586,
	2210, 4291, 1748, 2663, 4279, 2586, 2010, 3631, 2578, 4064,
	4029, 1745, 1726, 1727, 3999, 3847, 3467, 2783, 2702, 2023,
	1988, 2004, 2007, 2860, 2148, 1728, 2802, 1484, 2700, 227,
	1862, 1459, 2453, 2078, 3736, 1748, 1757, 3523, 3499, 1884,
	2123, 1622, 3451, 1729, 2623, 2622, 2621, 2620, 2619, 1178,
	1175, 1016, 1015, 1014, 1013, 1012, 3137, 1011, 1010, 3152,
	1006, 3452, 3933, 3045, 1005, 227, 1726, 1727, 1222, 1004,
	1003, 1002, 1001, 1000, 2972, 3892, 229, 999, 1728, 998,
	997, 996, 995, 1726, 1727, 1751, 1752, 1753, 1754, 994,
	993, 1990, 992, 991, 1990, 1734, 990, 1729, 1990, 94,
	1990, 3147, 1479, 917, 1990, 916, 1990, 1757, 915, 914,
	913, 912, 229, 2454, 1729, 2451, 53, 911, 1751, 1752,
	1753, 1754, 910, 909, 908, 228, 907, 906, 1734, 905,
	56, 1766, 1728, 904, 1776, 59, 903, 221, 902, 901,
	1756, 1758, 900, 899, 69, 898, 222, 897, 896, 1728,
	58, 180, 97, 895, 100, 894, 893, 1772, 54, 1773,
	3147, 228, 152, 892, 891, 890, 1743, 1744, 183, 55,
	889, 4496, 888, 1756, 1758, 227, 887, 886, 227, 885,
	3449, 1734, 875, 874, 1764, 870, 62, 869, 145, 863,
	862, 145, 849, 227, 848, 1287, 1085, 806, 805, 1749,
	804, 803, 795, 794, 183, 149, 793, 1222, 765, 756,
	227, 755, 2007, 754, 738, 251, 250, 249, 248, 1085,
	1472, 247, 229, 1085, 2578, 229, 1756, 1758, 246, 227,
	245, 244, 1749, 243, 1222, 1734, 242, 241, 240, 1345,
	229, 1774, 239, 1345, 238, 3148, 237, 1287, 236, 235,
	234, 147, 1734, 233, 232, 227, 231, 229, 3672, 1763,
	2674, 2456, 230, 1988, 4078, 3645, 184, 2007, 1085, 2004,
	1085, 228, 1085, 2663, 228, 2310, 229, 3477, 1287, 3222,
	3068, 3051, 2955, 221, 1464, 1749, 221, 2841, 3173, 228,
	1324, 2873, 222, 2649, 1329, 222, 2628, 1756, 1758, 3131,
	3132, 221, 229, 1287, 3148, 1449, 228, 1315, 2613, 2891,
	222, 1887, 1478, 2482, 183, 1647, 2468, 183, 221, 2466,
	3, 2052, 1755, 1287, 1845, 228, 3174, 222, 1287, 1444,
	2217, 1844, 183, 1845, 1725, 4476, 1085, 221, 1085, 2009,
	1844, 1910, 1287, 1750, 1815, 1467, 222, 1331, 1085, 183,
	1085, 228, 1463, 1848, 1806, 1755, 1749, 1209, 4455, 1255,
	1258, 4363, 1843, 221, 4288, 1528, 1531, 4303, 183, 1767,
	4282, 4170, 222, 4130, 1268, 2450, 1750, 3143, 3144, 3145,
	4280, 4085, 1309, 4063, 3142, 3140, 3141, 3133, 3134, 3135,
	3136, 3138, 3139, 3942, 183, 1287, 1726, 1727, 3915, 1451,
	1473, 2658, 1338, 3914, 1431, 1436, 3908, 3907, 3906, 3899,
	3898, 3896, 2216, 1085, 3891, 3888, 1085, 3887, 3790, 3784,
	1757, 3676, 3675, 3674, 3655, 3622, 3621, 1729, 3620, 1750,
	3131, 3132, 3543, 172, 172, 789, 3539, 3217, 3166, 3157,
	792, 3130, 3127, 1304, 1272, 3141, 3133, 3134, 3135, 3136,
	3138, 3139, 3126, 3124, 1517, 1559, 1561, 3095, 3094, 1462,
	1461, 3093, 1728, 3090, 4080, 1439, 3087, 3067, 3137, 3050,
	1765, 3043, 2906, 1813, 1591, 1740, 1741, 1747, 1768, 1746,
	1742, 2614, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 2439, 1437, 1590, 1725, 1448, 1272, 1808, 4668, 3900,
	1750, 2190, 1806, 1724, 4612, 1807, 3146, 1805, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1739, 1737, 1738, 1730, 1731,
	1732, 1733, 1735, 1736, 2156, 3734, 1661, 2154, 4611, 1576,
	1186, 1534, 2875, 851, 1295, 1030, 3791, 2788, 1315, 1085,
	227, 1315, 4577, 4530, 4528, 1085, 1211, 1028, 3569, 4419,
	1550, 4355, 4344, 4341, 4340, 4339, 1272, 1272, 1726, 1727,
	4320, 72, 4302, 854, 853, 1734, 4301, 4276, 1739, 1737,
	1738, 1730, 1731, 1732, 1733, 1735, 1736, 4260, 73, 4259,
	3240, 3171, 1757, 2416, 3131, 3132, 4245, 229, 4242, 1729,
	4241, 4188, 4166, 2745, 77, 3131, 3132, 4128, 4111, 3137,
	4110, 1726, 1727, 1571, 4092, 4091, 1703, 4054, 1697, 4030,
	1756, 1758, 3932, 3913, 3848, 1585, 3842, 3839, 3722, 3721,
	3707, 3706, 3704, 227, 1728, 1730, 1731, 1732, 1733, 1735,
	1736, 1795, 1729, 3637, 84, 3625, 228, 3534, 1793, 3478,
	1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 221, 3460,
	1085, 1085, 1085, 3426, 1596, 2422, 1085, 222, 227, 3362,
	3791, 3324, 3293, 1207, 1613, 1207, 3242, 1728, 3072, 1749,
	229, 3071, 3066, 855, 3034, 2853, 1851, 1850, 1648, 183,
	1345, 1849, 1846, 1838, 1836, 1864, 2656, 104, 1085, 1726,
	1727, 783, 90, 101, 2655, 2625, 2618, 1945, 783, 2584,
	2464, 1287, 1909, 3147, 4079, 229, 1865, 1860, 1859, 1858,
	1700, 1857, 1913, 227, 1856, 1855, 1854, 1853, 1852, 228,
	1729, 1708, 1924, 2874, 1873, 1833, 1205, 1734, 1205, 1971,
	1832, 221, 1707, 1008, 1831, 1830, 1829, 1828, 1007, 1847,
	222, 1827, 1826, 1702, 1825, 1824, 1823, 1822, 1917, 91,
	1821, 1820, 1704, 3137, 228, 1728, 1920, 1819, 1721, 1722,
	229, 1808, 2890, 1028, 3137, 1794, 221, 1287, 1792, 227,
	1734, 1918, 1756, 1758, 1085, 222, 172, 1787, 1287, 1894,
	1303, 1870, 1871, 1226, 1217, 1548, 4304, 4057, 3938, 3884,
	3671, 3648, 3640, 3054, 2616, 2647, 1085, 183, 4146, 1173,
	1839, 1840, 1345, 3940, 4001, 1553, 2218, 3131, 3132, 228,
	3670, 1807, 3238, 1750, 1790, 3455, 229, 1905, 2068, 4609,
	2043, 221, 4601, 2781, 1328, 2043, 1202, 2043, 1202, 4342,
	222, 1749, 4231, 4230, 1321, 1887, 4083, 4032, 1320, 4031,
	1916, 4000, 2016, 3935, 3851, 3850, 3849, 3148, 3643, 3462,
	3521, 3461, 183, 1201, 1895, 1201, 3214, 3147, 3133, 3134,
	3135, 3136, 3138, 3139, 1203, 228, 1203, 2050, 1315, 789,
	2041, 2015, 3746, 1892, 792, 3794, 789, 221, 1885, 4236,
	2765, 792, 1326, 1327, 1939, 1320, 222, 3092, 1695, 1028,
	3327, 2481, 94, 3091, 2467, 1992, 1612, 2465, 3356, 3016,
	2035, 2034, 1942, 1863, 2043, 2045, 1914, 1845, 183, 1933,
	2747, 3295, 1921, 1323, 1844, 2029, 3719, 1904, 1621, 1968,
	4283, 1903, 1902, 1900, 2120, 1899, 1898, 1889, 1287, 1287,
	4281, 227, 988, 1320, 3410, 3471, 3409, 1448, 1345, 1817,
	2239, 4542, 1925, 2018, 180, 97, 2215, 100, 4169, 1317,
	1828, 4227, 4516, 1828, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 4501, 2014, 4488, 3394, 2930, 1662, 227, 1622, 2136,
	3748, 227, 227, 227, 3743, 1750, 989, 3727, 229, 856,
	3496, 3263, 4132, 1448, 145, 3178, 3142, 3140, 3141, 3133,
	3134, 3135, 3136, 3138, 3139, 3571, 2447, 4497, 2654, 1861,
	2105, 3148, 2110, 1994, 1841, 2115, 1996, 3401, 4510, 2184,
	1527, 3060, 2001, 1456, 229, 2012, 2003, 1298, 229, 229,
	229, 2006, 2038, 1254, 2799, 2021, 4507, 228, 1322, 3445,
	2796, 1287, 2794, 1287, 3699, 1287, 4335, 4067, 2046, 221,
	2036, 2191, 1552, 4426, 147, 4162, 4317, 1814, 222, 3298,
	3714, 1287, 1287, 4561, 2913, 2141, 2146, 2887, 3267, 184,
	4560, 3386, 1287, 228, 2084, 4498, 3515, 228, 228, 228,
	183, 4591, 3761, 4209, 1287, 221, 1287, 1287, 1287, 221,
	221, 221, 3988, 1503, 222, 1318, 1495, 1600, 222, 222,
	222, 2138, 2688, 986, 1319, 1457, 2180, 969, 2078, 783,
	4663, 2225, 984, 4202, 3131, 3132, 183, 1185, 789, 982,
	852, 183, 183, 792, 2325, 980, 4194, 1730, 1731, 1732,
	1733, 1735, 1736, 1553, 2289, 4153, 2197, 2030, 2185, 977,
	4027, 2287, 1462, 1461, 2040, 4026, 3759, 3758, 3750, 3760,
	3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 1660,
	3239, 2103, 3742, 2104, 3741, 2114, 3135, 3136, 3138, 3139,
	2220, 2706, 1732, 1733, 1735, 1736, 3739, 2452, 1504, 2147,
	3738, 2706, 2039, 2323, 3131, 3132, 2704, 2205, 3726, 2243,
	3686, 3269, 1659, 2019, 3685, 1085, 2704, 1085, 2238, 3390,
	3389, 3233, 3065, 3064, 1085, 3063, 2194, 1945, 1945, 1345,
	1328, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 2226, 1085, 2207, 1085,
	1085, 1085, 1085, 2183, 1550, 2167, 2202, 2166, 2202, 2199,
	2203, 3354, 2327, 1736, 2453, 1028, 1328, 1028, 3295, 1327,
	4163, 1085, 1320, 1304, 1085, 1085, 2211, 1598, 2212, 2215,
	3062, 4592, 1085, 3137, 3020, 2314, 1085, 789, 1085, 1085,
	1658, 1026, 792, 2805, 3326, 2804, 1345, 2801, 2231, 2790,
	2779, 2778, 1085, 1085, 1085, 1085, 1643, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 2230, 2775, 2774, 2325, 2773,
	2752, 1321, 2247, 2324, 2751, 1327, 2714, 2637, 2397, 2723,
	2265, 1701, 2495, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 2428, 2429, 2648, 2454, 1085, 2451, 964, 2078,
	2494, 2355, 2884, 3137, 2303, 2255, 2428, 2444, 1207, 2165,
	1540, 2283, 1539, 3497, 844, 1345, 2248, 4109, 974, 1458,
	1552, 2338, 2749, 1021, 1207, 2769, 4596, 2323, 1025, 2308,
	1310, 3139, 2490, 2695, 4002, 1614, 3947, 3147, 2235, 1593,
	1085, 1345, 2762, 2763, 1939, 1939, 2322, 2762, 2763, 2762,
	2763, 2536, 2536, 2550, 1512, 2428, 1642, 3702, 2570, 2572,
	2319, 2313, 1942, 1942, 2576, 2311, 3355, 2326, 2412, 1933,
	1933, 1205, 2312, 2447, 2408, 2300, 2351, 2352, 2249, 1538,
	1008, 1537, 2443, 1008, 1008, 2342, 1317, 1205, 2343, 2344,
	2726, 1499, 2108, 2412, 1643, 1240, 2936, 3946, 1214, 2075,
	1694, 2601, 2629, 2406, 2309, 2321, 4560, 3147, 2626, 3008,
	1671, 2302, 2256, 2737, 965, 4328, 845, 3984, 1675, 4597,
	2492, 2293, 2593, 2993, 1622, 2493, 2047, 2048, 2496, 3710,
	2497, 2498, 2071, 1610, 4622, 2424, 1027, 2736, 1894, 1212,
	2252, 1287, 1287, 2456, 2798, 2246, 2204, 1028, 2420, 2615,
	1173, 3505, 2441, 3266, 1640, 2418, 1028, 1594, 1321, 4494,
	1028, 2076, 2077, 3504, 2969, 1322, 172, 2324, 2456, 2592,
	1706, 1202, 1622, 4025, 3131, 3132, 2797, 3149, 3150, 3151,
	1302, 3148, 2795, 1345, 2793, 3560, 4605, 1202, 2642, 883,
	1657, 2072, 2683, 3740, 1642, 2677, 3737, 3875, 1201, 2545,
	2532, 2561, 2600, 3388, 2605, 3352, 2574, 2611, 2612, 1203,
	2800, 2582, 2583, 2650, 1201, 2594, 1641, 1945, 2772, 2750,
	2598, 2599, 1318, 1523, 1847, 1203, 679, 2709, 4599, 4572,
	763, 1319, 1892, 4330, 2640, 2153, 2152, 3007, 1654, 1905,
	2322, 2086, 2402, 2709, 1315, 3723, 1215, 4580, 1028, 3442,
	3146, 3148, 4579, 674, 1345, 2705, 2691, 2450, 978, 3972,
	2403, 2635, 2711, 4625, 2090, 2404, 2121, 978, 1287, 2409,
	2657, 1521, 4549, 1317, 978, 2693, 1599, 4108, 2711, 3951,
	979, 2661, 2748, 2715, 1085, 1085, 2725, 1085, 2288, 1839,
	1840, 2679, 2668, 3968, 978, 2286, 2671, 3866, 2672, 2660,
	2686, 2662, 966, 3865, 1272, 2975, 4652, 3031, 1989, 2694,
	1287, 1024, 842, 2708, 841, 3982, 2117, 2678, 4408, 2680,
	2087, 3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 2692,
	4495, 2770, 3443, 2456, 2857, 2299, 3029, 761, 2791, 2754,
	2116, 1287, 1501, 3137, 3000, 3001, 3969, 1597, 2689, 964,
	2710, 1272, 1322, 1287, 3696, 1287, 2676, 3278, 1019, 2871,
	964, 1672, 3768, 3557, 3695, 2740, 2710, 796, 3776, 2394,
	1287, 2301, 2254, 2112, 1021, 3281, 2713, 3774, 2753, 4406,
	2764, 2766, 2767, 2768, 2718, 1021, 1272, 1272, 2728, 2731,
	2685, 2771, 2713, 3133, 3134, 3135, 3136, 3138, 3139, 1320,
	2669, 3724, 2076, 2077, 1939, 3152, 2673, 847, 846, 1318,
	3442, 1085, 2978, 4462, 4598, 4463, 3769, 2709, 1319, 4396,
	2684, 2956, 1942, 2957, 2091, 3343, 876, 2724, 4493, 1933,
	864, 1020, 2113, 4603, 4150, 3711, 2755, 2712, 3952, 2782,
	2836, 967, 3489, 2777, 3558, 2838, 2776, 3147, 2405, 172,
	2121, 3482, 2711, 2712, 4336, 4350, 3767, 789, 2407, 1498,
	1036, 1085, 792, 1239, 3268, 965, 3983, 1085, 1085, 2912,
	1523, 2902, 2953, 2937, 2938, 3026, 965, 1669, 1437, 3344,
	2931, 1462, 2839, 728, 2944, 2945, 2946, 3777, 2851, 4329,
	2092, 2093, 2950, 968, 2900, 3310, 2861, 1673, 3027, 1224,
	3365, 4523, 3032, 975, 1448, 2960, 1213, 2962, 3022, 2964,
	4046, 4524, 2109, 4548, 2088, 3236, 2980, 697, 2982, 3342,
	2882, 1834, 1085, 1085, 1595, 2934, 2893, 2903, 1085, 2973,
	2939, 2914, 2940, 2411, 2392, 4105, 4604, 2395, 2121, 2932,
	2710, 1085, 1085, 2977, 3964, 762, 3484, 1085, 1085, 3965,
	3335, 3309, 2133, 1085, 2832, 2089, 2901, 884, 1786, 3279,
	2867, 3483, 1085, 1085, 1085, 2124, 2713, 1879, 1085, 4606,
	2069, 2131, 4571, 2974, 2958, 2707, 2959, 1670, 1085, 2098,
	1875, 1609, 1611, 2419, 3862, 1674, 1320, 2391, 4121, 2251,
	675, 3148, 2456, 764, 2245, 1085, 2081, 760, 2706, 3053,
	3967, 3023, 4394, 4446, 3336, 2988, 2132, 2863, 2833, 2952,
	4437, 797, 798, 2729, 1882, 3314, 3970, 2990, 1705, 4010,
	2989, 2961, 2101, 2963, 3070, 2965, 2999, 2712, 1301, 2595,
	3776, 3048, 3049, 2099, 2552, 2338, 3052, 2994, 1448, 3774,
	2597, 4395, 3009, 4626, 3334, 2610, 1272, 1880, 2831, 3480,
	2082, 3775, 2438, 966, 1027, 3573, 4653, 2983, 1990, 1879,
	2985, 3867, 4613, 4056, 966, 3316, 676, 3856, 4104, 2094,
	877, 878, 2976, 2097, 865, 866, 3667, 1229, 3517, 2991,
	4357, 3028, 1448, 2125, 1448, 1085, 1085, 1085, 3044, 2078,
	2080, 3030, 1627, 4492, 1085, 1085, 1085, 3021, 2106, 1085,
	4559, 4557, 4373, 4244, 3789, 3810, 1882, 3430, 4547, 1085,
	1207, 1345, 2059, 2173, 677, 1085, 678, 1085, 2060, 3185,
	3186, 1877, 4047, 3143, 3144, 3145, 1207, 1872, 3315, 1227,
	3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 1880,
	2102, 3966, 1220, 666, 1345, 2095, 1716, 3059, 4522, 3777,
	3911, 800, 799, 3661, 3863, 2341, 1207, 4253, 2079, 1345,
	2031, 3611, 4185, 3485, 3486, 3487, 3488, 3168, 4184, 4316,
	3987, 1028, 2393, 1205, 4631, 3227, 1945, 3986, 2028, 3973,
	1345, 3207, 1878, 3187, 3811, 3220, 3754, 3698, 3489, 1205,
	2898, 3289, 967, 3431, 1287, 1287, 1715, 3482, 3232, 3422,
	3285, 1018, 1881, 967, 4106, 2927, 2872, 3662, 1715, 1710,
	801, 802, 3193, 2866, 2855, 2198, 2192, 1085, 3556, 1205,
	3246, 1044, 2186, 2178, 2159, 1492, 4358, 3197, 3682, 1231,
	2061, 1085, 3663, 737, 3660, 2331, 3626, 3772, 4413, 3518,
	3195, 2756, 2068, 3216, 968, 1287, 4376, 2065, 4151, 2588,
	1945, 3953, 3283, 2026, 3196, 968, 3282, 879, 880, 3205,
	1715, 867, 868, 2294, 2024, 3208, 3209, 3813, 1085, 3163,
	3164, 3165, 4072, 1202, 2852, 1242, 1875, 4225, 3179, 39,
	2068, 3225, 1287, 2591, 3213, 3221, 4223, 3194, 3264, 1202,
	3257, 4165, 3484, 2027, 1881, 2128, 3206, 1714, 3868, 2730,
	1201, 3639, 3270, 3301, 1287, 2236, 1287, 3483, 3297, 1714,
	1315, 1203, 3190, 3775, 3296, 3014, 1201, 2062, 2067, 1202,
	1284, 1345, 3300, 2120, 2590, 3305, 2992, 1203, 3307, 2589,
	3189, 2120, 1287, 3211, 1644, 3212, 1287, 3243, 3244, 2634,
	3245, 3286, 3229, 3230, 3231, 3912, 1201, 3612, 3357, 2126,
	2633, 1546, 2100, 1917, 2632, 1879, 3613, 1203, 2631, 1287,
	3331, 1714, 1716, 1939, 1786, 3329, 1287, 3781, 1287, 1532,
	2332, 3254, 1345, 3258, 1716, 3985, 2859, 4630, 2109, 783,
	3869, 1942, 3345, 1533, 1544, 3265, 882, 1025, 1933, 2127,
	1287, 4323, 4220, 4038, 2734, 3237, 4173, 3397, 3271, 3705,
	2063, 1287, 1882, 3472, 3192, 2196, 2107, 3363, 4568, 3347,
	3375, 2757, 2758, 4354, 3381, 4148, 4089, 1877, 1207, 4359,
	2935, 3683, 2837, 3438, 2835, 3351, 2224, 1603, 3664, 1628,
	4416, 3317, 3325, 4324, 3366, 1880, 4423, 1939, 3918, 3421,
	4410, 3628, 3320, 1287, 1287, 3338, 2069, 2463, 1690, 4441,
	3436, 1692, 1689, 4160, 3339, 1942, 1448, 1448, 3340, 1687,
	3341, 2298, 1933, 1666, 2297, 4570, 1287, 4512, 3429, 3290,
	3358, 1664, 1638, 4343, 3364, 1636, 3253, 2108, 1878, 3255,
	3256, 1205, 3377, 4127, 3259, 4088, 3260, 3383, 3261, 3910,
	3447, 3250, 3251, 3392, 3387, 3395, 3318, 4161, 4174, 3228,
	1634, 3780, 3415, 3160, 1632, 1345, 3533, 3494, 1345, 3485,
	3486, 3487, 3488, 1630, 1624, 3493, 4417, 736, 1619, 4325,
	2754, 3247, 1617, 3125, 3033, 1542, 2856, 3399, 3333, 3391,
	2789, 1448, 3432, 3353, 2462, 2746, 3319, 2659, 2304, 3419,
	1912, 1085, 3284, 3439, 172, 172, 3418, 1085, 1085, 1908,
	3458, 1085, 1085, 1085, 3491, 1085, 2183, 789, 1693, 1581,
	2285, 3161, 792, 3513, 1085, 1945, 3456, 3457, 3444, 3512,
	1710, 3470, 2971, 1085, 2970, 3474, 1085, 3453, 2942, 3332,
	3446, 1202, 1345, 2320, 1653, 2260, 2158, 3498, 1545, 1972,
	1881, 1085, 1818, 1592, 3511, 3468, 3510, 1516, 4487, 1345,
	3501, 3346, 3502, 3348, 3503, 4011, 3201, 2059, 1201, 1945,
	1945, 1085, 1085, 2060, 1085, 1085, 1085, 3745, 3744, 1203,
	4012, 1543, 2064, 881, 3997, 3519, 3536, 4409, 4070, 3376,
	4017, 3490, 3957, 3382, 1691, 1688, 3809, 3800, 3757, 3437,
	976, 3367, 1686, 3717, 3715, 1028, 1665, 3697, 3507, 3425,
	3492, 3553, 3420, 3411, 1663, 1637, 1085, 2885, 1635, 1272,
	1085, 2877, 1945, 1945, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 1085, 1633, 1085, 2870, 3516, 1631, 2862, 3273,
	3274, 1085, 1085, 1945, 2849, 2834, 1629, 1623, 1085, 2675,
	3202, 1618, 2670, 2157, 3585, 1616, 3545, 3546, 1541, 1085,
	2155, 4065, 2137, 2122, 3299, 3541, 2096, 3303, 2083, 4545,
	1207, 1207, 2145, 2070, 1085, 2061, 2011, 2008, 2005, 3508,
	3586, 3552, 2002, 3559, 3561, 3562, 3435, 1997, 3514, 3568,
	2284, 1995, 2065, 1991, 1982, 3378, 4536, 1919, 3563, 3200,
	3575, 2131, 1939, 1345, 3012, 3583, 1719, 4561, 2032, 3584,
	1448, 3657, 2986, 1182, 2984, 4451, 3623, 4094, 4087, 4086,
	1942, 3582, 4270, 2307, 4024, 3943, 2928, 1933, 3644, 2051,
	3368, 3204, 3370, 1205, 1205, 3374, 1497, 2706, 4255, 3380,
	1183, 981, 983, 985, 3665, 3666, 1939, 1939, 2735, 3588,
	1085, 3615, 2704, 3590, 4248, 2706, 2250, 3821, 3677, 3678,
	3679, 172, 2062, 2067, 1942, 1942, 2078, 2195, 2604, 2305,
	2732, 1933, 1933, 1262, 1085, 4262, 1684, 1685, 2351, 3576,
	3616, 2280, 2279, 3624, 3635, 3636, 1263, 4450, 4263, 3406,
	724, 2257, 3989, 4019, 1615, 2738, 4290, 3919, 3013, 1939,
	1939, 3897, 3687, 3632, 3633, 1085, 1085, 3312, 2739, 2759,
	1726, 1727, 1723, 3379, 2306, 1720, 3647, 1942, 1942, 1296,
	4264, 1230, 680, 4564, 1933, 1933, 2927, 2739, 3646, 3630,
	1939, 2351, 3591, 1202, 1202, 2927, 4555, 3203, 4517, 2848,
	2282, 1729, 1093, 1085, 3753, 2063, 1726, 1727, 1942, 1184,
	3797, 2179, 1307, 1263, 2796, 1933, 252, 2794, 2803, 1263,
	1201, 1201, 3619, 776, 2784, 2741, 3752, 1287, 4401, 2786,
	1287, 1203, 1203, 3728, 3673, 832, 1728, 691, 3691, 4171,
	4367, 4266, 2785, 4364, 4322, 4309, 4239, 1945, 259, 259,
	259, 2069, 669, 670, 4218, 685, 669, 685, 695, 3733,
	3735, 735, 2743, 663, 4265, 753, 3732, 3701, 4154, 3755,
	759, 3749, 1728, 4152, 4149, 2742, 259, 1287, 3807, 3799,
	3788, 4267, 3654, 1085, 3424, 3720, 3725, 2892, 2575, 2017,
	1926, 1207, 1085, 4600, 861, 3823, 3955, 3954, 3694, 3280,
	259, 3272, 1287, 1287, 1287, 4443, 2754, 3235, 3764, 4629,
	4444, 3814, 4366, 3830, 4615, 3747, 1294, 3131, 3132, 1287,
	1726, 1727, 3972, 4443, 3779, 2698, 2699, 1602, 4444, 2696,
	2697, 4574, 1464, 1601, 1287, 3889, 2458, 3669, 2698, 2696,
	1345, 2491, 3815, 1668, 3795, 3806, 1667, 4240, 3818, 3796,
	4203, 4021, 4016, 4015, 1205, 3885, 3968, 3668, 3564, 3372,
	3961, 3369, 1812, 1811, 1345, 3798, 4581, 1085, 1085, 3846,
	4405, 4404, 3680, 1085, 1085, 1945, 3681, 3959, 1085, 1085,
	4403, 1085, 4305, 4221, 4198, 1085, 3963, 4147, 1470, 4144,
	1477, 4049, 1483, 3939, 3845, 3827, 1085, 3801, 3783, 3816,
	3713, 3770, 3708, 3428, 3778, 3824, 3427, 3817, 3306, 3969,
	3252, 3829, 1085, 3819, 3121, 3120, 3825, 3119, 3834, 3870,
	3852, 3716, 3118, 3718, 669, 669, 3117, 2064, 3835, 3836,
	3116, 3840, 259, 3841, 1939, 3844, 3879, 3837, 3843, 3115,
	3114, 3113, 3112, 3111, 3110, 3109, 3108, 3107, 3106, 3883,
	3871, 3962, 1942, 3105, 1202, 3859, 1570, 3864, 1575, 1933,
	1272, 3854, 3104, 3103, 3102, 3101, 3290, 3100, 1584, 3099,
	1589, 3098, 1207, 2968, 2949, 2948, 3766, 2947, 2876, 2850,
	1207, 1201, 2733, 1557, 1345, 2666, 1345, 3782, 3756, 2652,
	2651, 2423, 1203, 1207, 2281, 2278, 2277, 2276, 2275, 2274,
	2193, 3853, 2168, 2164, 1287, 1287, 2163, 2162, 3924, 2161,
	2160, 3803, 2183, 1345, 1985, 1984, 1983, 1981, 1683, 1682,
	1625, 4268, 3220, 1511, 1510, 1509, 4269, 3765, 1508, 1507,
	1506, 1646, 1505, 1500, 1496, 1205, 1494, 1493, 1336, 1335,
	1334, 3909, 1333, 1205, 1332, 1207, 1300, 1207, 1299, 1249,
	1248, 1247, 1246, 1245, 1244, 1243, 1205, 1241, 1236, 1235,
	1234, 1233, 1939, 1232, 1165, 2022, 987, 1287, 3980, 973,
	3927, 4327, 3971, 2296, 3977, 172, 3977, 1345, 3981, 1287,
	1942, 1677, 1287, 89, 3923, 3930, 3920, 1933, 3926, 3921,
	3922, 1345, 3992, 3993, 3925, 1502, 3931, 3916, 819, 83,
	1798, 3934, 2129, 3712, 1803, 944, 4440, 3964, 1205, 1486,
	1205, 4349, 3965, 827, 4425, 3308, 2806, 2259, 1626, 2261,
	3991, 1287, 1287, 3215, 2617, 4393, 3893, 3069, 4297, 4120,
	2461, 3956, 1816, 3172, 85, 1202, 1069, 1115, 1287, 4045,
	4044, 3958, 3700, 1202, 3995, 2917, 3949, 4042, 4041, 1930,
	1345, 1932, 1035, 1348, 4461, 1287, 1202, 4004, 2033, 1075,
	4007, 4023, 1201, 3967, 4036, 2049, 2042, 2653, 2535, 1092,
	1201, 4034, 1089, 1203, 1934, 1936, 1091, 4014, 1090, 3970,
	1207, 1203, 1935, 1201, 1835, 4062, 1088, 4009, 1929, 4073,
	1287, 1287, 1287, 3805, 1203, 2858, 2896, 3454, 4028, 1551,
	1549, 4090, 946, 1345, 2037, 2417, 4033, 2445, 1202, 3977,
	1202, 3058, 1809, 4093, 1050, 1085, 1085, 1085, 1071, 2442,
	4074, 1225, 1060, 1049, 3198, 3177, 3441, 4077, 4040, 3653,
	4055, 2330, 836, 1345, 3128, 1201, 4068, 1201, 1085, 4059,
	2448, 1085, 1085, 1205, 1216, 2898, 1203, 2558, 1203, 4035,
	2551, 1085, 4075, 2547, 1945, 3262, 2886, 1281, 1696, 1085,
	1085, 4134, 1788, 2897, 1330, 1053, 2415, 1800, 4112, 3038,
	2340, 3448, 2927, 3218, 1345, 2646, 1287, 4447, 3572, 2172,
	1181, 4097, 1180, 4101, 4096, 1223, 1901, 1179, 4431, 4428,
	2119, 4107, 4082, 3838, 3404, 2025, 2690, 1778, 3412, 1065,
	1447, 3183, 1345, 3473, 3966, 1513, 758, 4178, 1077, 1453,
	1085, 1777, 2827, 2826, 4319, 4129, 261, 1316, 4099, 1085,
	1314, 1313, 4123, 1312, 4588, 4006, 4651, 1085, 3709, 1945,
	226, 3006, 1717, 1709, 2183, 223, 225, 224, 1085, 4050,
	1488, 1085, 3973, 1202, 3658, 4140, 4141, 3224, 4515, 3730,
	3396, 23, 1272, 1085, 22, 4117, 21, 109, 42, 20,
	1345, 1979, 4156, 4143, 3996, 1524, 4181, 1287, 125, 144,
	1201, 143, 1287, 1287, 1218, 117, 4005, 142, 141, 4008,
	140, 1203, 4157, 139, 146, 138, 4061, 2335, 4164, 137,
	1565, 4155, 132, 136, 135, 134, 133, 1343, 131, 129,
	130, 1442, 124, 128, 1578, 127, 4233, 1238, 126, 4208,
	123, 1345, 4197, 122, 1287, 121, 120, 119, 4224, 259,
	118, 259, 259, 116, 1267, 259, 1277, 1979, 115, 114,
	113, 112, 1207, 1207, 4199, 4058, 111, 1297, 1979, 4195,
	4205, 1939, 110, 4238, 4214, 4210, 753, 4213, 4249, 749,
	4254, 1085, 1085, 4273, 4274, 746, 61, 1604, 4222, 1942,
	60, 3977, 3977, 4217, 108, 107, 1933, 4232, 1085, 1945,
	259, 19, 259, 259, 1267, 40, 259, 259, 1277, 4250,
	14, 3944, 3945, 4252, 65, 66, 18, 13, 4237, 259,
	35, 1466, 4077, 4256, 4271, 1205, 1205, 4246, 4251, 4257,
	4216, 1048, 88, 99, 98, 36, 96, 1085, 95, 34,
	1085, 3990, 1490, 17, 16, 15, 1939, 1207, 93, 4286,
	4287, 92, 33, 31, 11, 9, 2553, 8, 37, 1207,
	4295, 1515, 4315, 1277, 1942, 4285, 1896, 259, 259, 4258,
	1267, 1933, 12, 5, 177, 176, 3977, 179, 4187, 4277,
	4338, 175, 178, 4020, 87, 4022, 174, 173, 3977, 753,
	86, 259, 259, 29, 4314, 10, 169, 4234, 3793, 2068,
	80, 1085, 1085, 4337, 4200, 4332, 4331, 171, 170, 4353,
	1205, 168, 4039, 1207, 861, 167, 1207, 166, 81, 4289,
	1287, 78, 1205, 165, 82, 1202, 1202, 164, 79, 163,
	1287, 1287, 4345, 27, 4370, 6, 4306, 4372, 4189, 4190,
	4347, 4311, 3977, 4212, 64, 3977, 7, 1287, 4102, 3495,
	102, 103, 1201, 1201, 38, 76, 4384, 4360, 75, 4365,
	74, 1085, 1085, 1203, 1203, 26, 4204, 4369, 4206, 63,
	4207, 1085, 4361, 4362, 25, 4378, 1205, 2059, 210, 1205,
	4382, 4383, 4389, 2060, 4390, 4377, 1939, 259, 4380, 209,
	208, 207, 206, 4381, 4211, 205, 4237, 4387, 204, 203,
	4418, 4388, 198, 197, 1942, 202, 259, 200, 4422, 199,
	1202, 1933, 1085, 1085, 4398, 1085, 201, 196, 4402, 213,
	212, 1557, 1202, 1557, 218, 217, 216, 215, 214, 4397,
	211, 1448, 220, 4445, 195, 194, 193, 1201, 191, 187,
	186, 190, 4430, 4433, 192, 189, 4442, 188, 1203, 1201,
	4421, 4420, 185, 219, 161, 162, 4466, 71, 160, 4469,
	1203, 159, 158, 4439, 157, 1085, 1085, 1085, 156, 4470,
	155, 154, 70, 24, 2, 1, 1202, 0, 4452, 1202,
	4434, 0, 4464, 4438, 4435, 4457, 0, 0, 0, 4465,
	0, 0, 0, 0, 0, 2061, 0, 1085, 0, 0,
	0, 0, 0, 1201, 0, 4499, 1201, 0, 0, 0,
	4486, 4504, 2065, 4485, 1203, 4483, 4484, 1203, 0, 0,
	4500, 0, 0, 0, 0, 0, 4525, 4518, 0, 0,
	0, 1272, 0, 4529, 0, 0, 4502, 0, 0, 0,
	4527, 0, 0, 4539, 4541, 4540, 0, 0, 2421, 0,
	1085, 0, 0, 0, 0, 0, 4346, 0, 0, 0,
	0, 4526, 0, 1798, 4546, 0, 0, 4533, 1911, 0,
	0, 0, 4535, 0, 0, 0, 0, 0, 4566, 0,
	3406, 0, 2062, 2067, 0, 0, 0, 0, 0, 4554,
	4558, 0, 4562, 4552, 4553, 4556, 0, 0, 0, 1207,
	4565, 1207, 4584, 4586, 669, 2068, 4569, 0, 4583, 4430,
	4567, 4534, 4433, 4573, 4594, 4353, 4578, 2557, 4595, 4582,
	4585, 0, 4587, 0, 4590, 259, 4593, 259, 3977, 0,
	3977, 259, 0, 0, 4589, 0, 0, 0, 0, 4608,
	0, 0, 0, 0, 1466, 1267, 259, 0, 259, 4607,
	0, 4537, 4538, 259, 1466, 685, 4610, 4543, 4617, 0,
	259, 1466, 1205, 4616, 1205, 2063, 4623, 0, 0, 0,
	0, 1085, 1085, 4619, 0, 1986, 4621, 0, 4614, 0,
	1085, 4624, 1085, 1085, 0, 4627, 0, 259, 0, 0,
	2053, 0, 4642, 0, 259, 4643, 4636, 4647, 4639, 4644,
	4646, 4645, 4641, 4633, 4640, 0, 0, 2057, 0, 0,
	0, 2069, 0, 4655, 0, 4654, 4656, 4658, 0, 4657,
	4650, 0, 4659, 0, 4660, 0, 0, 0, 4662, 0,
	4666, 2996, 4665, 0, 753, 0, 0, 0, 0, 1085,
	4670, 72, 4672, 0, 0, 4667, 4676, 4673, 0, 4675,
	4634, 4635, 0, 4669, 4662, 0, 0, 0, 73, 72,
	0, 2055, 1202, 2822, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4514, 0, 1201,
	0, 1201, 77, 0, 0, 1048, 2814, 2812, 0, 1048,
	1203, 2056, 1203, 2816, 2818, 2808, 0, 4671, 0, 0,
	0, 2553, 2553, 0, 84, 1429, 0, 0, 0, 1429,
	0, 0, 0, 0, 0, 0, 2150, 2213, 0, 0,
	0, 0, 84, 0, 3131, 3132, 0, 3149, 3150, 3151,
	0, 0, 0, 1281, 2227, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 2229, 0, 0, 3538, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 104, 2240, 2241,
	2242, 855, 90, 101, 0, 0, 0, 0, 0, 0,
	0, 4449, 0, 0, 0, 104, 0, 2064, 0, 259,
	90, 101, 259, 2744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3131, 3132, 0, 3149, 3150, 3151, 0, 91,
	0, 0, 0, 0, 2787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 91, 0, 259,
	0, 0, 0, 0, 259, 2553, 2553, 2553, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2842, 0, 0, 2845, 259, 2847, 259, 0,
	2810, 0, 669, 0, 259, 3035, 3036, 0, 0, 0,
	0, 2824, 0, 0, 0, 0, 753, 0, 3146, 0,
	861, 0, 0, 3137, 0, 0, 0, 0, 0, 0,
	0, 0, 2823, 2815, 2813, 2817, 2819, 2809, 2811, 2825,
	2889, 0, 0, 2889, 0, 259, 2821, 1267, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 753, 0, 0, 0, 0, 4449, 0, 259,
	0, 0, 2643, 0, 0, 0, 2258, 0, 0, 2828,
	0, 259, 259, 0, 259, 3152, 259, 0, 259, 0,
	259, 1557, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2354, 0, 0,
	94, 3137, 2557, 2290, 0, 0, 2291, 0, 2292, 2966,
	0, 0, 0, 0, 0, 0, 0, 3147, 0, 0,
	259, 0, 0, 0, 3131, 3132, 0, 3149, 3150, 3151,
	0, 0, 0, 0, 180, 97, 0, 100, 0, 3154,
	3155, 3156, 0, 0, 735, 0, 0, 3537, 753, 0,
	0, 0, 180, 97, 0, 100, 0, 0, 2898, 0,
	0, 227, 0, 3152, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 227,
	0, 0, 2557, 2557, 2459, 0, 0, 856, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	3146, 0, 0, 0, 0, 3147, 0, 0, 229, 0,
	0, 0, 0, 0, 1726, 1727, 0, 1759, 1760, 1761,
	1769, 1770, 1771, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 1757, 0,
	0, 0, 2829, 0, 0, 1729, 0, 0, 0, 184,
	0, 2820, 147, 0, 1775, 0, 0, 228, 0, 0,
	0, 3148, 0, 0, 0, 0, 1429, 184, 0, 221,
	0, 0, 0, 0, 0, 228, 0, 0, 222, 2627,
	1728, 0, 0, 2682, 1281, 0, 0, 221, 0, 0,
	1748, 0, 0, 3137, 0, 0, 222, 0, 0, 1745,
	183, 0, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	259, 0, 0, 0, 0, 0, 2557, 2557, 2557, 669,
	0, 0, 0, 0, 0, 0, 259, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3148,
	259, 0, 0, 0, 0, 3152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 1277, 0, 0, 0,
	0, 0, 0, 1751, 1752, 1753, 1754, 0, 0, 0,
	0, 0, 1048, 1734, 0, 0, 0, 0, 1429, 0,
	0, 0, 0, 3143, 3144, 3145, 0, 3147, 0, 0,
	3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 0,
	2830, 0, 259, 1277, 0, 685, 0, 0, 0, 1766,
	0, 2701, 1776, 0, 0, 2665, 0, 0, 1756, 1758,
	0, 259, 2553, 2553, 259, 0, 0, 0, 259, 0,
	259, 0, 0, 0, 0, 1267, 0, 259, 259, 0,
	1277, 1277, 2681, 0, 1743, 1744, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 3143, 3144, 3145, 0, 0, 0, 1749, 3142, 3140,
	3141, 3133, 3134, 3135, 3136, 3138, 3139, 0, 0, 0,
	0, 0, 2722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2943, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 1979, 1979, 0, 0, 0, 259,
	0, 3148, 0, 0, 2553, 2553, 2553, 2553, 2553, 2553,
	2553, 2553, 2553, 2553, 2553, 2553, 2553, 2553, 2553, 2553,
	2553, 2553, 2553, 0, 2553, 259, 0, 0, 0, 0,
	0, 3321, 3322, 0, 0, 3323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 259, 2840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 3529, 3530, 0, 0,
	1755, 0, 0, 0, 3359, 3360, 1466, 0, 3361, 259,
	0, 0, 1979, 0, 0, 0, 0, 259, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 2881, 0, 0,
	0, 0, 0, 766, 1979, 0, 1979, 2722, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 1767, 2910, 861,
	0, 2722, 2722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 3143, 3144, 3145, 1979, 0, 259, 0,
	3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 1267, 259,
	0, 0, 0, 1466, 0, 1466, 1277, 259, 0, 0,
	1267, 0, 1267, 0, 1267, 0, 0, 0, 3592, 3593,
	3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603,
	3604, 3605, 3606, 3607, 3608, 3609, 3610, 0, 3614, 0,
	0, 0, 259, 259, 259, 259, 1267, 0, 0, 1267,
	0, 259, 0, 259, 0, 0, 0, 0, 1765, 0,
	0, 771, 0, 1740, 1741, 1747, 1768, 1746, 1742, 0,
	1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0,
	0, 0, 0, 0, 259, 1429, 0, 0, 0, 0,
	1034, 0, 259, 2557, 2557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 1729, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 1728, 0,
	0, 1466, 0, 0, 0, 0, 0, 0, 1748, 3131,
	3132, 0, 3149, 3150, 3151, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 2557, 2557, 2557, 2557, 2557,
	2557, 2557, 2557, 2557, 2557, 2557, 2557, 2557, 2557, 2557,
	2557, 2557, 2557, 2557, 0, 2557, 0, 777, 0, 0,
	3131, 3132, 0, 3149, 3150, 3151, 0, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 3184,
	3874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3146, 0, 1429, 0, 0,
	0, 1751, 1752, 1753, 1754, 0, 0, 0, 0, 0,
	0, 1734, 3210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3223, 0, 768,
	0, 0, 0, 0, 0, 0, 3146, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 3241, 0,
	0, 0, 259, 0, 0, 0, 1756, 1758, 0, 772,
	73, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 669, 0, 0, 77, 0, 669, 0,
	0, 669, 1743, 1744, 669, 669, 0, 0, 3137, 0,
	669, 0, 0, 729, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	1466, 0, 770, 0, 0, 1749, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3153, 0, 3137,
	0, 3384, 1466, 0, 0, 0, 0, 0, 0, 1429,
	0, 0, 0, 259, 0, 0, 0, 259, 259, 0,
	3152, 0, 0, 0, 0, 855, 0, 0, 767, 0,
	0, 0, 3416, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 3423, 90, 101, 2722, 2722, 259, 0,
	3277, 0, 0, 0, 0, 0, 774, 0, 0, 0,
	2722, 0, 3147, 3292, 0, 0, 0, 0, 0, 0,
	731, 2722, 3292, 0, 2722, 3292, 0, 0, 3292, 0,
	1429, 769, 0, 0, 0, 3464, 3465, 0, 0, 0,
	0, 259, 259, 3277, 0, 259, 0, 0, 0, 0,
	0, 91, 0, 3147, 0, 0, 0, 0, 1755, 0,
	3223, 0, 0, 0, 0, 3277, 0, 259, 0, 3350,
	3350, 0, 1267, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 2722, 0, 2722,
	0, 3373, 2722, 3277, 0, 0, 2722, 3277, 0, 0,
	0, 0, 0, 0, 3802, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 3400, 0, 0, 3402, 2722, 0, 0, 259,
	0, 0, 0, 259, 0, 1277, 3148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 2553, 0, 0, 3855, 2881, 0, 0, 1267, 0,
	259, 1292, 0, 2722, 0, 669, 0, 0, 0, 0,
	0, 0, 2722, 1442, 94, 0, 1343, 3148, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 1034, 0,
	0, 0, 0, 259, 2881, 1746, 1742, 2881, 1739, 1737,
	1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0, 0,
	2553, 0, 0, 0, 0, 0, 0, 0, 0, 72,
	0, 0, 0, 0, 0, 0, 180, 97, 3500, 100,
	0, 0, 0, 1468, 0, 1474, 73, 1480, 0, 0,
	0, 0, 0, 0, 0, 3506, 0, 0, 1267, 259,
	3549, 259, 77, 227, 0, 0, 0, 1267, 0, 0,
	0, 856, 0, 0, 0, 0, 145, 3565, 3143, 3144,
	3145, 0, 0, 0, 0, 3142, 3140, 3141, 3133, 3134,
	3135, 3136, 3138, 3139, 0, 0, 0, 259, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	229, 1568, 0, 1573, 0, 0, 0, 0, 0, 3143,
	3144, 3145, 0, 1582, 0, 1587, 3142, 3140, 3141, 3133,
	3134, 3135, 3136, 3138, 3139, 4126, 147, 0, 0, 0,
	0, 855, 0, 0, 1726, 1727, 0, 0, 0, 0,
	0, 184, 0, 3570, 0, 104, 0, 0, 0, 228,
	90, 101, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 221, 0, 0, 0, 1729, 0, 0, 2553, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	0, 1655, 0, 0, 4167, 0, 0, 0, 0, 0,
	0, 0, 1562, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 3656, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 1979, 0, 0, 0, 0, 0, 4048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4060,
	0, 0, 259, 259, 0, 0, 0, 1429, 0, 0,
	0, 0, 3532, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	0, 0, 4081, 0, 669, 669, 0, 0, 0, 3762,
	0, 0, 0, 1751, 1752, 1753, 1754, 0, 1979, 0,
	1429, 0, 0, 1734, 1797, 0, 1466, 1466, 0, 0,
	1810, 0, 2557, 0, 0, 1429, 0, 0, 0, 0,
	1466, 1466, 1466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1429, 0, 0, 0,
	0, 0, 4294, 0, 0, 0, 0, 0, 1756, 1758,
	94, 0, 0, 3350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3831, 3832, 3833, 0, 0, 0,
	0, 2557, 0, 1048, 1743, 1744, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 1048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 180, 97, 0, 100, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 1868, 1868, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	3350, 0, 0, 0, 808, 0, 0, 856, 0, 0,
	0, 259, 145, 0, 0, 1070, 106, 0, 0, 0,
	0, 1117, 0, 0, 810, 0, 0, 0, 0, 0,
	811, 3277, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 229, 1429, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 259, 812,
	0, 829, 147, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 2722, 259, 0, 228, 813, 1979, 1429, 2557,
	1755, 814, 2910, 2910, 0, 0, 106, 221, 861, 861,
	2722, 0, 0, 0, 2881, 2881, 222, 0, 861, 2722,
	0, 1750, 837, 0, 0, 0, 0, 0, 815, 0,
	0, 1034, 0, 0, 0, 0, 3936, 3937, 1560, 0,
	259, 0, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 816, 0, 1009, 817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1029,
	839, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 3894, 0, 3929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 3941, 0, 0, 0, 1191, 0, 0, 4351, 0,
	0, 1208, 0, 1281, 0, 0, 0, 1746, 1742, 0,
	1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 4368,
	0, 0, 0, 0, 259, 0, 0, 0, 838, 0,
	1466, 0, 259, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4098, 0, 4100, 1429, 0, 0, 2722, 2722,
	0, 3350, 0, 0, 0, 0, 0, 0, 0, 0,
	2722, 0, 0, 0, 0, 0, 818, 3979, 0, 3979,
	1466, 0, 0, 0, 0, 0, 0, 820, 2722, 0,
	3292, 0, 0, 0, 1466, 1466, 259, 3277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3277, 0, 259, 3277, 0, 259, 0, 821, 0, 0,
	0, 0, 0, 0, 4453, 0, 0, 4454, 0, 0,
	2722, 0, 2722, 259, 0, 0, 0, 0, 4145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 2722,
	0, 1343, 0, 0, 4052, 807, 0, 830, 0, 0,
	0, 0, 0, 259, 0, 0, 822, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 4118, 0, 0, 0, 0, 0, 0, 0, 0,
	828, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	0, 0, 3979, 0, 0, 1466, 0, 823, 0, 0,
	0, 824, 842, 0, 841, 0, 0, 0, 825, 0,
	0, 0, 4118, 0, 4215, 0, 0, 0, 0, 0,
	0, 0, 826, 0, 0, 0, 0, 834, 0, 0,
	2329, 0, 2333, 843, 0, 840, 0, 0, 0, 2347,
	2354, 731, 0, 0, 0, 0, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 0, 2396, 0, 2398, 2399, 2400, 2401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2354, 0,
	0, 0, 0, 0, 0, 0, 2425, 0, 0, 0,
	2722, 0, 3292, 0, 0, 4159, 0, 1797, 0, 0,
	0, 2440, 0, 259, 0, 0, 0, 0, 0, 0,
	4179, 0, 4179, 0, 0, 0, 0, 2470, 2473, 2476,
	2479, 0, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 0,
	0, 0, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	2549, 0, 2560, 2562, 2567, 0, 0, 0, 3277, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4159,
	0, 0, 0, 0, 0, 0, 0, 2722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1281, 3979, 3979, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 1208, 0, 0, 1281,
	0, 259, 259, 0, 0, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3570, 0, 0, 0, 0,
	1429, 0, 1726, 1727, 0, 0, 0, 0, 0, 0,
	1208, 3350, 4308, 0, 1208, 4310, 3350, 4313, 1208, 0,
	0, 0, 0, 4159, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 1729, 106, 0, 106, 0, 106, 3979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 3979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 259, 0, 1208, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1029, 106,
	106, 0, 4052, 0, 1208, 0, 0, 0, 0, 1208,
	0, 0, 106, 0, 106, 3979, 0, 259, 3979, 0,
	0, 0, 0, 1208, 106, 0, 106, 0, 3292, 0,
	1429, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3527, 0, 0, 0, 1466, 0, 1466, 0, 0, 1429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 1752, 1753, 1754, 0, 1208, 0, 0, 0,
	0, 1734, 4407, 0, 0, 0, 0, 106, 0, 2843,
	2844, 0, 2846, 4414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4179, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 1756, 1758, 2722, 0,
	0, 0, 0, 0, 0, 0, 0, 1429, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 1743, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3570, 0, 0, 0, 1009, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 1466, 0, 0, 0, 1429, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 2967, 0, 1802, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 1780, 0, 0, 0, 0, 0, 1429,
	0, 0, 0, 1726, 1727, 0, 0, 0, 0, 1769,
	1770, 1771, 0, 0, 2722, 0, 0, 0, 0, 0,
	0, 3979, 0, 3979, 0, 0, 1466, 1757, 1755, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	1429, 0, 0, 1775, 0, 0, 0, 3018, 3019, 1750,
	0, 0, 0, 3025, 0, 0, 0, 0, 1888, 0,
	1891, 0, 106, 0, 1208, 0, 1208, 0, 1429, 1728,
	1466, 0, 3039, 3040, 0, 0, 0, 0, 2440, 1748,
	0, 1208, 0, 0, 0, 0, 0, 3047, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	0, 0, 1208, 3061, 0, 0, 2910, 1048, 0, 0,
	0, 0, 0, 0, 0, 2722, 0, 0, 0, 0,
	3073, 0, 0, 0, 0, 0, 1429, 0, 0, 0,
	2910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2528, 2529, 2530, 2531, 2524, 2525, 2526,
	2527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1752, 1753, 1754, 0, 0, 1208, 0,
	0, 0, 1734, 0, 0, 0, 0, 1429, 0, 1208,
	0, 0, 0, 0, 0, 1746, 1742, 0, 1739, 1737,
	1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 1766, 0,
	0, 1776, 0, 0, 0, 1726, 1727, 1756, 1758, 2567,
	2567, 2567, 0, 0, 2504, 2505, 2506, 2507, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 1757,
	0, 0, 3188, 1743, 1744, 0, 1729, 2516, 2517, 2518,
	2519, 2512, 2513, 2514, 2515, 2520, 2521, 2522, 2523, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 1726,
	1727, 1728, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 1762, 1757, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	2500, 2501, 2502, 2503, 2508, 2509, 2510, 2511, 0, 1208,
	1208, 0, 0, 0, 0, 0, 0, 1048, 1048, 1208,
	0, 0, 1034, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 3526, 0, 1748, 1034, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 1752, 1753, 1754, 0, 0,
	0, 0, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 3311, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 1029, 0, 1029, 1756,
	1758, 0, 1208, 0, 1208, 0, 1208, 0, 1751, 1752,
	1753, 1754, 0, 0, 0, 0, 1767, 0, 1734, 1048,
	0, 0, 1208, 1208, 0, 1743, 1744, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 1208, 1208, 1208,
	0, 0, 0, 0, 1766, 0, 0, 1776, 1749, 0,
	0, 0, 0, 1756, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 1773, 0, 0, 0, 0, 0, 0, 1743,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 1749, 0, 0, 1768, 1746, 1742, 0, 1739,
	1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1009, 0, 0, 1009, 1009, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 1946, 1946,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1029, 0,
	0, 0, 0, 0, 0, 0, 2347, 1796, 0, 0,
	0, 1796, 3524, 3525, 0, 1755, 3528, 0, 0, 0,
	3531, 0, 0, 0, 0, 0, 0, 1208, 0, 3535,
	0, 0, 0, 0, 0, 0, 1750, 0, 3542, 0,
	0, 3188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3554, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3577, 3578, 0, 3579,
	3580, 3581, 0, 1191, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 1891,
	0, 0, 0, 0, 0, 1208, 0, 0, 1746, 1742,
	0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736,
	0, 3587, 1208, 0, 0, 3589, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3617, 3618, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 1740, 1741,
	1747, 1768, 1746, 1742, 3629, 1739, 1737, 1738, 1730, 1731,
	1732, 1733, 1735, 1736, 0, 0, 0, 0, 3902, 3638,
	0, 0, 3901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0,
	0, 0, 1208, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 1757, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 3684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 3703,
	0, 0, 0, 0, 1745, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 3729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 106, 0, 106, 0, 0, 0, 0, 1751, 1752,
	1753, 1754, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 106,
	0, 0, 0, 0, 1766, 106, 0, 1776, 0, 0,
	0, 0, 1208, 1756, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 1208, 0, 1868, 0,
	1772, 0, 1773, 0, 0, 0, 0, 3826, 0, 1743,
	1744, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 1727, 0, 1759,
	1760, 1761, 1769, 1770, 1771, 0, 0, 0, 0, 0,
	0, 0, 3872, 3873, 1774, 0, 0, 0, 3877, 3878,
	1757, 0, 0, 3881, 3882, 0, 0, 1729, 0, 0,
	3886, 0, 1763, 0, 0, 0, 1775, 0, 0, 0,
	0, 3890, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3895, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 1094, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2414, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 1727, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 1750, 0, 0, 0,
	0, 260, 260, 260, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 1751, 1752, 1753, 1754, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 1728, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 1776, 0, 0, 0, 0, 0,
	1756, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 1773,
	0, 0, 0, 0, 0, 0, 1743, 1744, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 1740, 1741,
	1747, 1768, 1746, 1742, 1764, 1739, 1737, 1738, 1730, 1731,
	1732, 1733, 1735, 1736, 1751, 1752, 1753, 1754, 3082, 1749,
	0, 0, 3083, 0, 1734, 1191, 0, 0, 0, 0,
	0, 1208, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 1208, 0, 0, 0, 1756,
	1758, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 1744, 1946, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	4113, 4114, 4115, 0, 0, 1208, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 2347, 0, 0, 4124, 4125, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4133, 4136, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 1208, 0, 0, 0,
	0, 1946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 106, 1767,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4180, 0, 0, 0, 0, 0,
	0, 0, 4186, 0, 0, 1208, 0, 1208, 0, 0,
	106, 106, 0, 4193, 106, 0, 1034, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 4201, 0,
	0, 1755, 0, 1208, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 1208, 0, 1208,
	1765, 0, 715, 1208, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 1208, 698, 0, 0, 0, 0, 0, 699, 0,
	0, 0, 1208, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 1191, 0, 0, 1029, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 698, 0, 0,
	106, 106, 0, 699, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 1208, 1208, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 702,
	0, 0, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4318, 701, 0, 4321, 0, 0, 1746, 1742,
	721, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736,
	0, 0, 0, 0, 702, 0, 1208, 0, 0, 1208,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 703, 1034, 1034, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 704, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 705,
	0, 0, 706, 0, 0, 0, 0, 720, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 2347, 730, 0,
	1946, 1946, 0, 0, 0, 0, 4136, 0, 0, 0,
	0, 0, 260, 0, 260, 260, 0, 0, 260, 0,
	1290, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 1034, 0,
	0, 0, 0, 1946, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 1290, 260, 260, 0, 1290, 260,
	260, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 260, 0, 1946, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4482, 4482, 4482, 1290, 0, 1191, 1191, 0, 0, 0,
	0, 1208, 1208, 727, 0, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1290, 0,
	260, 260, 4503, 0, 1726, 1727, 0, 1759, 1760, 1761,
	1769, 1770, 1771, 728, 1208, 709, 0, 0, 1290, 0,
	708, 0, 0, 1290, 260, 260, 0, 1762, 1757, 0,
	0, 0, 0, 0, 0, 1729, 0, 1290, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 728, 0,
	709, 0, 729, 0, 0, 4482, 0, 0, 0, 710,
	0, 0, 0, 725, 726, 723, 0, 0, 0, 0,
	1728, 718, 0, 0, 711, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 729, 0, 1745,
	1290, 0, 0, 0, 710, 0, 0, 0, 725, 726,
	723, 0, 0, 0, 0, 0, 718, 0, 0, 711,
	0, 0, 0, 0, 0, 712, 0, 719, 0, 0,
	260, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	714, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	712, 0, 719, 0, 0, 0, 0, 0, 0, 731,
	0, 713, 0, 1751, 1752, 1753, 1754, 0, 0, 1197,
	716, 0, 0, 1734, 0, 714, 4482, 4628, 1208, 0,
	722, 1208, 0, 0, 0, 4632, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 716, 0, 0, 0, 1766,
	106, 0, 1776, 0, 0, 254, 254, 665, 1756, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 1772, 1191, 1773, 0, 0,
	0, 0, 1208, 0, 1743, 1744, 0, 0, 0, 0,
	0, 0, 0, 1208, 1208, 1208, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	106, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 1946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1290, 0, 0, 0, 260,
	260, 260, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 1290, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 1191, 0, 0,
	260, 1750, 0, 1208, 0, 1191, 0, 260, 0, 0,
	0, 1208, 0, 0, 0, 1208, 0, 1208, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 1208, 1208, 0, 1726, 1727,
	0, 0, 1290, 0, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 1208, 1290, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 1728, 0, 0, 0, 1208, 0,
	1208, 0, 0, 1208, 1748, 0, 0, 0, 0, 0,
	0, 0, 1208, 1745, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 1740, 1741, 1747, 1768, 1746, 1742, 0,
	1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0,
	0, 0, 1208, 1208, 106, 0, 0, 3540, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 3024, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 1208, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 0, 260, 1290, 1290, 260, 0, 1734, 0, 0,
	0, 1208, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 1208, 1208, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1758, 0, 0, 0, 0, 260, 0,
	0, 0, 260, 0, 1208, 0, 0, 260, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 1743, 1744,
	0, 0, 0, 0, 0, 1946, 0, 0, 0, 260,
	0, 260, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 1208, 1290, 1208, 1290, 0,
	1290, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1290, 1290, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 1290, 260, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 1290,
	0, 1290, 1290, 1290, 0, 0, 0, 0, 0, 0,
	1946, 0, 260, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 260, 0, 260,
	0, 260, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 1208, 1208, 0, 0, 0, 0, 258,
	258, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 790, 0, 0,
	0, 0, 1208, 0, 0, 1208, 0, 0, 0, 2414,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 790, 0, 1208, 1208, 0, 1253, 0, 1253, 1253,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 0, 1762, 1757, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 1340, 0, 0,
	1775, 0, 0, 1446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1728, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	1208, 1290, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 1746, 1742, 1204, 1739, 1737, 1738, 1730, 1731, 1732,
	1733, 1735, 1736, 0, 0, 106, 0, 0, 1566, 1567,
	0, 0, 0, 0, 1208, 0, 0, 1208, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 1208, 1208, 0, 0, 0, 0, 0, 0, 1751,
	1752, 1753, 1754, 0, 0, 0, 0, 0, 1208, 1734,
	0, 0, 0, 260, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 1726, 1727, 0, 1759,
	1760, 1761, 1769, 1770, 1771, 1766, 0, 0, 1776, 0,
	0, 0, 0, 0, 1756, 1758, 0, 0, 0, 1762,
	1757, 0, 0, 0, 1676, 0, 0, 1729, 0, 0,
	0, 1772, 0, 1773, 0, 260, 1775, 0, 0, 0,
	1743, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 106, 260, 0, 0, 260, 1764, 0,
	0, 260, 1728, 260, 0, 0, 0, 0, 0, 0,
	260, 260, 1748, 1749, 0, 0, 1290, 1290, 0, 0,
	260, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 1751, 1752, 1753, 1754, 0,
	0, 0, 260, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 1290,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 1766, 0, 1290, 1776, 0, 0, 0, 0, 0,
	1756, 1758, 0, 0, 260, 0, 0, 1750, 0, 0,
	1208, 0, 1208, 0, 0, 0, 0, 1772, 0, 1773,
	0, 0, 0, 0, 0, 0, 1743, 1744, 0, 0,
	0, 0, 260, 1767, 0, 1290, 0, 0, 0, 0,
	260, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1906, 1749,
	0, 0, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 1915, 0, 1446, 0, 0, 1290, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 0, 1253, 0, 0, 0, 0, 1763,
	260, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 1740,
	1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738, 1730,
	1731, 1732, 1733, 1735, 1736, 260, 260, 260, 260, 2436,
	0, 0, 0, 2437, 260, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 258, 258, 0, 0, 258, 260, 0, 0,
	0, 0, 0, 1750, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 258, 258, 0, 0, 258, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 258, 258, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 3085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 2177, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 1727, 2189, 1759, 1760,
	1761, 1769, 1770, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2201, 0, 2201, 0, 0, 1762, 1757,
	0, 2208, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 1728, 2177, 0, 0, 2233, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 1290,
	1745, 0, 0, 0, 0, 0, 2253, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 2266,
	0, 2268, 0, 2270, 0, 2272, 0, 2273, 0, 0,
	0, 0, 0, 0, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1290,
	1290, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	260, 260, 0, 0, 0, 0, 0, 2295, 0, 0,
	0, 0, 0, 0, 1751, 1752, 1753, 1754, 0, 0,
	0, 0, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0,
	1766, 0, 0, 1776, 0, 0, 0, 0, 0, 1756,
	1758, 0, 1762, 1757, 260, 260, 0, 1290, 260, 0,
	1729, 0, 0, 0, 0, 260, 1772, 0, 1773, 1775,
	0, 0, 0, 0, 0, 1743, 1744, 0, 0, 1290,
	260, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 1728, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 1290, 1749, 0,
	0, 1290, 0, 0, 1745, 0, 1890, 0, 1204, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 0, 258, 1890, 258,
	260, 1290, 0, 1290, 790, 0, 0, 1290, 0, 0,
	1774, 790, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 1290, 260, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 258, 0,
	0, 0, 0, 260, 0, 258, 0, 0, 1751, 1752,
	1753, 1754, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2624, 1290, 1290,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 1755, 0, 0, 1766, 0, 0, 1776, 0, 0,
	0, 1290, 0, 1756, 1758, 0, 0, 0, 0, 264,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 1773, 0, 0, 0, 0, 0, 0, 1743,
	1744, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	1290, 0, 260, 1290, 260, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2667, 0,
	0, 1253, 1749, 0, 0, 1253, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 782, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1290, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 1765,
	258, 0, 0, 790, 1740, 1741, 1747, 1768, 1746, 1742,
	0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 3084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 1446, 0, 0, 0, 258, 0, 0, 0,
	258, 0, 0, 0, 0, 258, 1750, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 258,
	0, 0, 1767, 0, 0, 258, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 2177, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 2941, 0, 0, 0, 0,
	0, 0, 790, 258, 0, 258, 0, 258, 0, 258,
	0, 258, 0, 0, 2951, 0, 2954, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 1740, 1741,
	1747, 1768, 1746, 1742, 0, 1739, 1737, 1738, 1730, 1731,
	1732, 1733, 1735, 1736, 0, 0, 0, 0, 0, 0,
	0, 258, 3081, 0, 0, 0, 0, 0, 0, 2979,
	1446, 2981, 1446, 0, 0, 0, 0, 0, 2987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 0, 3015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 0, 0, 1290, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 1290, 0, 0, 0, 0, 0, 1726, 1727,
	0, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1290, 1290, 1290,
	0, 1762, 1757, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 1290, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1290,
	0, 1204, 0, 260, 0, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 1728, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 1290,
	0, 258, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 0, 258, 0, 0, 258, 0, 1734, 0, 258,
	0, 258, 0, 0, 0, 0, 0, 0, 258, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1290,
	0, 1290, 0, 1766, 0, 0, 1776, 0, 0, 0,
	0, 0, 1756, 1758, 0, 0, 0, 1726, 1727, 1290,
	1290, 0, 0, 0, 1288, 0, 0, 0, 1290, 1772,
	1253, 1773, 0, 0, 1446, 1446, 0, 0, 1743, 1744,
	0, 1757, 0, 0, 258, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 1764, 258, 0, 0,
	0, 0, 0, 0, 0, 3275, 0, 0, 1346, 0,
	258, 1749, 1346, 0, 0, 0, 1288, 0, 0, 260,
	0, 0, 1290, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 1748, 1290, 260, 258, 1290, 260, 0,
	0, 0, 1745, 0, 0, 0, 1290, 1288, 3328, 3330,
	0, 0, 2189, 1774, 0, 0, 260, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1288, 0, 0, 0, 1290, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 1288, 1290, 0, 3017, 260, 1288, 258, 0,
	0, 0, 0, 0, 0, 1290, 260, 0, 0, 0,
	1290, 1288, 0, 0, 0, 0, 1751, 1752, 1753, 1754,
	0, 0, 0, 0, 0, 0, 1734, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1290, 1290, 1290, 0, 258,
	0, 0, 0, 0, 0, 1750, 3413, 0, 1290, 0,
	3417, 0, 0, 0, 1288, 0, 0, 0, 258, 0,
	258, 1756, 1758, 0, 0, 0, 0, 0, 258, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 1289, 1743, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 258, 258, 258, 0, 0, 0,
	3469, 0, 258, 0, 258, 0, 0, 0, 0, 1290,
	1749, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 1347, 0, 0, 0, 1289, 0,
	0, 0, 0, 0, 0, 258, 0, 1290, 0, 0,
	0, 0, 0, 258, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3509, 0, 1446, 1289,
	0, 0, 1765, 0, 0, 0, 0, 1740, 1741, 1747,
	1768, 1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732,
	1733, 1735, 1736, 0, 1289, 0, 0, 0, 0, 0,
	0, 3080, 0, 0, 3522, 1290, 0, 0, 0, 0,
	0, 0, 1290, 260, 1289, 0, 0, 1290, 1290, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1290, 0, 0, 1290,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 1204,
	1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733,
	1735, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 1890,
	260, 0, 0, 0, 0, 1290, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 1290, 1290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 258, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 258, 0, 0, 258, 0, 0, 260,
	0, 0, 0, 1890, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 258, 0,
	2189, 0, 0, 0, 0, 0, 0, 1288, 1288, 0,
	0, 2189, 1289, 0, 0, 0, 0, 1346, 0, 0,
	0, 3792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2189, 0, 0, 0, 0,
	3808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 0, 0, 1289, 0,
	258, 0, 0, 0, 258, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 3857, 0, 0,
	1288, 1204, 1288, 1347, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 1288, 1288, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771,
	258, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1757, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 258, 1289,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3994, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 0, 1289, 0, 1289, 0, 0, 2189,
	1751, 1752, 1753, 1754, 0, 0, 0, 0, 0, 0,
	1734, 0, 1289, 1289, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 0, 1289, 1289, 1289,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 1776,
	0, 0, 0, 0, 0, 1756, 1758, 0, 0, 0,
	2189, 0, 0, 1204, 1204, 0, 0, 0, 0, 0,
	4069, 0, 1772, 0, 1773, 0, 0, 0, 0, 0,
	0, 1743, 1744, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4168, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 258, 0, 2189, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 1346, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4284, 1446,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	1740, 1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738,
	1730, 1731, 1732, 1733, 1735, 1736, 0, 0, 0, 0,
	1288, 0, 0, 0, 3079, 0, 0, 0, 0, 0,
	0, 0, 1288, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 1289, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 918, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4371, 1204, 0, 0, 0, 940,
	0, 924, 923, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 925,
	0, 0, 0, 0, 928, 0, 0, 0, 0, 972,
	0, 0, 0, 0, 0, 1347, 0, 0, 937, 938,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 1890, 0,
	1890, 0, 0, 0, 965, 930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4424, 258, 0, 0,
	1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0,
	0, 1289, 931, 258, 0, 0, 258, 0, 0, 0,
	0, 963, 0, 1762, 1757, 0, 0, 0, 0, 0,
	0, 1729, 0, 4459, 258, 0, 0, 0, 0, 0,
	1775, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1289, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 933, 1728, 0, 0, 0,
	0, 1289, 0, 922, 258, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 258, 1745, 0, 0, 0, 0,
	0, 934, 935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4519, 0, 0, 0,
	942, 941, 0, 1890, 0, 0, 0, 0, 936, 0,
	0, 0, 951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	969, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	1752, 1753, 1754, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 1776, 0,
	0, 0, 0, 1346, 1756, 1758, 0, 0, 0, 0,
	0, 0, 0, 929, 0, 0, 971, 0, 1346, 0,
	0, 1772, 0, 1773, 0, 0, 0, 0, 0, 0,
	1743, 1744, 0, 0, 258, 0, 0, 0, 927, 1346,
	0, 0, 958, 959, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 1288, 1288, 961, 0, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 956, 0, 0,
	0, 0, 0, 0, 970, 952, 0, 945, 943, 0,
	948, 258, 0, 0, 0, 0, 949, 0, 0, 920,
	0, 967, 0, 0, 1288, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 921, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 960, 0, 950, 0, 0, 0,
	0, 1288, 947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 0, 1890, 1890, 0, 0, 0,
	0, 953, 0, 1288, 0, 1288, 0, 0, 0, 0,
	932, 0, 258, 258, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 955, 0, 1755, 0, 0, 0,
	0, 1288, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 1750, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 1288, 0, 1288, 0, 0,
	0, 1346, 0, 1767, 0, 1347, 0, 0, 782, 0,
	1890, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	1347, 0, 1890, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1288, 1288, 0, 0, 1890, 0, 258, 1890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 1289, 0, 0, 1740,
	1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738, 1730,
	1731, 1732, 1733, 1735, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 2437, 1346, 0, 0, 1346, 0, 0,
	0, 0, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 0, 1289, 0, 0,
	258, 0, 1726, 1727, 0, 1759, 1760, 1761, 1769, 1770,
	1771, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 0, 1762, 1757, 1289, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 258, 0, 0,
	0, 1346, 1775, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 0, 0, 0, 1289, 1346, 1289,
	0, 0, 0, 1347, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 1289, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1289, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 0,
	0, 1751, 1752, 1753, 1754, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 1890, 0, 1347, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	1776, 0, 1346, 0, 0, 0, 1756, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 1773, 0, 0, 0, 0,
	0, 0, 1743, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771,
	0, 0, 0, 1347, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1757, 0, 0, 0, 0,
	1347, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	1751, 1752, 1753, 1754, 0, 0, 1288, 0, 0, 0,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 1767, 0, 0, 0, 0,
	0, 1288, 1288, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 1288, 1776,
	0, 0, 0, 0, 0, 1756, 1758, 0, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 1346,
	0, 0, 1772, 0, 1773, 0, 0, 0, 0, 0,
	0, 1743, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 1740, 1741, 1747, 1768, 1746, 1742, 0, 1739, 1737,
	1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0, 0,
	0, 4415, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1289, 0,
	0, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 1288, 0, 0, 1755, 1289, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 1289, 1289, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1289, 1288, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 1346, 0, 1288, 0,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0,
	1288, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1757, 0, 0, 1288, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 1346,
	1775, 0, 0, 0, 1288, 1765, 0, 0, 0, 0,
	1740, 1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738,
	1730, 1731, 1732, 1733, 1735, 1736, 1728, 0, 0, 0,
	4411, 0, 0, 0, 0, 0, 1748, 0, 0, 1288,
	1288, 1288, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 1289, 1289, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	1752, 1753, 1754, 1346, 0, 1288, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1289, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 1347, 0,
	1289, 0, 0, 1289, 0, 1766, 0, 0, 1776, 0,
	0, 0, 1347, 0, 1756, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 1773, 0, 0, 0, 0, 0, 0,
	1743, 1744, 1289, 1289, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 1288, 0, 1764, 1289,
	0, 1288, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 1749, 0, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 1289, 1289, 1289, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 1755, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1288,
	0, 1347, 0, 0, 0, 0, 0, 0, 1289, 1288,
	1288, 0, 0, 1289, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 1740,
	1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738, 1730,
	1731, 1732, 1733, 1735, 1736, 0, 0, 0, 0, 4333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 1289, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 1349, 276, 277, 1350, 1351, 1352, 1289, 1353,
	611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 1358, 616, 288, 289, 290, 291, 292, 293, 1359,
	1360, 0, 294, 617, 618, 619, 1361, 295, 296, 620,
	1362, 1291, 1363, 297, 298, 299, 300, 301, 302, 303,
	0, 1364, 305, 306, 307, 304, 308, 1365, 309, 0,
	310, 311, 312, 313, 314, 315, 1366, 316, 317, 318,
	1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372,
	1373, 322, 323, 324, 325, 0, 326, 621, 622, 1374,
	330, 327, 328, 1375, 331, 329, 332, 1376, 333, 334,
	335, 1377, 1378, 336, 337, 338, 1379, 339, 340, 1380,
	341, 342, 343, 1381, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	1382, 265, 1383, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 1384, 362, 1385, 1386, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 1387, 374, 629, 1388, 630, 375, 1389,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 1390, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 1391, 1151, 390, 634, 635,
	1392, 636, 1393, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 1394, 404, 406, 405, 1395, 407, 638, 1156,
	408, 409, 1157, 1396, 410, 0, 0, 0, 411, 412,
	415, 1397, 1398, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 1399, 267, 1160,
	454, 455, 1400, 639, 456, 640, 458, 459, 1401, 0,
	460, 0, 1402, 1403, 462, 463, 464, 1404, 1405, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 1406, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 1407, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 1408,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	1409, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 1410, 539, 540, 538, 541, 542, 543,
	1411, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 1412, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 1413, 570, 571, 0, 567, 558,
	1414, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	1415, 580, 652, 653, 654, 655, 1416, 589, 1417, 581,
	582, 583, 656, 584, 657, 1418, 585, 586, 587, 588,
	0, 590, 591, 1419, 1420, 592, 593, 594, 596, 597,
	595, 598, 1421, 599, 1422, 0, 600, 601, 602, 658,
	659, 660, 1423, 604, 603, 605, 661, 1424, 1425, 1426,
	1427, 1428, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	2602, 0, 0, 0, 0, 0, 0, 0, 2603, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	3548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3550, 268, 270, 269, 271, 272, 273, 274, 275,
	1349, 276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354,
	1355, 1356, 1357, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 1358,
	616, 288, 289, 290, 291, 292, 293, 1359, 1360, 0,
	294, 617, 618, 619, 1361, 295, 296, 620, 1362, 1291,
	1363, 297, 298, 299, 300, 301, 302, 303, 0, 1364,
	305, 306, 307, 304, 308, 1365, 309, 0, 310, 311,
	312, 313, 314, 315, 1366, 316, 317, 318, 1149, 319,
	320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322,
	323, 324, 325, 0, 326, 621, 622, 1374, 330, 327,
	328, 1375, 331, 329, 332, 1376, 333, 334, 335, 1377,
	1378, 336, 337, 338, 1379, 339, 340, 1380, 341, 342,
	343, 1381, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 1382, 265,
	1383, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 1384, 362, 1385, 1386, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 1387, 374, 629, 1388, 630, 375, 1389, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	1390, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 1391, 1151, 390, 634, 635, 1392, 636,
	1393, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	1394, 404, 406, 405, 1395, 407, 638, 1156, 408, 409,
	1157, 1396, 410, 0, 0, 0, 411, 412, 415, 1397,
	1398, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 1399, 267, 1160, 454, 455,
	1400, 639, 456, 640, 458, 459, 1401, 0, 460, 0,
	1402, 1403, 462, 463, 464, 1404, 1405, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 1406, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 1407, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 1408, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 1409, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 1410, 539, 540, 538, 541, 542, 543, 1411, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 1412, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 1413, 570, 571, 0, 567, 558, 1414, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 1415, 580,
	652, 653, 654, 655, 1416, 589, 1417, 581, 582, 583,
	656, 584, 657, 1418, 585, 586, 587, 588, 0, 590,
	591, 1419, 1420, 592, 593, 594, 596, 597, 595, 598,
	1421, 599, 1422, 0, 600, 601, 602, 658, 659, 660,
	1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3928, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4119, 268, 270, 269, 271, 272, 273, 274, 275, 1349,
	276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355,
	1356, 1357, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 1358, 616,
	288, 289, 290, 291, 292, 293, 1359, 1360, 0, 294,
	617, 618, 619, 1361, 295, 296, 620, 1362, 1291, 1363,
	297, 298, 299, 300, 301, 302, 303, 0, 1364, 305,
	306, 307, 304, 308, 1365, 309, 0, 310, 311, 312,
	313, 314, 315, 1366, 316, 317, 318, 1149, 319, 320,
	321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323,
	324, 325, 0, 326, 621, 622, 1374, 330, 327, 328,
	1375, 331, 329, 332, 1376, 333, 334, 335, 1377, 1378,
	336, 337, 338, 1379, 339, 340, 1380, 341, 342, 343,
	1381, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 1382, 265, 1383,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 1384, 362, 1385, 1386, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	1387, 374, 629, 1388, 630, 375, 1389, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 1390,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 1391, 1151, 390, 634, 635, 1392, 636, 1393,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1394,
	404, 406, 405, 1395, 407, 638, 1156, 408, 409, 1157,
	1396, 410, 0, 0, 0, 411, 412, 415, 1397, 1398,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1399, 267, 1160, 454, 455, 1400,
	639, 456, 640, 458, 459, 1401, 0, 460, 0, 1402,
	1403, 462, 463, 464, 1404, 1405, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 1406, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	1407, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 1408, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 1409, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	1410, 539, 540, 538, 541, 542, 543, 1411, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 1412, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 1413, 570, 571, 0, 567, 558, 1414, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 1415, 580, 652,
	653, 654, 655, 1416, 589, 1417, 581, 582, 583, 656,
	584, 657, 1418, 585, 586, 587, 588, 0, 590, 591,
	1419, 1420, 592, 593, 594, 596, 597, 595, 598, 1421,
	599, 1422, 0, 600, 601, 602, 658, 659, 660, 1423,
	604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606,
	607, 662, 608, 609, 610, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4003, 268, 270, 269, 271, 272, 273, 274,
	275, 1349, 276, 277, 1350, 1351, 1352, 0, 1353, 611,
	1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	1358, 616, 288, 289, 290, 291, 292, 293, 1359, 1360,
	0, 294, 617, 618, 619, 1361, 295, 296, 620, 1362,
	1291, 1363, 297, 298, 299, 300, 301, 302, 303, 0,
	1364, 305, 306, 307, 304, 308, 1365, 309, 0, 310,
	311, 312, 313, 314, 315, 1366, 316, 317, 318, 1149,
	319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372, 1373,
	322, 323, 324, 325, 0, 326, 621, 622, 1374, 330,
	327, 328, 1375, 331, 329, 332, 1376, 333, 334, 335,
	1377, 1378, 336, 337, 338, 1379, 339, 340, 1380, 341,
	342, 343, 1381, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 1382,
	265, 1383, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 1384, 362, 1385, 1386, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 1387, 374, 629, 1388, 630, 375, 1389, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 1390, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 1391, 1151, 390, 634, 635, 1392,
	636, 1393, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 1394, 404, 406, 405, 1395, 407, 638, 1156, 408,
	409, 1157, 1396, 410, 0, 0, 0, 411, 412, 415,
	1397, 1398, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1399, 267, 1160, 454,
	455, 1400, 639, 456, 640, 458, 459, 1401, 0, 460,
	0, 1402, 1403, 462, 463, 464, 1404, 1405, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 1406, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 1407, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 1408, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 1409,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 1410, 539, 540, 538, 541, 542, 543, 1411,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 1412, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 1413, 570, 571, 0, 567, 558, 1414,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 1415,
	580, 652, 653, 654, 655, 1416, 589, 1417, 581, 582,
	583, 656, 584, 657, 1418, 585, 586, 587, 588, 0,
	590, 591, 1419, 1420, 592, 593, 594, 596, 597, 595,
	598, 1421, 599, 1422, 0, 600, 601, 602, 658, 659,
	660, 1423, 604, 603, 605, 661, 1424, 1425, 1426, 1427,
	1428, 606, 607, 662, 608, 609, 610, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3858, 268, 270, 269, 271, 272,
	273, 274, 275, 1349, 276, 277, 1350, 1351, 1352, 0,
	1353, 611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 1358, 616, 288, 289, 290, 291, 292, 293,
	1359, 1360, 0, 294, 617, 618, 619, 1361, 295, 296,
	620, 1362, 1291, 1363, 297, 298, 299, 300, 301, 302,
	303, 0, 1364, 305, 306, 307, 304, 308, 1365, 309,
	0, 310, 311, 312, 313, 314, 315, 1366, 316, 317,
	318, 1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371,
	1372, 1373, 322, 323, 324, 325, 0, 326, 621, 622,
	1374, 330, 327, 328, 1375, 331, 329, 332, 1376, 333,
	334, 335, 1377, 1378, 336, 337, 338, 1379, 339, 340,
	1380, 341, 342, 343, 1381, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 1382, 265, 1383, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 1384, 362, 1385, 1386,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 1387, 374, 629, 1388, 630, 375,
	1389, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 1390, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 1391, 1151, 390, 634,
	635, 1392, 636, 1393, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 1394, 404, 406, 405, 1395, 407, 638,
	1156, 408, 409, 1157, 1396, 410, 0, 0, 0, 411,
	412, 415, 1397, 1398, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1399, 267,
	1160, 454, 455, 1400, 639, 456, 640, 458, 459, 1401,
	0, 460, 0, 1402, 1403, 462, 463, 464, 1404, 1405,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 1406, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 1407, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	1408, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 1409, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 1410, 539, 540, 538, 541, 542,
	543, 1411, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 1412, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 1413, 570, 571, 0, 567,
	558, 1414, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 1415, 580, 652, 653, 654, 655, 1416, 589, 1417,
	581, 582, 583, 656, 584, 657, 1418, 585, 586, 587,
	588, 0, 590, 591, 1419, 1420, 592, 593, 594, 596,
	597, 595, 598, 1421, 599, 1422, 0, 600, 601, 602,
	658, 659, 660, 1423, 604, 603, 605, 661, 1424, 1425,
	1426, 1427, 1428, 606, 607, 662, 608, 609, 610, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3566, 268, 270, 269,
	271, 272, 273, 274, 275, 1349, 276, 277, 1350, 1351,
	1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 1358, 616, 288, 289, 290, 291,
	292, 293, 1359, 1360, 0, 294, 617, 618, 619, 1361,
	295, 296, 620, 1362, 1291, 1363, 297, 298, 299, 300,
	301, 302, 303, 0, 1364, 305, 306, 307, 304, 308,
	1365, 309, 0, 310, 311, 312, 313, 314, 315, 1366,
	316, 317, 318, 1149, 319, 320, 321, 1367, 1368, 1370,
	1369, 1371, 1372, 1373, 322, 323, 324, 325, 0, 326,
	621, 622, 1374, 330, 327, 328, 1375, 331, 329, 332,
	1376, 333, 334, 335, 1377, 1378, 336, 337, 338, 1379,
	339, 340, 1380, 341, 342, 343, 1381, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 1382, 265, 1383, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 1384, 362,
	1385, 1386, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 1387, 374, 629, 1388,
	630, 375, 1389, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 1390, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 1391, 1151,
	390, 634, 635, 1392, 636, 1393, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1394, 404, 406, 405, 1395,
	407, 638, 1156, 408, 409, 1157, 1396, 410, 0, 0,
	0, 411, 412, 415, 1397, 1398, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1399, 267, 1160, 454, 455, 1400, 639, 456, 640, 458,
	459, 1401, 0, 460, 0, 1402, 1403, 462, 463, 464,
	1404, 1405, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	1406, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 1407, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 1408, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 1409, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 1410, 539, 540, 538,
	541, 542, 543, 1411, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	1412, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 1413, 570, 571,
	0, 567, 558, 1414, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 1415, 580, 652, 653, 654, 655, 1416,
	589, 1417, 581, 582, 583, 656, 584, 657, 1418, 585,
	586, 587, 588, 0, 590, 591, 1419, 1420, 592, 593,
	594, 596, 597, 595, 598, 1421, 599, 1422, 0, 600,
	601, 602, 658, 659, 660, 1423, 604, 603, 605, 661,
	1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608, 609,
	610, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3398, 268,
	270, 269, 271, 272, 273, 274, 275, 1349, 276, 277,
	1350, 1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 1358, 616, 288, 289,
	290, 291, 292, 293, 1359, 1360, 0, 294, 617, 618,
	619, 1361, 295, 296, 620, 1362, 1291, 1363, 297, 298,
	299, 300, 301, 302, 303, 0, 1364, 305, 306, 307,
	304, 308, 1365, 309, 0, 310, 311, 312, 313, 314,
	315, 1366, 316, 317, 318, 1149, 319, 320, 321, 1367,
	1368, 1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325,
	0, 326, 621, 622, 1374, 330, 327, 328, 1375, 331,
	329, 332, 1376, 333, 334, 335, 1377, 1378, 336, 337,
	338, 1379, 339, 340, 1380, 341, 342, 343, 1381, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 1382, 265, 1383, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	1384, 362, 1385, 1386, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 1387, 374,
	629, 1388, 630, 375, 1389, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 1390, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	1391, 1151, 390, 634, 635, 1392, 636, 1393, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1394, 404, 406,
	405, 1395, 407, 638, 1156, 408, 409, 1157, 1396, 410,
	0, 0, 0, 411, 412, 415, 1397, 1398, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1399, 267, 1160, 454, 455, 1400, 639, 456,
	640, 458, 459, 1401, 0, 460, 0, 1402, 1403, 462,
	463, 464, 1404, 1405, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 1406, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 1407, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 1408, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 1409, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 1410, 539,
	540, 538, 541, 542, 543, 1411, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 1412, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 1413,
	570, 571, 0, 567, 558, 1414, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 1415, 580, 652, 653, 654,
	655, 1416, 589, 1417, 581, 582, 583, 656, 584, 657,
	1418, 585, 586, 587, 588, 0, 590, 591, 1419, 1420,
	592, 593, 594, 596, 597, 595, 598, 1421, 599, 1422,
	0, 600, 601, 602, 658, 659, 660, 1423, 604, 603,
	605, 661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662,
	608, 609, 610, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2460, 268, 270, 269, 271, 272, 273, 274, 275, 1349,
	276, 277, 1350, 1351, 1352, 0, 1353, 611, 1354, 1355,
	1356, 1357, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 1358, 616,
	288, 289, 290, 291, 292, 293, 1359, 1360, 0, 294,
	617, 618, 619, 1361, 295, 296, 620, 1362, 1291, 1363,
	297, 298, 299, 300, 301, 302, 303, 0, 1364, 305,
	306, 307, 304, 308, 1365, 309, 0, 310, 311, 312,
	313, 314, 315, 1366, 316, 317, 318, 1149, 319, 320,
	321, 1367, 1368, 1370, 1369, 1371, 1372, 1373, 322, 323,
	324, 325, 0, 326, 621, 622, 1374, 330, 327, 328,
	1375, 331, 329, 332, 1376, 333, 334, 335, 1377, 1378,
	336, 337, 338, 1379, 339, 340, 1380, 341, 342, 343,
	1381, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 1382, 265, 1383,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 1384, 362, 1385, 1386, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	1387, 374, 629, 1388, 630, 375, 1389, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 1390,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 1391, 1151, 390, 634, 635, 1392, 636, 1393,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 1394,
	404, 406, 405, 1395, 407, 638, 1156, 408, 409, 1157,
	1396, 410, 0, 0, 0, 411, 412, 415, 1397, 1398,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1399, 267, 1160, 454, 455, 1400,
	639, 456, 640, 458, 459, 1401, 0, 460, 0, 1402,
	1403, 462, 463, 464, 1404, 1405, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 1406, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	1407, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 1408, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 1409, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	1410, 539, 540, 538, 541, 542, 543, 1411, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 1412, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 1413, 570, 571, 0, 567, 558, 1414, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 1415, 580, 652,
	653, 654, 655, 1416, 589, 1417, 581, 582, 583, 656,
	584, 657, 1418, 585, 586, 587, 588, 0, 590, 591,
	1419, 1420, 592, 593, 594, 596, 597, 595, 598, 1421,
	599, 1422, 0, 600, 601, 602, 658, 659, 660, 1423,
	604, 603, 605, 661, 1424, 1425, 1426, 1427, 1428, 606,
	607, 662, 608, 609, 610, 1440, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2151, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 1349, 276, 277, 1350, 1351, 1352, 0, 1353,
	611, 1354, 1355, 1356, 1357, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 1358, 616, 288, 289, 290, 291, 292, 293, 1359,
	1360, 0, 294, 617, 618, 619, 1361, 295, 296, 620,
	1362, 1291, 1363, 297, 298, 299, 300, 301, 302, 303,
	0, 1364, 305, 306, 307, 304, 308, 1365, 309, 0,
	310, 311, 312, 313, 314, 315, 1366, 316, 317, 318,
	1149, 319, 320, 321, 1367, 1368, 1370, 1369, 1371, 1372,
	1373, 322, 323, 324, 325, 0, 326, 621, 622, 1374,
	330, 327, 328, 1375, 331, 329, 332, 1376, 333, 334,
	335, 1377, 1378, 336, 337, 338, 1379, 339, 340, 1380,
	341, 342, 343, 1381, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	1382, 265, 1383, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 1384, 362, 1385, 1386, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 1387, 374, 629, 1388, 630, 375, 1389,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 1390, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 1391, 1151, 390, 634, 635,
	1392, 636, 1393, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 1394, 404, 406, 405, 1395, 407, 638, 1156,
	408, 409, 1157, 1396, 410, 0, 0, 0, 411, 412,
	415, 1397, 1398, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 1399, 267, 1160,
	454, 455, 1400, 639, 456, 640, 458, 459, 1401, 0,
	460, 0, 1402, 1403, 462, 463, 464, 1404, 1405, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 1406, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 1407, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 1408,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	1409, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 1410, 539, 540, 538, 541, 542, 543,
	1411, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 1412, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 1413, 570, 571, 0, 567, 558,
	1414, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	1415, 580, 652, 653, 654, 655, 1416, 589, 1417, 581,
	582, 583, 656, 584, 657, 1418, 585, 586, 587, 588,
	0, 590, 591, 1419, 1420, 592, 593, 594, 596, 597,
	595, 598, 1421, 599, 1422, 0, 600, 601, 602, 658,
	659, 660, 1423, 604, 603, 605, 661, 1424, 1425, 1426,
	1427, 1428, 606, 607, 662, 608, 609, 610, 1341, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 1349, 276, 277, 1350, 1351,
	1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 1358, 616, 288, 289, 290, 291,
	292, 293, 1359, 1360, 0, 294, 617, 618, 619, 1361,
	295, 296, 620, 1362, 1291, 1363, 297, 298, 299, 300,
	301, 302, 303, 0, 1364, 305, 306, 307, 304, 308,
	1365, 309, 0, 310, 311, 312, 313, 314, 315, 1366,
	316, 317, 318, 1149, 319, 320, 321, 1367, 1368, 1370,
	1369, 1371, 1372, 1373, 322, 323, 324, 325, 0, 326,
	621, 622, 1374, 330, 327, 328, 1375, 331, 329, 332,
	1376, 333, 334, 335, 1377, 1378, 336, 337, 338, 1379,
	339, 340, 1380, 341, 342, 343, 1381, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 1382, 265, 1383, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 1384, 362,
	1385, 1386, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 1387, 374, 629, 1388,
	630, 375, 1389, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 1390, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 1391, 1151,
	390, 634, 635, 1392, 636, 1393, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 1394, 404, 406, 405, 1395,
	407, 638, 1156, 408, 409, 1157, 1396, 410, 0, 0,
	0, 411, 412, 415, 1397, 1398, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1399, 267, 1160, 454, 455, 1400, 639, 456, 640, 458,
	459, 1401, 0, 460, 0, 1402, 1403, 462, 463, 464,
	1404, 1405, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	1406, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 1407, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 1408, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 1409, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 1410, 539, 540, 538,
	541, 542, 543, 1411, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	1412, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 1413, 570, 571,
	0, 567, 558, 1414, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 1415, 580, 652, 653, 654, 655, 1416,
	589, 1417, 581, 582, 583, 656, 584, 657, 1418, 585,
	586, 587, 588, 0, 590, 591, 1419, 1420, 592, 593,
	594, 596, 597, 595, 598, 1421, 599, 1422, 0, 600,
	601, 602, 658, 659, 660, 1423, 604, 603, 605, 661,
	1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608, 609,
	610, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 1349, 276, 277, 1350,
	1351, 1352, 0, 1353, 611, 1354, 1355, 1356, 1357, 278,
	279, 1148, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 1358, 616, 288, 289, 290,
	291, 292, 293, 1359, 1360, 0, 294, 617, 618, 619,
	1361, 295, 296, 620, 1362, 1291, 1363, 297, 298, 299,
	300, 301, 302, 303, 0, 1364, 305, 306, 307, 304,
	308, 1365, 309, 0, 310, 311, 312, 313, 314, 315,
	1366, 316, 317, 318, 1149, 319, 320, 321, 1367, 1368,
	1370, 1369, 1371, 1372, 1373, 322, 323, 324, 325, 0,
	326, 621, 622, 1374, 330, 327, 328, 1375, 331, 329,
	332, 1376, 333, 334, 335, 1377, 1378, 336, 337, 338,
	1379, 339, 340, 1380, 341, 342, 343, 1381, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 1382, 265, 1383, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 1384,
	362, 1385, 1386, 1150, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 1387, 374, 629,
	1388, 630, 375, 1389, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 1152, 381, 382, 1390, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 1391,
	1151, 390, 634, 635, 1392, 636, 1393, 392, 393, 1153,
	637, 1154, 394, 395, 396, 1155, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 1394, 404, 406, 405,
	1395, 407, 638, 1156, 408, 409, 1157, 1396, 410, 0,
	0, 0, 411, 412, 415, 1397, 1398, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 1158, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 1159,
	444, 1399, 267, 1160, 454, 455, 1400, 639, 456, 640,
	458, 459, 1401, 0, 460, 0, 1402, 1403, 462, 463,
	464, 1404, 1405, 465, 466, 641, 1161, 467, 1162, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 1406, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 1407, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 1408, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 1409, 516, 517, 518, 1163, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 1410, 539, 540,
	538, 541, 542, 543, 1411, 544, 545, 528, 529, 546,
	547, 1164, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 1412, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 1413, 570,
	571, 0, 567, 558, 1414, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 1415, 580, 652, 653, 654, 655,
	1416, 589, 1417, 581, 582, 583, 656, 584, 657, 1418,
	585, 586, 587, 588, 0, 590, 591, 1419, 1420, 592,
	593, 594, 596, 597, 595, 598, 1421, 599, 1422, 0,
	600, 601, 602, 658, 659, 660, 1423, 604, 603, 605,
	661, 1424, 1425, 1426, 1427, 1428, 606, 607, 662, 608,
	609, 610, 2435, 0, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 2432,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 2433, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 2431,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 2434, 0, 0, 0, 0, 0, 0, 1068,
	2430, 0, 1030, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	227, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 229, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 1558, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 221, 606,
	607, 662, 608, 609, 610, 1043, 0, 222, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1801,
	1799, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 227, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 229, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 1558, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 221, 606, 607, 662,
	608, 609, 610, 1043, 0, 222, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1801, 3037, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 227, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 229, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 1558, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 221, 606, 607, 662, 608, 609,
	610, 1043, 0, 222, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1801, 1799, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 2563, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 2568,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 2564, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 2565,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1068, 0, 0, 2480, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1068, 2478, 0, 2477, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1068, 2475, 0, 2474, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1068, 2472, 0, 2471, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1068, 2469, 0, 1651, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 1650,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1068, 0, 0, 1033, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 1047, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 4436, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 1047, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 2349, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	2348, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 1047, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 4196, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 1047, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 3820,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1869, 0, 0, 0,
	0, 0, 0, 1068, 0, 0, 0, 1066, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 3544, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1869, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 0, 1066, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 2568, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	1799, 0, 2573, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 2571, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 2559, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 2548, 1066, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 2546, 1066, 2537, 2544, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 2540, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	2541, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 2542, 425, 2539, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 2543,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 2538, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 2534, 1066, 2537, 2544, 1057, 1058, 1054, 1055,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 2540, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	2541, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 2542, 425, 2539, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 2543,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 2538, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 1807, 0, 1068, 0, 0,
	0, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 2328, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1656, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1588, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1583, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1574, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1569, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1482, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1481, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1476, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1475, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1469, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	1293, 1066, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 4481, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 4480, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 1037, 1038, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 4479, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	1041, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 4481, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 1045, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 1042, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 1040, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	4480, 591, 0, 1046, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1043, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 0, 1037, 1038, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 1041, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 4138,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 1045, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 4139, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 1042, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 4137, 1052, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 1040, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 1046, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1043, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	1037, 1038, 1084, 1056, 1057, 1058, 3004, 3005, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 1160, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 590, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 1043, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 0, 1037, 1038,
	1084, 1056, 1057, 1058, 3002, 3003, 1067, 1068, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 1108, 1072, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 1121, 0,
	286, 1128, 287, 1127, 0, 1138, 288, 289, 290, 291,
	292, 293, 1074, 1107, 1041, 294, 1168, 1169, 619, 0,
	295, 296, 1114, 0, 1095, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 1098, 1096, 1097,
	1104, 1100, 1099, 1103, 322, 323, 324, 325, 1131, 326,
	1125, 1124, 1045, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 1116, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 1051,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	1139, 1140, 357, 1063, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 1123, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 1136, 1137, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 1146, 0,
	1073, 375, 0, 376, 377, 378, 379, 380, 1109, 1110,
	1113, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 1151,
	390, 1118, 1119, 0, 1079, 0, 392, 393, 1153, 1111,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 1147, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 1102, 1101, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	1042, 267, 1160, 454, 455, 1064, 1112, 456, 1126, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 1141, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 1142, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1122, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 1052, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 1105, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 1120, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 1167, 561,
	562, 563, 564, 565, 1143, 568, 569, 0, 570, 571,
	1040, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 1132, 1133, 1134, 1135, 0,
	589, 0, 581, 582, 583, 1144, 584, 1145, 1062, 585,
	586, 587, 588, 0, 590, 591, 0, 1046, 592, 593,
	594, 596, 597, 595, 598, 1106, 599, 0, 0, 600,
	601, 602, 658, 1129, 1166, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1043, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 0, 0, 0, 1037, 1038, 1084, 1056,
	1057, 1058, 1054, 1055, 1067, 1068, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 1108, 1072, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 1121, 0, 286, 1128,
	287, 1127, 0, 1138, 288, 289, 290, 291, 292, 293,
	1074, 1107, 1041, 294, 1168, 1169, 619, 0, 295, 296,
	1114, 0, 1095, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104, 1100,
	1099, 1103, 322, 323, 324, 325, 1131, 326, 1125, 1124,
	1045, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 1116, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 1051, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 1139, 1140,
	357, 1063, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 1123, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 1136, 1137, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 1146, 0, 1073, 375,
	0, 376, 377, 378, 379, 380, 1109, 1110, 1113, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 1151, 390, 1118,
	1119, 0, 1079, 0, 392, 393, 1153, 1111, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 1147,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 1102, 1101, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 1042, 267,
	1160, 454, 455, 1064, 1112, 456, 1126, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 1141, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 1142,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1122, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	1052, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 1105, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 1120, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 1167, 561, 562, 563,
	564, 565, 1143, 568, 569, 0, 570, 571, 1040, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 1132, 1133, 1134, 1135, 0, 589, 0,
	581, 582, 583, 1144, 584, 1145, 1062, 585, 586, 587,
	588, 0, 590, 591, 0, 1046, 592, 593, 594, 596,
	597, 595, 598, 1106, 599, 0, 0, 600, 601, 602,
	658, 1129, 1166, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1043,
	0, 0, 0, 0, 0, 0, 0, 1039, 0, 0,
	0, 0, 0, 0, 2336, 2337, 1084, 1056, 1057, 1058,
	1054, 1055, 1067, 1068, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 1108,
	1072, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 1121, 0, 286, 1128, 287, 1127,
	0, 1138, 288, 289, 290, 291, 292, 293, 1074, 1107,
	0, 294, 1168, 1169, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 1131, 326, 1125, 1124, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 1116, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 1051, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 1063,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 1123,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 1136, 1137, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 1073, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 1118, 1119, 0,
	1079, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 267, 1160, 454,
	455, 1064, 1112, 456, 1126, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1122, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 1052, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 1120, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 1167, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 1132, 1133, 1134, 1135, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 1062, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 658, 1129,
	1166, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 2556, 0, 0, 0, 0,
	0, 0, 2554, 2555, 1084, 1056, 1057, 1058, 1054, 1055,
	1067, 1068, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 1072, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 1121, 0, 286, 1128, 287, 1127, 0, 1138,
	288, 289, 290, 291, 292, 293, 1074, 1107, 0, 294,
	1168, 1169, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 1131, 326, 1125, 1124, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 1116, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 1051, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 1063, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 1123, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 1136,
	1137, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 1073, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 1118, 1119, 0, 1079, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 267, 1160, 454, 455, 1064,
	1112, 456, 1126, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 1122, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 2997, 2998, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 1120, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 1167, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 1132,
	1133, 1134, 1135, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 1062, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 1129, 1166, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 2048, 1084, 1056, 1057, 1058, 1054, 1055, 1067, 1068,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 1108, 1072, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 0,
	1121, 0, 286, 1128, 287, 1127, 0, 1138, 288, 289,
	290, 291, 292, 293, 1074, 1107, 1041, 294, 1168, 1169,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 4481, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	1131, 326, 1125, 1124, 1045, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 1116,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 1051, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 1063, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 1123, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 1136, 1137, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 1073, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 1118, 1119, 0, 1079, 0, 392, 393,
	0, 1111, 0, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 1042, 267, 0, 454, 455, 1064, 1112, 456,
	1126, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1122,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 1052, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 1120,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	1167, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 1040, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 1132, 1133, 1134,
	1135, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	1062, 585, 586, 587, 588, 0, 4480, 591, 0, 1046,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 1129, 1166, 0, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 1206, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	0, 1066, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1108, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 1107, 0,
	294, 617, 618, 619, 0, 295, 296, 1114, 0, 1095,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 1139, 1140, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 1146, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 1109, 1110, 1113, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 1111, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	1192, 404, 406, 405, 0, 407, 1147, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 1102,
	1101, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 267, 1160, 454, 455,
	0, 1112, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 1198, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 1141, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 1142, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 1200, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 227, 539, 540, 538, 541, 542, 543, 1105, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 1143,
	568, 569, 0, 570, 571, 0, 567, 558, 229, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	1144, 584, 1145, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	1106, 599, 0, 0, 600, 601, 602, 1558, 659, 660,
	0, 604, 603, 605, 661, 0, 1206, 0, 0, 221,
	606, 607, 662, 608, 609, 610, 0, 0, 222, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 1196, 1108,
	1893, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 1107,
	0, 294, 617, 618, 619, 0, 295, 296, 1114, 0,
	1095, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 1139, 1140, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 1146, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1109, 1110, 1113, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 1111, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 1192, 404, 406, 405, 0, 407, 1147, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	1102, 1101, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 267, 1160, 454,
	455, 0, 1112, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 1198, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 1141, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 1142, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 1200,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 227, 539, 540, 538, 541, 542, 543, 1105,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	1143, 568, 569, 0, 570, 571, 0, 567, 558, 229,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 1144, 584, 1145, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 1106, 599, 0, 0, 600, 601, 602, 1558, 659,
	660, 0, 604, 603, 605, 661, 0, 3181, 0, 1206,
	221, 606, 607, 662, 608, 609, 610, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 1196,
	0, 1893, 1108, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 1107, 0, 294, 617, 618, 619, 0, 295,
	296, 1114, 0, 1095, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 1098, 1096, 1097, 1104,
	1100, 1099, 1103, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 1139,
	1140, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 1146, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 1109, 1110, 1113,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 1111, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 1192, 404, 406, 405, 0, 407,
	1147, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 1102, 1101, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	267, 1160, 454, 455, 0, 1112, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 1198, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 1141, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	1142, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 1200, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 1105, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 1143, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 1144, 584, 1145, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 1106, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 0,
	1188, 0, 1206, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 1196, 0, 1194, 1108, 0, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 1107, 0, 294, 617, 618,
	619, 0, 295, 296, 1114, 0, 1095, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 1098,
	1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 1139, 1140, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	1146, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1109, 1110, 1113, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 1111, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 1192, 404, 406,
	405, 0, 407, 1147, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 1102, 1101, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 267, 1160, 454, 455, 0, 1112, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 1198, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	1141, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 1142, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 1200, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 1105, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 1143, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 1144, 584, 1145,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 1106, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 1206, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 1196, 1108, 1194, 0, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 1107, 0, 294, 617,
	618, 619, 0, 295, 296, 1114, 0, 1095, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 1139, 1140, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 1146, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 1109, 1110, 1113, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 1151, 390, 634, 635, 0, 636, 0, 392,
	393, 1153, 1111, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 1192, 404,
	406, 405, 0, 407, 1147, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 1102, 1101, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 267, 1160, 454, 455, 0, 1112,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 1198,
	462, 463, 464, 0, 0, 465, 466, 641, 1161, 467,
	1162, 1141, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 1142, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 1200, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 1105, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 1143, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 1144, 584,
	1145, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 1106, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 0, 1206, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 1196, 1108, 1194, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 1107, 0, 294,
	617, 618, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 267, 1160, 454, 455, 0,
	1112, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1206, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 1108, 0, 3978,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 1107, 0, 294,
	617, 618, 619, 0, 295, 296, 1114, 0, 1095, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 1139, 1140, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 1146, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1109, 1110, 1113, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 1111, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 1147, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 1102, 1101,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 267, 1160, 454, 455, 0,
	1112, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 1141, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 1142, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 1200, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1105, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 1143, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 1144,
	584, 1145, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 1106,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 1030, 0, 1286, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 1792,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 227, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	229, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 1558,
	659, 660, 0, 604, 603, 605, 661, 0, 1555, 0,
	1286, 221, 606, 607, 662, 608, 609, 610, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 183, 611, 0, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 1291, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 1151,
	390, 634, 635, 0, 636, 0, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	0, 0, 1160, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 227, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 229, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 1558, 659, 660, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 221, 606, 607, 662, 608, 609,
	610, 0, 0, 222, 0, 0, 0, 0, 0, 1286,
	1285, 0, 0, 0, 0, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 1285,
	0, 0, 0, 0, 1283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 1148, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 1291, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 1149, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	1150, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	1152, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 1151, 390, 634,
	635, 0, 636, 0, 392, 393, 1153, 637, 1154, 394,
	395, 396, 1155, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	1156, 408, 409, 1157, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 1158, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 1159, 444, 0, 0,
	1160, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 1161, 467, 1162, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 1163, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 1164, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 1286, 1285, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3463, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 2228, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 2143, 0, 0,
	0, 0, 2144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	1291, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 2142, 406, 405, 0, 407, 638, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 0, 1160, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 1285, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 1206, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 1108, 0,
	1564, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 1107, 0,
	294, 617, 618, 619, 0, 295, 296, 1114, 0, 1095,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 1098, 1096, 1097, 1104, 1100, 1099, 1103, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 1139, 1140, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 1146, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 1109, 1110, 1113, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 1111, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 1147, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 1102,
	1101, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 267, 1160, 454, 455,
	0, 1112, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 1141, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 1142, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 1105, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 1143,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	1144, 584, 1145, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	1106, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 1030, 0, 262, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 227, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	229, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 1558,
	659, 660, 0, 604, 603, 605, 661, 262, 0, 0,
	0, 221, 606, 607, 662, 608, 609, 610, 0, 0,
	222, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 183, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 262, 2911, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 1907, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 4637, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 0, 262, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 3414, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 0, 262, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 1552, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 262,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 2899,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 262, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 3569, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 873, 0, 781, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 2219,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 788, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 871, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	786, 572, 573, 574, 575, 576, 787, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 0, 779, 0,
	781, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 791, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 788, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 786, 572, 573, 574, 575, 576, 787,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 1944, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 0, 1950, 0, 286, 1940, 287, 1956, 0,
	1963, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 1966, 1967, 0, 0, 295, 296, 0, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 1131, 326, 1954, 1953, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 1116, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 0, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 1952, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	1961, 1962, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 0, 376, 377,
	378, 379, 380, 0, 0, 0, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 1947, 1948, 0, 1943,
	0, 392, 393, 1153, 0, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 0, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	0, 0, 456, 1955, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 0,
	1161, 467, 1162, 0, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 1937, 480,
	481, 482, 1938, 483, 484, 485, 0, 486, 0, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1951, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 0, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 1949, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 1965, 561, 562, 563, 564, 565, 0,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	1957, 1958, 1959, 1960, 0, 589, 0, 581, 582, 583,
	0, 584, 0, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 0, 1941, 1964,
	0, 604, 603, 605, 781, 0, 0, 0, 0, 0,
	606, 607, 0, 608, 609, 610, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1931, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	788, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 786, 572, 573,
	574, 575, 576, 787, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 781, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 791, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	788, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 2262, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 2263, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 786, 572, 573,
	574, 575, 576, 787, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 2264, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 2013, 0, 1286, 1980, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 791, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	1977, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	1978, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 1974, 0, 1286,
	1980, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1148,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 1291, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 1149, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 1977, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 1150, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 1152, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 1151, 390,
	634, 635, 0, 636, 0, 392, 393, 1153, 637, 1154,
	394, 395, 396, 1155, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 1156, 408, 409, 1157, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 1158, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 1159, 444, 0,
	0, 1160, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 1161, 467, 1162, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 1163, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 1978, 544, 545, 528, 529, 546, 547, 1164,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 781, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	788, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 1970, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 786, 572, 573,
	574, 575, 576, 787, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 1969, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 781, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 791, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	788, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 1923, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 786, 572, 573,
	574, 575, 576, 787, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 1922, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1286, 1980, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 791, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 1291, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 1977, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 0, 1160, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 1978, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1286, 1285, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 1148, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 1291,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 1149, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 1150, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 1152, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 1151, 390, 634, 635, 0, 636,
	0, 392, 393, 1153, 637, 1154, 394, 395, 396, 1155,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 1156, 408, 409,
	1157, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	1158, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 1159, 444, 0, 0, 1160, 454, 455,
	3763, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	1161, 467, 1162, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 1163, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 1164, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 1286, 1285, 0, 0,
	0, 0, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	1291, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 0, 1160, 454,
	455, 3385, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 262, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 0, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 619,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 265, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 266, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 439, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 267, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 533, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 542, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 652, 653, 654, 655,
	0, 589, 0, 581, 582, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 0, 0, 0, 0, 0, 606, 607, 662, 608,
	609, 610, 1608, 0, 1286, 1285, 0, 0, 0, 0,
	1283, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 1148, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 1291, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 1149, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 1607, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 1150, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 1152, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 1151, 390, 634, 635, 0, 636, 0,
	392, 393, 1153, 637, 1154, 394, 395, 396, 1155, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 1156, 408, 409, 1157,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 1158,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 1159, 444, 0, 0, 1160, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 1161,
	467, 1162, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 1606,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 1163, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 1605, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 1164, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 1526, 0, 1286, 1285, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 1525, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 1487, 0,
	1286, 1285, 0, 0, 0, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	1148, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 1291, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 1149, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 1150, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 1152, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 1151,
	390, 634, 635, 0, 636, 0, 392, 393, 1153, 637,
	1154, 394, 395, 396, 1155, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 1156, 408, 409, 1157, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 1158, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 1159, 444,
	0, 0, 1160, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 1161, 467, 1162, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 1163, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	1164, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 1455, 0, 1286, 1285, 0, 0, 0, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 1148, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 1291, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 1149, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 1150, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 1454, 632, 633, 457, 1152, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 1151, 390, 634, 635, 0, 636, 0, 392,
	393, 1153, 637, 1154, 394, 395, 396, 1155, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 1156, 408, 409, 1157, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 1158, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 1159, 444, 0, 0, 1160, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 1161, 467,
	1162, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	1163, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 1164, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 1280, 0, 1286, 1285, 0, 0,
	0, 0, 1283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 1148, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	1291, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 1149,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 1150, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1279, 632, 633, 457, 1152, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 1151, 390, 634, 635, 0,
	636, 0, 392, 393, 1153, 637, 1154, 394, 395, 396,
	1155, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 1156, 408,
	409, 1157, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 1158, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 1159, 444, 0, 0, 1160, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 1161, 467, 1162, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 1163, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 1164, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 0, 0, 0, 0,
	0, 606, 607, 662, 608, 609, 610, 1286, 1285, 0,
	0, 0, 0, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 1286, 1980, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 2020,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 1286, 1285, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 1148, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 1291, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	1149, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 1150,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 1152,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 1151, 390, 634, 635,
	0, 636, 0, 392, 393, 1153, 637, 1154, 394, 395,
	396, 1155, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 1156,
	408, 409, 1157, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 1158, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 1159, 444, 0, 0, 1160,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 1161, 467, 1162, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 1163, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 1164, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 1286, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 1148, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 1291, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 1149, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 1150, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 1152, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 1151, 390, 634, 635, 0, 636, 0, 392, 393,
	1153, 637, 1154, 394, 395, 396, 1155, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 1156, 408, 409, 1157, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 1158, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	1159, 444, 0, 0, 1160, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 1161, 467, 1162,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 1163,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 1164, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 2723, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 2720, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 2727, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 2924, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 2726, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	2921, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 2923, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 2920, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 2725, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 2922, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 2723, 295, 296, 620, 0, 0, 2717, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 2720, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 2727,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 2726, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	2716, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 2725, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 2724,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1678, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 1681, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 1679, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	1680, 603, 605, 661, 1433, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1435, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 1198, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1430, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1432, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 1198, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1337, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1339, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 1198, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	694, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 693, 273, 274, 275, 683, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 686, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 687, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 688, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 682, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 683,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 686, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	687, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	688, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 262,
	604, 603, 605, 661, 0, 0, 0, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 0,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 619, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 265, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 266, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 439, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	267, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 1198, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	533, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	542, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 652, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 262, 604, 603, 605, 661, 0,
	0, 0, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 3337, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 2869, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 2868, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 2234, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 265, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 266, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 267, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 2176, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 2182, 0, 262, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 2181, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 2169, 0, 262, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 265, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 2171, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	266, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 267, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	2139, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 1198, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1530, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1529, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1450, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1443, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1445, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1270, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1269, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1260, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 265, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	1259, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 266, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 267, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1257, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 265, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1256, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 266, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 267, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1252, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	265, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1251, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 266,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 267, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 664, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 265, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 266, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 267,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 253, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 3689, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 3690, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 3692, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 3693, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 3688,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 686, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 0,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 687, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 0, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 0, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 688, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 2271, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 2269, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 631, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 2267, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 2188, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	262, 604, 603, 605, 661, 0, 0, 0, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 265, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1999, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 266, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 267, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 262, 604, 603, 605, 661,
	0, 0, 0, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 268, 270, 269, 271, 272, 273, 274, 275,
	0, 276, 277, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 278, 279, 0, 280, 281, 282, 283,
	284, 285, 612, 613, 0, 286, 614, 287, 615, 0,
	616, 288, 289, 290, 291, 292, 293, 0, 0, 0,
	294, 617, 618, 619, 0, 295, 296, 620, 0, 0,
	0, 297, 298, 299, 300, 301, 302, 303, 0, 0,
	305, 306, 307, 304, 308, 0, 309, 0, 310, 311,
	312, 313, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 321, 0, 0, 0, 0, 0, 0, 0, 322,
	323, 324, 325, 0, 326, 621, 622, 0, 330, 327,
	328, 0, 331, 329, 332, 0, 333, 334, 335, 0,
	0, 336, 337, 338, 0, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 623, 346, 347, 348, 350, 352,
	349, 353, 354, 355, 356, 624, 625, 357, 0, 265,
	0, 0, 0, 0, 0, 358, 359, 360, 626, 0,
	0, 0, 361, 0, 362, 0, 0, 0, 363, 364,
	627, 628, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 629, 0, 630, 375, 0, 376, 377,
	378, 379, 380, 1993, 632, 633, 457, 0, 381, 382,
	0, 383, 384, 385, 386, 0, 0, 0, 266, 387,
	388, 389, 391, 0, 0, 390, 634, 635, 0, 636,
	0, 392, 393, 0, 637, 0, 394, 395, 396, 0,
	397, 0, 0, 0, 398, 399, 400, 401, 402, 403,
	0, 404, 406, 405, 0, 407, 638, 0, 408, 409,
	0, 0, 410, 0, 0, 0, 411, 412, 415, 0,
	0, 413, 414, 416, 417, 0, 418, 419, 421, 424,
	420, 422, 423, 425, 438, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 440, 0, 439,
	0, 441, 442, 443, 448, 450, 451, 446, 447, 449,
	452, 453, 445, 0, 444, 0, 267, 0, 454, 455,
	0, 639, 456, 640, 458, 459, 0, 0, 460, 0,
	0, 0, 462, 463, 464, 0, 0, 465, 466, 641,
	0, 467, 0, 642, 468, 469, 461, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 478, 479, 643, 480,
	481, 482, 644, 483, 484, 485, 645, 486, 646, 487,
	488, 0, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 647, 498, 500, 499, 501, 0, 502, 0,
	503, 504, 505, 0, 0, 0, 0, 506, 0, 508,
	509, 510, 511, 507, 512, 513, 514, 515, 0, 516,
	517, 518, 0, 519, 520, 521, 522, 648, 523, 0,
	524, 525, 531, 532, 526, 527, 533, 534, 535, 536,
	537, 0, 539, 540, 538, 541, 542, 543, 0, 544,
	545, 528, 529, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 649, 0, 554, 0, 555, 556, 557, 559,
	530, 560, 566, 650, 561, 562, 563, 564, 565, 651,
	568, 569, 0, 570, 571, 0, 567, 558, 0, 572,
	573, 574, 575, 576, 577, 578, 351, 579, 0, 580,
	652, 653, 654, 655, 0, 589, 0, 581, 582, 583,
	656, 584, 657, 0, 585, 586, 587, 588, 0, 590,
	591, 0, 0, 592, 593, 594, 596, 597, 595, 598,
	0, 599, 0, 0, 600, 601, 602, 658, 659, 660,
	0, 604, 603, 605, 661, 860, 0, 262, 0, 0,
	606, 607, 662, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 859, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 0, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 0, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	858, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 262, 604, 603, 605, 661, 0, 0, 0,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 2924, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 4043, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 262, 604, 603,
	605, 661, 0, 0, 0, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 268, 270, 269, 271, 272, 273,
	274, 275, 0, 276, 277, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 278, 279, 0, 280, 281,
	282, 283, 284, 285, 612, 613, 0, 286, 614, 287,
	615, 0, 616, 288, 289, 290, 291, 292, 293, 0,
	0, 0, 294, 617, 618, 619, 0, 295, 296, 620,
	0, 0, 0, 297, 298, 299, 300, 301, 302, 303,
	0, 0, 305, 306, 307, 304, 308, 0, 309, 0,
	310, 311, 312, 313, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 322, 323, 324, 325, 0, 326, 621, 622, 0,
	330, 327, 328, 0, 331, 329, 332, 0, 333, 334,
	335, 0, 0, 336, 337, 338, 0, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 623, 346, 347, 348,
	350, 352, 349, 353, 354, 355, 356, 624, 625, 357,
	0, 0, 0, 0, 0, 0, 0, 358, 359, 360,
	626, 0, 0, 0, 361, 0, 362, 0, 0, 0,
	363, 364, 627, 628, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 629, 0, 630, 375, 0,
	376, 377, 378, 379, 380, 631, 632, 633, 457, 0,
	381, 382, 0, 383, 384, 385, 386, 0, 0, 0,
	0, 387, 388, 389, 391, 0, 0, 390, 634, 635,
	0, 636, 0, 392, 393, 0, 637, 0, 394, 395,
	396, 0, 397, 0, 0, 0, 398, 399, 400, 401,
	402, 403, 0, 404, 406, 405, 0, 407, 638, 0,
	408, 409, 0, 0, 410, 0, 0, 0, 411, 412,
	415, 0, 0, 413, 414, 416, 417, 0, 418, 419,
	421, 424, 420, 422, 423, 425, 438, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 440,
	0, 439, 0, 441, 442, 443, 448, 450, 451, 446,
	447, 449, 452, 453, 445, 3948, 444, 0, 0, 0,
	454, 455, 0, 639, 456, 640, 458, 459, 0, 0,
	460, 0, 0, 0, 462, 463, 464, 0, 0, 465,
	466, 641, 0, 467, 0, 642, 468, 469, 461, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 478, 479,
	643, 480, 481, 482, 644, 483, 484, 485, 645, 486,
	646, 487, 488, 3950, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 647, 498, 500, 499, 501, 0,
	502, 0, 503, 504, 505, 0, 0, 0, 0, 506,
	0, 508, 509, 510, 511, 507, 512, 513, 514, 515,
	0, 516, 517, 518, 0, 519, 520, 521, 522, 648,
	523, 0, 524, 525, 531, 532, 526, 527, 533, 534,
	535, 536, 537, 0, 539, 540, 538, 541, 542, 543,
	0, 544, 545, 528, 529, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 649, 0, 554, 0, 555, 556,
	557, 559, 530, 560, 566, 650, 561, 562, 563, 564,
	565, 651, 568, 569, 0, 570, 571, 0, 567, 558,
	0, 572, 573, 574, 575, 576, 577, 578, 351, 579,
	0, 580, 652, 653, 654, 655, 0, 589, 0, 581,
	582, 583, 656, 584, 657, 0, 585, 586, 587, 588,
	0, 590, 591, 0, 0, 592, 593, 594, 596, 597,
	595, 598, 0, 599, 0, 0, 600, 601, 602, 658,
	659, 660, 0, 604, 603, 605, 661, 751, 0, 262,
	0, 0, 606, 607, 662, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 270, 269, 271,
	272, 273, 274, 275, 0, 276, 277, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 278, 279, 1307,
	280, 281, 282, 283, 284, 285, 612, 613, 0, 286,
	614, 287, 615, 0, 616, 288, 289, 290, 291, 292,
	293, 0, 0, 0, 294, 617, 618, 1305, 0, 295,
	296, 620, 0, 0, 0, 297, 298, 299, 300, 301,
	302, 303, 0, 0, 305, 306, 307, 304, 308, 0,
	309, 0, 310, 311, 312, 313, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 321, 0, 0, 0, 0,
	0, 0, 0, 322, 323, 324, 325, 0, 326, 621,
	622, 0, 330, 327, 328, 0, 331, 329, 332, 0,
	333, 334, 335, 0, 0, 336, 337, 338, 0, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 623, 346,
	347, 348, 350, 352, 349, 353, 354, 355, 356, 624,
	625, 357, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 360, 626, 0, 0, 0, 361, 0, 362, 0,
	0, 0, 363, 364, 627, 628, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 629, 0, 630,
	375, 0, 376, 377, 378, 379, 380, 631, 632, 633,
	457, 0, 381, 382, 0, 383, 384, 385, 386, 0,
	0, 0, 0, 387, 388, 389, 391, 0, 0, 390,
	634, 635, 0, 636, 0, 392, 393, 0, 637, 0,
	394, 395, 396, 0, 397, 0, 0, 0, 398, 399,
	400, 401, 402, 403, 0, 404, 406, 405, 0, 407,
	638, 0, 408, 409, 0, 0, 410, 0, 0, 0,
	411, 412, 415, 0, 0, 413, 414, 416, 417, 0,
	418, 419, 421, 424, 420, 422, 423, 425, 438, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 440, 0, 752, 0, 441, 442, 443, 448, 450,
	451, 446, 447, 449, 452, 453, 445, 0, 444, 0,
	0, 0, 454, 455, 0, 639, 456, 640, 458, 459,
	0, 0, 460, 0, 0, 0, 462, 463, 464, 0,
	0, 465, 466, 641, 0, 467, 0, 642, 468, 469,
	461, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	478, 479, 643, 480, 481, 482, 644, 483, 484, 485,
	645, 486, 646, 487, 488, 0, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 647, 498, 500, 499,
	501, 0, 502, 0, 503, 504, 505, 0, 0, 0,
	0, 506, 0, 508, 509, 510, 511, 507, 512, 513,
	514, 515, 0, 516, 517, 518, 0, 519, 520, 521,
	522, 648, 523, 0, 524, 525, 531, 532, 526, 527,
	748, 534, 535, 536, 537, 0, 539, 540, 538, 541,
	1308, 543, 0, 544, 545, 528, 529, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 649, 0, 554, 0,
	555, 556, 557, 559, 530, 560, 566, 650, 561, 562,
	563, 564, 565, 651, 568, 569, 0, 570, 571, 0,
	567, 558, 0, 572, 573, 574, 575, 576, 577, 578,
	351, 579, 0, 580, 747, 653, 654, 655, 0, 589,
	0, 581, 582, 583, 656, 584, 657, 0, 585, 586,
	587, 588, 0, 590, 591, 0, 0, 592, 593, 594,
	596, 597, 595, 598, 0, 599, 0, 0, 600, 601,
	602, 658, 659, 660, 0, 604, 603, 605, 661, 751,
	0, 262, 0, 0, 606, 607, 662, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 270,
	269, 271, 272, 273, 274, 275, 0, 276, 277, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 278,
	279, 1307, 280, 281, 282, 283, 284, 285, 612, 613,
	0, 286, 614, 287, 615, 0, 616, 288, 289, 290,
	291, 292, 293, 0, 0, 0, 294, 617, 618, 1305,
	0, 295, 296, 620, 0, 0, 0, 297, 298, 299,
	300, 301, 302, 303, 0, 0, 305, 306, 307, 304,
	308, 0, 309, 0, 310, 311, 312, 313, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 321, 0, 0,
	0, 0, 0, 0, 0, 322, 323, 324, 325, 0,
	326, 621, 622, 0, 330, 327, 328, 0, 331, 329,
	332, 0, 333, 334, 335, 0, 0, 336, 337, 338,
	0, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	623, 346, 347, 348, 350, 352, 349, 353, 354, 355,
	356, 624, 625, 357, 0, 0, 0, 0, 0, 0,
	0, 358, 359, 360, 626, 0, 0, 0, 361, 0,
	362, 0, 0, 0, 363, 364, 627, 628, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 629,
	0, 630, 375, 0, 376, 377, 378, 379, 380, 631,
	632, 633, 457, 0, 381, 382, 0, 383, 384, 385,
	386, 0, 0, 0, 0, 387, 388, 389, 391, 0,
	0, 390, 634, 635, 0, 636, 0, 392, 393, 0,
	637, 0, 394, 395, 396, 0, 397, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 0, 404, 406, 405,
	0, 407, 638, 0, 408, 409, 0, 0, 410, 0,
	0, 0, 411, 412, 415, 0, 0, 413, 414, 416,
	417, 0, 418, 419, 421, 424, 420, 422, 423, 425,
	438, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 440, 0, 752, 0, 441, 442, 443,
	448, 450, 451, 446, 447, 449, 452, 453, 445, 0,
	444, 0, 0, 0, 454, 455, 0, 639, 456, 640,
	458, 459, 0, 0, 460, 0, 0, 0, 462, 463,
	464, 0, 0, 465, 466, 641, 0, 467, 0, 642,
	468, 469, 461, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 478, 479, 643, 480, 481, 482, 644, 483,
	484, 485, 645, 486, 646, 487, 488, 0, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 647, 498,
	500, 499, 501, 0, 502, 0, 503, 504, 505, 0,
	0, 0, 0, 506, 0, 508, 509, 510, 511, 507,
	512, 513, 514, 515, 0, 516, 517, 518, 0, 519,
	520, 521, 522, 648, 523, 0, 524, 525, 531, 532,
	526, 527, 748, 534, 535, 536, 537, 0, 539, 540,
	538, 541, 1308, 543, 0, 544, 545, 528, 529, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 649, 0,
	554, 0, 555, 556, 557, 559, 530, 560, 566, 650,
	561, 562, 563, 564, 565, 651, 568, 569, 0, 570,
	571, 0, 567, 558, 0, 572, 573, 574, 575, 576,
	577, 578, 351, 579, 0, 580, 747, 653, 654, 655,
	0, 589, 0, 581, 1306, 583, 656, 584, 657, 0,
	585, 586, 587, 588, 0, 590, 591, 0, 0, 592,
	593, 594, 596, 597, 595, 598, 0, 599, 0, 0,
	600, 601, 602, 658, 659, 660, 0, 604, 603, 605,
	661, 673, 0, 262, 0, 0, 606, 607, 662, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 672, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 671, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 262, 2911, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 262, 4053, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 4312, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 4307,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	3731, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 2608, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 0, 604,
	603, 605, 661, 262, 2911, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 2908, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 2244, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 2232, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	751, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 741, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 752, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 748, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 1563, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 747, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1536, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 1535, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1520, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1518, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1514, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 1491, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 296, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 309, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 1489, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 412, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 439, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 648, 523, 0, 524, 525, 531, 532, 526,
	527, 533, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 542, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 652, 653, 654, 655, 0,
	589, 0, 581, 582, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	1452, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 531,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 1438, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 1275, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 1274, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 1266, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1265, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 1219, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 757, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 751, 0,
	262, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 270, 269,
	271, 272, 273, 274, 275, 0, 276, 277, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 278, 279,
	0, 280, 281, 282, 283, 284, 285, 612, 613, 0,
	286, 614, 287, 615, 0, 616, 288, 289, 290, 291,
	292, 293, 0, 0, 0, 294, 617, 618, 619, 0,
	295, 741, 620, 0, 0, 0, 297, 298, 299, 300,
	301, 302, 303, 0, 0, 305, 306, 307, 304, 308,
	0, 739, 0, 310, 311, 312, 313, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 321, 0, 0, 0,
	0, 0, 0, 0, 322, 323, 324, 325, 0, 326,
	621, 622, 0, 330, 327, 328, 0, 331, 329, 332,
	0, 333, 334, 335, 0, 0, 336, 337, 338, 0,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 623,
	346, 347, 348, 350, 352, 349, 353, 354, 355, 356,
	624, 625, 357, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 360, 626, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 363, 364, 627, 628, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 629, 0,
	630, 375, 0, 376, 377, 378, 379, 380, 631, 632,
	633, 457, 0, 381, 382, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 391, 0, 0,
	390, 634, 635, 0, 636, 0, 392, 393, 0, 637,
	0, 394, 395, 396, 0, 397, 0, 0, 0, 398,
	399, 400, 401, 402, 403, 0, 404, 406, 405, 0,
	407, 638, 0, 408, 409, 0, 0, 410, 0, 0,
	0, 411, 740, 415, 0, 0, 413, 414, 416, 417,
	0, 418, 419, 421, 424, 420, 422, 423, 425, 438,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 440, 0, 752, 0, 441, 442, 443, 448,
	450, 451, 446, 447, 449, 452, 453, 445, 0, 444,
	0, 0, 0, 454, 455, 0, 639, 456, 640, 458,
	459, 0, 0, 460, 0, 0, 0, 462, 463, 464,
	0, 0, 465, 466, 641, 0, 467, 0, 642, 468,
	469, 461, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 478, 479, 643, 480, 481, 482, 644, 483, 484,
	485, 645, 486, 646, 487, 488, 0, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 647, 498, 500,
	499, 501, 0, 502, 0, 503, 504, 505, 0, 0,
	0, 0, 506, 0, 508, 509, 510, 511, 507, 512,
	513, 514, 515, 0, 516, 517, 518, 0, 519, 520,
	521, 522, 742, 523, 0, 524, 525, 531, 532, 526,
	527, 748, 534, 535, 536, 537, 0, 539, 540, 538,
	541, 743, 543, 0, 544, 545, 528, 529, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 649, 0, 554,
	0, 555, 556, 557, 559, 530, 560, 566, 650, 561,
	562, 563, 564, 565, 651, 568, 569, 0, 570, 571,
	0, 567, 558, 0, 572, 573, 574, 575, 576, 577,
	578, 351, 579, 0, 580, 747, 653, 654, 655, 0,
	589, 0, 581, 745, 583, 656, 584, 657, 0, 585,
	586, 587, 588, 0, 590, 591, 0, 0, 592, 593,
	594, 596, 597, 595, 598, 0, 599, 0, 0, 600,
	601, 602, 658, 659, 660, 0, 604, 603, 605, 661,
	733, 0, 262, 0, 0, 606, 607, 662, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	270, 269, 271, 272, 273, 274, 275, 0, 276, 277,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	278, 279, 0, 280, 281, 282, 283, 284, 285, 612,
	613, 0, 286, 614, 287, 615, 0, 616, 288, 289,
	290, 291, 292, 293, 0, 0, 0, 294, 617, 618,
	619, 0, 295, 296, 620, 0, 0, 0, 297, 298,
	299, 300, 301, 302, 303, 0, 0, 305, 306, 307,
	304, 308, 0, 309, 0, 310, 311, 312, 313, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 321, 0,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 325,
	0, 326, 621, 622, 0, 330, 327, 328, 0, 331,
	329, 332, 0, 333, 334, 335, 0, 0, 336, 337,
	338, 0, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 623, 346, 347, 348, 350, 352, 349, 353, 354,
	355, 356, 624, 625, 357, 0, 0, 0, 0, 0,
	0, 0, 358, 359, 360, 626, 0, 0, 0, 361,
	0, 362, 0, 0, 0, 363, 364, 627, 628, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	629, 0, 630, 375, 0, 376, 377, 378, 379, 380,
	631, 632, 633, 457, 0, 381, 382, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 391,
	0, 0, 390, 634, 635, 0, 636, 0, 392, 393,
	0, 637, 0, 394, 395, 396, 0, 397, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 0, 404, 406,
	405, 0, 407, 638, 0, 408, 409, 0, 0, 410,
	0, 0, 0, 411, 412, 415, 0, 0, 413, 414,
	416, 417, 0, 418, 419, 421, 424, 420, 422, 423,
	425, 438, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 440, 0, 439, 0, 441, 442,
	443, 448, 450, 451, 446, 447, 449, 452, 453, 445,
	0, 444, 0, 0, 0, 454, 455, 0, 639, 456,
	640, 458, 459, 0, 0, 460, 0, 0, 0, 462,
	463, 464, 0, 0, 465, 466, 641, 0, 467, 0,
	642, 468, 469, 461, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 478, 479, 643, 480, 481, 482, 644,
	483, 484, 485, 645, 486, 646, 487, 488, 0, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 647,
	498, 500, 499, 501, 0, 502, 0, 503, 504, 505,
	0, 0, 0, 0, 506, 0, 508, 509, 510, 511,
	507, 512, 513, 514, 515, 0, 516, 517, 518, 0,
	519, 520, 521, 522, 648, 523, 0, 524, 525, 734,
	532, 526, 527, 533, 534, 535, 536, 537, 0, 539,
	540, 538, 541, 542, 543, 0, 544, 545, 528, 529,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 649,
	0, 554, 0, 555, 556, 557, 559, 530, 560, 566,
	650, 561, 562, 563, 564, 565, 651, 568, 569, 0,
	570, 571, 0, 567, 558, 0, 572, 573, 574, 575,
	576, 577, 578, 351, 579, 0, 580, 652, 653, 654,
	655, 0, 589, 0, 581, 582, 583, 656, 584, 657,
	0, 585, 586, 587, 588, 0, 590, 591, 0, 0,
	592, 593, 594, 596, 597, 595, 598, 0, 599, 0,
	0, 600, 601, 602, 658, 659, 660, 0, 604, 603,
	605, 661, 696, 0, 262, 0, 0, 606, 607, 662,
	608, 609, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 270, 269, 271, 272, 273, 274, 275, 0,
	276, 277, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 278, 279, 0, 280, 281, 282, 283, 284,
	285, 612, 613, 0, 286, 614, 287, 615, 0, 616,
	288, 289, 290, 291, 292, 293, 0, 0, 0, 294,
	617, 618, 619, 0, 295, 296, 620, 0, 0, 0,
	297, 298, 299, 300, 301, 302, 303, 0, 0, 305,
	306, 307, 304, 308, 0, 309, 0, 310, 311, 312,
	313, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	321, 0, 0, 0, 0, 0, 0, 0, 322, 323,
	324, 325, 0, 326, 621, 622, 0, 330, 327, 328,
	0, 331, 329, 332, 0, 333, 334, 335, 0, 0,
	336, 337, 338, 0, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 623, 346, 347, 348, 350, 352, 349,
	353, 354, 355, 356, 624, 625, 357, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 360, 626, 0, 0,
	0, 361, 0, 362, 0, 0, 0, 363, 364, 627,
	628, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 629, 0, 630, 375, 0, 376, 377, 378,
	379, 380, 631, 632, 633, 457, 0, 381, 382, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 391, 0, 0, 390, 634, 635, 0, 636, 0,
	392, 393, 0, 637, 0, 394, 395, 396, 0, 397,
	0, 0, 0, 398, 399, 400, 401, 402, 403, 0,
	404, 406, 405, 0, 407, 638, 0, 408, 409, 0,
	0, 410, 0, 0, 0, 411, 412, 415, 0, 0,
	413, 414, 416, 417, 0, 418, 419, 421, 424, 420,
	422, 423, 425, 438, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 440, 0, 439, 0,
	441, 442, 443, 448, 450, 451, 446, 447, 449, 452,
	453, 445, 0, 444, 0, 0, 0, 454, 455, 0,
	639, 456, 640, 458, 459, 0, 0, 460, 0, 0,
	0, 462, 463, 464, 0, 0, 465, 466, 641, 0,
	467, 0, 642, 468, 469, 461, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 478, 479, 643, 480, 481,
	482, 644, 483, 484, 485, 645, 486, 646, 487, 488,
	0, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 647, 498, 500, 499, 501, 0, 502, 0, 503,
	504, 505, 0, 0, 0, 0, 506, 0, 508, 509,
	510, 511, 507, 512, 513, 514, 515, 0, 516, 517,
	518, 0, 519, 520, 521, 522, 648, 523, 0, 524,
	525, 531, 532, 526, 527, 533, 534, 535, 536, 537,
	0, 539, 540, 538, 541, 542, 543, 0, 544, 545,
	528, 529, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 649, 0, 554, 0, 555, 556, 557, 559, 530,
	560, 566, 650, 561, 562, 563, 564, 565, 651, 568,
	569, 0, 570, 571, 0, 567, 558, 0, 572, 573,
	574, 575, 576, 577, 578, 351, 579, 0, 580, 652,
	653, 654, 655, 0, 589, 0, 581, 582, 583, 656,
	584, 657, 0, 585, 586, 587, 588, 0, 590, 591,
	0, 0, 592, 593, 594, 596, 597, 595, 598, 0,
	599, 0, 0, 600, 601, 602, 658, 659, 660, 0,
	604, 603, 605, 661, 690, 0, 262, 0, 0, 606,
	607, 662, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 270, 269, 271, 272, 273, 274,
	275, 0, 276, 277, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 278, 279, 0, 280, 281, 282,
	283, 284, 285, 612, 613, 0, 286, 614, 287, 615,
	0, 616, 288, 289, 290, 291, 292, 293, 0, 0,
	0, 294, 617, 618, 619, 0, 295, 296, 620, 0,
	0, 0, 297, 298, 299, 300, 301, 302, 303, 0,
	0, 305, 306, 307, 304, 308, 0, 309, 0, 310,
	311, 312, 313, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 321, 0, 0, 0, 0, 0, 0, 0,
	322, 323, 324, 325, 0, 326, 621, 622, 0, 330,
	327, 328, 0, 331, 329, 332, 0, 333, 334, 335,
	0, 0, 336, 337, 338, 0, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 623, 346, 347, 348, 350,
	352, 349, 353, 354, 355, 356, 624, 625, 357, 0,
	0, 0, 0, 0, 0, 0, 358, 359, 360, 626,
	0, 0, 0, 361, 0, 362, 0, 0, 0, 363,
	364, 627, 628, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 629, 0, 630, 375, 0, 376,
	377, 378, 379, 380, 631, 632, 633, 457, 0, 381,
	382, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 391, 0, 0, 390, 634, 635, 0,
	636, 0, 392, 393, 0, 637, 0, 394, 395, 396,
	0, 397, 0, 0, 0, 398, 399, 400, 401, 402,
	403, 0, 404, 406, 405, 0, 407, 638, 0, 408,
	409, 0, 0, 410, 0, 0, 0, 411, 412, 415,
	0, 0, 413, 414, 416, 417, 0, 418, 419, 421,
	424, 420, 422, 423, 425, 438, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 440, 0,
	439, 0, 441, 442, 443, 448, 450, 451, 446, 447,
	449, 452, 453, 445, 0, 444, 0, 0, 0, 454,
	455, 0, 639, 456, 640, 458, 459, 0, 0, 460,
	0, 0, 0, 462, 463, 464, 0, 0, 465, 466,
	641, 0, 467, 0, 642, 468, 469, 461, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 478, 479, 643,
	480, 481, 482, 644, 483, 484, 485, 645, 486, 646,
	487, 488, 0, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 647, 498, 500, 499, 501, 0, 502,
	0, 503, 504, 505, 0, 0, 0, 0, 506, 0,
	508, 509, 510, 511, 507, 512, 513, 514, 515, 0,
	516, 517, 518, 0, 519, 520, 521, 522, 648, 523,
	0, 524, 525, 531, 532, 526, 527, 533, 534, 535,
	536, 537, 0, 539, 540, 538, 541, 542, 543, 0,
	544, 545, 528, 529, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 649, 0, 554, 0, 555, 556, 557,
	559, 530, 560, 566, 650, 561, 562, 563, 564, 565,
	651, 568, 569, 0, 570, 571, 0, 567, 558, 0,
	572, 573, 574, 575, 576, 577, 578, 351, 579, 0,
	580, 652, 653, 654, 655, 0, 589, 0, 581, 582,
	583, 656, 584, 657, 0, 585, 586, 587, 588, 0,
	590, 591, 0, 0, 592, 593, 594, 596, 597, 595,
	598, 0, 599, 0, 0, 600, 601, 602, 658, 659,
	660, 0, 604, 603, 605, 661, 668, 0, 262, 0,
	0, 606, 607, 662, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 3433, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 3371, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 3304, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 3302, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 3287, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 2879, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 734, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 2206, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 500, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 0, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 375,
	0, 376, 377, 378, 379, 380, 1237, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 523, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 262, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 0,
	268, 270, 269, 271, 272, 273, 274, 275, 0, 276,
	277, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 278, 279, 0, 280, 281, 282, 283, 284, 285,
	612, 613, 0, 286, 614, 287, 615, 0, 616, 288,
	289, 290, 291, 292, 293, 0, 0, 0, 294, 617,
	618, 619, 0, 295, 296, 620, 0, 0, 0, 297,
	298, 299, 300, 301, 302, 303, 0, 0, 305, 306,
	307, 304, 308, 0, 309, 0, 310, 311, 312, 313,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 322, 323, 324,
	325, 0, 326, 621, 622, 0, 330, 327, 328, 0,
	331, 329, 332, 0, 333, 334, 335, 0, 0, 336,
	337, 338, 0, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 623, 346, 347, 348, 350, 352, 349, 353,
	354, 355, 356, 624, 625, 357, 0, 0, 0, 0,
	0, 0, 0, 358, 359, 360, 626, 0, 0, 0,
	361, 0, 362, 0, 0, 0, 363, 364, 627, 628,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 629, 0, 630, 375, 0, 376, 377, 378, 379,
	380, 631, 632, 633, 457, 0, 381, 382, 0, 383,
	384, 385, 386, 0, 0, 0, 0, 387, 388, 389,
	391, 0, 0, 390, 634, 635, 0, 636, 0, 392,
	393, 0, 637, 0, 394, 395, 396, 0, 397, 0,
	0, 0, 398, 399, 400, 401, 402, 403, 0, 404,
	406, 405, 0, 407, 638, 0, 408, 409, 0, 0,
	410, 0, 0, 0, 411, 412, 415, 0, 0, 413,
	414, 416, 417, 0, 418, 419, 421, 424, 420, 422,
	423, 425, 438, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 440, 0, 439, 0, 441,
	442, 443, 448, 450, 451, 446, 447, 449, 452, 453,
	445, 0, 444, 0, 0, 0, 454, 455, 0, 639,
	456, 640, 458, 459, 0, 0, 460, 0, 0, 0,
	462, 463, 464, 0, 0, 465, 466, 641, 0, 467,
	0, 642, 468, 469, 461, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 478, 479, 643, 480, 481, 482,
	644, 483, 484, 485, 645, 486, 646, 487, 488, 0,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	647, 498, 1171, 499, 501, 0, 502, 0, 503, 504,
	505, 0, 0, 0, 0, 506, 0, 508, 509, 510,
	511, 507, 512, 513, 514, 515, 0, 516, 517, 518,
	0, 519, 520, 521, 522, 648, 523, 0, 524, 525,
	531, 532, 526, 527, 533, 534, 535, 536, 537, 0,
	539, 540, 538, 541, 542, 543, 0, 544, 545, 528,
	529, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	649, 0, 554, 0, 555, 556, 557, 559, 530, 560,
	566, 650, 561, 562, 563, 564, 565, 651, 568, 569,
	0, 570, 571, 0, 567, 558, 0, 572, 573, 574,
	575, 576, 577, 578, 351, 579, 0, 580, 652, 653,
	654, 655, 0, 589, 0, 581, 582, 583, 656, 584,
	657, 0, 585, 586, 587, 588, 0, 590, 591, 0,
	0, 592, 593, 594, 596, 597, 595, 598, 0, 599,
	0, 0, 600, 601, 602, 658, 659, 660, 262, 604,
	603, 605, 661, 0, 0, 0, 0, 0, 606, 607,
	662, 608, 609, 610, 0, 268, 270, 269, 271, 272,
	273, 274, 275, 0, 276, 277, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 278, 279, 0, 280,
	281, 282, 283, 284, 285, 612, 613, 0, 286, 614,
	287, 615, 0, 616, 288, 289, 290, 291, 292, 293,
	0, 0, 0, 294, 617, 618, 619, 0, 295, 296,
	620, 0, 0, 0, 297, 298, 299, 300, 301, 302,
	303, 0, 0, 305, 306, 307, 304, 308, 0, 309,
	0, 310, 311, 312, 313, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 321, 0, 0, 0, 0, 0,
	0, 0, 322, 323, 324, 325, 0, 326, 621, 622,
	0, 330, 327, 328, 0, 331, 329, 332, 0, 333,
	334, 335, 0, 0, 336, 337, 338, 0, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 623, 346, 347,
	348, 350, 352, 349, 353, 354, 355, 356, 624, 625,
	357, 0, 0, 0, 0, 0, 0, 0, 358, 359,
	360, 626, 0, 0, 0, 361, 0, 362, 0, 0,
	0, 363, 364, 627, 628, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 629, 0, 630, 0,
	0, 376, 377, 378, 379, 380, 631, 632, 633, 457,
	0, 381, 382, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 391, 0, 0, 390, 634,
	635, 0, 636, 0, 392, 393, 0, 637, 0, 394,
	395, 396, 0, 397, 0, 0, 0, 398, 399, 400,
	401, 402, 403, 0, 404, 406, 405, 0, 407, 638,
	0, 408, 409, 0, 0, 410, 0, 0, 0, 411,
	412, 415, 0, 0, 413, 414, 416, 417, 0, 418,
	419, 421, 424, 420, 422, 423, 425, 438, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	440, 0, 439, 0, 441, 442, 443, 448, 450, 451,
	446, 447, 449, 452, 453, 445, 0, 444, 0, 0,
	0, 454, 455, 0, 639, 456, 640, 458, 459, 0,
	0, 460, 0, 0, 0, 462, 463, 464, 0, 0,
	465, 466, 641, 0, 467, 0, 642, 468, 469, 461,
	470, 471, 0, 473, 474, 475, 476, 477, 0, 478,
	479, 643, 480, 481, 482, 644, 483, 484, 485, 645,
	486, 646, 487, 488, 0, 489, 490, 0, 491, 492,
	493, 494, 0, 496, 497, 647, 498, 500, 499, 501,
	0, 502, 0, 503, 504, 505, 0, 0, 0, 0,
	506, 0, 508, 509, 510, 511, 507, 512, 513, 514,
	515, 0, 516, 517, 518, 0, 519, 520, 521, 522,
	648, 0, 0, 524, 525, 531, 532, 526, 527, 533,
	534, 535, 536, 537, 0, 539, 540, 538, 541, 542,
	543, 0, 544, 545, 528, 529, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 649, 0, 554, 0, 555,
	556, 557, 559, 530, 560, 566, 650, 561, 562, 563,
	564, 565, 651, 568, 569, 0, 570, 571, 0, 567,
	558, 0, 572, 573, 574, 575, 576, 577, 578, 351,
	579, 0, 580, 652, 653, 654, 655, 0, 589, 0,
	581, 582, 583, 656, 584, 657, 0, 585, 586, 587,
	588, 0, 590, 591, 0, 0, 592, 593, 594, 596,
	597, 595, 598, 0, 599, 0, 0, 600, 601, 602,
	658, 659, 660, 0, 604, 603, 605, 661, 0, 0,
	0, 0, 0, 606, 607, 662, 608, 609, 610, 1726,
	1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 1757, 0, 0, 0, 0, 1726, 1727,
	1729, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 1757, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 1728, 1726, 1727, 1775, 1759,
	1760, 1761, 1769, 1770, 1771, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 1762,
	1757, 0, 0, 0, 1728, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 1748, 0, 1775, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 1751, 1752,
	1753, 1754, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 1776, 0, 0,
	0, 0, 0, 1756, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 1752, 1753, 1754, 0,
	1772, 0, 1773, 1766, 0, 1734, 1776, 0, 0, 1743,
	1744, 0, 1756, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 1772,
	0, 1773, 0, 0, 0, 0, 0, 0, 1743, 1744,
	0, 1766, 1749, 0, 1776, 0, 0, 0, 0, 0,
	1756, 1758, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 1773,
	0, 1749, 0, 0, 0, 0, 1743, 1744, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 1726, 1727,
	0, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 1762, 1757, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 1740, 1741,
	1747, 1768, 1746, 1742, 1728, 1739, 1737, 1738, 1730, 1731,
	1732, 1733, 1735, 1736, 1748, 0, 0, 0, 4293, 0,
	0, 0, 1765, 1745, 0, 0, 0, 1740, 1741, 1747,
	1768, 1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732,
	1733, 1735, 1736, 0, 0, 0, 0, 4292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 0, 0, 0, 0, 4122, 0, 0, 1726, 1727,
	0, 1759, 1760, 1761, 1769, 1770, 1771, 1751, 1752, 1753,
	1754, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 1762, 1757, 0, 0, 0, 0, 1726, 1727, 1729,
	1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 1757, 0, 1766, 0, 0, 1776, 0, 1729, 0,
	0, 0, 1756, 1758, 1728, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 1772,
	0, 1773, 0, 1745, 0, 0, 0, 0, 1743, 1744,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 1764, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 0, 0, 1774, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 1751, 1752, 1753, 1754,
	0, 0, 0, 0, 0, 0, 1734, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 1776, 0, 0, 0,
	0, 0, 1756, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 1773, 1766, 0, 0, 1776, 0, 0, 1743, 1744,
	0, 1756, 1758, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 1772, 0,
	1773, 0, 0, 0, 0, 1750, 0, 1743, 1744, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 1755, 0, 0, 1740, 1741, 1747,
	1768, 1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732,
	1733, 1735, 1736, 0, 0, 1750, 0, 3974, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 1726, 1727, 1750, 1759, 1760, 1761, 1769, 1770,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 1757, 0, 0, 0,
	1767, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 1740, 1741, 1747,
	1768, 1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732,
	1733, 1735, 1736, 0, 0, 0, 0, 3905, 0, 0,
	0, 1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768,
	1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733,
	1735, 1736, 0, 0, 0, 0, 3904, 0, 0, 0,
	0, 1751, 1752, 1753, 1754, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1757, 0, 0, 1766, 0, 0,
	1776, 1729, 0, 0, 0, 0, 1756, 1758, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 1773, 0, 0, 0, 0,
	0, 0, 1743, 1744, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	1764, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 0, 1751,
	1752, 1753, 1754, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 1727, 0, 1759,
	1760, 1761, 1769, 1770, 1771, 1766, 0, 0, 1776, 0,
	0, 0, 0, 0, 1756, 1758, 0, 0, 1755, 1762,
	1757, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 1772, 0, 1773, 0, 0, 1775, 0, 0, 1750,
	1743, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 1728, 1726, 1727, 1767, 1759, 1760, 1761, 1769,
	1770, 1771, 1748, 1749, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 1762, 1757, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 1751, 1752, 1753, 1754, 0,
	0, 0, 0, 0, 0, 1734, 1765, 0, 0, 0,
	0, 1740, 1741, 1747, 1768, 1746, 1742, 0, 1739, 1737,
	1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0, 0,
	0, 3903, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 1766, 0, 0, 1776, 0, 0, 0, 0, 0,
	1756, 1758, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 1751, 1752, 1753, 1754, 0, 1772, 0, 1773,
	0, 0, 1734, 0, 0, 0, 1743, 1744, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 1726, 1727, 0,
	1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 1766, 1749,
	0, 1776, 0, 0, 0, 0, 0, 1756, 1758, 0,
	1762, 1757, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 1772, 0, 1773, 1775, 0, 0,
	0, 0, 0, 1743, 1744, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 1728, 0, 0, 0, 0, 0, 1763,
	0, 0, 0, 1748, 0, 0, 1749, 0, 0, 0,
	0, 0, 1745, 0, 1765, 0, 0, 0, 0, 1740,
	1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738, 1730,
	1731, 1732, 1733, 1735, 1736, 0, 0, 0, 0, 3574,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 1751, 1752, 1753, 1754,
	0, 0, 0, 0, 0, 0, 1734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 1727, 1767,
	1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	1762, 1757, 1766, 0, 0, 1776, 0, 0, 1729, 0,
	0, 1756, 1758, 0, 0, 0, 0, 1775, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	1773, 0, 0, 0, 0, 0, 0, 1743, 1744, 0,
	0, 0, 0, 1728, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 1748, 0, 1764, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 0, 0, 0, 0, 3077, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 1751, 1752, 1753, 1754,
	0, 0, 0, 0, 0, 0, 1734, 1765, 0, 0,
	0, 0, 1740, 1741, 1747, 1768, 1746, 1742, 0, 1739,
	1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0,
	0, 0, 3076, 1726, 1727, 0, 1759, 1760, 1761, 1769,
	1770, 1771, 1766, 0, 0, 1776, 0, 0, 0, 0,
	0, 1756, 1758, 1755, 0, 0, 1762, 1757, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 1772, 0,
	1773, 0, 0, 1775, 1750, 0, 0, 1743, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 1728,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1752, 1753, 1754, 0, 0, 0, 0,
	0, 1765, 1734, 0, 0, 0, 1740, 1741, 1747, 1768,
	1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733,
	1735, 1736, 0, 0, 0, 0, 3075, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 1766, 0,
	0, 1776, 0, 0, 0, 0, 0, 1756, 1758, 0,
	0, 0, 0, 0, 1750, 1726, 1727, 0, 1759, 1760,
	1761, 1769, 1770, 1771, 1772, 0, 1773, 0, 0, 0,
	0, 0, 0, 1743, 1744, 0, 0, 0, 1762, 1757,
	1767, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 1764, 0, 1726, 1727, 1775, 1759, 1760, 1761, 1769,
	1770, 1771, 0, 0, 0, 0, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1757, 0, 0,
	0, 1728, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 1748, 0, 1775, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768,
	1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733,
	1735, 1736, 0, 0, 0, 0, 3074, 0, 0, 0,
	0, 0, 0, 0, 1751, 1752, 1753, 1754, 0, 0,
	0, 0, 0, 0, 1734, 4551, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 1751, 1752, 1753, 1754, 0, 0, 0, 0,
	1766, 0, 1734, 1776, 3161, 0, 0, 3160, 0, 1756,
	1758, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 1773, 0,
	0, 0, 0, 0, 0, 1743, 1744, 0, 1766, 0,
	0, 1776, 0, 0, 0, 0, 0, 1756, 1758, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 1773, 0, 1749, 0,
	0, 0, 0, 1743, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 1740, 1741, 1747, 1768, 1746, 1742, 1763, 1739,
	1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0,
	3041, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4550, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1757, 0, 0, 0, 1755,
	3012, 0, 1729, 0, 0, 0, 0, 0, 1767, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 1740, 1741, 1747, 1768, 1746, 1742,
	0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736,
	1751, 1752, 1753, 1754, 0, 0, 0, 0, 0, 0,
	1734, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 1740, 1741, 1747, 1768, 1746, 1742, 0, 1739,
	1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 1776,
	0, 0, 0, 0, 0, 1756, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 1773, 0, 0, 0, 0, 0,
	0, 1743, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2581, 0, 0, 0, 0, 0, 1764,
	1726, 1727, 0, 1759, 1760, 1761, 1769, 1770, 1771, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1757, 0, 0, 0, 2580, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 1726, 1727,
	1775, 1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 1762, 1757, 0, 0, 0, 1728, 0, 0, 1729,
	0, 0, 0, 0, 1763, 0, 1748, 0, 1775, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 1751,
	1752, 1753, 1754, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 0, 0, 0, 0, 1766, 0, 1734, 1776, 0,
	0, 0, 0, 0, 1756, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 1773, 0, 0, 0, 0, 0, 0,
	1743, 1744, 0, 1766, 0, 0, 1776, 0, 0, 0,
	0, 0, 1756, 1758, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 1773, 0, 1749, 0, 0, 0, 0, 1743, 1744,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	1740, 1741, 1747, 1768, 1746, 1742, 1764, 1739, 1737, 1738,
	1730, 1731, 1732, 1733, 1735, 1736, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 1727, 0, 1759,
	1760, 1761, 1769, 1770, 1771, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	1757, 0, 0, 0, 1755, 0, 0, 1729, 0, 0,
	0, 0, 0, 1767, 1726, 1727, 1775, 1759, 1760, 1761,
	1769, 1770, 1771, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 1757, 0,
	0, 0, 1728, 0, 0, 1729, 0, 0, 0, 0,
	0, 1767, 1748, 0, 1775, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 1740,
	1741, 1747, 1768, 1746, 1742, 0, 1739, 1737, 1738, 1730,
	1731, 1732, 1733, 1735, 1736, 1751, 1752, 1753, 1754, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 1740, 1741, 1747,
	1768, 1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732,
	1733, 1735, 1736, 1751, 1752, 1753, 1754, 0, 0, 0,
	0, 1766, 0, 1734, 1776, 0, 0, 0, 3167, 0,
	1756, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 1773,
	0, 0, 0, 0, 0, 0, 1743, 1744, 0, 1766,
	0, 0, 1776, 0, 0, 0, 0, 0, 1756, 1758,
	0, 0, 0, 0, 1764, 0, 1726, 1727, 0, 1759,
	1760, 1761, 1769, 1770, 1771, 1772, 0, 1773, 0, 1749,
	0, 0, 0, 0, 1743, 1744, 0, 0, 0, 1762,
	1757, 0, 0, 0, 3162, 0, 0, 1729, 0, 0,
	0, 0, 1764, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 1763,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 1751, 1752, 1753, 1754, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 1776, 0, 0, 0, 0, 0,
	1756, 1758, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 3555, 0, 0, 0, 0, 1772, 0, 1773,
	0, 0, 0, 0, 0, 0, 1743, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 1740, 1741, 1747, 1768, 1746, 1742, 1763,
	1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 1727, 0, 1759,
	1760, 1761, 1769, 1770, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	1757, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 1755, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 1726, 1727, 0, 1759, 1760, 1761, 1769,
	1770, 1771, 1748, 0, 0, 0, 0, 0, 0, 1767,
	0, 1745, 0, 0, 0, 0, 1762, 1757, 0, 0,
	0, 3078, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 1751, 1752, 1753, 1754, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 1766, 0, 0, 1776, 0, 0, 0, 0, 0,
	1756, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 1752, 1753, 1754, 0, 1772, 0, 1773,
	0, 0, 1734, 0, 0, 0, 1743, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 1726, 1727, 0,
	1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 1766, 1749,
	0, 1776, 0, 0, 0, 0, 0, 1756, 1758, 0,
	1762, 1757, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 1772, 0, 1773, 1775, 0, 0,
	0, 0, 0, 1743, 1744, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 1728, 0, 0, 0, 0, 0, 1763,
	0, 0, 0, 1748, 0, 0, 1749, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 3129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 1751, 1752, 1753, 1754,
	0, 0, 0, 0, 0, 0, 1734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 1727, 1767,
	1759, 1760, 1761, 1769, 1770, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	1762, 1757, 1766, 0, 0, 1776, 0, 0, 1729, 0,
	0, 1756, 1758, 0, 0, 0, 0, 1775, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	1773, 0, 0, 0, 0, 0, 0, 1743, 1744, 0,
	0, 0, 0, 1728, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 1748, 0, 1764, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768, 1746,
	1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733, 1735,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 1751, 1752, 1753, 1754,
	0, 0, 0, 0, 0, 0, 1734, 1765, 0, 0,
	0, 0, 1740, 1741, 1747, 1768, 1746, 1742, 0, 1739,
	1737, 1738, 1730, 1731, 1732, 1733, 1735, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 1776, 0, 0, 0, 0,
	0, 1756, 1758, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	1773, 0, 0, 0, 1750, 0, 0, 1743, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768,
	1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733,
	1735, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 1740, 1741, 1747, 1768,
	1746, 1742, 0, 1739, 1737, 1738, 1730, 1731, 1732, 1733,
	1735, 1736,
}

var sqlPact = [...]int{
	268, -1000, -1000, -1000, -1000, 210, -1000, -1000, 204, 202,
	201, 198, 197, 196, 194, 192, 190, 186, 185, -1000,
	-1000, -1000, -1000, -1000, -1000, 184, -1000, -1000, 181, -1000,
	179, 178, 176, -1000, -1000, 169, -1000, 166, -1000, -1000,
	-1000, -1000, 165, 164, 163, 88186, 87644, 88721, 2274, 109734,
	96239, 2094, 79000, 109192, 78458, 108650, 2034, 9580, 108108, 2701,
	162, -1000, 107566, 161, 159, 157, -1000, 107024, -1000, 1980,
	-1000, 156, 5561, 63796, 154, 151, 150, 2235, 149, -1000,
	148, 146, 145, -1000, 6722, 1752, -1000, 142, 140, -1000,
	1061, 93543, 138, 137, 2298, 135, 133, 63253, 131, 130,
	2294, 2854, -1000, -1000, 1990, -1000, -1000, 127, 125, 124,
	120, 118, 113, 112, 111, 104, 103, 101, -1000, 96,
	95, 93, 91, 90, -1000, 87, 86, 84, -1000, 81,
	-1000, 77, 75, 74, 72, 71, 70, 65, 59, 58,
	57, 56, 53, 51, -1000, 14324, -1000, 1886, 1657, 1643,
	1637, 1630, 1621, 955, 44, 41, 40, 38, 37, 30,
	29, 28, 27, -1000, 25, 21, 20, 19, 18, 17,
	12, 8, 155, 6, 5, 3, 2, 1, 0, -1,
	2226, -1000, 1661, 1063, 29504, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 115619, 110269, -2, -66, -3, -1000, 3231, 1058, 52358,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 306, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 497, 1889, 735, -1000, -1000,
	-1000, 106489, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2273, 14, -1000, 1987, -1000, -1000, -1000, -1000, -1000, 734,
	-1000, 2260, 180, 2205, -1000, -1000, -1000, 3280, 2409, 3721,
	3719, 3718, 3717, 3716, 115084, 1846, 3715, 2488, 3713, 3712,
	3711, 3710, 3709, 3708, 3707, -1000, 87102, 1013, 86560, 86018,
	3291, 105954, 85476, 105412, 72512, 44488, 1062, 3278, -1000, -1000,
	-1000, -1000, -1000, -1000, 110269, -1000, 1007, -1000, -1000, 3706,
	3704, 2048, 731, 95697, -1000, 1898, -1000, 889, 31208, -1000,
	1227, -1000, 31208, 296, -1000, -1000, -1000, -1000, -1000, -1000,
	3702, 3700, 3698, 3697, 3696, -1000, -1000, 77916, 22636, 77374,
	76832, 104870, 22083, 84934, 84392, 104328, 71959, 1003, 1386, -1000,
	-1000, -1000, -1000, -1000, -1000, -23, 69747, 3484, 110269, -1000,
	294, -1000, -1000, -1000, -1000, -1000, -1000, 43908, 748, 43328,
	630, 42748, 345, -1000, -1000, -1000, -1000, 71406, -1000, 103786,
	2405, 3695, 3694, 1106, 3692, 3157, 1842, 3691, 1802, 1184,
	3690, 3688, 3687, 3686, 3683, 3682, 3681, 1437, 103244, 2885,
	102702, 1700, 70853, 1000, 83850, 88721, 2612, 102160, 1459, 1390,
	-1000, -1000, -1000, -1000, 2993, 2852, 2819, 1313, -1000, -1000,
	-1000, -1000, 55066, 6279, 5903, 9615, 101618, 57861, 88721, 88721,
	-1000, -1000, -1000, -1000, -1000, 42168, 319, 41588, 1057, -1000,
	-1000, 55625, 2844, -1000, -1000, -1000, -1000, 41008, 283, 40428,
	1021, 110269, -1000, 2881, 1907, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2215, 1615, 3485, 2678, 70300, 2001, 1351, 3239, 2990, 2986,
	1446, 2982, 3678, 2560, 2981, 2972, 2968, 2943, 2940, 1578,
	2557, 300, 28924, 2872, 1674, 39848, 1554, 1494, 2939, 2931,
	3501, 1960, 1978, 1986, 76290, 3677, 3676, 3207, 2927, 2920,
	2719, 2919, -1000, 2843, -1000, -1000, -1000, -1000, 1416, -1000,
	-1000, -1000, -1000, 79535, -1000, -1000, 1234, -1000, -1000, 1234,
	-1000, -1000, -1000, -1000, -1000, 1348, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1661, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1864, -1000,
	2038, -1000, -1000, 2497, 3197, 3197, 3197, 3271, 453, 444,
	-1000, 155, -1000, -1000, 120966, -1000, -1000, 45056, 45056, 45056,
	45056, 45056, 45056, 45056, 2077, -1000, 728, -1000, -1000, 767,
	-1000, 719, 589, -1000, -1000, -1000, -1000, -1000, -1000, 716,
	-1000, -1000, -1000, -1000, -1000, -1000, 3484, -1000, 25456, -1000,
	-1000, -1000, 458, 712, 45056, -1000, -1000, 3518, 3517, 998,
	-1000, 293, 920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2880, 708, 702, -1000, 701,
	698, 697, 696, 695, -1000, -1000, -1000, 693, 692, 688,
	687, 686, 685, 681, 676, -1000, 2014, -1000, -1000, -1000,
	-1000, -1000, -1000, 635, 634, 634, 634, -1000, 993, -1000,
	-1000, -1000, 313, 633, 304, 632, 628, 627, -1000, 669,
	668, 667, 666, 665, 662, 660, 659, 658, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 988, -1000, -1000, -1000, -1000,
	-24, 110269, -1000, 497, -24, -1000, -1000, 657, -1000, 33492,
	33492, 33492, -1000, -1000, 2258, 45056, -1000, 2639, -1000, -14,
	-14, 808, 53980, -1000, 51272, 808, 265, 775, 59483, -1000,
	2834, -1000, -1000, 653, 290, -1000, -1000, -1000, -1000, 23187,
	2825, 110269, 110269, 88721, 88721, 88721, 3080, 45056, -1000, -1000,
	67570, 110269, 89791, -1000, -1000, 3411, 64331, 67030, 110269, 2877,
	66495, 3675, -1000, -1000, -1000, -1000, -1000, 3061, 3674, 3673,
	3672, -1000, 110269, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	209, 3060, -1000, -1000, 93001, 209, 3058, -1000, 209, 3054,
	-1000, 92466, -1000, -1000, 2113, 3049, -1000, -1000, 215, 3045,
	-1000, -1000, -1000, 213, 3044, -1000, -1000, 288, -48, 3043,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 120966, -1000, -1000, -1000, 65953, -1000, 3218, -1000,
	-1000, 110269, -1000, 45056, -1000, 3410, 1711, 73603, 3328, -35,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2466, 2440, 1105,
	2297, -1000, 3098, 1426, -1000, 31208, 3139, -1000, -1000, -1000,
	270, 23187, -1000, -1000, -1000, -1000, -1000, -1000, 4283, 3040,
	1537, -1000, 2295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2112, 3035, -1000, 2072, 3033, 2095, -1000, -1000, 2468,
	-1000, 3195, -1000, -1000, 1778, 3030, -13, -1000, -1000, 2411,
	-1000, 2068, -1000, 951, 3029, -1000, 83308, 57302, 55625, 69747,
	-30, -1000, -1000, -1000, -1000, -192, -1000, 21530, 120966, -1000,
	-1000, -1000, -1000, 1672, 120966, 904, -1000, -1000, 3027, -1000,
	120966, 901, -1000, -1000, 3020, -1000, 2874, -1000, -1000, 2370,
	-1000, -1000, 3668, -1000, -1000, 3667, -1000, 3665, 3664, 3661,
	-1000, 1692, 1970, 3660, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 82773, 2244, -1000, -1000, 81689, -1000, 2369, 3327,
	-1000, 82231, 999, -1000, 951, 2368, -1000, 91931, 992, 2362,
	-1000, 3658, 3285, 2648, 951, 2361, -1000, -1000, -1000, -1000,
	-1000, 995, -1000, 61099, -1000, 61099, -1000, 1568, -1000, 114549,
	-14, 88721, 3484, -1000, -54, -1000, -1000, -1000, 1058, -1000,
	54523, -1000, 54523, 95155, 73063, 928, 757, 62710, 120966, -1000,
	-1000, -1000, -1000, 120966, -1000, -1000, -1000, -244, 2677, -1000,
	73063, 56743, 120966, -1000, -1000, -1000, -1000, 120966, -1000, -1000,
	-1000, 73063, 81689, -1000, 101076, 81154, -1000, -1000, 1421, 2526,
	-1000, -1000, -1000, 73063, 1251, 73063, 73063, 73063, -1000, 100534,
	-1000, -1000, 2013, 1440, 3186, 2008, 88721, -1000, 1755, -1000,
	-1000, -1000, 3230, 110269, -1000, -1000, 2873, -1000, 65410, 91396,
	-1000, 90861, -1000, 90326, -1000, 88721, -1000, 88721, -1000, 3657,
	3656, 3655, -1000, -1000, 3654, -1000, 3653, 3216, -1000, 120966,
	3215, -1000, 3652, 3313, 2872, 120966, -1000, 3028, 1659, 1652,
	110269, -1000, -1000, 110269, -1000, 110269, -1000, -1000, -1000, 1523,
	-1000, -1000, 2465, -1000, -1000, -1000, -1000, 88721, -1000, -1000,
	-1000, -1000, -1000, -1000, 2749, -1000, 1718, -1000, 1754, -1000,
	2823, 3214, -1000, 1412, -1000, -1000, 221, -1000, -1000, -35,
	-1000, 114014, -1000, 2497, -1000, 110269, -1000, 2509, 2858, 2871,
	1585, 2281, 2561, -1000, 39268, 2529, 48464, 2292, 155, -1000,
	-1000, 155, 155, 30640, -1000, -1000, 64331, 64331, 23187, 1372,
	45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056,
	45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056,
	45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056, 45056,
	45056, 45056, 45056, 45056, 45056, 2188, 45056, 1345, 45056, 45056,
	45056, 45056, 1806, -1000, -1000, 1922, 534, 1989, -1000, 3469,
	3469, 3469, 585, 585, 9025, 9025, 606, 3649, 767, -1000,
	45056, -1000, 119, 45056, 23740, -1000, 444, 10839, 2483, -1000,
	441, 24320, -1000, -1000, -1000, 25456, 589, 38688, 45056, 981,
	120966, -1000, -1000, 1574, 3488, 20978, 2829, 2714, 651, 847,
	844, 28344, 27764, 27184, 26604, 841, 45056, 45056, 45056, 45056,
	45056, 45056, 45056, 45056, -1000, -1000, 3493, -1000, 3488, -1000,
	-1000, -1000, -1000, 3488, 1371, 1353, 3488, -1000, 3488, 3488,
	7823, 7823, 38120, 37540, 36960, 49032, 36380, 45056, 26024, 35800,
	35220, -1000, 110269, -24, 3409, 45056, 170, -1000, 119679, -1000,
	170, 170, 650, -55, 120966, 2512, 2512, 52899, 2251, 2161,
	2161, 2161, -1000, 808, 16533, 808, 99459, 2169, 808, 808,
	257, 284, 431, 50731, 2639, 99459, 746, 647, -4, -5,
	-6, -1000, -1000, -7, -8, -1000, -1000, 88721, 646, 23740,
	23187, 245, 1502, -56, 2586, 2582, 2578, -1000, 2567, 1704,
	-65, 1344, 88721, 110269, -63, -1000, 4641, -70, -1000, 1287,
	242, 3488, -1000, -1000, -1000, -1000, -1000, 3648, 3647, -1000,
	987, 645, 637, 352, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 635, 634, 634, 634, -1000, 313, 633, 304,
	632, 628, 627, -1000, -1000, -1000, -1000, -1000, 2822, 88721,
	110269, -192, 89791, -51, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 110269, -1000, -1000, -1000, 3643, -1000, 88721, -1000,
	-1000, 88721, 209, 3019, -1000, 88721, -1000, 88721, 206, 3016,
	-1000, -1000, 110269, -1000, 88721, 88721, -1000, 110269, 110269, 110269,
	73063, 73063, 219, -1000, 88721, 851, -72, 1115, -35, -1000,
	-1000, -1000, 1234, -1000, 1736, -1000, -1000, -1000, -1000, -1000,
	-1000, 1420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	998, -1000, -1000, -1000, -1000, -1000, -1000, 3481, 3477, -26,
	-1000, -1000, 23187, -1000, -36, 1622, 2010, 1343, -1000, 75748,
	2389, 3196, 3640, 2635, 3174, 1559, -1000, 1515, -1000, 3286,
	79535, 3343, 3393, 859, -1000, 2820, -1000, -1000, 886, 1665,
	1654, 1341, 1337, 79535, 2072, -1000, 64331, -1000, 2593, 3268,
	1342, 1349, 1342, 1342, 1347, -1000, 79535, 1653, 1336, 1334,
	1333, 1917, 1914, -1000, -1000, -1000, 1318, 1317, 791, 1910,
	-1000, -37, 3342, 3360, 803, -1000, 2815, 1316, -1000, -1000,
	-1000, 3267, 88721, 23187, 1519, 1517, 1511, 1645, 1314, -28,
	-1000, 3335, 1312, 1310, -1000, 4629, -1000, 73063, 2070, 3012,
	2675, 810, 2673, -1000, -1000, -1000, 810, -30, 69747, 110269,
	236, -1000, 119, 45056, 45056, 119, 45056, 119, 3312, 3011,
	-1000, -1000, -1000, -1000, -1000, 3637, 1947, 2487, -1000, -1000,
	626, 2360, 2811, 110269, 2607, -31, 88721, -1000, 3005, 68110,
	2072, 2359, -1000, -1000, 80612, -1000, 3002, 497, 2352, -1000,
	674, 3636, 2978, -1000, 113479, -1000, 3218, 1381, 2974, 1056,
	713, 3408, -1000, 713, 61640, -1000, 110269, -1000, -14, 4659,
	74678, -73, -75, 422, -1000, 99999, 110269, 1053, 75213, 110269,
	3127, 947, 55625, -1000, 55625, -78, -244, 2671, 1489, 928,
	928, 810, -1000, 810, -1000, 88721, 2866, -1000, -1000, 73063,
	928, 928, 928, -1000, -1000, -1000, -1000, 3635, 3633, 3632,
	-1000, -1000, -1000, 950, 88721, 110269, 88721, -1000, 231, -1000,
	110269, -1000, 110269, 110269, 88721, -1000, 950, 110269, 950, 110269,
	950, 110269, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 119,
	45056, -1000, -1000, 3631, 1589, -1000, 2862, -1000, 2860, -1000,
	23, -1000, -1000, -1000, -1000, -1000, 2055, -1000, -1000, 88721,
	88721, 88721, 88721, 110269, 3114, -1000, 110269, 3111, 88721, -1000,
	79535, -1000, 2509, 2858, -1000, -1000, -1000, -1000, -1000, -1000,
	1391, 2209, -1000, 2543, -1000, 1541, -1000, -1000, -1000, 120966,
	49600, -1000, -1000, 120966, 1788, -1000, 47896, 47328, -1000, -1000,
	1651, 88721, 2620, -1000, 2620, -178, -1000, 119420, 2532, 88721,
	-1000, -1000, -1000, -1000, -1000, 875, 1120, 1120, 1208, 1208,
	1208, 1208, 3319, 915, 1077, 602, 7862, 7862, 478, 478,
	478, 478, 478, 7862, 531, 585, 585, 531, 531, 531,
	531, 531, 585, 585, 585, 7862, 7862, 7862, 9025, 121146,
	12766, 45056, 45056, 1301, 1897, 534, 10397, 45056, 9134, 9134,
	9134, 9134, -1000, 2039, -1000, -1000, -1000, -1000, 2809, 625,
	49032, 49032, -1000, -1000, -1000, -1000, 24888, 45056, -1000, -1000,
	-1000, -1000, 34640, -1000, -1000, 118792, -318, 421, -171, 9,
	-1000, 45056, 45056, 45056, 419, -1000, 230, 45056, 110269, -1000,
	14449, 745, -101, -1000, -80, 1398, -1000, 45056, -1000, -1000,
	1297, -1000, 1222, 1220, 1219, -1000, 623, 417, -1000, 229,
	-1000, 2144, 622, 619, 45056, -1000, -1000, -1000, -1000, -1000,
	118596, -1000, -1000, 118416, -1000, -1000, 118222, -1000, -1000, 118155,
	-1000, -1000, -1000, 120772, 13690, 12547, 11828, 8728, 11634, 11035,
	-81, 416, -86, 413, 869, 863, 411, 408, 407, -87,
	-1000, 3629, 3627, 3625, -1000, 3623, 3622, 3621, -1000, 3620,
	3611, 3606, -1000, 3605, 3604, 3603, -1000, 3602, 3601, 3600,
	-1000, 3599, 3598, 3597, -1000, 3588, 3584, 3580, -1000, 3575,
	3573, 3572, -89, 403, -1000, 2808, -171, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 402, -1000, 392, -1000, 120705,
	-171, 391, 5798, -1000, 49032, 49032, 49032, -1000, 389, -1000,
	119052, -1000, 120345, 34072, 34072, 34072, 388, 120123, 45056, -171,
	-92, -1000, -106, -1000, -1000, 532, -108, 969, 33492, 51815,
	23187, -1000, 969, 969, 45056, -1000, 45056, 2552, -1000, -1000,
	-1000, -1000, 2534, 2343, 2512, 52899, -1000, -1000, -1000, -1000,
	99459, -1000, 3484, 3036, -1000, 99459, -1000, -1000, 110269, 497,
	-1000, 99459, 99459, 23187, 808, -1000, 808, 99459, 806, -1000,
	-1000, -1000, -1000, -1000, 387, 58401, 9, 228, 23187, 951,
	-1000, 2640, 2640, 2640, 2640, -1000, -1000, 110269, 1218, -33,
	-103, 3442, -1000, 2020, -1000, 64331, -1000, 765, 1102, 23187,
	-1000, -1000, -1000, 617, -1000, 3488, 3488, -1000, 3488, 110269,
	2806, 158, 153, 68110, 68110, 3568, -1000, -1000, 209, -1000,
	88721, 209, 209, -1000, 88721, 88721, 2113, -1000, 215, -1000,
	213, -1000, -1000, -48, -1000, 963, 31208, -1000, 1234, -1000,
	-1000, 1504, -1000, 1944, -1000, 1212, -1000, -1000, -1000, -1000,
	31208, -1000, 3053, 110269, 110269, 88721, -1000, 110269, -1000, 2029,
	3433, 1845, 2458, 2454, 68110, -1000, 2346, 112944, 2337, 64331,
	110269, -1000, -1000, 613, 891, 2531, 2525, 1048, 110269, 110269,
	2520, 112409, 111874, -1000, 3566, 110269, 2031, 45056, 3266, 2210,
	2558, 119, 119, -1000, -1000, 119, 612, 1283, 88721, 88721,
	110269, 68110, 88721, 2066, -1000, -1000, -1000, -1000, -1000, 80070,
	-1000, -1000, 3491, 3490, -1000, 1342, -1000, -1000, -1000, 1342,
	2072, 1941, 110269, 68110, 88721, 68110, 110269, 110269, 1640, 110269,
	1382, -1000, 791, 2050, 119, 119, -1000, -1000, 119, 610,
	23187, 1962, -1000, 2899, 110269, 3516, 111339, 3514, 110269, 110269,
	110269, 68110, 3191, 110269, 110269, 68110, 4629, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 69212, 1064,
	951, 1638, 1217, 1216, 79535, 55625, 946, 55625, 2644, -1000,
	-1000, 20426, -1000, 120966, 120966, -1000, 120966, -1000, 64870, 110269,
	-1000, 997, 110269, 75213, 916, 2970, 60558, -192, 928, 73063,
	88721, -31, 110269, -1000, -1000, 2072, 2969, 497, 2345, -1000,
	73063, 3405, 2966, 604, 3564, 3561, -1000, 88721, 2238, 2339,
	-1000, -1000, 110804, 3062, 791, 110269, 969, 52899, 1863, -1000,
	58943, 1023, 110269, 1702, 126, -1000, -1000, -1000, 10, 110269,
	-1000, 773, -1000, -1000, 4659, 4659, 928, -217, 600, -1000,
	819, 817, 56184, 73063, -111, -1000, -1000, -1000, -1000, 2337,
	88721, 110269, 1238, 2646, 110269, -113, -1000, 226, 590, -1000,
	2176, -1000, -244, -1000, 947, 55625, 2800, 2792, -1000, -1000,
	962, -1000, 1396, 928, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -15, 110269, -192, -192, -32, -33,
	-1000, 950, -1000, 950, -1000, 950, -1000, 120966, -1000, -1000,
	1588, 1576, 110269, -1000, 23187, 110269, 88721, 23187, 88721, 2857,
	2851, -1000, -1000, -1000, 110269, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1071, -1000, 1788, 2208, -1000, 589, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2429, -1000, -34,
	30640, 824, -1000, -1000, 88721, -16, 45056, 45056, 8074, 7491,
	45056, 49032, 49032, -1000, 45056, 6413, -1000, -1000, -1000, -1000,
	-1000, 2791, 588, 45056, 64331, 5033, 4753, -1000, 386, 9943,
	531, -1000, 45056, -1000, 382, 32924, -1000, 119717, -49, -114,
	-1000, 17098, -171, -126, -1000, -1000, 764, -1000, 2975, -1000,
	45056, 120085, 2395, 2023, 1764, 1599, 3488, 3513, 19874, -1000,
	62175, 979, 2180, 117959, -1000, -1000, -1000, -1000, 64331, 64331,
	45056, 45056, -1000, 45056, 45056, 45056, -1000, -1000, -1000, 3488,
	887, -1000, -1000, -1000, 887, -1000, -1000, 1342, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1342, -1000, 45056, -1000, -1000, 2788, 45056,
	-1000, 64331, 64331, 49032, 49032, 49032, 49032, 49032, 49032, 49032,
	49032, 49032, 49032, 49032, 49032, 49032, 49032, 49032, 49032, 49032,
	49032, 49032, 2493, 49032, 3466, 3466, 3466, -1000, 2849, 2788,
	45056, 45056, 64331, 378, 376, 375, -1000, 45056, -171, -1000,
	-1000, 4659, 586, -1000, 2420, -1000, 2708, -1000, 45056, -1000,
	-183, -1000, 2639, -1000, -1000, 2708, 2708, -131, 120966, 52899,
	52899, -1000, 584, 45056, 2523, -1000, -1000, 744, -316, -1000,
	816, -1000, -1000, -1000, -1000, -1000, 497, -1000, -1000, -1000,
	214, 99459, 99459, 743, -1000, -134, -1000, -1000, -137, -1000,
	3403, 374, 23187, -1000, 969, 2569, -1000, -1000, -1000, -1000,
	-1000, -1000, -192, 110269, 110269, 2204, 3512, -1000, 3489, 763,
	742, 207, 3488, 373, 372, 371, -192, 110269, 110269, 110269,
	-1000, -1000, -1000, -1000, 209, -1000, -1000, -1000, 206, -1000,
	-1000, -1000, -1000, 2579, -1000, -35, -1000, -1000, -1000, 45056,
	-1000, -1000, 3178, 1211, 1207, -1000, -1000, -1000, -1000, 3261,
	89256, 3432, 1834, 1824, -1000, 2964, -1000, 2333, -1000, 1031,
	-1000, 1776, -1000, 45056, 573, 2642, 572, 571, 3560, 1857,
	3558, 1049, 2961, 2113, 2960, 2113, -1000, -1000, -1000, 894,
	-1000, 120966, 2210, -1000, 570, 569, -1000, -36, 1612, 1836,
	1205, 959, -1000, -1000, 45056, 45056, 98924, -1000, 472, 3195,
	-19, -1000, -1000, -1000, 1631, 1197, 1193, -1000, -1000, -1000,
	-1000, 2072, 1628, 1181, 1179, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 956, -1000, 2922, 2921, 848, 110269, -1000, 952,
	-1000, -1000, 45056, -1000, -37, 1165, 3337, 2332, 88721, -1000,
	2113, 2955, 1164, -1000, 1163, -1000, -1000, -1000, 3334, 3331,
	1154, -1000, -1000, -1000, -1000, -1000, 68661, -1000, 110269, 68110,
	88721, 1878, 810, -1000, 2364, 810, 946, 2786, -1000, 2598,
	-1000, 88721, 3556, 369, -139, -38, 64331, 3401, -1000, 2237,
	611, 88721, 857, -1000, 3484, -1000, -1000, -1000, -1000, 3326,
	88721, 3400, 2954, 951, 119, 88721, 3500, -1000, -1000, 3399,
	88721, 2953, 2236, 2330, 2475, 791, 74143, 951, 2179, -47,
	-1000, 1702, 32344, 3185, -142, -1000, -1000, -1000, 969, 61640,
	52899, 45056, 3553, -144, -1000, -1000, -1000, -1000, -1000, 96779,
	96779, 73063, 73063, 73063, 928, 110269, 110269, 75213, -1000, -1000,
	568, 110269, 110269, 567, -1000, 110269, 110269, 3552, 73063, -39,
	565, -1000, 814, 813, 812, -1000, -1000, -1000, -1000, -1000,
	947, -1000, -244, 55625, 119, -1000, 2194, 88721, -1000, 19322,
	-1000, -1000, -1000, -1000, -1000, -1000, 950, -1000, -1000, 2096,
	2291, 2096, 1747, 1741, -1000, -1000, 2191, -1000, -1000, -1000,
	-1000, 2592, 3184, 23187, 3355, 9134, 45056, 45056, 5721, 2033,
	347, 9134, 45056, 45056, 64331, 5123, -145, 45056, 45056, -1000,
	45056, 741, 120966, 3510, 45056, 367, 365, -1000, -1000, -1000,
	3487, -1000, -1000, -1000, 120966, 45056, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 364, -1000, 24, -1000, -1000, -1000, 116154,
	-1000, 45056, 361, 3260, -1000, 360, 359, 445, 8138, 117781,
	117366, 117337, 358, -1000, -1000, 357, 356, 120966, 2849, 120966,
	-1000, -1000, 1114, 1114, 1326, 1326, 1326, 1326, 3466, 406,
	1693, 1623, 949, 949, 949, 1103, 818, 818, 949, 949,
	949, 2774, 2482, 564, 4841, -1000, -1000, 120966, 120966, 353,
	-1000, -1000, -1000, -171, 348, 4659, -1000, 2702, 3256, 120966,
	-1000, 52899, 2702, 2702, -1000, -1000, 2343, 110269, 120966, 52899,
	-1000, 3036, -1000, 17661, -1000, 23187, -1000, -1000, -1000, -1000,
	3484, -1000, 58401, -1000, 563, -1000, 11, -1000, 2569, -1000,
	811, -1000, -1000, 73063, 73063, -192, -192, -1000, -1000, 740,
	3551, 756, 23187, 343, -1000, -1000, -1000, -192, -192, -192,
	-1000, -1000, -1000, 3126, 120966, 110269, 110269, 1480, 94613, 1723,
	-1000, -1000, 1909, 2453, -1000, 3431, 3430, 110269, 2949, -1000,
	3443, -1000, 1048, 117187, 53440, -1000, 53440, 110269, -1000, -1000,
	1861, 2521, 1097, -1000, 3232, 110269, -1000, 110269, -1000, -1000,
	-1000, 110269, 110269, 88721, 110269, -1000, 68110, 2934, -147, 120966,
	-40, -1000, 809, -1000, 1332, -1000, 18770, 110269, 68110, 88721,
	110269, 68110, 88721, 2133, -1000, -1000, 2909, -1000, 2930, -152,
	23187, -1000, 3508, 3507, 2947, 3236, -1000, 110269, 3506, 110269,
	88721, 3125, -1000, -1000, -1000, -1000, -1000, 1608, 1162, 1157,
	946, -44, 560, -1000, 807, -1000, -1000, 805, 946, -1000,
	73063, 55625, 497, -1000, 2634, -1000, 94078, 2212, 119, -1000,
	3549, 97319, 558, -1000, 2190, -1000, 739, 68110, 2072, 119,
	88721, -1000, -1000, 497, 333, -45, -1000, 3034, 1036, 23187,
	88721, 2945, 2481, 791, 74143, -1000, 1381, 2561, -1000, -46,
	-1000, 655, 119, 2179, -1000, -47, 120966, -1000, 804, -1000,
	-157, -1000, -1000, 331, -1000, 3120, 3119, -1000, 2734, 53440,
	556, 555, 110269, 3118, -1000, -1000, -159, 2522, 2522, 73063,
	55625, 73063, -1000, 947, -1000, -1000, 2311, -1000, -1000, -1000,
	-1000, -1000, 23187, 1660, -1000, 551, 549, -1000, -1000, -1000,
	-1000, 3184, 9134, 9134, 45056, 45056, 45056, 9134, 5123, -165,
	-1000, 9134, 9134, -171, -1000, -1000, 119717, -1000, -1000, -1000,
	120966, -1000, 18218, 2100, -1000, 116765, -1000, 30640, -1000, -1000,
	45056, 45056, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49032, 2768, 548, 64331, -1000, -1000, 323, 965, 45056, 46760,
	2639, 965, 965, -1000, -168, -1000, -1000, -1000, 3484, 11,
	-1000, -1000, 3547, 23187, -1000, 73063, -1000, -1000, 751, -1000,
	3545, -1000, -1000, -1000, -1000, -1000, 2666, 3395, -1000, -1000,
	1905, 2450, -1000, 3394, 1152, 3389, -1000, 110269, -1000, 110269,
	-1000, 23187, 110269, 2755, 1246, -1000, 891, 2508, 543, 49032,
	88721, 899, -1000, 3368, 2736, -173, -1000, 110269, 45056, 110269,
	-181, -182, 2309, -1000, -1000, 2303, 45056, -1000, 64331, 542,
	2113, 2113, -189, -190, -1000, -1000, -1000, 45056, 1143, 110269,
	31776, -1000, 3542, 3195, -1000, -1000, -1000, -1000, -1000, -1000,
	110269, -1000, 45056, 1130, -1000, -1000, -1000, 3505, 2113, 23187,
	2113, -1000, 2113, 3236, 1088, 110269, 68110, 88721, -1000, 2102,
	2102, 73063, 55625, -1000, -48, 946, 3375, 2631, 3541, -1000,
	-1000, -1000, -1000, 2503, -1000, -1000, 110269, 2494, 933, -1000,
	-195, -1000, 801, 800, 75213, 916, 905, -1000, -1000, -1000,
	-1000, 497, 3367, -1000, 3502, 541, 539, 110269, 2234, 537,
	23187, 3181, 791, 74143, -1000, 3062, 1702, -1000, 2302, 110269,
	3164, -1000, 2561, 534, -1000, 928, 530, 528, 3213, 3213,
	-196, 53440, 53440, -197, 518, 928, -1000, -198, -1000, -1000,
	-1000, -1000, -50, -1000, 881, 871, -1000, -1000, 88721, 88721,
	45056, 45056, -1000, 9134, 9134, 9134, -1000, 314, -1000, -1000,
	2179, 3255, -1000, -53, 116727, 116698, 5839, 49032, 64331, -206,
	-1000, -1000, 110269, 120966, -61, -1000, 120966, 517, 513, 448,
	-1000, -1000, -1000, 738, -1000, -1000, 3540, -1000, 98389, 110269,
	-1000, 3366, 110269, 97854, 110269, -1000, 2090, -1000, -1000, -1000,
	110269, 2315, -1000, -1000, -1000, 1045, 45056, 4841, 511, 45056,
	-1000, 3365, -1000, 2629, 2772, 1883, 53440, -1000, 3184, -1000,
	15819, -1000, 1035, 1928, -1000, -1000, 120966, 3236, 53440, -1000,
	-1000, 506, 505, 120966, 504, 797, 2758, -1000, -1000, -1000,
	-1000, 120966, 503, 3337, -1000, -1000, -1000, -1000, 2113, 88721,
	-1000, -1000, -1000, -1000, -207, -1000, -1000, 1931, 119, 2082,
	2664, -1000, 2212, 502, -1000, -1000, 2211, 2577, -1000, 97319,
	31208, 31208, 311, 3364, 905, -1000, 3463, -1000, 3361, 119,
	-1000, 3500, 53440, -1000, 88721, 53440, 2233, 2002, 2446, 74143,
	-1000, 2475, -1000, -1000, -208, 110269, 1702, -1000, -1000, 73063,
	73063, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1035, -214, -216, -1000, 73063, -1000, -1000, 2311,
	-1000, 110269, -1000, 110269, -1000, -1000, -224, -227, -1000, 2084,
	45056, 30640, -1000, -1000, 5839, -232, -1000, -133, -1000, 3349,
	46760, 3538, 3529, 3528, -1000, -1000, -1000, 1850, -1000, 110269,
	-1000, -1000, 1789, -1000, -1000, -1000, 2944, 2703, 15320, 2423,
	110269, 15061, -1000, 2769, -1000, -1000, 2631, 500, -1000, -1000,
	-1000, -1000, 824, 110269, 2631, 2699, 88721, 1042, -234, 2096,
	2096, 45056, 30072, 2124, 45056, -1000, -1000, 3236, -1000, 2733,
	3478, -1000, 916, -1000, 2117, 110269, -1000, 3224, -1000, 3116,
	-1000, -1000, -1000, 2634, 119, -1000, -1000, 119, -1000, 308,
	-239, 1036, -245, 88721, 1884, -1000, 791, -1000, 2481, 969,
	-1000, -1000, -247, -248, 1883, 1035, 2050, -250, -1000, -255,
	-256, -1000, -1000, 285, 46192, 46192, 46192, -171, -178, -1000,
	110269, 499, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2900,
	945, -1000, 2224, 1843, 121, 1052, -1000, -1000, 2050, 110269,
	-1000, -1000, -1000, 943, 497, -1000, 45056, 1035, -257, -1000,
	1020, -258, -1000, 1002, -267, -1000, 2752, -1000, -268, 2113,
	934, 3311, -1000, -1000, -1000, 2211, 88721, -274, -1000, -1000,
	2239, -1000, 2631, 933, -1000, -1000, 1035, 495, 1883, 494,
	1483, 791, -1000, -1000, 1342, 3181, 3077, 928, 928, 2631,
	1883, 923, -1000, 928, -1000, -1000, -1000, 3038, -1000, 50168,
	2202, 1716, 119014, 3038, 3038, -1000, -1000, 110269, 3300, -1000,
	2232, 2231, 1451, -1000, -1000, -1000, -1000, -1000, -1000, 2736,
	-275, 3287, 2423, 120966, 2631, -1000, 2096, 2659, -1000, 2096,
	2750, -1000, 2086, -1000, -1000, -1000, 1666, 3460, 1820, 493,
	-1000, 110269, 1695, 1690, 3524, 2082, 2211, 1883, 53440, 2631,
	53440, -1000, -1000, 110269, -1000, 2002, 1276, -1000, -1000, 2050,
	2631, 969, 487, -1000, -1000, 1786, 3419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 790, -1000, 3095, -1000, 1065,
	1991, 1991, 969, -1000, 787, 2224, -1000, -1000, 479, -1000,
	455, -1000, 2189, -1000, -1000, -1000, -1000, 110269, -1000, -1000,
	3472, -1000, 916, -1000, 2631, -276, 2050, -277, -1000, -192,
	1884, -1000, 1556, 923, 2050, -1000, 1707, -1000, -1000, 2166,
	45624, 45056, -1000, 3446, -1000, -1000, 2518, -1000, -1000, 45056,
	2736, 45056, 45056, 60023, -285, -1000, 2211, 2050, 1035, 923,
	1883, 1483, 61640, 969, 923, -1000, -1000, -1000, 120966, -1000,
	-1000, -1000, 120966, -1000, -290, -292, -217, 96779, 2111, 1820,
	923, 1883, 969, 2631, -1000, -264, -1000, 969, 2050, 1127,
	-293, -1000, -1000, -1000, -1000, 969, 2631, -1000, 2050, -1000,
	-1000, -1000, -1000, 449, -1000, -1000, 2050, 923, 45056, 923,
	969, -301, 969, -1000, 2050, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4405, 4404, 4403, 4402, 4401, 4400, 4398, 4394, 4392,
	4391, 4388, 4387, 4385, 4384, 4383, 4382, 4377, 4375, 4374,
	4371, 4370, 4369, 4368, 4366, 4365, 4364, 4362, 4360, 4358,
	4357, 4356, 4355, 4354, 4350, 4349, 4347, 4346, 4339, 4337,
	4335, 4333, 4332, 4329, 4328, 4325, 4322, 4321, 4320, 4319,
	4308, 4304, 4299, 4295, 4290, 4288, 4285, 4284, 4281, 4280,
	4279, 4278, 51, 4276, 4274, 4265, 4263, 4259, 4258, 4257,
	4254, 4253, 4251, 4248, 4247, 4245, 4241, 4238, 4237, 4230,
	4228, 4227, 54, 4226, 259, 4225, 4223, 4220, 4217, 4216,
	4214, 4212, 4211, 4207, 4205, 4204, 4203, 258, 4202, 131,
	4196, 4188, 4187, 4185, 4184, 256, 4183, 4182, 4181, 4178,
	266, 4175, 4174, 4173, 4169, 4168, 4166, 4165, 4164, 4163,
	4162, 4150, 127, 184, 4147, 4146, 2749, 4145, 4144, 4140,
	4135, 4131, 4125, 4124, 4120, 4116, 4115, 229, 4109, 255,
	4102, 4096, 4091, 4090, 4089, 4088, 4083, 4080, 4077, 4076,
	4075, 4073, 4070, 4068, 4065, 4063, 4062, 4060, 4059, 4058,
	4056, 4055, 4054, 4053, 4052, 4049, 4045, 4044, 4043, 4040,
	4038, 4037, 4035, 4031, 4029, 4028, 228, 263, 179, 4019,
	4018, 254, 250, 4017, 4016, 4014, 4011, 4010, 111, 12,
	113, 4009, 4008, 87, 77, 73, 89, 96, 92, 4007,
	102, 4004, 122, 57, 3999, 10, 2, 224, 236, 6735,
	231, 3997, 3996, 3995, 238, 173, 3993, 220, 3992, 3991,
	3990, 3988, 56, 48, 165, 160, 156, 152, 277, 3986,
	145, 95, 82, 53, 40, 15, 117, 243, 18, 3984,
	241, 7, 126, 5, 36, 3983, 3981, 3980, 3977, 3362,
	120, 3974, 249, 233, 150, 3973, 3972, 3971, 201, 3968,
	3967, 45, 3966, 223, 86, 119, 455, 118, 3965, 138,
	31, 3963, 157, 62, 3961, 143, 88, 80, 10733, 10119,
	3960, 104, 60, 245, 251, 183, 178, 181, 79, 153,
	146, 180, 203, 202, 155, 63, 3959, 234, 3958, 3376,
	85, 167, 3957, 3956, 3955, 72, 182, 97, 3954, 3953,
	64, 11, 3, 1, 9, 132, 23, 19, 16, 3950,
	32, 105, 44, 33, 3949, 26, 3948, 3947, 3945, 3942,
	3940, 41, 147, 3939, 265, 3938, 128, 52, 21, 3937,
	30, 198, 3935, 210, 125, 3933, 3931, 239, 189, 170,
	3930, 68, 214, 3929, 3927, 3926, 3925, 3924, 130, 8,
	115, 3923, 3922, 137, 3921, 47, 227, 177, 3918, 66,
	3916, 3915, 159, 100, 124, 262, 108, 209, 107, 206,
	162, 215, 3913, 3910, 3907, 175, 3904, 3900, 196, 139,
	3894, 3892, 193, 267, 81, 43, 69, 225, 70, 176,
	161, 3891, 192, 3889, 3886, 260, 166, 195, 13, 4,
	93, 129, 3885, 6, 216, 142, 217, 106, 3884, 5525,
	2504, 2330, 3883, 3882, 140, 112, 75, 116, 144, 246,
	61, 3881, 3879, 2691, 3878, 3874, 3872, 3871, 171, 3867,
	3865, 3864, 136, 123, 188, 3862, 84, 59, 46, 24,
	114, 232, 264, 103, 208, 164, 237, 3860, 3859, 3857,
	169, 3856, 91, 168, 3855, 186, 235, 55, 3853, 219,
	3848, 141, 212, 58, 134, 3846, 204, 3844, 3842, 3838,
	3836, 3835, 3834, 3832, 205, 218, 3829, 3828, 3827, 76,
	174, 3826, 244, 151, 158, 94, 71, 3825, 99, 3288,
	3819, 187, 2790, 65, 247, 297, 248, 3818, 3192, 50,
	3814, 0, 12291, 6741, 9115, 12059, 3813, 3976, 3812, 3811,
	3809, 194, 135, 3808, 3807, 3805, 101, 3802, 78, 3801,
	3800, 67, 3799, 27, 20, 17, 34, 28, 190, 163,
	3797, 3796, 29, 121, 109, 3794, 261, 213, 3793, 3792,
	3790, 3789, 83, 3788, 42, 3787, 38, 3786, 3785, 49,
	14, 39, 3784, 3783, 221, 3779, 199, 242, 3778, 148,
	3777, 3342, 133, 3776, 3775, 240, 90, 3774, 275, 3773,
	3310, 3771, 3769, 25, 3766, 3765, 226, 154, 197, 3763,
	3762, 149, 3759, 3758, 3755, 272, 3743, 3741, 3733, 37,
	3732, 22, 3731, 3729, 191, 3110, 3726, 3725, 35, 3724,
	172,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 16, 16,
	36, 36, 17, 17, 38, 38, 18, 18, 39, 39,
	575, 575, 21, 41, 22, 42, 15, 576, 576, 576,
	576, 34, 23, 43, 27, 27, 27, 27, 27, 191,
	191, 191, 191, 20, 20, 37, 37, 225, 225, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 574, 574, 227, 227, 226, 221, 221,
	577, 577, 228, 228, 228, 230, 230, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 473, 473, 473,
	506, 506, 505, 505, 505, 504, 504, 590, 590, 591,
	591, 591, 591, 591, 125, 125, 371, 371, 371, 51,
	51, 51, 51, 51, 569, 569, 193, 193, 193, 195,
	195, 194, 194, 194, 194, 73, 73, 582, 582, 583,
	583, 581, 584, 584, 584, 192, 192, 192, 121, 121,
	121, 121, 121, 121, 122, 122, 123, 123, 196, 196,
	196, 198, 198, 197, 197, 197, 197, 197, 197, 197,
	197, 202, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 101, 101, 508, 508, 509, 509, 187, 187, 188,
	188, 188, 188, 189, 189, 190, 190, 190, 65, 199,
	199, 201, 201, 200, 200, 200, 200, 200, 53, 53,
	53, 53, 53, 53, 53, 54, 54, 54, 54, 54,
	55, 55, 55, 55, 55, 55, 56, 56, 56, 56,
	56, 56, 63, 63, 63, 63, 178, 178, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 70,
	70, 70, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 593, 593, 594, 594, 595, 595, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 79, 79, 333, 333, 298, 298,
	80, 80, 80, 81, 81, 82, 82, 67, 67, 567,
	567, 348, 348, 464, 464, 84, 84, 370, 370, 85,
	85, 85, 85, 85, 85, 86, 86, 86, 86, 86,
	86, 86, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 94, 94, 94, 94,
	94, 95, 95, 95, 92, 92, 92, 89, 89, 89,
	88, 88, 88, 93, 93, 93, 566, 287, 287, 91,
	91, 91, 90, 90, 90, 349, 349, 96, 96, 96,
	96, 299, 97, 97, 97, 97, 97, 97, 97, 97,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 466, 466, 98, 98, 98, 431, 431,
	102, 102, 102, 386, 386, 103, 103, 103, 103, 103,
	104, 104, 104, 104, 104, 104, 124, 124, 124, 124,
	124, 124, 571, 571, 341, 341, 252, 252, 252, 252,
	114, 114, 114, 114, 115, 115, 115, 116, 116, 183,
	183, 131, 131, 131, 131, 131, 130, 130, 130, 130,
	130, 130, 57, 57, 57, 58, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 62, 62, 62, 133, 133,
	587, 587, 135, 132, 132, 132, 134, 134, 134, 134,
	136, 137, 137, 137, 137, 137, 137, 137, 137, 138,
	138, 498, 498, 357, 357, 496, 496, 518, 518, 497,
	497, 303, 303, 303, 303, 303, 304, 304, 304, 507,
	507, 507, 507, 507, 507, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 184, 184, 185, 186, 186, 186, 186, 186,
	162, 162, 162, 177, 177, 177, 177, 177, 177, 177,
	165, 165, 165, 149, 149, 140, 140, 140, 140, 140,
	140, 140, 144, 144, 144, 144, 144, 144, 144, 144,
	141, 141, 151, 151, 151, 151, 151, 145, 145, 146,
	146, 146, 146, 172, 172, 148, 148, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 142, 142, 142, 142,
	153, 153, 153, 153, 393, 393, 393, 176, 176, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	175, 175, 175, 175, 175, 175, 585, 585, 586, 586,
	169, 169, 169, 169, 169, 169, 445, 445, 163, 163,
	163, 163, 168, 168, 168, 168, 171, 171, 171, 171,
	376, 376, 160, 160, 160, 161, 161, 161, 166, 166,
	167, 164, 164, 170, 170, 170, 170, 143, 143, 143,
	597, 597, 597, 173, 173, 159, 159, 174, 174, 174,
	174, 174, 174, 174, 174, 598, 598, 155, 155, 155,
	154, 154, 154, 154, 157, 157, 158, 158, 158, 158,
	158, 158, 156, 147, 568, 568, 564, 564, 564, 564,
	564, 564, 564, 564, 565, 565, 565, 565, 570, 570,
	107, 107, 107, 107, 107, 117, 117, 117, 117, 117,
	108, 108, 108, 108, 108, 110, 110, 109, 109, 109,
	109, 74, 74, 74, 74, 74, 14, 14, 14, 75,
	75, 243, 243, 205, 205, 205, 322, 322, 206, 206,
	311, 311, 311, 311, 203, 203, 204, 204, 76, 76,
	599, 599, 599, 578, 578, 578, 579, 579, 579, 579,
	579, 579, 305, 305, 306, 306, 411, 411, 411, 411,
	411, 309, 309, 309, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 312, 312, 229, 229, 229, 320, 321,
	321, 313, 313, 319, 318, 318, 317, 317, 316, 316,
	314, 315, 315, 315, 324, 324, 323, 326, 326, 325,
	410, 527, 527, 529, 529, 529, 529, 529, 529, 529,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 394, 394, 600, 600, 525, 525, 525, 526,
	521, 521, 522, 522, 522, 522, 522, 307, 307, 308,
	308, 308, 308, 523, 524, 339, 339, 449, 528, 528,
	530, 530, 532, 601, 601, 601, 601, 601, 601, 602,
	602, 602, 409, 409, 408, 408, 331, 331, 533, 533,
	533, 533, 534, 534, 534, 534, 534, 537, 536, 535,
	535, 535, 535, 535, 78, 78, 78, 373, 373, 372,
	372, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 180, 180, 255, 255,
	72, 72, 72, 12, 12, 12, 580, 580, 580, 77,
	77, 77, 77, 77, 77, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 573, 573, 572, 572, 256,
	256, 604, 604, 83, 83, 83, 83, 83, 83, 83,
	83, 467, 467, 468, 468, 71, 71, 71, 71, 71,
	395, 395, 392, 392, 391, 391, 338, 338, 447, 447,
	447, 448, 260, 260, 261, 261, 222, 222, 222, 29,
	28, 19, 19, 24, 24, 25, 25, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 26, 26,
	45, 45, 45, 45, 46, 46, 46, 46, 49, 49,
	50, 50, 44, 44, 44, 44, 47, 47, 40, 40,
	588, 588, 589, 589, 113, 113, 118, 118, 118, 118,
	118, 119, 119, 119, 119, 120, 120, 120, 120, 129,
	129, 179, 179, 179, 179, 179, 179, 179, 52, 52,
	52, 52, 64, 64, 64, 64, 127, 606, 606, 606,
	128, 128, 128, 605, 605, 253, 253, 405, 405, 406,
	406, 607, 607, 407, 407, 407, 407, 407, 246, 245,
	247, 247, 248, 248, 69, 69, 69, 238, 238, 237,
	235, 235, 510, 510, 240, 240, 240, 241, 241, 231,
	231, 232, 232, 233, 233, 234, 234, 244, 244, 608,
	608, 105, 105, 105, 182, 182, 297, 297, 297, 402,
	402, 402, 332, 332, 267, 267, 404, 404, 404, 404,
	369, 369, 369, 181, 181, 346, 346, 359, 359, 360,
	360, 461, 461, 361, 111, 111, 112, 112, 126, 126,
	209, 209, 207, 207, 207, 207, 207, 207, 207, 207,
	214, 214, 215, 215, 216, 216, 217, 218, 218, 218,
	218, 350, 350, 219, 219, 219, 208, 208, 208, 210,
	210, 210, 210, 210, 210, 210, 213, 213, 213, 213,
	220, 220, 220, 212, 212, 544, 544, 544, 546, 546,
	548, 548, 547, 547, 543, 543, 545, 545, 603, 603,
	375, 375, 375, 329, 330, 327, 327, 328, 328, 336,
	336, 334, 335, 335, 337, 337, 446, 446, 446, 223,
	223, 223, 366, 366, 366, 366, 367, 367, 398, 398,
	396, 396, 396, 396, 397, 397, 399, 399, 399, 400,
	400, 401, 401, 363, 363, 364, 364, 365, 365, 365,
	365, 427, 427, 211, 211, 211, 343, 343, 343, 344,
	344, 417, 417, 417, 417, 417, 417, 418, 418, 416,
	416, 416, 416, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 451, 452, 452, 345, 345, 453, 403, 403,
	562, 562, 562, 563, 563, 444, 444, 454, 454, 454,
	454, 454, 454, 442, 442, 443, 443, 462, 463, 463,
	379, 379, 379, 379, 377, 377, 380, 380, 380, 380,
	380, 378, 378, 455, 455, 455, 455, 368, 368, 456,
	456, 456, 456, 457, 458, 458, 459, 459, 412, 413,
	413, 469, 469, 469, 469, 471, 342, 342, 342, 342,
	342, 520, 519, 519, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 486, 486, 486, 486, 486,
	486, 486, 472, 472, 472, 472, 472, 476, 476, 476,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 477, 477, 482, 482, 483, 483, 483, 478, 479,
	484, 484, 484, 484, 609, 609, 488, 488, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 474, 474, 474,
	481, 481, 481, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 387, 387, 389, 389,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 421, 421, 421,
	421, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 538, 538, 538, 538,
	538, 538, 538, 538, 423, 423, 541, 541, 542, 542,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 549,
	549, 550, 550, 552, 552, 553, 553, 554, 555, 555,
	555, 556, 557, 557, 551, 551, 558, 558, 558, 558,
	559, 559, 560, 560, 560, 560, 560, 561, 561, 561,
	561, 561, 433, 433, 434, 434, 440, 440, 440, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 257, 257, 257, 257, 257,
	355, 355, 353, 353, 353, 356, 356, 354, 354, 352,
	352, 351, 351, 430, 430, 428, 428, 432, 432, 381,
	381, 487, 487, 487, 487, 487, 487, 487, 487, 382,
	382, 382, 390, 383, 383, 384, 384, 384, 384, 384,
	424, 425, 385, 385, 385, 426, 426, 435, 439, 439,
	438, 437, 437, 436, 436, 414, 414, 415, 415, 362,
	362, 610, 610, 358, 358, 460, 460, 460, 460, 301,
	301, 347, 347, 300, 300, 292, 292, 293, 293, 293,
	293, 340, 340, 441, 441, 489, 489, 490, 490, 491,
	491, 492, 492, 493, 494, 495, 429, 429, 277, 276,
	264, 265, 275, 274, 273, 263, 266, 270, 271, 272,
	268, 269, 283, 282, 281, 236, 239, 288, 289, 289,
	291, 291, 290, 290, 279, 280, 465, 262, 294, 294,
	295, 295, 295, 296, 296, 296, 296, 258, 258, 259,
	259, 284, 284, 285, 286, 286, 278, 278, 278, 249,
	249, 249, 250, 250, 251, 251, 503, 503, 500, 500,
	500, 501, 501, 501, 502, 502, 502, 502, 499, 499,
	499, 499, 499, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 512, 512,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 514, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	517, 517,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 7, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 6,
	3, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 2, 6, 4, 7, 7,
	7, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 2, 8, 4, 2, 5, 5,
	5, 2, 2, 0, 1, 3, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 6, 4, 4, 5, 5, 7, 3, 3,
	4, 4, 6, 3, 6, 7, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 12, 15, 3, 1, 0, 4,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 582, -99, -96, -65, -63, -102, -103,
	-85, -104, -98, -124, -129, -111, -112, -113, -125, -131,
	-179, -184, -185, -186, -3, -51, -53, -66, -84, -86,
	-97, -106, -105, -107, -114, -121, -117, -101, -57, -126,
	-130, -139, -180, -181, -182, 33, 32, 101, 81, 154,
	128, 137, 200, 378, 420, 431, 392, 142, 412, 397,
	-134, -135, 448, -52, -64, -128, -127, 74, 129, 406,
	-4, -12, 30, 47, -54, -55, -56, 63, -72, -68,
	-79, -73, -70, -592, 103, -545, -87, -90, -120, -596,
	161, 218, -108, -109, 361, -115, -116, 414, -118, -119,
	416, 162, -59, -58, 156, -207, -209, -132, -133, -183,
	-140, -141, -142, -143, -144, -145, -146, -172, -147, -148,
	-149, -150, -151, -152, -156, -175, -153, -154, -155, -158,
	-157, -159, -164, -160, -161, -162, -163, -165, -166, -168,
	-169, -170, -171, -173, -174, 453, -167, 513, 50, 467,
	83, 146, 424, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -67, -69, -71, -74, -75, -76, -83,
	-77, -78, -544, -88, -89, -92, -94, -95, -91, -93,
	413, -210, -208, 579, 528, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -26, -36, -41, -42, -38,
	-39, -37, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -28, -34, -35, -29, -30, -31, -32, -33, -15,
	-27, 548, 557, -213, -211, -212, -220, 440, 536, 487,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, -299, 2, -279, -284, -285, -286, -278, -249,
	-514, -517, 4, -511, -515, 168, 227, 325, 21, 23,
	22, 24, 25, 26, 27, 28, 30, 31, 42, 43,
	45, 46, 47, 48, 49, 50, 54, 56, 60, 61,
	62, 63, 64, 65, 69, 74, 75, 80, 81, 82,
	83, 84, 85, 86, 92, 89, 90, 91, 93, 95,
	97, 98, 99, 100, 101, 102, 104, 105, 106, 108,
	109, 110, 118, 119, 120, 121, 123, 128, 129, 132,
	127, 131, 133, 135, 136, 137, 140, 141, 142, 144,
	145, 147, 148, 149, 151, 152, 154, 155, 156, 159,
	157, 495, 158, 160, 161, 162, 163, 166, 174, 175,
	176, 181, 183, 187, 188, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 201, 205, 207, 208, 209, 210,
	211, 217, 218, 220, 221, 222, 223, 228, 229, 230,
	234, 231, 240, 241, 245, 246, 247, 249, 253, 254,
	255, 256, 257, 258, 260, 262, 261, 264, 267, 268,
	271, 275, 276, 280, 281, 277, 282, 283, 285, 286,
	289, 287, 290, 291, 288, 292, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 293, 308,
	306, 310, 311, 312, 323, 321, 316, 317, 313, 318,
	314, 315, 319, 320, 327, 328, 331, 215, 333, 334,
	337, 355, 341, 342, 343, 346, 347, 350, 353, 354,
	356, 357, 358, 359, 360, 361, 362, 363, 365, 366,
	368, 369, 370, 372, 373, 374, 376, 378, 379, 381,
	382, 384, 385, 386, 387, 388, 389, 390, 392, 394,
	393, 395, 397, 399, 400, 401, 406, 412, 408, 409,
	410, 411, 413, 414, 415, 416, 418, 419, 420, 422,
	423, 424, 425, 427, 429, 430, 433, 434, 450, 451,
	469, 431, 432, 435, 436, 437, 438, 439, 443, 441,
	442, 444, 445, 446, 448, 449, 452, 453, 455, 456,
	457, 458, 459, 460, 463, 465, 466, 467, 486, 468,
	470, 473, 474, 475, 476, 477, 471, 485, 479, 480,
	482, 483, 488, 489, 490, 491, 492, 493, 494, 496,
	498, 506, 507, 508, 510, 513, 514, 515, 516, 504,
	518, 519, 522, 523, 524, 527, 525, 526, 528, 530,
	533, 534, 535, 541, 540, 542, 549, 550, 552, 553,
	554, 37, 51, 52, 55, 57, 59, 70, 71, 72,
	76, 124, 125, 153, 164, 165, 177, 189, 190, 202,
	204, 212, 213, 214, 235, 236, 238, 243, 265, 330,
	332, 348, 352, 367, 371, 375, 377, 391, 426, 461,
	472, 478, 499, 500, 501, 502, 509, 511, 536, 537,
	538, 543, 551, -299, 2, -279, 339, -272, 2, -249,
	-249, 378, 29, 2, 29, 366, 442, 490, 492, 2,
	-571, -341, 2, 29, -252, -249, 103, 200, 440, -272,
	2, -571, -341, 25, 2, -249, 2, 353, 22, 28,
	67, 78, 99, 140, 163, 184, 187, -595, 355, 385,
	429, 444, 485, 496, 510, 2, 540, 286, 441, 487,
	227, 120, 515, 435, -580, 433, 434, 353, 383, 422,
	203, 529, -253, 2, 431, -249, 286, 2, 582, 95,
	276, 75, 426, 445, -137, 507, -136, 499, 435, -138,
	-498, 2, 308, -249, 582, 582, 582, 29, -262, -249,
	487, 227, 435, 120, 483, 582, 2, 487, 358, 540,
	441, 120, 388, 227, 515, 435, -580, 286, -569, 2,
	-564, 4, -515, -511, -293, -292, 487, 493, 120, -286,
	-278, 572, -285, 582, 582, 582, 2, 246, 247, 387,
	386, 445, 446, 582, 582, 582, 582, 433, 2, 163,
	22, 28, 67, 94, 99, 126, 184, 187, 344, -593,
	355, 385, 444, 485, 489, 496, 510, -579, 468, 69,
	435, -578, -580, 286, 515, 140, -391, 120, 276, 198,
	523, 492, 490, 521, 132, 234, 526, 525, 582, 582,
	-99, 2, 579, 33, 32, 142, 448, -202, 487, 239,
	2, -249, 582, 582, 2, 246, 247, 433, 434, 582,
	582, 185, -564, 2, 582, 582, 2, 246, 247, 433,
	434, 239, 2, 69, 437, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 2, -177,
	445, 468, 209, 48, 47, 75, 29, 384, 80, 359,
	121, 148, 516, 201, 227, 228, 254, 94, 95, -393,
	45, 247, 246, 434, -585, 433, -445, 488, 436, 442,
	482, 258, 431, 507, 103, 530, 423, 554, 388, 389,
	480, 401, 277, 157, 4, 120, 308, 447, 499, 276,
	430, 362, 85, -603, 2, 487, -605, 2, 507, 507,
	2, -605, 2, -605, 2, -605, 2, -606, 507, 551,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, -208, -210, -209,
	582, 582, 582, 582, 582, 582, 582, -177, 445, 2,
	75, 29, -334, -336, 520, 237, 150, 345, -207, -209,
	2, -544, -496, 2, -419, -518, -421, 570, 571, 563,
	484, 68, 324, 555, -433, 126, 521, 339, -517, -422,
	-435, 153, 426, -356, 8, 9, 5, 6, 7, -258,
	-423, -429, 512, 167, 329, -296, 583, 10, 579, -541,
	-209, -434, 38, 204, 66, -500, -295, -259, -472, 238,
	-294, -278, -538, -539, 4, -511, -512, -501, -475, -483,
	-479, -480, -486, -249, -514, 78, 112, 113, 111, 116,
	115, 279, 278, 117, 114, 447, 529, 67, 37, 212,
	213, 243, 330, 214, 76, -540, 141, -513, 235, 236,
	461, 52, 391, 177, 125, 124, 332, 57, 55, 537,
	-484, 122, 499, 500, 501, 502, 189, 190, 59, 164,
	165, 352, 375, 478, 509, 511, 202, 265, 44, 107,
	186, 233, 216, 242, 244, 248, 266, 269, 309, 322,
	326, 349, 351, 421, 454, -609, 538, 472, 70, 71,
	-546, 393, -547, -272, -546, 582, 582, 584, 582, -327,
	-329, -330, 2, 29, 138, 579, 2, -450, 2, -451,
	-455, -209, 259, -454, 579, -452, 577, -279, 340, -542,
	427, -538, -539, -258, -278, -295, 4, -511, -513, 581,
	-331, 579, 120, 487, 79, 227, -386, 579, -249, 29,
	339, 503, 584, -328, 382, -431, 579, 339, 185, 342,
	61, 290, 2, 2, 2, 2, 2, 212, -249, 487,
	119, 2, 257, 2, 2, 2, 2, 2, 2, 2,
	-349, 212, 2, -279, 540, -349, 212, 2, -349, 212,
	2, -392, 2, 88, -263, 212, 2, -249, -287, 212,
	2, -282, -284, -291, 212, 2, -289, -249, -509, 212,
	2, -508, -503, 10, -502, 5, 4, -511, -515, -512,
	-514, 78, -419, 2, -126, 2, 61, -249, 540, 2,
	2, 450, 2, 579, -137, 72, 507, 44, 445, -406,
	2, -407, -245, -246, -247, -462, -248, 245, 381, 390,
	558, 130, 324, 554, -496, -587, 185, 562, 503, -496,
	-357, 581, 2, 2, 2, 2, 2, 2, -455, 212,
	-279, 2, -276, -499, 4, -511, -515, -512, -516, 29,
	32, 33, 34, 36, 38, 39, 40, 41, 58, 66,
	67, 73, 77, 79, 88, 94, 103, 111, 112, 114,
	113, 115, 116, 117, 126, 130, 134, 138, 139, 143,
	146, 150, 167, 169, 182, 184, 185, 200, 203, 206,
	219, 232, 237, 239, 259, 263, 270, 278, 279, 324,
	329, 335, 339, 340, 344, 345, 364, 380, 396, 417,
	440, 447, 464, 481, 487, 497, 503, 505, 512, 520,
	521, 529, 531, 539, 544, 545, 546, 547, 548, -517,
	2, -455, 212, 2, -281, 212, -455, -284, 2, -263,
	2, -275, -499, 2, -300, 212, -279, -280, -284, -282,
	2, -289, 2, -508, 212, 2, 540, 239, 503, 584,
	-347, -292, -293, -495, 8, -340, -249, 581, -419, 2,
	-126, -110, 2, 182, -419, 212, 2, -126, 212, 2,
	-419, 212, 2, -126, 212, 2, -582, 2, -508, 212,
	-249, 2, 290, 2, 2, 510, 2, 99, 487, 119,
	2, 410, -594, 429, 514, 2, 2, 2, 2, 2,
	2, 2, 487, -268, 2, -249, 182, -289, 212, -290,
	2, 441, -604, 393, -508, 212, 2, 540, -282, 212,
	2, -282, 227, 241, -263, 212, 2, 492, 490, 492,
	490, 185, 2, 239, 2, 239, 2, -456, 2, -457,
	-451, -458, 577, 340, -466, 2, -465, -502, 536, -99,
	579, -99, 579, 445, 579, -508, -279, -279, -419, 2,
	-126, -110, 2, -419, 2, -126, 2, -123, -508, -122,
	579, 185, -419, 2, -126, -110, 2, -419, 2, -126,
	2, -202, 182, 2, 120, 487, -177, 2, 182, 531,
	2, 8, 2, 219, -508, 436, 389, 174, 2, 450,
	2, 451, 75, -393, 554, 75, 185, 2, 185, 2,
	-376, 2, 548, 185, 2, 2, -568, 2, 339, 185,
	2, 185, 2, 185, 2, 185, 2, 185, 2, -176,
	446, 508, 486, 386, 247, 2, -126, 545, -110, -419,
	545, 2, -586, 182, 434, -419, 2, 506, 256, 158,
	185, -376, 2, 185, 2, 185, 2, 5, 2, 387,
	469, 2, 245, 381, 469, 2, -279, -597, 2, 487,
	540, 441, 2, 2, 89, 90, 185, 2, 185, 2,
	199, 185, 2, 185, 554, 2, -368, -455, -405, -406,
	-405, 503, -334, -336, -177, 450, 2, -214, -366, -216,
	182, -396, -397, -217, 270, 169, 335, -218, -375, 29,
	138, -375, -375, 61, 580, 580, 11, 12, 77, 42,
	570, 571, 572, 573, 180, 574, 575, 568, 569, 567,
	560, 561, 565, 251, 252, 96, 564, 562, 87, 284,
	428, 170, 171, 172, 173, 407, 225, 35, 226, 14,
	15, 16, 34, 344, 269, 555, 216, 454, 563, 17,
	18, 19, 242, 244, 326, 51, 219, -257, -302, -419,
	-419, -419, -419, -419, -419, -419, 351, 579, -362, -414,
	577, -209, 579, 579, 579, -495, -209, -419, -433, 580,
	-354, 579, -209, -433, -428, 579, 426, 577, 579, -436,
	-419, 5, 5, 5, 579, 581, -549, 549, 182, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 377, -477, 579, -476, 579, -476,
	-476, 541, -474, 579, 557, 550, 579, -474, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 541, 584, -546, -331, 579, -358, -460, -419, 572,
	-358, -358, 339, -351, -419, 107, -379, 248, 309, 186,
	266, 421, 233, -416, 583, -416, -444, 557, -209, -452,
	-278, -209, -454, 579, -450, -444, -100, -495, -84, -97,
	-105, -126, -139, -181, -182, 572, -279, 579, 185, 579,
	581, -499, 185, -340, -263, -279, -294, -295, -300, 137,
	-351, -564, 515, 435, -340, -252, 39, -430, -469, -470,
	-520, 583, -519, -472, -482, -478, -481, 367, 371, -501,
	55, 537, -484, 238, 4, -511, -513, 235, 236, 461,
	52, 391, 177, 125, 124, 332, 57, 499, 500, 501,
	502, 189, 190, 59, 538, 472, 70, 71, -564, 515,
	435, -340, 182, -506, 2, -505, -504, 117, 447, -502,
	5, 2, 153, 2, 2, 2, -249, -228, 584, 65,
	415, 153, -349, 212, -228, 153, -228, 153, -301, 212,
	-300, -228, 153, -228, 584, 153, -228, 584, 153, 581,
	584, 153, -506, 2, -392, -498, -351, 39, -406, 2,
	126, -504, -607, 584, 268, -304, 283, 323, 208, 340,
	552, 333, 130, -507, 5, 4, -429, -441, 126, 276,
	238, -489, -491, 8, -490, 9, -492, 570, 571, -497,
	-496, 110, 581, -499, -225, 408, 448, 354, -224, 24,
	30, 142, 229, 312, 534, 159, -317, 230, -314, 358,
	153, 465, 524, -575, -576, 432, 494, 495, 91, 333,
	448, 354, 408, 153, -372, -374, 39, 118, 312, 353,
	62, 222, 288, 289, 467, 543, 153, 448, 354, 408,
	354, 24, 142, -240, -237, -576, 100, 408, 479, 380,
	-576, -227, 465, 524, -575, -576, 432, 408, -226, -319,
	-314, 358, 153, 583, 24, 142, 408, 448, 354, -590,
	-591, 30, 408, 354, -572, -543, 548, 153, -455, 212,
	-583, -122, 260, 5, 10, -508, -122, -347, 584, 584,
	-499, 572, 434, 433, 153, 153, 153, 153, 182, 324,
	2, 2, 2, 2, 2, 187, -578, -595, 2, 2,
	-279, 212, -333, 339, -567, -348, 487, -279, 324, 44,
	-281, 212, 2, -284, 540, -572, 324, -283, 212, -279,
	39, 579, 324, 2, -392, 2, 227, -543, 324, -456,
	-297, -279, -451, -297, 448, -272, 39, -416, -279, 580,
	584, -466, -466, -508, -190, 548, 185, 103, 579, 579,
	-202, -463, 584, -462, 219, -509, -123, -508, 411, -508,
	-567, -263, 2, -279, 2, 487, 249, -508, -190, 219,
	-508, -508, -508, -498, 29, 451, 2, -176, 446, 508,
	90, 451, 2, -279, 487, 120, 227, 81, -249, -570,
	182, -565, 422, 435, 515, -564, -279, 120, -279, 120,
	-279, 120, -279, -279, 2, 2, 2, 2, 2, 86,
	86, 2, 47, -586, 182, 2, 506, 2, 506, 2,
	-249, -249, -249, 468, 268, -279, -598, 185, 182, 487,
	227, 487, 227, 120, 185, 75, 120, 29, 487, -228,
	584, -253, -214, -366, -498, -367, -366, -215, -214, -217,
	182, 390, 525, 312, 452, 253, -397, -396, 29, -419,
	-401, 176, 311, -419, -399, -421, 570, 571, -490, -492,
	-350, 333, -208, -208, -208, -337, -446, -419, 380, 227,
	-471, -469, -469, -277, -499, 499, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, 269, 216, 454, 51, 219, -419, 503, -419, -419,
	-419, -419, 306, 324, 329, 512, 167, 522, 138, 333,
	-610, 481, 41, -426, -209, -355, 579, -440, 36, 464,
	29, -433, 579, 2, -414, -419, -415, -352, -351, -351,
	580, 539, 29, 138, 572, 2, 580, 584, 39, 580,
	-419, -352, -432, -428, -351, -439, -438, 545, -387, -388,
	553, 293, 123, 210, 291, -389, 439, -493, 8, -499,
	572, -550, 175, 203, 579, 580, 2, 580, 2, 580,
	-419, 2, 580, -419, 2, 580, -419, 2, 580, -419,
	2, 580, 2, -419, -419, -419, -419, -419, -419, -419,
	-351, 8, -493, -493, 499, 499, -493, -493, -493, -485,
	367, 368, 369, 370, 271, 272, 273, 274, 371, 372,
	373, 374, 298, 299, 300, 301, 294, 295, 296, 297,
	302, 303, 304, 305, 194, 195, 196, 197, 190, 191,
	192, 193, -485, -381, 2, -487, -351, 4, 553, 293,
	123, 210, 291, 439, 5, -381, 2, -382, 2, -419,
	-351, -383, -420, -421, 570, 571, 563, -433, -384, 2,
	-419, -352, -419, 58, 263, 505, -385, -419, 185, -351,
	-351, 2, -351, 2, -547, 39, -351, -343, 584, 185,
	39, 4, -343, -343, 579, 580, 584, -380, 207, 287,
	282, 241, -380, -450, -379, 248, -377, 349, -377, -377,
	-444, -264, 577, 585, -499, -444, -443, -442, 39, -272,
	346, -444, -444, 581, 580, -443, 578, -562, 579, 582,
	582, 582, 582, 582, -279, 579, -351, -499, 581, 470,
	580, 242, 242, 242, 242, 427, 580, 503, -566, -287,
	-291, 548, -99, 341, 580, 584, -342, 38, 577, 581,
	-493, 2, 2, -488, 541, 579, 579, -388, 579, 185,
	-566, -291, -341, 584, 503, -249, 2, -279, -349, -228,
	153, -349, -349, -228, 584, 153, -263, -282, -287, -289,
	-291, -249, -508, -509, -228, -283, -587, 580, 507, -407,
	-303, 390, 463, 409, 443, 483, 8, 9, 8, 9,
	584, -499, 584, -588, 94, 503, 79, 435, -242, 277,
	400, 312, 487, 426, 503, -410, 212, 79, -521, -266,
	94, -522, -249, 73, 521, 380, 184, 151, -588, 94,
	380, -588, 94, 2, 229, 94, 448, 468, 29, 61,
	-455, 42, 42, 29, -126, 264, 185, 554, 487, 227,
	435, 503, 503, -455, -374, -469, 118, 288, 289, 61,
	-494, -489, 570, 571, -494, 61, -494, -494, -494, 548,
	-281, -455, 435, 503, 503, 503, 399, 399, 503, 503,
	-608, 562, 399, 584, 42, 42, 29, -126, 264, 185,
	503, -300, -264, 535, 43, 535, 43, 535, 503, 43,
	435, 503, 584, 43, 503, 503, -573, -254, 106, 318,
	281, 319, 98, 315, 97, 314, 104, 316, 105, 317,
	542, 327, 64, 313, 292, 320, -255, -256, 360, 533,
	-508, 448, 354, 408, 153, 219, -463, 219, -463, -292,
	-249, 581, -126, -419, -419, -126, -419, -126, 47, 153,
	2, -604, 257, 579, -307, 324, 185, -340, -464, 239,
	584, -348, 153, -505, -373, -372, 324, -283, 212, 2,
	153, -331, 324, 147, 579, 388, 2, 153, -265, 212,
	-250, -249, -392, -231, 491, 153, -370, 531, -402, -126,
	579, 126, 39, -402, -359, -360, -461, -361, -266, 579,
	-272, -416, -99, -465, 580, 580, 580, -189, 343, -188,
	-249, 5, -202, 531, -306, -411, -410, -525, -526, -521,
	269, 227, 521, 241, 168, -332, -267, -266, 119, -196,
	548, -122, -123, 580, -463, 219, 477, -190, -190, -463,
	-463, -279, 182, -508, -190, -190, -190, 2, 2, 2,
	-376, -279, -263, -300, -279, 581, -340, -340, -291, -287,
	-376, -263, -376, -263, -376, -263, -126, -419, 2, 445,
	182, 182, 581, -376, 388, 120, 487, 358, 227, -279,
	-300, -279, -300, -263, 120, -263, 121, -279, -455, -367,
	-215, 340, 253, 452, -399, -400, -421, 426, 427, -400,
	426, 427, 8, 9, 8, 9, -219, 456, 328, -349,
	584, -222, 40, 134, 253, -279, 554, 149, -419, -419,
	503, -610, 481, -426, 149, -419, 306, 329, 512, 167,
	522, 138, 333, 185, 579, -420, -420, 580, -353, -419,
	-419, 578, 587, 580, -336, 584, -334, -419, -351, -351,
	580, 581, -351, -340, 578, 578, 584, 580, -437, -438,
	143, -419, 503, 503, 503, 503, 579, 580, 581, -555,
	350, 579, 579, -419, 580, 580, 580, 580, 39, 584,
	584, 584, 580, 584, 584, 584, 580, 580, 580, 584,
	580, 554, 554, 580, 580, 580, 580, 584, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 580, 584, 580, 185, 580, 580, -390, 364,
	580, 11, 12, 570, 571, 572, 573, 180, 574, 575,
	568, 569, 567, 560, 561, 562, 87, 284, 428, 14,
	15, 16, 242, 219, -420, -420, -420, 580, -424, -425,
	185, 182, 39, -385, -385, -385, 580, 185, -351, 580,
	580, 579, -548, 286, 324, 580, -413, -412, 546, -460,
	-344, 2, -450, -274, -499, -413, -413, -351, -419, 248,
	248, -378, 531, 339, -380, -450, -443, -495, -418, -417,
	183, 40, 134, 321, 215, -443, -272, -331, -443, -443,
	-499, -444, -444, -442, 580, -563, -495, 580, -345, -453,
	-542, -336, 581, -499, -199, -543, -178, 5, 329, -178,
	-178, -178, -340, 503, 503, 25, 365, -469, 577, 578,
	8, -499, 579, -493, -493, -493, -340, 185, 185, 185,
	-505, -505, 2, -228, -349, -228, -228, -300, -301, -228,
	-228, -228, -371, 548, -496, -406, 519, 84, 390, 499,
	-496, -224, 408, -266, -266, -279, -288, -249, 198, 400,
	26, 400, 268, 268, -505, 324, -410, 212, -230, 324,
	-469, -273, -249, 579, -394, 550, 253, 253, 531, -266,
	-273, 253, 212, -266, 212, -273, 2, -273, -574, 390,
	334, -419, 61, -315, 275, 388, 325, -225, 408, 448,
	354, -126, -126, -126, 579, -587, 531, 137, -279, -300,
	-279, -288, -505, -283, 448, 354, 408, 322, -294, -494,
	-494, -372, 448, 354, 408, -288, -505, -281, -505, -236,
	-249, -236, 435, -263, 399, 554, 46, -608, -226, -126,
	-126, -126, 579, -264, -227, 408, 5, 212, -266, 5,
	-266, 212, 5, -249, -266, -288, -505, -591, 24, 142,
	-266, -288, -505, -254, -508, 329, 527, -572, 435, 503,
	503, -455, -122, -193, 548, -122, -187, 223, 572, -569,
	-249, 540, -249, -305, -308, -306, -266, -205, -206, 550,
	548, 153, -298, -279, 577, -190, -508, -279, -289, -290,
	153, -331, 324, -508, 39, 153, 579, 2, 2, -282,
	339, 324, -265, 212, -232, 144, -608, -263, -413, -344,
	-369, -404, 417, 339, -332, 536, -272, -369, -346, 584,
	185, 562, 581, -332, -459, 572, -99, -99, -190, 584,
	579, 562, 562, 579, -508, -508, 580, 584, -230, -279,
	-265, 227, 227, -271, -250, 580, 584, 581, 579, -198,
	343, -197, 145, 255, 240, 457, 458, 459, 460, 136,
	-463, -196, -123, 185, 185, -60, 548, 487, -190, 583,
	-249, -376, -376, -376, 445, 445, -249, -275, -263, -279,
	-276, -300, 182, 182, -263, 525, -400, 340, 280, -446,
	-223, 556, -279, 583, -419, -419, 149, 149, -419, -420,
	-420, -419, 149, 185, 579, -419, -430, 34, 34, 580,
	584, -415, -419, 580, 539, -336, -336, 580, 572, -499,
	583, 580, -428, 146, -419, 497, 293, 210, 291, -389,
	291, -389, -389, -493, 5, -499, 572, -556, -269, 579,
	-249, 546, -335, 345, 580, -471, -469, -419, -419, -419,
	-419, -419, -493, -474, -474, -489, -489, -419, -424, -419,
	-471, -469, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, 138, 324, 333, -420, -425, -424, -419, -419, -469,
	580, 580, 580, -351, -99, 579, 286, -363, 203, -419,
	-463, 584, -363, -363, 580, -450, -450, 579, -419, 248,
	578, 584, 586, 562, -331, 581, -442, -443, 578, 580,
	584, 580, 584, -403, 39, 580, -499, -413, -201, -200,
	135, 54, 108, 133, 329, -340, -340, 342, 5, 8,
	577, 578, 581, -493, 580, 580, 580, -340, -340, -340,
	-228, -228, 119, 312, -419, 503, 503, 61, 503, 42,
	322, -236, 380, 426, 26, 400, 400, 153, 324, 533,
	-527, -522, 151, -419, 579, 227, 579, 579, 2, -221,
	142, 448, -589, 2, 531, 153, -228, 153, -228, 552,
	-315, 579, 579, 503, 435, -242, 503, 548, -351, -419,
	-191, 126, -498, -576, 583, -576, 583, 435, 503, 503,
	435, 503, 503, 548, 166, 166, 554, -236, 548, -351,
	503, -473, 49, 27, 324, -282, -228, 153, 503, 503,
	515, 448, -508, 329, -288, -505, -283, 448, 354, 408,
	-463, -195, 343, -194, 145, 419, 136, 255, -463, -193,
	185, 239, -283, 2, 580, 580, 584, -528, 39, 337,
	337, 579, -279, -80, 548, -462, -495, 44, -281, 39,
	153, -572, -126, -283, -467, -468, 5, 39, -279, 153,
	339, 324, -233, 262, -608, -503, -543, -336, -369, -358,
	325, 92, 580, -413, -360, -344, -419, 2, 580, -188,
	-189, -508, -508, -508, -190, -202, -202, -411, -309, 579,
	-265, -250, 579, -202, -267, 2, -509, 584, 579, 562,
	562, 562, -196, -463, -122, -126, 343, -279, 572, -376,
	-321, -320, 358, 333, -321, 426, 426, 340, 176, 258,
	-222, -264, -419, -419, 149, 34, 34, -419, -419, -430,
	580, -419, -419, -351, 578, 5, -419, 580, 580, 8,
	-419, 580, 581, -557, -249, -419, 580, 61, 580, 580,
	584, 584, 580, 580, 580, 580, 580, 580, 580, -425,
	185, 138, 333, 579, 580, 580, -99, -427, 206, 61,
	-450, -427, -427, -378, -340, -450, -417, -264, 577, -499,
	-495, -453, 579, 581, -200, 562, -508, -508, 578, 2,
	577, -499, 580, 119, -266, -266, 487, 426, 322, -236,
	380, 426, 399, 268, 26, 26, -410, 153, -529, 94,
	-531, 77, 168, 103, 324, 329, 521, 380, 73, 126,
	396, -600, 39, 559, 580, -338, -447, -542, 579, -249,
	-338, -340, 324, 475, 126, 324, 126, 119, 515, 80,
	-266, -273, -340, -340, -279, -288, -505, 160, 580, 584,
	562, 2, 572, 572, -288, -505, -283, -288, -505, -281,
	356, 166, 160, 580, -264, 5, 5, 153, -261, 77,
	-266, 5, -266, -282, 119, 435, 503, 503, -193, 584,
	579, 562, 562, -193, -509, -122, -331, -322, 229, -266,
	-526, -523, -524, 380, -530, -532, 168, 380, -126, 2,
	-204, -203, -249, 5, 579, -307, 343, 578, -505, -373,
	-126, -283, -331, 580, 584, 147, -395, 531, -264, -279,
	153, -234, 261, -608, -503, -231, -398, -396, 139, 579,
	339, -126, -336, 562, 580, 580, 119, 119, 221, 152,
	-338, 579, 579, -340, 119, 580, -197, -198, -508, -122,
	-508, -196, -61, -62, 227, 94, 363, -276, 487, 227,
	579, 579, -222, -419, -419, -419, 580, -336, -499, 572,
	-551, 358, 580, -446, -419, -419, -420, 185, 579, -430,
	580, -552, 547, -419, -364, -365, -419, 425, 109, 204,
	-552, -552, 580, -495, 2, -508, 577, 2, 219, 39,
	399, 268, 39, 503, 39, -410, -273, -277, -270, -249,
	168, 212, 329, 544, -394, 253, 579, -420, -279, 579,
	2, 31, -601, 130, 232, 580, 584, -448, -260, -249,
	-419, -448, 580, 580, 329, 329, -419, -469, 579, -228,
	-228, 580, 580, -419, 503, -498, 101, -496, 2, -576,
	-263, -419, 503, 5, -228, -277, -228, -228, -261, 515,
	-288, -505, -283, -194, -195, -508, -122, -193, 39, -312,
	231, 2, -528, 253, -270, 253, -599, 548, 580, 584,
	562, 562, -305, -205, -81, -82, 504, -462, -331, 39,
	5, 579, 579, -249, 339, 579, -264, -244, 93, -608,
	-503, -232, -369, 325, -340, 94, -398, -426, -190, 579,
	579, -310, 82, 95, 127, 211, 188, 228, 468, 473,
	29, -310, 580, -338, -338, 580, 579, -190, 580, 584,
	29, 579, 29, 579, -279, -300, -351, -351, 580, -336,
	61, 584, 580, 580, -420, -430, 580, -553, -554, -269,
	584, 579, 579, 449, 578, 2, -236, 380, -249, 39,
	-249, -236, 380, -249, -531, -270, 324, 531, -419, -251,
	579, -419, 39, 232, 131, 217, -409, -602, 102, 476,
	220, -447, -222, 580, -408, 531, 396, -261, -338, 579,
	579, 579, 562, 185, 579, -473, -228, -282, 580, -581,
	394, -126, -316, -317, 219, 579, -311, 339, 119, 312,
	-203, -496, -496, 580, 39, -82, 9, 39, -126, -467,
	-338, -279, -338, 339, -238, -237, 270, -503, -233, 580,
	-273, -369, -509, -509, -408, 580, 580, -509, -62, -340,
	-340, 580, 580, -558, 388, 427, 205, -351, -337, 580,
	584, 39, -365, 2, 2, 2, 399, -249, 399, 153,
	207, 580, -533, 285, -249, 580, 131, 217, -312, 579,
	-223, -448, -312, 207, -279, -577, 531, 580, -324, -323,
	-320, -326, -325, -320, -351, -496, 101, 356, -351, -261,
	-584, 186, -583, 5, 10, -205, 356, -339, -449, -266,
	83, 119, -322, -126, -126, 580, 580, -395, 580, -279,
	-235, -510, 399, 401, -608, -234, -413, 580, 580, -409,
	-408, -318, -314, 580, 580, 580, 580, -559, -560, 51,
	518, 110, -419, -559, -559, -554, -556, 168, 548, -534,
	-537, -536, 339, 455, 186, 357, 580, 475, 543, -318,
	-340, 548, -331, -419, -408, 580, 584, 536, 580, 584,
	536, 580, 185, 580, -228, -192, 548, 47, -311, -279,
	580, 584, 379, 132, 142, -312, -599, -408, 579, -409,
	579, -241, -240, -608, -489, -244, 139, -190, -190, -312,
	-409, -206, 548, -190, -561, 151, -560, 376, 181, 426,
	376, 181, -561, -561, -270, 56, -536, 339, -537, 339,
	525, 132, -601, 580, 56, -533, -312, -323, 219, -325,
	185, 356, 433, -583, 31, -243, -242, 579, -449, 427,
	427, 2, -316, -311, -409, -338, -312, -338, -239, -340,
	-238, 325, 525, -318, -312, -413, 110, 203, 498, 312,
	34, 562, -535, 312, 415, 65, 448, -535, -413, 562,
	-534, 579, 579, 343, -340, 2, -205, -312, 580, -318,
	580, -235, 448, -206, -318, 426, 347, -560, -419, 23,
	329, 126, -419, -601, -351, -351, -189, 579, 580, -311,
	-318, -408, -206, -409, -241, -359, -413, -206, 580, 580,
	-189, -229, 65, 415, -243, -206, -409, -413, -312, -413,
	-413, -313, -314, 503, 580, -413, -312, -318, 579, -318,
	-206, -351, -206, -413, 580, -413, -313,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 510, 511, 513, 514, 515, 517,
	518, 520, 522, 524, 525, 526, 528, 529, 531, 532,
	533, 534, 535, 537, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	601, 603, 0, 1301, 1303, 1305, 1307, 0, 744, 0,
	36, 37, 0, -2, 308, 310, 312, 0, 338, 340,
	341, 343, 345, 347, -2, 0, 445, 446, 448, 450,
	-2, 0, 930, 932, 0, 590, 592, 0, 935, 937,
	0, 0, 612, 613, 0, 1408, -2, 606, 608, 610,
	675, 677, 679, 681, 683, 685, 687, 689, 691, 692,
	694, 696, 698, 700, 702, 703, 705, 707, 709, 710,
	712, 713, 715, 717, 719, 721, 723, 725, 727, 729,
	731, 733, 735, 737, 739, -2, 741, -2, -2, 0,
	-2, -2, -2, 1319, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 396, 397, 399, 401, 403, 405, 408,
	410, 412, 1466, 452, 454, 456, 458, 460, 462, 464,
	0, -2, 1480, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 99, 100, 101, 102,
	103, 104, 105, 106, 72, 73, 74, 76, 77, 78,
	79, 83, 84, 85, 86, 87, 88, 89, 90, 97,
	70, 0, 0, 1439, 1441, 1443, 1445, -2, 0, 0,
	5, 9, 11, 13, 15, 17, 19, 21, 23, 25,
	27, 29, 512, 516, 519, 521, 523, 527, 530, 536,
	538, 540, 497, 498, 501, 2144, 2161, 2162, 2163, 2166,
	2167, 2168, 2169, 2170, 2171, 2608, 2690, 2691, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 499, 500, 1107, 0, 564, 562, 2129,
	565, 2412, 567, 569, 439, 440, 441, 442, 443, 444,
	0, 583, 575, 1478, 584, 586, 587, 588, 589, 559,
	557, 0, 583, 2197, 581, 1299, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 375, 1156,
	1157, 1158, 1284, 1285, 2456, 1326, 0, 215, 602, -2,
	-2, -2, 2573, -2, 634, -2, 641, 2577, 2458, 646,
	0, 648, -2, 651, 1302, 1304, 1306, 742, 743, 2147,
	0, 0, 0, 0, 0, 38, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	225, -2, -2, -2, -2, 0, 0, 2502, 2249, 2097,
	2163, 2100, 2095, 309, 311, 313, 314, 0, 0, 0,
	0, 0, 0, 339, 342, 344, 346, -2, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	991, 983, 984, 1214, 0, 0, 0, -2, 447, 449,
	502, 503, 0, 1467, 1467, -2, 0, 0, 0, 0,
	280, 271, 931, 933, 934, 0, 0, 0, 0, 591,
	593, 0, 0, 253, 936, 938, 939, 0, 0, 0,
	0, 0, 282, 0, 0, 607, 609, 611, 676, 678,
	680, 682, 684, 686, 688, 690, 693, 695, 697, 699,
	701, 704, 706, 708, 711, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, 734, 736, 738, 740, 750,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 838, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 912, 0, 753, 755, 756, 757, 0, 816,
	836, 837, 846, 0, 1147, 1468, 1328, 1309, 1323, 1328,
	1311, 1312, 1313, 1314, 1315, 1320, 1322, 1316, 1317, 1318,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 398,
	400, 402, 404, 406, 409, 411, 413, -2, 1437, 1438,
	453, 455, 457, 459, 461, 463, 465, 594, 0, 596,
	0, 754, -2, 0, 1472, 1472, 1472, 0, 0, 1438,
	1436, 0, 599, 600, 655, 656, 1740, 0, 0, 0,
	0, 0, 0, 0, 1994, 1826, 0, 657, -2, 1857,
	1859, 2548, 2573, 1993, 1861, 1862, 1863, 1864, 1865, 0,
	1867, 1868, 1869, 1870, 1871, 1872, 0, 1874, 0, 1879,
	1880, 1881, 0, 2555, 2074, 2157, -2, 0, 0, 2561,
	2153, 0, 1960, 1897, -2, -2, 2180, 2159, 1672, 1673,
	1674, 1675, 1676, -2, -2, 2591, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 0, 2536, 2556,
	2557, 2562, 2564, 2558, 2545, 1922, 2262, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1699, 1708, -2, -2, -2, -2, -2, -2, -2, 2549,
	2550, 2567, 2570, 2576, 2581, 2582, 2554, 2563, 2590, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 1700, -2, -2, -2, -2,
	1455, 2425, 1458, 1107, 1456, 1440, 1442, 0, 1444, 0,
	0, 0, 1449, 1475, 1473, 0, 1524, 1453, 1454, 1542,
	1542, 1566, 0, 1547, 0, 1566, 1467, 1593, 0, 1553,
	2448, 1898, 1899, 0, 2163, 2158, -2, -2, 2588, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 566, 568,
	0, 0, 0, 582, 1477, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 2556, 0, 0,
	0, 387, 0, 389, 390, 391, 392, 393, 394, 395,
	184, 2556, 470, 495, 0, 184, 2556, 473, 184, 2556,
	476, 0, 479, 1212, 184, 2556, 482, 2125, 184, 2556,
	485, 487, 2133, 184, 2556, 491, 2140, 2138, 492, 2556,
	494, 285, 283, 284, 2176, 2177, 2184, 2185, 2186, 2187,
	2589, 2591, 1295, 1296, 1297, 1298, 0, 1325, 1213, 604,
	605, 0, 629, 0, 633, 2544, -2, 0, 2467, -2,
	637, 1329, 1333, 1334, 1335, 1336, 1337, 0, 0, 0,
	0, 1342, 0, 0, 643, 0, 0, 630, 631, 649,
	652, 0, 745, 746, 747, 748, 749, 69, 0, 2556,
	1593, 71, 0, 2119, 2188, 2189, 2190, 2191, 2192, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	75, 0, 2556, 80, 0, 2556, 0, -2, 91, 0,
	98, 0, 2122, 107, 0, 2556, 0, 2094, -2, 0,
	196, 0, 958, -2, 2556, 1155, 0, 0, 0, 0,
	921, 2091, 2096, 922, 2115, 923, 2101, 0, 315, 316,
	317, 318, 319, 0, 320, 2556, 322, 323, 0, 325,
	326, 2556, 328, 329, 0, 331, 0, 236, 237, 2556,
	350, 351, 0, 353, 354, 0, 356, 0, 0, 0,
	360, -2, 376, 0, 373, 363, 364, 366, 367, 368,
	369, 370, 0, 417, 415, 2130, 0, -2, 2556, 0,
	955, 0, 0, 1192, -2, 2556, 1152, 0, 1199, 2556,
	1195, 0, -2, 0, 1465, 2556, 1346, 987, 988, 989,
	990, 1605, 436, 0, 1373, 0, 1375, 0, 1394, 1599,
	1542, 0, 0, 1604, 0, -2, 553, 2146, -2, 505,
	0, 506, 0, -2, 0, 297, 0, 0, 940, 941,
	942, 943, 944, 947, 948, 949, 950, 1579, 254, 256,
	0, 0, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 0, 0, 614, 0, 0, 751, 752, 0, 0,
	762, 763, 764, 0, 297, 2459, 2421, 2283, 771, 0,
	774, 777, -2, 0, 0, 0, 0, 781, 0, 786,
	787, 788, 0, 0, 792, 794, 929, 796, 0, 0,
	798, 0, 802, 0, 805, 0, 807, 0, 809, -2,
	-2, -2, 817, 818, -2, 822, -2, 0, 825, 827,
	0, 829, -2, 0, 838, 834, 835, 0, 0, 0,
	0, 854, 855, 0, 864, 0, 867, 868, 869, 0,
	871, 872, 0, 874, 875, 876, 877, 0, 879, 880,
	-2, -2, 884, 886, 0, 893, 0, 899, 0, 903,
	0, 0, 911, 0, 758, 759, 184, 1597, 1308, -2,
	1310, 0, -2, 0, 595, 0, 598, 1497, 1423, 1420,
	0, 1494, 1495, 1424, 0, 0, 0, 1431, 0, 1470,
	1471, 0, 0, 0, 1410, 1411, 0, 0, 0, 0,
	1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2005, 2006,
	2009, 2010, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	2013, 2014, 0, 0, 2016, 0, 2018, 0, 0, 0,
	0, 0, 0, 1805, 1807, 2082, 0, 0, 2015, 1745,
	1746, 1747, 1748, 1749, 1784, 1785, 0, 0, 1858, 2079,
	2078, 1860, 0, 2030, 0, 1873, -2, 0, 1994, 2025,
	0, 0, 1882, 1883, 1884, 0, 0, 2030, 0, 0,
	2073, 1894, 1895, 1737, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 1685, 0, 1687, 0, 1688,
	1689, 1696, 1709, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 2054, -2, 0, 0, 0,
	0, 1701, 0, 1457, 0, 0, 1528, 2083, 2087, 2088,
	1528, 1528, 0, 0, 2031, 1590, 1590, 0, 0, 1585,
	1585, 1585, 1583, 1566, 0, 1566, 1576, 0, 1566, 1566,
	0, -2, 1547, 0, 0, 1576, 0, 1560, 541, 543,
	545, 547, 548, 549, 551, 1594, 1595, 0, 0, 0,
	0, 2164, 0, 0, 0, 0, 0, 2149, 0, 0,
	0, 0, 2512, 2458, 571, 585, 1467, 0, 2033, 1620,
	1624, 0, 1626, 1627, 1628, 1629, 1630, 0, 0, 1621,
	-2, 1697, 1699, 1720, 2181, 2182, 2183, 1680, 1681, 1682,
	1683, 1684, 1692, 1679, 1679, 1679, 1690, 1719, 1711, 1719,
	1715, 1665, 1666, 1667, 1702, 1703, 1704, 1705, 0, 2512,
	2458, 577, 0, 0, 1405, 200, 202, 203, 204, 205,
	206, 377, 0, 384, 385, 386, 0, 466, 0, 182,
	183, 0, 184, 2556, 471, 0, 474, 0, 184, 2556,
	2089, 480, 0, 483, 0, 0, 489, 0, 0, 0,
	0, 0, 184, 1407, 0, 0, 0, 0, -2, 639,
	644, 645, 0, 1331, 0, 1338, 666, 667, 668, 1340,
	1341, 0, 1343, 642, 669, 670, 671, 672, 673, 674,
	0, 2103, 2104, 2105, 2106, 2109, 2110, 0, 0, 640,
	659, 647, 0, 653, 108, 1281, 0, 0, 147, 0,
	1281, 1281, 0, 0, 0, 0, 171, 0, 1026, 0,
	0, 0, 0, 0, 132, 143, 120, 121, 0, 0,
	0, 0, 0, 0, 81, 1129, 0, 1132, 0, 0,
	0, 0, 0, 0, 0, 1145, 0, 0, 0, 0,
	0, 0, 0, 95, 96, 131, 0, 0, 1370, 0,
	126, 110, 0, 0, 0, 133, 145, 0, 175, 177,
	1023, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	207, 0, 0, 0, 1153, 0, 1464, 0, 0, 2556,
	0, 1579, 2329, -2, -2, 254, 1579, 920, 0, 0,
	2164, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 355, 357, 358, 359, 0, 1191, 0, 365, 407,
	1078, 2556, 0, 0, 434, 429, 0, 431, 0, 0,
	1128, 2556, 1126, 2134, 0, 1150, 0, 1107, 2556, 2132,
	0, 0, 0, 1200, 2173, 1209, 1213, 1360, 0, 438,
	0, 1376, 1378, 0, 0, 1600, 0, 1602, 1542, 1467,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 260, 0, 1578, 0, 0, 1579, 254, 2436, 297,
	297, 1579, 616, 1579, 618, 0, 0, 765, 766, 0,
	297, 297, 297, 772, 773, 775, 776, -2, -2, -2,
	894, 778, 779, 861, 0, 0, 0, 860, 791, 795,
	0, 914, 2444, 2458, 2512, 927, 861, 2249, 861, 2249,
	861, 2249, 806, 808, 811, 849, 857, 821, 826, 0,
	0, 831, 839, -2, 0, 841, 0, 843, 0, 845,
	861, 862, 865, 870, 873, 878, 0, 895, 896, 0,
	0, 0, 0, 0, 0, 906, 907, 0, 0, 1146,
	0, 1321, 1497, 1423, 597, 1414, 1496, 1415, 1422, 1425,
	0, 0, 1427, 0, 1429, 0, 1492, 1493, 1500, 1501,
	0, 1511, 1512, 1504, 0, -2, 0, 0, 1507, 1508,
	1433, 0, 1450, 1451, 1452, 1481, 1484, 1228, 0, 2690,
	1741, 1615, 1742, 1743, 2118, 0, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, -2, -2, -2, -2,
	-2, -2, -2, -2, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, -2, -2, -2, 1782, 1783,
	-2, 2017, 2019, 0, 2082, 0, -2, 0, -2, -2,
	-2, -2, 1802, 0, 1804, 1809, 1811, 1813, 0, 0,
	0, 0, 2081, 1823, 2065, 2066, 0, 0, 1996, 1997,
	1998, 1808, 0, 1827, 2080, 2077, 0, 0, 2029, 1480,
	1886, 0, 0, 0, 0, 1893, 1878, 2027, 0, 2026,
	0, 0, 0, 2037, 0, 2072, 2068, 0, 2116, 1736,
	1723, 1724, 1725, 1726, 1727, 1728, 1738, 0, 2113, 2150,
	2156, 1970, 0, 0, 0, 1923, 1924, 1925, 1926, 1927,
	0, 1929, 1930, 0, 1932, 1933, 0, 1935, 1936, 0,
	1938, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 1637, 0, 0, 0, 1641, 0,
	0, 0, 1645, 0, 0, 0, 1649, 0, 0, 0,
	1653, 0, 0, 0, 1657, 0, 0, 0, 1661, 0,
	0, 0, 0, 0, 1942, 0, 2040, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1944, 0, 1946, 2031,
	2051, 0, 0, 1828, 0, 0, 0, 1994, 0, 1949,
	2031, 2059, 0, 0, 0, 0, 0, 2031, 0, 2064,
	0, 1956, 0, 1958, 1459, 0, 0, 1610, 0, 0,
	0, 2086, 1610, 1610, 0, 1523, 0, 0, 1586, 1587,
	1588, 1589, 0, 0, 1590, 0, 1580, 1584, 1581, 1582,
	1576, 1539, 0, 0, 2120, 1576, 1545, 1575, 0, 1107,
	1565, 1576, 1576, 0, -2, 1549, 1566, 0, 0, 542,
	544, 546, 550, 552, 0, 0, 1480, -2, 0, -2,
	1106, 0, 0, 0, 0, 561, 563, 0, 0, 486,
	0, 0, 555, 0, 558, 0, 1611, 1614, 0, 0,
	1625, 1631, 1632, 0, -2, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 496, 184, 468,
	0, 184, 184, 477, 0, 0, 184, 488, 184, 2141,
	184, 2139, 286, 493, 1406, 218, 0, 632, 0, 1330,
	1339, 0, 663, 0, 665, 0, 2107, 2111, 2108, 2112,
	0, 654, 0, 0, 0, 0, 1280, 0, 1235, 0,
	0, 0, 0, 0, 0, 151, 2556, 0, 186, 0,
	0, 1071, 2126, 0, 1063, 0, 0, 2269, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1130, 1131, 1133, 1140, 1142, 0,
	1136, 2114, 0, 0, 1137, 0, 1139, 1141, 1143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 1370, 0, 0, 0, 119, 123, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 1185, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 0, 0,
	-2, 0, 0, 0, 0, 0, 228, 0, 288, 2092,
	2102, 0, 945, 946, 321, 324, 327, 330, 224, 0,
	361, 0, 0, 993, 968, 0, 0, 416, 297, 0,
	0, 430, 2143, 953, 1124, 1127, 0, 1107, 2556, 1164,
	0, 0, 0, 0, 0, 0, 1198, 0, 0, 2556,
	2121, 2172, 2173, 1362, 1370, 0, 1610, 0, 1392, 1379,
	0, 0, 0, 1392, 1396, 1397, 1399, 1400, 0, 0,
	1601, 1607, 504, 554, 1467, 1467, 297, 295, 2389, 293,
	290, 292, 0, 0, 0, 994, 996, 997, 998, 186,
	0, 2173, 1063, 2318, 2173, 0, 1382, 1384, 0, 248,
	0, 257, 1579, 255, 260, 0, 0, 0, 428, 615,
	620, 760, 0, 297, 768, 769, 770, 813, 851, 859,
	780, 782, 783, 784, 0, 0, 928, 924, 925, 926,
	797, 861, 800, 861, 803, 861, 824, 828, 833, 840,
	0, 0, 0, 853, 0, 0, 0, 0, 0, 0,
	0, 900, 901, 902, 904, 909, 908, 913, 1598, 1418,
	1419, 1421, 0, 1430, 0, 0, 1506, -2, -2, 1505,
	1509, 1510, -2, -2, -2, -2, 1426, 0, 1435, 1432,
	0, 1491, 1226, 1227, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1824, 0, -2, 1803, 1806, 1810, 1812,
	1814, 0, 0, 0, 0, 0, 0, 2020, 0, 2022,
	1825, 2075, 2078, 1992, 0, 0, 1479, 1480, 1480, 0,
	1892, 0, 2028, 0, 2035, 2036, 0, 1885, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 1928, 1931, 1934, 1937, 0, 0,
	0, 0, 1917, 0, 0, 0, 1921, 1691, 1677, 0,
	1719, 1717, 1718, 1712, 1719, 1716, 1669, 0, 1634, 1635,
	1636, 1638, 1639, 1640, 1642, 1643, 1644, 1646, 1647, 1648,
	1650, 1651, 1652, 1654, 1655, 1656, 1658, 1659, 1660, 1662,
	1663, 1664, 1668, 0, 1941, 0, 1943, 1945, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1832, 1833, 1948, 2057, 2058,
	0, 0, 0, 0, 0, 0, 1954, 0, 2063, 1955,
	1957, 1467, 0, 1460, 0, 1525, 1514, 1609, 0, 2084,
	1579, 1527, 1529, 2085, 2123, 1514, 1514, 0, 2032, 0,
	0, 1570, 0, 0, 0, 1572, 1543, 0, 0, 1537,
	0, 1533, 1534, 1535, 1536, 1544, 1107, 1574, 1546, 1550,
	2150, 0, 1576, 0, 1561, 0, 1563, 1596, 0, 1555,
	1558, 0, 0, 2165, 1610, 0, 332, 336, 337, 333,
	334, 335, 570, 0, 0, 0, 0, 2034, 0, 1616,
	0, 1622, 0, 0, 0, 0, 576, 0, 0, 0,
	201, 1404, 383, 467, 184, 472, 475, 2090, 184, 481,
	484, 490, 214, 0, 628, -2, 661, 662, 664, 0,
	660, 148, 1281, 0, 0, 1231, 1233, 2137, 1237, 0,
	0, 0, 0, 0, 1258, 0, 153, 2556, 162, 0,
	1042, 0, 2124, 0, 0, 0, 0, 0, 0, 1283,
	0, 0, 2556, 184, 2556, 184, 165, 167, 170, 0,
	174, 172, 0, 1030, 0, 0, 1033, 109, 1281, 0,
	0, 112, 116, 124, 0, 0, 0, 130, 0, 0,
	0, 1260, 1264, 1272, 0, 0, 0, 1134, 1135, 1138,
	1144, 82, 0, 0, 0, 1268, 1270, 1276, 92, 93,
	2135, 94, 0, 1230, 0, 0, 0, 0, 176, 114,
	118, 125, 0, 1278, 111, 0, 199, 0, 0, 189,
	184, 2556, 0, 191, 0, 192, 193, 208, 0, 0,
	0, 956, 957, 1186, 1148, 1149, 0, 1154, 0, 0,
	0, 0, 1579, 220, 0, 1579, 228, 0, 2098, 0,
	349, 0, 0, 0, 0, 992, 1089, 0, 963, 0,
	0, 0, 422, 418, 0, 427, 433, 432, -2, 0,
	0, 0, 0, -2, 0, 0, 1202, 1196, 1197, 0,
	0, 0, 0, 2556, 1364, 1370, 0, 1465, 1480, 437,
	1371, 1392, 0, 0, 0, 1381, 1377, 1374, 1610, 0,
	0, 0, 0, 0, 1603, 1606, 507, 508, 272, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 999, 1003,
	0, 2173, 2173, 0, 2128, 0, 0, 0, 0, 258,
	0, 261, 0, 0, 0, 266, 267, 268, 269, 270,
	260, 250, 1579, 0, 0, 617, 0, 0, 767, 0,
	790, 799, 801, 804, 842, 844, 861, 887, 888, 1020,
	0, 1020, 0, 0, 905, 1428, 0, 1503, 1434, 1485,
	1486, 0, 1228, 0, 1744, 1787, 0, 0, -2, 0,
	0, 1791, 0, 0, 0, -2, 0, 0, 0, 2021,
	2023, 0, 2077, 1887, 0, 0, 0, 1891, 1875, 1876,
	0, 1995, 2038, 2067, 2071, 0, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 0, 2117, 2151, 2155, 1968, 1969, 1973,
	2131, 0, 0, 0, 1900, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 1714, 0, 0, 2039, 2050, 2052,
	1829, 1830, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, -2, -2, -2, 1847, 1848, 1849, -2, -2,
	-2, 0, 0, 0, 2053, 2055, 2056, 2060, 2061, 0,
	1951, 1952, 1953, 2062, 0, 1467, 1461, 1522, 0, 1608,
	1526, 0, 1522, 1522, 1474, 1568, 0, 0, 1592, 0,
	1540, 0, 1541, 0, 1573, 0, 1548, 1551, 1552, 1562,
	0, 1554, 0, 1557, 0, 1887, -2, 298, 299, 301,
	0, 304, 305, 0, 0, 573, 574, 572, 556, 0,
	0, 1618, 0, 0, 1694, 1698, 1722, 579, 580, 578,
	469, 478, 216, 0, 1577, 0, 0, 0, 0, 2203,
	1248, 1249, 0, 2573, 1253, 0, 0, 0, 0, 185,
	1040, 1070, 0, 0, 0, 1062, 0, 0, 1076, 155,
	0, 0, 0, 163, 0, 0, 160, 0, 169, 173,
	1027, 0, 0, 0, 0, 1236, 0, 0, 0, 127,
	128, 129, 0, 134, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 1355, 0, 1349, 0, 0,
	0, 187, 0, 0, 0, 1225, 210, 0, 0, 0,
	0, 0, 1189, 1190, 1261, 1265, 1273, 0, 0, 0,
	228, 226, 0, 229, 0, 232, 233, 0, 228, 222,
	0, 0, 1107, 362, 966, 1077, 0, 1079, 0, 964,
	0, 0, 1078, 414, 0, 421, 0, 0, 1128, 0,
	0, 1151, 1162, 1107, 0, 1201, 1203, 0, 1211, 0,
	0, 0, 1366, 1370, 0, 1359, 1360, 1499, 1372, 1390,
	-2, 0, 0, 1480, 1398, 1395, 1401, 1402, 0, 294,
	0, 289, 291, 0, 275, 0, 0, 995, 1000, 0,
	0, 0, 0, 0, 1383, 1385, 0, 0, 0, 0,
	0, 0, 249, 260, 252, 281, 0, 761, 785, 852,
	889, 1019, 0, 0, 891, 0, 0, 1502, 1489, 1490,
	1487, 1228, 1789, 1793, 0, 0, 0, 1795, -2, 0,
	1817, -2, -2, 2024, 2076, 1866, 1480, 1888, 1890, 1877,
	2070, 1739, 0, 1975, 1972, 0, 1959, 0, 1912, 1913,
	0, 0, 1916, 1918, 1919, 1920, 1678, 1671, 1670, 2049,
	0, 0, 0, 0, 1950, 1462, 0, 1964, 0, 0,
	1530, 1964, 1964, 1569, 0, 1571, 1538, 1531, 0, 2151,
	1564, 1556, 0, 0, 302, 0, 306, 307, 1612, 1617,
	0, 1623, 1693, 217, 149, 150, 1240, 1241, 1243, 1244,
	0, 0, 1250, 1251, 0, 1256, 152, 0, 1041, 0,
	1044, 0, 0, 0, 0, 1051, 1063, 0, 0, 0,
	0, 0, 1064, 0, 1093, 0, 1216, 1223, 0, -2,
	0, 0, 0, 157, 179, 0, 0, 1282, 0, 0,
	184, 184, 0, 0, 1232, 1234, 1259, 0, 0, 0,
	0, 137, 0, 0, 1262, 1266, 1274, 1269, 1271, 1277,
	0, 1356, 0, 0, 1279, 197, 198, 0, 184, 0,
	184, 190, 184, 1225, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 221, 287, 228, 0, 1014, 0, 1089,
	1081, 1082, 1083, 0, 1088, 1090, 0, 0, 980, 965,
	0, 976, 0, 0, 993, 968, 0, 419, 954, 1125,
	1159, 1107, 0, 1193, 0, 0, 0, 0, 0, 0,
	0, 1368, 1370, 0, 1361, 1362, 1392, 1498, 0, 0,
	0, 1380, 1499, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 262, 0, 263, 264,
	265, 251, 619, 621, 0, 0, 627, 1018, 0, 0,
	0, 0, 1488, 1797, -2, -2, 1818, 0, 2152, 2154,
	1480, 0, 1961, 1482, 0, 0, -2, 0, 0, 0,
	1463, 1446, 0, 1521, 1513, 1515, 1517, 2447, 2245, 2555,
	1447, 1448, 1591, 0, 1559, 303, 0, 1619, 0, 0,
	1245, 1246, 0, 0, 0, 154, 0, 1045, 1046, 2127,
	1048, 0, 1050, 1052, 1053, 1054, 0, 1057, 2175, 0,
	1061, 0, 1072, 1094, 0, 1103, 0, 1218, 1228, 1222,
	0, 1220, 1105, 0, 156, 158, 178, 1225, 0, 159,
	168, 0, 0, 113, 0, 0, 2239, 140, 138, 136,
	1229, 115, 0, 199, 209, 1224, 211, 194, 184, 0,
	1263, 1267, 1275, 230, 0, 231, 234, 0, 0, 1029,
	0, 967, 1080, 0, 1091, 1092, 970, 0, 969, 0,
	0, 0, 0, 0, 420, 423, 0, 426, 0, 0,
	1204, 1202, 0, 1210, 0, 0, 0, 1348, 0, 0,
	1363, 1364, 435, 1386, 0, 0, 1392, 1403, 274, 0,
	0, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1002, 1105, 0, 0, 1069, 0, 279, 259, 0,
	623, 0, 625, 0, 890, 892, 0, 0, 1889, 1979,
	0, 0, 1914, 1915, -2, 0, 1855, 1963, 1965, 0,
	0, 0, 0, 0, 1532, 1613, 1238, 0, 1242, 0,
	1252, 1254, 0, 1257, 1043, 1047, 0, 0, 0, 1111,
	0, 0, 1065, 0, 1097, 1098, 1014, 0, 1099, 1100,
	1101, 1217, 1491, 1223, 1014, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 188, 212, 1225, 227, 244,
	0, 1160, 968, 1028, 0, 0, 978, 0, 981, 0,
	977, 974, 975, 966, 0, 424, 425, 0, 1163, 0,
	0, 1211, 0, 0, 1351, 1347, 1370, 1365, 1366, 1610,
	1389, 1393, 0, 0, 1103, 1105, 1025, 0, 622, 0,
	0, 897, 898, 0, 0, 0, 0, 1974, 1483, 1856,
	0, 0, 1516, 1518, 1519, 1520, 1239, 1247, 1255, 0,
	0, 1056, 1116, 0, 0, 0, 1095, 1096, 1025, 0,
	1221, 1219, 1074, 0, 1107, 161, 0, 1105, 0, 1034,
	0, 0, 1037, 0, 0, 141, 2239, 139, 0, 184,
	247, 0, 241, 239, 240, 970, 0, 0, 1085, 1087,
	0, 982, 1014, 980, 1161, 1194, 1105, 0, 1103, 0,
	1358, 1370, 1352, 1353, 0, 1368, 0, 297, 297, 1014,
	1103, 968, 1024, 297, 624, 626, 1971, 1991, 1980, -2,
	2515, 2246, 0, 1991, 1991, 1966, 1967, 0, 0, 1058,
	1112, 1113, 0, 1108, 1109, 1110, 2174, 1059, 1060, 1093,
	0, 0, 1111, 180, 1014, 1031, 0, 0, 1032, 0,
	0, 144, 0, 146, 213, 235, 0, 0, 962, 0,
	1084, 0, 0, 0, 0, 1029, 970, 1103, 0, 1014,
	0, 1344, 1357, 0, 1367, 1348, 0, 276, 277, 1025,
	1014, 1610, 0, 278, 1976, 0, 0, 1982, 1983, 1984,
	1985, 1986, 1977, 1978, 1049, 0, 1114, 0, 1115, 0,
	0, 0, 1610, 1102, 0, 1116, 166, 1035, 0, 1038,
	0, 142, 0, 242, 243, 959, 961, 0, 1086, 971,
	0, 973, 968, 979, 1014, 0, 1025, 0, 1350, 2136,
	1351, 1387, 0, 968, 1025, 1068, 0, 1988, 1989, 0,
	0, 0, 1117, 0, 1120, 1121, 0, 1118, 1073, 0,
	1093, 0, 0, 0, 0, 972, 970, 1025, 1105, 968,
	1103, 1358, 0, 1610, 968, 1987, 1990, 1981, 1055, 1119,
	1122, 1123, 1104, 1075, 0, 0, 245, 0, 1017, 962,
	968, 1103, 1610, 1014, 1345, 1610, 1066, 1610, 1022, 0,
	0, 1013, 1015, 1016, 960, 1610, 1014, 1207, 1025, 1388,
	1067, 1036, 1021, 0, 246, 1205, 1025, 968, 0, 968,
	1610, 0, 1610, 1208, 1022, 1206, 1039,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 568, 3, 574, 569, 3,
	579, 580, 572, 570, 584, 571, 581, 573, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 587, 3,
	560, 562, 561, 565, 583, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 577, 3, 578, 575, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 585, 567, 586, 563,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 564, 57903, 566, 57904, 576,
	57905, 582, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1294
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1321
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1401
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1796
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1956
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2014
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2177
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2181
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2219
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2270
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2353
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = nil
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2755
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2764
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2770
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2780
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2785
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2794
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2821
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = nil
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2897
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3073
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3112
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "CREATE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "create access method")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "create cast")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "create operator")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "create publication")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "create rule")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "create server")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3153
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3156
		{
		}
	case 374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3157
		{
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3160
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3161
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "drop server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3337
		{

			sqlVAL.union.val = nil
		}
	case 435:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DELETE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3365
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "DROP")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3681
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3689
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DELETE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "INSERT")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "DELETE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "INSERT")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3766
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3799
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "GRANT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3943
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "RESET")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "RESET")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "USE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "USE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			return unimplemented(sqllex, "set from current")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = tree.Low
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = tree.Normal
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = tree.High
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4437
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.str = "client_encoding"
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.str = "timezone"
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4506
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4569
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4578
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4617
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4715
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4723
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = true
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = true
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = false
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = true
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = false
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4942
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = true
		}
	case 861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = false
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5130
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5138
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5170
		{
		}
	case 897:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5179
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5202
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5283
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5466
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5475
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5537
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "RESUME")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5668
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5707
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5723
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{

			sqlVAL.union.val = nil
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.str = ""
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = nil
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5821
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5835
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5850
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5944
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5947
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5951
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5957
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5973
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.str = ""
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6221
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = true
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = false
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6358
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6369
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6386
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6396
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6476
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6480
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6481
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6553
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6637
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6646
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6654
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6680
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6685
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6690
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6693
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6695
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6733
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = true
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{

			sqlVAL.union.val = true
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = false
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6773
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6787
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6799
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6811
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6821
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6831
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = nil
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6941
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6969
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6971
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6973
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6977
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7015
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7033
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7052
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7069
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7086
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7090
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = false
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = true
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = false
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = true
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = false
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7144
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7150
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.str = ""
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.str = ""
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7223
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7229
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7531
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7537
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7549
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7555
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7569
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7575
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7593
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7597
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7608
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7626
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7656
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7704
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7708
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7729
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7747
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7752
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7761
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7762
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7763
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7783
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7784
		{
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7825
		{
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7827
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7918
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.str = ""
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{

		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7959
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.str = ""
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.str = ""
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.str = ""
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8014
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8027
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8028
		{
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8057
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8075
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8088
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8164
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8168
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8206
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8259
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8274
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8560
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = true
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = false
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = nil
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = true
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = false
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = false
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = true
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8673
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8740
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8745
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8774
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8902
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8935
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8972
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8977
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8993
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9005
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9024
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9063
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9073
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9119
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9149
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9182
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = nil
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = true
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = false
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.str = tree.AstFull
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.str = tree.AstRight
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.str = tree.AstInner
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9302
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.str = tree.AstHash
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.str = ""
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9416
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = false
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = true
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9478
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9486
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9505
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9515
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9528
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9535
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9597
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9603
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9605
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9607
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9610
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9614
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9618
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9619
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9621
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9622
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9625
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9626
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9627
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9630
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9631
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = types.Geography
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9646
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9654
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9688
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = nil
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = types.Int2
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = types.Int
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = types.Float4
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = types.Float
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9739
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9747
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = types.Bool
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9761
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = types.Float
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9780
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9786
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9808
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = types.String
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = true
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = false
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = types.Date
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9857
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9865
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9879
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9896
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9913
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = true
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = false
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = false
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = types.Interval
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10021
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = nil
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10066
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10444
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10665
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10691
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10715
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10745
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10756
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10757
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10781
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10847
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11043
		{
			return unimplemented(sqllex, "treat")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.str = ""
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11218
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11286
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11315
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = tree.Any
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = tree.Some
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.All
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.Div
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.LT
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = tree.GT
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = tree.LE
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = tree.GE
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = tree.NE
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = tree.Like
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11676
		{
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11677
		{
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11830
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11846
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11855
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11895
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12128
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.str = ""
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
