// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:973
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15557

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1883,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	283, 570,
	-2, 0,
	-1, 75,
	8, 1032,
	29, 1032,
	648, 1032,
	649, 1032,
	-2, 0,
	-1, 76,
	8, 1032,
	29, 1032,
	648, 1032,
	649, 1032,
	-2, 0,
	-1, 78,
	1, 1730,
	139, 1730,
	270, 1730,
	358, 1730,
	421, 1730,
	431, 1730,
	629, 1730,
	661, 1730,
	-2, 0,
	-1, 79,
	1, 1730,
	661, 1730,
	-2, 0,
	-1, 85,
	263, 286,
	565, 286,
	-2, 0,
	-1, 99,
	204, 471,
	249, 1604,
	265, 1604,
	283, 471,
	423, 471,
	435, 1347,
	479, 471,
	496, 1347,
	549, 1347,
	578, 471,
	605, 1347,
	-2, 0,
	-1, 106,
	141, 1883,
	258, 1883,
	589, 1883,
	590, 1883,
	-2, 0,
	-1, 124,
	161, 1854,
	182, 1854,
	195, 1854,
	261, 1854,
	297, 1854,
	371, 1854,
	382, 1854,
	584, 1854,
	-2, 1825,
	-1, 166,
	169, 1166,
	281, 1166,
	426, 1127,
	501, 1127,
	548, 1127,
	568, 1166,
	570, 1127,
	-2, 0,
	-1, 171,
	4, 1885,
	21, 1885,
	22, 1885,
	23, 1885,
	24, 1885,
	25, 1885,
	26, 1885,
	27, 1885,
	28, 1885,
	30, 1885,
	31, 1885,
	37, 1885,
	41, 1885,
	43, 1885,
	44, 1885,
	45, 1885,
	47, 1885,
	48, 1885,
	49, 1885,
	50, 1885,
	51, 1885,
	52, 1885,
	53, 1885,
	54, 1885,
	55, 1885,
	57, 1885,
	58, 1885,
	59, 1885,
	60, 1885,
	62, 1885,
	63, 1885,
	64, 1885,
	65, 1885,
	66, 1885,
	67, 1885,
	68, 1885,
	69, 1885,
	73, 1885,
	74, 1885,
	75, 1885,
	76, 1885,
	78, 1885,
	79, 1885,
	80, 1885,
	84, 1885,
	85, 1885,
	86, 1885,
	87, 1885,
	88, 1885,
	89, 1885,
	90, 1885,
	91, 1885,
	94, 1885,
	95, 1885,
	96, 1885,
	97, 1885,
	98, 1885,
	100, 1885,
	102, 1885,
	103, 1885,
	104, 1885,
	105, 1885,
	106, 1885,
	107, 1885,
	108, 1885,
	110, 1885,
	111, 1885,
	112, 1885,
	114, 1885,
	115, 1885,
	116, 1885,
	124, 1885,
	125, 1885,
	126, 1885,
	127, 1885,
	128, 1885,
	130, 1885,
	131, 1885,
	132, 1885,
	133, 1885,
	135, 1885,
	136, 1885,
	137, 1885,
	138, 1885,
	140, 1885,
	141, 1885,
	142, 1885,
	143, 1885,
	145, 1885,
	146, 1885,
	147, 1885,
	150, 1885,
	151, 1885,
	152, 1885,
	154, 1885,
	155, 1885,
	156, 1885,
	158, 1885,
	159, 1885,
	160, 1885,
	162, 1885,
	163, 1885,
	164, 1885,
	165, 1885,
	166, 1885,
	167, 1885,
	168, 1885,
	169, 1885,
	170, 1885,
	171, 1885,
	172, 1885,
	173, 1885,
	174, 1885,
	175, 1885,
	176, 1885,
	177, 1885,
	178, 1885,
	179, 1885,
	181, 1885,
	187, 1885,
	188, 1885,
	189, 1885,
	190, 1885,
	194, 1885,
	196, 1885,
	197, 1885,
	198, 1885,
	200, 1885,
	201, 1885,
	204, 1885,
	205, 1885,
	206, 1885,
	207, 1885,
	208, 1885,
	209, 1885,
	210, 1885,
	211, 1885,
	212, 1885,
	213, 1885,
	214, 1885,
	215, 1885,
	216, 1885,
	217, 1885,
	219, 1885,
	220, 1885,
	222, 1885,
	223, 1885,
	225, 1885,
	226, 1885,
	227, 1885,
	228, 1885,
	229, 1885,
	230, 1885,
	231, 1885,
	232, 1885,
	233, 1885,
	234, 1885,
	235, 1885,
	237, 1885,
	238, 1885,
	239, 1885,
	241, 1885,
	242, 1885,
	243, 1885,
	244, 1885,
	245, 1885,
	249, 1885,
	250, 1885,
	251, 1885,
	252, 1885,
	255, 1885,
	256, 1885,
	257, 1885,
	258, 1885,
	259, 1885,
	260, 1885,
	262, 1885,
	264, 1885,
	265, 1885,
	266, 1885,
	268, 1885,
	270, 1885,
	271, 1885,
	272, 1885,
	274, 1885,
	278, 1885,
	279, 1885,
	280, 1885,
	281, 1885,
	282, 1885,
	283, 1885,
	284, 1885,
	286, 1885,
	287, 1885,
	288, 1885,
	290, 1885,
	291, 1885,
	292, 1885,
	294, 1885,
	295, 1885,
	298, 1885,
	299, 1885,
	300, 1885,
	301, 1885,
	302, 1885,
	303, 1885,
	304, 1885,
	307, 1885,
	308, 1885,
	309, 1885,
	310, 1885,
	312, 1885,
	313, 1885,
	314, 1885,
	315, 1885,
	316, 1885,
	317, 1885,
	318, 1885,
	319, 1885,
	320, 1885,
	321, 1885,
	322, 1885,
	323, 1885,
	324, 1885,
	325, 1885,
	326, 1885,
	327, 1885,
	328, 1885,
	329, 1885,
	330, 1885,
	331, 1885,
	332, 1885,
	333, 1885,
	334, 1885,
	336, 1885,
	338, 1885,
	339, 1885,
	340, 1885,
	341, 1885,
	342, 1885,
	343, 1885,
	344, 1885,
	345, 1885,
	346, 1885,
	347, 1885,
	348, 1885,
	349, 1885,
	350, 1885,
	351, 1885,
	352, 1885,
	353, 1885,
	354, 1885,
	356, 1885,
	357, 1885,
	359, 1885,
	361, 1885,
	362, 1885,
	363, 1885,
	364, 1885,
	366, 1885,
	367, 1885,
	368, 1885,
	369, 1885,
	370, 1885,
	373, 1885,
	375, 1885,
	377, 1885,
	378, 1885,
	379, 1885,
	380, 1885,
	383, 1885,
	384, 1885,
	385, 1885,
	387, 1885,
	389, 1885,
	390, 1885,
	391, 1885,
	392, 1885,
	393, 1885,
	394, 1885,
	395, 1885,
	396, 1885,
	397, 1885,
	398, 1885,
	399, 1885,
	400, 1885,
	401, 1885,
	402, 1885,
	404, 1885,
	405, 1885,
	406, 1885,
	407, 1885,
	408, 1885,
	409, 1885,
	410, 1885,
	411, 1885,
	412, 1885,
	413, 1885,
	414, 1885,
	415, 1885,
	416, 1885,
	417, 1885,
	418, 1885,
	420, 1885,
	421, 1885,
	422, 1885,
	424, 1885,
	425, 1885,
	426, 1885,
	427, 1885,
	428, 1885,
	429, 1885,
	430, 1885,
	431, 1885,
	432, 1885,
	433, 1885,
	434, 1885,
	435, 1885,
	436, 1885,
	437, 1885,
	439, 1885,
	441, 1885,
	442, 1885,
	443, 1885,
	449, 1885,
	450, 1885,
	451, 1885,
	453, 1885,
	454, 1885,
	455, 1885,
	456, 1885,
	457, 1885,
	458, 1885,
	459, 1885,
	460, 1885,
	461, 1885,
	462, 1885,
	463, 1885,
	465, 1885,
	466, 1885,
	467, 1885,
	468, 1885,
	469, 1885,
	471, 1885,
	472, 1885,
	473, 1885,
	474, 1885,
	475, 1885,
	476, 1885,
	477, 1885,
	479, 1885,
	480, 1885,
	481, 1885,
	482, 1885,
	483, 1885,
	484, 1885,
	485, 1885,
	486, 1885,
	487, 1885,
	488, 1885,
	489, 1885,
	490, 1885,
	491, 1885,
	492, 1885,
	493, 1885,
	494, 1885,
	496, 1885,
	497, 1885,
	498, 1885,
	499, 1885,
	500, 1885,
	501, 1885,
	503, 1885,
	504, 1885,
	505, 1885,
	506, 1885,
	507, 1885,
	508, 1885,
	509, 1885,
	511, 1885,
	512, 1885,
	513, 1885,
	514, 1885,
	515, 1885,
	516, 1885,
	517, 1885,
	518, 1885,
	520, 1885,
	522, 1885,
	523, 1885,
	524, 1885,
	525, 1885,
	526, 1885,
	527, 1885,
	528, 1885,
	529, 1885,
	530, 1885,
	531, 1885,
	532, 1885,
	533, 1885,
	534, 1885,
	535, 1885,
	536, 1885,
	537, 1885,
	538, 1885,
	539, 1885,
	540, 1885,
	541, 1885,
	542, 1885,
	544, 1885,
	545, 1885,
	547, 1885,
	548, 1885,
	550, 1885,
	551, 1885,
	552, 1885,
	553, 1885,
	554, 1885,
	555, 1885,
	557, 1885,
	558, 1885,
	560, 1885,
	561, 1885,
	562, 1885,
	563, 1885,
	564, 1885,
	566, 1885,
	568, 1885,
	569, 1885,
	570, 1885,
	571, 1885,
	572, 1885,
	573, 1885,
	574, 1885,
	575, 1885,
	577, 1885,
	578, 1885,
	579, 1885,
	580, 1885,
	581, 1885,
	582, 1885,
	583, 1885,
	586, 1885,
	587, 1885,
	588, 1885,
	589, 1885,
	590, 1885,
	591, 1885,
	592, 1885,
	593, 1885,
	595, 1885,
	598, 1885,
	599, 1885,
	600, 1885,
	601, 1885,
	602, 1885,
	603, 1885,
	605, 1885,
	606, 1885,
	607, 1885,
	608, 1885,
	609, 1885,
	610, 1885,
	611, 1885,
	612, 1885,
	613, 1885,
	614, 1885,
	615, 1885,
	620, 1885,
	621, 1885,
	622, 1885,
	623, 1885,
	624, 1885,
	625, 1885,
	-2, 0,
	-1, 173,
	1, 1730,
	661, 1730,
	664, 1730,
	-2, 0,
	-1, 174,
	1, 1730,
	565, 1730,
	661, 1730,
	664, 1730,
	-2, 0,
	-1, 210,
	161, 1853,
	182, 1853,
	195, 1853,
	261, 1853,
	297, 1853,
	371, 1853,
	382, 1853,
	584, 1853,
	-2, 1828,
	-1, 270,
	4, 1892,
	5, 1892,
	6, 1892,
	7, 1892,
	8, 1892,
	9, 1892,
	10, 1892,
	21, 1892,
	22, 1892,
	23, 1892,
	24, 1892,
	25, 1892,
	26, 1892,
	27, 1892,
	28, 1892,
	30, 1892,
	31, 1892,
	37, 1892,
	38, 1892,
	41, 1892,
	43, 1892,
	44, 1892,
	45, 1892,
	46, 1892,
	47, 1892,
	48, 1892,
	49, 1892,
	50, 1892,
	51, 1892,
	52, 1892,
	53, 1892,
	54, 1892,
	55, 1892,
	57, 1892,
	58, 1892,
	59, 1892,
	60, 1892,
	62, 1892,
	63, 1892,
	64, 1892,
	65, 1892,
	66, 1892,
	67, 1892,
	68, 1892,
	69, 1892,
	70, 1892,
	71, 1892,
	72, 1892,
	73, 1892,
	74, 1892,
	75, 1892,
	76, 1892,
	78, 1892,
	79, 1892,
	80, 1892,
	82, 1892,
	84, 1892,
	85, 1892,
	86, 1892,
	87, 1892,
	88, 1892,
	89, 1892,
	90, 1892,
	91, 1892,
	94, 1892,
	95, 1892,
	96, 1892,
	97, 1892,
	98, 1892,
	100, 1892,
	102, 1892,
	103, 1892,
	104, 1892,
	105, 1892,
	106, 1892,
	107, 1892,
	108, 1892,
	110, 1892,
	111, 1892,
	112, 1892,
	113, 1892,
	114, 1892,
	115, 1892,
	116, 1892,
	117, 1892,
	118, 1892,
	119, 1892,
	120, 1892,
	121, 1892,
	122, 1892,
	123, 1892,
	124, 1892,
	125, 1892,
	126, 1892,
	127, 1892,
	128, 1892,
	129, 1892,
	130, 1892,
	131, 1892,
	132, 1892,
	133, 1892,
	134, 1892,
	135, 1892,
	136, 1892,
	137, 1892,
	138, 1892,
	140, 1892,
	141, 1892,
	142, 1892,
	143, 1892,
	145, 1892,
	146, 1892,
	147, 1892,
	150, 1892,
	151, 1892,
	152, 1892,
	154, 1892,
	155, 1892,
	156, 1892,
	158, 1892,
	159, 1892,
	160, 1892,
	162, 1892,
	163, 1892,
	164, 1892,
	165, 1892,
	166, 1892,
	167, 1892,
	168, 1892,
	169, 1892,
	170, 1892,
	171, 1892,
	172, 1892,
	173, 1892,
	174, 1892,
	175, 1892,
	176, 1892,
	177, 1892,
	178, 1892,
	179, 1892,
	180, 1892,
	181, 1892,
	187, 1892,
	188, 1892,
	189, 1892,
	190, 1892,
	194, 1892,
	196, 1892,
	197, 1892,
	198, 1892,
	200, 1892,
	201, 1892,
	203, 1892,
	204, 1892,
	205, 1892,
	206, 1892,
	207, 1892,
	208, 1892,
	209, 1892,
	210, 1892,
	211, 1892,
	212, 1892,
	213, 1892,
	214, 1892,
	215, 1892,
	216, 1892,
	217, 1892,
	219, 1892,
	220, 1892,
	222, 1892,
	223, 1892,
	225, 1892,
	226, 1892,
	227, 1892,
	228, 1892,
	229, 1892,
	230, 1892,
	231, 1892,
	232, 1892,
	233, 1892,
	234, 1892,
	235, 1892,
	236, 1892,
	237, 1892,
	238, 1892,
	239, 1892,
	241, 1892,
	242, 1892,
	243, 1892,
	244, 1892,
	245, 1892,
	249, 1892,
	250, 1892,
	251, 1892,
	252, 1892,
	254, 1892,
	255, 1892,
	256, 1892,
	257, 1892,
	258, 1892,
	259, 1892,
	260, 1892,
	262, 1892,
	264, 1892,
	265, 1892,
	266, 1892,
	267, 1892,
	268, 1892,
	269, 1892,
	270, 1892,
	271, 1892,
	272, 1892,
	273, 1892,
	274, 1892,
	278, 1892,
	279, 1892,
	280, 1892,
	281, 1892,
	282, 1892,
	283, 1892,
	284, 1892,
	286, 1892,
	287, 1892,
	288, 1892,
	290, 1892,
	291, 1892,
	292, 1892,
	293, 1892,
	294, 1892,
	295, 1892,
	296, 1892,
	298, 1892,
	299, 1892,
	300, 1892,
	301, 1892,
	302, 1892,
	303, 1892,
	304, 1892,
	305, 1892,
	306, 1892,
	307, 1892,
	308, 1892,
	309, 1892,
	310, 1892,
	312, 1892,
	313, 1892,
	314, 1892,
	315, 1892,
	316, 1892,
	317, 1892,
	318, 1892,
	319, 1892,
	320, 1892,
	321, 1892,
	322, 1892,
	323, 1892,
	324, 1892,
	325, 1892,
	326, 1892,
	327, 1892,
	328, 1892,
	329, 1892,
	330, 1892,
	331, 1892,
	332, 1892,
	333, 1892,
	334, 1892,
	336, 1892,
	337, 1892,
	338, 1892,
	339, 1892,
	340, 1892,
	341, 1892,
	342, 1892,
	343, 1892,
	344, 1892,
	345, 1892,
	346, 1892,
	347, 1892,
	348, 1892,
	349, 1892,
	350, 1892,
	351, 1892,
	352, 1892,
	353, 1892,
	354, 1892,
	355, 1892,
	356, 1892,
	357, 1892,
	358, 1892,
	359, 1892,
	360, 1892,
	361, 1892,
	362, 1892,
	363, 1892,
	364, 1892,
	365, 1892,
	366, 1892,
	367, 1892,
	368, 1892,
	369, 1892,
	370, 1892,
	373, 1892,
	375, 1892,
	378, 1892,
	379, 1892,
	380, 1892,
	383, 1892,
	384, 1892,
	385, 1892,
	386, 1892,
	387, 1892,
	388, 1892,
	389, 1892,
	390, 1892,
	391, 1892,
	392, 1892,
	393, 1892,
	394, 1892,
	395, 1892,
	396, 1892,
	397, 1892,
	398, 1892,
	399, 1892,
	400, 1892,
	401, 1892,
	402, 1892,
	404, 1892,
	405, 1892,
	406, 1892,
	407, 1892,
	408, 1892,
	409, 1892,
	410, 1892,
	411, 1892,
	412, 1892,
	413, 1892,
	414, 1892,
	415, 1892,
	416, 1892,
	417, 1892,
	418, 1892,
	420, 1892,
	421, 1892,
	422, 1892,
	424, 1892,
	425, 1892,
	426, 1892,
	427, 1892,
	428, 1892,
	429, 1892,
	430, 1892,
	431, 1892,
	432, 1892,
	433, 1892,
	434, 1892,
	435, 1892,
	436, 1892,
	437, 1892,
	439, 1892,
	441, 1892,
	442, 1892,
	443, 1892,
	449, 1892,
	450, 1892,
	451, 1892,
	453, 1892,
	454, 1892,
	455, 1892,
	456, 1892,
	457, 1892,
	458, 1892,
	459, 1892,
	460, 1892,
	461, 1892,
	462, 1892,
	463, 1892,
	465, 1892,
	466, 1892,
	467, 1892,
	468, 1892,
	469, 1892,
	470, 1892,
	471, 1892,
	472, 1892,
	473, 1892,
	474, 1892,
	475, 1892,
	476, 1892,
	477, 1892,
	479, 1892,
	480, 1892,
	481, 1892,
	482, 1892,
	483, 1892,
	484, 1892,
	485, 1892,
	486, 1892,
	487, 1892,
	488, 1892,
	489, 1892,
	490, 1892,
	491, 1892,
	492, 1892,
	493, 1892,
	494, 1892,
	496, 1892,
	497, 1892,
	498, 1892,
	499, 1892,
	500, 1892,
	501, 1892,
	502, 1892,
	503, 1892,
	504, 1892,
	505, 1892,
	506, 1892,
	507, 1892,
	508, 1892,
	509, 1892,
	510, 1892,
	511, 1892,
	512, 1892,
	513, 1892,
	514, 1892,
	515, 1892,
	516, 1892,
	517, 1892,
	518, 1892,
	520, 1892,
	522, 1892,
	523, 1892,
	524, 1892,
	525, 1892,
	526, 1892,
	527, 1892,
	528, 1892,
	529, 1892,
	530, 1892,
	531, 1892,
	532, 1892,
	533, 1892,
	534, 1892,
	535, 1892,
	536, 1892,
	537, 1892,
	538, 1892,
	539, 1892,
	540, 1892,
	541, 1892,
	542, 1892,
	544, 1892,
	545, 1892,
	546, 1892,
	547, 1892,
	548, 1892,
	550, 1892,
	551, 1892,
	552, 1892,
	553, 1892,
	554, 1892,
	555, 1892,
	557, 1892,
	558, 1892,
	560, 1892,
	561, 1892,
	562, 1892,
	563, 1892,
	564, 1892,
	566, 1892,
	568, 1892,
	569, 1892,
	570, 1892,
	571, 1892,
	572, 1892,
	573, 1892,
	574, 1892,
	575, 1892,
	576, 1892,
	577, 1892,
	578, 1892,
	579, 1892,
	580, 1892,
	581, 1892,
	582, 1892,
	583, 1892,
	585, 1892,
	586, 1892,
	587, 1892,
	588, 1892,
	589, 1892,
	590, 1892,
	591, 1892,
	592, 1892,
	593, 1892,
	594, 1892,
	595, 1892,
	598, 1892,
	599, 1892,
	600, 1892,
	601, 1892,
	602, 1892,
	603, 1892,
	605, 1892,
	606, 1892,
	607, 1892,
	608, 1892,
	609, 1892,
	610, 1892,
	611, 1892,
	612, 1892,
	613, 1892,
	614, 1892,
	615, 1892,
	620, 1892,
	621, 1892,
	622, 1892,
	623, 1892,
	624, 1892,
	625, 1892,
	626, 1892,
	641, 1892,
	648, 1892,
	649, 1892,
	650, 1892,
	658, 1892,
	662, 1892,
	-2, 0,
	-1, 847,
	4, 1602,
	21, 1602,
	22, 1602,
	23, 1602,
	24, 1602,
	25, 1602,
	26, 1602,
	27, 1602,
	28, 1602,
	30, 1602,
	31, 1602,
	37, 1602,
	41, 1602,
	43, 1602,
	44, 1602,
	45, 1602,
	47, 1602,
	48, 1602,
	49, 1602,
	50, 1602,
	51, 1602,
	52, 1602,
	53, 1602,
	54, 1602,
	55, 1602,
	57, 1602,
	58, 1602,
	59, 1602,
	60, 1602,
	62, 1602,
	63, 1602,
	64, 1602,
	65, 1602,
	66, 1602,
	67, 1602,
	68, 1602,
	69, 1602,
	73, 1602,
	74, 1602,
	75, 1602,
	76, 1602,
	78, 1602,
	79, 1602,
	80, 1602,
	84, 1602,
	85, 1602,
	86, 1602,
	87, 1602,
	88, 1602,
	89, 1602,
	90, 1602,
	91, 1602,
	94, 1602,
	95, 1602,
	96, 1602,
	97, 1602,
	98, 1602,
	100, 1602,
	102, 1602,
	103, 1602,
	104, 1602,
	105, 1602,
	106, 1602,
	107, 1602,
	108, 1602,
	110, 1602,
	111, 1602,
	112, 1602,
	114, 1602,
	115, 1602,
	116, 1602,
	124, 1602,
	125, 1602,
	126, 1602,
	127, 1602,
	128, 1602,
	130, 1602,
	131, 1602,
	132, 1602,
	133, 1602,
	135, 1602,
	136, 1602,
	137, 1602,
	138, 1602,
	140, 1602,
	141, 1602,
	142, 1602,
	143, 1602,
	145, 1602,
	146, 1602,
	147, 1602,
	150, 1602,
	151, 1602,
	152, 1602,
	154, 1602,
	155, 1602,
	156, 1602,
	158, 1602,
	159, 1602,
	160, 1602,
	162, 1602,
	163, 1602,
	164, 1602,
	165, 1602,
	166, 1602,
	167, 1602,
	168, 1602,
	169, 1602,
	170, 1602,
	171, 1602,
	172, 1602,
	173, 1602,
	174, 1602,
	175, 1602,
	176, 1602,
	177, 1602,
	178, 1602,
	179, 1602,
	181, 1602,
	187, 1602,
	188, 1602,
	189, 1602,
	190, 1602,
	194, 1602,
	196, 1602,
	197, 1602,
	198, 1602,
	200, 1602,
	201, 1602,
	204, 1602,
	205, 1602,
	206, 1602,
	207, 1602,
	208, 1602,
	209, 1602,
	210, 1602,
	211, 1602,
	212, 1602,
	213, 1602,
	214, 1602,
	215, 1602,
	216, 1602,
	217, 1602,
	219, 1602,
	220, 1602,
	222, 1602,
	223, 1602,
	225, 1602,
	226, 1602,
	227, 1602,
	228, 1602,
	229, 1602,
	230, 1602,
	231, 1602,
	232, 1602,
	233, 1602,
	234, 1602,
	235, 1602,
	237, 1602,
	238, 1602,
	239, 1602,
	241, 1602,
	242, 1602,
	243, 1602,
	244, 1602,
	245, 1602,
	249, 1602,
	250, 1602,
	251, 1602,
	252, 1602,
	255, 1602,
	256, 1602,
	257, 1602,
	258, 1602,
	259, 1602,
	260, 1602,
	262, 1602,
	264, 1602,
	265, 1602,
	266, 1602,
	268, 1602,
	270, 1602,
	271, 1602,
	272, 1602,
	274, 1602,
	278, 1602,
	279, 1602,
	280, 1602,
	281, 1602,
	282, 1602,
	283, 1602,
	284, 1602,
	286, 1602,
	287, 1602,
	288, 1602,
	290, 1602,
	291, 1602,
	292, 1602,
	294, 1602,
	295, 1602,
	298, 1602,
	299, 1602,
	300, 1602,
	301, 1602,
	302, 1602,
	303, 1602,
	304, 1602,
	307, 1602,
	308, 1602,
	309, 1602,
	310, 1602,
	312, 1602,
	313, 1602,
	314, 1602,
	315, 1602,
	316, 1602,
	317, 1602,
	318, 1602,
	319, 1602,
	320, 1602,
	321, 1602,
	322, 1602,
	323, 1602,
	324, 1602,
	325, 1602,
	326, 1602,
	327, 1602,
	328, 1602,
	329, 1602,
	330, 1602,
	331, 1602,
	332, 1602,
	333, 1602,
	334, 1602,
	336, 1602,
	338, 1602,
	339, 1602,
	340, 1602,
	341, 1602,
	342, 1602,
	343, 1602,
	344, 1602,
	345, 1602,
	346, 1602,
	347, 1602,
	348, 1602,
	349, 1602,
	350, 1602,
	351, 1602,
	352, 1602,
	353, 1602,
	354, 1602,
	356, 1602,
	357, 1602,
	359, 1602,
	361, 1602,
	362, 1602,
	363, 1602,
	364, 1602,
	366, 1602,
	367, 1602,
	368, 1602,
	369, 1602,
	370, 1602,
	373, 1602,
	375, 1602,
	378, 1602,
	379, 1602,
	380, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	387, 1602,
	389, 1602,
	390, 1602,
	391, 1602,
	392, 1602,
	393, 1602,
	394, 1602,
	395, 1602,
	396, 1602,
	397, 1602,
	398, 1602,
	399, 1602,
	400, 1602,
	401, 1602,
	402, 1602,
	404, 1602,
	405, 1602,
	406, 1602,
	407, 1602,
	408, 1602,
	409, 1602,
	410, 1602,
	411, 1602,
	412, 1602,
	413, 1602,
	414, 1602,
	415, 1602,
	416, 1602,
	417, 1602,
	418, 1602,
	420, 1602,
	421, 1602,
	422, 1602,
	424, 1602,
	425, 1602,
	426, 1602,
	427, 1602,
	428, 1602,
	429, 1602,
	430, 1602,
	431, 1602,
	432, 1602,
	433, 1602,
	434, 1602,
	435, 1602,
	436, 1602,
	437, 1602,
	439, 1602,
	441, 1602,
	442, 1602,
	443, 1602,
	449, 1602,
	450, 1602,
	451, 1602,
	453, 1602,
	454, 1602,
	455, 1602,
	456, 1602,
	457, 1602,
	458, 1602,
	459, 1602,
	460, 1602,
	461, 1602,
	462, 1602,
	463, 1602,
	465, 1602,
	466, 1602,
	467, 1602,
	468, 1602,
	469, 1602,
	471, 1602,
	472, 1602,
	473, 1602,
	474, 1602,
	475, 1602,
	476, 1602,
	477, 1602,
	479, 1602,
	480, 1602,
	481, 1602,
	482, 1602,
	483, 1602,
	484, 1602,
	485, 1602,
	486, 1602,
	487, 1602,
	488, 1602,
	489, 1602,
	490, 1602,
	491, 1602,
	492, 1602,
	493, 1602,
	494, 1602,
	496, 1602,
	497, 1602,
	498, 1602,
	499, 1602,
	500, 1602,
	501, 1602,
	503, 1602,
	504, 1602,
	505, 1602,
	506, 1602,
	507, 1602,
	508, 1602,
	509, 1602,
	511, 1602,
	512, 1602,
	513, 1602,
	514, 1602,
	515, 1602,
	516, 1602,
	517, 1602,
	518, 1602,
	520, 1602,
	522, 1602,
	523, 1602,
	524, 1602,
	525, 1602,
	526, 1602,
	527, 1602,
	528, 1602,
	529, 1602,
	530, 1602,
	531, 1602,
	532, 1602,
	533, 1602,
	534, 1602,
	535, 1602,
	536, 1602,
	537, 1602,
	538, 1602,
	539, 1602,
	540, 1602,
	541, 1602,
	542, 1602,
	544, 1602,
	545, 1602,
	547, 1602,
	548, 1602,
	550, 1602,
	551, 1602,
	552, 1602,
	553, 1602,
	554, 1602,
	555, 1602,
	557, 1602,
	558, 1602,
	560, 1602,
	561, 1602,
	562, 1602,
	563, 1602,
	564, 1602,
	566, 1602,
	568, 1602,
	569, 1602,
	570, 1602,
	571, 1602,
	572, 1602,
	573, 1602,
	574, 1602,
	575, 1602,
	577, 1602,
	578, 1602,
	579, 1602,
	580, 1602,
	581, 1602,
	582, 1602,
	583, 1602,
	586, 1602,
	587, 1602,
	588, 1602,
	589, 1602,
	590, 1602,
	591, 1602,
	592, 1602,
	593, 1602,
	595, 1602,
	598, 1602,
	599, 1602,
	600, 1602,
	601, 1602,
	602, 1602,
	603, 1602,
	605, 1602,
	606, 1602,
	607, 1602,
	608, 1602,
	609, 1602,
	610, 1602,
	611, 1602,
	612, 1602,
	613, 1602,
	614, 1602,
	615, 1602,
	620, 1602,
	621, 1602,
	622, 1602,
	623, 1602,
	624, 1602,
	625, 1602,
	-2, 0,
	-1, 866,
	202, 2695,
	565, 2695,
	640, 2695,
	660, 2695,
	-2, 0,
	-1, 867,
	202, 2681,
	565, 2681,
	640, 2681,
	660, 2681,
	-2, 0,
	-1, 869,
	202, 2978,
	565, 2978,
	640, 2978,
	660, 2978,
	-2, 0,
	-1, 872,
	202, 2820,
	565, 2820,
	640, 2820,
	660, 2820,
	-2, 0,
	-1, 873,
	202, 3025,
	565, 3025,
	640, 3025,
	660, 3025,
	-2, 0,
	-1, 881,
	202, 2848,
	565, 2848,
	640, 2848,
	660, 2848,
	-2, 898,
	-1, 897,
	8, 1031,
	29, 1031,
	648, 1031,
	649, 1031,
	-2, 1036,
	-1, 901,
	1, 2753,
	661, 2753,
	664, 2753,
	-2, 1036,
	-1, 902,
	1, 2807,
	661, 2807,
	664, 2807,
	-2, 1036,
	-1, 905,
	1, 2853,
	661, 2853,
	664, 2853,
	-2, 1029,
	-1, 906,
	1, 2910,
	661, 2910,
	664, 2910,
	-2, 1030,
	-1, 907,
	1, 2758,
	661, 2758,
	664, 2758,
	-2, 1033,
	-1, 908,
	1, 2667,
	661, 2667,
	664, 2667,
	-2, 1034,
	-1, 948,
	660, 2624,
	663, 2624,
	-2, 1263,
	-1, 949,
	660, 2626,
	663, 2626,
	-2, 1264,
	-1, 950,
	660, 2625,
	663, 2625,
	-2, 1265,
	-1, 951,
	663, 2548,
	-2, 1266,
	-1, 977,
	195, 320,
	-2, 0,
	-1, 999,
	46, 2597,
	-2, 0,
	-1, 1000,
	605, 1580,
	-2, 1348,
	-1, 1017,
	4, 2026,
	21, 2026,
	22, 2026,
	23, 2026,
	24, 2026,
	25, 2026,
	26, 2026,
	27, 2026,
	28, 2026,
	30, 2026,
	31, 2026,
	37, 2026,
	41, 2026,
	43, 2026,
	44, 2026,
	45, 2026,
	47, 2026,
	48, 2026,
	49, 2026,
	50, 2026,
	51, 2026,
	52, 2026,
	53, 2026,
	54, 2026,
	55, 2026,
	57, 2026,
	58, 2026,
	59, 2026,
	60, 2026,
	62, 2026,
	63, 2026,
	64, 2026,
	65, 2026,
	66, 2026,
	67, 2026,
	68, 2026,
	69, 2026,
	73, 2026,
	74, 2026,
	75, 2026,
	76, 2026,
	78, 2026,
	79, 2026,
	80, 2026,
	84, 2026,
	85, 2026,
	86, 2026,
	87, 2026,
	88, 2026,
	89, 2026,
	90, 2026,
	91, 2026,
	94, 2026,
	95, 2026,
	96, 2026,
	97, 2026,
	98, 2026,
	100, 2026,
	102, 2026,
	103, 2026,
	104, 2026,
	105, 2026,
	106, 2026,
	107, 2026,
	108, 2026,
	110, 2026,
	111, 2026,
	112, 2026,
	114, 2026,
	115, 2026,
	116, 2026,
	124, 2026,
	125, 2026,
	126, 2026,
	127, 2026,
	128, 2026,
	130, 2026,
	131, 2026,
	132, 2026,
	133, 2026,
	135, 2026,
	136, 2026,
	137, 2026,
	138, 2026,
	140, 2026,
	141, 2026,
	142, 2026,
	143, 2026,
	145, 2026,
	146, 2026,
	147, 2026,
	150, 2026,
	151, 2026,
	152, 2026,
	154, 2026,
	155, 2026,
	156, 2026,
	158, 2026,
	159, 2026,
	160, 2026,
	162, 2026,
	163, 2026,
	164, 2026,
	165, 2026,
	166, 2026,
	167, 2026,
	168, 2026,
	169, 2026,
	170, 2026,
	171, 2026,
	172, 2026,
	173, 2026,
	174, 2026,
	175, 2026,
	176, 2026,
	177, 2026,
	178, 2026,
	179, 2026,
	181, 2026,
	187, 2026,
	188, 2026,
	189, 2026,
	190, 2026,
	194, 2026,
	196, 2026,
	197, 2026,
	198, 2026,
	200, 2026,
	201, 2026,
	204, 2026,
	205, 2026,
	206, 2026,
	207, 2026,
	208, 2026,
	209, 2026,
	210, 2026,
	211, 2026,
	212, 2026,
	213, 2026,
	214, 2026,
	215, 2026,
	216, 2026,
	217, 2026,
	219, 2026,
	220, 2026,
	222, 2026,
	223, 2026,
	225, 2026,
	226, 2026,
	227, 2026,
	228, 2026,
	229, 2026,
	230, 2026,
	231, 2026,
	232, 2026,
	233, 2026,
	234, 2026,
	235, 2026,
	237, 2026,
	238, 2026,
	239, 2026,
	241, 2026,
	242, 2026,
	243, 2026,
	244, 2026,
	245, 2026,
	249, 2026,
	250, 2026,
	251, 2026,
	252, 2026,
	255, 2026,
	256, 2026,
	257, 2026,
	258, 2026,
	259, 2026,
	260, 2026,
	262, 2026,
	264, 2026,
	265, 2026,
	266, 2026,
	268, 2026,
	270, 2026,
	271, 2026,
	272, 2026,
	274, 2026,
	278, 2026,
	279, 2026,
	280, 2026,
	281, 2026,
	282, 2026,
	283, 2026,
	284, 2026,
	286, 2026,
	287, 2026,
	288, 2026,
	290, 2026,
	291, 2026,
	292, 2026,
	294, 2026,
	295, 2026,
	298, 2026,
	299, 2026,
	300, 2026,
	301, 2026,
	302, 2026,
	303, 2026,
	304, 2026,
	307, 2026,
	308, 2026,
	309, 2026,
	310, 2026,
	312, 2026,
	313, 2026,
	314, 2026,
	315, 2026,
	316, 2026,
	317, 2026,
	318, 2026,
	319, 2026,
	320, 2026,
	321, 2026,
	322, 2026,
	323, 2026,
	324, 2026,
	325, 2026,
	326, 2026,
	327, 2026,
	328, 2026,
	329, 2026,
	330, 2026,
	331, 2026,
	332, 2026,
	333, 2026,
	334, 2026,
	336, 2026,
	338, 2026,
	339, 2026,
	340, 2026,
	341, 2026,
	342, 2026,
	343, 2026,
	344, 2026,
	345, 2026,
	346, 2026,
	347, 2026,
	348, 2026,
	349, 2026,
	350, 2026,
	351, 2026,
	352, 2026,
	353, 2026,
	354, 2026,
	356, 2026,
	357, 2026,
	359, 2026,
	361, 2026,
	362, 2026,
	363, 2026,
	364, 2026,
	366, 2026,
	367, 2026,
	368, 2026,
	369, 2026,
	370, 2026,
	373, 2026,
	375, 2026,
	378, 2026,
	379, 2026,
	380, 2026,
	383, 2026,
	384, 2026,
	385, 2026,
	387, 2026,
	389, 2026,
	390, 2026,
	391, 2026,
	392, 2026,
	393, 2026,
	394, 2026,
	395, 2026,
	396, 2026,
	397, 2026,
	398, 2026,
	399, 2026,
	400, 2026,
	401, 2026,
	402, 2026,
	404, 2026,
	405, 2026,
	406, 2026,
	407, 2026,
	408, 2026,
	409, 2026,
	410, 2026,
	411, 2026,
	412, 2026,
	413, 2026,
	414, 2026,
	415, 2026,
	416, 2026,
	417, 2026,
	418, 2026,
	420, 2026,
	421, 2026,
	422, 2026,
	424, 2026,
	425, 2026,
	426, 2026,
	427, 2026,
	428, 2026,
	429, 2026,
	430, 2026,
	431, 2026,
	432, 2026,
	433, 2026,
	434, 2026,
	435, 2026,
	436, 2026,
	437, 2026,
	439, 2026,
	441, 2026,
	442, 2026,
	443, 2026,
	449, 2026,
	450, 2026,
	451, 2026,
	453, 2026,
	454, 2026,
	455, 2026,
	456, 2026,
	457, 2026,
	458, 2026,
	459, 2026,
	460, 2026,
	461, 2026,
	462, 2026,
	463, 2026,
	465, 2026,
	466, 2026,
	467, 2026,
	468, 2026,
	469, 2026,
	471, 2026,
	472, 2026,
	473, 2026,
	474, 2026,
	475, 2026,
	476, 2026,
	477, 2026,
	479, 2026,
	480, 2026,
	481, 2026,
	482, 2026,
	483, 2026,
	484, 2026,
	485, 2026,
	486, 2026,
	487, 2026,
	488, 2026,
	489, 2026,
	490, 2026,
	491, 2026,
	492, 2026,
	493, 2026,
	494, 2026,
	496, 2026,
	497, 2026,
	498, 2026,
	499, 2026,
	500, 2026,
	501, 2026,
	503, 2026,
	504, 2026,
	505, 2026,
	506, 2026,
	507, 2026,
	508, 2026,
	509, 2026,
	511, 2026,
	512, 2026,
	513, 2026,
	514, 2026,
	515, 2026,
	516, 2026,
	517, 2026,
	518, 2026,
	520, 2026,
	522, 2026,
	523, 2026,
	524, 2026,
	525, 2026,
	526, 2026,
	527, 2026,
	528, 2026,
	529, 2026,
	530, 2026,
	531, 2026,
	532, 2026,
	533, 2026,
	534, 2026,
	535, 2026,
	536, 2026,
	537, 2026,
	538, 2026,
	539, 2026,
	540, 2026,
	541, 2026,
	542, 2026,
	544, 2026,
	545, 2026,
	547, 2026,
	548, 2026,
	550, 2026,
	551, 2026,
	552, 2026,
	553, 2026,
	554, 2026,
	555, 2026,
	557, 2026,
	558, 2026,
	560, 2026,
	561, 2026,
	562, 2026,
	563, 2026,
	564, 2026,
	566, 2026,
	568, 2026,
	569, 2026,
	570, 2026,
	571, 2026,
	572, 2026,
	573, 2026,
	574, 2026,
	575, 2026,
	577, 2026,
	578, 2026,
	579, 2026,
	580, 2026,
	581, 2026,
	582, 2026,
	583, 2026,
	586, 2026,
	587, 2026,
	588, 2026,
	589, 2026,
	590, 2026,
	591, 2026,
	592, 2026,
	593, 2026,
	595, 2026,
	598, 2026,
	599, 2026,
	600, 2026,
	601, 2026,
	602, 2026,
	603, 2026,
	605, 2026,
	606, 2026,
	607, 2026,
	608, 2026,
	609, 2026,
	610, 2026,
	611, 2026,
	612, 2026,
	613, 2026,
	614, 2026,
	615, 2026,
	620, 2026,
	621, 2026,
	622, 2026,
	623, 2026,
	624, 2026,
	625, 2026,
	-2, 0,
	-1, 1028,
	283, 570,
	-2, 0,
	-1, 1106,
	202, 1075,
	-2, 0,
	-1, 1107,
	426, 1128,
	501, 1128,
	548, 1128,
	570, 1128,
	-2, 0,
	-1, 1108,
	426, 1127,
	501, 1127,
	548, 1127,
	570, 1127,
	-2, 1049,
	-1, 1112,
	1, 1180,
	657, 1180,
	659, 1180,
	661, 1180,
	664, 1180,
	-2, 0,
	-1, 1114,
	1, 1102,
	657, 1102,
	659, 1102,
	661, 1102,
	664, 1102,
	-2, 0,
	-1, 1115,
	1, 1106,
	657, 1106,
	659, 1106,
	661, 1106,
	664, 1106,
	-2, 0,
	-1, 1116,
	1, 1253,
	195, 1253,
	657, 1253,
	659, 1253,
	661, 1253,
	664, 1253,
	-2, 0,
	-1, 1124,
	1, 1133,
	657, 1133,
	659, 1133,
	661, 1133,
	664, 1133,
	-2, 0,
	-1, 1131,
	1, 1180,
	657, 1180,
	659, 1180,
	661, 1180,
	664, 1180,
	-2, 0,
	-1, 1132,
	1, 1182,
	657, 1182,
	659, 1182,
	661, 1182,
	664, 1182,
	-2, 0,
	-1, 1133,
	1, 1185,
	657, 1185,
	659, 1185,
	661, 1185,
	664, 1185,
	-2, 0,
	-1, 1141,
	1, 1216,
	657, 1216,
	659, 1216,
	661, 1216,
	664, 1216,
	-2, 0,
	-1, 1142,
	1, 1218,
	657, 1218,
	659, 1218,
	661, 1218,
	664, 1218,
	-2, 0,
	-1, 1147,
	1, 1246,
	657, 1246,
	659, 1246,
	661, 1246,
	664, 1246,
	-2, 0,
	-1, 1199,
	182, 1896,
	195, 1896,
	297, 1896,
	371, 1896,
	-2, 1832,
	-1, 1215,
	182, 1895,
	195, 1895,
	297, 1895,
	371, 1895,
	-2, 1829,
	-1, 1244,
	660, 2623,
	-2, 906,
	-1, 1273,
	5, 2615,
	658, 2613,
	-2, 2604,
	-1, 1281,
	5, 2636,
	658, 2633,
	-2, 2624,
	-1, 1282,
	5, 2637,
	658, 2634,
	-2, 2625,
	-1, 1290,
	660, 2621,
	-2, 2603,
	-1, 1291,
	658, 3138,
	-2, 2622,
	-1, 1314,
	5, 2638,
	38, 2638,
	134, 2638,
	640, 2638,
	656, 2638,
	659, 2638,
	660, 2638,
	663, 2638,
	-2, 3137,
	-1, 1315,
	5, 2101,
	-2, 3107,
	-1, 1316,
	5, 2102,
	-2, 3108,
	-1, 1317,
	5, 2103,
	-2, 3123,
	-1, 1318,
	5, 2104,
	-2, 3085,
	-1, 1319,
	5, 2105,
	-2, 3120,
	-1, 1320,
	5, 2113,
	-2, 3098,
	-1, 1321,
	5, 2100,
	-2, 3094,
	-1, 1322,
	5, 2100,
	-2, 3093,
	-1, 1323,
	5, 2100,
	-2, 3113,
	-1, 1324,
	5, 2111,
	-2, 3087,
	-1, 1325,
	5, 2116,
	-2, 3086,
	-1, 1326,
	5, 2118,
	-2, 3133,
	-1, 1329,
	5, 2140,
	-2, 3126,
	-1, 1330,
	5, 2132,
	-2, 3127,
	-1, 1331,
	5, 2140,
	-2, 3128,
	-1, 1332,
	5, 2136,
	-2, 3129,
	-1, 1333,
	5, 2086,
	-2, 3099,
	-1, 1334,
	5, 2087,
	-2, 3100,
	-1, 1335,
	5, 2088,
	-2, 3088,
	-1, 1363,
	5, 2123,
	-2, 3134,
	-1, 1364,
	5, 2124,
	-2, 3124,
	-1, 1365,
	5, 2125,
	606, 2125,
	-2, 3089,
	-1, 1366,
	5, 2126,
	606, 2126,
	-2, 3090,
	-1, 1404,
	658, 2633,
	-2, 2624,
	-1, 1405,
	658, 2634,
	-2, 2625,
	-1, 1511,
	202, 3025,
	565, 3025,
	640, 3025,
	660, 3025,
	-2, 0,
	-1, 1516,
	1, 882,
	661, 882,
	664, 882,
	-2, 1738,
	-1, 1563,
	1, 1733,
	661, 1733,
	664, 1733,
	-2, 1738,
	-1, 1665,
	391, 2598,
	453, 2598,
	503, 2598,
	650, 2598,
	-2, 2586,
	-1, 1671,
	202, 165,
	290, 165,
	356, 165,
	615, 165,
	-2, 3020,
	-1, 1672,
	202, 166,
	290, 166,
	356, 166,
	615, 166,
	-2, 2743,
	-1, 1673,
	202, 167,
	290, 167,
	356, 167,
	615, 167,
	-2, 2933,
	-1, 1679,
	662, 2598,
	-2, 2600,
	-1, 1682,
	25, 2957,
	240, 2957,
	-2, 0,
	-1, 1704,
	1, 1577,
	458, 1531,
	503, 1531,
	632, 1531,
	637, 1531,
	657, 1577,
	659, 1577,
	661, 1577,
	664, 1577,
	-2, 1881,
	-1, 1710,
	218, 1677,
	240, 1677,
	469, 1677,
	-2, 0,
	-1, 1778,
	46, 2596,
	-2, 1310,
	-1, 1785,
	1, 1577,
	657, 1577,
	659, 1577,
	661, 1577,
	664, 1577,
	-2, 1881,
	-1, 1788,
	435, 1347,
	605, 1347,
	-2, 470,
	-1, 1794,
	4, 1602,
	21, 1602,
	22, 1602,
	23, 1602,
	24, 1602,
	25, 1602,
	26, 1602,
	27, 1602,
	28, 1602,
	30, 1602,
	31, 1602,
	37, 1602,
	41, 1602,
	43, 1602,
	44, 1602,
	45, 1602,
	47, 1602,
	48, 1602,
	49, 1602,
	50, 1602,
	51, 1602,
	52, 1602,
	53, 1602,
	54, 1602,
	55, 1602,
	57, 1602,
	58, 1602,
	59, 1602,
	60, 1602,
	62, 1602,
	63, 1602,
	64, 1602,
	65, 1602,
	66, 1602,
	67, 1602,
	68, 1602,
	69, 1602,
	73, 1602,
	74, 1602,
	75, 1602,
	76, 1602,
	78, 1602,
	79, 1602,
	80, 1602,
	84, 1602,
	85, 1602,
	86, 1602,
	87, 1602,
	88, 1602,
	89, 1602,
	90, 1602,
	91, 1602,
	94, 1602,
	95, 1602,
	96, 1602,
	97, 1602,
	98, 1602,
	100, 1602,
	102, 1602,
	103, 1602,
	104, 1602,
	105, 1602,
	106, 1602,
	107, 1602,
	108, 1602,
	110, 1602,
	111, 1602,
	112, 1602,
	114, 1602,
	115, 1602,
	116, 1602,
	124, 1602,
	125, 1602,
	126, 1602,
	127, 1602,
	128, 1602,
	130, 1602,
	131, 1602,
	132, 1602,
	133, 1602,
	135, 1602,
	136, 1602,
	137, 1602,
	138, 1602,
	140, 1602,
	141, 1602,
	142, 1602,
	143, 1602,
	145, 1602,
	146, 1602,
	147, 1602,
	150, 1602,
	151, 1602,
	152, 1602,
	154, 1602,
	155, 1602,
	156, 1602,
	158, 1602,
	159, 1602,
	160, 1602,
	162, 1602,
	163, 1602,
	164, 1602,
	165, 1602,
	166, 1602,
	167, 1602,
	168, 1602,
	169, 1602,
	170, 1602,
	171, 1602,
	172, 1602,
	173, 1602,
	174, 1602,
	175, 1602,
	176, 1602,
	177, 1602,
	178, 1602,
	179, 1602,
	187, 1602,
	188, 1602,
	189, 1602,
	190, 1602,
	194, 1602,
	196, 1602,
	197, 1602,
	198, 1602,
	200, 1602,
	201, 1602,
	204, 1602,
	205, 1602,
	206, 1602,
	207, 1602,
	208, 1602,
	209, 1602,
	210, 1602,
	211, 1602,
	212, 1602,
	213, 1602,
	214, 1602,
	215, 1602,
	216, 1602,
	217, 1602,
	219, 1602,
	220, 1602,
	222, 1602,
	223, 1602,
	225, 1602,
	226, 1602,
	227, 1602,
	228, 1602,
	229, 1602,
	230, 1602,
	231, 1602,
	232, 1602,
	233, 1602,
	234, 1602,
	235, 1602,
	237, 1602,
	238, 1602,
	239, 1602,
	241, 1602,
	242, 1602,
	243, 1602,
	244, 1602,
	245, 1602,
	250, 1602,
	251, 1602,
	252, 1602,
	255, 1602,
	256, 1602,
	257, 1602,
	258, 1602,
	259, 1602,
	260, 1602,
	262, 1602,
	264, 1602,
	265, 1602,
	266, 1602,
	268, 1602,
	270, 1602,
	271, 1602,
	272, 1602,
	274, 1602,
	278, 1602,
	279, 1602,
	280, 1602,
	281, 1602,
	282, 1602,
	283, 1602,
	284, 1602,
	286, 1602,
	287, 1602,
	288, 1602,
	290, 1602,
	291, 1602,
	292, 1602,
	294, 1602,
	295, 1602,
	298, 1602,
	299, 1602,
	300, 1602,
	301, 1602,
	302, 1602,
	303, 1602,
	304, 1602,
	307, 1602,
	308, 1602,
	309, 1602,
	310, 1602,
	312, 1602,
	313, 1602,
	314, 1602,
	315, 1602,
	316, 1602,
	317, 1602,
	318, 1602,
	319, 1602,
	320, 1602,
	321, 1602,
	322, 1602,
	323, 1602,
	324, 1602,
	325, 1602,
	326, 1602,
	327, 1602,
	328, 1602,
	329, 1602,
	330, 1602,
	331, 1602,
	332, 1602,
	333, 1602,
	334, 1602,
	336, 1602,
	338, 1602,
	339, 1602,
	340, 1602,
	341, 1602,
	342, 1602,
	343, 1602,
	344, 1602,
	345, 1602,
	346, 1602,
	347, 1602,
	348, 1602,
	349, 1602,
	350, 1602,
	351, 1602,
	352, 1602,
	353, 1602,
	354, 1602,
	356, 1602,
	357, 1602,
	361, 1602,
	362, 1602,
	363, 1602,
	364, 1602,
	366, 1602,
	367, 1602,
	368, 1602,
	369, 1602,
	370, 1602,
	373, 1602,
	375, 1602,
	376, 1602,
	378, 1602,
	379, 1602,
	380, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	387, 1602,
	389, 1602,
	390, 1602,
	391, 1602,
	392, 1602,
	393, 1602,
	394, 1602,
	395, 1602,
	396, 1602,
	397, 1602,
	398, 1602,
	399, 1602,
	400, 1602,
	401, 1602,
	402, 1602,
	404, 1602,
	405, 1602,
	406, 1602,
	407, 1602,
	408, 1602,
	409, 1602,
	410, 1602,
	411, 1602,
	412, 1602,
	413, 1602,
	414, 1602,
	415, 1602,
	416, 1602,
	417, 1602,
	418, 1602,
	420, 1602,
	421, 1602,
	422, 1602,
	424, 1602,
	425, 1602,
	426, 1602,
	427, 1602,
	428, 1602,
	429, 1602,
	430, 1602,
	431, 1602,
	432, 1602,
	433, 1602,
	434, 1602,
	435, 1602,
	436, 1602,
	437, 1602,
	439, 1602,
	441, 1602,
	442, 1602,
	443, 1602,
	449, 1602,
	450, 1602,
	451, 1602,
	453, 1602,
	454, 1602,
	455, 1602,
	456, 1602,
	457, 1602,
	458, 1602,
	459, 1602,
	460, 1602,
	461, 1602,
	462, 1602,
	463, 1602,
	465, 1602,
	466, 1602,
	467, 1602,
	468, 1602,
	469, 1602,
	471, 1602,
	472, 1602,
	473, 1602,
	474, 1602,
	475, 1602,
	476, 1602,
	477, 1602,
	479, 1602,
	480, 1602,
	481, 1602,
	482, 1602,
	483, 1602,
	484, 1602,
	485, 1602,
	486, 1602,
	487, 1602,
	488, 1602,
	489, 1602,
	490, 1602,
	491, 1602,
	492, 1602,
	493, 1602,
	494, 1602,
	496, 1602,
	497, 1602,
	498, 1602,
	499, 1602,
	500, 1602,
	501, 1602,
	503, 1602,
	504, 1602,
	505, 1602,
	506, 1602,
	507, 1602,
	508, 1602,
	509, 1602,
	511, 1602,
	512, 1602,
	513, 1602,
	514, 1602,
	515, 1602,
	516, 1602,
	517, 1602,
	518, 1602,
	520, 1602,
	522, 1602,
	523, 1602,
	524, 1602,
	525, 1602,
	526, 1602,
	527, 1602,
	528, 1602,
	529, 1602,
	530, 1602,
	531, 1602,
	532, 1602,
	533, 1602,
	534, 1602,
	535, 1602,
	536, 1602,
	537, 1602,
	538, 1602,
	539, 1602,
	540, 1602,
	541, 1602,
	542, 1602,
	544, 1602,
	545, 1602,
	547, 1602,
	548, 1602,
	550, 1602,
	551, 1602,
	552, 1602,
	553, 1602,
	554, 1602,
	555, 1602,
	557, 1602,
	558, 1602,
	560, 1602,
	561, 1602,
	562, 1602,
	563, 1602,
	564, 1602,
	566, 1602,
	568, 1602,
	569, 1602,
	570, 1602,
	571, 1602,
	572, 1602,
	573, 1602,
	574, 1602,
	575, 1602,
	577, 1602,
	578, 1602,
	579, 1602,
	580, 1602,
	581, 1602,
	582, 1602,
	583, 1602,
	586, 1602,
	587, 1602,
	588, 1602,
	589, 1602,
	590, 1602,
	591, 1602,
	592, 1602,
	593, 1602,
	595, 1602,
	598, 1602,
	599, 1602,
	600, 1602,
	601, 1602,
	602, 1602,
	603, 1602,
	605, 1602,
	606, 1602,
	607, 1602,
	608, 1602,
	609, 1602,
	610, 1602,
	611, 1602,
	612, 1602,
	613, 1602,
	614, 1602,
	615, 1602,
	620, 1602,
	621, 1602,
	622, 1602,
	623, 1602,
	624, 1602,
	625, 1602,
	-2, 0,
	-1, 1817,
	1, 711,
	657, 711,
	659, 711,
	661, 711,
	664, 711,
	-2, 1852,
	-1, 1820,
	4, 3132,
	11, 3132,
	12, 3132,
	14, 3132,
	15, 3132,
	16, 3132,
	17, 3132,
	18, 3132,
	19, 3132,
	21, 3132,
	22, 3132,
	23, 3132,
	24, 3132,
	25, 3132,
	26, 3132,
	27, 3132,
	28, 3132,
	30, 3132,
	31, 3132,
	34, 3132,
	35, 3132,
	37, 3132,
	39, 3132,
	41, 3132,
	43, 3132,
	44, 3132,
	45, 3132,
	47, 3132,
	48, 3132,
	49, 3132,
	50, 3132,
	51, 3132,
	52, 3132,
	53, 3132,
	54, 3132,
	55, 3132,
	57, 3132,
	58, 3132,
	59, 3132,
	60, 3132,
	62, 3132,
	63, 3132,
	64, 3132,
	65, 3132,
	66, 3132,
	67, 3132,
	68, 3132,
	69, 3132,
	72, 3132,
	73, 3132,
	74, 3132,
	75, 3132,
	76, 3132,
	78, 3132,
	79, 3132,
	80, 3132,
	81, 3132,
	84, 3132,
	85, 3132,
	86, 3132,
	87, 3132,
	88, 3132,
	89, 3132,
	90, 3132,
	91, 3132,
	92, 3132,
	94, 3132,
	95, 3132,
	96, 3132,
	97, 3132,
	98, 3132,
	100, 3132,
	101, 3132,
	102, 3132,
	103, 3132,
	104, 3132,
	105, 3132,
	106, 3132,
	107, 3132,
	108, 3132,
	110, 3132,
	111, 3132,
	112, 3132,
	113, 3132,
	114, 3132,
	115, 3132,
	116, 3132,
	124, 3132,
	125, 3132,
	126, 3132,
	127, 3132,
	128, 3132,
	130, 3132,
	131, 3132,
	132, 3132,
	133, 3132,
	135, 3132,
	136, 3132,
	137, 3132,
	138, 3132,
	140, 3132,
	141, 3132,
	142, 3132,
	143, 3132,
	145, 3132,
	146, 3132,
	147, 3132,
	150, 3132,
	151, 3132,
	152, 3132,
	154, 3132,
	155, 3132,
	156, 3132,
	158, 3132,
	159, 3132,
	160, 3132,
	162, 3132,
	163, 3132,
	164, 3132,
	165, 3132,
	166, 3132,
	167, 3132,
	168, 3132,
	169, 3132,
	170, 3132,
	171, 3132,
	172, 3132,
	173, 3132,
	174, 3132,
	175, 3132,
	176, 3132,
	177, 3132,
	178, 3132,
	179, 3132,
	183, 3132,
	184, 3132,
	185, 3132,
	186, 3132,
	187, 3132,
	188, 3132,
	189, 3132,
	190, 3132,
	193, 3132,
	194, 3132,
	196, 3132,
	197, 3132,
	198, 3132,
	200, 3132,
	201, 3132,
	203, 3132,
	204, 3132,
	205, 3132,
	206, 3132,
	207, 3132,
	208, 3132,
	209, 3132,
	210, 3132,
	211, 3132,
	212, 3132,
	213, 3132,
	214, 3132,
	215, 3132,
	216, 3132,
	217, 3132,
	219, 3132,
	220, 3132,
	222, 3132,
	223, 3132,
	225, 3132,
	226, 3132,
	227, 3132,
	228, 3132,
	229, 3132,
	230, 3132,
	231, 3132,
	232, 3132,
	233, 3132,
	234, 3132,
	235, 3132,
	236, 3132,
	237, 3132,
	238, 3132,
	239, 3132,
	240, 3132,
	241, 3132,
	242, 3132,
	243, 3132,
	244, 3132,
	245, 3132,
	247, 3132,
	248, 3132,
	250, 3132,
	251, 3132,
	252, 3132,
	254, 3132,
	255, 3132,
	256, 3132,
	257, 3132,
	258, 3132,
	259, 3132,
	260, 3132,
	262, 3132,
	264, 3132,
	265, 3132,
	266, 3132,
	267, 3132,
	268, 3132,
	269, 3132,
	270, 3132,
	271, 3132,
	272, 3132,
	273, 3132,
	274, 3132,
	276, 3132,
	277, 3132,
	278, 3132,
	279, 3132,
	280, 3132,
	281, 3132,
	282, 3132,
	283, 3132,
	284, 3132,
	286, 3132,
	287, 3132,
	288, 3132,
	290, 3132,
	291, 3132,
	292, 3132,
	293, 3132,
	294, 3132,
	295, 3132,
	296, 3132,
	298, 3132,
	299, 3132,
	300, 3132,
	301, 3132,
	302, 3132,
	303, 3132,
	304, 3132,
	307, 3132,
	308, 3132,
	309, 3132,
	310, 3132,
	311, 3132,
	312, 3132,
	313, 3132,
	314, 3132,
	315, 3132,
	316, 3132,
	317, 3132,
	318, 3132,
	319, 3132,
	320, 3132,
	321, 3132,
	322, 3132,
	323, 3132,
	324, 3132,
	325, 3132,
	326, 3132,
	327, 3132,
	328, 3132,
	329, 3132,
	330, 3132,
	331, 3132,
	332, 3132,
	333, 3132,
	334, 3132,
	336, 3132,
	337, 3132,
	338, 3132,
	339, 3132,
	340, 3132,
	341, 3132,
	342, 3132,
	343, 3132,
	344, 3132,
	345, 3132,
	346, 3132,
	347, 3132,
	348, 3132,
	349, 3132,
	350, 3132,
	351, 3132,
	352, 3132,
	353, 3132,
	354, 3132,
	356, 3132,
	357, 3132,
	360, 3132,
	361, 3132,
	362, 3132,
	363, 3132,
	364, 3132,
	366, 3132,
	367, 3132,
	368, 3132,
	369, 3132,
	370, 3132,
	373, 3132,
	375, 3132,
	378, 3132,
	379, 3132,
	380, 3132,
	381, 3132,
	383, 3132,
	384, 3132,
	385, 3132,
	387, 3132,
	389, 3132,
	390, 3132,
	391, 3132,
	392, 3132,
	393, 3132,
	394, 3132,
	395, 3132,
	396, 3132,
	397, 3132,
	398, 3132,
	399, 3132,
	400, 3132,
	401, 3132,
	402, 3132,
	404, 3132,
	405, 3132,
	406, 3132,
	407, 3132,
	408, 3132,
	409, 3132,
	410, 3132,
	411, 3132,
	412, 3132,
	413, 3132,
	414, 3132,
	415, 3132,
	416, 3132,
	417, 3132,
	418, 3132,
	420, 3132,
	421, 3132,
	422, 3132,
	424, 3132,
	425, 3132,
	426, 3132,
	427, 3132,
	428, 3132,
	429, 3132,
	430, 3132,
	431, 3132,
	432, 3132,
	433, 3132,
	434, 3132,
	435, 3132,
	436, 3132,
	437, 3132,
	439, 3132,
	441, 3132,
	442, 3132,
	443, 3132,
	449, 3132,
	450, 3132,
	451, 3132,
	452, 3132,
	453, 3132,
	454, 3132,
	455, 3132,
	456, 3132,
	457, 3132,
	458, 3132,
	459, 3132,
	460, 3132,
	461, 3132,
	462, 3132,
	463, 3132,
	465, 3132,
	466, 3132,
	467, 3132,
	468, 3132,
	469, 3132,
	470, 3132,
	471, 3132,
	472, 3132,
	473, 3132,
	474, 3132,
	475, 3132,
	476, 3132,
	477, 3132,
	478, 3132,
	479, 3132,
	480, 3132,
	481, 3132,
	482, 3132,
	483, 3132,
	484, 3132,
	485, 3132,
	486, 3132,
	487, 3132,
	488, 3132,
	489, 3132,
	490, 3132,
	491, 3132,
	492, 3132,
	493, 3132,
	494, 3132,
	496, 3132,
	497, 3132,
	498, 3132,
	499, 3132,
	500, 3132,
	501, 3132,
	503, 3132,
	504, 3132,
	505, 3132,
	506, 3132,
	507, 3132,
	508, 3132,
	509, 3132,
	510, 3132,
	511, 3132,
	512, 3132,
	513, 3132,
	514, 3132,
	515, 3132,
	516, 3132,
	517, 3132,
	518, 3132,
	520, 3132,
	522, 3132,
	523, 3132,
	524, 3132,
	525, 3132,
	526, 3132,
	527, 3132,
	528, 3132,
	529, 3132,
	530, 3132,
	531, 3132,
	532, 3132,
	533, 3132,
	534, 3132,
	535, 3132,
	536, 3132,
	537, 3132,
	538, 3132,
	539, 3132,
	540, 3132,
	541, 3132,
	542, 3132,
	544, 3132,
	545, 3132,
	546, 3132,
	547, 3132,
	548, 3132,
	550, 3132,
	551, 3132,
	552, 3132,
	553, 3132,
	554, 3132,
	555, 3132,
	557, 3132,
	558, 3132,
	560, 3132,
	561, 3132,
	562, 3132,
	563, 3132,
	564, 3132,
	566, 3132,
	568, 3132,
	569, 3132,
	570, 3132,
	571, 3132,
	572, 3132,
	573, 3132,
	574, 3132,
	575, 3132,
	577, 3132,
	578, 3132,
	579, 3132,
	580, 3132,
	581, 3132,
	582, 3132,
	583, 3132,
	586, 3132,
	587, 3132,
	588, 3132,
	589, 3132,
	590, 3132,
	591, 3132,
	592, 3132,
	593, 3132,
	595, 3132,
	598, 3132,
	599, 3132,
	600, 3132,
	601, 3132,
	602, 3132,
	603, 3132,
	605, 3132,
	606, 3132,
	607, 3132,
	608, 3132,
	609, 3132,
	610, 3132,
	611, 3132,
	612, 3132,
	613, 3132,
	614, 3132,
	615, 3132,
	620, 3132,
	621, 3132,
	622, 3132,
	623, 3132,
	624, 3132,
	625, 3132,
	626, 3132,
	628, 3132,
	638, 3132,
	639, 3132,
	640, 3132,
	641, 3132,
	642, 3132,
	643, 3132,
	645, 3132,
	646, 3132,
	647, 3132,
	648, 3132,
	649, 3132,
	650, 3132,
	651, 3132,
	652, 3132,
	653, 3132,
	656, 3132,
	659, 3132,
	660, 3132,
	662, 3132,
	663, 3132,
	-2, 0,
	-1, 1825,
	202, 2978,
	565, 2978,
	640, 2978,
	660, 2978,
	-2, 0,
	-1, 1873,
	202, 1076,
	-2, 2968,
	-1, 1874,
	202, 1077,
	-2, 2751,
	-1, 1875,
	202, 1078,
	-2, 2919,
	-1, 1880,
	426, 1128,
	501, 1128,
	548, 1128,
	570, 1128,
	-2, 0,
	-1, 1891,
	1, 1677,
	240, 1677,
	657, 1677,
	659, 1677,
	661, 1677,
	664, 1677,
	-2, 0,
	-1, 1908,
	1, 1123,
	657, 1123,
	659, 1123,
	661, 1123,
	664, 1123,
	-2, 0,
	-1, 1909,
	1, 1167,
	657, 1167,
	659, 1167,
	661, 1167,
	664, 1167,
	-2, 0,
	-1, 1910,
	1, 1175,
	657, 1175,
	659, 1175,
	661, 1175,
	664, 1175,
	-2, 0,
	-1, 1913,
	1, 1132,
	657, 1132,
	659, 1132,
	661, 1132,
	664, 1132,
	-2, 0,
	-1, 1915,
	1, 1138,
	657, 1138,
	659, 1138,
	661, 1138,
	664, 1138,
	-2, 0,
	-1, 1918,
	1, 1134,
	657, 1134,
	659, 1134,
	661, 1134,
	664, 1134,
	-2, 0,
	-1, 1923,
	1, 1148,
	657, 1148,
	659, 1148,
	661, 1148,
	664, 1148,
	-2, 0,
	-1, 1958,
	1, 2957,
	657, 2957,
	659, 2957,
	660, 2957,
	661, 2957,
	664, 2957,
	-2, 0,
	-1, 1962,
	1, 1227,
	657, 1227,
	659, 1227,
	661, 1227,
	664, 1227,
	-2, 0,
	-1, 1982,
	182, 1895,
	195, 1895,
	297, 1895,
	371, 1895,
	-2, 1833,
	-1, 2084,
	161, 1854,
	182, 1854,
	195, 1854,
	261, 1854,
	297, 1854,
	371, 1854,
	382, 1854,
	584, 1854,
	-2, 2305,
	-1, 2145,
	659, 2480,
	-2, 0,
	-1, 2181,
	161, 1854,
	182, 1854,
	195, 1854,
	261, 1854,
	297, 1854,
	371, 1854,
	382, 1854,
	584, 1854,
	-2, 1987,
	-1, 2220,
	660, 2624,
	663, 2624,
	-2, 1254,
	-1, 2221,
	660, 2626,
	663, 2626,
	-2, 1255,
	-1, 2222,
	660, 2625,
	663, 2625,
	-2, 1256,
	-1, 2223,
	663, 2548,
	-2, 1257,
	-1, 2246,
	658, 2128,
	-2, 2116,
	-1, 2278,
	202, 2975,
	660, 2975,
	663, 2975,
	-2, 0,
	-1, 2329,
	1, 884,
	661, 884,
	664, 884,
	-2, 1738,
	-1, 2529,
	240, 314,
	-2, 2632,
	-1, 2530,
	240, 315,
	-2, 378,
	-1, 2646,
	1, 1125,
	657, 1125,
	659, 1125,
	661, 1125,
	664, 1125,
	-2, 0,
	-1, 2647,
	1, 1169,
	657, 1169,
	659, 1169,
	661, 1169,
	664, 1169,
	-2, 0,
	-1, 2648,
	1, 1177,
	657, 1177,
	659, 1177,
	661, 1177,
	664, 1177,
	-2, 0,
	-1, 2649,
	1, 1229,
	657, 1229,
	659, 1229,
	661, 1229,
	664, 1229,
	-2, 0,
	-1, 2690,
	1, 1150,
	657, 1150,
	659, 1150,
	661, 1150,
	664, 1150,
	-2, 0,
	-1, 2713,
	1, 1212,
	657, 1212,
	659, 1212,
	661, 1212,
	664, 1212,
	-2, 0,
	-1, 2761,
	476, 1922,
	477, 1922,
	-2, 2161,
	-1, 2794,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2181,
	-1, 2795,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2182,
	-1, 2796,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2183,
	-1, 2797,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2184,
	-1, 2798,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2185,
	-1, 2799,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2186,
	-1, 2800,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2187,
	-1, 2801,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2188,
	-1, 2813,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2200,
	-1, 2814,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2201,
	-1, 2815,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2202,
	-1, 2819,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2209,
	-1, 2825,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2213,
	-1, 2827,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2221,
	-1, 2828,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2222,
	-1, 2829,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2223,
	-1, 2830,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2224,
	-1, 3004,
	5, 2636,
	202, 2491,
	658, 2633,
	-2, 2624,
	-1, 3005,
	202, 2492,
	-2, 3062,
	-1, 3006,
	202, 2493,
	-2, 2846,
	-1, 3007,
	202, 2494,
	-2, 2714,
	-1, 3008,
	202, 2495,
	-2, 2779,
	-1, 3009,
	202, 2496,
	-2, 2831,
	-1, 3010,
	202, 2497,
	-2, 2971,
	-1, 3011,
	202, 2498,
	-2, 2288,
	-1, 3104,
	1, 1988,
	2, 1988,
	113, 1988,
	161, 1988,
	182, 1988,
	195, 1988,
	203, 1988,
	221, 1988,
	224, 1988,
	254, 1988,
	261, 1988,
	273, 1988,
	293, 1988,
	297, 1988,
	337, 1988,
	371, 1988,
	376, 1988,
	382, 1988,
	464, 1988,
	470, 1988,
	584, 1988,
	596, 1988,
	617, 1988,
	618, 1988,
	619, 1988,
	629, 1988,
	657, 1988,
	659, 1988,
	661, 1988,
	663, 1988,
	664, 1988,
	-2, 1987,
	-1, 3117,
	658, 2605,
	-2, 2619,
	-1, 3119,
	1, 395,
	617, 395,
	664, 395,
	-2, 1881,
	-1, 3155,
	658, 2127,
	-2, 2117,
	-1, 3185,
	38, 2636,
	134, 2636,
	640, 2636,
	656, 2636,
	659, 2636,
	660, 2636,
	663, 2636,
	-2, 2633,
	-1, 3186,
	38, 2637,
	134, 2637,
	640, 2637,
	656, 2637,
	659, 2637,
	660, 2637,
	663, 2637,
	-2, 2634,
	-1, 3415,
	1, 1577,
	458, 1531,
	503, 1531,
	632, 1531,
	637, 1531,
	657, 1577,
	659, 1577,
	661, 1577,
	664, 1577,
	-2, 1881,
	-1, 3599,
	377, 1925,
	-2, 3121,
	-1, 3600,
	377, 1926,
	-2, 2954,
	-1, 3604,
	476, 2559,
	477, 2559,
	-2, 2286,
	-1, 3605,
	476, 2563,
	477, 2563,
	-2, 2287,
	-1, 3606,
	476, 2560,
	477, 2560,
	-2, 2286,
	-1, 3607,
	476, 2564,
	477, 2564,
	-2, 2287,
	-1, 3621,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2211,
	-1, 3622,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2215,
	-1, 3628,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2217,
	-1, 3870,
	1, 879,
	657, 879,
	659, 879,
	661, 879,
	664, 879,
	-2, 1738,
	-1, 4096,
	46, 2596,
	-2, 1311,
	-1, 4101,
	1, 1577,
	657, 1577,
	659, 1577,
	661, 1577,
	664, 1577,
	-2, 1881,
	-1, 4212,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2219,
	-1, 4219,
	267, 0,
	269, 0,
	360, 0,
	-2, 2238,
	-1, 4287,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2267,
	-1, 4288,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2268,
	-1, 4289,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2269,
	-1, 4293,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2273,
	-1, 4294,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2274,
	-1, 4295,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2275,
	-1, 4343,
	658, 2606,
	-2, 2620,
	-1, 4585,
	660, 3239,
	-2, 1807,
	-1, 4644,
	267, 0,
	269, 0,
	360, 0,
	-2, 2239,
	-1, 4647,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2242,
	-1, 4648,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2244,
	-1, 4773,
	660, 2621,
	-2, 1612,
	-1, 4947,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2243,
	-1, 4948,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2245,
	-1, 4959,
	267, 0,
	-2, 2278,
	-1, 5160,
	267, 0,
	-2, 2279,
	-1, 5389,
	54, 0,
	236, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 3084,
}

const sqlPrivate = 57344

const sqlLast = 158145

var sqlAct = [...]int16{
	312, 5320, 5576, 5517, 5605, 5459, 5443, 5584, 3319, 1492,
	3490, 5021, 1224, 199, 5211, 1026, 6, 3373, 5436, 3759,
	5388, 5401, 5203, 5375, 1027, 10, 4083, 5531, 5273, 5319,
	5334, 4627, 5358, 2526, 5255, 4, 5310, 4082, 5402, 4557,
	5468, 5403, 5128, 5331, 4769, 5105, 1720, 2389, 5092, 1548,
	1685, 5350, 4252, 4900, 5399, 5164, 3828, 1408, 3244, 4905,
	5078, 3897, 5387, 4863, 4894, 5026, 4968, 4204, 2771, 4935,
	2187, 2620, 4826, 2360, 4577, 4569, 3459, 5111, 4119, 5240,
	4010, 4477, 1489, 1482, 3036, 4770, 950, 3178, 3613, 1484,
	4750, 2842, 2595, 1991, 3245, 803, 4910, 1387, 3510, 4067,
	2569, 4113, 4540, 2233, 4523, 4052, 2781, 878, 4146, 3903,
	4525, 3884, 4072, 2398, 4964, 950, 2618, 1569, 4148, 199,
	3961, 3479, 3447, 4074, 2582, 3474, 3476, 2772, 4064, 4071,
	4045, 4044, 3900, 3886, 1662, 1216, 3374, 3885, 2616, 3131,
	1272, 4626, 4346, 3805, 3812, 3782, 4683, 3774, 3742, 3541,
	45, 1030, 3505, 3491, 2156, 1841, 815, 3763, 2513, 2311,
	2515, 1273, 2427, 3422, 3347, 2475, 5444, 3334, 3924, 2216,
	4065, 3097, 2778, 3741, 4313, 2410, 2287, 306, 2131, 1715,
	1843, 5165, 2855, 2092, 2062, 3597, 3099, 945, 3765, 2920,
	3096, 1021, 3504, 1716, 2566, 1487, 1780, 2469, 3384, 2377,
	305, 1388, 2450, 2457, 2473, 3460, 1277, 874, 2381, 1531,
	1888, 2309, 1563, 1461, 2514, 1282, 3176, 3077, 1397, 1475,
	3136, 3177, 3033, 2911, 2157, 2743, 3484, 2839, 2359, 2760,
	2741, 851, 1546, 1687, 2356, 3132, 1818, 1783, 1776, 1550,
	2176, 5355, 790, 2349, 2173, 2499, 813, 3269, 3230, 2565,
	2922, 5274, 5585, 3270, 1101, 3889, 1518, 1438, 1441, 4075,
	1426, 2914, 1391, 956, 1472, 952, 3086, 2166, 3046, 2966,
	1370, 2892, 3184, 1405, 1245, 1280, 2076, 1992, 3000, 951,
	1993, 859, 2742, 2744, 1923, 894, 959, 210, 1227, 211,
	2523, 1908, 956, 1670, 952, 1809, 1000, 127, 2126, 870,
	1745, 1816, 5460, 113, 2504, 1258, 834, 5518, 951, 808,
	50, 49, 47, 38, 36, 959, 940, 1368, 1998, 804,
	34, 817, 3651, 1393, 1562, 1973, 1726, 1122, 123, 4327,
	3645, 1001, 4328, 3761, 2289, 2289, 5594, 2289, 2289, 5620,
	2289, 2289, 2289, 3076, 5608, 5592, 5591, 5551, 4025, 3076,
	3076, 5025, 5549, 5489, 5445, 3829, 5025, 2535, 5446, 887,
	890, 1543, 5427, 5425, 1719, 5422, 3076, 3076, 5419, 5423,
	5397, 5385, 5420, 5384, 5383, 2535, 5373, 2535, 3515, 4128,
	5025, 5371, 5362, 5361, 175, 5025, 5025, 5025, 5329, 4994,
	5295, 1777, 5025, 84, 3146, 52, 51, 5288, 5287, 2321,
	5278, 3076, 3076, 5254, 2535, 5251, 4987, 2535, 4991, 5025,
	1279, 5233, 85, 5162, 5142, 4853, 5107, 3146, 4602, 5044,
	4400, 5043, 5032, 2535, 5031, 2535, 2535, 5024, 5025, 4990,
	90, 5025, 4975, 4949, 1403, 4986, 2535, 3146, 4920, 1527,
	4888, 73, 3515, 4821, 4025, 4887, 1853, 3076, 54, 4797,
	173, 1371, 1371, 3076, 4717, 4646, 4593, 1527, 4587, 3146,
	4141, 1385, 4141, 1209, 4537, 1220, 1022, 4431, 4538, 53,
	4399, 4432, 99, 2617, 4400, 4338, 4336, 4320, 4236, 4339,
	4337, 3076, 2535, 1914, 4232, 4129, 4140, 1200, 3076, 1199,
	4141, 4317, 3822, 1220, 84, 2570, 1025, 1024, 2321, 3850,
	56, 74, 3847, 3851, 2318, 3758, 3170, 3753, 3842, 3076,
	57, 3076, 3752, 85, 3703, 63, 3076, 3701, 3704, 3141,
	5571, 3702, 3712, 3713, 1423, 3730, 3731, 3732, 55, 106,
	122, 90, 4025, 2318, 1215, 3048, 106, 119, 3693, 3452,
	3691, 1221, 3694, 3662, 3076, 75, 3660, 3076, 1400, 3514,
	3501, 3500, 3661, 3515, 2605, 2605, 3209, 3145, 3129, 1433,
	3076, 3146, 3076, 2321, 3121, 3075, 2604, 2535, 2535, 3076,
	2605, 2321, 1374, 99, 1375, 3612, 3076, 5296, 5166, 5157,
	2917, 58, 270, 1372, 3712, 3713, 5145, 3515, 4317, 3047,
	2318, 4898, 4853, 2318, 4798, 4602, 4539, 4532, 3326, 2403,
	3229, 2335, 107, 3727, 2321, 2534, 3220, 2301, 2315, 3452,
	4006, 2008, 2009, 3344, 3137, 2152, 1028, 1424, 1713, 4449,
	4207, 4130, 1424, 4176, 2174, 2462, 1890, 3113, 3112, 55,
	3111, 122, 3110, 3109, 1376, 2039, 272, 106, 119, 1728,
	1373, 4131, 4701, 2011, 270, 1208, 1207, 1206, 1205, 1204,
	1203, 1202, 1198, 1197, 1196, 1195, 1194, 1193, 3712, 3713,
	1192, 1191, 1190, 1189, 1188, 3727, 1187, 3567, 4912, 1186,
	1185, 1184, 2064, 1183, 3712, 3713, 1728, 3730, 3731, 3732,
	2918, 2010, 1182, 1399, 76, 3712, 3713, 1181, 271, 1180,
	1179, 1178, 2030, 1165, 1099, 1098, 1097, 1096, 272, 1095,
	1094, 2027, 1093, 107, 3718, 1092, 264, 1091, 1090, 1089,
	1088, 1087, 1086, 1085, 1084, 265, 1083, 1082, 1081, 1080,
	1079, 1078, 3712, 3713, 1077, 1076, 2290, 2290, 1075, 2290,
	2290, 1074, 2290, 2290, 2290, 2008, 2009, 1073, 1072, 1071,
	1070, 1069, 1068, 1067, 4658, 212, 3076, 1066, 1719, 1065,
	271, 3735, 1064, 1063, 1052, 3727, 1051, 1050, 1045, 2039,
	4640, 1044, 111, 1037, 1036, 1035, 3718, 2011, 2919, 1020,
	2916, 1019, 5412, 1018, 3650, 976, 975, 974, 3734, 973,
	59, 972, 963, 2033, 2034, 2035, 2036, 962, 961, 1740,
	960, 3452, 922, 2016, 921, 1256, 2064, 62, 885, 884,
	883, 865, 65, 300, 299, 2010, 298, 212, 297, 296,
	2949, 295, 77, 294, 293, 292, 2030, 291, 290, 289,
	64, 208, 3728, 114, 288, 287, 118, 286, 5438, 3237,
	285, 2318, 60, 284, 283, 282, 174, 281, 280, 279,
	3718, 278, 277, 276, 61, 1734, 275, 2038, 2040, 274,
	2318, 270, 1494, 1282, 273, 1834, 3718, 4371, 270, 4332,
	4180, 4142, 2682, 111, 3808, 166, 68, 3718, 3756, 2318,
	3673, 3656, 166, 3647, 3544, 3432, 2025, 2026, 3237, 2134,
	1282, 1282, 1282, 3150, 3728, 3118, 2133, 3712, 3713, 172,
	2318, 3103, 2177, 2947, 2933, 4914, 2931, 3469, 2733, 2362,
	2320, 1425, 2200, 2061, 3718, 272, 3047, 2033, 2034, 2035,
	2036, 2031, 272, 3757, 2134, 1435, 2137, 2016, 3487, 2103,
	1974, 2133, 208, 2005, 114, 4550, 1572, 118, 2321, 3196,
	1282, 2301, 2318, 1690, 2315, 2288, 2736, 1282, 1282, 270,
	171, 1494, 2921, 5148, 1722, 1539, 4128, 1407, 5411, 5408,
	1704, 2132, 5016, 1535, 1536, 1537, 214, 271, 3728, 270,
	2094, 5386, 1727, 1424, 271, 2061, 1282, 1029, 1282, 2318,
	1282, 2038, 2040, 166, 3728, 264, 270, 5370, 1690, 5259,
	5154, 5169, 264, 5146, 265, 3728, 4963, 4918, 4897, 3729,
	1522, 265, 2061, 272, 4725, 209, 3047, 4681, 4680, 4674,
	213, 4673, 1494, 4672, 1499, 4665, 4664, 4662, 3712, 3713,
	4657, 1785, 4437, 272, 212, 1680, 2094, 4654, 4653, 1739,
	1424, 212, 3728, 4536, 1690, 1717, 4531, 4375, 4374, 4373,
	272, 1690, 4342, 1522, 4308, 2031, 4307, 199, 199, 2061,
	1282, 171, 1282, 1857, 4306, 271, 1838, 1690, 1728, 4228,
	4223, 3729, 2037, 3803, 3749, 2061, 1282, 214, 1282, 1466,
	1469, 3235, 3740, 264, 3711, 271, 2061, 3708, 1401, 3718,
	3707, 3705, 265, 3700, 2915, 1733, 3699, 3698, 2032, 3695,
	1514, 3692, 271, 264, 1500, 1479, 1516, 3672, 1790, 1793,
	1675, 3655, 265, 3648, 1223, 3646, 209, 1916, 3502, 3104,
	264, 213, 212, 2061, 2101, 2008, 2009, 1690, 3159, 265,
	2904, 2005, 2585, 1384, 2004, 1812, 2061, 1725, 5614, 1732,
	2542, 1738, 1023, 2540, 5539, 3729, 1565, 1282, 1659, 1664,
	1282, 956, 1553, 1554, 2096, 1702, 5538, 2011, 5458, 212,
	2095, 3729, 2093, 5456, 1409, 4254, 2063, 5321, 1667, 3724,
	3725, 3726, 3729, 4551, 959, 1728, 3723, 3721, 3722, 3714,
	3715, 3716, 3717, 3719, 3720, 4447, 5238, 5223, 3471, 1508,
	5219, 2008, 2009, 5218, 1714, 2010, 2037, 4913, 5217, 5197,
	5196, 1542, 5194, 3234, 5168, 5167, 5140, 3728, 2845, 3729,
	3718, 1832, 5126, 1837, 1695, 1778, 5123, 5122, 2851, 5103,
	5102, 5040, 2032, 2011, 5011, 4961, 4944, 1851, 4943, 1856,
	4551, 1858, 1698, 3754, 3712, 3713, 1821, 1823, 3723, 3721,
	3722, 3714, 3715, 3716, 3717, 3719, 3720, 1796, 4883, 4879,
	4876, 3834, 3234, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 2010, 2028, 2024, 4854, 2021, 2019, 2020, 2012, 2013,
	2014, 2015, 2017, 2018, 4700, 4679, 4603, 1819, 5171, 1545,
	4435, 4434, 4415, 1555, 1556, 4414, 1282, 4412, 2061, 3234,
	2063, 4323, 1282, 4311, 4218, 1915, 2081, 4143, 4105, 270,
	4095, 3987, 270, 3935, 3902, 3836, 1522, 2016, 3677, 3676,
	3671, 3637, 3723, 3721, 3722, 3714, 3715, 3716, 3717, 3719,
	3720, 3724, 3725, 3726, 3446, 1549, 3444, 3262, 3723, 3721,
	3722, 3714, 3715, 3716, 3717, 3719, 3720, 2140, 2139, 2138,
	3721, 3722, 3714, 3715, 3716, 3717, 3719, 3720, 2135, 2127,
	2125, 3157, 5170, 272, 2083, 1983, 272, 3156, 270, 3115,
	3108, 3074, 1932, 2929, 2080, 2293, 2199, 2155, 270, 2149,
	2148, 2147, 1221, 2016, 3729, 270, 2146, 1863, 3722, 3714,
	3715, 3716, 3717, 3719, 3720, 2145, 2144, 1833, 1979, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 1282, 1282,
	1282, 2143, 4886, 1852, 1282, 271, 2142, 2141, 271, 2122,
	2121, 1405, 272, 1405, 2120, 2119, 3718, 3470, 4721, 3800,
	2118, 2117, 272, 264, 2116, 2115, 264, 199, 1572, 272,
	2114, 2113, 265, 2112, 2111, 265, 2110, 2109, 2108, 2107,
	1282, 2096, 2082, 2222, 1494, 2079, 2074, 1507, 1430, 2154,
	1810, 2251, 2222, 1419, 1494, 2006, 1881, 1494, 1690, 4650,
	4370, 4988, 3486, 4335, 271, 212, 4326, 3659, 3148, 3106,
	4723, 1917, 4369, 1815, 271, 270, 2203, 2095, 3832, 2077,
	4800, 271, 264, 3712, 3713, 1984, 4134, 2948, 2163, 2195,
	4533, 265, 264, 2008, 2009, 1532, 3320, 5530, 3938, 264,
	1534, 265, 5227, 5404, 5220, 1975, 2061, 4917, 265, 1549,
	2355, 1549, 4837, 1549, 1980, 4836, 1549, 4835, 4834, 1988,
	1987, 212, 1494, 4833, 2215, 2011, 2229, 4799, 1282, 272,
	2136, 212, 1200, 4703, 1199, 4610, 2280, 4609, 212, 2283,
	1549, 4608, 1982, 4607, 3714, 3715, 3716, 3717, 3719, 3720,
	4606, 5485, 1282, 2160, 2161, 4605, 270, 2001, 2002, 270,
	1572, 1547, 4604, 2010, 4401, 2191, 4330, 4329, 2210, 3288,
	2946, 2932, 1403, 2930, 1403, 1533, 1371, 4145, 2347, 2346,
	4144, 271, 1549, 2355, 4027, 4026, 4015, 2392, 5483, 1527,
	2917, 5400, 5149, 5112, 2209, 2208, 4554, 270, 4205, 264,
	2353, 2184, 2440, 2177, 2323, 3977, 1527, 270, 265, 2134,
	272, 1977, 2327, 272, 1221, 2061, 2133, 4468, 3697, 3696,
	956, 2274, 2225, 3619, 3273, 1528, 1530, 2205, 5015, 956,
	4430, 2225, 5147, 2326, 2117, 4544, 2223, 2117, 212, 1880,
	2207, 2128, 2129, 959, 2341, 2223, 3904, 3382, 1522, 1176,
	2204, 272, 959, 2175, 2185, 4085, 1527, 4084, 2300, 1933,
	2105, 272, 271, 2305, 5189, 271, 2307, 3716, 3717, 3719,
	3720, 4395, 2312, 4396, 1889, 2182, 2314, 5190, 2570, 5106,
	264, 2317, 5433, 264, 4895, 3511, 1400, 5190, 1400, 265,
	2918, 4053, 265, 4011, 4841, 1890, 2517, 2459, 4530, 2303,
	4474, 4465, 1177, 271, 2516, 4440, 2637, 2153, 2350, 4172,
	3868, 2703, 4965, 271, 2614, 3761, 2550, 4256, 5577, 212,
	3665, 264, 212, 2234, 2912, 2194, 2193, 2192, 2190, 2189,
	265, 264, 1690, 1690, 2179, 2188, 5035, 4784, 5007, 5597,
	265, 1221, 5409, 1572, 2329, 4781, 3155, 2150, 2130, 5424,
	4102, 2586, 1814, 4008, 2230, 2578, 1524, 1789, 1709, 1503,
	212, 1465, 2012, 2013, 2014, 2015, 2017, 2018, 3341, 1690,
	212, 2403, 4007, 2471, 3271, 3322, 2439, 2102, 2919, 5421,
	2916, 2438, 4813, 4810, 4124, 3338, 3336, 2446, 2325, 1383,
	4406, 5212, 4901, 3543, 5328, 3907, 4425, 3483, 1690, 1846,
	2500, 2435, 3424, 2444, 4036, 5486, 1867, 5038, 5034, 2454,
	5487, 5013, 3872, 4199, 2007, 2713, 1226, 4487, 5410, 2710,
	5067, 1399, 5071, 1399, 1014, 1815, 4786, 1759, 3210, 5607,
	2014, 2015, 2017, 2018, 1912, 1174, 2352, 1930, 1172, 5228,
	2449, 2449, 5060, 1690, 1529, 1690, 2401, 1690, 1170, 2367,
	2696, 2368, 5522, 2449, 920, 2330, 2348, 2694, 1534, 1931,
	917, 2375, 2376, 1161, 5046, 1690, 1690, 4846, 4845, 4485,
	4484, 3714, 3715, 3716, 3717, 3719, 3720, 2351, 5465, 1690,
	2711, 2397, 3233, 4476, 4455, 4454, 3247, 4452, 2409, 3233,
	2342, 1690, 1711, 4486, 1690, 1690, 1690, 1225, 3231, 4451,
	3833, 4439, 4398, 1752, 4397, 3231, 4042, 1525, 4041, 2647,
	2712, 956, 2527, 2532, 3979, 3821, 1534, 1526, 2222, 3670,
	2598, 1812, 3669, 2597, 3668, 2597, 4013, 2501, 2369, 2370,
	3667, 2521, 3623, 1533, 959, 2373, 2374, 2574, 3874, 2432,
	1282, 1015, 2519, 2520, 2447, 3380, 3379, 3937, 2609, 1929,
	3359, 4731, 2921, 3357, 2533, 3343, 1911, 2482, 3332, 2751,
	3324, 3313, 3312, 3300, 2579, 1551, 1552, 3299, 2751, 4780,
	1517, 4409, 3298, 5578, 4012, 5083, 3278, 2592, 2648, 1282,
	3277, 3238, 3130, 2445, 5036, 857, 5008, 4782, 1219, 2453,
	2431, 1533, 1528, 2638, 857, 2428, 4534, 2826, 3975, 1865,
	2231, 2612, 1981, 2962, 2961, 2642, 2783, 3904, 3250, 5143,
	1012, 2151, 1011, 3217, 3480, 1282, 2506, 1282, 2600, 2506,
	4742, 2622, 2505, 2749, 1282, 2505, 2509, 1282, 3164, 2251,
	2251, 1572, 2749, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 2547,
	1282, 2635, 1282, 1282, 1282, 1282, 1819, 2602, 1819, 2589,
	2553, 3163, 5523, 2517, 2915, 2570, 3149, 2667, 1218, 2683,
	1802, 5525, 1801, 4741, 1800, 956, 1799, 2225, 1282, 2448,
	2448, 2629, 1282, 1282, 1814, 2581, 2753, 1528, 5466, 4009,
	1282, 2223, 2448, 2740, 1282, 1527, 1282, 1282, 959, 2594,
	4942, 2747, 3294, 1524, 1572, 3720, 2402, 3292, 4801, 2628,
	1282, 1282, 1282, 1282, 1763, 2018, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 2606, 1508, 2607, 1167, 3275, 2357,
	2358, 1551, 1552, 1551, 1552, 2382, 1551, 1552, 2399, 3134,
	2383, 2722, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 1221, 1282, 1221, 1912, 2735, 1282, 1452, 1754, 4173,
	1551, 1552, 3976, 2912, 2568, 1882, 2893, 2894, 1405, 2750,
	2731, 3575, 2633, 2646, 1712, 1572, 5526, 2395, 2750, 914,
	2893, 2909, 2657, 1972, 1405, 2725, 1401, 2654, 1401, 1220,
	1771, 1529, 3135, 5205, 2442, 2841, 3518, 3303, 5070, 2841,
	1282, 1572, 2357, 2358, 4783, 1943, 1947, 2957, 3249, 3562,
	2690, 3261, 2400, 3301, 1976, 856, 1928, 2777, 1524, 3311,
	3120, 2701, 3610, 3595, 856, 5084, 3003, 3003, 3017, 1909,
	2893, 2765, 1494, 3037, 3039, 2776, 2764, 4515, 5486, 5082,
	3045, 5091, 4778, 2396, 2688, 199, 1860, 5080, 3143, 3305,
	2748, 1949, 1017, 1016, 1525, 1878, 1890, 1755, 2502, 2748,
	5555, 2651, 2384, 2737, 1526, 2857, 2739, 2738, 3340, 2752,
	2745, 1890, 2645, 2507, 3139, 2823, 1911, 5524, 2411, 2908,
	2388, 2779, 2780, 1494, 3116, 802, 1200, 3871, 2768, 1200,
	1200, 2769, 2770, 3578, 3186, 3304, 1506, 5528, 1910, 4516,
	5079, 912, 3348, 3339, 2415, 2195, 1529, 2724, 3133, 2655,
	1986, 3302, 797, 3260, 3142, 2599, 4094, 2849, 2508, 3955,
	3337, 3335, 1494, 1494, 2847, 4185, 5207, 4184, 2510, 1403,
	5081, 3204, 1784, 3363, 3564, 1231, 2008, 2009, 858, 1371,
	5586, 2837, 3091, 3877, 4436, 1403, 2503, 858, 2921, 4514,
	5180, 3232, 2853, 4844, 4453, 4450, 3083, 4242, 4245, 4379,
	2039, 2385, 2390, 1572, 2412, 3169, 3162, 2906, 2011, 1525,
	3609, 1861, 2184, 2835, 3248, 3166, 3105, 4422, 2959, 1526,
	1866, 3956, 918, 2960, 3082, 918, 2963, 4378, 2964, 2965,
	4364, 1217, 4363, 1782, 5406, 1169, 2695, 2064, 3946, 3199,
	4941, 918, 956, 2693, 956, 3205, 2010, 918, 1221, 3202,
	2999, 1061, 2251, 4177, 3090, 3161, 3095, 3028, 1221, 3101,
	3102, 3012, 1221, 3043, 4048, 959, 3041, 959, 3274, 3072,
	3073, 3954, 3213, 4040, 3183, 3224, 3084, 3088, 3089, 3973,
	3577, 2721, 1925, 1400, 2136, 4243, 2182, 3138, 2165, 3358,
	3207, 1522, 2386, 5534, 3310, 3215, 956, 2821, 3342, 1400,
	3947, 2824, 1527, 1572, 3175, 3297, 4776, 3276, 5498, 1413,
	2539, 2538, 3419, 3574, 1944, 1690, 3634, 2732, 2382, 959,
	3191, 5509, 2416, 2383, 4779, 1415, 3195, 5508, 3151, 2382,
	3128, 2424, 3602, 3603, 2383, 3239, 5557, 4765, 5473, 3216,
	3206, 3931, 964, 2406, 4420, 4632, 2393, 2403, 3632, 4631,
	3945, 3158, 1221, 1410, 3201, 5527, 3190, 2820, 2016, 1494,
	3193, 3214, 3194, 4178, 1267, 124, 4049, 2831, 3415, 971,
	5437, 4859, 2921, 3198, 3420, 4758, 3208, 1762, 2169, 913,
	1282, 1282, 3168, 1282, 2353, 2353, 3236, 3171, 4046, 3172,
	3377, 2832, 3200, 2425, 2417, 2418, 4121, 3295, 2833, 2128,
	2129, 1416, 2838, 3929, 3318, 2407, 3571, 2289, 2391, 1788,
	2460, 1970, 2038, 2040, 1494, 3969, 5292, 1527, 1399, 3223,
	1451, 2413, 2401, 3458, 3418, 3280, 5407, 4122, 3455, 2172,
	1417, 3211, 4759, 3576, 1399, 5305, 3265, 915, 3971, 2512,
	5377, 911, 5378, 2423, 4999, 2384, 1690, 2723, 2167, 2653,
	3279, 3450, 3891, 3930, 3970, 2405, 2384, 199, 1690, 2921,
	1690, 3333, 5206, 2388, 3296, 1945, 1690, 3990, 2170, 2414,
	3968, 124, 3252, 3255, 2388, 1414, 2031, 1690, 1690, 3349,
	3467, 3308, 3242, 3967, 4777, 5213, 3314, 3964, 3286, 3287,
	3289, 3290, 3291, 3293, 1053, 3225, 3226, 3321, 3494, 3227,
	3228, 2511, 3629, 1494, 4013, 1494, 3427, 1784, 3509, 3508,
	3506, 3429, 2168, 3919, 1168, 4121, 3873, 3381, 1941, 855,
	1891, 1054, 3416, 3417, 3281, 3306, 3307, 1282, 798, 3433,
	1710, 1428, 3436, 3630, 3438, 3316, 3625, 3635, 2420, 3323,
	2840, 3330, 5405, 3462, 2385, 2390, 2443, 2123, 5472, 2387,
	3830, 3776, 956, 4711, 3430, 2385, 2390, 2061, 2689, 3354,
	4712, 2441, 2169, 4873, 1201, 1211, 5532, 1152, 3521, 3522,
	5249, 2822, 1942, 1946, 3918, 959, 2460, 1222, 3367, 3368,
	3529, 3530, 3531, 5451, 3370, 3545, 3485, 3546, 3119, 3485,
	3371, 3372, 1213, 3925, 5452, 3547, 3425, 1282, 1038, 1877,
	1879, 3516, 3503, 1282, 1282, 2419, 2650, 1284, 3523, 2834,
	3524, 965, 966, 2172, 3233, 3513, 1948, 2644, 1282, 2836,
	799, 3519, 5290, 4710, 2507, 1043, 4031, 5241, 3496, 4937,
	3253, 4628, 3085, 1862, 2393, 2386, 3498, 1389, 3512, 4047,
	1505, 5242, 1212, 2032, 3451, 2171, 2386, 2460, 4954, 2848,
	3927, 5496, 2170, 5339, 1985, 3539, 4754, 4815, 3528, 3466,
	5553, 1282, 1282, 4755, 3972, 3489, 823, 1282, 1062, 2508,
	5291, 2073, 3560, 2903, 4760, 800, 5243, 801, 3892, 1819,
	1282, 1282, 3499, 3675, 2380, 5533, 1282, 1282, 3497, 2393,
	1153, 2421, 1282, 3087, 2165, 4421, 3478, 3856, 5558, 4494,
	2393, 3100, 2402, 3536, 2456, 1220, 4258, 5541, 4885, 4492,
	2463, 2063, 4617, 1411, 3538, 2470, 4849, 4757, 4720, 3552,
	3926, 3554, 3580, 3556, 3582, 3558, 3559, 5535, 4498, 3553,
	3425, 3555, 3317, 3557, 2455, 4494, 4761, 1282, 1282, 1282,
	4365, 1434, 3551, 1282, 3631, 4492, 2378, 5245, 3568, 1432,
	4633, 2391, 4201, 1282, 3633, 3593, 3626, 3879, 4549, 5256,
	5345, 1896, 2391, 1055, 1056, 5272, 968, 967, 1327, 5471,
	1282, 3775, 5244, 2451, 5125, 1412, 4848, 4847, 3590, 4936,
	4575, 4109, 5438, 4021, 2169, 3583, 3601, 4019, 3585, 3845,
	3658, 5246, 3361, 3127, 2564, 2162, 2379, 1431, 4496, 2290,
	1422, 4874, 789, 1401, 5074, 3592, 1995, 3880, 2400, 3591,
	2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 1401,
	1996, 3611, 3653, 3654, 2700, 4297, 3596, 3657, 4629, 2171,
	2767, 2765, 2404, 4495, 4496, 2172, 2764, 2464, 4677, 2452,
	969, 970, 2343, 1995, 4034, 5033, 3618, 5563, 3813, 4035,
	1158, 1157, 4982, 4503, 2167, 1275, 1990, 5134, 4020, 3019,
	5450, 3362, 1282, 1282, 1282, 1282, 2340, 1039, 1040, 4495,
	3649, 1282, 1282, 1282, 2170, 3898, 1282, 5187, 4576, 4480,
	4456, 4407, 4405, 4756, 4110, 4100, 3894, 3468, 1282, 1405,
	1572, 3624, 2387, 3461, 3448, 2593, 2587, 4348, 2580, 1154,
	2572, 2549, 2546, 2387, 2757, 3352, 4241, 5257, 1756, 1443,
	3282, 4312, 5119, 864, 5311, 1282, 4202, 1282, 2168, 3237,
	5275, 1994, 1995, 3078, 4391, 2702, 1405, 2336, 4766, 4767,
	3366, 4938, 3768, 3769, 4578, 4906, 4634, 1864, 3445, 1152,
	1453, 3784, 5098, 5096, 1572, 5010, 3910, 3906, 3905, 2338,
	3254, 3616, 3594, 2634, 4349, 4325, 1405, 3773, 1994, 1572,
	3751, 3772, 1775, 3081, 1213, 1919, 1918, 2626, 2615, 4524,
	4359, 1494, 2544, 1913, 3664, 3126, 1057, 1058, 3125, 3124,
	1808, 3123, 4350, 4022, 3122, 4347, 3364, 2251, 1794, 4529,
	1806, 1572, 1218, 4843, 4358, 1996, 2339, 3793, 2366, 3770,
	4356, 1494, 4502, 3780, 1795, 5200, 4864, 3080, 3258, 1060,
	4545, 1494, 3079, 4413, 1221, 2591, 4056, 3186, 2251, 3802,
	3848, 4493, 2073, 5022, 2476, 2403, 4402, 3826, 5493, 903,
	1777, 4635, 1996, 4997, 1155, 4298, 4357, 1994, 5005, 4995,
	3542, 4353, 3423, 4174, 4169, 3785, 4299, 3844, 3843, 1282,
	1403, 2171, 5100, 3820, 3824, 3823, 2758, 4493, 3517, 4678,
	3428, 1282, 1153, 1210, 3426, 1156, 4354, 904, 2619, 5247,
	2516, 2392, 1870, 3991, 5317, 5248, 2467, 5018, 5562, 1494,
	1041, 1042, 5201, 3840, 5017, 2251, 4314, 1403, 3893, 5006,
	4736, 4735, 3807, 3746, 3747, 3748, 5325, 5308, 3783, 3790,
	3283, 3284, 1282, 3846, 3853, 3855, 4684, 2392, 3815, 3816,
	3817, 3818, 3762, 4023, 3778, 2928, 3365, 1403, 1494, 3799,
	3811, 3779, 3869, 5258, 1160, 3792, 3791, 3943, 5118, 3881,
	3882, 5099, 3794, 3795, 3875, 1897, 3789, 5023, 2465, 1494,
	4392, 1494, 3777, 4985, 1159, 4366, 2717, 1967, 3958, 5347,
	3960, 3908, 1969, 5497, 3912, 956, 1152, 3183, 5495, 5086,
	5426, 5231, 1966, 1964, 1400, 1282, 1282, 1522, 2459, 4464,
	3978, 5318, 5221, 1572, 3806, 2459, 4993, 1937, 959, 5202,
	1935, 1213, 4960, 1907, 1494, 3797, 1905, 3798, 2466, 3849,
	2927, 1903, 4728, 4001, 3895, 4676, 3862, 4528, 3825, 1901,
	1494, 1400, 4403, 1899, 4033, 4351, 4384, 3858, 3814, 4018,
	3860, 3861, 1893, 4352, 2365, 3864, 1887, 3865, 124, 3866,
	1885, 1494, 1158, 1157, 863, 3743, 3909, 1804, 4217, 3914,
	4029, 1400, 3916, 4170, 3854, 3993, 3922, 3995, 3852, 2474,
	3999, 1807, 4167, 3944, 4005, 3980, 3859, 3837, 3838, 3863,
	3839, 1805, 3841, 3786, 3787, 3788, 3706, 3932, 3933, 3831,
	3934, 3636, 3449, 3870, 3965, 3331, 1494, 1690, 4355, 1690,
	1059, 1154, 3325, 1572, 3959, 3940, 3272, 3160, 3878, 1153,
	950, 1690, 1690, 2730, 2726, 3186, 4032, 2208, 2636, 2625,
	2610, 2282, 2202, 2198, 1971, 1845, 4734, 2692, 3744, 1399,
	3992, 4196, 2659, 4195, 4187, 3928, 1494, 2525, 1990, 3566,
	3565, 3526, 4024, 2746, 1924, 4101, 2662, 2545, 3984, 3985,
	2281, 3986, 2279, 3936, 1405, 2106, 1859, 1367, 5398, 4115,
	4093, 124, 3949, 124, 4816, 124, 1399, 4467, 4466, 2719,
	3988, 3953, 4117, 4501, 1690, 4070, 2718, 5307, 4050, 4820,
	4904, 4796, 1968, 199, 199, 4825, 1690, 3901, 1690, 4366,
	4099, 3950, 1965, 1963, 4809, 3951, 1399, 3952, 916, 4747,
	3983, 4746, 3942, 3974, 5469, 4574, 3989, 1936, 4238, 4564,
	1934, 4483, 4002, 1906, 4458, 3506, 1904, 4428, 1222, 124,
	124, 1902, 4090, 3957, 3506, 4014, 4426, 4108, 4404, 1900,
	4104, 4098, 4086, 1898, 3481, 124, 1155, 124, 4126, 3473,
	3465, 3457, 1892, 3442, 4038, 1572, 1886, 3440, 1572, 3421,
	1884, 124, 4030, 124, 3197, 3183, 3192, 1803, 2543, 2541,
	3308, 2518, 2461, 2422, 2408, 2394, 2322, 1156, 4000, 1158,
	1157, 2319, 2316, 4137, 4111, 2313, 2308, 4051, 919, 4054,
	2306, 2302, 2295, 1282, 4017, 4165, 2291, 956, 4188, 952,
	1282, 1282, 4899, 4043, 1282, 1282, 1282, 4058, 1282, 4175,
	4039, 4114, 5464, 951, 4037, 4028, 3280, 1282, 2251, 5382,
	959, 4118, 1999, 2214, 3614, 1403, 1282, 4091, 1154, 124,
	2691, 1282, 4163, 4096, 4097, 2658, 1160, 1572, 4168, 4003,
	2524, 3360, 5487, 2344, 2470, 5199, 1282, 1380, 2332, 2333,
	3586, 3587, 3584, 4166, 1572, 4125, 1159, 3414, 5364, 4123,
	5266, 4919, 4832, 4733, 2251, 2251, 1282, 1282, 4132, 1282,
	1282, 1282, 4135, 4136, 1381, 4193, 3507, 3876, 2361, 1761,
	5136, 4116, 1171, 1173, 947, 2729, 3259, 1282, 5129, 3140,
	1748, 1282, 1437, 2251, 2251, 1282, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 1282, 4586, 1282, 3233, 4194, 2403,
	4203, 4220, 3233, 2649, 1282, 1282, 2251, 2590, 3615, 1201,
	1473, 1282, 4270, 3231, 4271, 2727, 1961, 1962, 3256, 1400,
	1474, 2000, 1282, 2686, 4181, 2681, 4182, 199, 4183, 5363,
	4310, 2656, 2078, 1405, 1405, 4787, 4827, 1282, 3378, 2008,
	2009, 1212, 4200, 1155, 2008, 2009, 4004, 1883, 4230, 4231,
	2084, 1544, 892, 5156, 2090, 4191, 3263, 5020, 2331, 4685,
	4663, 3923, 3264, 2728, 4197, 3285, 2003, 4198, 1501, 1572,
	1436, 2011, 5481, 1382, 1156, 1221, 1541, 301, 5434, 1047,
	4497, 3439, 1494, 1494, 4561, 2573, 4479, 1512, 4225, 3338,
	4344, 3264, 4227, 3336, 3345, 4309, 5501, 3327, 1474, 3266,
	1940, 1474, 1494, 1494, 1401, 4237, 2222, 3329, 1494, 2010,
	4331, 4478, 3186, 2251, 2010, 2251, 4260, 4253, 4244, 4246,
	4247, 3328, 3268, 5316, 5297, 5264, 5260, 895, 895, 909,
	786, 5198, 5529, 1160, 4268, 1282, 3267, 4360, 4269, 5120,
	5117, 1401, 4998, 4273, 4932, 4275, 4572, 4563, 4548, 4341,
	4301, 4103, 3488, 1159, 1399, 3454, 3441, 3044, 2328, 2232,
	5019, 4034, 4316, 1282, 4361, 4362, 4035, 4034, 3315, 1708,
	2234, 1401, 4035, 1707, 1701, 2178, 4302, 2181, 1214, 124,
	3827, 5561, 4248, 2476, 4376, 4377, 1719, 5500, 3712, 3713,
	4385, 2008, 2009, 4838, 1403, 1403, 1282, 1282, 2372, 3219,
	4387, 4034, 4388, 4318, 4319, 4267, 4035, 2371, 3218, 5283,
	5262, 1718, 2472, 1719, 1869, 1719, 2779, 4261, 1719, 4655,
	1868, 4321, 4322, 2923, 4368, 3569, 2958, 2372, 2371, 4333,
	1939, 5441, 4571, 1938, 5121, 5061, 4829, 4824, 4460, 4823,
	1282, 1282, 4713, 4709, 4708, 2779, 4276, 4651, 1282, 4334,
	4625, 4367, 3183, 4249, 3997, 4408, 3994, 3572, 2100, 2099,
	3589, 2734, 5546, 5510, 5368, 5301, 5300, 5299, 1690, 1690,
	5230, 5229, 5175, 5172, 5094, 4380, 1690, 5050, 4305, 4989,
	4441, 4984, 4386, 956, 4983, 2225, 4981, 1690, 1690, 3094,
	4980, 4978, 4881, 4858, 4785, 4722, 4389, 1690, 4707, 2223,
	4390, 4706, 1494, 4598, 4592, 4445, 959, 4499, 1400, 1400,
	1290, 4512, 4535, 4446, 4448, 4424, 4416, 4107, 4106, 3915,
	3857, 3573, 3563, 3535, 3534, 4507, 3533, 3532, 3472, 3443,
	3257, 2251, 4475, 3188, 3153, 3152, 2852, 4481, 2720, 2687,
	2680, 2679, 2678, 2677, 2676, 4462, 4463, 4372, 2588, 4427,
	2559, 4429, 4433, 2558, 2557, 1282, 2556, 4438, 2555, 4469,
	2554, 2298, 308, 308, 308, 2297, 792, 793, 2296, 809,
	792, 809, 821, 4560, 2294, 862, 1690, 2213, 2212, 882,
	4491, 1960, 1282, 4579, 889, 889, 889, 889, 1959, 3280,
	1405, 1282, 1894, 1770, 1362, 1769, 308, 4541, 4520, 1690,
	1768, 1767, 4517, 4518, 1690, 1690, 1690, 4588, 1766, 1765,
	1764, 1760, 1758, 1757, 1694, 1693, 1561, 1560, 1034, 1559,
	4556, 4527, 4504, 1558, 1557, 308, 4580, 4513, 1690, 1504,
	1690, 4488, 4482, 1460, 1459, 1690, 1458, 1572, 1457, 1456,
	3349, 1455, 1454, 1399, 1399, 1448, 1447, 3494, 1446, 4490,
	4522, 1445, 1444, 4526, 2334, 1175, 4500, 1166, 2245, 4583,
	3506, 5204, 4510, 4543, 4555, 4764, 4763, 4547, 1572, 4762,
	2716, 1282, 1282, 4521, 2567, 4599, 105, 1282, 1282, 2251,
	1753, 3353, 1282, 1282, 98, 1282, 2468, 4566, 4423, 4568,
	1282, 5435, 5542, 4562, 5570, 2551, 2477, 5349, 5348, 5235,
	4595, 1282, 3173, 2292, 4063, 4062, 5440, 2481, 5090, 4559,
	981, 4931, 1128, 4582, 4567, 5346, 1743, 1282, 996, 5327,
	4565, 3917, 4611, 4158, 3383, 2661, 1895, 4614, 5114, 2663,
	3801, 3107, 5289, 4659, 3674, 5163, 4584, 4581, 4156, 1401,
	4953, 2926, 4589, 2104, 3755, 100, 1266, 4590, 4149, 1312,
	4872, 1403, 4596, 4871, 4597, 4636, 4511, 4748, 4410, 4073,
	4868, 4867, 2236, 2238, 1230, 4612, 1575, 3050, 3052, 4649,
	5376, 2345, 5552, 2354, 3154, 792, 792, 3002, 1405, 1289,
	1286, 4616, 4645, 308, 199, 4615, 1405, 4682, 4622, 2240,
	1572, 1572, 2761, 1572, 2242, 1288, 4630, 1287, 2241, 2124,
	1405, 1285, 2235, 3901, 4570, 4092, 3492, 1222, 4613, 1222,
	4133, 1690, 1690, 1813, 1811, 4619, 1130, 2846, 2910, 2248,
	3663, 2097, 1246, 1268, 2907, 1429, 1257, 3781, 3760, 4120,
	4690, 4340, 1572, 2756, 1006, 4637, 3709, 4160, 2913, 1418,
	3025, 3018, 3014, 3867, 3482, 1494, 1978, 4967, 2075, 3493,
	1538, 1250, 2844, 2088, 3641, 2766, 4151, 4624, 4127, 3804,
	3147, 5357, 1282, 4257, 3570, 1400, 2563, 1379, 4698, 1378,
	1427, 1377, 4150, 1405, 5333, 1405, 5330, 2458, 4715, 4716,
	4875, 4068, 4675, 4069, 2337, 3212, 2856, 4087, 1262, 3548,
	3549, 1678, 2707, 4621, 4189, 3766, 4546, 1772, 5027, 1274,
	1494, 2060, 3410, 124, 3409, 5193, 2239, 1523, 1521, 4795,
	1572, 1520, 1494, 4718, 4719, 1494, 4737, 4738, 1519, 4774,
	5519, 4804, 4775, 3351, 4807, 4687, 4688, 4732, 4726, 4727,
	4689, 4159, 4730, 4692, 1282, 4740, 3346, 1572, 2498, 1403,
	3020, 4791, 4792, 4699, 4419, 4788, 4418, 1403, 4702, 4417,
	269, 2234, 3608, 1997, 1989, 266, 268, 4693, 4695, 267,
	3921, 1403, 4345, 3810, 4714, 1871, 4686, 4158, 5432, 4443,
	4055, 27, 4147, 896, 4691, 897, 898, 4745, 3222, 2364,
	1540, 4729, 4156, 1201, 4743, 4394, 1201, 1201, 26, 1690,
	1690, 4839, 4149, 3186, 1282, 1282, 25, 24, 4739, 23,
	1399, 128, 4828, 48, 4830, 29, 28, 5, 22, 170,
	168, 145, 165, 164, 137, 163, 162, 161, 3806, 160,
	159, 4789, 1494, 167, 158, 157, 4790, 152, 1401, 1401,
	4831, 4889, 156, 155, 1403, 1572, 1403, 4805, 154, 4811,
	1690, 4812, 153, 151, 2843, 4814, 149, 4907, 150, 144,
	4808, 148, 147, 1400, 146, 143, 142, 4865, 141, 140,
	4856, 1400, 139, 138, 1222, 1690, 1690, 1690, 1690, 1690,
	1690, 1690, 136, 169, 2084, 1400, 135, 134, 2084, 215,
	4162, 4160, 133, 4818, 4893, 132, 4896, 131, 4852, 1572,
	4908, 4771, 4855, 4771, 130, 4840, 129, 875, 876, 4890,
	4151, 1282, 1282, 1282, 4822, 4157, 4152, 4153, 4154, 4155,
	67, 66, 4851, 4850, 125, 126, 4150, 21, 46, 1572,
	16, 4860, 4866, 4882, 1282, 71, 72, 1282, 1282, 4870,
	4877, 20, 4878, 3183, 15, 4884, 4911, 1282, 41, 103,
	2251, 117, 116, 115, 42, 1282, 1282, 4161, 1400, 4892,
	1400, 112, 1389, 4794, 40, 19, 18, 17, 110, 4880,
	109, 108, 1572, 4909, 1690, 39, 4803, 37, 2181, 4806,
	4857, 4930, 4922, 13, 4891, 4159, 11, 43, 2186, 14,
	4939, 4921, 7, 207, 4916, 204, 4945, 203, 1399, 1494,
	206, 202, 205, 102, 201, 104, 1399, 200, 4915, 101,
	35, 12, 4902, 195, 5110, 4553, 4940, 93, 198, 197,
	1399, 196, 1572, 194, 4933, 193, 192, 124, 189, 94,
	1282, 91, 191, 97, 96, 4976, 190, 4977, 92, 95,
	33, 8, 70, 1282, 9, 4934, 2245, 2245, 4171, 120,
	121, 44, 1282, 4962, 89, 88, 4924, 2251, 4950, 87,
	4928, 4956, 5004, 86, 32, 69, 31, 1282, 263, 261,
	1282, 262, 4973, 4974, 260, 259, 185, 239, 238, 237,
	236, 4992, 235, 234, 233, 232, 227, 231, 1282, 229,
	228, 1282, 230, 1399, 226, 1399, 255, 254, 1572, 253,
	252, 251, 250, 249, 1690, 1282, 248, 1690, 1690, 5030,
	242, 241, 247, 246, 245, 1420, 1494, 244, 243, 240,
	258, 82, 225, 224, 223, 5076, 809, 5053, 5003, 5000,
	5054, 221, 217, 220, 4162, 2392, 5009, 222, 219, 218,
	809, 216, 257, 5049, 256, 188, 308, 1405, 83, 183,
	5001, 184, 5002, 1450, 81, 4996, 182, 181, 180, 4157,
	4152, 4153, 4154, 4155, 308, 179, 308, 308, 178, 1478,
	308, 1488, 177, 176, 5066, 1572, 5047, 80, 1690, 5085,
	187, 5093, 1502, 5097, 186, 5130, 5051, 30, 2, 1240,
	882, 5101, 5109, 882, 1, 1401, 5104, 0, 5055, 0,
	5052, 4161, 0, 0, 5063, 0, 0, 2248, 2248, 0,
	0, 0, 4070, 0, 1282, 1282, 889, 0, 0, 0,
	5116, 0, 2234, 0, 0, 1570, 0, 0, 5131, 5088,
	5135, 1282, 2251, 5089, 5087, 5041, 5042, 0, 5095, 0,
	0, 5077, 0, 0, 0, 308, 0, 308, 308, 1478,
	5115, 308, 308, 5108, 0, 2597, 308, 1494, 1494, 5133,
	1488, 1494, 1494, 0, 1494, 1494, 0, 0, 0, 0,
	0, 0, 5113, 5062, 308, 5064, 1721, 5065, 0, 5138,
	4911, 5132, 1282, 5137, 1282, 0, 1282, 5072, 5073, 5139,
	0, 5141, 1741, 0, 2239, 2239, 1405, 0, 5152, 5153,
	0, 1750, 5144, 0, 0, 5056, 0, 5188, 1403, 1282,
	0, 1405, 0, 0, 0, 5186, 0, 0, 1774, 0,
	1488, 0, 0, 0, 0, 308, 308, 0, 1478, 5039,
	0, 2245, 0, 124, 0, 5161, 124, 0, 124, 5173,
	5174, 0, 5127, 5176, 5177, 0, 5178, 5179, 0, 0,
	882, 0, 308, 308, 0, 5216, 0, 0, 0, 5155,
	0, 2251, 3598, 5185, 1839, 4771, 5184, 0, 0, 0,
	5075, 0, 5151, 1405, 1405, 1847, 0, 0, 0, 0,
	1034, 5208, 5215, 1401, 2531, 0, 5209, 0, 5181, 0,
	124, 1401, 0, 124, 1405, 5239, 0, 1405, 0, 124,
	5237, 1690, 0, 0, 5263, 1401, 0, 0, 0, 0,
	0, 1690, 0, 5224, 0, 0, 0, 5252, 5253, 0,
	0, 5226, 1400, 0, 0, 0, 0, 1282, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 5269, 0,
	5234, 5271, 0, 0, 0, 3020, 3020, 0, 5236, 2245,
	5250, 5276, 5232, 0, 0, 0, 0, 1403, 5261, 0,
	0, 308, 0, 0, 5285, 0, 5286, 0, 5268, 0,
	0, 0, 1403, 0, 0, 0, 124, 5277, 1401, 5222,
	1401, 0, 5281, 0, 5282, 5284, 5280, 308, 0, 0,
	1282, 1282, 2248, 0, 1282, 0, 5294, 5113, 1690, 1494,
	5302, 5303, 1494, 5298, 2234, 0, 0, 0, 5324, 0,
	0, 5293, 0, 5225, 4771, 0, 5306, 0, 0, 5332,
	5335, 0, 0, 0, 0, 0, 0, 0, 0, 4771,
	0, 0, 0, 0, 1403, 1403, 5360, 0, 5265, 5279,
	5304, 5267, 5356, 5314, 5315, 0, 5323, 5322, 0, 0,
	0, 0, 0, 0, 5379, 1403, 0, 1399, 1403, 0,
	0, 1282, 1282, 1282, 5337, 0, 0, 5359, 5381, 5341,
	0, 1400, 0, 0, 5336, 0, 0, 0, 5340, 2239,
	0, 5343, 0, 0, 5344, 0, 1400, 0, 0, 0,
	0, 4771, 4771, 5365, 5372, 0, 0, 0, 0, 1282,
	0, 5413, 5369, 0, 0, 0, 0, 5380, 0, 0,
	2248, 0, 4771, 0, 5418, 4771, 0, 0, 0, 2843,
	5396, 0, 5395, 1690, 5393, 5394, 0, 3020, 3020, 3020,
	3020, 0, 0, 0, 0, 0, 0, 2392, 5414, 2429,
	2084, 0, 0, 0, 2434, 0, 5448, 0, 1400, 1400,
	5415, 0, 0, 5447, 5416, 5461, 5455, 0, 0, 0,
	1282, 0, 5449, 0, 0, 0, 5457, 0, 1494, 1400,
	5429, 5439, 1400, 5442, 0, 0, 5431, 0, 5342, 0,
	5470, 5366, 5454, 5093, 5453, 5367, 0, 0, 0, 0,
	792, 0, 0, 5463, 0, 0, 5480, 2239, 0, 5462,
	0, 0, 0, 5488, 5476, 5477, 1399, 2201, 5479, 1282,
	2403, 308, 5484, 308, 5482, 5491, 0, 308, 0, 2436,
	0, 1399, 5332, 5490, 5494, 5335, 0, 1405, 0, 1405,
	1721, 1478, 1488, 308, 5492, 308, 2211, 0, 5499, 0,
	0, 5506, 5503, 308, 0, 809, 5507, 5505, 5513, 5504,
	5478, 0, 308, 0, 5467, 0, 0, 5515, 0, 5512,
	0, 5511, 5521, 0, 0, 0, 2430, 0, 1494, 0,
	0, 5514, 0, 5516, 2299, 5359, 0, 0, 5520, 0,
	0, 0, 5537, 1399, 1399, 5536, 308, 0, 5428, 0,
	0, 5430, 0, 308, 0, 0, 0, 5545, 0, 0,
	1282, 1282, 5543, 0, 1399, 5556, 5544, 1399, 0, 1282,
	1282, 0, 5550, 5548, 0, 5554, 5547, 0, 0, 5564,
	5559, 0, 0, 0, 5579, 199, 882, 0, 6, 5568,
	5588, 5573, 5587, 5574, 5581, 0, 5589, 10, 0, 2363,
	5582, 5575, 0, 1389, 5583, 5580, 5590, 5595, 5572, 0,
	5540, 0, 0, 3494, 0, 5600, 0, 5593, 1494, 304,
	0, 0, 5603, 5606, 889, 5596, 889, 5602, 0, 5609,
	5598, 5610, 0, 0, 5599, 0, 889, 889, 0, 5604,
	1389, 5613, 0, 5601, 3494, 1282, 0, 0, 1403, 5619,
	1403, 5621, 5606, 5565, 5566, 5622, 0, 0, 5612, 5611,
	0, 0, 5616, 0, 0, 5618, 0, 0, 5615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 2009, 0, 0, 0, 0, 2052, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 4771, 2039, 4771, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 2008, 2009, 0, 5617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 5567, 0, 0,
	2039, 0, 2010, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 1400, 2030, 1400, 2426, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 2441, 0, 0, 0,
	0, 0, 2536, 0, 0, 0, 0, 2064, 0, 0,
	308, 0, 0, 2443, 308, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 124, 0, 124, 0, 0, 2437, 0, 0,
	0, 0, 2440, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1401, 308, 0, 2033, 2034, 2035, 2036, 0, 0,
	0, 0, 0, 308, 2016, 0, 1401, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 2433, 0, 0,
	0, 0, 124, 124, 0, 124, 308, 1700, 308, 3638,
	3639, 0, 792, 0, 308, 0, 0, 1399, 0, 1399,
	0, 0, 0, 0, 0, 0, 882, 2049, 2016, 0,
	1034, 2059, 0, 0, 0, 2442, 0, 0, 2038, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 1401, 1401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 308, 2245, 0, 0, 2025, 2026, 1401,
	0, 0, 1401, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 2038, 2040, 0, 308, 0, 2047, 0, 2008,
	2009, 0, 0, 2660, 2245, 2245, 0, 0, 308, 308,
	0, 308, 2031, 308, 0, 308, 0, 308, 0, 0,
	3020, 3020, 0, 2039, 3712, 3713, 0, 3730, 3731, 3732,
	0, 2011, 0, 0, 0, 0, 2439, 0, 0, 0,
	0, 2438, 2697, 0, 0, 2698, 0, 2699, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	2064, 0, 308, 308, 308, 308, 308, 0, 1389, 2010,
	0, 1222, 2245, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 124, 124, 0, 0, 2027,
	0, 0, 862, 2061, 0, 0, 882, 0, 0, 0,
	2782, 3736, 3737, 3738, 3739, 3727, 0, 1683, 0, 0,
	3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
	3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
	0, 3020, 0, 0, 0, 2248, 0, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4216, 0,
	0, 2484, 1746, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2248, 2248, 0, 0, 0,
	0, 2033, 2034, 2035, 2036, 0, 0, 0, 0, 2032,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2858, 2494, 2924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 3718, 0, 0, 0,
	0, 2050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 2239, 2032, 0, 0, 0, 2008, 2009, 0,
	0, 0, 0, 2248, 0, 2038, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 2063, 0, 2091,
	0, 2039, 2239, 2239, 0, 0, 0, 0, 0, 2011,
	0, 2490, 0, 792, 2025, 2026, 0, 0, 0, 0,
	0, 0, 2245, 0, 0, 0, 0, 0, 308, 0,
	3734, 1872, 0, 0, 0, 0, 0, 792, 2064, 0,
	3117, 2063, 0, 0, 308, 0, 792, 2010, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 1401, 0, 1401, 0, 0, 0, 0, 0,
	2239, 0, 0, 2487, 3728, 0, 0, 2048, 308, 1488,
	0, 0, 0, 0, 0, 308, 0, 308, 1721, 124,
	0, 0, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012,
	2013, 2014, 2015, 2017, 2018, 0, 0, 1389, 1389, 0,
	2868, 2869, 2870, 2887, 2888, 2889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2492, 0, 0,
	2061, 2890, 0, 0, 0, 0, 308, 1488, 0, 308,
	809, 0, 809, 2012, 2013, 2014, 2015, 2017, 2018, 308,
	0, 0, 308, 0, 0, 2061, 3187, 0, 0, 2016,
	0, 0, 308, 308, 0, 0, 0, 308, 2064, 308,
	0, 0, 0, 0, 1478, 0, 308, 308, 0, 1488,
	1488, 3203, 0, 2248, 0, 0, 308, 0, 2880, 0,
	2037, 0, 0, 2493, 0, 0, 0, 2876, 0, 0,
	0, 0, 3221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 2040, 2245, 2032, 3712, 3713, 0,
	3730, 3731, 3732, 0, 0, 1442, 0, 0, 2497, 0,
	889, 889, 0, 0, 889, 889, 0, 0, 0, 0,
	4642, 3729, 0, 3246, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 2245, 2245, 0, 0, 0, 0, 0, 0, 308,
	2239, 0, 0, 0, 0, 0, 0, 2031, 0, 2881,
	2882, 2883, 2884, 308, 2063, 0, 0, 0, 0, 2875,
	2245, 2245, 0, 0, 882, 0, 3355, 0, 3727, 882,
	0, 2485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 2245, 0, 0, 0, 1665, 0, 2491,
	1679, 1483, 0, 0, 0, 1442, 0, 0, 3356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3369, 2061, 0,
	2488, 0, 2285, 3375, 1721, 310, 0, 2486, 0, 0,
	0, 0, 2885, 2886, 0, 2496, 2248, 0, 0, 0,
	2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015,
	2017, 2018, 0, 0, 0, 308, 3431, 0, 84, 3718,
	0, 3724, 3725, 3726, 1483, 1483, 0, 2878, 3723, 3721,
	3722, 3714, 3715, 3716, 3717, 3719, 3720, 85, 0, 0,
	0, 0, 2248, 2248, 1237, 1721, 0, 0, 308, 2245,
	2245, 3375, 2245, 0, 0, 90, 0, 0, 124, 308,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 2489,
	3477, 2248, 2248, 0, 4213, 4214, 0, 0, 0, 0,
	3246, 0, 792, 2239, 1389, 0, 0, 0, 0, 0,
	0, 1034, 3246, 3734, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 2248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 2239,
	2239, 0, 2063, 0, 308, 1478, 308, 3728, 0, 0,
	1028, 0, 0, 0, 0, 0, 3550, 308, 0, 0,
	1478, 0, 1478, 55, 1478, 122, 0, 0, 2239, 2239,
	0, 106, 119, 0, 4277, 4278, 4279, 4280, 4281, 4282,
	4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292,
	4293, 4294, 4295, 4296, 0, 4300, 0, 0, 0, 0,
	0, 2239, 0, 0, 2879, 0, 0, 0, 0, 0,
	1244, 0, 308, 308, 308, 308, 1478, 0, 0, 1478,
	2248, 2248, 308, 2248, 0, 0, 5351, 308, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	0, 0, 0, 2484, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 124, 0, 2245, 0,
	0, 0, 1389, 0, 0, 0, 0, 0, 0, 0,
	1389, 0, 0, 0, 2494, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 2239, 2239, 0,
	2239, 0, 0, 0, 3729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2490, 2865, 2866, 2867, 2891, 2877, 2871,
	0, 2873, 2874, 2872, 2859, 2860, 2861, 2862, 2863, 2864,
	0, 2608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 111, 0, 2621,
	2623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2487, 2245, 0, 2639, 2640,
	2641, 0, 0, 2850, 0, 4765, 0, 124, 0, 2248,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 2086,
	0, 0, 3020, 0, 0, 0, 208, 0, 114, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	5352, 0, 0, 4758, 3724, 3725, 3726, 4751, 0, 2492,
	0, 3723, 3721, 3722, 3714, 3715, 3716, 3717, 3719, 3720,
	0, 0, 0, 270, 0, 4749, 0, 0, 0, 0,
	0, 1029, 1679, 0, 1700, 4753, 0, 166, 0, 0,
	0, 1700, 0, 124, 0, 0, 0, 0, 0, 3767,
	0, 0, 0, 0, 0, 0, 2239, 0, 124, 0,
	4759, 0, 0, 0, 0, 3020, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 2493, 0, 272, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3796, 0, 171, 308, 4752, 0, 0,
	2497, 792, 0, 0, 0, 0, 792, 2248, 3809, 792,
	0, 214, 792, 792, 0, 0, 0, 0, 792, 271,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 0, 0, 2484, 0, 0, 264, 308, 0,
	3835, 0, 0, 0, 0, 0, 265, 0, 308, 0,
	209, 1721, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2485, 0, 2494, 212, 0, 809, 84,
	0, 0, 0, 0, 2495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2239, 0, 0, 0, 85, 0,
	0, 2491, 0, 308, 0, 0, 0, 308, 308, 0,
	3356, 0, 0, 0, 0, 0, 90, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2488, 0, 0, 0, 0, 0, 0, 2486,
	0, 3246, 3246, 308, 2490, 3887, 3890, 2496, 0, 0,
	0, 0, 3246, 0, 2211, 0, 3020, 0, 99, 0,
	2245, 0, 0, 3246, 2211, 0, 3246, 2211, 0, 0,
	2211, 0, 0, 3887, 4754, 0, 0, 0, 0, 5353,
	0, 4755, 0, 0, 0, 308, 308, 3890, 0, 308,
	0, 0, 4760, 0, 0, 0, 0, 0, 0, 0,
	0, 1028, 2552, 0, 0, 0, 2487, 0, 3890, 3020,
	308, 0, 3963, 0, 3963, 0, 122, 0, 175, 0,
	0, 2489, 106, 119, 1478, 5354, 0, 84, 0, 52,
	51, 0, 2577, 0, 3020, 4757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 3246, 0, 3246,
	78, 3998, 3246, 3890, 4761, 0, 3246, 0, 0, 0,
	2492, 0, 0, 0, 90, 0, 0, 0, 4016, 3890,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 54, 0, 173, 0, 0, 0, 107, 0,
	3890, 0, 0, 882, 0, 1244, 1244, 1244, 0, 0,
	0, 0, 2843, 53, 0, 0, 99, 2245, 0, 0,
	2483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2248, 3809, 0, 0, 1478, 2493, 0, 0, 0,
	0, 0, 308, 0, 56, 74, 0, 0, 0, 0,
	0, 1656, 0, 0, 57, 0, 0, 0, 0, 63,
	308, 0, 0, 4061, 79, 0, 4066, 3246, 0, 2480,
	308, 2497, 55, 0, 122, 0, 0, 0, 1488, 0,
	106, 119, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 3477,
	0, 0, 1478, 0, 308, 0, 0, 3246, 0, 792,
	0, 4756, 0, 0, 2708, 2709, 3246, 0, 2239, 0,
	0, 0, 0, 0, 2245, 58, 0, 0, 0, 0,
	0, 2478, 0, 0, 0, 0, 0, 3144, 0, 0,
	0, 0, 0, 0, 2485, 0, 107, 0, 0, 0,
	0, 0, 0, 124, 0, 2495, 4766, 4767, 111, 3350,
	0, 0, 0, 0, 0, 4179, 0, 0, 0, 0,
	0, 0, 2491, 0, 4190, 0, 0, 1570, 2248, 0,
	0, 2479, 0, 0, 0, 0, 0, 0, 4186, 0,
	0, 0, 1721, 0, 0, 0, 1478, 308, 0, 308,
	0, 0, 0, 2488, 0, 1478, 0, 0, 1478, 0,
	2486, 0, 124, 0, 0, 124, 0, 208, 2496, 114,
	0, 0, 118, 0, 0, 2008, 2009, 0, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 2039,
	0, 0, 0, 0, 270, 0, 4234, 2011, 0, 0,
	0, 0, 1029, 0, 0, 2239, 4959, 0, 166, 0,
	0, 0, 0, 4250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2248, 2064, 0, 0, 0,
	0, 0, 2489, 0, 0, 2010, 4255, 0, 0, 2245,
	0, 0, 0, 0, 0, 0, 111, 0, 272, 0,
	3520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3527, 0, 0, 59, 0, 0, 0, 0, 1700,
	1700, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 62, 0, 0, 0, 0, 65, 0, 0, 5012,
	0, 0, 214, 0, 0, 124, 77, 0, 0, 124,
	271, 0, 0, 0, 64, 208, 0, 114, 0, 0,
	118, 0, 2239, 0, 0, 0, 60, 1483, 264, 0,
	174, 0, 0, 0, 0, 0, 0, 265, 61, 0,
	0, 209, 0, 308, 308, 0, 213, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 2016, 4343, 0,
	68, 0, 0, 0, 2044, 0, 166, 212, 792, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 2245, 0,
	0, 0, 0, 172, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1442, 0,
	0, 1442, 0, 0, 0, 0, 272, 0, 0, 0,
	2248, 2038, 2040, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 1483, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 2008, 2009, 271, 0,
	0, 1700, 1700, 1700, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 264, 0, 0, 0,
	2039, 0, 0, 1656, 0, 265, 0, 0, 2011, 209,
	0, 0, 0, 0, 213, 0, 0, 2239, 0, 0,
	5160, 0, 0, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 0, 212, 0, 2064, 3, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	0, 0, 1665, 0, 0, 4457, 0, 2030, 4459, 2248,
	0, 4461, 0, 0, 0, 0, 2027, 0, 0, 3963,
	0, 0, 0, 5192, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 5214, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 3375, 0, 0, 0,
	0, 0, 0, 0, 0, 4211, 0, 1244, 0, 0,
	0, 3890, 0, 308, 0, 1656, 0, 809, 809, 1488,
	0, 0, 0, 0, 0, 0, 2239, 0, 2033, 2034,
	2035, 2036, 2044, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 2032, 0, 0, 0, 0, 308, 3477, 0,
	0, 3477, 2211, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 4558, 0, 3375, 0, 0, 308,
	0, 0, 0, 308, 0, 308, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2040, 0, 0, 0, 0, 0, 3246,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 1034, 3246, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 3890, 0,
	0, 3203, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 84, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	90, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0,
	0, 0, 0, 0, 0, 4660, 0, 0, 0, 0,
	0, 2044, 1679, 0, 1679, 0, 0, 2061, 0, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4697, 0, 0, 1028, 0, 0, 308, 0,
	0, 0, 0, 0, 1721, 0, 308, 2037, 55, 0,
	122, 0, 0, 0, 0, 0, 106, 119, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4724, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1488, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1488,
	1488, 0, 308, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 3246, 3246,
	2044, 3887, 107, 0, 3963, 3246, 0, 0, 0, 0,
	0, 0, 0, 4773, 2044, 4773, 1721, 0, 0, 2044,
	0, 2063, 0, 0, 0, 0, 0, 3246, 0, 2211,
	0, 0, 0, 3887, 0, 1721, 1721, 308, 3890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3890, 0, 308, 3890, 0, 308, 0, 0, 3963,
	0, 3963, 0, 0, 0, 3963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3246, 2044, 3246, 308, 0, 0,
	0, 2044, 0, 0, 1700, 1700, 0, 0, 0, 3375,
	0, 0, 4842, 0, 0, 4059, 4060, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 1656, 2028, 2024, 0,
	2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3246,
	3246, 0, 0, 0, 0, 3477, 3477, 0, 0, 0,
	0, 0, 3887, 0, 0, 0, 2164, 0, 0, 0,
	0, 0, 111, 0, 0, 308, 0, 0, 4139, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	4164, 0, 0, 0, 1700, 1700, 1700, 1700, 1700, 1700,
	1700, 1700, 1700, 1700, 1700, 1700, 1700, 1700, 1700, 1700,
	1700, 1700, 1700, 1700, 0, 1700, 0, 0, 1570, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 114, 0, 0, 118, 0, 0, 0,
	2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 4951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 2008, 2009, 0, 0, 270, 0,
	0, 0, 0, 2044, 0, 0, 1029, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 2039, 0,
	1656, 4951, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 3024,
	0, 0, 272, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 2044, 2010, 0, 0, 0, 0, 2044,
	0, 2782, 0, 0, 0, 2030, 1679, 1679, 0, 0,
	171, 0, 0, 0, 2027, 0, 0, 3246, 2211, 0,
	2211, 0, 0, 4558, 0, 0, 214, 0, 0, 0,
	0, 0, 308, 0, 271, 0, 0, 0, 0, 0,
	0, 1229, 5028, 0, 5028, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 209, 0, 0, 0, 882,
	213, 0, 0, 4210, 0, 0, 0, 2782, 0, 0,
	3963, 1721, 0, 0, 1721, 1679, 1478, 0, 0, 0,
	0, 1824, 0, 0, 0, 0, 2033, 2034, 2035, 2036,
	0, 0, 0, 1395, 0, 0, 2016, 0, 0, 2577,
	0, 0, 0, 0, 0, 3890, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2995, 2996,
	2997, 2998, 2991, 2992, 2993, 2994, 0, 0, 1656, 0,
	0, 0, 0, 0, 4558, 0, 0, 4773, 0, 0,
	1721, 0, 0, 0, 3246, 303, 303, 788, 308, 0,
	2038, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 2025,
	2026, 0, 0, 0, 3712, 3713, 0, 3730, 3731, 3732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 308, 0, 0, 0, 4641, 2971, 2972,
	2973, 2974, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4255, 0, 1656, 0,
	0, 0, 2983, 2984, 2985, 2986, 2979, 2980, 2981, 2982,
	2987, 2988, 2989, 2990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3963, 5183,
	0, 0, 0, 0, 0, 3727, 4558, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4773, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 4773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2967, 2968, 2969, 2970,
	2975, 2976, 2977, 2978, 0, 0, 0, 0, 308, 0,
	0, 0, 4489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 809, 0, 0,
	0, 4505, 4506, 0, 0, 2037, 0, 0, 0, 0,
	0, 4508, 0, 4773, 4773, 0, 3718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 2032, 0, 0, 4773, 0, 308, 4773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3734, 1488, 0, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 5312, 0, 0, 0, 0,
	0, 0, 0, 4594, 0, 0, 0, 0, 2621, 4600,
	4601, 5028, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3246,
	3712, 3713, 0, 3730, 3731, 3732, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 1244, 0, 2028, 2024, 0, 2021, 2019,
	2020, 2012, 2013, 2014, 2015, 2017, 2018, 4255, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 3727, 1721, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
	2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
	2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
	2044, 2044, 2044, 2044, 2044, 0, 0, 0, 0, 0,
	2044, 3729, 2044, 2044, 2044, 2044, 0, 0, 0, 4558,
	0, 0, 0, 0, 3024, 3024, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 4704, 4705, 0, 0, 2044,
	0, 0, 3718, 0, 0, 0, 0, 0, 0, 3712,
	3713, 0, 3730, 3731, 3732, 0, 1229, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 3246, 0, 0,
	0, 0, 4221, 0, 0, 0, 0, 4773, 0, 4773,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 3734, 0, 0, 0,
	2044, 0, 0, 2044, 0, 0, 2044, 0, 0, 2044,
	3727, 0, 0, 0, 0, 2044, 2044, 2044, 2044, 2044,
	2044, 2044, 1723, 0, 1729, 3246, 1735, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	3728, 0, 3375, 0, 0, 0, 1700, 0, 0, 0,
	0, 3724, 3725, 3726, 0, 1656, 3246, 0, 3723, 3721,
	3722, 3714, 3715, 3716, 3717, 3719, 3720, 0, 0, 0,
	3375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 3733, 0, 3024, 3024, 3024, 3024,
	0, 0, 2044, 2621, 2044, 0, 1830, 0, 1835, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1656,
	0, 3718, 1849, 0, 1854, 0, 0, 84, 0, 0,
	0, 2061, 0, 0, 1656, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 85, 0, 2577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4923,
	0, 4925, 4926, 4927, 0, 4929, 0, 1464, 0, 1464,
	1464, 0, 0, 1920, 0, 3734, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3729, 0, 0,
	0, 0, 0, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 2008, 2009, 3728,
	2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 2039, 55, 0, 122, 0, 0, 0, 1567, 2011,
	106, 119, 0, 0, 1677, 0, 0, 0, 4979, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	2061, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 2085, 0, 0, 0, 107, 0, 2098, 0,
	1700, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 1829, 3724, 3725, 3726,
	0, 0, 0, 0, 3723, 3721, 3722, 3714, 3715, 3716,
	3717, 3719, 3720, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3729, 0, 5068, 2033,
	2034, 2035, 2036, 0, 0, 0, 0, 0, 1700, 2016,
	0, 923, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2158, 2158, 2158, 934, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 2059, 0, 932, 0,
	0, 0, 0, 2038, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 936, 2055, 0, 2056, 111, 0, 0, 0,
	0, 0, 2025, 2026, 0, 2577, 0, 0, 0, 2044,
	2044, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 928, 0, 0, 0,
	0, 0, 0, 944, 0, 208, 0, 114, 0, 0,
	118, 0, 0, 0, 0, 0, 3724, 3725, 3726, 933,
	0, 0, 0, 3723, 3721, 3722, 3714, 3715, 3716, 3717,
	3719, 3720, 0, 0, 0, 0, 2057, 0, 0, 0,
	1656, 0, 270, 1656, 0, 2008, 2009, 1278, 1229, 0,
	1029, 0, 0, 0, 0, 0, 166, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2039,
	0, 0, 0, 935, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 272, 0, 0, 307,
	307, 307, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 930, 0,
	0, 0, 1656, 0, 171, 0, 2030, 0, 2037, 0,
	0, 0, 0, 957, 0, 2027, 0, 0, 0, 1656,
	214, 0, 0, 0, 0, 0, 2044, 2044, 271, 3024,
	3024, 0, 0, 2044, 2032, 0, 0, 0, 0, 0,
	0, 0, 957, 3733, 3733, 2621, 264, 2044, 2044, 0,
	0, 0, 0, 0, 0, 265, 0, 2044, 0, 209,
	0, 0, 943, 0, 213, 0, 2050, 0, 0, 3401,
	2196, 2044, 0, 0, 3627, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 1822, 2206, 0, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 2034, 2035,
	2036, 0, 2063, 3391, 3389, 0, 0, 2016, 0, 0,
	0, 3393, 3395, 3385, 0, 0, 0, 0, 0, 3024,
	3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024,
	3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 1464,
	3024, 3733, 3733, 3733, 3733, 925, 1677, 0, 0, 0,
	0, 0, 0, 0, 1656, 0, 3411, 0, 0, 0,
	0, 2038, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 929, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 0, 2022, 2023, 2029, 2051, 2028, 2024,
	1402, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	0, 0, 0, 0, 0, 4668, 0, 0, 0, 4667,
	856, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 937, 0, 2061, 0, 0, 3387,
	0, 0, 0, 0, 0, 0, 2684, 0, 0, 0,
	3403, 0, 1679, 0, 0, 2044, 0, 0, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 3402, 3392, 3390, 3394, 3396, 3386,
	3388, 3404, 3406, 0, 926, 2714, 0, 0, 0, 0,
	0, 0, 3398, 3400, 3408, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 942, 0, 938, 2044, 2044, 0, 0,
	0, 2755, 2032, 2759, 0, 0, 0, 0, 0, 3412,
	2773, 0, 0, 1229, 0, 0, 0, 0, 0, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2561, 2825, 1483, 2827, 2828,
	2829, 2830, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 2584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2854, 0, 0, 0, 0, 2596,
	0, 2596, 0, 0, 0, 0, 2085, 2603, 0, 0,
	2905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2935, 2938, 2941, 2944,
	0, 0, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 0,
	0, 0, 1656, 0, 0, 3405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2631, 0, 0, 0,
	3016, 0, 3027, 3029, 3034, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 2028, 2024, 2652, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0,
	0, 0, 2668, 0, 2670, 0, 2672, 0, 2674, 0,
	2675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3413,
	0, 0, 0, 0, 0, 0, 0, 0, 3397, 3399,
	0, 0, 3407, 2044, 2044, 0, 0, 2044, 3733, 3733,
	2044, 0, 0, 0, 2044, 2704, 2705, 2706, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 2044, 2044,
	2044, 2044, 0, 0, 0, 1656, 1656, 2044, 1656, 2044,
	0, 0, 3733, 3733, 3733, 3733, 3733, 3733, 3733, 3733,
	3733, 3733, 3733, 3733, 3733, 3733, 3733, 3733, 3733, 3733,
	3733, 3733, 0, 0, 0, 3733, 0, 0, 2044, 2044,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 307, 307, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 307, 0, 307, 307, 0, 0, 307, 307,
	0, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 3114, 0, 0, 0, 2044, 2044, 0, 0, 0,
	0, 957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 307, 0, 0, 3434, 3435, 0, 3437,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	307, 0, 0, 2045, 2039, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 1656, 3189, 1464, 0, 0, 0,
	1464, 0, 1464, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 2584,
	0, 2064, 0, 0, 1656, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 2044, 0, 0, 1656, 2044, 2044,
	0, 0, 2044, 2044, 0, 0, 842, 2044, 0, 0,
	0, 2044, 0, 0, 0, 0, 2044, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 826, 0, 0,
	0, 3024, 827, 3561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 1656, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 2033, 2034, 2035, 2036, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 829, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 2065,
	2066, 0, 0, 0, 3024, 2049, 0, 0, 0, 2059,
	0, 0, 0, 1656, 1229, 0, 2038, 2040, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 2056, 0,
	0, 0, 0, 0, 831, 2025, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3621, 3622, 0,
	0, 0, 0, 3628, 2044, 2047, 0, 0, 0, 832,
	824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 3453, 3642, 3643, 0, 0, 0, 0, 2905, 0,
	1656, 0, 2584, 833, 0, 0, 0, 0, 825, 0,
	0, 0, 0, 0, 0, 0, 2044, 2044, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 3652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 0, 0, 3525, 0, 3666,
	2046, 0, 0, 0, 0, 0, 0, 0, 2180, 0,
	1402, 2061, 0, 0, 307, 0, 3678, 3537, 0, 3540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 2180, 307, 0, 0, 0, 0, 0, 0, 0,
	957, 2044, 2044, 2044, 0, 0, 0, 0, 0, 957,
	0, 0, 2044, 2044, 3733, 3024, 0, 844, 0, 0,
	0, 2044, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 3579, 1677, 3581, 1677, 0,
	307, 0, 0, 0, 0, 3588, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3733, 3024, 0,
	0, 0, 0, 0, 0, 0, 0, 3034, 3034, 3034,
	0, 0, 0, 0, 2044, 0, 2008, 2009, 0, 2050,
	0, 1464, 2044, 3024, 2158, 0, 835, 0, 0, 3617,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 0, 2044, 0, 2044, 0, 0, 0, 2011, 0,
	0, 0, 0, 3771, 2044, 2063, 0, 855, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 856, 2027, 0, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 852, 853,
	0, 850, 0, 0, 0, 0, 0, 0, 0, 0,
	845, 0, 0, 838, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3733, 1244, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 0, 0, 3620, 0, 0, 3687, 0,
	0, 0, 3688, 0, 0, 0, 2044, 3733, 0, 0,
	2044, 839, 0, 846, 0, 1229, 0, 0, 2033, 2034,
	2035, 2036, 840, 0, 0, 0, 0, 1229, 2016, 3733,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 0,
	0, 0, 0, 849, 0, 0, 0, 307, 0, 0,
	0, 957, 0, 0, 0, 0, 0, 0, 858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3920, 843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2040, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 2025, 2026, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 3981, 3982, 2008, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 307, 2031, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 1406, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	307, 0, 0, 2010, 0, 0, 0, 2044, 0, 0,
	0, 3819, 0, 0, 2030, 0, 0, 0, 0, 1406,
	0, 0, 307, 2027, 0, 0, 0, 2061, 0, 0,
	0, 0, 2044, 0, 0, 957, 307, 0, 307, 0,
	307, 0, 307, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 1464, 85, 0, 0,
	1677, 1677, 0, 0, 0, 0, 0, 2037, 1406, 307,
	307, 307, 307, 307, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 2034, 2035, 2036, 0,
	0, 0, 0, 2032, 0, 2016, 3883, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3939, 3941,
	0, 0, 2584, 0, 0, 0, 0, 0, 0, 2038,
	2040, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	1028, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 2025, 2026,
	0, 106, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2773,
	0, 0, 0, 0, 0, 0, 4208, 4209, 0, 0,
	4212, 0, 0, 2031, 4215, 0, 0, 0, 0, 0,
	0, 0, 0, 4219, 0, 0, 0, 0, 0, 0,
	0, 0, 4226, 0, 0, 0, 0, 3771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 4239, 0, 0, 0, 0, 2028, 2024, 0,
	2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0,
	0, 0, 4262, 4263, 0, 4264, 4265, 4266, 0, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 0, 0,
	0, 0, 0, 4272, 2061, 0, 0, 4274, 0, 0,
	0, 1402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4088, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4303, 4304, 0, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 957, 0, 957, 0, 0, 0, 4315, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 4324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 111, 0, 307,
	0, 0, 1406, 0, 1406, 0, 0, 0, 0, 307,
	307, 0, 0, 0, 307, 0, 307, 0, 0, 1406,
	0, 0, 0, 307, 307, 0, 0, 0, 0, 0,
	4192, 0, 1677, 307, 0, 0, 0, 0, 2063, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 1406,
	0, 4393, 0, 0, 0, 0, 208, 0, 114, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	4206, 0, 0, 0, 0, 0, 0, 0, 0, 4411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 1029, 307, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 4442, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 2028, 2024, 0, 2021, 2019, 2020,
	2012, 2013, 2014, 2015, 2017, 2018, 0, 272, 0, 0,
	0, 1406, 0, 0, 0, 0, 4470, 4471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	209, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2158, 0, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2158, 0,
	0, 0, 0, 0, 0, 0, 0, 4591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 307, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4638, 4639, 1406,
	0, 0, 0, 4643, 4644, 0, 0, 0, 4647, 4648,
	0, 0, 0, 0, 0, 0, 4652, 0, 0, 0,
	0, 3051, 0, 0, 0, 0, 0, 4656, 2008, 2009,
	0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 307,
	307, 307, 307, 4661, 1406, 0, 1406, 0, 1406, 307,
	0, 2045, 2039, 0, 307, 0, 3049, 0, 0, 0,
	2011, 3053, 0, 0, 0, 0, 1406, 1406, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 3054, 0, 307, 0, 0, 0, 2064,
	0, 0, 1406, 307, 0, 1406, 1406, 1406, 2010, 0,
	0, 0, 0, 0, 0, 0, 2584, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 3055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4552, 0, 0, 3056, 0, 0, 0, 0, 0, 0,
	3057, 0, 0, 0, 0, 0, 2584, 0, 2584, 0,
	0, 0, 0, 4573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 3058, 0, 0, 0, 0, 0, 0,
	2033, 2034, 2035, 2036, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 842, 0,
	2252, 2252, 1406, 0, 0, 0, 0, 4618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 2049, 827, 3059, 0, 2059, 0, 0,
	4819, 0, 0, 0, 2038, 2040, 0, 0, 0, 0,
	0, 0, 0, 3060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3061, 2055, 0, 2056, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 0, 828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 829, 3062,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	4861, 4862, 0, 0, 0, 1406, 0, 0, 2031, 0,
	830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 831, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 1406, 0, 2046, 0,
	0, 832, 824, 1402, 0, 1406, 0, 0, 0, 2061,
	3063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 833, 0, 4946, 4947, 4948,
	825, 0, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 857, 0, 0,
	2773, 0, 0, 4957, 4958, 957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 4966, 4969, 0, 0, 847, 0, 0, 0, 0,
	0, 0, 3064, 3065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	4793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 3066, 0, 0, 307, 307, 2584, 0, 0, 0,
	0, 3071, 0, 0, 0, 0, 0, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 844,
	0, 0, 3067, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 3068, 0, 5029,
	0, 0, 0, 2063, 0, 0, 0, 0, 5037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5045, 1406, 0, 1229, 0, 0, 3069,
	0, 0, 307, 307, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 2180, 5057, 0, 0, 5059, 0, 0,
	0, 0, 0, 0, 0, 0, 854, 307, 835, 0,
	0, 5069, 0, 0, 0, 0, 0, 0, 2584, 0,
	0, 3070, 0, 2252, 0, 0, 0, 0, 0, 4903,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 855,
	0, 836, 0, 0, 0, 2022, 2023, 2029, 2051, 2028,
	2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017,
	2018, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 856, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 0,
	852, 853, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 845, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 0, 839, 0, 846, 0, 0, 0, 0,
	0, 0, 0, 0, 840, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 5191, 0,
	841, 1402, 5195, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	858, 0, 0, 0, 0, 5014, 0, 1406, 0, 0,
	0, 843, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 1406, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 2009,
	0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2039, 0, 307, 0, 307, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2584, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 0, 0, 307, 0, 0, 0, 2010, 0,
	0, 313, 0, 0, 2773, 0, 0, 0, 0, 2030,
	0, 2596, 0, 4969, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5150, 1677, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 2034, 2035, 2036, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5392, 5392, 5392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 1402, 0, 2049, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 2038, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5417, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 2056, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 5392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 5502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	309, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 1406, 0, 0, 0, 0, 0, 5326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 2037,
	0, 307, 0, 0, 0, 0, 5392, 5560, 0, 0,
	0, 0, 309, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 5374, 1406, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 2050, 2252, 0,
	0, 0, 1406, 0, 2008, 2009, 0, 2041, 2042, 2043,
	2052, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 2045, 2039, 2252,
	0, 0, 0, 2063, 307, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 2058, 0, 0,
	307, 0, 307, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 1402, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 2252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 2022, 2023, 2029, 2051, 2028,
	2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017,
	2018, 0, 0, 0, 0, 0, 2901, 0, 0, 0,
	2902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 2034, 2035, 2036,
	0, 0, 0, 0, 1406, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	2038, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 2056, 0, 0, 1402, 0, 0, 0, 2025,
	2026, 0, 0, 1402, 0, 0, 0, 0, 1406, 0,
	1406, 0, 0, 0, 1406, 0, 0, 2180, 0, 2047,
	0, 0, 1406, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 1406, 0, 0, 0, 0,
	2180, 0, 2180, 0, 0, 0, 0, 1406, 0, 1406,
	0, 0, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 1406,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 1573, 0, 0,
	0, 0, 0, 2050, 1691, 0, 0, 0, 1406, 0,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2252, 2252, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2252, 2252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 2252, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 2048,
	0, 0, 0, 0, 1406, 1406, 0, 0, 0, 0,
	0, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019,
	2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4666, 0, 0, 0,
	1406, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 309, 0, 309, 309, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2252, 0, 2252, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 1576, 309, 309, 0, 0, 309, 309,
	1576, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 309, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	1406, 1576, 0, 0, 0, 0, 0, 1406, 1576, 309,
	309, 0, 0, 0, 0, 0, 0, 0, 1406, 1406,
	0, 0, 0, 0, 1576, 0, 0, 0, 1406, 307,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 2180, 0, 0, 0, 982, 309, 1573,
	0, 1406, 983, 0, 0, 0, 0, 0, 2180, 0,
	1406, 0, 0, 0, 2221, 1406, 1406, 1406, 0, 0,
	0, 0, 0, 2221, 309, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 1406,
	0, 1406, 0, 0, 0, 984, 1406, 998, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2180, 2180, 0, 985, 0, 0, 0, 0, 986, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2252, 2180, 0, 307, 2180, 0, 0, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 0, 0, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 1573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 980,
	978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 1406,
	1009, 0, 0, 0, 0, 857, 0, 1406, 0, 0,
	0, 1406, 1406, 0, 1406, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	309, 309, 309, 0, 0, 0, 0, 1008, 0, 0,
	309, 0, 0, 0, 1406, 0, 1406, 1003, 0, 309,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 1691, 1691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 1406, 0, 309, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 0, 990,
	1406, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1691, 0, 1691, 0, 1691, 0,
	0, 0, 0, 0, 2180, 0, 2180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 1691, 0, 0,
	0, 0, 0, 0, 0, 856, 1406, 0, 0, 0,
	1691, 1406, 0, 0, 0, 0, 0, 0, 977, 0,
	0, 999, 1691, 0, 0, 1691, 1691, 1691, 0, 0,
	0, 0, 0, 991, 0, 0, 1406, 1406, 1406, 1406,
	1406, 1406, 1406, 0, 0, 0, 0, 0, 0, 2221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 0, 0, 0, 993, 1012, 0, 1011, 0,
	1406, 0, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 2252, 0, 1004, 0, 0, 0, 0, 0, 1013,
	0, 1010, 0, 0, 0, 0, 0, 309, 858, 1576,
	1576, 309, 0, 1406, 0, 1406, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 0, 0, 0, 1576, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2252, 0,
	0, 0, 0, 309, 0, 309, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 1576, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 0, 0, 1406,
	0, 0, 1576, 1576, 0, 1406, 0, 0, 1406, 1406,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 1576, 1576, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 309, 309, 0, 309, 0,
	309, 0, 309, 0, 309, 0, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	309, 309, 309, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 1406, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 1576, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 0, 0, 0, 0, 1406, 0, 1692, 1406, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 1692, 0, 0, 0, 2008, 2009, 0,
	2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0, 0,
	0, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	2045, 2039, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 1573, 309, 0, 0, 1576, 0,
	2058, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 0, 0, 1692, 0, 309, 0, 0, 2064, 0,
	0, 0, 309, 0, 309, 0, 0, 2010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 1406,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 309,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 309,
	309, 0, 0, 0, 309, 0, 309, 0, 0, 0,
	0, 0, 0, 309, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 2033,
	2034, 2035, 2036, 0, 0, 0, 0, 1691, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 1691, 0, 0, 0, 0, 0, 1691, 0, 0,
	1576, 0, 0, 0, 1406, 0, 0, 0, 1691, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 309, 2038, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 2055, 0, 2056, 0, 0, 0, 0,
	309, 0, 2025, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2031, 0, 309,
	1576, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	1406, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 2061, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 2009, 0,
	2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 2037, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	2045, 2039, 0, 0, 0, 1576, 0, 1576, 0, 2011,
	0, 0, 0, 1576, 2032, 0, 0, 0, 0, 0,
	2058, 309, 0, 0, 1576, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 2064, 0,
	0, 309, 0, 309, 0, 0, 2050, 2010, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	309, 309, 309, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	2034, 2035, 2036, 0, 0, 309, 0, 0, 0, 2016,
	0, 0, 2048, 309, 0, 0, 0, 0, 0, 0,
	0, 1573, 0, 0, 2022, 2023, 2029, 2051, 2028, 2024,
	0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4224,
	0, 0, 2049, 0, 0, 0, 2059, 0, 1692, 1692,
	0, 0, 0, 2038, 2040, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 1573, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 2056, 0, 0, 0, 0,
	1573, 0, 2025, 2026, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 0, 1692, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 1692, 0, 1692, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 1692, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	1692, 1692, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 1574, 0, 0,
	0, 0, 2063, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	1691, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 949, 1691, 1691, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 309, 309, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 2022, 2023, 2029, 2051, 2028, 2024,
	0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	309, 0, 0, 0, 0, 1691, 0, 0, 0, 3690,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 309, 0, 0, 309, 0, 0, 0,
	0, 1574, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 1573, 1574, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 1576, 0, 1576, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 309, 1576, 1576,
	0, 0, 1576, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 2009, 0, 2041, 2042,
	2043, 2052, 2053, 2054, 0, 0, 0, 0, 0, 1574,
	0, 0, 1576, 0, 309, 1576, 309, 2221, 2045, 2039,
	0, 1692, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 309, 0, 2064, 0, 0, 0,
	0, 0, 0, 2045, 2039, 2010, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 2058, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 1692, 2033, 2034, 2035,
	2036, 0, 1692, 0, 0, 0, 0, 2016, 0, 1691,
	1691, 0, 0, 1692, 1692, 0, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 2033, 2034, 2035, 2036, 0, 0, 0, 0,
	2049, 0, 2016, 0, 2059, 0, 0, 0, 0, 0,
	0, 2038, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 2055, 0, 2056, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 0, 0, 2049, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 2038, 2040, 0, 0,
	2047, 0, 0, 309, 0, 0, 0, 1691, 0, 1576,
	0, 0, 0, 0, 0, 2031, 2055, 0, 2056, 0,
	0, 0, 0, 0, 0, 2025, 2026, 0, 0, 0,
	1691, 0, 0, 0, 0, 1691, 1691, 1691, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	2031, 1691, 0, 0, 2057, 0, 1691, 0, 1573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 1576, 0, 0, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 1576, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	309, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 1573, 1573, 0, 1573, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 1691, 1691, 309, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 309, 0, 0, 2050,
	309, 0, 309, 1573, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 1576, 0, 0, 0,
	0, 1576, 1576, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 0, 1576, 0, 0,
	2048, 309, 1576, 0, 1576, 0, 0, 0, 0, 0,
	0, 1573, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0,
	0, 0, 0, 0, 0, 1576, 0, 3689, 1573, 0,
	1574, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3686, 0, 0, 0, 0, 1574, 0, 0,
	1691, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1573, 0, 0, 0,
	0, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 1576, 0,
	1576, 0, 0, 0, 0, 0, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 0, 0, 0, 0, 0, 1576, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 2009,
	0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2039, 1573, 309, 1691, 0, 0, 0, 1574,
	2011, 0, 0, 0, 0, 0, 0, 1576, 0, 0,
	309, 2058, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 0, 0, 1576, 0, 0, 0, 2010, 0,
	0, 0, 0, 1573, 309, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 1576, 0, 0,
	1576, 0, 0, 1692, 0, 1692, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 1692, 1692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	0, 0, 309, 0, 0, 1691, 0, 0, 1691, 1691,
	0, 0, 1576, 309, 0, 0, 0, 1576, 0, 0,
	2033, 2034, 2035, 2036, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 0,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 1692, 0, 1576, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 1573, 2059, 0, 1691,
	0, 0, 0, 0, 2038, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 2056, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 1576,
	0, 1576, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2008, 2009, 0, 2041, 2042, 2043,
	2052, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2039, 1576,
	0, 0, 0, 0, 0, 0, 2011, 2057, 0, 309,
	0, 0, 0, 1574, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	1574, 0, 0, 0, 0, 2064, 0, 0, 0, 2061,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	0, 1576, 0, 0, 1576, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 2034, 2035, 2036,
	0, 0, 1576, 0, 0, 1576, 2016, 2050, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	309, 0, 0, 2063, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 1691,
	2038, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 2056, 0, 0, 0, 0, 0, 0, 2025,
	2026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2023, 2029, 2051, 2028,
	2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017,
	2018, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3685, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1692, 0, 0, 0, 0,
	0, 0, 1692, 309, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 1692, 1692, 0, 0, 0, 1576, 0,
	0, 0, 0, 1692, 0, 2008, 2009, 0, 2041, 2042,
	2043, 2052, 2053, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 2045, 2039,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 309, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 1692, 2050, 0, 1576, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	1692, 1692, 1692, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 1692, 0, 1692, 0, 0, 0,
	0, 1692, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 0, 2033, 2034, 2035,
	2036, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019,
	2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 0,
	2049, 0, 0, 0, 2059, 0, 3684, 0, 0, 0,
	0, 2038, 2040, 0, 0, 0, 0, 0, 0, 2008,
	2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0,
	0, 2055, 0, 2056, 0, 0, 0, 0, 0, 0,
	2025, 2026, 2045, 2039, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 2058, 0, 0, 0, 1574, 1574, 0, 1574,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 1692, 1692, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 2009,
	2030, 2041, 2042, 2043, 2052, 2053, 2054, 0, 1574, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2039, 0, 2057, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 1574, 0, 2027, 0,
	0, 2033, 2034, 2035, 2036, 0, 0, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 2049, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 2038, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 1692, 0, 0, 0,
	2033, 2034, 2035, 2036, 2050, 2055, 0, 2056, 0, 0,
	2016, 0, 0, 0, 2025, 2026, 0, 0, 0, 0,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	2063, 1574, 0, 2045, 2039, 0, 1692, 0, 0, 2031,
	0, 0, 2011, 2049, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 2058, 2038, 2040, 0, 0, 0, 0,
	0, 1692, 1692, 1692, 1692, 1692, 1692, 1692, 0, 0,
	0, 2064, 0, 0, 2055, 0, 2056, 0, 0, 0,
	2010, 0, 0, 2025, 2026, 1574, 0, 0, 2057, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 2047, 0, 0, 0, 0, 0, 2046,
	2048, 0, 0, 0, 0, 1574, 0, 0, 2031, 0,
	2061, 0, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 0,
	1692, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 2033, 2034, 2035, 2036, 0, 0, 2046, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 2032, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 2050, 2059,
	0, 0, 0, 0, 0, 0, 2038, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 2055, 0, 2056, 0,
	0, 0, 0, 0, 2063, 2025, 2026, 0, 0, 0,
	0, 0, 0, 0, 1574, 2032, 0, 0, 0, 0,
	1692, 0, 0, 1692, 1692, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 2048, 0, 0, 0, 0, 2057,
	0, 1574, 0, 0, 1692, 0, 2022, 2023, 2029, 2051,
	2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015,
	2017, 2018, 0, 0, 0, 0, 0, 5313, 0, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2023, 2029, 2051, 2028,
	2024, 2037, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017,
	2018, 0, 0, 0, 0, 0, 5309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 1577, 325, 326,
	1578, 1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327,
	1585, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 1586,
	737, 340, 341, 342, 343, 344, 345, 346, 1587, 1588,
	0, 347, 738, 739, 740, 1589, 348, 349, 741, 1590,
	1657, 1591, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 1592, 359, 360, 361, 358, 362, 1593, 363, 1692,
	364, 365, 366, 367, 368, 369, 370, 1594, 371, 372,
	373, 1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599,
	1600, 1601, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 1602, 387, 389, 383, 385, 1603, 388, 386,
	390, 391, 1604, 392, 393, 394, 1605, 1606, 395, 396,
	397, 1607, 398, 399, 400, 1608, 401, 402, 403, 1609,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 1610, 314,
	1611, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 1612, 423, 424, 425, 1613, 426, 427,
	1614, 1347, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 1615, 440, 750, 1616,
	751, 441, 1617, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 1349, 449, 450, 451, 1618, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 1619, 1348, 755, 460, 543, 461, 756, 757, 1620,
	758, 1621, 462, 463, 465, 1350, 759, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 1622, 476, 478, 477, 1623, 480, 760,
	479, 1353, 481, 482, 1354, 1624, 483, 484, 485, 486,
	487, 488, 491, 1625, 1626, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 1627, 316, 1357, 537,
	538, 539, 540, 1628, 761, 541, 762, 544, 545, 1629,
	0, 546, 0, 547, 1630, 1631, 549, 550, 551, 1632,
	1633, 552, 553, 763, 1358, 554, 1359, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 1634, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 1635, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 1636, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 1637, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 1638, 643, 644, 642, 645, 646, 647,
	1639, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 1640,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 1641, 680, 681, 0, 675, 666, 1642, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 1643, 690, 775,
	776, 777, 778, 1644, 702, 1645, 691, 693, 694, 695,
	696, 779, 697, 780, 1646, 698, 699, 700, 701, 692,
	703, 704, 1647, 1648, 705, 706, 708, 710, 711, 707,
	709, 712, 1649, 713, 1650, 0, 714, 715, 716, 781,
	782, 783, 1651, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 1652, 1653, 1654, 1655, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1571, 0, 0,
	0, 0, 0, 0, 3092, 0, 0, 0, 0, 0,
	0, 0, 0, 3093, 317, 318, 320, 319, 321, 322,
	323, 324, 1577, 325, 326, 1578, 1579, 1580, 0, 1581,
	732, 1582, 1583, 1584, 327, 1585, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 734, 0,
	338, 735, 339, 736, 1586, 737, 340, 341, 342, 343,
	344, 345, 346, 1587, 1588, 0, 347, 738, 739, 740,
	1589, 348, 349, 741, 1590, 1657, 1591, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 1592, 359, 360, 361,
	358, 362, 1593, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 1594, 371, 372, 373, 1346, 374, 375, 376,
	1595, 1596, 1598, 1597, 1599, 1600, 1601, 377, 378, 379,
	380, 381, 0, 382, 384, 742, 743, 1602, 387, 389,
	383, 385, 1603, 388, 386, 390, 391, 1604, 392, 393,
	394, 1605, 1606, 395, 396, 397, 1607, 398, 399, 400,
	1608, 401, 402, 403, 1609, 404, 405, 744, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	745, 746, 418, 1610, 314, 1611, 0, 0, 0, 0,
	419, 420, 421, 747, 0, 0, 0, 422, 1612, 423,
	424, 425, 1613, 426, 427, 1614, 1347, 428, 429, 430,
	748, 749, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 1615, 440, 750, 1616, 751, 441, 1617, 442, 443,
	444, 445, 446, 447, 448, 752, 753, 754, 542, 1349,
	449, 450, 451, 1618, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 1619, 1348, 755, 460,
	543, 461, 756, 757, 1620, 758, 1621, 462, 463, 465,
	1350, 759, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 1622, 476,
	478, 477, 1623, 480, 760, 479, 1353, 481, 482, 1354,
	1624, 483, 484, 485, 486, 487, 488, 491, 1625, 1626,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1627, 316, 1357, 537, 538, 539, 540, 1628, 761,
	541, 762, 544, 545, 1629, 0, 546, 0, 547, 1630,
	1631, 549, 550, 551, 1632, 1633, 552, 553, 763, 1358,
	554, 1359, 764, 555, 556, 548, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 1634, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 767, 575, 768,
	576, 577, 1635, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 769, 589, 590, 592, 591,
	593, 1636, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 1637, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 770,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 1638, 643,
	644, 642, 645, 646, 647, 1639, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 772, 0, 659, 1640, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 773, 669, 670, 671,
	672, 774, 676, 677, 678, 679, 1641, 680, 681, 0,
	675, 666, 1642, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 1643, 690, 775, 776, 777, 778, 1644, 702,
	1645, 691, 693, 694, 695, 696, 779, 697, 780, 1646,
	698, 699, 700, 701, 692, 703, 704, 1647, 1648, 705,
	706, 708, 710, 711, 707, 709, 712, 1649, 713, 1650,
	0, 714, 715, 716, 781, 782, 783, 1651, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 1652,
	1653, 1654, 1655, 727, 728, 785, 729, 730, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	0, 0, 0, 4233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4235, 317, 318, 320, 319,
	321, 322, 323, 324, 1577, 325, 326, 1578, 1579, 1580,
	0, 1581, 732, 1582, 1583, 1584, 327, 1585, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	734, 0, 338, 735, 339, 736, 1586, 737, 340, 341,
	342, 343, 344, 345, 346, 1587, 1588, 0, 347, 738,
	739, 740, 1589, 348, 349, 741, 1590, 1657, 1591, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 1592, 359,
	360, 361, 358, 362, 1593, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 1594, 371, 372, 373, 1346, 374,
	375, 376, 1595, 1596, 1598, 1597, 1599, 1600, 1601, 377,
	378, 379, 380, 381, 0, 382, 384, 742, 743, 1602,
	387, 389, 383, 385, 1603, 388, 386, 390, 391, 1604,
	392, 393, 394, 1605, 1606, 395, 396, 397, 1607, 398,
	399, 400, 1608, 401, 402, 403, 1609, 404, 405, 744,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 745, 746, 418, 1610, 314, 1611, 0, 0,
	0, 0, 419, 420, 421, 747, 0, 0, 0, 422,
	1612, 423, 424, 425, 1613, 426, 427, 1614, 1347, 428,
	429, 430, 748, 749, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 1615, 440, 750, 1616, 751, 441, 1617,
	442, 443, 444, 445, 446, 447, 448, 752, 753, 754,
	542, 1349, 449, 450, 451, 1618, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 1619, 1348,
	755, 460, 543, 461, 756, 757, 1620, 758, 1621, 462,
	463, 465, 1350, 759, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	1622, 476, 478, 477, 1623, 480, 760, 479, 1353, 481,
	482, 1354, 1624, 483, 484, 485, 486, 487, 488, 491,
	1625, 1626, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 1627, 316, 1357, 537, 538, 539, 540,
	1628, 761, 541, 762, 544, 545, 1629, 0, 546, 0,
	547, 1630, 1631, 549, 550, 551, 1632, 1633, 552, 553,
	763, 1358, 554, 1359, 764, 555, 556, 548, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 1634, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 767,
	575, 768, 576, 577, 1635, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 769, 589, 590,
	592, 591, 593, 1636, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 1637,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 770, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	1638, 643, 644, 642, 645, 646, 647, 1639, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 772, 0, 659, 1640, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 773, 669,
	670, 671, 672, 774, 676, 677, 678, 679, 1641, 680,
	681, 0, 675, 666, 1642, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 1643, 690, 775, 776, 777, 778,
	1644, 702, 1645, 691, 693, 694, 695, 696, 779, 697,
	780, 1646, 698, 699, 700, 701, 692, 703, 704, 1647,
	1648, 705, 706, 708, 710, 711, 707, 709, 712, 1649,
	713, 1650, 0, 714, 715, 716, 781, 782, 783, 1651,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 1652, 1653, 1654, 1655, 727, 728, 785, 729, 730,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4696, 317, 318, 320, 319, 321, 322, 323, 324,
	1577, 325, 326, 1578, 1579, 1580, 0, 1581, 732, 1582,
	1583, 1584, 327, 1585, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 734, 0, 338, 735,
	339, 736, 1586, 737, 340, 341, 342, 343, 344, 345,
	346, 1587, 1588, 0, 347, 738, 739, 740, 1589, 348,
	349, 741, 1590, 1657, 1591, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 1592, 359, 360, 361, 358, 362,
	1593, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	1594, 371, 372, 373, 1346, 374, 375, 376, 1595, 1596,
	1598, 1597, 1599, 1600, 1601, 377, 378, 379, 380, 381,
	0, 382, 384, 742, 743, 1602, 387, 389, 383, 385,
	1603, 388, 386, 390, 391, 1604, 392, 393, 394, 1605,
	1606, 395, 396, 397, 1607, 398, 399, 400, 1608, 401,
	402, 403, 1609, 404, 405, 744, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 745, 746,
	418, 1610, 314, 1611, 0, 0, 0, 0, 419, 420,
	421, 747, 0, 0, 0, 422, 1612, 423, 424, 425,
	1613, 426, 427, 1614, 1347, 428, 429, 430, 748, 749,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 1615,
	440, 750, 1616, 751, 441, 1617, 442, 443, 444, 445,
	446, 447, 448, 752, 753, 754, 542, 1349, 449, 450,
	451, 1618, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 1619, 1348, 755, 460, 543, 461,
	756, 757, 1620, 758, 1621, 462, 463, 465, 1350, 759,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 1622, 476, 478, 477,
	1623, 480, 760, 479, 1353, 481, 482, 1354, 1624, 483,
	484, 485, 486, 487, 488, 491, 1625, 1626, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 1627,
	316, 1357, 537, 538, 539, 540, 1628, 761, 541, 762,
	544, 545, 1629, 0, 546, 0, 547, 1630, 1631, 549,
	550, 551, 1632, 1633, 552, 553, 763, 1358, 554, 1359,
	764, 555, 556, 548, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 1634, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 767, 575, 768, 576, 577,
	1635, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 769, 589, 590, 592, 591, 593, 1636,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 1637, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 770, 622, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 1638, 643, 644, 642,
	645, 646, 647, 1639, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 772,
	0, 659, 1640, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 773, 669, 670, 671, 672, 774,
	676, 677, 678, 679, 1641, 680, 681, 0, 675, 666,
	1642, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	1643, 690, 775, 776, 777, 778, 1644, 702, 1645, 691,
	693, 694, 695, 696, 779, 697, 780, 1646, 698, 699,
	700, 701, 692, 703, 704, 1647, 1648, 705, 706, 708,
	710, 711, 707, 709, 712, 1649, 713, 1650, 0, 714,
	715, 716, 781, 782, 783, 1651, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 1652, 1653, 1654,
	1655, 727, 728, 785, 729, 730, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4694, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4952, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4802, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4620, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4251, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4057, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2925, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 1568,
	0, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2537, 317, 318,
	320, 319, 321, 322, 323, 324, 1577, 325, 326, 1578,
	1579, 1580, 0, 1581, 732, 1582, 1583, 1584, 327, 1585,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 1586, 737,
	340, 341, 342, 343, 344, 345, 346, 1587, 1588, 0,
	347, 738, 739, 740, 1589, 348, 349, 741, 1590, 1657,
	1591, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	1592, 359, 360, 361, 358, 362, 1593, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 1594, 371, 372, 373,
	1346, 374, 375, 376, 1595, 1596, 1598, 1597, 1599, 1600,
	1601, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 1602, 387, 389, 383, 385, 1603, 388, 386, 390,
	391, 1604, 392, 393, 394, 1605, 1606, 395, 396, 397,
	1607, 398, 399, 400, 1608, 401, 402, 403, 1609, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 1610, 314, 1611,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 1612, 423, 424, 425, 1613, 426, 427, 1614,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 1615, 440, 750, 1616, 751,
	441, 1617, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 1618, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	1619, 1348, 755, 460, 543, 461, 756, 757, 1620, 758,
	1621, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 1622, 476, 478, 477, 1623, 480, 760, 479,
	1353, 481, 482, 1354, 1624, 483, 484, 485, 486, 487,
	488, 491, 1625, 1626, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1627, 316, 1357, 537, 538,
	539, 540, 1628, 761, 541, 762, 544, 545, 1629, 0,
	546, 0, 547, 1630, 1631, 549, 550, 551, 1632, 1633,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	1634, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 1635, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 1636, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 1637, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 1638, 643, 644, 642, 645, 646, 647, 1639,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 1640, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	1641, 680, 681, 0, 675, 666, 1642, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 1643, 690, 775, 776,
	777, 778, 1644, 702, 1645, 691, 693, 694, 695, 696,
	779, 697, 780, 1646, 698, 699, 700, 701, 692, 703,
	704, 1647, 1648, 705, 706, 708, 710, 711, 707, 709,
	712, 1649, 713, 1650, 0, 714, 715, 716, 781, 782,
	783, 1651, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 1652, 1653, 1654, 1655, 727, 728, 785,
	729, 730, 731, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 320, 319, 321, 322, 323, 324, 1577, 325,
	326, 1578, 1579, 1580, 0, 1581, 732, 1582, 1583, 1584,
	327, 1585, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	1586, 737, 340, 341, 342, 343, 344, 345, 346, 1587,
	1588, 0, 347, 738, 739, 740, 1589, 348, 349, 741,
	1590, 1657, 1591, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 1592, 359, 360, 361, 358, 362, 1593, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 1594, 371,
	372, 373, 1346, 374, 375, 376, 1595, 1596, 1598, 1597,
	1599, 1600, 1601, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 1602, 387, 389, 383, 385, 1603, 388,
	386, 390, 391, 1604, 392, 393, 394, 1605, 1606, 395,
	396, 397, 1607, 398, 399, 400, 1608, 401, 402, 403,
	1609, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 745, 746, 418, 1610,
	314, 1611, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 1612, 423, 424, 425, 1613, 426,
	427, 1614, 1347, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 1615, 440, 750,
	1616, 751, 441, 1617, 442, 443, 444, 445, 446, 447,
	448, 752, 753, 754, 542, 1349, 449, 450, 451, 1618,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 1619, 1348, 755, 460, 543, 461, 756, 757,
	1620, 758, 1621, 462, 463, 465, 1350, 759, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 1622, 476, 478, 477, 1623, 480,
	760, 479, 1353, 481, 482, 1354, 1624, 483, 484, 485,
	486, 487, 488, 491, 1625, 1626, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 1627, 316, 1357,
	537, 538, 539, 540, 1628, 761, 541, 762, 544, 545,
	1629, 0, 546, 0, 547, 1630, 1631, 549, 550, 551,
	1632, 1633, 552, 553, 763, 1358, 554, 1359, 764, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 1634, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 767, 575, 768, 576, 577, 1635, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 1636, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 1637, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 770, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 1638, 643, 644, 642, 645, 646,
	647, 1639, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	1640, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 774, 676, 677,
	678, 679, 1641, 680, 681, 0, 675, 666, 1642, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 1643, 690,
	775, 776, 777, 778, 1644, 702, 1645, 691, 693, 694,
	695, 696, 779, 697, 780, 1646, 698, 699, 700, 701,
	692, 703, 704, 1647, 1648, 705, 706, 708, 710, 711,
	707, 709, 712, 1649, 713, 1650, 0, 714, 715, 716,
	781, 782, 783, 1651, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 1652, 1653, 1654, 1655, 727,
	728, 785, 729, 730, 731, 2900, 0, 1281, 1253, 1254,
	1255, 1251, 1252, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 2897, 325, 326, 0, 0, 0, 0, 0,
	1305, 1269, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 1318, 0,
	338, 1325, 339, 1324, 0, 1335, 340, 341, 342, 343,
	344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 1328, 382, 384, 1322, 1321, 1241, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 2898, 0, 395, 1313, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 1247, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 1260, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 1320, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	1333, 1334, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 1270, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 1315, 1316, 0, 1276, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1238, 316, 1357, 537, 538, 539, 540, 1261, 1309,
	541, 1323, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 1248, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 1319, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 1249,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 1317, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 1364, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 1235,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 1329, 1330, 1331, 1332, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 1259,
	698, 699, 700, 701, 692, 703, 704, 0, 1242, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 1326, 1363, 2896, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 1232, 1233, 2899, 0, 0, 0, 0, 0, 0,
	0, 1265, 2895, 0, 1223, 1263, 1281, 1253, 1254, 1255,
	1251, 1252, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 1305,
	1269, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 1318, 0, 338,
	1325, 339, 1324, 0, 1335, 340, 341, 342, 343, 344,
	345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0,
	348, 349, 1311, 0, 1292, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 1295,
	1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380,
	381, 1328, 382, 384, 1322, 1321, 1241, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 1247, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 1336,
	1337, 418, 1260, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 1320, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 1333,
	1334, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 1343, 0, 1270, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1306, 1307, 1310, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 1315, 1316, 0, 1276, 0, 462, 463, 465, 1350,
	1308, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 1344, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 1299, 1298, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	1238, 316, 1357, 537, 538, 539, 540, 1261, 1309, 541,
	1323, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 1338, 555, 556, 1248, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 1339, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 1319, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 1249, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 270, 643, 644,
	642, 645, 646, 647, 1302, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	1317, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 1364, 669, 670, 671, 672,
	1340, 676, 677, 678, 679, 0, 680, 681, 1235, 675,
	666, 272, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 1329, 1330, 1331, 1332, 0, 702, 0,
	691, 693, 694, 695, 696, 1341, 697, 1342, 1259, 698,
	699, 700, 701, 692, 703, 704, 0, 1242, 705, 706,
	708, 710, 711, 707, 709, 712, 1303, 713, 0, 0,
	714, 715, 716, 1820, 1326, 1363, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 264, 727, 728, 785, 729, 730, 731, 1239, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1234, 0, 0, 0, 0, 0, 0,
	1232, 1233, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0,
	2089, 2087, 0, 0, 1263, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 1305, 1269, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 1318, 0, 338, 1325, 339, 1324, 0,
	1335, 340, 341, 342, 343, 344, 345, 346, 1271, 1304,
	1236, 347, 1365, 1366, 740, 0, 348, 349, 1311, 0,
	1292, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297,
	1296, 1300, 377, 378, 379, 380, 381, 1328, 382, 384,
	1322, 1321, 1241, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 1313,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 1247, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 1336, 1337, 418, 1260, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 1320, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 1333, 1334, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 1343, 0,
	1270, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1306, 1307, 1310, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 1315, 1316, 0,
	1276, 0, 462, 463, 465, 1350, 1308, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 1344,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 1299, 1298, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 1238, 316, 1357, 537,
	538, 539, 540, 1261, 1309, 541, 1323, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 1338, 555, 556,
	1248, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 1339, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	1319, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 1249, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 270, 643, 644, 642, 645, 646, 647,
	1302, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 1317, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 1364, 669, 670, 671, 672, 1340, 676, 677, 678,
	679, 0, 680, 681, 1235, 675, 666, 272, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 1329,
	1330, 1331, 1332, 0, 702, 0, 691, 693, 694, 695,
	696, 1341, 697, 1342, 1259, 698, 699, 700, 701, 692,
	703, 704, 0, 1242, 705, 706, 708, 710, 711, 707,
	709, 712, 1303, 713, 0, 0, 714, 715, 716, 1820,
	1326, 1363, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 0, 0, 0, 264, 727, 728,
	785, 729, 730, 731, 1239, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 1232, 1233, 1281, 1253,
	1254, 1255, 1251, 1252, 1264, 0, 2089, 3640, 0, 0,
	1263, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 1305, 1269, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 1318,
	0, 338, 1325, 339, 1324, 0, 1335, 340, 341, 342,
	343, 344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366,
	740, 0, 348, 349, 1311, 0, 1292, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378,
	379, 380, 381, 1328, 382, 384, 1322, 1321, 1241, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 1313, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 1247, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 1336, 1337, 418, 1260, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 1320, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 1333, 1334, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 1343, 0, 1270, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1306, 1307, 1310, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 1315, 1316, 0, 1276, 0, 462, 463,
	465, 1350, 1308, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 1344, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 1299,
	1298, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 1238, 316, 1357, 537, 538, 539, 540, 1261,
	1309, 541, 1323, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 1338, 555, 556, 1248, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 1339, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 1319, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	1249, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 270,
	643, 644, 642, 645, 646, 647, 1302, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 1317, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 1364, 669, 670,
	671, 672, 1340, 676, 677, 678, 679, 0, 680, 681,
	1235, 675, 666, 272, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 1329, 1330, 1331, 1332, 0,
	702, 0, 691, 693, 694, 695, 696, 1341, 697, 1342,
	1259, 698, 699, 700, 701, 692, 703, 704, 0, 1242,
	705, 706, 708, 710, 711, 707, 709, 712, 1303, 713,
	0, 0, 714, 715, 716, 1820, 1326, 1363, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 264, 727, 728, 785, 729, 730, 731,
	1239, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 0, 1232, 1233, 1281, 1253, 1254, 1255, 1251, 1252,
	1264, 0, 2089, 2087, 0, 0, 1263, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 1305, 1269, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 1318, 0, 338, 1325, 339,
	1324, 3030, 1335, 340, 341, 342, 343, 344, 345, 346,
	1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348, 349,
	1311, 0, 1292, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 1295, 1293, 1294,
	1301, 1297, 1296, 1300, 377, 378, 379, 380, 381, 1328,
	382, 384, 1322, 1321, 1241, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 1247, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 1336, 1337, 418,
	1260, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	1320, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 3035, 1347, 428, 429, 430, 1333, 1334, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	1343, 0, 1270, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1306, 1307, 1310, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 1315,
	1316, 0, 1276, 0, 462, 463, 465, 1350, 1308, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 3031,
	480, 1344, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 1299, 1298, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 1238, 316,
	1357, 537, 538, 539, 540, 1261, 1309, 541, 1323, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 1338,
	555, 556, 1248, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 1339, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 1319, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 1249, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1302, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 1317, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 1364, 669, 670, 671, 672, 1340, 676,
	677, 678, 679, 0, 680, 681, 1235, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 1329, 1330, 1331, 1332, 0, 702, 3032, 691, 693,
	694, 695, 696, 1341, 697, 1342, 1259, 698, 699, 700,
	701, 692, 703, 704, 0, 1242, 705, 706, 708, 710,
	711, 707, 709, 712, 1303, 713, 0, 0, 714, 715,
	716, 781, 1326, 1363, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 1239, 0, 0, 0,
	0, 2945, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264,
	0, 1234, 0, 0, 0, 0, 0, 0, 1232, 1233,
	317, 318, 320, 319, 321, 322, 323, 324, 1265, 325,
	326, 0, 1263, 0, 0, 0, 1305, 1269, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 1318, 0, 338, 1325, 339, 1324,
	0, 1335, 340, 341, 342, 343, 344, 345, 346, 1271,
	1304, 1236, 347, 1365, 1366, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 1328, 382,
	384, 1322, 1321, 1241, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	1313, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 1247, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 1260,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 1320,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 1333, 1334, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 1270, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 1315, 1316,
	0, 1276, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 1238, 316, 1357,
	537, 538, 539, 540, 1261, 1309, 541, 1323, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 1248, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 1319, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 1249, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 1317, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 1364, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 1235, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	1329, 1330, 1331, 1332, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 1259, 698, 699, 700, 701,
	692, 703, 704, 0, 1242, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 1326, 1363, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 0, 0, 1232, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 1265, 2943, 0,
	2942, 1263, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 1305, 1269, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 1318, 0, 338, 1325, 339, 1324, 0,
	1335, 340, 341, 342, 343, 344, 345, 346, 1271, 1304,
	1236, 347, 1365, 1366, 740, 0, 348, 349, 1311, 0,
	1292, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297,
	1296, 1300, 377, 378, 379, 380, 381, 1328, 382, 384,
	1322, 1321, 1241, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 1313,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 1247, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 1336, 1337, 418, 1260, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 1320, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 1333, 1334, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 1343, 0,
	1270, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1306, 1307, 1310, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 1315, 1316, 0,
	1276, 0, 462, 463, 465, 1350, 1308, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 1344,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 1299, 1298, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 1238, 316, 1357, 537,
	538, 539, 540, 1261, 1309, 541, 1323, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 1338, 555, 556,
	1248, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 1339, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	1319, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 1249, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1302, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 1317, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 1364, 669, 670, 671, 672, 1340, 676, 677, 678,
	679, 0, 680, 681, 1235, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 1329,
	1330, 1331, 1332, 0, 702, 0, 691, 693, 694, 695,
	696, 1341, 697, 1342, 1259, 698, 699, 700, 701, 692,
	703, 704, 0, 1242, 705, 706, 708, 710, 711, 707,
	709, 712, 1303, 713, 0, 0, 714, 715, 716, 781,
	1326, 1363, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 1232, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 1265, 2940, 0, 2939,
	1263, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	320, 319, 321, 322, 323, 324, 0, 325, 326, 0,
	0, 0, 0, 0, 1305, 1269, 0, 0, 327, 0,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 1318, 0, 338, 1325, 339, 1324, 0, 1335,
	340, 341, 342, 343, 344, 345, 346, 1271, 1304, 1236,
	347, 1365, 1366, 740, 0, 348, 349, 1311, 0, 1292,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296,
	1300, 377, 378, 379, 380, 381, 1328, 382, 384, 1322,
	1321, 1241, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 1313, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 1247, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 1336, 1337, 418, 1260, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 1320, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 1333, 1334, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 1343, 0, 1270,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 1306,
	1307, 1310, 542, 1349, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	0, 1348, 755, 460, 543, 461, 1315, 1316, 0, 1276,
	0, 462, 463, 465, 1350, 1308, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 1344, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 1299, 1298, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1238, 316, 1357, 537, 538,
	539, 540, 1261, 1309, 541, 1323, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 1358, 554, 1359, 1338, 555, 556, 1248,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 1339, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 1319,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 1249, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 1302,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 1317, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	1364, 669, 670, 671, 672, 1340, 676, 677, 678, 679,
	0, 680, 681, 1235, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 1329, 1330,
	1331, 1332, 0, 702, 0, 691, 693, 694, 695, 696,
	1341, 697, 1342, 1259, 698, 699, 700, 701, 692, 703,
	704, 0, 1242, 705, 706, 708, 710, 711, 707, 709,
	712, 1303, 713, 0, 0, 714, 715, 716, 781, 1326,
	1363, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 0, 0, 1232, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 1265, 2937, 0, 2936, 1263,
	1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 1305, 1269, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 1318, 0, 338, 1325, 339, 1324, 0, 1335, 340,
	341, 342, 343, 344, 345, 346, 1271, 1304, 1236, 347,
	1365, 1366, 740, 0, 348, 349, 1311, 0, 1292, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300,
	377, 378, 379, 380, 381, 1328, 382, 384, 1322, 1321,
	1241, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 1313, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	1247, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 1336, 1337, 418, 1260, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 1320, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 1333, 1334, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 1343, 0, 1270, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1306, 1307,
	1310, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 1315, 1316, 0, 1276, 0,
	462, 463, 465, 1350, 1308, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 1344, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 1299, 1298, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 1238, 316, 1357, 537, 538, 539,
	540, 1261, 1309, 541, 1323, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 1338, 555, 556, 1248, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	1339, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 1319, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 1249, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 1302, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 1317, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 1364,
	669, 670, 671, 672, 1340, 676, 677, 678, 679, 0,
	680, 681, 1235, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 1329, 1330, 1331,
	1332, 0, 702, 0, 691, 693, 694, 695, 696, 1341,
	697, 1342, 1259, 698, 699, 700, 701, 692, 703, 704,
	0, 1242, 705, 706, 708, 710, 711, 707, 709, 712,
	1303, 713, 0, 0, 714, 715, 716, 781, 1326, 1363,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1234, 0, 0,
	0, 0, 0, 0, 1232, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 2934, 0, 1922, 1263, 1281,
	1253, 1254, 1255, 1251, 1252, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 320, 319,
	321, 322, 323, 324, 0, 325, 326, 0, 0, 0,
	0, 0, 1305, 1269, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	1318, 0, 338, 1325, 339, 1324, 0, 1335, 340, 341,
	342, 343, 344, 345, 346, 1271, 1304, 1236, 347, 1365,
	1366, 740, 0, 348, 349, 1311, 0, 1292, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377,
	378, 379, 380, 381, 1328, 382, 384, 1322, 1321, 1241,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 1313, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 1247,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 1336, 1337, 418, 1260, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 1320, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 1333, 1334, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 1343, 0, 1270, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 1306, 1307, 1310,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 1315, 1316, 0, 1276, 0, 462,
	463, 465, 1350, 1308, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 1344, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	1299, 1298, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 1238, 316, 1357, 537, 538, 539, 540,
	1261, 1309, 541, 1323, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 1338, 555, 556, 1248, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 1339,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 1319, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 1249, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 1302, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 1317, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 1364, 669,
	670, 671, 672, 1340, 676, 677, 678, 679, 0, 680,
	681, 1235, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 1329, 1330, 1331, 1332,
	0, 702, 0, 691, 693, 694, 695, 696, 1341, 697,
	1342, 1259, 698, 699, 700, 701, 692, 703, 704, 0,
	1242, 705, 706, 708, 710, 711, 707, 709, 712, 1303,
	713, 0, 0, 714, 715, 716, 781, 1326, 1363, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 1921, 0, 0, 0, 727, 728, 785, 729, 730,
	731, 1239, 0, 0, 0, 0, 1228, 0, 1281, 1253,
	1254, 1255, 1251, 1252, 1264, 0, 1234, 0, 0, 0,
	0, 0, 0, 1232, 1233, 317, 318, 320, 319, 321,
	322, 323, 324, 1265, 325, 326, 0, 1263, 0, 0,
	0, 1305, 1269, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 1318,
	0, 338, 1325, 339, 1324, 0, 1335, 340, 341, 342,
	343, 344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366,
	740, 0, 348, 349, 1311, 0, 1292, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378,
	379, 380, 381, 1328, 382, 384, 1322, 1321, 1241, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 1313, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 1247, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 1336, 1337, 418, 1260, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 1320, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 1333, 1334, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 1343, 0, 1270, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1306, 1307, 1310, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 1315, 1316, 0, 1276, 0, 462, 463,
	465, 1350, 1308, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 1344, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 1299,
	1298, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 1238, 316, 1357, 537, 538, 539, 540, 1261,
	1309, 541, 1323, 544, 545, 0, 0, 546, 0, 547,
	1243, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 1338, 555, 556, 1248, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 1339, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 1319, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	1249, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 1302, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 1317, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 1364, 669, 670,
	671, 672, 1340, 676, 677, 678, 679, 0, 680, 681,
	1235, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 1329, 1330, 1331, 1332, 0,
	702, 0, 691, 693, 694, 695, 696, 1341, 697, 1342,
	1259, 698, 699, 700, 701, 692, 703, 704, 0, 1242,
	705, 706, 708, 710, 711, 707, 709, 712, 1303, 713,
	0, 0, 714, 715, 716, 781, 1326, 1363, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	1239, 0, 0, 0, 0, 0, 0, 1281, 1253, 1254,
	1255, 1251, 1252, 1264, 0, 1234, 0, 0, 0, 0,
	0, 0, 1232, 1233, 317, 318, 320, 319, 321, 322,
	323, 324, 1265, 325, 326, 0, 1263, 0, 0, 0,
	1305, 1269, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 1318, 0,
	338, 1325, 339, 1324, 0, 1335, 340, 341, 342, 343,
	344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 5338,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 1328, 382, 384, 1322, 1321, 1241, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 1313, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 1247, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 1260, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 1320, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	1333, 1334, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 1270, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 1315, 1316, 0, 1276, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1238, 316, 1357, 537, 538, 539, 540, 1261, 1309,
	541, 1323, 544, 545, 0, 0, 546, 0, 547, 1243,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 1248, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 1319, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 1249,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 1317, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 1364, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 1235,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 1329, 1330, 1331, 1332, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 1259,
	698, 699, 700, 701, 692, 703, 704, 0, 1242, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 1326, 1363, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1239,
	0, 0, 0, 0, 0, 0, 1281, 1253, 1254, 1255,
	1251, 1252, 1264, 0, 1234, 0, 0, 0, 0, 0,
	0, 1232, 1233, 317, 318, 320, 319, 321, 322, 323,
	324, 1265, 325, 326, 0, 1263, 0, 0, 0, 1305,
	1269, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 1318, 0, 338,
	1325, 339, 1324, 0, 1335, 340, 341, 342, 343, 344,
	345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0,
	348, 349, 1311, 0, 1292, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 1295,
	1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380,
	381, 1328, 382, 384, 1322, 1321, 1241, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 1247, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 1336,
	1337, 418, 1260, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 1320, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 1333,
	1334, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 1343, 0, 1270, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1306, 1307, 1310, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 2775, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 1315, 1316, 0, 1276, 0, 462, 463, 465, 1350,
	1308, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 1344, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 1299, 1298, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	1238, 316, 1357, 537, 538, 539, 540, 1261, 1309, 541,
	1323, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 1338, 555, 556, 1248, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 1339, 575, 768, 576,
	577, 2774, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 1319, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 1249, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 1302, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	1317, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 1364, 669, 670, 671, 672,
	1340, 676, 677, 678, 679, 0, 680, 681, 1235, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 1329, 1330, 1331, 1332, 0, 702, 0,
	691, 693, 694, 695, 696, 1341, 697, 1342, 1259, 698,
	699, 700, 701, 692, 703, 704, 0, 1242, 705, 706,
	708, 710, 711, 707, 709, 712, 1303, 713, 0, 0,
	714, 715, 716, 781, 1326, 1363, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 1239, 0,
	0, 0, 0, 0, 0, 1281, 1253, 1254, 1255, 1251,
	1252, 1264, 0, 1234, 0, 0, 0, 0, 0, 0,
	1232, 1233, 317, 318, 320, 319, 321, 322, 323, 324,
	1265, 325, 326, 0, 1263, 0, 0, 0, 1305, 1269,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 1318, 0, 338, 1325,
	339, 1324, 0, 1335, 340, 341, 342, 343, 344, 345,
	346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348,
	349, 1311, 0, 1292, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 5048, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 1295, 1293,
	1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380, 381,
	1328, 382, 384, 1322, 1321, 1241, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 1313, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 1247, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 1336, 1337,
	418, 1260, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 1320, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 1333, 1334,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 1343, 0, 1270, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 1306, 1307, 1310, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	1315, 1316, 0, 1276, 0, 462, 463, 465, 1350, 1308,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 1344, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 1299, 1298, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 1238,
	316, 1357, 537, 538, 539, 540, 1261, 1309, 541, 1323,
	544, 545, 0, 0, 546, 0, 547, 1243, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	1338, 555, 556, 1248, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 1339, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 1319, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 1249, 622, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 1302, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 1317,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 1364, 669, 670, 671, 672, 1340,
	676, 677, 678, 679, 0, 680, 681, 1235, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 1329, 1330, 1331, 1332, 0, 702, 0, 691,
	693, 694, 695, 696, 1341, 697, 1342, 1259, 698, 699,
	700, 701, 692, 703, 704, 0, 1242, 705, 706, 708,
	710, 711, 707, 709, 712, 1303, 713, 0, 0, 714,
	715, 716, 781, 1326, 1363, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 1239, 0, 0,
	0, 0, 0, 0, 1281, 1253, 1254, 1255, 1251, 1252,
	1264, 0, 1234, 0, 0, 0, 0, 0, 0, 1232,
	1233, 317, 318, 320, 319, 321, 322, 323, 324, 1265,
	325, 326, 0, 1263, 0, 0, 0, 1305, 1269, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 1318, 0, 338, 1325, 339,
	1324, 0, 1335, 340, 341, 342, 343, 344, 345, 346,
	1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348, 349,
	1311, 0, 1292, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 1295, 1293, 1294,
	1301, 1297, 1296, 1300, 377, 378, 379, 380, 381, 1328,
	382, 384, 1322, 1321, 1241, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 1247, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 1336, 1337, 418,
	1260, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	1320, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 1333, 1334, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	1343, 0, 1270, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1306, 1307, 1310, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 1315,
	1316, 0, 1276, 0, 462, 463, 465, 1350, 1308, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 1344, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 1299, 1298, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 1238, 316,
	1357, 537, 538, 539, 540, 1261, 1309, 541, 1323, 544,
	545, 0, 0, 546, 0, 547, 1243, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 1338,
	555, 556, 1248, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 1339, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 1319, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 1249, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1302, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 1317, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 1364, 669, 670, 671, 672, 1340, 676,
	677, 678, 679, 0, 680, 681, 1235, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 1329, 1330, 1331, 1332, 0, 702, 0, 691, 693,
	694, 695, 696, 1341, 697, 1342, 1259, 698, 699, 700,
	701, 692, 703, 704, 0, 1242, 705, 706, 708, 710,
	711, 707, 709, 712, 1303, 713, 0, 0, 714, 715,
	716, 781, 1326, 1363, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 1239, 0, 0, 0,
	0, 0, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264,
	0, 1234, 0, 0, 0, 0, 0, 0, 1232, 1233,
	317, 318, 320, 319, 321, 322, 323, 324, 1265, 325,
	326, 0, 1263, 0, 0, 0, 1305, 1269, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 1318, 0, 338, 1325, 339, 1324,
	0, 1335, 340, 341, 342, 343, 344, 345, 346, 1271,
	1304, 1236, 347, 1365, 1366, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 1328, 382,
	384, 1322, 1321, 1241, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	1313, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 1247, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 1260,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 1320,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 1333, 1334, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 1270, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 1315, 1316,
	0, 1276, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 1238, 4585, 1357,
	537, 538, 539, 540, 1261, 1309, 541, 1323, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 1248, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 1319, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 1249, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 1317, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 1364, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 1235, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	1329, 1330, 1331, 1332, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 1259, 698, 699, 700, 701,
	692, 703, 704, 0, 1242, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 1326, 1363, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 0, 0, 1232, 1233, 2159,
	1281, 1253, 1254, 1255, 1251, 1252, 1264, 1265, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 1305, 1269, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 1318, 0, 338, 1325, 339, 1324, 0, 1335, 340,
	341, 342, 343, 344, 345, 346, 1271, 1304, 1236, 347,
	1365, 1366, 740, 0, 348, 349, 1311, 0, 1292, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300,
	377, 378, 379, 380, 381, 1328, 382, 384, 1322, 1321,
	1241, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 1313, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	1247, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 1336, 1337, 418, 1260, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 1320, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 1333, 1334, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 1343, 0, 1270, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1306, 1307,
	1310, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 1315, 1316, 0, 1276, 0,
	462, 463, 465, 1350, 1308, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 1344, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 1299, 1298, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 1238, 316, 1357, 537, 538, 539,
	540, 1261, 1309, 541, 1323, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 1338, 555, 556, 1248, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	1339, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 1319, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 1249, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 1302, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 1317, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 1364,
	669, 670, 671, 672, 1340, 676, 677, 678, 679, 0,
	680, 681, 1235, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 1329, 1330, 1331,
	1332, 0, 702, 0, 691, 693, 694, 695, 696, 1341,
	697, 1342, 1259, 698, 699, 700, 701, 692, 703, 704,
	0, 1242, 705, 706, 708, 710, 711, 707, 709, 712,
	1303, 713, 0, 0, 714, 715, 716, 781, 1326, 1363,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1234, 0, 0,
	0, 0, 0, 0, 1232, 1233, 2159, 1281, 1253, 1254,
	1255, 1251, 1252, 1264, 1265, 0, 0, 0, 1263, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 0, 325, 326, 0, 0, 0, 0, 0,
	1305, 1269, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 1318, 0,
	338, 1325, 339, 1324, 0, 1335, 340, 341, 342, 343,
	344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 1328, 382, 384, 1322, 1321, 1241, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 1313, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 1247, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 1260, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 1320, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	1333, 1334, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 1270, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 1315, 1316, 0, 1276, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1238, 316, 1357, 537, 538, 539, 540, 1261, 1309,
	541, 1323, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 1248, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 1319, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 1249,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 1317, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 1364, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 1235,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 1329, 1330, 1331, 1332, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 1259,
	698, 699, 700, 701, 692, 703, 704, 0, 1242, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 1326, 1363, 4229, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1239,
	0, 0, 0, 0, 0, 0, 1281, 1253, 1254, 1255,
	1251, 1252, 1264, 0, 1234, 0, 0, 0, 0, 0,
	0, 1232, 1233, 317, 318, 320, 319, 321, 322, 323,
	324, 1265, 325, 326, 0, 1263, 0, 0, 0, 1305,
	1269, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 1318, 0, 338,
	1325, 339, 1324, 0, 1335, 340, 341, 342, 343, 344,
	345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0,
	348, 349, 1311, 0, 1292, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 1295,
	1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380,
	381, 1328, 382, 384, 1322, 1321, 1241, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 1247, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 1336,
	1337, 418, 1260, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 1320, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 3035, 1347, 428, 429, 430, 1333,
	1334, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 1343, 0, 1270, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1306, 1307, 1310, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 1315, 1316, 0, 1276, 0, 462, 463, 465, 1350,
	1308, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 1344, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 1299, 1298, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	1238, 316, 1357, 537, 538, 539, 540, 1261, 1309, 541,
	1323, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 1338, 555, 556, 1248, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 1339, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 1319, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 1249, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 1302, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	1317, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 1364, 669, 670, 671, 672,
	1340, 676, 677, 678, 679, 0, 680, 681, 1235, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 1329, 1330, 1331, 1332, 0, 702, 0,
	691, 693, 694, 695, 696, 1341, 697, 1342, 1259, 698,
	699, 700, 701, 692, 703, 704, 0, 1242, 705, 706,
	708, 710, 711, 707, 709, 712, 1303, 713, 0, 0,
	714, 715, 716, 781, 1326, 1363, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 1239, 0,
	0, 0, 0, 0, 0, 1281, 1253, 1254, 1255, 1251,
	1252, 1264, 0, 1234, 0, 0, 0, 0, 0, 0,
	1232, 1233, 317, 318, 320, 319, 321, 322, 323, 324,
	1265, 325, 326, 0, 1263, 0, 0, 0, 1305, 1269,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 1318, 0, 338, 1325,
	339, 1324, 0, 1335, 340, 341, 342, 343, 344, 345,
	346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348,
	349, 1311, 0, 1292, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 1295, 1293,
	1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380, 381,
	1328, 382, 384, 1322, 1321, 1241, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 1313, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 1247, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 1336, 1337,
	418, 1260, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 1320, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 1333, 1334,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 1343, 0, 1270, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 1306, 1307, 1310, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	1315, 1316, 0, 1276, 0, 462, 463, 465, 1350, 1308,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 1344, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 1299, 1298, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 1238,
	316, 1357, 537, 538, 539, 540, 1261, 1309, 541, 1323,
	544, 545, 0, 0, 546, 0, 547, 0, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	1338, 555, 556, 1248, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 1339, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 1319, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 1249, 622, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 1302, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 1317,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 1364, 669, 670, 671, 672, 1340,
	676, 677, 678, 679, 0, 680, 681, 1235, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 1329, 1330, 1331, 1332, 0, 702, 0, 691,
	693, 694, 695, 696, 1341, 697, 1342, 1259, 698, 699,
	700, 701, 692, 703, 704, 0, 1242, 705, 706, 708,
	710, 711, 707, 709, 712, 1303, 713, 0, 0, 714,
	715, 716, 781, 1326, 1363, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 0, 0, 1232,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 1265,
	2087, 0, 3040, 1263, 1281, 1253, 1254, 1255, 1251, 1252,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 1305, 1269, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 1318, 0, 338, 1325, 339,
	1324, 0, 1335, 340, 341, 342, 343, 344, 345, 346,
	1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348, 349,
	1311, 0, 1292, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 1295, 1293, 1294,
	1301, 1297, 1296, 1300, 377, 378, 379, 380, 381, 1328,
	382, 384, 1322, 1321, 1241, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 1247, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 1336, 1337, 418,
	1260, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	1320, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 1333, 1334, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	1343, 0, 1270, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1306, 1307, 1310, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 1315,
	1316, 0, 1276, 0, 462, 463, 465, 1350, 1308, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 1344, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 1299, 1298, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 1238, 316,
	1357, 537, 538, 539, 540, 1261, 1309, 541, 1323, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 1338,
	555, 556, 1248, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 1339, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 1319, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 1249, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1302, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 1317, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 1364, 669, 670, 671, 672, 1340, 676,
	677, 678, 679, 0, 680, 681, 1235, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 1329, 1330, 1331, 1332, 0, 702, 0, 691, 693,
	694, 695, 696, 1341, 697, 1342, 1259, 698, 699, 700,
	701, 692, 703, 704, 0, 1242, 705, 706, 708, 710,
	711, 707, 709, 712, 1303, 713, 0, 0, 714, 715,
	716, 781, 1326, 1363, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 1239, 0, 0, 0,
	0, 3038, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264,
	0, 1234, 0, 0, 0, 0, 0, 0, 1232, 1233,
	317, 318, 320, 319, 321, 322, 323, 324, 1265, 325,
	326, 0, 1263, 0, 0, 0, 1305, 1269, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 1318, 0, 338, 1325, 339, 1324,
	0, 1335, 340, 341, 342, 343, 344, 345, 346, 1271,
	1304, 1236, 347, 1365, 1366, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 1328, 382,
	384, 1322, 1321, 1241, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	1313, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 1247, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 1260,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 1320,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 1333, 1334, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 1270, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 1315, 1316,
	0, 1276, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 1238, 316, 1357,
	537, 538, 539, 540, 1261, 1309, 541, 1323, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 1248, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 1319, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 1249, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 1317, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 1364, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 1235, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	1329, 1330, 1331, 1332, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 1259, 698, 699, 700, 701,
	692, 703, 704, 0, 1242, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 1326, 1363, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1239, 0, 0, 0, 0,
	3026, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0,
	1234, 0, 0, 0, 0, 0, 0, 1232, 1233, 317,
	318, 320, 319, 321, 322, 323, 324, 1265, 325, 326,
	0, 1263, 0, 0, 0, 1305, 1269, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 1318, 0, 338, 1325, 339, 1324, 0,
	1335, 340, 341, 342, 343, 344, 345, 346, 1271, 1304,
	1236, 347, 1365, 1366, 740, 0, 348, 349, 1311, 0,
	1292, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297,
	1296, 1300, 377, 378, 379, 380, 381, 1328, 382, 384,
	1322, 1321, 1241, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 1313,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 1247, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 1336, 1337, 418, 1260, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 1320, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 1333, 1334, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 1343, 0,
	1270, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1306, 1307, 1310, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 1315, 1316, 0,
	1276, 0, 462, 463, 465, 1350, 1308, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 1344,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 1299, 1298, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 1238, 316, 1357, 537,
	538, 539, 540, 1261, 1309, 541, 1323, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 1338, 555, 556,
	1248, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 1339, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	1319, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 1249, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1302, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 1317, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 1364, 669, 670, 671, 672, 1340, 676, 677, 678,
	679, 0, 680, 681, 1235, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 1329,
	1330, 1331, 1332, 0, 702, 0, 691, 693, 694, 695,
	696, 1341, 697, 1342, 1259, 698, 699, 700, 701, 692,
	703, 704, 0, 1242, 705, 706, 708, 710, 711, 707,
	709, 712, 1303, 713, 0, 0, 714, 715, 716, 781,
	1326, 1363, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 1239, 0, 0, 0, 0, 3015,
	0, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 1234,
	0, 0, 0, 0, 0, 0, 1232, 1233, 317, 318,
	320, 319, 321, 322, 323, 324, 1265, 325, 326, 0,
	1263, 0, 0, 0, 1305, 1269, 0, 0, 327, 0,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 1318, 0, 338, 1325, 339, 1324, 0, 1335,
	340, 341, 342, 343, 344, 345, 346, 1271, 1304, 1236,
	347, 1365, 1366, 740, 0, 348, 349, 1311, 0, 1292,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296,
	1300, 377, 378, 379, 380, 381, 1328, 382, 384, 1322,
	1321, 1241, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 1313, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 1247, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 1336, 1337, 418, 1260, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 1320, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 1333, 1334, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 1343, 0, 1270,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 1306,
	1307, 1310, 542, 1349, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	0, 1348, 755, 460, 543, 461, 1315, 1316, 0, 1276,
	0, 462, 463, 465, 1350, 1308, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 1344, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 1299, 1298, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1238, 316, 1357, 537, 538,
	539, 540, 1261, 1309, 541, 1323, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 1358, 554, 1359, 1338, 555, 556, 1248,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 1339, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 1319,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 1249, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 1302,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 1317, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	1364, 669, 670, 671, 672, 1340, 676, 677, 678, 679,
	0, 680, 681, 1235, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 1329, 1330,
	1331, 1332, 0, 702, 0, 691, 693, 694, 695, 696,
	1341, 697, 1342, 1259, 698, 699, 700, 701, 692, 703,
	704, 0, 1242, 705, 706, 708, 710, 711, 707, 709,
	712, 1303, 713, 0, 0, 714, 715, 716, 781, 1326,
	1363, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 1239, 0, 0, 0, 0, 3013, 0,
	3004, 3011, 1254, 1255, 1251, 1252, 1264, 0, 1234, 0,
	0, 0, 0, 0, 0, 1232, 1233, 317, 318, 320,
	319, 321, 322, 323, 324, 1265, 325, 326, 0, 1263,
	0, 0, 0, 1305, 1269, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 1318, 0, 338, 1325, 339, 1324, 0, 1335, 340,
	341, 342, 343, 344, 345, 346, 1271, 1304, 1236, 347,
	1365, 1366, 740, 0, 348, 349, 1311, 0, 1292, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300,
	377, 378, 379, 380, 381, 1328, 3007, 384, 1322, 1321,
	1241, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 1313, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	1247, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 1336, 1337, 418, 1260, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 1320, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 1333, 1334, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 1343, 0, 1270, 441,
	0, 442, 443, 444, 445, 446, 3008, 448, 1306, 1307,
	1310, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 1315, 1316, 0, 1276, 0,
	462, 463, 465, 1350, 1308, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 1344, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 1299, 1298, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 3009, 501, 3006, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 1238, 316, 1357, 537, 538, 539,
	540, 1261, 1309, 541, 1323, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 1338, 555, 556, 1248, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	1339, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 1319, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 1249, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 3010, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 1302, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 1317, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 1364,
	669, 670, 671, 672, 1340, 676, 677, 678, 679, 0,
	680, 681, 1235, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 1329, 1330, 1331,
	1332, 0, 702, 0, 691, 693, 694, 695, 696, 1341,
	697, 1342, 1259, 698, 699, 700, 701, 692, 703, 704,
	0, 1242, 705, 706, 708, 710, 711, 707, 709, 712,
	1303, 713, 0, 0, 714, 715, 716, 781, 1326, 1363,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	3005, 731, 1239, 0, 0, 0, 0, 3001, 0, 3004,
	3011, 1254, 1255, 1251, 1252, 1264, 0, 1234, 0, 0,
	0, 0, 0, 0, 1232, 1233, 317, 318, 320, 319,
	321, 322, 323, 324, 1265, 325, 326, 0, 1263, 0,
	0, 0, 1305, 1269, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	1318, 0, 338, 1325, 339, 1324, 0, 1335, 340, 341,
	342, 343, 344, 345, 346, 1271, 1304, 1236, 347, 1365,
	1366, 740, 0, 348, 349, 1311, 0, 1292, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377,
	378, 379, 380, 381, 1328, 3007, 384, 1322, 1321, 1241,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 1313, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 1247,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 1336, 1337, 418, 1260, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 1320, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 1333, 1334, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 1343, 0, 1270, 441, 0,
	442, 443, 444, 445, 446, 3008, 448, 1306, 1307, 1310,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 1315, 1316, 0, 1276, 0, 462,
	463, 465, 1350, 1308, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 1344, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	1299, 1298, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 3009, 501, 3006, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 1238, 316, 1357, 537, 538, 539, 540,
	1261, 1309, 541, 1323, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 1338, 555, 556, 1248, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 1339,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 1319, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 1249, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 3010, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 1302, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 1317, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 1364, 669,
	670, 671, 672, 1340, 676, 677, 678, 679, 0, 680,
	681, 1235, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 1329, 1330, 1331, 1332,
	0, 702, 0, 691, 693, 694, 695, 696, 1341, 697,
	1342, 1259, 698, 699, 700, 701, 692, 703, 704, 0,
	1242, 705, 706, 708, 710, 711, 707, 709, 712, 1303,
	713, 0, 0, 714, 715, 716, 781, 1326, 1363, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 0, 0, 0, 0, 727, 728, 785, 729, 3005,
	731, 1239, 0, 0, 0, 0, 0, 0, 1281, 1253,
	1254, 1255, 1251, 1252, 1264, 0, 1234, 0, 0, 0,
	0, 0, 0, 1232, 1233, 317, 318, 320, 319, 321,
	322, 323, 324, 1265, 325, 326, 0, 1263, 0, 0,
	0, 1305, 1269, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 1318,
	0, 338, 1325, 339, 1324, 0, 1335, 340, 341, 342,
	343, 344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366,
	740, 0, 348, 349, 1311, 0, 1292, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378,
	379, 380, 381, 1328, 382, 384, 1322, 1321, 1241, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 1313, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 1247, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 1336, 1337, 418, 1260, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 1320, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 1333, 1334, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 1343, 0, 1270, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1306, 1307, 1310, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 1315, 1316, 0, 1276, 0, 462, 463,
	465, 1350, 1308, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 1344, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 1299,
	1298, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 1238, 316, 1357, 537, 538, 539, 540, 1261,
	1309, 541, 1323, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 1338, 555, 556, 1248, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 1339, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 1319, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	1249, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 1302, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 1317, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 1364, 669, 670,
	671, 672, 1340, 676, 677, 678, 679, 0, 680, 681,
	1235, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 1329, 1330, 1331, 1332, 0,
	702, 0, 691, 693, 694, 695, 696, 1341, 697, 1342,
	1259, 698, 699, 700, 701, 692, 703, 704, 0, 1242,
	705, 706, 708, 710, 711, 707, 709, 712, 1303, 713,
	0, 0, 714, 715, 716, 781, 1326, 1363, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 0, 1232, 1233, 0, 0, 0, 0, 0, 0,
	2095, 0, 1265, 0, 0, 0, 1263, 1281, 1253, 1254,
	1255, 1251, 1252, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 2754, 325, 326, 0, 0, 0, 0, 0,
	1305, 1269, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 1318, 0,
	338, 1325, 339, 1324, 0, 1335, 340, 341, 342, 343,
	344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 1328, 382, 384, 1322, 1321, 1241, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 1313, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 1247, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 1260, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 1320, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	1333, 1334, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 1270, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 1315, 1316, 0, 1276, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1238, 316, 1357, 537, 538, 539, 540, 1261, 1309,
	541, 1323, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 1248, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 1319, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 1249,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 1317, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 1364, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 1235,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 1329, 1330, 1331, 1332, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 1259,
	698, 699, 700, 701, 692, 703, 704, 0, 1242, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 1326, 1363, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1239,
	0, 0, 0, 0, 2715, 0, 1281, 1253, 1254, 1255,
	1251, 1252, 1264, 0, 1234, 0, 0, 0, 0, 0,
	0, 1232, 1233, 317, 318, 320, 319, 321, 322, 323,
	324, 1265, 325, 326, 0, 1263, 0, 0, 0, 1305,
	1269, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 1318, 0, 338,
	1325, 339, 1324, 0, 1335, 340, 341, 342, 343, 344,
	345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0,
	348, 349, 1311, 0, 1292, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 1295,
	1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380,
	381, 1328, 382, 384, 1322, 1321, 1241, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 1247, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 1336,
	1337, 418, 1260, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 1320, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 1333,
	1334, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 1343, 0, 1270, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1306, 1307, 1310, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 1315, 1316, 0, 1276, 0, 462, 463, 465, 1350,
	1308, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 1344, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 1299, 1298, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	1238, 316, 1357, 537, 538, 539, 540, 1261, 1309, 541,
	1323, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 1338, 555, 556, 1248, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 1339, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 1319, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 1249, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 1302, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	1317, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 1364, 669, 670, 671, 672,
	1340, 676, 677, 678, 679, 0, 680, 681, 1235, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 1329, 1330, 1331, 1332, 0, 702, 0,
	691, 693, 694, 695, 696, 1341, 697, 1342, 1259, 698,
	699, 700, 701, 692, 703, 704, 0, 1242, 705, 706,
	708, 710, 711, 707, 709, 712, 1303, 713, 0, 0,
	714, 715, 716, 781, 1326, 1363, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 1239, 0,
	0, 0, 0, 2685, 0, 1281, 1253, 1254, 1255, 1251,
	1252, 1264, 0, 1234, 0, 0, 0, 0, 0, 0,
	1232, 1233, 317, 318, 320, 319, 321, 322, 323, 324,
	1265, 325, 326, 0, 1263, 0, 0, 0, 1305, 1269,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 1318, 0, 338, 1325,
	339, 1324, 0, 1335, 340, 341, 342, 343, 344, 345,
	346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348,
	349, 1311, 0, 1292, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 1295, 1293,
	1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380, 381,
	1328, 382, 384, 1322, 1321, 1241, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 1313, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 1247, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 1336, 1337,
	418, 1260, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 1320, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 1333, 1334,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 1343, 0, 1270, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 1306, 1307, 1310, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	1315, 1316, 0, 1276, 0, 462, 463, 465, 1350, 1308,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 1344, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 1299, 1298, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 1238,
	316, 1357, 537, 538, 539, 540, 1261, 1309, 541, 1323,
	544, 545, 0, 0, 546, 0, 547, 0, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	1338, 555, 556, 1248, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 1339, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 1319, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 1249, 622, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 1302, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 1317,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 1364, 669, 670, 671, 672, 1340,
	676, 677, 678, 679, 0, 680, 681, 1235, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 1329, 1330, 1331, 1332, 0, 702, 0, 691,
	693, 694, 695, 696, 1341, 697, 1342, 1259, 698, 699,
	700, 701, 692, 703, 704, 0, 1242, 705, 706, 708,
	710, 711, 707, 709, 712, 1303, 713, 0, 0, 714,
	715, 716, 781, 1326, 1363, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 1239, 0, 0,
	0, 0, 1927, 0, 1281, 1253, 1254, 1255, 1251, 1252,
	1264, 0, 1234, 0, 0, 0, 0, 0, 0, 1232,
	1233, 317, 318, 320, 319, 321, 322, 323, 324, 1265,
	325, 326, 0, 1263, 0, 0, 0, 1305, 1269, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 1318, 0, 338, 1325, 339,
	1324, 0, 1335, 340, 341, 342, 343, 344, 345, 346,
	1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348, 349,
	1311, 0, 1292, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 1295, 1293, 1294,
	1301, 1297, 1296, 1300, 377, 378, 379, 380, 381, 1328,
	382, 384, 1322, 1321, 1241, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 1247, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 1336, 1337, 418,
	1260, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	1320, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 1333, 1334, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	1343, 0, 1270, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1306, 1307, 1310, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 1315,
	1316, 0, 1276, 0, 462, 463, 465, 1350, 1308, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 1344, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 1299, 1298, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 1238, 316,
	1357, 537, 538, 539, 540, 1261, 1309, 541, 1323, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 1338,
	555, 556, 1248, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 1339, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 1319, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 1249, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1302, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 1317, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 1364, 669, 670, 671, 672, 1340, 676,
	677, 678, 679, 0, 680, 681, 1235, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 1329, 1330, 1331, 1332, 0, 702, 0, 691, 693,
	694, 695, 696, 1341, 697, 1342, 1259, 698, 699, 700,
	701, 692, 703, 704, 0, 1242, 705, 706, 708, 710,
	711, 707, 709, 712, 1303, 713, 0, 0, 714, 715,
	716, 781, 1326, 1363, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 1239, 0, 0, 0,
	0, 1855, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264,
	0, 1234, 0, 0, 0, 0, 0, 0, 1232, 1233,
	317, 318, 320, 319, 321, 322, 323, 324, 1265, 325,
	326, 0, 1263, 0, 0, 0, 1305, 1269, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 1318, 0, 338, 1325, 339, 1324,
	0, 1335, 340, 341, 342, 343, 344, 345, 346, 1271,
	1304, 1236, 347, 1365, 1366, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 1328, 382,
	384, 1322, 1321, 1241, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	1313, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 1247, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 1260,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 1320,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 1333, 1334, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 1270, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 1315, 1316,
	0, 1276, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 1238, 316, 1357,
	537, 538, 539, 540, 1261, 1309, 541, 1323, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 1248, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 1319, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 1249, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 1317, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 1364, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 1235, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	1329, 1330, 1331, 1332, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 1259, 698, 699, 700, 701,
	692, 703, 704, 0, 1242, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 1326, 1363, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1239, 0, 0, 0, 0,
	1850, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0,
	1234, 0, 0, 0, 0, 0, 0, 1232, 1233, 317,
	318, 320, 319, 321, 322, 323, 324, 1265, 325, 326,
	0, 1263, 0, 0, 0, 1305, 1269, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 1318, 0, 338, 1325, 339, 1324, 0,
	1335, 340, 341, 342, 343, 344, 345, 346, 1271, 1304,
	1236, 347, 1365, 1366, 740, 0, 348, 349, 1311, 0,
	1292, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297,
	1296, 1300, 377, 378, 379, 380, 381, 1328, 382, 384,
	1322, 1321, 1241, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 1313,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 1247, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 1336, 1337, 418, 1260, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 1320, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 1333, 1334, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 1343, 0,
	1270, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1306, 1307, 1310, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 1315, 1316, 0,
	1276, 0, 462, 463, 465, 1350, 1308, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 1344,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 1299, 1298, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 1238, 316, 1357, 537,
	538, 539, 540, 1261, 1309, 541, 1323, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 1338, 555, 556,
	1248, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 1339, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	1319, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 1249, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1302, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 1317, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 1364, 669, 670, 671, 672, 1340, 676, 677, 678,
	679, 0, 680, 681, 1235, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 1329,
	1330, 1331, 1332, 0, 702, 0, 691, 693, 694, 695,
	696, 1341, 697, 1342, 1259, 698, 699, 700, 701, 692,
	703, 704, 0, 1242, 705, 706, 708, 710, 711, 707,
	709, 712, 1303, 713, 0, 0, 714, 715, 716, 781,
	1326, 1363, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 1239, 0, 0, 0, 0, 1836,
	0, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 1234,
	0, 0, 0, 0, 0, 0, 1232, 1233, 317, 318,
	320, 319, 321, 322, 323, 324, 1265, 325, 326, 0,
	1263, 0, 0, 0, 1305, 1269, 0, 0, 327, 0,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 1318, 0, 338, 1325, 339, 1324, 0, 1335,
	340, 341, 342, 343, 344, 345, 346, 1271, 1304, 1236,
	347, 1365, 1366, 740, 0, 348, 349, 1311, 0, 1292,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296,
	1300, 377, 378, 379, 380, 381, 1328, 382, 384, 1322,
	1321, 1241, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 1313, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 1247, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 1336, 1337, 418, 1260, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 1320, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 1333, 1334, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 1343, 0, 1270,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 1306,
	1307, 1310, 542, 1349, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	0, 1348, 755, 460, 543, 461, 1315, 1316, 0, 1276,
	0, 462, 463, 465, 1350, 1308, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 1344, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 1299, 1298, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1238, 316, 1357, 537, 538,
	539, 540, 1261, 1309, 541, 1323, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 1358, 554, 1359, 1338, 555, 556, 1248,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 1339, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 1319,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 1249, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 1302,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 1317, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	1364, 669, 670, 671, 672, 1340, 676, 677, 678, 679,
	0, 680, 681, 1235, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 1329, 1330,
	1331, 1332, 0, 702, 0, 691, 693, 694, 695, 696,
	1341, 697, 1342, 1259, 698, 699, 700, 701, 692, 703,
	704, 0, 1242, 705, 706, 708, 710, 711, 707, 709,
	712, 1303, 713, 0, 0, 714, 715, 716, 781, 1326,
	1363, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 1239, 0, 0, 0, 0, 1831, 0,
	1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 1234, 0,
	0, 0, 0, 0, 0, 1232, 1233, 317, 318, 320,
	319, 321, 322, 323, 324, 1265, 325, 326, 0, 1263,
	0, 0, 0, 1305, 1269, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 1318, 0, 338, 1325, 339, 1324, 0, 1335, 340,
	341, 342, 343, 344, 345, 346, 1271, 1304, 1236, 347,
	1365, 1366, 740, 0, 348, 349, 1311, 0, 1292, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300,
	377, 378, 379, 380, 381, 1328, 382, 384, 1322, 1321,
	1241, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 1313, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	1247, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 1336, 1337, 418, 1260, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 1320, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 1333, 1334, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 1343, 0, 1270, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1306, 1307,
	1310, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 1315, 1316, 0, 1276, 0,
	462, 463, 465, 1350, 1308, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 1344, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 1299, 1298, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 1238, 316, 1357, 537, 538, 539,
	540, 1261, 1309, 541, 1323, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 1338, 555, 556, 1248, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	1339, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 1319, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 1249, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 1302, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 1317, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 1364,
	669, 670, 671, 672, 1340, 676, 677, 678, 679, 0,
	680, 681, 1235, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 1329, 1330, 1331,
	1332, 0, 702, 0, 691, 693, 694, 695, 696, 1341,
	697, 1342, 1259, 698, 699, 700, 701, 692, 703, 704,
	0, 1242, 705, 706, 708, 710, 711, 707, 709, 712,
	1303, 713, 0, 0, 714, 715, 716, 781, 1326, 1363,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 1239, 0, 0, 0, 0, 1737, 0, 1281,
	1253, 1254, 1255, 1251, 1252, 1264, 0, 1234, 0, 0,
	0, 0, 0, 0, 1232, 1233, 317, 318, 320, 319,
	321, 322, 323, 324, 1265, 325, 326, 0, 1263, 0,
	0, 0, 1305, 1269, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	1318, 0, 338, 1325, 339, 1324, 0, 1335, 340, 341,
	342, 343, 344, 345, 346, 1271, 1304, 1236, 347, 1365,
	1366, 740, 0, 348, 349, 1311, 0, 1292, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377,
	378, 379, 380, 381, 1328, 382, 384, 1322, 1321, 1241,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 1313, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 1247,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 1336, 1337, 418, 1260, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 1320, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 1333, 1334, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 1343, 0, 1270, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 1736, 1307, 1310,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 1315, 1316, 0, 1276, 0, 462,
	463, 465, 1350, 1308, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 1344, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	1299, 1298, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 1238, 316, 1357, 537, 538, 539, 540,
	1261, 1309, 541, 1323, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 1338, 555, 556, 1248, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 1339,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 1319, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 1249, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 1302, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 1317, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 1364, 669,
	670, 671, 672, 1340, 676, 677, 678, 679, 0, 680,
	681, 1235, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 1329, 1330, 1331, 1332,
	0, 702, 0, 691, 693, 694, 695, 696, 1341, 697,
	1342, 1259, 698, 699, 700, 701, 692, 703, 704, 0,
	1242, 705, 706, 708, 710, 711, 707, 709, 712, 1303,
	713, 0, 0, 714, 715, 716, 781, 1326, 1363, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 0, 0, 0, 0, 727, 728, 785, 729, 730,
	731, 1239, 0, 0, 0, 0, 1731, 0, 1281, 1253,
	1254, 1255, 1251, 1252, 1264, 0, 1234, 0, 0, 0,
	0, 0, 0, 1232, 1233, 317, 318, 320, 319, 321,
	322, 323, 324, 1265, 325, 326, 0, 1263, 0, 0,
	0, 1305, 1269, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 1318,
	0, 338, 1325, 339, 1324, 0, 1335, 340, 341, 342,
	343, 344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366,
	740, 0, 348, 349, 1311, 0, 1292, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378,
	379, 380, 381, 1328, 382, 384, 1322, 1321, 1241, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 1313, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 1247, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 1336, 1337, 418, 1260, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 1320, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 1333, 1334, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 1343, 0, 1270, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1730, 1307, 1310, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 1315, 1316, 0, 1276, 0, 462, 463,
	465, 1350, 1308, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 1344, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 1299,
	1298, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 1238, 316, 1357, 537, 538, 539, 540, 1261,
	1309, 541, 1323, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 1338, 555, 556, 1248, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 1339, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 1319, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	1249, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 1302, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 1317, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 1364, 669, 670,
	671, 672, 1340, 676, 677, 678, 679, 0, 680, 681,
	1235, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 1329, 1330, 1331, 1332, 0,
	702, 0, 691, 693, 694, 695, 696, 1341, 697, 1342,
	1259, 698, 699, 700, 701, 692, 703, 704, 0, 1242,
	705, 706, 708, 710, 711, 707, 709, 712, 1303, 713,
	0, 0, 714, 715, 716, 781, 1326, 1363, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	1239, 0, 0, 0, 0, 1724, 0, 1281, 1253, 1254,
	1255, 1251, 1252, 1264, 0, 1234, 0, 0, 0, 0,
	0, 0, 1232, 1233, 317, 318, 320, 319, 321, 322,
	323, 324, 1265, 325, 326, 0, 1263, 0, 0, 0,
	1305, 1269, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 1318, 0,
	338, 1325, 339, 1324, 0, 1335, 340, 341, 342, 343,
	344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 1328, 382, 384, 1322, 1321, 1241, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 1313, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 1247, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 1260, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 1320, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	1333, 1334, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 1270, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 1315, 1316, 0, 1276, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1238, 316, 1357, 537, 538, 539, 540, 1261, 1309,
	541, 1323, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 1248, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 1319, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 1249,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 1317, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 1364, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 1235,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 1329, 1330, 1331, 1332, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 1259,
	698, 699, 700, 701, 692, 703, 704, 0, 1242, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 1326, 1363, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1239,
	0, 0, 0, 0, 1697, 0, 1281, 1253, 1254, 1255,
	1251, 1252, 1264, 0, 1234, 0, 0, 0, 0, 0,
	0, 1232, 1233, 317, 318, 320, 319, 321, 322, 323,
	324, 1265, 325, 326, 0, 1263, 0, 0, 0, 1305,
	1269, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 1318, 0, 338,
	1325, 339, 1324, 0, 1335, 340, 341, 342, 343, 344,
	345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0,
	348, 349, 1311, 0, 1292, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 1295,
	1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380,
	381, 1328, 382, 384, 1322, 1321, 1241, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 1247, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 1336,
	1337, 418, 1260, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 1320, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 1333,
	1334, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 1343, 0, 1270, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1306, 1307, 1310, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 1315, 1316, 0, 1276, 0, 462, 463, 465, 1350,
	1308, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 1344, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 1299, 1298, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	1238, 316, 1357, 537, 538, 539, 540, 1261, 1309, 541,
	1323, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 1338, 555, 556, 1248, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 1339, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 1319, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 1249, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 1302, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	1317, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 1364, 669, 670, 671, 672,
	1340, 676, 677, 678, 679, 0, 680, 681, 1235, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 1329, 1330, 1331, 1332, 0, 702, 0,
	691, 693, 694, 695, 696, 1341, 697, 1342, 1259, 698,
	699, 700, 701, 692, 703, 704, 0, 1242, 705, 706,
	708, 710, 711, 707, 709, 712, 1303, 713, 0, 0,
	714, 715, 716, 781, 1326, 1363, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 1239, 0,
	0, 0, 0, 1668, 0, 1281, 1253, 1254, 1255, 1251,
	1252, 1264, 0, 1234, 0, 0, 0, 0, 0, 0,
	1232, 1233, 317, 318, 320, 319, 321, 322, 323, 324,
	1265, 325, 326, 0, 1263, 0, 0, 0, 1305, 1269,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 1318, 0, 338, 1325,
	339, 1324, 0, 1335, 340, 341, 342, 343, 344, 345,
	346, 1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348,
	349, 1311, 0, 1292, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 1295, 1293,
	1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380, 381,
	1328, 382, 384, 1322, 1321, 1241, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 1313, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 1247, 406, 407, 408, 410,
	412, 409, 1672, 413, 414, 415, 416, 417, 1336, 1337,
	418, 1260, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 1320, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 1333, 1334,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 1343, 0, 1270, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 1306, 1307, 1310, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	1315, 1316, 0, 1276, 0, 462, 463, 465, 1350, 1308,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 1344, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 1299, 1298, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 1238,
	316, 1357, 537, 538, 539, 540, 1261, 1309, 541, 1323,
	544, 545, 0, 0, 546, 0, 547, 0, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	1338, 555, 556, 1248, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 1339, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 1319, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 1673, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 1249, 622, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 1302, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 1317,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 1364, 669, 670, 671, 672, 1340,
	676, 677, 678, 679, 0, 680, 681, 1235, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 1671, 689,
	0, 690, 1329, 1330, 1331, 1332, 0, 702, 0, 691,
	693, 694, 695, 696, 1341, 697, 1342, 1259, 698, 699,
	700, 701, 692, 703, 704, 0, 1242, 705, 706, 708,
	710, 711, 707, 709, 712, 1303, 713, 0, 0, 714,
	715, 716, 781, 1326, 1363, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 1239, 0, 0,
	0, 0, 1498, 0, 1281, 1253, 1254, 1255, 1251, 1252,
	1264, 0, 1234, 0, 0, 0, 0, 0, 0, 1232,
	1233, 317, 318, 320, 319, 321, 322, 323, 324, 1265,
	325, 326, 0, 1263, 0, 0, 0, 1305, 1269, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 1318, 0, 338, 1325, 339,
	1324, 0, 1335, 340, 341, 342, 343, 344, 345, 346,
	1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348, 349,
	1311, 0, 1292, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 1295, 1293, 1294,
	1301, 1297, 1296, 1300, 377, 378, 379, 380, 381, 1328,
	382, 384, 1322, 1321, 1241, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 1247, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 1336, 1337, 418,
	1260, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	1320, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 1333, 1334, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	1343, 0, 1270, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1306, 1307, 1310, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 1315,
	1316, 0, 1276, 0, 462, 463, 465, 1350, 1308, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 1344, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 1299, 1298, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 1238, 316,
	1357, 537, 538, 539, 540, 1261, 1309, 541, 1323, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 1338,
	555, 556, 1248, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 1339, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 1319, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 1249, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1302, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 1317, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 1364, 669, 670, 671, 672, 1340, 676,
	677, 678, 679, 0, 680, 681, 1235, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 1329, 1330, 1331, 1332, 0, 702, 0, 691, 693,
	694, 695, 696, 1341, 697, 1342, 1259, 698, 699, 700,
	701, 692, 703, 704, 0, 1242, 705, 706, 708, 710,
	711, 707, 709, 712, 1303, 713, 0, 0, 714, 715,
	716, 781, 1326, 1363, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 1239, 0, 0, 0,
	0, 0, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264,
	0, 1234, 0, 0, 0, 0, 0, 0, 1232, 1233,
	317, 318, 320, 319, 321, 322, 323, 324, 1265, 325,
	326, 0, 1263, 0, 0, 0, 1305, 1269, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 1318, 0, 338, 1325, 339, 1324,
	0, 1335, 340, 341, 342, 343, 344, 345, 346, 1271,
	1304, 1236, 347, 1365, 1366, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 1328, 382,
	384, 1322, 1321, 1241, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	1313, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 1247, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 1260,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 1320,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 1333, 1334, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 1270, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 1315, 1316,
	0, 1276, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 1238, 316, 1357,
	537, 538, 539, 540, 1261, 1309, 541, 1323, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 1248, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 1319, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 1249, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 1317, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 1364, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 1235, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	1329, 1330, 1331, 1332, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 1259, 698, 699, 700, 701,
	692, 703, 704, 0, 1242, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 1326, 1363, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1239, 0, 0, 0, 0,
	0, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0,
	1234, 0, 0, 0, 0, 0, 0, 1232, 1233, 317,
	318, 320, 319, 321, 322, 323, 324, 1265, 325, 326,
	0, 1263, 0, 0, 0, 1305, 1269, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 1318, 0, 338, 1325, 339, 1324, 0,
	1335, 340, 341, 342, 343, 344, 345, 346, 1271, 1304,
	1236, 347, 1365, 1366, 740, 0, 348, 349, 1311, 0,
	1292, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 5391, 1295, 1293, 1294, 1301, 1297,
	1296, 1300, 377, 378, 379, 380, 381, 1328, 382, 384,
	1322, 1321, 1241, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 1313,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 1247, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 1336, 1337, 418, 1260, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 1320, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 1333, 1334, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 1343, 0,
	1270, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1306, 1307, 1310, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 1315, 1316, 0,
	1276, 0, 462, 463, 465, 1350, 1308, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 1344,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 1299, 1298, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 1238, 316, 1357, 537,
	538, 539, 540, 1261, 1309, 541, 1323, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 1338, 555, 556,
	1248, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 1339, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	1319, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 1249, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1302, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 1317, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 1364, 669, 670, 671, 672, 1340, 676, 677, 678,
	679, 0, 680, 681, 1235, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 1329,
	1330, 1331, 1332, 0, 702, 0, 691, 693, 694, 695,
	696, 1341, 697, 1342, 1259, 698, 699, 700, 701, 692,
	5390, 704, 0, 1242, 705, 706, 708, 710, 711, 707,
	709, 712, 1303, 713, 0, 0, 714, 715, 716, 781,
	1326, 1363, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 1239, 0, 0, 0, 0, 0,
	0, 1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 1234,
	0, 0, 0, 0, 0, 0, 1232, 1233, 317, 318,
	320, 319, 321, 322, 323, 324, 1265, 325, 326, 0,
	1263, 0, 0, 0, 1305, 1269, 0, 0, 327, 0,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 5389, 1318, 0, 338, 1325, 339, 1324, 0, 1335,
	340, 341, 342, 343, 344, 345, 346, 1271, 1304, 1236,
	347, 1365, 1366, 740, 0, 348, 349, 1311, 0, 1292,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 5391, 1295, 1293, 1294, 1301, 1297, 1296,
	1300, 377, 378, 379, 380, 381, 1328, 382, 384, 1322,
	1321, 1241, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 1313, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 1247, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 1336, 1337, 418, 1260, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 1320, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 1333, 1334, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 1343, 0, 1270,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 1306,
	1307, 1310, 542, 1349, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	0, 1348, 755, 460, 543, 461, 1315, 1316, 0, 1276,
	0, 462, 463, 465, 1350, 1308, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 1344, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 1299, 1298, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 1238, 316, 1357, 537, 538,
	539, 540, 1261, 1309, 541, 1323, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 1358, 554, 1359, 1338, 555, 556, 1248,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 1339, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 1319,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 1249, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 1302,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 1317, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	1364, 669, 670, 671, 672, 1340, 676, 677, 678, 679,
	0, 680, 681, 1235, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 1329, 1330,
	1331, 1332, 0, 702, 0, 691, 693, 694, 695, 696,
	1341, 697, 1342, 1259, 698, 699, 700, 701, 692, 5390,
	704, 0, 1242, 705, 706, 708, 710, 711, 707, 709,
	712, 1303, 713, 0, 0, 714, 715, 716, 781, 1326,
	1363, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 1239, 0, 0, 0, 0, 0, 0,
	1281, 1253, 1254, 1255, 1251, 1252, 1264, 0, 1234, 0,
	0, 0, 0, 0, 0, 1232, 1233, 317, 318, 320,
	319, 321, 322, 323, 324, 1265, 325, 326, 0, 1263,
	0, 0, 0, 1305, 1269, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 1318, 0, 338, 1325, 339, 1324, 0, 1335, 340,
	341, 342, 343, 344, 345, 346, 1271, 1304, 1236, 347,
	1365, 1366, 740, 0, 348, 349, 1311, 0, 1292, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 4971, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300,
	377, 378, 379, 380, 381, 1328, 382, 384, 1322, 1321,
	1241, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 1313, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	1247, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 1336, 1337, 418, 1260, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 1320, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 1333, 1334, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 1343, 0, 4972, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1306, 1307,
	1310, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 1315, 1316, 0, 1276, 0,
	462, 463, 465, 1350, 1308, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 1344, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 1299, 1298, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 1238, 316, 1357, 537, 538, 539,
	540, 1261, 1309, 541, 1323, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 1338, 555, 556, 1248, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	1339, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 1319, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	4970, 621, 1249, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 1302, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 1317, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 1364,
	669, 670, 671, 672, 1340, 676, 677, 678, 679, 0,
	680, 681, 1235, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 1329, 1330, 1331,
	1332, 0, 702, 0, 691, 693, 694, 695, 696, 1341,
	697, 1342, 1259, 698, 699, 700, 701, 692, 703, 704,
	0, 1242, 705, 706, 708, 710, 711, 707, 709, 712,
	1303, 713, 0, 0, 714, 715, 716, 781, 1326, 1363,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 1239, 0, 0, 0, 0, 0, 0, 1281,
	1253, 1254, 1255, 3606, 3607, 1264, 0, 1234, 0, 0,
	0, 0, 0, 0, 1232, 1233, 317, 318, 320, 319,
	321, 322, 323, 324, 1265, 325, 326, 0, 1263, 0,
	0, 0, 1305, 1269, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	1318, 0, 338, 1325, 339, 1324, 0, 1335, 340, 341,
	342, 343, 344, 345, 346, 1271, 1304, 1236, 347, 1365,
	1366, 740, 0, 348, 349, 1311, 0, 1292, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377,
	378, 379, 380, 381, 1328, 382, 384, 1322, 1321, 1241,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 1313, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 1247,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 1336, 1337, 418, 1260, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 1320, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 1333, 1334, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 1343, 0, 1270, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 1306, 1307, 1310,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 1315, 1316, 0, 1276, 0, 462,
	463, 465, 1350, 1308, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 1344, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	1299, 1298, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 1238, 316, 1357, 537, 538, 539, 540,
	1261, 1309, 541, 1323, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 1338, 555, 556, 1248, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 1339,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 1319, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 1249, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 1302, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 1317, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 1364, 669,
	670, 671, 672, 1340, 676, 677, 678, 679, 0, 680,
	681, 1235, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 1329, 1330, 1331, 1332,
	0, 702, 0, 691, 693, 694, 695, 696, 1341, 697,
	1342, 1259, 698, 699, 700, 701, 692, 703, 704, 0,
	1242, 705, 706, 708, 710, 711, 707, 709, 712, 1303,
	713, 0, 0, 714, 715, 716, 781, 1326, 1363, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 0, 0, 0, 0, 727, 728, 785, 729, 730,
	731, 1239, 0, 0, 0, 0, 0, 0, 1281, 1253,
	1254, 1255, 3604, 3605, 1264, 0, 1234, 0, 0, 0,
	0, 0, 0, 1232, 1233, 317, 318, 320, 319, 321,
	322, 323, 324, 1265, 325, 326, 0, 1263, 0, 0,
	0, 1305, 1269, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 1318,
	0, 338, 1325, 339, 1324, 0, 1335, 340, 341, 342,
	343, 344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366,
	740, 0, 348, 349, 1311, 0, 1292, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378,
	379, 380, 381, 1328, 382, 384, 1322, 1321, 1241, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 1313, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 1247, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 1336, 1337, 418, 1260, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 1320, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 1333, 1334, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 1343, 0, 1270, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1306, 1307, 1310, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 1315, 1316, 0, 1276, 0, 462, 463,
	465, 1350, 1308, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 1344, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 1299,
	1298, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 1238, 316, 1357, 537, 538, 539, 540, 1261,
	1309, 541, 1323, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 1338, 555, 556, 1248, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 1339, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 1319, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	1249, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 1302, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 1317, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 1364, 669, 670,
	671, 672, 1340, 676, 677, 678, 679, 0, 680, 681,
	1235, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 1329, 1330, 1331, 1332, 0,
	702, 0, 691, 693, 694, 695, 696, 1341, 697, 1342,
	1259, 698, 699, 700, 701, 692, 703, 704, 0, 1242,
	705, 706, 708, 710, 711, 707, 709, 712, 1303, 713,
	0, 0, 714, 715, 716, 781, 1326, 1363, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	1239, 0, 0, 0, 0, 0, 0, 1281, 1253, 1254,
	1255, 1251, 1252, 1264, 0, 1234, 0, 0, 0, 0,
	0, 0, 1232, 1233, 317, 318, 320, 319, 321, 322,
	323, 324, 1265, 325, 326, 0, 1263, 0, 0, 0,
	1305, 1269, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 1318, 0,
	338, 1325, 339, 1324, 0, 1335, 340, 341, 342, 343,
	344, 345, 346, 1271, 1304, 1236, 347, 1365, 1366, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 1328, 382, 384, 1322, 1321, 1241, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 1313, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 1247, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 1260, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 1320, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	1333, 1334, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 1270, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 1315, 1316, 0, 1276, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 1238, 316, 1357, 537, 538, 539, 540, 1261, 1309,
	541, 1323, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 1248, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 1319, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 1249,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 1317, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 1364, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 1235,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 1329, 1330, 1331, 1332, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 1259,
	698, 699, 700, 701, 692, 703, 704, 0, 1242, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 1326, 1363, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1239,
	0, 0, 0, 0, 0, 0, 1281, 1253, 1254, 1255,
	1251, 1252, 1264, 0, 1234, 0, 0, 0, 0, 0,
	0, 2762, 2763, 317, 318, 320, 319, 321, 322, 323,
	324, 1265, 325, 326, 0, 1263, 0, 0, 0, 1305,
	1269, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 1318, 0, 338,
	1325, 339, 1324, 0, 1335, 340, 341, 342, 343, 344,
	345, 346, 1271, 1304, 0, 347, 1365, 1366, 740, 0,
	348, 349, 1311, 0, 1292, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 1295,
	1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380,
	381, 1328, 382, 384, 1322, 1321, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 1247, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 1336,
	1337, 418, 1260, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 1320, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 1333,
	1334, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 1343, 0, 1270, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1306, 1307, 1310, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 1315, 1316, 0, 1276, 0, 462, 463, 465, 1350,
	1308, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 1344, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 1299, 1298, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	0, 316, 1357, 537, 538, 539, 540, 1261, 1309, 541,
	1323, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 1338, 555, 556, 1248, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 1339, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 1319, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 1249, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 1302, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	1317, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 1364, 669, 670, 671, 672,
	1340, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 1329, 1330, 1331, 1332, 0, 702, 0,
	691, 693, 694, 695, 696, 1341, 697, 1342, 1259, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 1303, 713, 0, 0,
	714, 715, 716, 781, 1326, 1363, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 1281, 1253, 1254, 1255, 1251,
	1252, 1264, 0, 3023, 0, 0, 0, 0, 0, 0,
	3021, 3022, 317, 318, 320, 319, 321, 322, 323, 324,
	1265, 325, 326, 0, 1263, 0, 0, 0, 1305, 1269,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 1318, 0, 338, 1325,
	339, 1324, 0, 1335, 340, 341, 342, 343, 344, 345,
	346, 1271, 1304, 0, 347, 1365, 1366, 740, 0, 348,
	349, 1311, 0, 1292, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 1295, 1293,
	1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380, 381,
	1328, 382, 384, 1322, 1321, 0, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 1313, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 1247, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 1336, 1337,
	418, 1260, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 1320, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 1333, 1334,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 1343, 0, 1270, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 1306, 1307, 1310, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	1315, 1316, 0, 1276, 0, 462, 463, 465, 1350, 1308,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 1344, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 1299, 1298, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 0,
	316, 1357, 537, 538, 539, 540, 1261, 1309, 541, 1323,
	544, 545, 0, 0, 546, 0, 547, 0, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	1338, 555, 556, 548, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 1339, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 1319, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 3599, 3600, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 1302, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 1317,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 1364, 669, 670, 671, 672, 1340,
	676, 677, 678, 679, 0, 680, 681, 0, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 1329, 1330, 1331, 1332, 0, 702, 0, 691,
	693, 694, 695, 696, 1341, 697, 1342, 1259, 698, 699,
	700, 701, 692, 703, 704, 0, 0, 705, 706, 708,
	710, 711, 707, 709, 712, 1303, 713, 0, 0, 714,
	715, 716, 781, 1326, 1363, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 0, 0, 0,
	0, 0, 0, 0, 1281, 1253, 1254, 1255, 1251, 1252,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	2358, 317, 318, 320, 319, 321, 322, 323, 324, 1265,
	325, 326, 0, 1263, 0, 0, 0, 1305, 1269, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 0, 1318, 0, 338, 1325, 339,
	1324, 0, 1335, 340, 341, 342, 343, 344, 345, 346,
	1271, 1304, 1236, 347, 1365, 1366, 740, 0, 348, 349,
	1311, 0, 1292, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 5391, 1295, 1293, 1294,
	1301, 1297, 1296, 1300, 377, 378, 379, 380, 381, 1328,
	382, 384, 1322, 1321, 1241, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 1247, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 1336, 1337, 418,
	1260, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	1320, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 1333, 1334, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	1343, 0, 1270, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1306, 1307, 1310, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 1315,
	1316, 0, 1276, 0, 462, 463, 465, 0, 1308, 0,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 1344, 479, 1353, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 1299, 1298, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 1238, 316,
	0, 537, 538, 539, 540, 1261, 1309, 541, 1323, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 1338,
	555, 556, 1248, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 1339, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 1319, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 1249, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1302, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 1317, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 1364, 669, 670, 671, 672, 1340, 676,
	677, 678, 679, 0, 680, 681, 1235, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 1329, 1330, 1331, 1332, 0, 702, 0, 691, 693,
	694, 695, 696, 1341, 697, 1342, 1259, 698, 699, 700,
	701, 692, 5390, 704, 0, 1242, 705, 706, 708, 710,
	711, 707, 709, 712, 1303, 713, 0, 0, 714, 715,
	716, 781, 1326, 1363, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 3042, 0, 1281, 1253, 1254, 1255, 1251, 1252, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 1233,
	317, 318, 320, 319, 321, 322, 323, 324, 1265, 325,
	326, 0, 1263, 0, 0, 0, 1305, 1269, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 1318, 0, 338, 1325, 339, 1324,
	0, 1335, 340, 341, 342, 343, 344, 345, 346, 0,
	1304, 0, 347, 1365, 1366, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 1328, 382,
	384, 1322, 1321, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	1313, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 1260,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 1320,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 1333, 1334, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 1270, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 1315, 1316,
	0, 1276, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 0, 316, 1357,
	537, 538, 539, 540, 1261, 1309, 541, 1323, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 1319, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 1249, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 1317, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 1364, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	1329, 1330, 1331, 1332, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 1259, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 1326, 1363, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 0, 0, 1699, 0, 1281,
	1253, 1254, 1255, 1251, 1252, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 320, 319,
	321, 322, 323, 324, 0, 325, 326, 1265, 0, 0,
	0, 1263, 1305, 1269, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	1318, 0, 338, 1325, 339, 1324, 0, 1335, 340, 341,
	342, 343, 344, 345, 346, 0, 1304, 0, 347, 1365,
	1366, 740, 0, 348, 349, 1311, 0, 1292, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377,
	378, 379, 380, 381, 1328, 382, 384, 1322, 1321, 0,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 1313, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 744,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 1336, 1337, 418, 1260, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 1320, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 1333, 1334, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 1343, 0, 1270, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 1306, 1307, 1310,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 1315, 1316, 0, 1276, 0, 462,
	463, 465, 1350, 1308, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 1344, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	1299, 1298, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 0, 316, 1357, 537, 538, 539, 540,
	1261, 1309, 541, 1323, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 1338, 555, 556, 548, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 1339,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 1319, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 1249, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 1302, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 1317, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 1364, 669,
	670, 671, 672, 1340, 676, 677, 678, 679, 0, 680,
	681, 0, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 1329, 1330, 1331, 1332,
	0, 702, 0, 691, 693, 694, 695, 696, 1341, 697,
	1342, 1259, 698, 699, 700, 701, 692, 703, 704, 0,
	0, 705, 706, 708, 710, 711, 707, 709, 712, 1303,
	713, 0, 0, 714, 715, 716, 781, 1326, 1363, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 0, 0, 0, 0, 727, 728, 785, 729, 730,
	731, 1223, 0, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 320, 319, 321, 322, 323, 324, 0, 325,
	326, 0, 0, 1265, 0, 0, 1305, 1263, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	0, 737, 340, 341, 342, 343, 344, 345, 346, 0,
	1304, 0, 347, 738, 739, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	396, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 0,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 751, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 756, 757,
	0, 758, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 1390, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 0, 316, 1357,
	537, 538, 539, 540, 0, 1309, 541, 762, 544, 545,
	0, 0, 546, 0, 547, 0, 1396, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 770, 1398, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 270, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 272, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	775, 776, 777, 778, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 0, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	1820, 782, 783, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 264, 727,
	728, 785, 729, 730, 731, 1404, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 320, 319, 321, 322, 323, 324,
	0, 325, 326, 0, 0, 1394, 0, 2183, 1305, 0,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 734, 0, 338, 735,
	339, 736, 0, 737, 340, 341, 342, 343, 344, 345,
	346, 0, 1304, 0, 347, 738, 739, 740, 0, 348,
	349, 1311, 0, 1292, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 1295, 1293,
	1294, 1301, 1297, 1296, 1300, 377, 378, 379, 380, 381,
	0, 382, 384, 742, 743, 0, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 396, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 744, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 1336, 1337,
	418, 0, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 747, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 748, 749,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 1343, 0, 751, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 1306, 1307, 1310, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	315, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	756, 757, 0, 758, 0, 462, 463, 465, 1350, 1308,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 1390, 476, 478, 477,
	0, 480, 1344, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 1299, 1298, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 0,
	316, 1357, 537, 538, 539, 540, 0, 1309, 541, 762,
	544, 545, 0, 0, 546, 0, 547, 0, 1396, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	1338, 555, 556, 548, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 1339, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 769, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 770, 1398, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 270, 643, 644, 642,
	645, 646, 647, 1302, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 772,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 773, 669, 670, 671, 672, 1340,
	676, 677, 678, 679, 0, 680, 681, 0, 675, 666,
	272, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 775, 776, 777, 778, 0, 702, 0, 691,
	693, 694, 695, 696, 1341, 697, 1342, 0, 698, 699,
	700, 701, 692, 703, 704, 0, 0, 705, 706, 708,
	710, 711, 707, 709, 712, 1303, 713, 0, 0, 714,
	715, 716, 1820, 782, 783, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	264, 727, 728, 785, 729, 730, 731, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3764, 0, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 2183,
	317, 318, 320, 319, 321, 322, 323, 324, 0, 325,
	326, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	0, 737, 340, 341, 342, 343, 344, 345, 346, 0,
	1304, 0, 347, 738, 739, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	396, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 0,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 751, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 756, 757,
	0, 758, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 1390, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 0, 316, 1357,
	537, 538, 539, 540, 0, 1309, 541, 762, 544, 545,
	0, 0, 546, 0, 547, 0, 1396, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 770, 1398, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	775, 776, 777, 778, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 0, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 782, 783, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1386, 0, 1404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 0, 325, 326, 1394, 0, 1392, 0, 0,
	1305, 0, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 734, 0,
	338, 735, 339, 736, 0, 737, 340, 341, 342, 343,
	344, 345, 346, 0, 1304, 0, 347, 738, 739, 740,
	0, 348, 349, 1311, 0, 1292, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	1295, 1293, 1294, 1301, 1297, 1296, 1300, 377, 378, 379,
	380, 381, 0, 382, 384, 742, 743, 0, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 396, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 744, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	1336, 1337, 418, 0, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 747, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	748, 749, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 1343, 0, 751, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 1306, 1307, 1310, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 756, 757, 0, 758, 0, 462, 463, 465,
	1350, 1308, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 1390, 476,
	478, 477, 0, 480, 1344, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 1299, 1298,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 0, 316, 1357, 537, 538, 539, 540, 0, 1309,
	541, 762, 544, 545, 0, 0, 546, 0, 547, 0,
	1396, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 1338, 555, 556, 548, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 1339, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 769, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 770,
	1398, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 1302, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 772, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 773, 669, 670, 671,
	672, 1340, 676, 677, 678, 679, 0, 680, 681, 0,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 775, 776, 777, 778, 0, 702,
	0, 691, 693, 694, 695, 696, 1341, 697, 1342, 0,
	698, 699, 700, 701, 692, 703, 704, 0, 0, 705,
	706, 708, 710, 711, 707, 709, 712, 1303, 713, 0,
	0, 714, 715, 716, 781, 782, 783, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 320, 319,
	321, 322, 323, 324, 0, 325, 326, 0, 0, 1394,
	0, 1392, 1305, 0, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	734, 0, 338, 735, 339, 736, 0, 737, 340, 341,
	342, 343, 344, 345, 346, 0, 1304, 0, 347, 738,
	739, 740, 0, 348, 349, 1311, 0, 1292, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 1295, 1293, 1294, 1301, 1297, 1296, 1300, 377,
	378, 379, 380, 381, 0, 382, 384, 742, 743, 0,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 396, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 744,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 1336, 1337, 418, 0, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 747, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 748, 749, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 1343, 0, 751, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 1306, 1307, 1310,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 756, 757, 0, 758, 0, 462,
	463, 465, 1350, 1308, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	1390, 476, 478, 477, 0, 480, 1344, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	1299, 1298, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 0, 316, 1357, 537, 538, 539, 540,
	0, 1309, 541, 762, 544, 545, 0, 0, 546, 0,
	547, 0, 1396, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 1338, 555, 556, 548, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 1339,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 769, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 770, 1398, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 1302, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 772, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 773, 669,
	670, 671, 672, 1340, 676, 677, 678, 679, 0, 680,
	681, 0, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 775, 776, 777, 778,
	0, 702, 0, 691, 693, 694, 695, 696, 1341, 697,
	1342, 0, 698, 699, 700, 701, 692, 703, 704, 0,
	0, 705, 706, 708, 710, 711, 707, 709, 712, 1303,
	713, 0, 0, 714, 715, 716, 781, 782, 783, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 0, 0, 0, 0, 727, 728, 785, 729, 730,
	731, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	320, 319, 321, 322, 323, 324, 0, 325, 326, 0,
	0, 1394, 0, 1392, 1305, 0, 0, 0, 327, 0,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 0, 737,
	340, 341, 342, 343, 344, 345, 346, 0, 1304, 0,
	347, 738, 739, 740, 0, 348, 349, 1311, 0, 1292,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297, 1296,
	1300, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 0, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 396, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 1336, 1337, 418, 0, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 1343, 0, 751,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 1306,
	1307, 1310, 542, 1349, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 315, 457, 458, 459,
	0, 1348, 755, 460, 543, 461, 756, 757, 0, 758,
	0, 462, 463, 465, 1350, 1308, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 1344, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 1299, 1298, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 0, 316, 1357, 537, 538,
	539, 540, 0, 1309, 541, 762, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 1358, 554, 1359, 1338, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 1339, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 1302,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 1340, 676, 677, 678, 679,
	0, 680, 681, 0, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 775, 776,
	777, 778, 0, 702, 0, 691, 693, 694, 695, 696,
	1341, 697, 1342, 0, 698, 699, 700, 701, 692, 703,
	704, 0, 0, 705, 706, 708, 710, 711, 707, 709,
	712, 1303, 713, 0, 0, 714, 715, 716, 781, 782,
	783, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 320, 319, 321, 322, 323, 324, 0, 325,
	326, 0, 0, 0, 0, 4772, 1305, 0, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	0, 737, 340, 341, 342, 343, 344, 345, 346, 0,
	1304, 0, 347, 738, 739, 740, 0, 348, 349, 1311,
	0, 1292, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301,
	1297, 1296, 1300, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	396, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 1336, 1337, 418, 0,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 1343,
	0, 751, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 1306, 1307, 1310, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 756, 757,
	0, 758, 0, 462, 463, 465, 1350, 1308, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	1344, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 1299, 1298, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 0, 316, 1357,
	537, 538, 539, 540, 0, 1309, 541, 762, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 1338, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 1339, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 770, 1398, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 1302, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 1340, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	775, 776, 777, 778, 0, 702, 0, 691, 693, 694,
	695, 696, 1341, 697, 1342, 0, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 1303, 713, 0, 0, 714, 715, 716,
	781, 782, 783, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 311, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 2868, 2869, 2870, 2887, 2888,
	2889, 0, 317, 318, 320, 319, 321, 322, 323, 324,
	0, 325, 326, 0, 0, 0, 2890, 0, 732, 0,
	0, 0, 327, 0, 328, 329, 330, 2079, 331, 332,
	333, 334, 335, 336, 337, 733, 734, 0, 338, 735,
	339, 736, 0, 737, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 2064, 347, 738, 739, 740, 0, 348,
	349, 741, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 2880, 0, 359, 360, 361, 358, 362,
	0, 363, 2876, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 0, 374, 375, 376, 0, 0,
	0, 0, 0, 0, 0, 377, 378, 379, 380, 381,
	0, 382, 384, 742, 743, 0, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 396, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 744, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 745, 746,
	418, 0, 0, 0, 2881, 2882, 2883, 2884, 419, 420,
	421, 747, 0, 0, 2875, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 0, 428, 429, 430, 748, 749,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 750, 0, 751, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 752, 753, 754, 542, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	0, 457, 458, 459, 0, 0, 755, 460, 543, 461,
	756, 757, 0, 758, 0, 462, 463, 465, 0, 759,
	0, 464, 466, 467, 0, 468, 0, 2885, 2886, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 760, 479, 0, 481, 482, 0, 0, 483,
	484, 485, 486, 487, 488, 491, 0, 0, 489, 490,
	492, 493, 2878, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 0, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 0, 535, 523, 0,
	0, 0, 537, 538, 539, 540, 0, 761, 541, 762,
	544, 545, 0, 0, 546, 0, 547, 0, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 0, 554, 0,
	764, 555, 556, 548, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 767, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 769, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 0, 617, 618, 619, 620, 621, 770, 622, 2879,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 0, 648, 771, 649, 629, 630, 650,
	651, 0, 652, 653, 654, 655, 656, 657, 658, 772,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 773, 669, 670, 671, 672, 774,
	676, 677, 678, 679, 0, 680, 681, 2063, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 775, 776, 777, 778, 0, 702, 0, 691,
	693, 694, 695, 696, 779, 697, 780, 0, 698, 699,
	700, 701, 692, 703, 704, 0, 0, 705, 706, 708,
	710, 711, 707, 709, 712, 0, 713, 0, 0, 714,
	715, 716, 781, 782, 783, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 1689, 2865,
	2866, 2867, 2891, 2877, 2871, 0, 2873, 2874, 2872, 2859,
	2860, 2861, 2862, 2863, 2864, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 1657, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 1350, 759, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 0, 0, 1357, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 270,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 272, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 1820, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 264, 727, 728, 785, 729, 730, 731,
	0, 1817, 265, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 320, 319, 321, 322, 323, 324, 0, 325,
	326, 0, 212, 0, 0, 0, 732, 0, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	0, 737, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 0, 347, 738, 739, 740, 0, 348, 349, 741,
	0, 1657, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	396, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 745, 746, 418, 0,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 750,
	0, 751, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 752, 753, 754, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 0, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 756, 757,
	0, 758, 0, 462, 463, 465, 1350, 759, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	760, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 0, 0, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 0, 0, 1357,
	537, 538, 539, 540, 0, 761, 541, 762, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 764, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 767, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 770, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 270, 643, 644, 642, 645, 646,
	647, 0, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 774, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 272, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	775, 776, 777, 778, 0, 702, 0, 691, 693, 694,
	695, 696, 779, 697, 780, 0, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 0, 713, 0, 0, 714, 715, 716,
	1820, 782, 783, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 264, 727,
	728, 785, 729, 730, 731, 1689, 1688, 265, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 320, 319, 321, 322, 323, 324,
	0, 325, 326, 0, 0, 0, 0, 212, 732, 0,
	0, 0, 327, 0, 328, 329, 330, 1345, 331, 332,
	333, 334, 335, 336, 337, 733, 734, 0, 338, 735,
	339, 736, 0, 737, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 0, 347, 738, 739, 740, 0, 348,
	349, 741, 0, 1657, 0, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 0, 359, 360, 361, 358, 362,
	0, 363, 0, 364, 365, 366, 367, 368, 369, 370,
	0, 371, 372, 373, 1346, 374, 375, 376, 0, 0,
	0, 0, 0, 0, 0, 377, 378, 379, 380, 381,
	0, 382, 384, 742, 743, 0, 387, 389, 383, 385,
	0, 388, 386, 390, 391, 0, 392, 393, 394, 0,
	0, 395, 396, 397, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 744, 406, 407, 408, 410,
	412, 409, 411, 413, 414, 415, 416, 417, 745, 746,
	418, 0, 314, 0, 0, 0, 0, 0, 419, 420,
	421, 747, 0, 0, 0, 422, 0, 423, 424, 425,
	0, 426, 427, 0, 1347, 428, 429, 430, 748, 749,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 0,
	440, 750, 0, 751, 441, 0, 442, 443, 444, 445,
	446, 447, 448, 752, 753, 754, 542, 1349, 449, 450,
	451, 0, 452, 453, 454, 455, 456, 0, 0, 0,
	0, 457, 458, 459, 0, 1348, 755, 460, 543, 461,
	756, 757, 0, 758, 0, 462, 463, 465, 1350, 759,
	1351, 464, 466, 467, 1352, 468, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 0, 476, 478, 477,
	0, 480, 760, 479, 1353, 481, 482, 1354, 0, 483,
	484, 485, 486, 487, 488, 491, 0, 0, 489, 490,
	492, 493, 0, 494, 495, 497, 500, 496, 498, 499,
	501, 514, 515, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 517, 0, 516, 1355, 518,
	519, 520, 521, 522, 529, 531, 532, 527, 528, 530,
	533, 534, 536, 524, 525, 526, 1356, 535, 523, 0,
	0, 1357, 537, 538, 539, 540, 0, 761, 541, 762,
	544, 545, 0, 0, 546, 0, 547, 0, 0, 549,
	550, 551, 0, 0, 552, 553, 763, 1358, 554, 1359,
	764, 555, 556, 548, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 0, 567, 568, 765, 569, 570,
	571, 766, 572, 573, 574, 767, 575, 768, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	586, 587, 588, 769, 589, 590, 592, 591, 593, 0,
	594, 0, 595, 596, 597, 0, 0, 0, 0, 0,
	598, 599, 601, 0, 602, 603, 604, 605, 600, 606,
	607, 608, 609, 610, 611, 0, 613, 614, 612, 615,
	616, 1360, 617, 618, 619, 620, 621, 770, 622, 0,
	623, 624, 632, 633, 634, 625, 626, 628, 635, 627,
	636, 637, 638, 639, 641, 640, 0, 643, 644, 642,
	645, 646, 647, 0, 648, 771, 649, 629, 630, 650,
	651, 1361, 652, 653, 654, 655, 656, 657, 658, 772,
	0, 659, 0, 660, 661, 662, 663, 664, 665, 667,
	631, 668, 673, 674, 773, 669, 670, 671, 672, 774,
	676, 677, 678, 679, 0, 680, 681, 0, 675, 666,
	0, 682, 683, 684, 685, 686, 687, 0, 688, 689,
	0, 690, 775, 776, 777, 778, 0, 702, 0, 691,
	693, 694, 695, 696, 779, 697, 780, 0, 698, 699,
	700, 701, 692, 703, 704, 0, 0, 705, 706, 708,
	710, 711, 707, 709, 712, 0, 713, 0, 0, 714,
	715, 716, 781, 782, 783, 0, 718, 717, 719, 720,
	723, 721, 722, 784, 724, 725, 726, 0, 0, 0,
	0, 727, 728, 785, 729, 730, 731, 1689, 1688, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 0, 325, 326, 0, 0, 0, 0, 1844,
	732, 0, 0, 0, 327, 0, 328, 329, 330, 1345,
	331, 332, 333, 334, 335, 336, 337, 733, 734, 0,
	338, 735, 339, 736, 0, 737, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 0, 347, 738, 739, 740,
	0, 348, 349, 741, 0, 1657, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 1346, 374, 375, 376,
	0, 0, 0, 0, 0, 0, 0, 377, 378, 379,
	380, 381, 0, 382, 384, 742, 743, 0, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 396, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 744, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	745, 746, 418, 0, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 747, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 1347, 428, 429, 430,
	748, 749, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 750, 0, 751, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 752, 753, 754, 542, 1349,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 0, 457, 458, 459, 0, 1348, 755, 460,
	543, 461, 756, 757, 0, 758, 0, 462, 463, 465,
	1350, 759, 1351, 464, 466, 467, 1352, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 760, 479, 1353, 481, 482, 1354,
	0, 483, 484, 485, 486, 487, 488, 491, 0, 0,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	1355, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 1356, 535,
	523, 0, 0, 1357, 537, 538, 539, 540, 0, 761,
	541, 762, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 1358,
	554, 1359, 764, 555, 556, 548, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 767, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 769, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 1360, 617, 618, 619, 620, 621, 770,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 0, 648, 771, 649, 629,
	630, 650, 651, 1361, 652, 653, 654, 655, 656, 657,
	658, 772, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 773, 669, 670, 671,
	672, 774, 676, 677, 678, 679, 0, 680, 681, 0,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 775, 776, 777, 778, 0, 702,
	0, 691, 693, 694, 695, 696, 779, 697, 780, 0,
	698, 699, 700, 701, 692, 703, 704, 0, 0, 705,
	706, 708, 710, 711, 707, 709, 712, 0, 713, 0,
	0, 714, 715, 716, 781, 782, 783, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 0, 0, 727, 728, 785, 729, 730, 731, 1689,
	1688, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 320, 319,
	321, 322, 323, 324, 0, 325, 326, 0, 0, 0,
	0, 4138, 732, 0, 0, 0, 327, 0, 328, 329,
	330, 1345, 331, 332, 333, 334, 335, 336, 337, 733,
	734, 0, 338, 735, 339, 736, 0, 737, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 0, 347, 738,
	739, 740, 0, 348, 349, 741, 0, 1657, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 1346, 374,
	375, 376, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 379, 380, 381, 0, 382, 384, 742, 743, 0,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 396, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 744,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 745, 746, 418, 0, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 747, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 1347, 428,
	429, 430, 748, 749, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 750, 0, 751, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 752, 753, 754,
	542, 1349, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 0, 457, 458, 459, 0, 1348,
	755, 460, 543, 461, 756, 757, 0, 758, 0, 462,
	463, 465, 1350, 759, 1351, 464, 466, 467, 1352, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 760, 479, 1353, 481,
	482, 1354, 0, 483, 484, 485, 486, 487, 488, 491,
	0, 0, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 1355, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	1356, 535, 523, 0, 0, 1357, 537, 538, 539, 540,
	0, 761, 541, 762, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 1358, 554, 1359, 764, 555, 556, 548, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 767,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 769, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 2624, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 1360, 617, 618, 619, 620,
	621, 770, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 0, 648, 771,
	649, 629, 630, 650, 651, 1361, 652, 653, 654, 655,
	656, 657, 658, 772, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 773, 669,
	670, 671, 672, 774, 676, 677, 678, 679, 0, 680,
	681, 0, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 775, 776, 777, 778,
	0, 702, 0, 691, 693, 694, 695, 696, 779, 697,
	780, 0, 698, 699, 700, 701, 692, 703, 704, 0,
	0, 705, 706, 708, 710, 711, 707, 709, 712, 0,
	713, 0, 0, 714, 715, 716, 781, 782, 783, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 0, 0, 0, 0, 727, 728, 785, 729, 730,
	731, 1689, 2529, 0, 0, 0, 0, 2530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	320, 319, 321, 322, 323, 324, 0, 325, 326, 0,
	0, 0, 0, 1844, 732, 0, 0, 0, 327, 0,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 0, 737,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 0,
	347, 738, 739, 740, 0, 348, 349, 741, 0, 1657,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 376, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 0, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 396, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 0, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 750, 0, 751,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 1349, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 0, 457, 458, 459,
	0, 1348, 755, 460, 543, 461, 756, 757, 0, 758,
	0, 462, 463, 465, 1350, 759, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 2528, 478, 477, 0, 480, 760, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 0, 0, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 0, 0, 1357, 537, 538,
	539, 540, 0, 761, 541, 762, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 1358, 554, 1359, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 0,
	648, 771, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	0, 680, 681, 0, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 775, 776,
	777, 778, 0, 702, 0, 691, 693, 694, 695, 696,
	779, 697, 780, 0, 698, 699, 700, 701, 692, 703,
	704, 0, 0, 705, 706, 708, 710, 711, 707, 709,
	712, 0, 713, 0, 0, 714, 715, 716, 781, 782,
	783, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 1689, 1688, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 320, 319, 321, 322, 323, 324, 0, 325,
	326, 0, 0, 0, 0, 1844, 732, 0, 0, 0,
	327, 0, 328, 329, 330, 1345, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	0, 737, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 0, 347, 738, 739, 740, 0, 348, 349, 741,
	0, 1657, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 1346, 374, 375, 376, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	396, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 745, 746, 418, 0,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 1347, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 750,
	0, 751, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 752, 753, 754, 542, 1349, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 0, 457,
	458, 459, 0, 1348, 755, 460, 543, 461, 756, 757,
	0, 758, 0, 462, 463, 465, 1350, 759, 1351, 464,
	466, 467, 1352, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	760, 479, 1353, 481, 482, 1354, 0, 483, 484, 485,
	486, 487, 488, 491, 0, 0, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 1355, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 1356, 535, 523, 0, 0, 1357,
	537, 538, 539, 540, 0, 761, 541, 762, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 1358, 554, 1359, 764, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 767, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 1360,
	617, 618, 619, 620, 621, 770, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 0, 648, 771, 649, 629, 630, 650, 651, 1361,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 774, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	775, 776, 777, 778, 0, 702, 0, 691, 693, 694,
	695, 696, 779, 697, 780, 0, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 0, 713, 0, 0, 714, 715, 716,
	781, 782, 783, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 0, 0, 727,
	728, 785, 729, 730, 731, 1223, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 0, 325, 326, 0, 0, 1826, 0, 0,
	732, 0, 0, 0, 327, 0, 328, 329, 330, 0,
	331, 332, 333, 334, 335, 336, 337, 733, 734, 0,
	338, 735, 339, 736, 0, 737, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 0, 347, 738, 739, 740,
	0, 348, 349, 741, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 0, 0, 0, 0, 0, 0, 377, 378, 379,
	380, 381, 0, 382, 384, 742, 743, 0, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 396, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 744, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	745, 746, 418, 0, 0, 0, 0, 0, 0, 0,
	419, 420, 421, 747, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 0, 428, 429, 430,
	748, 749, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 750, 0, 751, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 752, 753, 754, 542, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 0, 457, 458, 459, 0, 0, 755, 460,
	543, 461, 756, 757, 0, 758, 0, 462, 463, 465,
	0, 759, 0, 464, 466, 467, 0, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 760, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 486, 487, 488, 491, 0, 0,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	0, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 0, 535,
	523, 0, 0, 0, 537, 538, 539, 540, 0, 761,
	541, 762, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 0,
	554, 0, 764, 555, 556, 548, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 767, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 769, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 0, 617, 618, 619, 620, 621, 770,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 270, 643,
	644, 642, 645, 646, 647, 0, 648, 771, 649, 629,
	630, 650, 651, 0, 652, 653, 654, 655, 656, 657,
	658, 772, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 773, 669, 670, 671,
	672, 774, 676, 677, 678, 679, 0, 680, 681, 0,
	675, 666, 272, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 775, 776, 777, 778, 0, 702,
	0, 691, 693, 694, 695, 696, 779, 697, 780, 0,
	698, 699, 700, 701, 692, 703, 704, 0, 0, 705,
	706, 708, 710, 711, 707, 709, 712, 0, 713, 0,
	0, 714, 715, 716, 1820, 782, 783, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 311,
	0, 0, 264, 727, 728, 785, 729, 730, 731, 0,
	0, 265, 0, 0, 0, 0, 317, 318, 320, 319,
	321, 322, 323, 324, 0, 325, 326, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 327, 0, 328, 329,
	330, 212, 331, 332, 333, 334, 335, 336, 337, 733,
	734, 0, 338, 735, 339, 736, 0, 737, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 0, 347, 738,
	739, 740, 0, 348, 349, 741, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 356, 357, 0, 0, 359,
	360, 361, 358, 362, 0, 363, 0, 364, 365, 366,
	367, 368, 369, 370, 0, 371, 372, 373, 0, 374,
	375, 376, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 379, 380, 381, 0, 382, 384, 742, 743, 0,
	387, 389, 383, 385, 0, 388, 386, 390, 391, 0,
	392, 393, 394, 0, 0, 395, 396, 397, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 744,
	406, 407, 408, 410, 412, 409, 411, 413, 414, 415,
	416, 417, 745, 746, 418, 0, 314, 0, 0, 0,
	0, 0, 419, 420, 421, 747, 0, 0, 0, 422,
	0, 423, 424, 425, 0, 426, 427, 0, 0, 428,
	429, 430, 748, 749, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 0, 440, 750, 0, 751, 441, 0,
	442, 443, 444, 445, 446, 447, 448, 752, 753, 754,
	542, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	456, 0, 0, 0, 315, 457, 458, 459, 0, 0,
	755, 460, 543, 461, 756, 757, 0, 758, 0, 462,
	463, 465, 0, 759, 0, 464, 466, 467, 0, 468,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	0, 476, 478, 477, 0, 480, 760, 479, 0, 481,
	482, 0, 0, 483, 484, 485, 486, 487, 488, 491,
	0, 0, 489, 490, 492, 493, 0, 494, 495, 497,
	500, 496, 498, 499, 501, 514, 515, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 517,
	0, 516, 0, 518, 519, 520, 521, 522, 529, 531,
	532, 527, 528, 530, 533, 534, 536, 524, 525, 526,
	0, 535, 523, 0, 316, 0, 537, 538, 539, 540,
	0, 761, 541, 762, 544, 545, 0, 0, 546, 0,
	547, 0, 0, 549, 550, 551, 0, 0, 552, 553,
	763, 0, 554, 0, 764, 555, 556, 548, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 0, 567,
	568, 765, 569, 570, 571, 766, 572, 573, 574, 767,
	575, 768, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 586, 587, 588, 769, 589, 590,
	592, 591, 593, 0, 594, 0, 595, 596, 597, 0,
	0, 0, 0, 0, 598, 599, 601, 0, 602, 603,
	604, 605, 600, 606, 607, 608, 609, 610, 611, 0,
	613, 614, 612, 615, 616, 0, 617, 618, 619, 620,
	621, 770, 622, 0, 623, 624, 632, 633, 634, 625,
	626, 628, 635, 627, 636, 637, 638, 639, 641, 640,
	0, 643, 644, 642, 645, 646, 647, 0, 648, 771,
	649, 629, 630, 650, 651, 0, 652, 653, 654, 655,
	656, 657, 658, 772, 0, 659, 0, 660, 661, 662,
	663, 664, 665, 667, 631, 668, 673, 674, 773, 669,
	670, 671, 672, 774, 676, 677, 678, 679, 0, 680,
	681, 0, 675, 666, 0, 682, 683, 684, 685, 686,
	687, 0, 688, 689, 0, 690, 775, 776, 777, 778,
	0, 702, 0, 691, 693, 694, 695, 696, 779, 697,
	780, 0, 698, 699, 700, 701, 692, 703, 704, 0,
	0, 705, 706, 708, 710, 711, 707, 709, 712, 0,
	713, 0, 0, 714, 715, 716, 781, 782, 783, 0,
	718, 717, 719, 720, 723, 721, 722, 784, 724, 725,
	726, 311, 3376, 0, 0, 727, 728, 785, 729, 730,
	731, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	320, 319, 321, 322, 323, 324, 0, 325, 326, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 327, 0,
	328, 329, 330, 2197, 331, 332, 333, 334, 335, 336,
	337, 733, 734, 0, 338, 735, 339, 736, 0, 737,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 0,
	347, 738, 739, 740, 0, 348, 349, 741, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	0, 374, 375, 376, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 379, 380, 381, 0, 382, 384, 742,
	743, 0, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 396, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 744, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 745, 746, 418, 0, 0, 0,
	0, 0, 0, 0, 419, 420, 421, 747, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	0, 428, 429, 430, 748, 749, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 750, 0, 751,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 752,
	753, 754, 542, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 456, 0, 0, 0, 0, 457, 458, 459,
	0, 0, 755, 460, 543, 461, 756, 757, 0, 758,
	0, 462, 463, 465, 0, 759, 0, 464, 466, 467,
	0, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 760, 479,
	0, 481, 482, 0, 0, 483, 484, 485, 486, 487,
	488, 491, 0, 0, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 0, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 0, 535, 523, 0, 0, 0, 537, 538,
	539, 540, 0, 761, 541, 762, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 763, 0, 554, 0, 764, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 765, 569, 570, 571, 766, 572, 573,
	574, 767, 575, 768, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 769,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 0, 617, 618,
	619, 620, 621, 770, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 0,
	648, 771, 649, 629, 630, 650, 651, 0, 652, 653,
	654, 655, 656, 657, 658, 772, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	773, 669, 670, 671, 672, 774, 676, 677, 678, 679,
	0, 680, 681, 0, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 775, 776,
	777, 778, 0, 702, 0, 691, 693, 694, 695, 696,
	779, 697, 780, 0, 698, 699, 700, 701, 692, 703,
	704, 0, 0, 705, 706, 708, 710, 711, 707, 709,
	712, 0, 713, 0, 0, 714, 715, 716, 781, 782,
	783, 0, 718, 717, 719, 720, 723, 721, 722, 784,
	724, 725, 726, 311, 0, 0, 0, 727, 728, 785,
	729, 730, 731, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 320, 319, 321, 322, 323, 324, 0, 325,
	326, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	327, 0, 328, 329, 330, 5569, 331, 332, 333, 334,
	335, 336, 337, 733, 734, 0, 338, 735, 339, 736,
	0, 737, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 0, 347, 738, 739, 740, 0, 348, 349, 741,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 356,
	357, 0, 0, 359, 360, 361, 358, 362, 0, 363,
	0, 364, 365, 366, 367, 368, 369, 370, 0, 371,
	372, 373, 0, 374, 375, 376, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 379, 380, 381, 0, 382,
	384, 742, 743, 0, 387, 389, 383, 385, 0, 388,
	386, 390, 391, 0, 392, 393, 394, 0, 0, 395,
	396, 397, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 744, 406, 407, 408, 410, 412, 409,
	411, 413, 414, 415, 416, 417, 745, 746, 418, 0,
	314, 0, 0, 0, 0, 0, 419, 420, 421, 747,
	0, 0, 0, 422, 0, 423, 424, 425, 0, 426,
	427, 0, 0, 428, 429, 430, 748, 749, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 0, 440, 750,
	0, 751, 441, 0, 442, 443, 444, 445, 446, 447,
	448, 752, 753, 754, 542, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 456, 0, 0, 0, 315, 457,
	458, 459, 0, 0, 755, 460, 543, 461, 756, 757,
	0, 758, 0, 462, 463, 465, 0, 759, 0, 464,
	466, 467, 0, 468, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 0, 476, 478, 477, 0, 480,
	760, 479, 0, 481, 482, 0, 0, 483, 484, 485,
	486, 487, 488, 491, 0, 0, 489, 490, 492, 493,
	0, 494, 495, 497, 500, 496, 498, 499, 501, 514,
	515, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 517, 0, 516, 0, 518, 519, 520,
	521, 522, 529, 531, 532, 527, 528, 530, 533, 534,
	536, 524, 525, 526, 0, 535, 523, 0, 316, 0,
	537, 538, 539, 540, 0, 761, 541, 762, 544, 545,
	0, 0, 546, 0, 547, 0, 0, 549, 550, 551,
	0, 0, 552, 553, 763, 0, 554, 0, 764, 555,
	556, 548, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 567, 568, 765, 569, 570, 571, 766,
	572, 573, 574, 767, 575, 768, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 586, 587,
	588, 769, 589, 590, 592, 591, 593, 0, 594, 0,
	595, 596, 597, 0, 0, 0, 0, 0, 598, 599,
	601, 0, 602, 603, 604, 605, 600, 606, 607, 608,
	609, 610, 611, 0, 613, 614, 612, 615, 616, 0,
	617, 618, 619, 620, 621, 770, 622, 0, 623, 624,
	632, 633, 634, 625, 626, 628, 635, 627, 636, 637,
	638, 639, 641, 640, 0, 643, 644, 642, 645, 646,
	647, 0, 648, 771, 649, 629, 630, 650, 651, 0,
	652, 653, 654, 655, 656, 657, 658, 772, 0, 659,
	0, 660, 661, 662, 663, 664, 665, 667, 631, 668,
	673, 674, 773, 669, 670, 671, 672, 774, 676, 677,
	678, 679, 0, 680, 681, 0, 675, 666, 0, 682,
	683, 684, 685, 686, 687, 0, 688, 689, 0, 690,
	775, 776, 777, 778, 0, 702, 0, 691, 693, 694,
	695, 696, 779, 697, 780, 0, 698, 699, 700, 701,
	692, 703, 704, 0, 0, 705, 706, 708, 710, 711,
	707, 709, 712, 0, 713, 0, 0, 714, 715, 716,
	781, 782, 783, 0, 718, 717, 719, 720, 723, 721,
	722, 784, 724, 725, 726, 0, 0, 311, 0, 727,
	728, 785, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 320, 319, 321, 322,
	323, 324, 0, 325, 326, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 327, 1814, 328, 329, 330, 0,
	331, 332, 333, 334, 335, 336, 337, 733, 734, 0,
	338, 735, 339, 736, 0, 737, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 0, 347, 738, 739, 740,
	0, 348, 349, 741, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 356, 357, 0, 0, 359, 360, 361,
	358, 362, 0, 363, 0, 364, 365, 366, 367, 368,
	369, 370, 0, 371, 372, 373, 0, 374, 375, 376,
	0, 0, 0, 0, 0, 0, 0, 377, 378, 379,
	380, 381, 0, 382, 384, 742, 743, 0, 387, 389,
	383, 385, 0, 388, 386, 390, 391, 0, 392, 393,
	394, 0, 0, 395, 396, 397, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 744, 406, 407,
	408, 410, 412, 409, 411, 413, 414, 415, 416, 417,
	745, 746, 418, 0, 314, 0, 0, 0, 0, 0,
	419, 420, 421, 747, 0, 0, 0, 422, 0, 423,
	424, 425, 0, 426, 427, 0, 0, 428, 429, 430,
	748, 749, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 0, 440, 750, 0, 751, 441, 0, 442, 443,
	444, 445, 446, 447, 448, 752, 753, 754, 542, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 456, 0,
	0, 0, 315, 457, 458, 459, 0, 0, 755, 460,
	543, 461, 756, 757, 0, 758, 0, 462, 463, 465,
	0, 759, 0, 464, 466, 467, 0, 468, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 0, 476,
	478, 477, 0, 480, 760, 479, 0, 481, 482, 0,
	0, 483, 484, 485, 486, 487, 488, 491, 0, 0,
	489, 490, 492, 493, 0, 494, 495, 497, 500, 496,
	498, 499, 501, 514, 515, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 517, 0, 516,
	0, 518, 519, 520, 521, 522, 529, 531, 532, 527,
	528, 530, 533, 534, 536, 524, 525, 526, 0, 535,
	523, 0, 316, 0, 537, 538, 539, 540, 0, 761,
	541, 762, 544, 545, 0, 0, 546, 0, 547, 0,
	0, 549, 550, 551, 0, 0, 552, 553, 763, 0,
	554, 0, 764, 555, 556, 548, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 0, 567, 568, 765,
	569, 570, 571, 766, 572, 573, 574, 767, 575, 768,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 586, 587, 588, 769, 589, 590, 592, 591,
	593, 0, 594, 0, 595, 596, 597, 0, 0, 0,
	0, 0, 598, 599, 601, 0, 602, 603, 604, 605,
	600, 606, 607, 608, 609, 610, 611, 0, 613, 614,
	612, 615, 616, 0, 617, 618, 619, 620, 621, 770,
	622, 0, 623, 624, 632, 633, 634, 625, 626, 628,
	635, 627, 636, 637, 638, 639, 641, 640, 0, 643,
	644, 642, 645, 646, 647, 0, 648, 771, 649, 629,
	630, 650, 651, 0, 652, 653, 654, 655, 656, 657,
	658, 772, 0, 659, 0, 660, 661, 662, 663, 664,
	665, 667, 631, 668, 673, 674, 773, 669, 670, 671,
	672, 774, 676, 677, 678, 679, 0, 680, 681, 0,
	675, 666, 0, 682, 683, 684, 685, 686, 687, 0,
	688, 689, 0, 690, 775, 776, 777, 778, 0, 702,
	0, 691, 693, 694, 695, 696, 779, 697, 780, 0,
	698, 699, 700, 701, 692, 703, 704, 0, 0, 705,
	706, 708, 710, 711, 707, 709, 712, 0, 713, 0,
	0, 714, 715, 716, 781, 782, 783, 0, 718, 717,
	719, 720, 723, 721, 722, 784, 724, 725, 726, 0,
	0, 3185, 0, 727, 728, 785, 729, 730, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	320, 319, 321, 322, 323, 324, 0, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 4089,
	328, 329, 330, 1345, 331, 332, 333, 334, 335, 336,
	337, 0, 2256, 0, 338, 2246, 339, 2262, 0, 2269,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 0,
	347, 2272, 2273, 0, 0, 348, 349, 0, 0, 1657,
	0, 350, 351, 352, 353, 354, 355, 356, 357, 0,
	0, 359, 360, 361, 358, 362, 0, 363, 0, 364,
	365, 366, 367, 368, 369, 370, 0, 371, 372, 373,
	1346, 374, 375, 376, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 379, 380, 381, 1328, 382, 384, 2260,
	2259, 0, 387, 389, 383, 385, 0, 388, 386, 390,
	391, 0, 392, 393, 394, 0, 0, 395, 1313, 397,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 0, 406, 407, 408, 410, 412, 409, 411, 413,
	414, 415, 416, 417, 0, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 419, 420, 421, 2258, 0, 0,
	0, 422, 0, 423, 424, 425, 0, 426, 427, 0,
	1347, 428, 429, 430, 2267, 2268, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 0, 440, 0, 0, 0,
	441, 0, 442, 443, 444, 445, 446, 447, 448, 0,
	0, 0, 542, 1349, 449, 450, 451, 3179, 452, 453,
	454, 455, 456, 0, 0, 0, 0, 457, 458, 459,
	0, 1348, 3181, 460, 543, 461, 2253, 2254, 0, 2249,
	0, 462, 463, 465, 1350, 0, 1351, 464, 466, 467,
	1352, 468, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 0, 476, 478, 477, 0, 480, 0, 479,
	1353, 481, 482, 1354, 0, 483, 484, 485, 486, 487,
	488, 491, 0, 0, 489, 490, 492, 493, 0, 494,
	495, 497, 500, 496, 498, 499, 501, 514, 515, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 517, 0, 516, 1355, 518, 519, 520, 521, 522,
	529, 531, 532, 527, 528, 530, 533, 534, 536, 524,
	525, 526, 1356, 535, 523, 0, 0, 1357, 537, 538,
	539, 540, 0, 0, 541, 2261, 544, 545, 0, 0,
	546, 0, 547, 0, 0, 549, 550, 551, 0, 0,
	552, 553, 3180, 1358, 554, 1359, 0, 555, 556, 548,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 567, 568, 2243, 569, 570, 571, 2244, 572, 573,
	574, 0, 575, 0, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 586, 587, 588, 2257,
	589, 590, 592, 591, 593, 0, 594, 0, 595, 596,
	597, 0, 0, 0, 0, 0, 598, 599, 601, 0,
	602, 603, 604, 605, 600, 606, 607, 608, 609, 610,
	611, 0, 613, 614, 612, 615, 616, 1360, 617, 618,
	619, 620, 621, 0, 622, 0, 623, 624, 632, 633,
	634, 625, 626, 628, 635, 627, 636, 637, 638, 639,
	641, 640, 0, 643, 644, 642, 645, 646, 647, 0,
	648, 0, 649, 629, 630, 650, 651, 1361, 652, 653,
	654, 655, 656, 657, 658, 2255, 0, 659, 0, 660,
	661, 662, 663, 664, 665, 667, 631, 668, 673, 674,
	2271, 669, 670, 671, 672, 0, 676, 677, 678, 679,
	0, 680, 681, 0, 675, 666, 0, 682, 683, 684,
	685, 686, 687, 0, 688, 689, 0, 690, 2263, 2264,
	2265, 2266, 0, 702, 0, 691, 693, 694, 695, 696,
	0, 697, 0, 0, 698, 699, 700, 701, 692, 703,
	704, 0, 0, 705, 706, 708, 710, 711, 707, 709,
	712, 0, 713, 0, 0, 714, 715, 716, 0, 2247,
	2270, 3182, 718, 717, 719, 720, 723, 721, 722, 0,
	724, 725, 726, 0, 0, 0, 0, 727, 728, 0,
	729, 730, 731, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 3174, 732, 0, 2237,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 3185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 3495, 0,
	0, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 0, 2256, 0, 338,
	2246, 339, 2262, 0, 2269, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 2272, 2273, 0, 0,
	348, 349, 0, 0, 1657, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 1328, 382, 384, 2260, 2259, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 1313, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 0, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 0,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 2258, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 2267,
	2268, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 0, 0, 0, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 0, 0, 0, 542, 1349, 449,
	450, 451, 3179, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 1348, 3181, 460, 543,
	461, 2253, 2254, 0, 2249, 0, 462, 463, 465, 1350,
	0, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 0, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	0, 0, 1357, 537, 538, 539, 540, 0, 0, 541,
	2261, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 3180, 1358, 554,
	1359, 0, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 2243, 569,
	570, 571, 2244, 572, 573, 574, 0, 575, 0, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 2257, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 0, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 0, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	2255, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 2271, 669, 670, 671, 672,
	0, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 2263, 2264, 2265, 2266, 0, 702, 0,
	691, 693, 694, 695, 696, 0, 697, 0, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 0, 2247, 2270, 3182, 718, 717, 719,
	720, 723, 721, 722, 0, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 0, 729, 730, 731, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 2237, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 4254, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 2611, 1305, 0, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 1304,
	0, 347, 738, 739, 740, 0, 348, 349, 1311, 0,
	1292, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 1295, 1293, 1294, 1301, 1297,
	1296, 1300, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 1336, 1337, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 1343, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1306, 1307, 1310, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 1350, 1308, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 1344,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 1299, 1298, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 0, 316, 1357, 537,
	538, 539, 540, 0, 1309, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 1338, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 1339, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1302, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 1340, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 1341, 697, 1342, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 1303, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 2250, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 0, 2256, 0, 338, 2246, 339,
	2262, 0, 2269, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 2272, 2273, 0, 0, 348, 349,
	0, 0, 1657, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 1328,
	382, 384, 2260, 2259, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 1313, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 0, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	2258, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 2267, 2268, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	0, 0, 0, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 0, 0, 0, 542, 1349, 449, 450, 451,
	3179, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 1348, 3181, 460, 543, 461, 2253,
	2254, 0, 2249, 0, 462, 463, 465, 1350, 0, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 0, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 0, 0,
	1357, 537, 538, 539, 540, 0, 0, 541, 2261, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 3180, 1358, 554, 1359, 0,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 2243, 569, 570, 571,
	2244, 572, 573, 574, 0, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 2257, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 0, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 0, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 2255, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 2271, 669, 670, 671, 672, 0, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 2263, 2264, 2265, 2266, 0, 702, 0, 691, 693,
	694, 695, 696, 0, 697, 0, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 0, 2247, 2270, 3182, 718, 717, 719, 720, 723,
	721, 722, 0, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 0, 729, 730, 731, 1049, 0, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 2237, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 955, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 1046, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 1048,
	0, 675, 666, 953, 682, 683, 684, 685, 686, 954,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	2220, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 4383, 325, 326, 0, 0,
	0, 0, 0, 732, 958, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 2227, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 2228, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 4382, 627, 636, 637, 638, 639, 641,
	640, 0, 2224, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 2226, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 4381, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 2220, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 2277, 325, 326,
	0, 0, 0, 0, 0, 732, 958, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 2227, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 2228, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 2276, 627, 636, 637, 638,
	639, 641, 640, 0, 2278, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 2226, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 2275, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 2220, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 2219,
	325, 326, 0, 0, 0, 0, 0, 732, 958, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 2227, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 2228, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 316,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 2218, 627, 636,
	637, 638, 639, 641, 640, 0, 2224, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 2226,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 2217,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 946, 0, 948, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	958, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 955, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 953, 682, 683, 684, 685, 686, 954,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	948, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 958, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 955, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 953, 682, 683, 684, 685,
	686, 954, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 3185, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 0, 958, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 0, 2256, 0, 338, 2246, 339, 2262, 0,
	2269, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 2272, 2273, 0, 0, 348, 349, 0, 0,
	1657, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 1328, 382, 384,
	2260, 2259, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 1313,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 0, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 0, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 2258, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 2267, 2268, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 0, 0,
	0, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	0, 0, 0, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 1348, 0, 460, 543, 461, 2253, 2254, 0,
	2249, 0, 462, 463, 465, 1350, 0, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 0,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 0, 0, 1357, 537,
	538, 539, 540, 0, 0, 541, 2261, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 0, 1358, 554, 1359, 0, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 2243, 569, 570, 571, 2244, 572,
	573, 574, 0, 575, 0, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	2257, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 0, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 0, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 2255, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 2271, 669, 670, 671, 672, 0, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 2263,
	2264, 2265, 2266, 0, 702, 0, 691, 693, 694, 695,
	696, 0, 697, 0, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 0,
	2247, 2270, 0, 718, 717, 719, 720, 723, 721, 722,
	0, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	0, 729, 730, 731, 3165, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	2237, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 2220, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 958, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 2227, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	2228, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 2664, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 2665, 627, 636, 637, 638, 639, 641, 640, 0,
	2224, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 2226, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 2666, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	2250, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 0, 958, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	0, 2256, 0, 338, 2246, 339, 2262, 0, 2269, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	2272, 2273, 0, 0, 348, 349, 0, 0, 1657, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 1328, 382, 384, 2260, 2259,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 1313, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	0, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 2258, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 2267, 2268, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 0, 0, 0, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 0, 0,
	0, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	1348, 0, 460, 543, 461, 2253, 2254, 0, 2249, 0,
	462, 463, 465, 1350, 0, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 0, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 0, 0, 1357, 537, 538, 539,
	540, 0, 0, 541, 2261, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 0, 1358, 554, 1359, 0, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 2243, 569, 570, 571, 2244, 572, 573, 574,
	0, 575, 0, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 2257, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 0, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	0, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 2255, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 2271,
	669, 670, 671, 672, 0, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 2263, 2264, 2265,
	2266, 0, 702, 0, 691, 693, 694, 695, 696, 0,
	697, 0, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 0, 2247, 2270,
	0, 718, 717, 719, 720, 723, 721, 722, 0, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 0, 729,
	730, 731, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 2237, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 958, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 1688, 0, 0, 0, 0,
	1686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4623, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 1657, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 1350, 759, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 0, 0,
	1357, 537, 538, 539, 540, 4509, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 2548, 0, 1689, 1688,
	0, 0, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 1657, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1747, 753, 754, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 1350, 759, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 0, 0, 1357, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	0, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	2286, 0, 1689, 1688, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 1345, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	1657, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 1346, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 1347, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 1349, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 1348, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 1350, 759, 1351, 464, 466,
	467, 1352, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 1353, 481, 482, 1354, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 1355, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 1356, 535, 523, 0, 0, 1357, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 1358, 554, 1359, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 1360, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 1361, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 1876, 0, 1689, 1688, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 1657, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 1874,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 1350,
	759, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	0, 0, 1357, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 1875, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 1873, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 0, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 1744, 0,
	1689, 1688, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 1657, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1747, 753,
	754, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 1350, 759, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 0, 0, 1357, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 0, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 1684, 0, 1689, 1688, 0, 0, 0, 0,
	1686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 1345, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 1657, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 1346, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 1347, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 1349, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 1348, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 1350, 759, 1351,
	464, 466, 467, 1352, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 1353, 481, 482, 1354, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 1355, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 1356, 535, 523, 0, 0,
	1357, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 1358, 554, 1359, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	1360, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 1682, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	1361, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 1689, 1688, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 1345, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 1657, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 1346, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 1347, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 1349, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 1348, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 1350,
	759, 1351, 464, 466, 467, 1352, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 1353, 481, 482, 1354, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 1355,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 1356, 535, 523,
	0, 0, 1357, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 1358, 554,
	1359, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 1360, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 1361, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1689, 1688,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	1345, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 1657, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 1346, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 1347, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	1349, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 1348, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 1350, 759, 1351, 464, 466, 467, 1352, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 1353, 481, 482,
	1354, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 1355, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 1356,
	535, 523, 0, 0, 1357, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	1358, 554, 1359, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 1360, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 1361, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	1689, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 1345, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 1657, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 1346,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 1347,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 1349, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	1348, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 1350, 759, 1351, 464, 466, 467, 1352,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 1353,
	481, 482, 1354, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 1355, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 1356, 535, 523, 0, 0, 1357, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 1358, 554, 1359, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 1360, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 1361, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 3247, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 4081, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	3251, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 4080,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 3250, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 4077, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 4079, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 4076, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 3249, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 4078, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 3247, 348, 349,
	741, 0, 0, 3241, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 3243,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 3251, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 3250,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 3240, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 3249,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 3248, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1957, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 1956, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 1954, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 1955, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 1958, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	1953, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 1951, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 1952,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	1661, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1663, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 1396, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 1658, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1660, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 1396,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1564, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1566, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 1396, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 820, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 818, 323, 324, 807,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 810,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 816, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 812, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 819, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 806, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 807, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 810, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 811, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 812,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 805,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 807, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 810, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 811, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 812, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 807, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 810, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 4519, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 812, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 316,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 1396, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 3948, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 3464, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 3463, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 807, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 810, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 811, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 812, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 3167, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 2632, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 2576, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 2575, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 2560, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 2562, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 316,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 2522, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 1396,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1792, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1791, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 1681, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 316,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1674, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1676, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	1481, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1480, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 1471, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1470, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1468, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1467, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 1463, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1462, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 316,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1440, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1439, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	787, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 302, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 810, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 811, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 812, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 2673, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 2671, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 314, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 315,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 316,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 2669,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 314, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 315, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 316, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 314, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 2583, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 315, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 316, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 314, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 2310, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 315, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 316, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 314,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	2304, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 315, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 316, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 1033, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 1032, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 1031, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 910, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 899, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 908, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 901, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 907, 427, 903, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 904, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	902, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 905, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 906, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 900, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 893, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 899, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 908, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 901,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	907, 427, 903, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	904, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 902, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 905, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	906, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	900, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 4080, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 4869, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1509, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 1512, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 1510, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 881, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 880, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 879, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 1513, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 877, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 1509, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 1512, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 1510, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 881, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 880, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 879, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	1513, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 877, 776, 777, 778, 0, 702, 0, 691, 1511,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 888, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 886, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	796, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 795, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 794, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 3376, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 5182, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 3888,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 4744, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 4444, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 3098,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 3376, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 3456, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 2443, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 880, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 879, 627, 636, 637, 638, 639, 3309, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 877, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 2643, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 2630, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1848, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	1840, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 871, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 867, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 872, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 881, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 880, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 879,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 1825, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 877, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1798, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1797, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 1781, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 1779, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1773, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	1751, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1749, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 1742, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 1703, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 1666, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1515, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 880, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 879, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 877, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	1486, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1485, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 1477, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1476, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 1421, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	891, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 871, 0, 311, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 867, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 866, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 872, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 881, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 880, 618, 619, 620, 621, 868, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 879,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 869, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 877, 776, 777, 778, 0, 702, 0,
	691, 873, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 860, 0,
	311, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 752, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 861, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 822, 0, 311, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 814, 0, 311, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	791, 0, 311, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 4112, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 880, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 879, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 877, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 3996, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	3966, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 3962, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 3913, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 3911, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 648, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 3899, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	3896, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 3475, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 311, 0, 0, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 733, 734, 0, 338,
	735, 339, 736, 0, 737, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 738, 739, 740, 0,
	348, 349, 741, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 379, 380,
	381, 0, 382, 384, 742, 743, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 744, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 745,
	746, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 747, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 748,
	749, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 750, 0, 751, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 752, 753, 754, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 755, 460, 543,
	461, 756, 757, 0, 758, 0, 462, 463, 465, 0,
	759, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 760, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 761, 541,
	762, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 763, 0, 554,
	0, 764, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 765, 569,
	570, 571, 766, 572, 573, 574, 767, 575, 768, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 769, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 770, 622,
	0, 623, 624, 861, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 0, 648, 771, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	772, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 773, 669, 670, 671, 672,
	774, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 775, 776, 777, 778, 0, 702, 0,
	691, 693, 694, 695, 696, 779, 697, 780, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 781, 782, 783, 0, 718, 717, 719,
	720, 723, 721, 722, 784, 724, 725, 726, 311, 0,
	0, 0, 727, 728, 785, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 732, 0, 2601, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 733, 734,
	0, 338, 735, 339, 736, 0, 737, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 738, 739,
	740, 0, 348, 349, 741, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	379, 380, 381, 0, 382, 384, 742, 743, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 744, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 745, 746, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 747, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 748, 749, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 750, 0, 751, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 752, 753, 754, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 755,
	460, 543, 461, 756, 757, 0, 758, 0, 462, 463,
	465, 0, 759, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 760, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	761, 541, 762, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 763,
	0, 554, 0, 764, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	765, 569, 570, 571, 766, 572, 573, 574, 767, 575,
	768, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 769, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	770, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 0, 0, 771, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 772, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 773, 669, 670,
	671, 672, 774, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 775, 776, 777, 778, 0,
	702, 0, 691, 693, 694, 695, 696, 779, 697, 780,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 781, 782, 783, 0, 718,
	717, 719, 720, 723, 721, 722, 784, 724, 725, 726,
	311, 0, 0, 0, 727, 728, 785, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	733, 734, 0, 338, 735, 339, 736, 0, 737, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	738, 739, 740, 0, 348, 349, 741, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 381, 0, 382, 384, 742, 743,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	744, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 745, 746, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 747, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 748, 749, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 750, 0, 751, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 1449, 753,
	754, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 755, 460, 543, 461, 756, 757, 0, 758, 0,
	462, 463, 465, 0, 759, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 760, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 761, 541, 762, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 763, 0, 554, 0, 764, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 765, 569, 570, 571, 766, 572, 573, 574,
	767, 575, 768, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 769, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 770, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 0, 648,
	771, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 772, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 773,
	669, 670, 671, 672, 774, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 775, 776, 777,
	778, 0, 702, 0, 691, 693, 694, 695, 696, 779,
	697, 780, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 781, 782, 783,
	0, 718, 717, 719, 720, 723, 721, 722, 784, 724,
	725, 726, 311, 0, 0, 0, 727, 728, 785, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 733, 734, 0, 338, 735, 339, 736, 0,
	737, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 738, 739, 740, 0, 348, 349, 741, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 379, 380, 381, 0, 382, 384,
	742, 743, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 744, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 745, 746, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 747, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 748, 749, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 750, 0,
	751, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	752, 753, 754, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 755, 460, 543, 461, 756, 757, 0,
	758, 0, 462, 463, 465, 0, 759, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 760,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 761, 541, 762, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 763, 0, 554, 0, 764, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 765, 569, 570, 571, 766, 572,
	573, 574, 767, 575, 768, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	769, 589, 590, 1369, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 770, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	0, 648, 771, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 772, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 773, 669, 670, 671, 672, 774, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 775,
	776, 777, 778, 0, 702, 0, 691, 693, 694, 695,
	696, 779, 697, 780, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 781,
	782, 783, 0, 718, 717, 719, 720, 723, 721, 722,
	784, 724, 725, 726, 311, 0, 0, 0, 727, 728,
	785, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 733, 734, 0, 338, 735, 339,
	736, 0, 737, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 738, 739, 740, 0, 348, 349,
	741, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 379, 380, 381, 0,
	382, 384, 742, 743, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 744, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 745, 746, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	747, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 748, 749, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	750, 0, 751, 0, 0, 442, 443, 444, 445, 446,
	447, 448, 752, 753, 754, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 755, 460, 543, 461, 756,
	757, 0, 758, 0, 462, 463, 465, 0, 759, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 760, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 761, 541, 762, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 763, 0, 554, 0, 764,
	555, 556, 548, 557, 558, 559, 0, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 765, 569, 570, 571,
	766, 572, 573, 574, 767, 575, 768, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 0,
	587, 588, 769, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 770, 0, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 0, 648, 771, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 772, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 773, 669, 670, 671, 672, 774, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 775, 776, 777, 778, 0, 702, 0, 691, 693,
	694, 695, 696, 779, 697, 780, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 781, 782, 783, 0, 718, 717, 719, 720, 723,
	721, 722, 784, 724, 725, 726, 1787, 0, 1493, 0,
	727, 728, 785, 729, 730, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 320, 319, 321,
	322, 323, 324, 0, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 328, 329, 330,
	0, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 0, 347, 0, 0,
	0, 0, 348, 349, 0, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 356, 357, 0, 0, 359, 360,
	361, 358, 362, 0, 363, 0, 364, 365, 366, 367,
	368, 369, 370, 0, 371, 372, 373, 0, 374, 375,
	376, 0, 0, 0, 0, 0, 0, 1495, 377, 378,
	379, 380, 381, 0, 382, 384, 0, 0, 0, 387,
	389, 383, 385, 0, 388, 386, 390, 391, 0, 392,
	393, 394, 0, 0, 395, 396, 397, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 0, 406,
	407, 408, 410, 412, 409, 411, 413, 414, 415, 416,
	417, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 421, 0, 0, 0, 0, 422, 0,
	423, 424, 425, 0, 426, 427, 0, 0, 428, 429,
	430, 0, 0, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 0, 440, 0, 0, 0, 441, 0, 442,
	443, 444, 445, 446, 447, 448, 1786, 0, 0, 542,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 456,
	0, 0, 0, 0, 457, 458, 459, 0, 0, 0,
	460, 543, 461, 0, 0, 0, 0, 0, 462, 463,
	465, 0, 0, 0, 464, 466, 467, 0, 468, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 0,
	476, 478, 477, 0, 480, 0, 479, 0, 481, 482,
	0, 0, 483, 484, 485, 486, 487, 488, 491, 0,
	0, 489, 490, 492, 493, 0, 494, 495, 497, 500,
	496, 498, 499, 501, 514, 515, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 517, 0,
	516, 0, 518, 519, 520, 521, 522, 529, 531, 532,
	527, 528, 530, 533, 534, 536, 524, 525, 526, 0,
	535, 523, 0, 0, 0, 537, 538, 539, 540, 0,
	0, 541, 0, 544, 545, 0, 0, 546, 0, 547,
	0, 0, 549, 550, 551, 0, 0, 552, 553, 0,
	0, 554, 0, 0, 555, 556, 548, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 0, 567, 568,
	0, 569, 570, 571, 0, 572, 573, 574, 0, 575,
	0, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 586, 587, 588, 0, 589, 590, 592,
	591, 593, 0, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 598, 599, 601, 0, 602, 603, 604,
	605, 600, 606, 607, 608, 609, 610, 611, 0, 613,
	614, 612, 615, 616, 0, 617, 618, 619, 620, 621,
	0, 622, 0, 623, 624, 632, 633, 634, 625, 626,
	628, 635, 627, 636, 637, 638, 639, 641, 640, 0,
	643, 644, 642, 645, 646, 647, 1496, 648, 0, 649,
	629, 630, 650, 651, 0, 652, 653, 654, 655, 656,
	657, 658, 0, 0, 659, 0, 660, 661, 662, 663,
	664, 665, 667, 631, 668, 673, 674, 0, 669, 670,
	671, 672, 0, 676, 677, 678, 679, 0, 680, 681,
	0, 675, 666, 0, 682, 683, 684, 685, 686, 687,
	0, 688, 689, 0, 690, 0, 0, 0, 0, 0,
	702, 0, 691, 693, 694, 695, 696, 0, 697, 0,
	0, 698, 699, 700, 701, 692, 703, 704, 0, 0,
	705, 706, 708, 710, 711, 707, 709, 712, 0, 713,
	0, 0, 714, 715, 716, 0, 0, 0, 0, 718,
	717, 719, 720, 723, 721, 722, 0, 724, 725, 726,
	1706, 0, 1493, 0, 727, 728, 0, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 0, 0, 0, 0, 348, 349, 0, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 1495, 377, 378, 379, 380, 381, 0, 382, 384,
	0, 0, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 0, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 0, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 0, 0, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 0, 0,
	0, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	1705, 0, 0, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 0, 460, 543, 461, 0, 0, 0,
	0, 0, 462, 463, 465, 0, 0, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 0,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 0, 541, 0, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 0, 0, 554, 0, 0, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 0, 575, 0, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	0, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 0, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1496, 648, 0, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 0, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 0, 669, 670, 671, 672, 0, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 0,
	0, 0, 0, 0, 702, 0, 691, 693, 694, 695,
	696, 0, 697, 0, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 0,
	0, 0, 0, 718, 717, 719, 720, 723, 721, 722,
	0, 724, 725, 726, 1491, 0, 1493, 0, 727, 728,
	0, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 320, 319, 321, 322, 323,
	324, 0, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 328, 329, 330, 0, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 0, 347, 0, 0, 0, 0,
	348, 349, 0, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 356, 357, 0, 0, 359, 360, 361, 358,
	362, 0, 363, 0, 364, 365, 366, 367, 368, 369,
	370, 0, 371, 372, 373, 0, 374, 375, 376, 0,
	0, 0, 0, 0, 0, 1495, 377, 378, 379, 380,
	381, 0, 382, 384, 0, 0, 0, 387, 389, 383,
	385, 0, 388, 386, 390, 391, 0, 392, 393, 394,
	0, 0, 395, 396, 397, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 0, 406, 407, 408,
	410, 412, 409, 411, 413, 414, 415, 416, 417, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 421, 0, 0, 0, 0, 422, 0, 423, 424,
	425, 0, 426, 427, 0, 0, 428, 429, 430, 0,
	0, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	0, 440, 0, 0, 0, 441, 0, 442, 443, 444,
	445, 446, 447, 448, 1490, 0, 0, 542, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 456, 0, 0,
	0, 0, 457, 458, 459, 0, 0, 0, 460, 543,
	461, 0, 0, 0, 0, 0, 462, 463, 465, 0,
	0, 0, 464, 466, 467, 0, 468, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 0, 476, 478,
	477, 0, 480, 0, 479, 0, 481, 482, 0, 0,
	483, 484, 485, 486, 487, 488, 491, 0, 0, 489,
	490, 492, 493, 0, 494, 495, 497, 500, 496, 498,
	499, 501, 514, 515, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 517, 0, 516, 0,
	518, 519, 520, 521, 522, 529, 531, 532, 527, 528,
	530, 533, 534, 536, 524, 525, 526, 0, 535, 523,
	0, 0, 0, 537, 538, 539, 540, 0, 0, 541,
	0, 544, 545, 0, 0, 546, 0, 547, 0, 0,
	549, 550, 551, 0, 0, 552, 553, 0, 0, 554,
	0, 0, 555, 556, 548, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 0, 567, 568, 0, 569,
	570, 571, 0, 572, 573, 574, 0, 575, 0, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 586, 587, 588, 0, 589, 590, 592, 591, 593,
	0, 594, 0, 595, 596, 597, 0, 0, 0, 0,
	0, 598, 599, 601, 0, 602, 603, 604, 605, 600,
	606, 607, 608, 609, 610, 611, 0, 613, 614, 612,
	615, 616, 0, 617, 618, 619, 620, 621, 0, 622,
	0, 623, 624, 632, 633, 634, 625, 626, 628, 635,
	627, 636, 637, 638, 639, 641, 640, 0, 643, 644,
	642, 645, 646, 647, 1496, 648, 0, 649, 629, 630,
	650, 651, 0, 652, 653, 654, 655, 656, 657, 658,
	0, 0, 659, 0, 660, 661, 662, 663, 664, 665,
	667, 631, 668, 673, 674, 0, 669, 670, 671, 672,
	0, 676, 677, 678, 679, 0, 680, 681, 0, 675,
	666, 0, 682, 683, 684, 685, 686, 687, 0, 688,
	689, 0, 690, 0, 0, 0, 0, 0, 702, 0,
	691, 693, 694, 695, 696, 0, 697, 0, 0, 698,
	699, 700, 701, 692, 703, 704, 0, 0, 705, 706,
	708, 710, 711, 707, 709, 712, 0, 713, 0, 0,
	714, 715, 716, 0, 0, 0, 0, 718, 717, 719,
	720, 723, 721, 722, 0, 724, 725, 726, 2324, 0,
	1493, 0, 727, 728, 0, 729, 730, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 320,
	319, 321, 322, 323, 324, 0, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 328,
	329, 330, 0, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 0, 347,
	0, 0, 0, 0, 348, 349, 0, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 356, 357, 0, 0,
	359, 360, 361, 358, 362, 0, 363, 0, 364, 365,
	366, 367, 368, 369, 370, 0, 371, 372, 373, 0,
	374, 375, 376, 0, 0, 0, 0, 0, 0, 1495,
	377, 378, 379, 380, 381, 0, 382, 384, 0, 0,
	0, 387, 389, 383, 385, 0, 388, 386, 390, 391,
	0, 392, 393, 394, 0, 0, 395, 396, 397, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	0, 406, 407, 408, 410, 412, 409, 411, 413, 414,
	415, 416, 417, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 421, 0, 0, 0, 0,
	422, 0, 423, 424, 425, 0, 426, 427, 0, 0,
	428, 429, 430, 0, 0, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 0, 440, 0, 0, 0, 441,
	0, 442, 443, 444, 445, 446, 447, 448, 0, 0,
	0, 542, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 456, 0, 0, 0, 0, 457, 458, 459, 0,
	0, 0, 460, 543, 461, 0, 0, 0, 0, 0,
	462, 463, 465, 0, 0, 0, 464, 466, 467, 0,
	468, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 0, 476, 478, 477, 0, 480, 0, 479, 0,
	481, 482, 0, 0, 483, 484, 485, 486, 487, 488,
	491, 0, 0, 489, 490, 492, 493, 0, 494, 495,
	497, 500, 496, 498, 499, 501, 514, 515, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	517, 0, 516, 0, 518, 519, 520, 521, 522, 529,
	531, 532, 527, 528, 530, 533, 534, 536, 524, 525,
	526, 0, 535, 523, 0, 0, 0, 537, 538, 539,
	540, 0, 0, 541, 0, 544, 545, 0, 0, 546,
	0, 547, 0, 0, 549, 550, 551, 0, 0, 552,
	553, 0, 0, 554, 0, 0, 555, 556, 548, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 0,
	567, 568, 0, 569, 570, 571, 0, 572, 573, 574,
	0, 575, 0, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 586, 587, 588, 0, 589,
	590, 592, 591, 593, 0, 594, 0, 595, 596, 597,
	0, 0, 0, 0, 0, 598, 599, 601, 0, 602,
	603, 604, 605, 600, 606, 607, 608, 609, 610, 611,
	0, 613, 614, 612, 615, 616, 0, 617, 618, 619,
	620, 621, 0, 622, 0, 623, 624, 632, 633, 634,
	625, 626, 628, 635, 627, 636, 637, 638, 639, 641,
	640, 0, 643, 644, 642, 645, 646, 647, 1496, 648,
	0, 649, 629, 630, 650, 651, 0, 652, 653, 654,
	655, 656, 657, 658, 0, 0, 659, 0, 660, 661,
	662, 663, 664, 665, 667, 631, 668, 673, 674, 0,
	669, 670, 671, 672, 0, 676, 677, 678, 679, 0,
	680, 681, 0, 675, 666, 0, 682, 683, 684, 685,
	686, 687, 0, 688, 689, 0, 690, 0, 0, 0,
	0, 0, 702, 0, 691, 693, 694, 695, 696, 0,
	697, 0, 0, 698, 699, 700, 701, 692, 703, 704,
	0, 0, 705, 706, 708, 710, 711, 707, 709, 712,
	0, 713, 0, 0, 714, 715, 716, 0, 0, 0,
	0, 718, 717, 719, 720, 723, 721, 722, 0, 724,
	725, 726, 2284, 0, 1493, 0, 727, 728, 0, 729,
	730, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 320, 319, 321, 322, 323, 324, 0,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 328, 329, 330, 0, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 0, 347, 0, 0, 0, 0, 348, 349,
	0, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	356, 357, 0, 0, 359, 360, 361, 358, 362, 0,
	363, 0, 364, 365, 366, 367, 368, 369, 370, 0,
	371, 372, 373, 0, 374, 375, 376, 0, 0, 0,
	0, 0, 0, 1495, 377, 378, 379, 380, 381, 0,
	382, 384, 0, 0, 0, 387, 389, 383, 385, 0,
	388, 386, 390, 391, 0, 392, 393, 394, 0, 0,
	395, 396, 397, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 0, 406, 407, 408, 410, 412,
	409, 411, 413, 414, 415, 416, 417, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 421,
	0, 0, 0, 0, 422, 0, 423, 424, 425, 0,
	426, 427, 0, 0, 428, 429, 430, 0, 0, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 440,
	0, 0, 0, 441, 0, 442, 443, 444, 445, 446,
	447, 448, 0, 0, 0, 542, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 456, 0, 0, 0, 0,
	457, 458, 459, 0, 0, 0, 460, 543, 461, 0,
	0, 0, 0, 0, 462, 463, 465, 0, 0, 0,
	464, 466, 467, 0, 468, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 0, 476, 478, 477, 0,
	480, 0, 479, 0, 481, 482, 0, 0, 483, 484,
	485, 486, 487, 488, 491, 0, 0, 489, 490, 492,
	493, 0, 494, 495, 497, 500, 496, 498, 499, 501,
	514, 515, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 517, 0, 516, 0, 518, 519,
	520, 521, 522, 529, 531, 532, 527, 528, 530, 533,
	534, 536, 524, 525, 526, 0, 535, 523, 0, 0,
	0, 537, 538, 539, 540, 0, 0, 541, 0, 544,
	545, 0, 0, 546, 0, 547, 0, 0, 549, 550,
	551, 0, 0, 552, 553, 0, 0, 554, 0, 0,
	555, 556, 548, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 0, 567, 568, 0, 569, 570, 571,
	0, 572, 573, 574, 0, 575, 0, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 586,
	587, 588, 0, 589, 590, 592, 591, 593, 0, 594,
	0, 595, 596, 597, 0, 0, 0, 0, 0, 598,
	599, 601, 0, 602, 603, 604, 605, 600, 606, 607,
	608, 609, 610, 611, 0, 613, 614, 612, 615, 616,
	0, 617, 618, 619, 620, 621, 0, 622, 0, 623,
	624, 632, 633, 634, 625, 626, 628, 635, 627, 636,
	637, 638, 639, 641, 640, 0, 643, 644, 642, 645,
	646, 647, 1496, 648, 0, 649, 629, 630, 650, 651,
	0, 652, 653, 654, 655, 656, 657, 658, 0, 0,
	659, 0, 660, 661, 662, 663, 664, 665, 667, 631,
	668, 673, 674, 0, 669, 670, 671, 672, 0, 676,
	677, 678, 679, 0, 680, 681, 0, 675, 666, 0,
	682, 683, 684, 685, 686, 687, 0, 688, 689, 0,
	690, 0, 0, 0, 0, 0, 702, 0, 691, 693,
	694, 695, 696, 0, 697, 0, 0, 698, 699, 700,
	701, 692, 703, 704, 0, 0, 705, 706, 708, 710,
	711, 707, 709, 712, 0, 713, 0, 0, 714, 715,
	716, 0, 0, 0, 0, 718, 717, 719, 720, 723,
	721, 722, 1493, 724, 725, 726, 0, 0, 0, 0,
	727, 728, 0, 729, 730, 731, 0, 0, 0, 317,
	318, 320, 319, 321, 322, 323, 324, 0, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 328, 329, 330, 0, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	0, 347, 0, 0, 0, 0, 348, 349, 0, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 356, 357,
	0, 0, 359, 360, 361, 358, 362, 0, 363, 0,
	364, 365, 366, 367, 368, 369, 370, 0, 371, 372,
	373, 0, 374, 375, 376, 0, 0, 0, 0, 0,
	0, 1495, 377, 378, 379, 380, 381, 0, 382, 384,
	0, 0, 0, 387, 389, 383, 385, 0, 388, 386,
	390, 391, 0, 392, 393, 394, 0, 0, 395, 396,
	397, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 0, 406, 407, 408, 410, 412, 409, 411,
	413, 414, 415, 416, 417, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 421, 0, 0,
	0, 0, 422, 0, 423, 424, 425, 0, 426, 427,
	0, 0, 428, 429, 430, 0, 0, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 440, 0, 0,
	0, 441, 0, 442, 443, 444, 445, 446, 447, 448,
	0, 0, 0, 542, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 456, 0, 0, 0, 0, 457, 458,
	459, 0, 0, 0, 460, 543, 461, 0, 0, 0,
	0, 0, 462, 463, 465, 0, 0, 0, 464, 466,
	467, 0, 468, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 0, 476, 478, 477, 0, 480, 0,
	479, 0, 481, 482, 0, 0, 483, 484, 485, 486,
	487, 488, 491, 0, 0, 489, 490, 492, 493, 0,
	494, 495, 497, 500, 496, 498, 499, 501, 514, 515,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 517, 0, 516, 0, 518, 519, 520, 521,
	522, 529, 531, 532, 527, 528, 530, 533, 534, 536,
	524, 525, 526, 0, 535, 523, 0, 0, 0, 537,
	538, 539, 540, 0, 0, 541, 0, 544, 545, 0,
	0, 546, 0, 547, 0, 0, 549, 550, 551, 0,
	0, 552, 553, 0, 0, 554, 0, 0, 555, 556,
	548, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 567, 568, 0, 569, 570, 571, 0, 572,
	573, 574, 0, 575, 0, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 586, 587, 588,
	0, 589, 590, 592, 591, 593, 0, 594, 0, 595,
	596, 597, 0, 0, 0, 0, 0, 598, 599, 601,
	0, 602, 603, 604, 605, 600, 606, 607, 608, 609,
	610, 611, 0, 613, 614, 612, 615, 616, 0, 617,
	618, 619, 620, 621, 0, 622, 0, 623, 624, 632,
	633, 634, 625, 626, 628, 635, 627, 636, 637, 638,
	639, 641, 640, 0, 643, 644, 642, 645, 646, 647,
	1496, 648, 0, 649, 629, 630, 650, 651, 0, 652,
	653, 654, 655, 656, 657, 658, 0, 0, 659, 0,
	660, 661, 662, 663, 664, 665, 667, 631, 668, 673,
	674, 0, 669, 670, 671, 672, 0, 676, 677, 678,
	679, 0, 680, 681, 0, 675, 666, 0, 682, 683,
	684, 685, 686, 687, 0, 688, 689, 0, 690, 0,
	0, 0, 0, 0, 702, 0, 691, 693, 694, 695,
	696, 0, 697, 0, 0, 698, 699, 700, 701, 692,
	703, 704, 0, 0, 705, 706, 708, 710, 711, 707,
	709, 712, 0, 713, 0, 0, 714, 715, 716, 0,
	0, 0, 0, 718, 717, 719, 720, 723, 721, 722,
	0, 724, 725, 726, 0, 0, 0, 0, 727, 728,
	0, 729, 730, 731, 2008, 2009, 0, 2041, 2042, 2043,
	2052, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2039, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 2008,
	2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 2045, 2039, 2010, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 2058, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 2045, 2039, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 2034, 2035, 2036,
	0, 0, 2064, 0, 0, 0, 2016, 0, 0, 0,
	0, 2010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 2034, 2035, 2036, 0, 0, 0, 0, 2049,
	0, 2016, 0, 2059, 0, 0, 0, 0, 0, 0,
	2038, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 2056, 0, 0, 0, 0, 0, 0, 2025,
	2026, 0, 0, 0, 2049, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 2038, 2040, 0, 0, 2047,
	0, 0, 0, 2033, 2034, 2035, 2036, 0, 0, 0,
	0, 0, 0, 2016, 2031, 2055, 0, 2056, 0, 0,
	0, 0, 0, 0, 2025, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 2031,
	2059, 0, 0, 2057, 0, 0, 0, 2038, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2055, 0, 2056,
	0, 0, 0, 0, 0, 2061, 2025, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	2050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019,
	2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 0,
	0, 0, 5210, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2023, 2029, 2051,
	2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015,
	2017, 2018, 0, 0, 0, 0, 0, 5159, 0, 0,
	0, 0, 0, 2008, 2009, 0, 2041, 2042, 2043, 2052,
	2053, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 2039, 0, 0,
	0, 0, 0, 0, 0, 2011, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 2022, 2023,
	2029, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013,
	2014, 2015, 2017, 2018, 2064, 0, 0, 0, 0, 5158,
	0, 0, 0, 2010, 0, 2008, 2009, 0, 2041, 2042,
	2043, 2052, 2053, 2054, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 2045, 2039,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 2045, 2039, 2010, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 2058, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 2034, 2035, 2036, 0,
	0, 2064, 0, 0, 0, 2016, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 2038,
	2040, 0, 0, 0, 0, 0, 0, 2033, 2034, 2035,
	2036, 0, 0, 0, 0, 0, 0, 2016, 0, 2055,
	0, 2056, 0, 0, 0, 0, 0, 0, 2025, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 2033, 2034, 2035, 2036, 0, 0, 0, 0,
	2049, 0, 2016, 2031, 2059, 0, 0, 0, 0, 0,
	0, 2038, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 2056, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 0, 0, 2049, 0, 0, 0, 2059,
	0, 0, 2057, 0, 0, 0, 2038, 2040, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 2031, 2055, 0, 2056, 0,
	0, 0, 0, 0, 2061, 2025, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2050, 0, 0, 0, 0, 2008, 2009, 0,
	2041, 2042, 2043, 2052, 2053, 2054, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 2039, 0, 0, 0, 0, 0, 0, 2063, 2011,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 2050, 0, 0, 2010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 2048, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020,
	2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 0, 0,
	0, 4955, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	2034, 2035, 2036, 0, 0, 0, 0, 0, 0, 2016,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0,
	0, 0, 0, 4768, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 2048, 2059, 0, 0, 0,
	0, 0, 0, 2038, 2040, 0, 0, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 2055, 0, 2056, 0, 0, 4671, 0,
	0, 0, 2025, 2026, 0, 0, 0, 0, 0, 0,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 2039, 0, 0, 2031, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 2008, 2009, 0, 2041, 2042,
	2043, 2052, 2053, 2054, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 2045, 2039,
	2010, 0, 0, 0, 0, 0, 2057, 2011, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 2058, 0,
	2027, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 2061, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 2009, 0, 2041, 2042, 2043, 2052,
	2053, 2054, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 2033, 2034, 2035, 2036, 2045, 2039, 0, 0,
	0, 0, 2016, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 2033, 2034, 2035,
	2036, 0, 0, 2010, 0, 2049, 2050, 2016, 0, 2059,
	0, 0, 0, 0, 2030, 0, 2038, 2040, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 2056, 0,
	0, 0, 2063, 0, 0, 2025, 2026, 0, 0, 0,
	2049, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 2038, 2040, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 2055, 0, 2056, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 2034, 2035, 2036, 0,
	2047, 0, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 2031, 0, 0, 0, 2057,
	0, 0, 0, 0, 2022, 2023, 2029, 2051, 2028, 2024,
	0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	2046, 0, 0, 0, 0, 4670, 0, 0, 2049, 0,
	0, 2061, 2059, 0, 0, 0, 0, 0, 0, 2038,
	2040, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 2056, 0, 0, 0, 2046, 0, 0, 2025, 2026,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 2045, 2039, 0, 0, 0, 2050,
	0, 0, 2057, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 2061, 2063, 0, 0, 0, 0,
	0, 2010, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 2033, 2034, 2035, 2036, 0, 4669, 0,
	0, 0, 2050, 2016, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 2063, 0,
	0, 0, 0, 4259, 0, 0, 2049, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 2038, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 0, 2056,
	0, 0, 0, 0, 0, 0, 2025, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020,
	2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 0, 0,
	0, 3682, 0, 0, 2008, 2009, 0, 2041, 2042, 2043,
	2052, 2053, 2054, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 2045, 2039, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 2008, 2009, 2027, 2041, 2042, 2043, 2052, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 2045, 2039, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 2030, 0, 0, 2033, 2034, 2035, 2036,
	0, 0, 2027, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	2038, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 2056, 0, 2033, 2034, 2035, 2036, 0, 2025,
	2026, 0, 0, 0, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2023,
	2029, 2051, 2028, 2024, 2031, 2021, 2019, 2020, 2012, 2013,
	2014, 2015, 2017, 2018, 0, 0, 0, 2049, 0, 3681,
	0, 2059, 0, 0, 0, 0, 0, 0, 2038, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 0,
	2056, 0, 0, 2057, 0, 0, 0, 2025, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 2031, 2008, 2009, 0, 2041, 2042, 2043, 2052,
	2053, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 2039, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 2057, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 2046, 2010, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 2061, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053,
	2054, 0, 0, 0, 0, 0, 2500, 0, 0, 0,
	0, 0, 0, 2037, 0, 2045, 2039, 0, 0, 2063,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 2033, 2034, 2035, 2036, 0,
	0, 0, 0, 2064, 0, 2016, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 2048,
	0, 0, 2059, 0, 0, 0, 0, 2063, 0, 2038,
	2040, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019,
	2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 2055,
	0, 2056, 3680, 2501, 0, 0, 0, 0, 2025, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 2033, 2034, 2035, 2036, 0, 0,
	0, 0, 0, 2031, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012,
	2013, 2014, 2015, 2017, 2018, 0, 0, 2049, 0, 0,
	3679, 2059, 2057, 0, 0, 0, 0, 0, 2038, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 2055, 0,
	2056, 0, 0, 0, 2061, 0, 0, 2025, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 2008, 2009, 0, 2041, 2042, 2043, 2052,
	2053, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 2045, 2039, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	2032, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 2046, 2010, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 2061, 2030, 0, 0, 0, 2403, 0,
	0, 2008, 2009, 2027, 2041, 2042, 2043, 2052, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 2039, 0, 0, 2063, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 0, 2401, 0, 0, 0, 0, 0, 2032,
	0, 0, 2030, 0, 0, 2033, 2034, 2035, 2036, 0,
	0, 2027, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 2502, 0, 0, 0, 2048, 0,
	0, 2050, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020,
	2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 2049, 3644,
	0, 0, 2059, 0, 0, 0, 0, 2063, 0, 2038,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 2056, 0, 2033, 2034, 2035, 2036, 0, 2025, 2026,
	0, 0, 0, 2016, 5475, 0, 0, 0, 0, 0,
	0, 0, 2503, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 2048, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 2038, 2040, 2022,
	2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012,
	2013, 2014, 2015, 2017, 2018, 0, 0, 2055, 0, 2056,
	0, 0, 2057, 0, 0, 0, 2025, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 2031, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2045, 2039, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 0,
	2057, 0, 0, 2402, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 2046, 2010, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 2061, 2030, 0, 0, 0, 0, 0, 0,
	2008, 2009, 2027, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 0, 5474, 0, 0, 0, 0,
	0, 0, 2050, 2045, 2039, 0, 0, 0, 0, 3614,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 2063, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 2400,
	2010, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 2030, 0, 0, 2033, 2034, 2035, 2036, 0, 0,
	2027, 0, 0, 0, 2016, 0, 3744, 0, 0, 0,
	0, 0, 0, 3743, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3615, 0, 0, 0, 2049, 2048, 0,
	0, 2059, 0, 0, 0, 0, 2063, 0, 2038, 2040,
	2022, 2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020,
	2012, 2013, 2014, 2015, 2017, 2018, 0, 0, 2055, 0,
	2056, 0, 2033, 2034, 2035, 2036, 0, 2025, 2026, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 2048, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 2038, 2040, 2022, 2023,
	2029, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013,
	2014, 2015, 2017, 2018, 0, 0, 2055, 0, 2056, 0,
	0, 2057, 0, 0, 0, 2025, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	2031, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 2039, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 2057,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	2046, 2010, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 2061, 2030, 0, 0, 0, 0, 0, 0, 2008,
	2009, 2027, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 2045, 2039, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 2063, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	2030, 0, 0, 2033, 2034, 2035, 2036, 0, 0, 2027,
	0, 0, 0, 2016, 0, 5058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 2048, 0, 0,
	2059, 0, 0, 0, 0, 2063, 0, 2038, 2040, 2022,
	2023, 2029, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012,
	2013, 2014, 2015, 2017, 2018, 0, 0, 2055, 0, 2056,
	0, 2033, 2034, 2035, 2036, 0, 2025, 2026, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 2048, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 2038, 2040, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 0, 0, 2055, 0, 2056, 0, 0,
	2057, 0, 0, 0, 2025, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 2037, 0, 0, 2045, 2039, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 2046,
	1220, 0, 0, 0, 0, 2058, 0, 0, 2032, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	2037, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 2045, 2039, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 2050, 0,
	2010, 0, 0, 0, 2033, 2034, 2035, 2036, 0, 0,
	0, 2030, 0, 0, 2016, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 2022, 2023,
	2029, 2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013,
	2014, 2015, 2017, 2018, 0, 0, 0, 2049, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 2038, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 0,
	2056, 0, 0, 0, 0, 0, 0, 2025, 2026, 0,
	0, 0, 2033, 2034, 2035, 2036, 0, 0, 0, 0,
	0, 0, 2016, 0, 2048, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2023, 2029, 2051,
	2028, 2024, 2031, 2021, 2019, 2020, 2012, 2013, 2014, 2015,
	2017, 2018, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 2038, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 2055, 0, 2056, 0,
	0, 0, 0, 0, 0, 2025, 2026, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 2045, 2039, 0, 0, 0, 2057,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 2032,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 2008,
	2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 0, 0,
	0, 2037, 2045, 2039, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 4817, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 2033, 2034, 2035, 2036, 0, 0, 2050,
	2030, 0, 0, 2016, 0, 4472, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	2023, 2029, 2051, 2028, 2024, 2063, 2021, 2019, 2020, 2012,
	2013, 2014, 2015, 2017, 2018, 0, 2049, 0, 0, 0,
	2059, 0, 0, 0, 4473, 0, 0, 2038, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 0, 2056,
	0, 0, 0, 0, 0, 0, 2025, 2026, 0, 0,
	0, 2033, 2034, 2035, 2036, 0, 0, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 2022, 2023, 2029,
	2051, 2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 0, 2049, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 2038, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 2055, 0, 2056, 0, 0,
	0, 0, 0, 0, 2025, 2026, 0, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 2045, 2039, 0, 0, 0, 2057, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 2032, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 2008, 2009,
	0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	2037, 2045, 2039, 0, 0, 0, 3745, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 2033, 2034, 2035, 2036, 0, 0, 2050, 2030,
	0, 0, 2016, 0, 0, 0, 0, 0, 2027, 0,
	0, 3750, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2023,
	2029, 2051, 2028, 2024, 2063, 2021, 2019, 2020, 2012, 2013,
	2014, 2015, 2017, 2018, 0, 2049, 0, 4240, 0, 2059,
	0, 0, 0, 0, 0, 0, 2038, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 2056, 0,
	0, 0, 0, 0, 0, 2025, 2026, 0, 0, 0,
	2033, 2034, 2035, 2036, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 2022, 2023, 2029, 2051,
	2028, 2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015,
	2017, 2018, 0, 2049, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 2038, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 2055, 0, 2056, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	2009, 0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 2045, 2039, 0, 0, 0, 2057, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 2032, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 2008, 2009, 0,
	2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 2037,
	2045, 2039, 0, 0, 0, 3683, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 0, 0,
	0, 2033, 2034, 2035, 2036, 0, 0, 2050, 2030, 0,
	0, 2016, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 2023, 2029,
	2051, 2028, 2024, 2063, 2021, 2019, 2020, 2012, 2013, 2014,
	2015, 2017, 2018, 0, 2049, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 2038, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 2056, 0, 0,
	0, 0, 0, 0, 2025, 2026, 0, 0, 0, 2033,
	2034, 2035, 2036, 0, 0, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 2022, 2023, 2029, 2051, 2028,
	2024, 0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017,
	2018, 0, 2049, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 2038, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 2055, 0, 2056, 0, 0, 0, 0,
	0, 0, 2025, 2026, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 3710, 0, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 2009,
	0, 2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 2045, 2039, 0, 0, 0, 2057, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 2032, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 2008, 2009, 0, 2041,
	2042, 2043, 2052, 2053, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 2037, 2045,
	2039, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	2033, 2034, 2035, 2036, 0, 0, 2050, 2030, 0, 0,
	2016, 0, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2023, 2029, 2051,
	2028, 2024, 2063, 2021, 2019, 2020, 2012, 2013, 2014, 2015,
	2017, 2018, 0, 2049, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 2038, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 2056, 0, 0, 0,
	0, 0, 0, 2025, 2026, 0, 0, 0, 2033, 2034,
	2035, 2036, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 2022, 2023, 2029, 2051, 2028, 2024,
	0, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	0, 2049, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 2038, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 2055, 0, 2056, 0, 0, 0, 0, 0,
	0, 2025, 2026, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 2009, 0,
	2041, 2042, 2043, 2052, 2053, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 2039, 0, 0, 0, 2057, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 2032, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2050, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 2008, 2009, 0, 2041, 2042,
	2043, 2052, 2053, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 2037, 0, 2039,
	0, 0, 0, 0, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 2033,
	2034, 2035, 2036, 0, 0, 2050, 2030, 0, 0, 2016,
	0, 0, 0, 0, 0, 2027, 2613, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2023, 2029, 2051, 2028,
	2024, 2063, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017,
	2018, 0, 2049, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 2038, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2055, 0, 2056, 0, 0, 0, 0,
	0, 0, 2025, 2026, 0, 0, 0, 2033, 2034, 2035,
	2036, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 2022, 2023, 2029, 2051, 2028, 2024, 0,
	2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0,
	2049, 1100, 0, 1152, 2059, 0, 0, 0, 0, 0,
	0, 2038, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2026, 0, 0, 0, 0, 1123, 0, 1106, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1125, 0, 0, 2031, 0, 0, 1107, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 1164, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 1120, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 1140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 1153, 1112, 0, 0,
	0, 0, 0, 1113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 1114, 0,
	0, 0, 0, 0, 0, 0, 0, 1150, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 2037, 0, 1116, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 1117, 1118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1126, 1124, 0, 0, 2050, 0, 0, 0, 1119, 0,
	0, 0, 0, 1136, 0, 0, 1158, 1157, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1161, 1149, 2022, 2023, 2029, 2051, 2028, 2024,
	2063, 2021, 2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 1111, 0, 0, 1163,
	0, 0, 2022, 2023, 2029, 2051, 2028, 2024, 0, 2021,
	2019, 2020, 2012, 2013, 2014, 2015, 2017, 2018, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 1144, 1145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1155, 1142, 0, 0, 0, 0, 0, 0, 0, 1162,
	1137, 0, 0, 1129, 1127, 0, 0, 0, 1132, 0,
	0, 0, 0, 0, 0, 0, 1133, 0, 0, 1102,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1148, 0,
	0, 1146, 0, 1134, 0, 0, 0, 0, 0, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 1138, 0,
	1139, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1143,
}

var sqlPact = [...]int32{
	7337, -1000, -1000, -1000, -1000, -1000, -1000, 193, -1000, -1000,
	188, 185, 182, 181, 180, 178, 177, 176, 174, 173,
	172, -1000, -1000, 169, 166, 164, 163, -1000, 158, 157,
	-1000, 156, -1000, -1000, 154, -1000, 153, 152, 150, -1000,
	-1000, 148, -1000, 147, -1000, -1000, -1000, -1000, 145, 143,
	142, 108512, 107898, 109124, 2586, 136718, 118318, 2283, 96244, 136104,
	95630, 135490, 2436, 13046, 134876, 3071, 140, -1000, 134262, 139,
	138, 137, -1000, 117704, 133648, 115250, 114636, 2052, 1838, 1832,
	-1000, 133, 131, -1000, 9959, 81434, 129, 127, 126, 121,
	2500, 120, -1000, 118, 116, -1000, 115, 114, -1000, 15144,
	1663, -1000, 112, 110, 108, -1000, 464, 114022, 104, 103,
	102, 2756, 100, 97, 78984, 96, 95, 93, 2652, 3167,
	-1000, -1000, 2338, -1000, -1000, 92, 91, 88, 86, 82,
	81, 80, 79, 78, 77, 76, 70, 67, -1000, 64,
	63, 60, 59, 58, -1000, 57, 56, 55, -1000, 53,
	-1000, 52, 51, 50, 49, 48, 47, 46, 44, 41,
	39, 38, 36, 35, 34, 33, 157519, -1000, -1000, 32,
	-1000, 2125, 1826, 1816, 1813, 1060, 30, 29, 28, 26,
	21, 12, 10, 9, 8, 5, 3, 2, -1000, 1,
	0, -1, -4, -5, -6, -7, -8, -9, -1000, 149,
	-10, -11, -12, -13, -14, -15, -16, -1000, 2723, 3889,
	-1000, 1807, 1092, 1296, 35094, 3292, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 145898, 137330, -21, -89, -27, -1000,
	3665, 1111, 64113, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 287, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 486, 2386,
	775, -1000, -1000, -1000, 133034, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2584, -41, 96856, -1000, 2269, -1000, -1000,
	-1000, -1000, -1000, 770, -1000, 2581, 2530, 357, 2522, 96856,
	-1000, -1000, -1000, 3746, 3614, 107284, 2752, 4190, 4189, 4186,
	4184, 4183, 145286, 2031, 2817, 4180, 4179, 4177, 4176, 4174,
	4172, 4171, -1000, 106670, 1136, 106056, 105442, 3748, 132422, 104828,
	131808, 148352, 54060, 1082, 3744, -1000, -1000, -1000, -1000, -1000,
	-1000, 137330, -1000, 1134, -1000, -1000, 4167, 2294, 769, 117090,
	-1000, -1000, 131194, 1948, -1000, -1000, -1000, 981, 1273, 37610,
	37610, 37610, 285, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3759, -1000, -1000, -1000, -1000, 137330, 2987, 2987, 1512, 1297,
	1297, 2987, 2987, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4162, 4161, 4157, 4155, 4154, 1466, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 95016, 27357, 94402, 93788, 130580, 53431,
	104214, 103600, 89490, 4153, 4152, 109124, 52802, 61605, 3885, 129966,
	147738, 3884, 3880, 1133, 2268, 1609, -1000, -1000, -1000, -1000,
	-1000, -1000, -45, 85128, 3947, 137330, -1000, 284, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52173, 960, 51544, 843, 50915,
	787, 129352, -1000, -1000, -1000, -1000, -1000, 88866, 3612, -1000,
	128738, 1679, 2751, 4151, 4150, 1233, 4149, 3595, 1988, 4148,
	4147, 4146, 4139, 4138, 4133, 4131, 1641, 128124, 2927, 127510,
	1897, 147124, 2114, 1132, 102986, 109124, 2899, 126896, 1522, 1518,
	-1000, -1000, -1000, -1000, 3385, 3148, 3138, 1428, -1000, -1000,
	-1000, -1000, -1000, 67849, 9637, 8213, -1000, -1000, 11264, 126282,
	70959, 109124, 109124, -1000, -1000, -1000, -1000, -1000, -1000, 50286,
	853, 49657, 1044, 125668, -1000, -1000, 68471, 3253, 1184, -1000,
	-1000, -1000, -1000, -1000, 125054, 49028, 444, 48399, 1041, 137330,
	-1000, 3291, 2244, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3095, 1784, 3952, 2992, 88242, 2253, 1540, 3708,
	3378, 3374, 1652, 2258, 3370, 4130, 2919, 3361, 3357, 3349,
	3344, 3341, 1728, 2861, 481, 2854, 34465, 3279, 1957, 47770,
	1648, 1637, 3338, 3335, 3968, 3797, 2251, 2203, 2204, 2249,
	93174, 4126, 4119, 3662, 3321, 3320, 3090, 3310, 2128, -1000,
	3252, 1634, 260, -1000, -1000, -1000, -1000, -1000, -1000, 260,
	1589, -1000, -1000, -1000, -1000, -1000, 98080, -1000, -1000, 1466,
	-1000, -1000, -1000, 1417, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1807,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3312, -1000, 2308, -1000, -1000, -1000, 2821, 3613, 3613, 3613,
	3742, 455, 452, -1000, 149, 915, 1213, -1000, -1000, 156865,
	-1000, -1000, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689,
	2443, -1000, 768, -1000, -1000, 803, -1000, 767, 686, 618,
	-1000, -1000, -1000, -1000, -1000, -1000, 764, -1000, -1000, -1000,
	-1000, -1000, -1000, 3918, -1000, 30554, -1000, -1000, -1000, 484,
	763, 54689, -1000, -1000, 3994, 3993, 1099, -1000, 259, 1020,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3290, 761, 760, -1000, 759, 758, 756, 755,
	753, -1000, 752, -1000, 747, 746, 743, 742, 737, 736,
	732, 731, -1000, 2291, -1000, -1000, -1000, -1000, -1000, -1000,
	672, 671, 671, 671, -1000, 1122, -1000, -1000, -1000, 293,
	670, 258, 661, 660, 659, -1000, 729, 728, 723, 708,
	707, 698, 693, 692, 691, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1121, -1000, -1000, -1000, -1000, 1436, -48, 137330,
	-1000, 486, -48, -1000, -1000, 689, -1000, 38886, 38886, 38886,
	-1000, -1000, 2579, 54689, -1000, 2741, -1000, -38, -38, 955,
	65979, -1000, 62851, 955, 356, 819, 72195, -1000, 3251, -1000,
	-1000, 688, 242, -1000, -1000, -1000, -1000, 27979, 3250, 137330,
	137330, 137330, 109124, 109124, 109124, 137330, 4116, 4115, 3496, 54689,
	-1000, -1000, 80820, 150188, 109736, 1415, -46, -1000, -1000, 3860,
	84506, 80208, 3287, 150188, 3285, 3249, 149580, 87618, 272, 3452,
	-1000, -1000, 687, 4112, -1000, -1000, -1000, -1000, -1000, 3448,
	4106, 4103, 4099, 137330, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 268, 3447, -1000, -1000, 113408, 268, 3446, -1000, 268,
	3442, -1000, 112796, -1000, -1000, 2498, 3441, -1000, -1000, 271,
	3438, -1000, -1000, -1000, 269, 3437, -1000, -1000, 240, -92,
	3432, -1000, -1000, -1000, -1000, -1000, -1000, 156865, -1000, -1000,
	-1000, 148966, -1000, 3667, -1000, 137330, -1000, 54689, -1000, -1000,
	3859, 1833, 3664, 3781, -1000, -1000, -62, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2792, 2799, 1247, 2633, -1000, 3524,
	1554, 37610, 3582, -1000, -1000, -1000, -1000, -1000, 239, 27979,
	3117, -1000, -1000, 137330, -1000, 137330, 2987, 2987, -1000, -1000,
	-1000, 3960, 3959, 2987, 2987, 137330, 137330, -1000, -1000, -1000,
	-1000, -1000, -1000, -62, -1000, 2453, 3431, 1655, -1000, 2623,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2112,
	3430, -1000, 2239, 3429, 2100, -1000, -1000, 5344, -1000, 153892,
	1477, -1000, -1000, -1000, -1000, 2411, 3428, -37, -1000, -1000,
	2845, -1000, 3950, 3159, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7108, 153591, -1000, 1815, -1000,
	-1000, 2326, 2208, -1000, 1444, 3427, -1000, 2990, 2990, 102372,
	3465, 70337, 68471, 85128, -58, -1000, -1000, -1000, -1000, -1000,
	-96, -1000, 26727, 156865, -1000, -1000, -1000, -1000, 1986, 156865,
	959, -1000, -1000, 3425, -1000, 156865, 956, -1000, -1000, 3424,
	-1000, 2860, -1000, 3282, -1000, -1000, -1000, 2704, 86994, 2703,
	1077, -1000, 109124, 2256, 4098, -1000, 4096, -1000, -1000, 4094,
	-1000, 4092, 4091, 4088, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 101760, 2578, -1000, -1000, 1615, 1039, 90112, -1000, 2702,
	3779, -1000, 101146, 1130, -1000, 1057, 2700, -1000, 1438, 112184,
	1073, 2698, -1000, 4086, 3745, 2926, 1057, 2697, -1000, -1000,
	-1000, -1000, -1000, 1076, -1000, 73419, -1000, 73419, -1000, 1812,
	-1000, 144674, -38, 109124, 3918, -1000, -93, -1000, -1000, -1000,
	1111, -1000, 67224, -1000, 67224, 116476, 90112, 1039, 3248, 77126,
	156767, -1000, 1075, -1000, -1000, 156865, -1000, -1000, -1000, 2856,
	-1000, -190, 2988, -1000, 90112, 69715, 3247, 2855, -1000, 156865,
	-1000, -1000, -1000, -1000, 156865, -1000, -1000, -1000, 90112, 1615,
	-1000, 124440, 100532, -1000, -1000, 1623, 2839, -1000, -1000, -1000,
	68471, 3246, 1446, 90112, 90112, 90112, -1000, 123826, -1000, -1000,
	2270, 1388, 3648, 2259, 109124, -1000, 2060, -1000, -1000, -1000,
	3686, 3460, 137330, -1000, -1000, 3281, -1000, 83894, 111572, -1000,
	110960, -1000, 110348, -1000, 109124, -1000, 109124, -1000, 4082, 4081,
	4080, -1000, -1000, 4079, -1000, 4078, 3675, -1000, 860, 47141,
	156865, 3673, -1000, 4077, 2195, 3279, 156865, -1000, 3455, 1835,
	1828, 137330, -1000, -1000, 137330, -1000, 137330, -1000, -1000, -1000,
	2613, 1693, -1000, -1000, 2790, -1000, -1000, -1000, 1072, -1000,
	-1000, 109124, 109124, 109124, 109124, 109124, 1310, -1000, 46512, -1000,
	-1000, 3304, 4076, 1892, -1000, 2058, -1000, 3242, 3676, -1000,
	3241, 1621, 1995, 238, 3997, 238, -1000, -1000, 273, -1000,
	-1000, 144062, -1000, 2821, -1000, 137330, -1000, 2784, 3273, 3278,
	1670, 2609, 2900, -1000, 45883, 2875, 58463, 2621, 149, -1000,
	-1000, 149, 149, 36352, -1000, -1000, 37610, 915, 84506, 84506,
	27979, 1425, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689,
	54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689,
	54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689,
	54689, 54689, 54689, 54689, 54689, 54689, 54689, 54689, 2221, 54689,
	1412, 54689, 54689, 54689, 54689, 2193, -1000, -1000, 2157, 530,
	2288, 686, -1000, -1000, -1000, 3920, 3920, 3920, 1094, 1094,
	1094, 157186, 157186, 540, 4074, 803, -1000, 54689, -1000, 87,
	66591, 54689, 28603, -1000, 452, 13677, 2794, -1000, 451, 29262,
	-1000, -1000, -1000, 30554, 618, 45224, 54689, 1088, 156865, -1000,
	-1000, 1440, 3955, 26097, 3162, 3054, 685, 894, 892, 33806,
	33147, 32488, 31829, 891, 808, 54689, 54689, 54689, 54689, 54689,
	54689, 54689, 54689, -1000, -1000, 3958, -1000, 3955, -1000, -1000,
	-1000, -1000, 3955, 1423, 1422, 3955, -1000, 3955, 3955, 8700,
	8700, 44595, 43966, 43337, 59092, 42708, 54689, 31200, 42079, 41450,
	-1000, 60979, 137330, -48, 3858, 54689, 333, -1000, 12837, -1000,
	333, 333, 683, -94, 156865, 2858, 2858, 64735, 2519, 2467,
	2467, 2467, -1000, 955, 20388, 955, 121990, 2478, 955, 955,
	231, 264, 440, 62229, 2741, 121990, 792, 682, -28, -29,
	-31, -1000, -1000, -33, -34, -1000, -1000, 109124, 681, 28603,
	27979, 225, 2218, -95, 2877, 2874, 2872, 2871, -1000, 2868,
	2577, -1000, -1000, -1000, 2013, -101, 1397, 109124, 137330, 1642,
	-1000, -1000, -1000, -1000, 85128, -49, 85128, 137330, 3611, -100,
	-1000, 150188, 7189, -102, -1000, 1410, 223, 3955, -1000, -1000,
	-1000, -1000, -1000, 4073, 4072, -1000, 1120, 679, 673, 450,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 672, 671,
	671, 671, -1000, 293, 670, 258, 661, 660, 659, -1000,
	-1000, -1000, -1000, -1000, 3235, 109124, 137330, 1511, 83282, 99918,
	-92, 109736, 150188, -59, -1000, -1000, -1000, -1000, 109124, -1000,
	-1000, 109124, -1000, 74647, -1000, 137330, -1000, -1000, -1000, 4071,
	-1000, 109124, 109124, 268, 3422, -1000, 109124, -1000, 109124, 266,
	3420, -1000, -1000, 137330, -1000, 109124, 109124, -1000, 137330, 137330,
	137330, 150188, 150188, 265, -1000, 109124, 915, -103, 1239, -62,
	-1000, -1000, -1000, -1000, 1466, -1000, 2001, -1000, -1000, -1000,
	-1000, -1000, -1000, 1448, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1099, -1000, -1000, -1000, -1000, 3939, 3930, -57,
	-1000, -1000, 27979, -1000, 2093, -1000, -1000, -1000, -1000, 137330,
	137330, -1000, -1000, 137330, 137330, -1000, -1000, -63, 1786, 574,
	1396, -1000, 92560, 2691, 3659, 4068, 2917, 3607, 1810, -1000,
	1683, 649, -1000, 3767, 98080, 3796, 3833, 1464, -1000, 3234,
	-1000, -1000, -1000, 979, 1879, 1980, 1395, 1391, 98080, 2239,
	-1000, 84506, -1000, 2945, 3741, 1297, 1485, 1297, 1297, 1488,
	1483, -1000, 98080, 1978, 1387, 1382, 1378, -1000, -1000, 1772,
	1756, -1000, -1000, 123214, 1915, -1000, 1377, 1376, 138554, 3879,
	3312, 2430, 836, 2216, -1000, 1465, 1375, 3230, -1000, -1000,
	-65, 3794, 3818, 1464, -1000, 3223, 1373, -1000, -1000, -1000,
	3738, 109124, 27979, 1721, 1720, 1703, 1971, 1370, -50, -1000,
	3789, 1799, -1000, 3898, 90112, -1000, 2725, 6025, 1368, 1962,
	1365, 3518, -1000, -1000, 2576, 2656, -1000, -1000, -1000, -1000,
	1839, 3010, -1000, 2798, 1481, 1481, 137330, -1000, 1755, -1000,
	1615, 1615, 118930, 137330, -1000, -1000, -1000, 3702, 3699, -1000,
	-1000, 1361, 1360, -1000, 1124, 10211, 3550, -1000, 150188, 1124,
	1124, 2081, 3415, 2962, 1753, -1000, 2984, 940, 2980, -1000,
	-1000, -1000, 940, -58, 85128, 137330, 215, -1000, 87, 54689,
	54689, 87, 54689, 87, -1000, 3772, 3413, 3857, -1000, 3409,
	4067, 648, -1000, 2815, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 646, 2696, 3220, 137330, 128, -1000, 109124, -1000, 3856,
	122602, -1000, 3407, 150188, 2239, 2695, -1000, -1000, 99306, -1000,
	3406, 2232, 486, 2689, -1000, 739, 4066, 3405, -1000, 143450,
	-1000, 3667, 1441, 3400, 1181, 784, 3853, -1000, 784, 75270,
	-1000, 137330, -1000, -38, 6558, 91336, -108, -109, 439, -1000,
	137330, 137330, 3570, 2236, 2235, -1000, 1046, 68471, -1000, 68471,
	-110, -1000, -190, 2978, 1665, 68471, -1000, 1039, -124, 940,
	-1000, 940, -1000, 109124, 3276, -1000, 90112, 68471, -1000, 1039,
	1039, 1039, -1000, -1000, -1000, -1000, 4065, 4064, 4062, 4061,
	-1000, -1000, 1056, 109124, 137330, 109124, -1000, 2960, 1744, -1000,
	214, -1000, 150188, -1000, 150188, 137330, 109124, -1000, 1056, 137330,
	1056, 137330, 1056, 137330, 1056, 1056, -1000, -1000, -1000, -1000,
	-1000, 87, -1000, -1000, 156865, -1000, 54689, -1000, -1000, 1681,
	4060, 1834, -1000, 3275, -1000, 3274, -1000, 7, -1000, -1000,
	3957, 2102, -1000, 3992, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4059, 156865, -1000, 2044, -1000, -1000, -1000,
	-1000, 109124, 109124, 109124, 109124, 137330, 3545, -1000, 137330, 3542,
	3544, 109124, -1000, 3996, -1000, -1000, 98080, -1000, 2784, 3273,
	-1000, -1000, -1000, -1000, -1000, -1000, 1661, 2538, -1000, 2834,
	-1000, 1715, -1000, -1000, -1000, 156865, 59721, -1000, -1000, 156865,
	2016, -1000, 57834, 57205, -1000, -1000, 1858, 109124, 2891, -1000,
	2891, -88, -1000, 154369, 2833, 109124, -57, 37610, -1000, -1000,
	-1000, -1000, -1000, 978, 1160, 1160, 1462, 1462, 1462, 1462,
	3768, 7644, 5685, 6156, 5641, 5641, 724, 724, 724, 724,
	724, 5641, 2325, 1094, 1094, 2325, 2325, 2325, 2325, 2325,
	1094, 1094, 1094, 5641, 5641, 5641, 1094, 157186, 19679, 11635,
	54689, 54689, 1347, 2153, 530, 10124, 54689, 11922, 11922, 11922,
	11922, -1000, 2328, -1000, -1000, -1000, -1000, 3219, 633, 59092,
	59092, -1000, -1000, -1000, -1000, 29908, 54689, -1000, -1000, -1000,
	-1000, 40791, -1000, -1000, 153472, -337, 436, -1000, 213, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 434, -87, 111, -1000, 54689, 54689, 54689, 432,
	-1000, 211, 54689, 137330, -1000, 19164, 790, -111, -1000, -116,
	1547, -1000, 54689, -1000, -1000, 1345, -1000, 1339, 1337, 1334,
	-1000, 632, 428, -1000, 210, -1000, 2456, 631, 630, 54689,
	-1000, -1000, -1000, -1000, -1000, 153171, -1000, -1000, 153083, -1000,
	-1000, 152750, -1000, -1000, 152432, -1000, -1000, -1000, -1000, -1000,
	156446, 18743, 18427, 17619, 11139, 17574, 16606, -119, 422, -121,
	420, 974, 973, 418, 417, 414, -142, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -145,
	412, -1000, 3214, -87, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 411, -1000, 408, -1000, 156348, -87, 405, 511,
	-1000, 59092, 59092, 59092, 59092, 403, -1000, 154281, -1000, 156027,
	40162, 40162, 40162, 395, 155929, 54689, -87, -147, -1000, -152,
	-1000, -1000, -1000, -1000, 555, -154, 1078, 38886, 63489, 27979,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1078, 1078, 54689, -1000, 54689, 2848, -1000, -1000,
	-1000, -1000, 2844, 2335, 2858, 64735, -1000, -1000, -1000, -1000,
	121990, -1000, 3918, 3061, -1000, 121990, -1000, -1000, 137330, 486,
	-1000, 121990, 121990, 27979, 955, -1000, 955, 121990, 740, -1000,
	-1000, -1000, -1000, -1000, 394, 77748, 111, 204, 27979, 1057,
	-1000, -1000, 3003, 3003, 3003, 3003, 3003, 109124, -1000, -1000,
	150188, 1330, -55, -73, 2975, 2974, -58, 85128, -58, -96,
	137330, 3894, -264, -1000, 2306, -1000, 84506, -1000, 802, 1223,
	27979, -1000, -1000, -1000, 627, -1000, 3955, 3955, -1000, 3955,
	150188, 3210, 306, 2968, 2967, -1000, 2573, 96856, 300, -92,
	150188, -1000, 272, -160, -1000, -1000, 82658, 78360, -1000, 2472,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4058, -1000, -1000,
	268, -1000, 109124, 268, 268, -1000, 109124, 109124, 2498, -1000,
	271, -1000, 269, -1000, -1000, -92, -1000, 1071, 37610, -1000,
	1466, -1000, -1000, 1704, -1000, 2245, -1000, 1357, -1000, -1000,
	37610, -1000, 3573, -1000, 1857, -1000, -1000, -1000, -1000, 2464,
	137330, 137330, 109124, -1000, 120154, 137330, -1000, 2396, 150188, -1000,
	2688, 142838, 2677, 142226, 84506, -1000, -1000, 626, 1005, 2830,
	2829, 1179, 137330, 137330, 2828, 141614, 141002, -1000, 4057, 137330,
	2303, 54689, 120154, 3737, 2451, 2110, 87, 87, -1000, 87,
	-1000, -1000, 625, 1331, 109124, 109124, 137330, 150188, 109124, 2007,
	-1000, -1000, -1000, -1000, -1000, 98692, -1000, -1000, 1297, -1000,
	-1000, -1000, 1297, -1000, 1297, 2239, 1928, 137330, 150188, 109124,
	150188, 140390, 2206, 139778, 2202, 2189, -1000, -1000, -1000, 2134,
	2173, 2382, 1952, 137330, -1000, -1000, -1000, -1000, -1000, 1537,
	-1000, 836, 1329, 3203, 54689, 54689, 2340, 87, 87, -1000,
	87, 623, 27979, 2174, -1000, 3228, 137330, 3991, 139166, 3989,
	137330, 137330, 137330, 150188, 3634, 137330, -53, -1000, 1470, -1000,
	3898, -1000, 926, -1000, -1000, -1000, -1000, 137330, 137330, 150188,
	2571, 2653, 2567, 3007, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -124, -54, -131, -1000, 925, 924, -96, 2294, 137330,
	150188, -1000, 138554, 10211, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2388, 2999, 1192, 137330, 1444, -1000, -1000, 1946, 1323,
	1321, 98080, 2330, 1937, 2054, 150188, 68471, 1052, 68471, 2932,
	-1000, -1000, 25467, -1000, 156865, 156865, -1000, 156865, -1000, 82046,
	90112, 90112, 137330, -1000, 75892, 137330, 91948, 1016, 3398, 74033,
	-96, 1039, 1615, 3309, 1821, -131, 622, 137330, -1000, -1000,
	2239, 3397, 486, 2687, -1000, 150188, 1125, 3852, 3396, 620,
	4056, 4055, -1000, 109124, 2565, 2686, -1000, -1000, 137942, 3477,
	836, 137330, 1078, 64735, 2211, -1000, 71583, 1163, 137330, 2092,
	283, -1000, -1000, -1000, -19, 137330, -1000, 816, -1000, -1000,
	6558, 6558, 1039, 69093, -173, -1000, 201, 619, 920, 917,
	-1000, 4132, -1000, -190, -1000, 90112, 1046, 68471, 3200, -190,
	2964, 3191, -1000, -1000, 1070, -1000, 1610, 2963, 1039, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-39, -1000, 1926, 2051, 137330, -92, -92, -70, -1000, -1000,
	200, -55, -1000, 1056, -1000, 1056, -1000, 1056, -1000, -1000,
	-1000, 156865, -1000, -1000, -1000, 1827, 1825, 137330, -1000, 3269,
	-1000, 137330, -1000, -1000, 27979, 137330, 109124, 27979, 109124, 3268,
	3266, -1000, -1000, -1000, 137330, -1000, -1000, 137330, -1000, -1000,
	-1000, -1000, -1000, -1000, 1204, -1000, 2016, 2535, -1000, 618,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2769,
	-1000, -56, 36352, 951, -1000, -1000, 109124, -42, -57, 54689,
	54689, 8693, 7925, 54689, 59092, 59092, -1000, 54689, 5928, -1000,
	-1000, -1000, -1000, -1000, 3186, 616, 54689, 84506, 9468, 9279,
	-1000, 391, 16176, 2325, -1000, 54689, -1000, 6286, -1000, 390,
	39533, -1000, 154758, 83, -175, -1000, 21033, -87, -181, -1000,
	-1000, 801, -1000, 3381, -1000, 54689, 155608, 2746, 2127, 2040,
	1856, 3955, 3988, 24837, -1000, 76514, 1080, 2484, 152324, -1000,
	-1000, -1000, -1000, 84506, 84506, 54689, 54689, -1000, 54689, 54689,
	54689, -1000, -1000, -1000, 3955, 968, -1000, -1000, -1000, 968,
	-1000, -1000, 1297, -1000, 1297, -1000, 54689, -1000, -1000, 3183,
	54689, -1000, 84506, 84506, 59092, 59092, 59092, 59092, 59092, 59092,
	59092, 59092, 59092, 59092, 59092, 59092, 59092, 59092, 59092, 59092,
	59092, 59092, 59092, 59092, 2837, 59092, 3917, 3917, 3917, 1203,
	-1000, 3263, 3183, 54689, 54689, 84506, 385, 377, 375, -1000,
	54689, -87, -1000, -1000, 12028, 615, -1000, 2758, -1000, 3025,
	-1000, 54689, -1000, -172, -1000, 2741, -1000, -1000, 3025, 3025,
	-182, 156865, 64735, 64735, -1000, 613, 54689, 2842, -1000, -1000,
	789, -334, -1000, 907, -1000, -1000, -1000, -1000, -1000, -1000,
	906, -1000, 486, -1000, -1000, -1000, 199, 121990, 121990, 786,
	-1000, -183, -1000, -1000, -184, -1000, 3850, 373, 27979, -1000,
	1078, 3000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2863,
	-264, 150188, 150188, 1905, 1903, -58, -96, 2521, -1000, 3087,
	3986, -1000, 3956, 796, 783, 197, 3955, 370, 369, 368,
	-92, 150188, 150188, 1900, 1872, 79596, 3164, 150188, -1000, -1000,
	-1000, 75892, 84506, -1000, 84506, -1000, -1000, -1000, -1000, 268,
	-1000, -1000, -1000, 266, -1000, -1000, -1000, -1000, 2958, -1000,
	-62, -1000, -1000, -1000, 54689, -1000, 1032, -1000, -1000, 3654,
	611, 1319, 1317, -1000, -189, -1000, 904, -1000, -1000, -1000,
	-1000, -1000, 3122, -1000, 3394, -1000, 2684, -1000, 1172, 2683,
	1789, -1000, 54689, 609, 2924, 607, 604, 4054, 2352, 4053,
	1180, 3392, 2498, 3383, 2498, -1000, -1000, -1000, 987, -1000,
	156865, -192, -1000, 2451, -1000, 603, 602, -1000, -63, 1779,
	525, 1316, 1066, -1000, -1000, 54689, 54689, 121378, -1000, 503,
	3643, -43, -1000, -1000, -1000, 1868, 1314, 1302, -1000, -1000,
	-1000, -1000, -1000, 2239, 1867, 1300, 1299, -1000, -1000, -1000,
	-1000, -1000, 2682, -1000, 137330, -1000, 3380, 137330, -1000, 836,
	137330, 3643, 3089, 1062, -1000, 3319, 3318, 972, 137330, 54689,
	54689, 155510, 155189, -1000, 1061, -1000, -1000, 54689, -1000, -65,
	1298, 3799, 2681, 109124, -1000, 2498, 3377, 1285, -1000, 1284,
	-1000, -1000, -1000, 3788, 3784, 1294, 1799, 90112, 68471, 2713,
	-1000, 3771, 2509, 3936, 3898, 68471, -1000, -1000, -1000, 3328,
	2906, 2648, -1000, -1000, -1000, 118930, 90112, 90112, -1000, -1000,
	-1000, 3936, -1000, -1000, -1000, -1000, 86370, -1000, -1000, 1124,
	137330, 150188, 109124, 1846, -1000, -1000, 96856, 97468, 137330, 2962,
	-92, 940, -1000, 2749, 940, 1052, 3155, -1000, 2886, -1000,
	-1000, 1059, 367, -66, -1000, 1336, 4050, 364, -195, -67,
	84506, -1000, -1000, -1000, -1000, 2677, 109124, 137330, 1366, 2921,
	137330, 137330, 3849, -1000, 2545, 552, 109124, 957, -1000, 3918,
	-1000, -1000, -1000, 137330, 38886, 118930, -1000, 3778, 109124, 3848,
	3375, 1057, 109124, 87, 109124, 3967, -1000, -1000, 3847, 109124,
	3371, 2564, 2680, 2806, 836, 90724, 1057, 2483, -75, -1000,
	2092, 38239, 3638, -201, -1000, -1000, -1000, 1078, 75270, 64735,
	54689, 4042, -203, -1000, -1000, -1000, -1000, -1000, 90112, 1039,
	137330, 137330, 4041, 90112, 90112, 90112, -68, 598, -1000, 902,
	895, 890, -1000, -1000, -1000, -1000, -1000, -1000, 883, 881,
	877, 875, -1000, 1046, -1000, -1000, -190, 68471, 1046, 68471,
	87, -1000, 2492, 109124, 68471, -1000, 24207, 137330, 2960, -1000,
	85740, -1000, -1000, -1000, -1000, -1000, 1056, 3985, -96, -1000,
	-1000, -1000, 2395, 2619, 2395, 2033, 2029, -1000, -1000, -1000,
	2533, -1000, -1000, -1000, -1000, 2907, 3604, 27979, 3773, 11922,
	54689, 54689, 600, 8963, 6396, 11922, 54689, 54689, 84506, 157284,
	-204, 54689, 54689, -1000, 54689, 782, 156865, -1000, 3982, 54689,
	359, 358, -1000, -1000, -1000, 3951, -1000, -1000, -1000, 156865,
	54689, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 351, -1000,
	84, -1000, -1000, -1000, 146510, -1000, 54689, 348, 3736, -1000,
	347, 346, 14183, 9766, 152279, 152006, 151619, 344, -1000, -1000,
	342, 340, 156865, 3263, 156865, -1000, -1000, 997, 997, 1452,
	1452, 1452, 1452, 3917, 711, 876, 674, 573, 573, 573,
	647, 1203, 1203, 573, 573, 573, 1203, 3153, 2850, 597,
	5953, -1000, -1000, 156865, 156865, 339, -1000, -1000, -1000, -87,
	338, 12028, -1000, 3042, 3735, 156865, -1000, 64735, 3042, 3042,
	-1000, -1000, 2335, 137330, 156865, 64735, -1000, 3061, -1000, 22311,
	21675, -1000, 27979, -1000, -1000, -1000, -1000, 3918, -1000, 77748,
	-1000, 596, -1000, -18, -1000, 3000, -1000, 873, -1000, -1000,
	90112, 90112, 4039, 4036, -1000, 3979, 3978, 2355, 3977, 3003,
	-1000, -264, -165, 137330, 137330, -1000, 2499, -1000, 741, 4033,
	794, 27979, 335, -1000, -1000, -1000, -92, -92, 137330, 137330,
	3150, 109124, 137330, 1381, 150188, -92, -1000, -1000, -1000, -1000,
	-1000, -1000, 3557, 156865, 3261, 3022, 3021, 137330, 137330, -1000,
	120154, 37610, 1524, 120766, 137330, 3367, -1000, 3365, -1000, 1179,
	6956, 151574, 65357, -1000, 65357, 137330, -1000, -1000, -1000, -1000,
	2108, 1591, 4032, 1227, -1000, 3691, 137330, -1000, 137330, -1000,
	-1000, -1000, 120154, -1000, 137330, 137330, 109124, 137330, -1000, 150188,
	3339, -210, 156865, -69, -1000, 867, -1000, 1458, -1000, 23577,
	137330, 150188, 109124, 137330, 150188, 109124, 3360, 1162, 137330, -1000,
	137330, 1161, -1000, -1000, 137330, 2423, -1000, -1000, 3315, -1000,
	156865, 155091, 87, 54689, 3337, -216, 27979, -1000, 3974, 3972,
	3351, 3695, -1000, 137330, 3971, 137330, 109124, 3556, -1000, -1000,
	-1000, -1000, 863, 858, 857, 855, 852, 3902, 118930, -1000,
	1055, 137330, -1000, 2897, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1866, 1283, 1282, 2561, 2560, 2497,
	-70, 2330, 1052, -71, 586, -1000, 1052, -1000, 90112, 68471,
	4031, 2065, 75892, 54689, 54689, -1000, 2915, -1000, 115862, 91948,
	2542, -1000, -1000, 572, 137330, 137330, 571, -1000, 87, -1000,
	4030, 120154, 570, -1000, 2488, -1000, 725, -1000, -1000, 243,
	-219, 150188, 2239, 87, 109124, -1000, 486, 1045, 486, 329,
	-72, -1000, 3464, 1176, 27979, 109124, 3346, 2808, 836, 90724,
	-1000, 1441, 2900, -1000, -74, -1000, 519, 87, 2483, -1000,
	-75, 156865, -1000, 847, 328, -1000, 3555, -1000, -1000, -221,
	-1000, -1000, 4376, 4376, 90112, 68471, 90112, 90112, 90112, 68471,
	90112, -1000, 1046, 3845, -1000, -190, -1000, 2690, -1000, 1039,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27979, 1851,
	-1000, 550, 548, -1000, -1000, -1000, -1000, 3604, 11922, 11922,
	54689, 54689, 54689, 11922, 157284, -226, -1000, 11922, 11922, -87,
	-1000, -1000, 154758, -1000, -1000, -1000, 156865, -1000, 22947, 2412,
	-1000, 151502, -1000, 36352, -1000, -1000, 54689, 54689, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 59092, 3140, 547, 84506,
	-1000, -1000, 327, 1074, 54689, 56576, 2741, 1074, 1074, -1000,
	-227, -1000, -1000, -1000, 3918, -1000, 3918, -18, -1000, -1000,
	4029, 27979, -1000, 90112, -1000, -1000, -1000, -1000, -1000, 4028,
	4024, 2647, 4022, 4019, -1000, -1000, -1000, 3301, -130, -159,
	-1000, 785, -1000, 4017, -1000, -1000, 227, 206, 150188, 3134,
	187, 2959, -92, -1000, 87, -1000, -1000, -1000, -1000, -1000,
	-1000, 2953, 3843, -1000, 2163, -1000, 137330, 137330, -1000, 137330,
	-1000, 27979, 137330, 3017, 1353, -1000, 1005, 2827, 546, 59092,
	1202, 109124, 950, 3013, 3006, -1000, 3869, 3733, 3044, -232,
	-1000, 137330, 54689, 137330, -235, -237, 2640, -1000, -1000, 1199,
	1351, 54689, 1198, -1000, -1000, -1000, 84506, 543, 2498, 2498,
	-1000, -238, -240, -1000, -1000, -1000, 54689, 1279, 137330, 36981,
	-1000, 4015, 3643, -1000, -1000, -1000, -1000, -1000, -1000, 137330,
	137330, -1000, -1000, 137330, 3643, 137330, -1000, 54689, -1000, 154670,
	54689, 1257, -1000, -1000, -1000, 3970, 2498, 27979, 2498, -1000,
	2498, 3695, 1221, 90112, 54689, 1622, 68471, 68471, -1000, -1000,
	-1000, 2589, -1000, -1000, 137330, 150188, 109124, 1750, 1750, 3124,
	-1000, -1000, -1000, 2713, 2713, -1000, -76, 1052, -1000, 1737,
	-1000, 156865, 156865, 2398, 4012, -1000, -1000, -1000, -1000, 2825,
	-1000, -1000, -1000, 137330, 2824, 3049, 65357, 542, 541, 137330,
	1040, -1000, -243, 91948, 1016, 1007, -1000, 73419, -1000, -1000,
	-1000, -1000, 486, 3841, -1000, 2946, 3840, -1000, 3969, 539,
	538, 137330, 2558, 534, 27979, 3610, 836, 90724, -1000, 3477,
	2092, -1000, 2658, 137330, 3601, -1000, 2900, 530, 1039, 528,
	1039, -1000, -245, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1434, 1046, -77, -1000, 954, 914, -1000, -1000,
	-1000, 109124, 109124, 54689, 54689, -1000, 11922, 11922, 11922, -1000,
	321, -1000, -1000, 2483, 3729, -1000, -84, 150920, 150848, 663,
	59092, 84506, -246, -1000, -1000, 137330, 156865, -85, -1000, 156865,
	527, 526, 476, -1000, -1000, -1000, 675, 601, -1000, -1000,
	-1000, -1000, 4011, -1000, -1000, -1000, 150188, 150188, 4010, -1000,
	150188, 150188, -92, 150188, 150188, 1863, -1000, 119542, 137330, -1000,
	-1000, 1789, 2458, -1000, -1000, 137330, 2679, -1000, -1000, -1000,
	1048, 54689, 5953, 59092, 524, 54689, -1000, 522, 521, 3832,
	3531, -1000, 2912, 3102, 2085, 65357, -1000, 3604, -1000, 150803,
	-1000, 1175, 2207, -1000, -1000, -1000, -1000, 156865, 59092, 3695,
	65357, -1000, -1000, 520, 515, 156865, 512, 844, 3130, -1000,
	-1000, -1000, -1000, -96, -96, -1000, -1000, 156865, 87, 156865,
	509, 3799, -1000, -1000, -1000, -1000, 2498, 109124, -1000, 156865,
	-1000, -1000, -1000, -1000, 842, -1000, -1000, -1000, 1254, -1000,
	-1000, -1000, -1000, 4009, 4008, 3119, 96856, -1000, -248, 2228,
	84506, -1000, 1016, -1000, -1000, 2542, 508, -1000, 1038, 2701,
	2701, -254, 65357, 65357, -256, 2543, 2941, -1000, 320, 3827,
	1007, -1000, 3941, -1000, 1078, -1000, 3826, 87, 3554, -1000,
	87, -1000, 3967, 65357, -1000, 109124, 65357, 2549, 2287, 2783,
	90724, -1000, 2806, -1000, -1000, -259, 137330, 2092, -1000, -1000,
	90112, -1000, -1000, 3945, -1000, 2690, -1000, 137330, -1000, 137330,
	-1000, -1000, -261, -262, -1000, 2353, 54689, 36352, -1000, -1000,
	663, -269, -1000, -86, -1000, 3825, 56576, 4005, 4004, 4003,
	-1000, -1000, -1000, -264, -264, -1000, -92, -92, -92, -92,
	137330, -1000, 2154, -1000, 2677, -1000, -1000, 3343, -1000, 3032,
	495, 19487, 5953, 2762, 137330, 19408, 2239, 2239, -1000, 3824,
	3094, -1000, -1000, 2340, 489, -1000, -1000, -1000, -1000, 951,
	137330, 1038, 3031, 109124, 5953, 1178, -271, 2395, 2395, 54689,
	35723, 2419, -1000, 54689, -1000, -1000, 3695, 68471, 150188, -1000,
	-1000, 150188, 2544, -1000, 3106, 6747, -1000, 2543, 137330, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1175, -276, -277, -1000, -1000, 3682, -1000, 3552, 2915,
	87, -1000, -1000, -1000, 87, -1000, 4002, 1045, 318, -278,
	1176, -283, 109124, 2159, -1000, 836, -1000, 2808, 1078, 3490,
	-1000, -285, -1000, -1000, -1000, -286, -288, -1000, -1000, 302,
	55947, 55947, 55947, -87, -88, -1000, 137330, 487, -1000, -1000,
	-1000, -1000, -1000, -1000, 168, -1000, -1000, 3307, 943, -1000,
	848, 2191, 290, 1186, 289, 113, -1000, -1000, -1000, 3044,
	-1000, 137330, -1000, -1000, -1000, 943, 486, -1000, 54689, 1175,
	-291, -1000, 1158, -294, -1000, 1128, -296, -1000, 3118, -1000,
	-297, 2498, -1000, -264, 265, 1750, 1043, 3769, 2477, 6747,
	-1000, 3966, 90724, -1000, -1000, -1000, 2775, -305, -1000, -1000,
	2085, 1175, 2340, 2602, -1000, 2398, 1040, -1000, -1000, -1000,
	-1000, 1175, 485, 2085, 480, 1653, 836, -1000, -1000, 1297,
	3610, 3483, 1499, 1039, -1000, -1000, -1000, 3372, -1000, 60350,
	2514, 2022, 153980, 3372, 3372, -1000, -1000, 150188, 137330, 1038,
	3753, -1000, 933, 896, 1649, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1078, -306, -1000, 2762, 156865, 1038, -1000,
	2395, 2948, -1000, 2395, 3116, -1000, 2417, -1000, -1000, -1000,
	-1000, 3111, -1000, 1984, 3896, -1000, -1000, 3792, 54689, -1000,
	-1000, -1000, -1000, -1000, -1000, 1038, 137330, 2340, 2085, 1038,
	2010, 2004, 4001, 1016, 2543, 2085, 65357, 2340, 65357, 2319,
	-1000, 137330, -1000, 2287, 1473, -1000, 1774, -1000, -1000, 1955,
	3838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -92, -1000,
	-1000, 837, -1000, 3521, -1000, 1196, 2384, 2384, -1000, -1000,
	848, -1000, -1000, 478, -1000, 466, -1000, 150188, 2487, -1000,
	-1000, -1000, 156865, -1000, -1000, 1038, 2340, 1078, -1000, 4000,
	-1000, 2543, -1000, 2340, -307, 1038, -312, 2429, -1000, -1000,
	-96, 2159, -1000, 1757, 75270, 2020, -1000, -1000, 2474, 55318,
	54689, -1000, 3897, -1000, -1000, 2873, -1000, 3044, 54689, 54689,
	265, 72807, 363, 1078, 1038, 1340, -1000, 2775, 1038, 1175,
	1078, 2085, 1847, 836, 1653, 75270, -284, -1000, -1000, -1000,
	156865, -1000, -1000, -1000, -1000, -313, -314, -1000, -131, 118930,
	-328, -1000, -1000, -1000, 1340, 1078, -1000, 1106, -1000, -1000,
	1078, 2085, 1340, 2340, -1000, -1000, 2134, 150188, 2319, -284,
	-1000, 2340, 1244, -315, -1000, -1000, 1340, -1000, 1340, 2340,
	-1000, 1038, -1000, 1847, -1000, -1000, -1000, 460, -1000, -1000,
	-1000, 1038, 1078, -1000, 54689, 1078, 1340, -320, 1340, -1000,
	2340, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 4924, 4918, 35, 4917, 4914, 4910, 4907, 4903, 4902,
	4898, 4895, 4888, 4887, 4886, 4884, 162, 4881, 4879, 4878,
	4875, 4874, 4872, 4871, 4869, 4868, 4867, 4863, 4862, 4861,
	4854, 4853, 4852, 4851, 4850, 4849, 4848, 4847, 4844, 4843,
	4842, 4841, 4840, 4836, 4833, 4832, 4831, 4830, 4829, 4827,
	4826, 4824, 4822, 4820, 4819, 4817, 4816, 4815, 4814, 4813,
	4812, 4810, 4809, 4808, 4807, 4806, 4805, 4804, 4801, 4799,
	4798, 4796, 4795, 4794, 4793, 4789, 4785, 4784, 4781, 4780,
	4779, 4778, 4775, 69, 4774, 4772, 4771, 4770, 4769, 4768,
	4766, 4764, 4763, 4762, 4761, 4759, 4758, 4756, 4755, 4753,
	4751, 4749, 4748, 4747, 4745, 4744, 77, 4743, 320, 4741,
	4740, 4739, 4737, 4735, 4734, 4733, 4732, 4731, 4730, 4727,
	4725, 4723, 4722, 314, 4719, 15, 191, 4718, 4717, 24,
	4716, 4713, 313, 4707, 4705, 4701, 4700, 4698, 326, 4697,
	4696, 4695, 4694, 4691, 303, 4684, 4683, 4682, 4681, 4679,
	4678, 180, 155, 4674, 4671, 150, 4666, 4665, 4660, 4658,
	4657, 4655, 4654, 297, 304, 4651, 4650, 4638, 299, 207,
	4637, 312, 4636, 4634, 4627, 4625, 4622, 4619, 4617, 4616,
	4613, 4612, 4603, 4602, 4599, 4598, 4596, 4595, 4594, 4592,
	4591, 4589, 4588, 4586, 4583, 4582, 4578, 4573, 4572, 4567,
	4565, 4564, 4563, 4560, 4559, 4557, 4556, 4555, 4554, 4553,
	4552, 4551, 4550, 4549, 291, 254, 144, 4548, 4547, 4546,
	4545, 4543, 311, 310, 4541, 4539, 4537, 4536, 4528, 3792,
	4525, 4520, 4519, 4518, 4516, 4515, 4513, 4511, 4510, 136,
	17, 100, 4509, 4508, 105, 110, 104, 98, 118, 108,
	4505, 4503, 142, 4502, 151, 133, 4500, 137, 111, 37,
	26, 328, 289, 2524, 287, 4499, 4496, 4495, 283, 225,
	4494, 280, 4493, 4492, 4490, 4489, 4486, 4484, 88, 67,
	245, 4478, 164, 4476, 4463, 165, 204, 208, 199, 203,
	202, 176, 61, 121, 101, 74, 59, 23, 120, 251,
	28, 252, 7, 3, 307, 4460, 302, 5, 166, 6,
	42, 4458, 4451, 4448, 4447, 4050, 126, 4445, 309, 281,
	198, 4444, 4442, 4441, 795, 4439, 4438, 72, 285, 219,
	167, 125, 58, 152, 4437, 181, 214, 39, 4436, 186,
	132, 4435, 4434, 117, 106, 10137, 8883, 4432, 4431, 134,
	83, 124, 5589, 200, 177, 235, 255, 149, 195, 196,
	4430, 89, 4429, 179, 193, 206, 161, 4428, 92, 4427,
	3817, 159, 211, 184, 6614, 4426, 4425, 4424, 99, 4423,
	122, 4421, 4420, 79, 34, 4, 1, 168, 48, 47,
	29, 4417, 31, 141, 63, 43, 4416, 30, 4414, 4411,
	4410, 4409, 64, 4407, 57, 192, 4406, 4404, 322, 4403,
	135, 68, 44, 4401, 46, 260, 4400, 268, 157, 4399,
	4398, 220, 213, 4395, 84, 271, 4394, 4393, 4392, 4391,
	4390, 325, 154, 10, 153, 4389, 4388, 174, 4387, 66,
	282, 230, 4386, 78, 4384, 4383, 205, 76, 175, 318,
	210, 266, 147, 267, 217, 278, 4382, 4381, 4380, 222,
	4379, 4378, 261, 189, 4376, 4374, 264, 327, 109, 53,
	2, 93, 277, 96, 229, 185, 4373, 226, 4371, 4369,
	324, 212, 256, 54, 14, 22, 112, 129, 4368, 19,
	276, 182, 244, 145, 4367, 8606, 3019, 2335, 274, 4366,
	173, 148, 91, 146, 183, 305, 103, 4365, 4364, 4919,
	4363, 4362, 4361, 4360, 223, 4358, 4357, 243, 171, 190,
	240, 4356, 127, 85, 65, 32, 188, 97, 323, 143,
	262, 201, 295, 4354, 4353, 4350, 224, 4346, 116, 138,
	238, 4345, 236, 301, 75, 4344, 272, 4342, 172, 3015,
	81, 178, 4341, 298, 4339, 4338, 4337, 4335, 4334, 4329,
	4320, 2928, 269, 4319, 4317, 4314, 49, 239, 4313, 234,
	250, 232, 70, 73, 228, 107, 4029, 140, 2767, 233,
	50, 9, 4312, 82, 4311, 5114, 71, 4310, 0, 15136,
	11041, 14027, 4308, 4307, 13761, 4306, 6555, 4304, 4303, 4302,
	259, 94, 4301, 4300, 4299, 123, 4298, 102, 4297, 4293,
	90, 4290, 36, 21, 27, 41, 38, 410, 275, 4289,
	4286, 218, 160, 12, 4285, 317, 270, 4284, 4283, 4281,
	4280, 114, 4275, 55, 4274, 52, 4273, 4272, 62, 20,
	40, 4271, 4270, 249, 194, 3704, 187, 169, 4269, 139,
	4268, 4266, 4265, 95, 158, 4264, 4261, 293, 247, 253,
	113, 4259, 296, 4258, 231, 4256, 80, 33, 4255, 4252,
	284, 131, 130, 56, 290, 163, 60, 4251, 4250, 4248,
	4247, 221, 4246, 4245, 4244, 4243, 4242, 128, 170, 4239,
	87, 4238, 4237, 4236, 51, 241, 216, 4235, 18, 4234,
	4232, 4231, 258, 257, 300, 209, 248, 4228, 4226, 197,
	4224, 4221, 4220, 306, 4216, 4214, 3791, 361, 4210, 45,
	4209, 4206, 4205, 11, 4201, 4197, 237, 3528, 4195, 4194,
	8, 4134, 227,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 14,
	14, 10, 10, 10, 10, 11, 11, 11, 11, 11,
	62, 62, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 20, 20,
	20, 20, 20, 20, 42, 44, 43, 37, 37, 38,
	38, 39, 40, 40, 45, 47, 46, 48, 49, 50,
	50, 50, 13, 13, 13, 9, 9, 9, 9, 9,
	9, 9, 9, 23, 23, 51, 51, 24, 24, 53,
	53, 25, 25, 54, 54, 657, 657, 657, 658, 658,
	659, 659, 659, 28, 56, 21, 22, 22, 22, 22,
	660, 660, 660, 660, 41, 29, 57, 34, 34, 34,
	34, 34, 242, 242, 242, 242, 27, 27, 52, 52,
	288, 288, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 656, 656, 290, 290, 289, 275, 275, 276,
	276, 277, 277, 661, 661, 291, 291, 291, 292, 292,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	550, 550, 550, 581, 581, 581, 581, 583, 583, 708,
	708, 709, 709, 709, 709, 709, 154, 154, 445, 445,
	445, 71, 71, 71, 71, 71, 646, 646, 244, 244,
	244, 246, 246, 245, 245, 245, 245, 245, 245, 245,
	245, 95, 95, 96, 96, 283, 283, 282, 282, 282,
	282, 282, 282, 282, 667, 667, 666, 704, 704, 665,
	665, 668, 668, 668, 243, 243, 243, 92, 92, 113,
	113, 150, 150, 150, 150, 150, 150, 150, 150, 151,
	151, 152, 152, 677, 677, 677, 247, 247, 247, 249,
	249, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 254, 19, 19, 133, 133,
	133, 133, 133, 133, 133, 128, 128, 585, 585, 586,
	586, 238, 238, 239, 239, 239, 239, 240, 240, 241,
	241, 241, 86, 86, 251, 251, 253, 253, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 74, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 75, 76, 76, 76, 76, 76, 76, 77, 77,
	84, 84, 84, 84, 84, 84, 84, 84, 216, 216,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 91, 91, 91, 91, 91, 102,
	678, 678, 679, 679, 697, 683, 683, 684, 684, 687,
	687, 687, 688, 688, 688, 688, 688, 696, 696, 696,
	696, 696, 690, 689, 691, 691, 692, 692, 694, 694,
	694, 694, 694, 695, 695, 695, 695, 695, 695, 695,
	695, 695, 695, 695, 695, 695, 695, 695, 695, 695,
	682, 698, 699, 699, 700, 700, 701, 701, 701, 121,
	121, 703, 703, 702, 702, 685, 685, 686, 686, 66,
	693, 693, 711, 711, 67, 68, 69, 70, 680, 680,
	710, 710, 710, 710, 710, 710, 710, 710, 710, 710,
	710, 710, 710, 710, 710, 710, 710, 712, 712, 713,
	713, 714, 714, 714, 714, 714, 714, 714, 714, 714,
	714, 714, 714, 714, 714, 714, 714, 714, 714, 714,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 103, 103,
	406, 406, 369, 369, 104, 104, 104, 105, 105, 106,
	106, 88, 88, 88, 643, 643, 644, 650, 715, 715,
	541, 541, 540, 540, 108, 108, 444, 444, 109, 109,
	109, 109, 109, 109, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 119, 119,
	119, 119, 119, 120, 120, 120, 117, 117, 117, 114,
	114, 114, 112, 112, 112, 118, 118, 118, 649, 355,
	355, 116, 116, 116, 115, 115, 115, 422, 422, 122,
	122, 122, 122, 370, 123, 123, 123, 123, 123, 123,
	123, 123, 126, 126, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 543, 543, 5,
	5, 281, 281, 280, 280, 280, 280, 6, 6, 6,
	286, 286, 285, 284, 124, 124, 124, 507, 507, 129,
	129, 129, 460, 460, 130, 130, 130, 130, 130, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 653, 653, 415, 415, 318, 318,
	318, 318, 142, 142, 142, 142, 143, 143, 143, 143,
	144, 144, 224, 224, 160, 160, 160, 160, 159, 159,
	159, 159, 159, 159, 159, 159, 78, 78, 78, 79,
	79, 80, 80, 81, 81, 82, 82, 83, 83, 83,
	83, 83, 163, 163, 33, 33, 33, 33, 164, 164,
	705, 705, 166, 162, 162, 162, 162, 162, 162, 162,
	161, 161, 165, 165, 165, 165, 167, 169, 169, 169,
	169, 169, 168, 168, 168, 168, 168, 170, 170, 575,
	575, 430, 430, 573, 573, 597, 597, 574, 574, 376,
	376, 376, 376, 376, 377, 377, 377, 584, 584, 584,
	584, 584, 584, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 225,
	225, 225, 226, 226, 231, 231, 232, 232, 232, 233,
	233, 233, 230, 230, 230, 227, 227, 228, 228, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 236,
	236, 234, 234, 235, 235, 717, 717, 716, 716, 237,
	237, 237, 237, 237, 197, 197, 197, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	431, 431, 200, 200, 200, 184, 184, 172, 172, 172,
	172, 172, 172, 172, 172, 250, 250, 250, 250, 177,
	177, 177, 177, 177, 177, 177, 177, 178, 178, 178,
	173, 173, 186, 186, 186, 186, 186, 179, 179, 180,
	180, 180, 181, 181, 181, 181, 208, 208, 183, 183,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 174,
	174, 174, 174, 188, 188, 188, 188, 467, 467, 467,
	214, 214, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 211, 211,
	211, 211, 211, 211, 669, 669, 670, 670, 670, 204,
	204, 204, 204, 204, 204, 521, 521, 198, 198, 198,
	198, 203, 203, 203, 203, 206, 206, 206, 206, 450,
	450, 195, 195, 195, 196, 196, 196, 201, 201, 213,
	202, 407, 407, 199, 199, 205, 205, 205, 205, 207,
	207, 207, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 176, 176, 176, 176, 209, 209, 194, 194,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 718, 718, 190, 190, 190, 189, 189, 189, 189,
	192, 192, 193, 193, 193, 193, 193, 193, 193, 191,
	182, 212, 651, 651, 647, 647, 647, 647, 647, 647,
	647, 647, 647, 645, 645, 645, 645, 645, 645, 645,
	645, 645, 648, 648, 648, 648, 648, 652, 652, 134,
	134, 134, 134, 134, 134, 134, 145, 145, 145, 145,
	145, 145, 145, 148, 148, 135, 135, 135, 135, 135,
	135, 135, 138, 138, 136, 136, 136, 136, 137, 137,
	97, 97, 97, 97, 97, 18, 18, 18, 98, 98,
	309, 309, 259, 259, 259, 394, 394, 260, 260, 384,
	384, 384, 384, 255, 255, 256, 256, 257, 258, 258,
	99, 99, 719, 719, 719, 662, 662, 662, 663, 663,
	663, 663, 663, 663, 378, 378, 379, 379, 487, 487,
	487, 487, 487, 382, 382, 382, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 392, 393, 393, 385, 385,
	391, 390, 390, 389, 389, 388, 388, 386, 387, 387,
	387, 396, 396, 395, 398, 398, 397, 486, 606, 606,
	608, 608, 608, 608, 608, 608, 608, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 468, 468, 720, 720, 721, 722,
	604, 604, 604, 605, 600, 600, 601, 601, 601, 601,
	601, 380, 380, 381, 381, 381, 381, 602, 603, 413,
	413, 525, 607, 607, 609, 609, 611, 723, 723, 723,
	723, 723, 723, 724, 724, 724, 485, 485, 484, 484,
	483, 483, 404, 404, 612, 612, 612, 612, 613, 613,
	613, 613, 613, 616, 615, 614, 614, 614, 614, 614,
	101, 101, 101, 447, 447, 446, 446, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 221, 221, 321, 321, 321,
	94, 94, 94, 15, 15, 15, 15, 15, 15, 15,
	336, 336, 16, 16, 16, 16, 664, 664, 664, 100,
	100, 100, 100, 100, 100, 402, 402, 402, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 655, 655, 654, 654, 322, 322,
	726, 726, 107, 107, 107, 107, 107, 107, 107, 107,
	544, 544, 545, 545, 93, 93, 93, 93, 93, 469,
	469, 466, 466, 465, 465, 412, 412, 523, 523, 523,
	524, 326, 326, 327, 327, 278, 278, 278, 470, 470,
	470, 36, 35, 26, 26, 30, 30, 31, 31, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 32, 32,
	59, 59, 59, 59, 60, 60, 60, 60, 63, 63,
	64, 64, 58, 58, 58, 58, 61, 61, 55, 55,
	65, 65, 65, 65, 65, 671, 673, 673, 672, 672,
	676, 676, 676, 676, 676, 676, 674, 674, 357, 357,
	675, 675, 706, 706, 707, 707, 141, 141, 146, 146,
	146, 146, 146, 147, 147, 147, 147, 149, 149, 149,
	149, 158, 158, 217, 217, 217, 217, 217, 217, 217,
	72, 72, 85, 85, 156, 728, 728, 728, 157, 157,
	157, 218, 218, 218, 218, 219, 219, 220, 220, 727,
	727, 319, 319, 480, 480, 481, 481, 729, 729, 482,
	482, 482, 482, 482, 312, 311, 313, 313, 314, 314,
	90, 90, 90, 300, 300, 299, 302, 302, 301, 303,
	303, 304, 304, 297, 297, 587, 587, 306, 306, 306,
	307, 307, 293, 293, 294, 294, 295, 295, 296, 296,
	310, 310, 582, 582, 730, 730, 132, 132, 132, 223,
	223, 368, 368, 368, 477, 477, 477, 405, 405, 333,
	333, 479, 479, 479, 479, 479, 443, 443, 443, 222,
	222, 420, 420, 433, 433, 434, 434, 537, 537, 435,
	139, 139, 140, 140, 155, 155, 263, 263, 261, 261,
	261, 261, 261, 261, 261, 261, 268, 268, 269, 269,
	270, 270, 271, 272, 272, 272, 272, 423, 423, 273,
	273, 273, 262, 262, 262, 264, 264, 264, 264, 264,
	264, 264, 267, 267, 267, 267, 274, 274, 274, 266,
	266, 623, 623, 623, 625, 625, 627, 627, 626, 626,
	622, 622, 624, 624, 725, 725, 449, 449, 449, 401,
	403, 399, 399, 400, 400, 410, 410, 408, 409, 409,
	411, 411, 522, 522, 522, 279, 279, 279, 440, 440,
	440, 440, 441, 441, 473, 473, 471, 471, 471, 471,
	472, 472, 474, 474, 474, 475, 475, 476, 476, 437,
	437, 438, 438, 439, 439, 439, 439, 503, 503, 265,
	265, 265, 417, 417, 417, 418, 418, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 494, 494,
	492, 492, 492, 492, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 527, 528, 528, 419, 419, 529, 478,
	478, 641, 641, 641, 642, 642, 520, 520, 530, 530,
	530, 530, 530, 530, 518, 518, 519, 519, 538, 539,
	539, 453, 453, 453, 453, 451, 451, 454, 454, 454,
	454, 454, 452, 452, 531, 531, 531, 531, 442, 442,
	532, 532, 532, 532, 533, 534, 534, 535, 535, 488,
	489, 489, 546, 546, 546, 546, 548, 416, 416, 416,
	416, 416, 599, 598, 598, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 563, 563, 563, 563,
	563, 563, 563, 549, 549, 549, 549, 549, 553, 553,
	553, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 554, 554, 559, 559, 560, 560, 560, 555,
	556, 561, 561, 561, 561, 731, 731, 565, 565, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 551, 551,
	551, 558, 558, 558, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 461, 461, 463,
	463, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 497, 497, 497, 497, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 617, 617, 617, 617, 617, 617, 617, 617, 499,
	499, 620, 620, 621, 621, 618, 618, 618, 618, 618,
	618, 618, 618, 618, 618, 618, 618, 618, 618, 618,
	618, 618, 618, 618, 618, 618, 618, 618, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 628, 628, 629, 629,
	631, 631, 632, 632, 633, 634, 634, 634, 635, 636,
	636, 630, 630, 637, 637, 637, 637, 638, 638, 639,
	639, 639, 639, 639, 640, 640, 640, 640, 640, 509,
	509, 510, 510, 516, 516, 516, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 375, 375, 374, 323, 323, 323, 323, 323, 323,
	428, 428, 426, 426, 426, 429, 429, 427, 427, 425,
	425, 424, 424, 506, 506, 504, 504, 508, 508, 455,
	455, 564, 564, 564, 564, 564, 564, 564, 564, 456,
	456, 456, 464, 457, 457, 458, 458, 458, 458, 458,
	500, 501, 459, 459, 459, 502, 502, 511, 515, 515,
	514, 513, 513, 512, 512, 490, 490, 491, 491, 436,
	436, 732, 732, 432, 432, 536, 536, 536, 536, 593,
	593, 372, 372, 421, 421, 371, 371, 363, 363, 364,
	364, 364, 364, 414, 414, 517, 517, 566, 566, 567,
	567, 568, 568, 569, 569, 570, 571, 572, 505, 505,
	344, 343, 330, 331, 342, 341, 340, 329, 332, 337,
	338, 339, 334, 335, 351, 350, 349, 298, 305, 356,
	358, 358, 361, 361, 362, 360, 359, 359, 346, 347,
	348, 542, 328, 365, 365, 366, 366, 366, 367, 367,
	367, 367, 324, 324, 325, 325, 352, 352, 353, 354,
	354, 345, 345, 345, 315, 315, 315, 316, 316, 317,
	317, 580, 580, 577, 577, 577, 578, 578, 578, 681,
	579, 579, 579, 579, 576, 576, 576, 576, 576, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 589, 589, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 591, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 596, 596,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 3,
	4, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 9, 7, 9, 5, 6, 7,
	7, 9, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 1, 1, 1,
	1, 0, 1, 6, 6, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 3, 3,
	3, 12, 3, 5, 4, 1, 3, 3, 3, 3,
	2, 4, 4, 4, 1, 1, 2, 1, 4, 1,
	0, 3, 3, 0, 4, 6, 0, 6, 4, 4,
	4, 5, 7, 6, 8, 7, 9, 8, 2, 1,
	3, 1, 3, 3, 3, 0, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	2, 0, 1, 0, 1, 1, 0, 1, 3, 1,
	3, 3, 3, 3, 2, 2, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 0, 1, 2, 2, 2,
	1, 1, 1, 4, 5, 1, 1, 1, 1, 3,
	3, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	1, 2, 1, 1, 3, 0, 1, 4, 0, 4,
	6, 1, 3, 2, 1, 3, 2, 1, 3, 5,
	1, 2, 1, 0, 6, 6, 6, 8, 1, 0,
	4, 3, 3, 4, 3, 4, 4, 4, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 1, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 10, 5, 1, 3, 3, 1, 1, 0,
	2, 0, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 4,
	3, 1, 2, 3, 2, 2, 2, 4, 6, 3,
	1, 2, 2, 7, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 7,
	4, 7, 8, 8, 9, 11, 11, 6, 2, 6,
	9, 4, 7, 7, 10, 7, 10, 10, 10, 13,
	5, 8, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 4, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 1, 2,
	2, 2, 9, 2, 1, 0, 1, 1, 0, 1,
	2, 0, 2, 2, 0, 2, 2, 2, 2, 1,
	2, 3, 3, 4, 4, 4, 4, 3, 3, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 3, 5, 7, 3, 3, 3, 4, 8, 6,
	4, 5, 5, 5, 3, 0, 1, 1, 1, 4,
	4, 3, 4, 4, 3, 4, 4, 1, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 5,
	7, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 7,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 5,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 6, 3, 2,
	5, 4, 2, 0, 1, 1, 1, 1, 2, 3,
	2, 2, 3, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	11, 12, 10, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 2, 3, 1, 4, 2, 3, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 2, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 2, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	15, 17, 3, 1, 0, 4, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 661, -3, -218, -125, -122, -86, -84,
	-129, -130, -109, -131, -124, -153, -158, -139, -140, -141,
	-154, -160, -217, -225, -226, -227, -228, -237, -219, -220,
	-4, -71, -73, -87, -108, -110, -123, -133, -132, -134,
	-142, -150, -145, -128, -78, -155, -159, -171, -221, -222,
	-223, 33, 32, 106, 85, 165, 137, 147, 218, 417,
	469, 481, 434, 152, 457, 439, -165, -166, 503, -72,
	-85, -157, -156, 78, 138, 182, 321, 449, 53, 157,
	-7, -15, -33, -19, 30, 49, -74, -75, -76, -77,
	67, -94, -89, -103, -95, -88, -91, -92, -710, 109,
	-624, -111, -115, -149, -113, -714, 173, 239, -135, -136,
	-137, 399, -143, -144, 460, -146, -147, -148, 463, 174,
	-80, -79, 167, -261, -263, -162, -161, -163, -224, -172,
	-173, -174, -175, -176, -178, -179, -181, -208, -182, -183,
	-184, -185, -186, -187, -191, -211, -188, -189, -190, -193,
	-192, -194, -199, -195, -196, -197, -198, -200, -201, -203,
	-204, -205, -206, -207, -209, -210, 509, -202, -212, -180,
	-213, 577, 526, 87, 473, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -65, -5, -6, -20, -96,
	-90, -93, -97, -98, -99, -107, -100, -101, -102, -623,
	-112, -114, -117, -119, -120, -116, -118, -121, 458, 632,
	-264, -262, 658, 637, 593, -177, -23, -28, -24, -25,
	-27, -29, -26, -30, -31, -32, -51, -56, -53, -54,
	-52, -55, -57, -58, -59, -60, -61, -62, -63, -64,
	-35, -41, -42, -36, -37, -38, -39, -40, -43, -44,
	-45, -46, -47, -48, -49, -50, -21, -22, -34, -66,
	-67, -69, -68, -70, 619, 628, -267, -265, -266, -274,
	495, 601, 549, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, -370, 2, -346, -352, -353, -354, -345, -315, -591,
	-596, 4, -588, -594, 181, 249, 359, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	45, 47, 48, 49, 50, 51, 52, 53, 57, 59,
	63, 64, 65, 66, 67, 68, 69, 73, 78, 79,
	84, 85, 86, 87, 88, 89, 90, 91, 97, 94,
	95, 96, 98, 100, 102, 103, 104, 105, 106, 107,
	108, 110, 111, 112, 114, 115, 116, 124, 125, 126,
	127, 128, 130, 137, 131, 138, 141, 135, 140, 136,
	142, 143, 145, 146, 147, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 162, 163, 165, 166, 167, 170,
	168, 171, 169, 172, 173, 174, 175, 176, 179, 187,
	188, 189, 194, 196, 197, 198, 200, 201, 204, 205,
	206, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 223, 225, 226, 227, 228, 229, 230, 231, 237,
	238, 239, 241, 242, 243, 244, 245, 250, 251, 252,
	256, 258, 264, 265, 270, 266, 271, 272, 274, 278,
	279, 280, 281, 282, 283, 284, 286, 288, 287, 292,
	290, 294, 295, 298, 299, 300, 301, 302, 303, 307,
	308, 304, 309, 310, 312, 313, 316, 314, 317, 318,
	315, 319, 322, 323, 324, 325, 326, 327, 328, 329,
	330, 331, 332, 333, 320, 321, 336, 334, 338, 339,
	340, 341, 342, 357, 352, 353, 354, 346, 347, 343,
	348, 344, 345, 349, 350, 356, 351, 361, 362, 363,
	364, 367, 235, 257, 369, 370, 373, 375, 392, 378,
	379, 380, 383, 384, 387, 390, 391, 393, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 404, 405, 407,
	408, 409, 411, 412, 413, 415, 417, 418, 420, 421,
	422, 424, 425, 426, 427, 428, 429, 430, 431, 433,
	434, 436, 435, 437, 439, 441, 442, 443, 449, 450,
	457, 451, 453, 454, 455, 456, 458, 459, 460, 461,
	462, 463, 467, 465, 466, 468, 469, 471, 472, 473,
	474, 475, 477, 479, 480, 484, 485, 488, 486, 506,
	507, 529, 481, 482, 483, 487, 489, 490, 491, 492,
	494, 493, 498, 496, 497, 499, 500, 501, 503, 505,
	508, 509, 511, 512, 513, 514, 515, 516, 517, 520,
	522, 523, 524, 525, 526, 527, 548, 528, 530, 534,
	535, 536, 537, 531, 532, 547, 539, 540, 541, 542,
	544, 545, 550, 551, 552, 553, 554, 555, 557, 558,
	560, 568, 581, 569, 570, 571, 572, 574, 577, 578,
	579, 580, 566, 582, 583, 586, 587, 591, 588, 592,
	589, 590, 593, 595, 598, 599, 600, 606, 605, 607,
	608, 610, 611, 609, 613, 614, 615, 620, 621, 623,
	624, 625, 37, 54, 55, 58, 60, 62, 74, 75,
	76, 80, 132, 133, 164, 177, 178, 190, 207, 208,
	220, 222, 232, 233, 234, 255, 259, 260, 262, 268,
	291, 366, 368, 385, 389, 406, 410, 414, 416, 432,
	476, 504, 518, 533, 538, 561, 562, 563, 564, 573,
	575, 601, 602, 603, 612, 622, -370, 2, -346, 376,
	-339, 2, -315, -315, 417, 29, 2, 29, 405, 497,
	552, 554, 2, -653, -415, 545, 2, 29, -318, -315,
	109, 218, 495, -339, 2, -653, 218, -415, 26, 545,
	2, -315, 2, 390, 176, 204, 23, 28, 71, 82,
	104, 150, 175, 199, -713, 392, 425, 479, 499, 547,
	558, 574, 2, 605, 313, 496, 549, 249, 127, 579,
	487, -664, 484, 485, 390, 423, 471, 221, 594, -319,
	2, 481, -315, 313, 2, 661, 100, 79, 476, 500,
	-168, 2, 303, 569, -169, -170, -167, 561, -575, 487,
	471, 336, -315, 661, 661, 661, 29, -328, 2, -315,
	-328, 2, -229, 2, -328, -716, -236, -235, -234, 22,
	450, 189, 284, 202, 240, 341, 420, 200, 51, -229,
	2, 549, 249, 487, 127, 545, -727, 2, 569, -727,
	2, 661, 661, 2, 549, 396, 605, 496, 127, 429,
	249, 579, 49, 150, 28, 204, 73, 555, 636, 487,
	-664, 633, 634, 313, 134, -646, 2, -645, 4, -594,
	-588, -364, -363, 549, 555, 127, -354, -345, 650, -353,
	661, 661, 661, 661, 2, 271, 272, 427, 426, 500,
	501, 29, 661, 661, 661, 661, 661, 484, 176, 2,
	175, -678, 23, 28, 71, 99, 104, 134, 199, 392,
	425, 499, 547, 551, 558, 574, -663, 528, 73, 487,
	-662, -664, 381, 313, 579, 150, -465, 127, 303, 216,
	587, 554, 552, 585, 141, 258, 590, 589, 661, 661,
	661, -126, 2, 658, 33, 32, -125, -129, 152, 503,
	-254, 549, 263, 2, -315, 661, 661, 661, 2, 271,
	272, 484, 485, 29, 661, 661, 202, -645, 545, 2,
	661, 661, 661, 2, 29, 271, 272, 484, 485, 263,
	2, 73, 490, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	2, -215, 500, 528, 228, 50, 49, 79, 29, 424,
	84, 397, 128, 134, 159, 580, 219, 249, 250, 279,
	99, 100, -467, 47, 272, 73, 271, 485, -669, 484,
	-521, 550, 489, 497, 544, 91, 284, 481, 569, 571,
	109, 595, 472, 625, 429, 430, 542, 443, 539, 304,
	168, 203, 4, 127, 336, 471, 502, 288, 287, 581,
	561, 303, 480, 400, 89, 661, -725, 2, 549, 569,
	2, -727, 2, -727, 2, -728, 569, 622, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, -262,
	-264, -263, 661, 661, 661, 661, 661, 661, 661, -215,
	500, 2, 79, 29, 29, -408, -410, 584, 261, 161,
	382, -261, -263, 2, -623, 581, 500, -573, 2, -495,
	-597, -497, 648, 649, 641, 546, 72, -374, 358, 626,
	-509, 134, 585, 376, -596, -498, -511, 164, 392, 476,
	-429, 8, 9, 5, 6, 7, -324, -499, -505, 576,
	180, 365, -367, 662, 10, 658, -620, -263, -510, 38,
	222, 70, -577, -366, -325, -549, 262, -365, -345, -617,
	-618, 4, -588, -589, -578, -552, -560, -556, -557, -563,
	-315, -591, 82, 118, 119, 117, 122, 121, 306, 305,
	123, 120, 502, 594, 71, 37, 232, 233, 268, 366,
	234, 80, -619, 151, -590, 259, 260, 518, 55, 432,
	190, 133, 132, 368, 60, 58, 602, -561, 129, 561,
	562, 563, 564, 207, 208, 62, 177, 178, 389, 414,
	538, 573, 575, 220, 291, 46, 113, 203, 254, 236,
	267, 269, 273, 293, 296, 337, 355, 360, 386, 388,
	470, 510, -731, 603, 533, 74, 75, 195, -625, 435,
	-626, -339, -625, 661, 661, 663, 661, -399, -401, -403,
	2, 29, 148, 658, 2, -526, 2, -527, -531, -263,
	285, -530, 658, -528, 656, -346, 377, -621, 477, -617,
	-618, -324, -345, -366, 4, -588, -590, 660, -404, 658,
	127, 487, 549, 83, 249, 99, 175, 204, -460, 658,
	-315, 29, 376, 565, 663, -653, -415, -400, 422, -507,
	658, 376, 379, 202, 379, -653, 64, 98, -703, 232,
	2, -702, -352, 317, 2, 2, 2, 2, 2, 232,
	-315, 549, 126, 283, 2, 2, 2, 2, 2, 2,
	2, -422, 232, 2, -346, 605, -422, 232, 2, -422,
	232, 2, -466, 2, 93, -329, 232, 2, -315, -355,
	232, 2, -350, -352, -361, 232, 2, -358, -315, -583,
	232, 2, -581, 4, -588, 123, 502, -495, 2, -155,
	2, 64, -315, 605, 2, 506, 2, 658, -168, 2,
	76, 569, 46, 500, -169, 2, -481, 2, -482, -311,
	-312, -313, -538, -314, 270, 421, 431, 629, 139, 358,
	625, -705, 202, 640, 565, -573, -573, -573, -430, 660,
	-231, 57, -328, -717, -716, -717, -571, 29, -566, 8,
	-567, 648, 649, -571, -571, -717, -717, 2, 2, 2,
	2, 2, -480, -481, 2, -531, 232, -346, 2, -343,
	-576, 4, -588, -594, -589, -595, -591, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 61, 70, 71, 77,
	81, 83, 93, 99, 109, 117, 118, 120, 119, 121,
	122, 123, 134, 139, 144, 148, 149, 153, 157, 161,
	180, 182, 195, 199, 202, 218, 221, 224, 240, 253,
	261, 263, 285, 289, 297, 305, 306, 358, 365, 371,
	376, 377, 381, 382, 403, 419, 438, 464, 495, 502,
	521, 543, 549, 559, 565, 567, 576, 584, 585, 594,
	596, 604, 616, 617, 618, 619, -596, 82, 2, -531,
	232, 2, -349, 232, -531, -352, 2, -329, 2, -495,
	-657, 557, 171, 451, 2, -371, 232, -346, -348, -352,
	-350, 2, 484, -585, 2, -580, 10, -579, 5, 4,
	-588, -594, -589, 2, 2, -702, -495, 2, -498, 2,
	-509, 29, -358, 2, -581, 232, 2, 29, 29, 605,
	422, 263, 565, 663, -421, -363, -364, -572, 4, 8,
	-414, -315, 660, -495, 2, -155, -138, 2, 195, -495,
	232, 2, -155, 232, 2, -495, 232, 2, -155, 232,
	2, -315, 2, -665, 2, -704, -585, 232, 98, 232,
	-315, 2, 204, -712, 479, 578, 317, 2, 2, 574,
	2, 104, 549, 126, 2, 2, 2, 2, 2, 2,
	2, 549, -334, 2, -315, 195, -540, 263, -358, 232,
	-359, 2, 496, -726, 435, -581, 232, 2, 455, 605,
	-350, 232, 2, -350, 249, 265, -329, 232, 2, 554,
	552, 554, 552, 202, 2, 263, 2, 263, 2, -532,
	2, -533, -527, -534, 656, 377, -543, 2, -542, -579,
	601, -126, 658, -126, 658, 500, 658, -585, -346, -346,
	-495, 2, -155, -138, 2, -495, 2, -155, 2, -315,
	2, -152, -585, -151, 658, 202, 595, -315, 2, -495,
	2, -155, -138, 2, -495, 2, -155, 2, -254, 195,
	2, 127, 549, -215, 2, 195, 596, 2, 8, 2,
	240, -250, -585, 489, 187, 430, 2, 506, 2, 507,
	79, -467, 625, 79, 202, 2, 202, 2, -450, 2,
	619, 422, 202, 2, 2, -651, 2, 376, 202, 2,
	202, 2, 202, 2, 202, 2, 202, 2, -214, 501,
	570, 548, 426, 272, 2, -155, 616, -138, 272, 271,
	-495, 616, 2, -670, 195, 485, -495, 2, 568, 281,
	169, 202, -450, 2, 202, 2, 202, 2, 5, 2,
	43, 427, 529, 2, 270, 421, 529, 2, 527, 2,
	-346, 549, 605, 496, 127, 204, 29, 2, 484, 2,
	2, 94, 95, 202, 2, 202, 2, 217, 202, 2,
	443, 202, 549, -431, 660, -431, 625, 2, -442, -531,
	-480, 565, -408, -410, -215, 506, 2, -268, -440, -270,
	195, -471, -472, -271, 297, 182, 371, -272, -449, 29,
	148, -449, -449, 64, 659, 659, -705, 581, 11, 12,
	81, 43, 648, 649, 650, 651, 193, 652, 653, 646,
	647, 645, 638, 639, 643, 276, 277, 101, 642, 640,
	92, 311, 478, 183, 184, 185, 186, 452, 247, 35,
	248, 14, 15, 16, -374, 34, 381, 296, 626, 236,
	510, 641, 17, 18, 19, 267, 269, 360, 54, 240,
	-323, 392, -373, 546, 72, -495, -495, -495, -495, -495,
	-495, -495, -495, 388, 658, -436, -490, 656, -263, 658,
	658, 658, 658, -572, -263, -495, -509, 659, -427, 658,
	-263, -509, -504, 658, 476, 656, 658, -512, -495, 5,
	5, 5, 658, 660, -628, 620, 195, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 416, -554, 658, -553, 658, -553, -553,
	606, -551, 658, 628, 621, 658, -551, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	606, 555, 663, -625, -404, 658, -432, -536, -495, 650,
	-432, -432, 376, -424, -495, 113, -453, 273, 337, 203,
	293, 470, 254, -492, 662, -492, -520, 628, -263, -528,
	-345, -263, -530, 658, -526, -520, -127, -572, -108, -123,
	-132, -155, -171, -222, -223, 650, -346, 658, 202, 658,
	660, -576, 202, -414, -329, -358, -346, -365, -366, -371,
	-340, -315, 2, 2, 147, -424, -647, 579, 487, 29,
	4, -594, -588, -364, 496, -363, 549, 127, 176, -583,
	-318, 565, 39, -506, -546, -547, -599, 662, -598, -549,
	-559, -555, -558, 406, 410, -578, 58, 602, -561, 262,
	4, -588, -590, 259, 260, 518, 55, 432, 190, 133,
	132, 368, 60, 561, 562, 563, 564, 207, 208, 62,
	603, 533, 74, 75, -647, 579, 487, 29, 496, 195,
	-583, 195, 202, -583, 2, -585, 2, -291, 663, 69,
	461, 164, -685, 658, 2, 164, 2, 2, 2, -315,
	-291, 663, 164, -422, 232, -291, 164, -291, 164, -372,
	232, -371, -291, 164, -291, 663, 164, -291, 663, 164,
	660, 663, 164, -583, 2, -466, -575, -424, 39, -481,
	2, 134, 4, 5, -729, 663, 295, -377, 310, 357,
	227, 377, 623, 369, 139, -584, 5, 4, -505, -517,
	134, 303, 262, -566, -568, 9, -569, 648, 649, -574,
	-573, 116, 660, -576, -232, 257, 41, -328, -328, -717,
	-717, 8, 8, -717, -717, -328, -328, -288, 453, 503,
	391, -287, 25, 30, 152, 251, 342, 599, 170, -389,
	252, 458, -386, 396, 164, 522, 588, -657, -660, 483,
	557, 171, 451, 96, 369, 503, 391, 453, 164, -446,
	-448, 39, 125, 342, 390, 65, 243, 315, 316, 526,
	459, 612, 164, 503, 391, 453, 391, -16, -304, 25,
	152, -306, -299, 503, 30, -660, 105, 453, 637, 632,
	458, 402, 541, 419, -660, -657, 290, -659, 615, 356,
	-290, 522, 588, -657, -660, 483, 453, -289, -391, -386,
	396, 164, 662, 25, 152, 453, 503, 391, -708, -709,
	30, -572, 2, -286, 240, -285, 25, -693, 453, 503,
	391, -680, -695, 342, 66, 466, 532, 238, 525, 614,
	176, 494, 292, 358, 107, 477, 540, 393, -281, -280,
	25, 152, 503, 591, -164, -144, -163, 458, 503, -164,
	2, 453, 391, -654, -336, -622, 240, 619, 164, -336,
	-336, -531, 232, -674, 195, 2, -667, -151, 286, 5,
	10, -585, -151, -421, 663, 663, -576, 650, 485, 484,
	164, 164, 164, 164, 272, 195, 358, -704, 2, 358,
	619, -697, -352, -713, 2, 2, 2, 2, 2, 2,
	2, -346, 232, -406, 376, -643, -644, -715, 549, -241,
	619, -585, 358, 46, -349, 232, 2, -352, 605, -654,
	358, -662, -351, 232, -346, 39, 658, 358, 2, -466,
	2, 249, -622, 358, -532, -368, -346, -527, -368, 503,
	-339, 39, -492, -346, 659, 663, -543, -543, -585, -241,
	202, 658, -254, 619, 619, 272, -539, 663, -538, 240,
	-586, -585, -152, -585, 456, 202, 272, -585, -643, -329,
	2, -346, 2, 549, 274, -151, 202, 240, -241, -585,
	-585, -585, -575, 29, 507, 2, -214, 501, 570, 95,
	507, 2, -346, 549, 127, 249, 85, -674, 195, 2,
	-315, -652, 195, -648, 471, 487, 579, -647, -346, 127,
	-346, 127, -346, 127, -346, -346, 2, 2, 2, 2,
	2, 90, 2, -155, -495, 2, 90, 2, 49, 523,
	-670, 195, 2, 568, 2, 568, 2, -315, -315, -315,
	371, 528, 295, 619, -346, -346, -346, -347, -352, -352,
	489, 550, 580, 485, -495, 2, -718, 2, 202, 195,
	2, 549, 249, 549, 249, 127, 202, 79, 127, 29,
	202, 549, 482, 660, 4, -291, 663, -319, -268, -440,
	-575, -441, -440, -269, -268, -271, 195, 431, 589, 342,
	508, 278, -472, -471, 29, -495, -476, 189, 341, -495,
	-474, -497, 648, 649, -567, -569, -423, 369, -262, -262,
	-262, -411, -522, -495, 419, 249, -574, -705, -548, -546,
	-546, -344, -576, 561, -495, -495, -495, -495, -495, -495,
	-495, -495, -495, -495, -495, -495, -495, -495, -495, -495,
	-495, -495, -495, -495, -495, -495, -495, -495, -495, -495,
	-495, -495, -495, -495, -495, -495, -495, -495, -495, -495,
	296, 236, 510, 54, 240, -495, 565, -495, -495, -495,
	-495, 334, 358, 365, 576, 180, 586, 148, 369, -732,
	543, 42, -502, -263, -428, 658, -516, 36, 521, 29,
	-509, 658, 2, -490, -495, -491, -375, -373, -315, 648,
	649, 650, 651, 652, 653, 638, 639, 640, 14, 15,
	16, 643, 647, 645, 646, 193, 101, 642, 311, 478,
	92, 183, 184, 185, 186, 276, 277, 17, 18, 19,
	35, 641, -425, -424, -424, 659, 604, 29, 148, 650,
	2, 659, 663, 39, 659, -495, -425, -508, -504, -424,
	-515, -514, 616, -461, -462, 624, 320, 130, 230, 318,
	-463, 492, -570, 8, -576, 650, -629, 188, 221, 658,
	659, 2, 659, 2, 659, -495, 2, 659, -495, 2,
	659, -495, 2, 659, -495, 2, 659, 2, 659, 2,
	-495, -495, -495, -495, -495, -495, -495, -424, 8, -570,
	-570, 561, 561, -570, -570, -570, -562, 406, 407, 408,
	409, 298, 299, 300, 301, 410, 411, 412, 413, 326,
	327, 328, 329, 322, 323, 324, 325, 330, 331, 332,
	333, 212, 213, 214, 215, 208, 209, 210, 211, -562,
	-455, 2, -564, -424, 4, 624, 320, 130, 230, 318,
	492, 5, -455, 2, -456, 2, -495, -424, -457, -496,
	-497, 648, 649, 641, -374, -458, 2, -495, -425, -495,
	61, 289, 567, -459, -495, 202, -424, -424, 2, -424,
	2, -498, 2, -626, 39, -424, -417, 663, 202, 39,
	-593, 4, -592, 44, 66, 107, 136, 143, 176, 238,
	256, 266, 292, 393, 465, 466, 494, 525, 540, 572,
	614, 504, -417, -417, 658, 659, 663, -454, 225, 314,
	309, 265, -454, -526, -453, 273, -451, 386, -451, -451,
	-520, -330, 656, 665, -576, -520, -519, -518, 39, -339,
	383, -520, -520, 660, 659, -519, 657, -641, 658, 661,
	661, 661, 661, 661, -346, 658, -424, -576, 660, 530,
	2, 659, 267, 267, 267, 267, 267, 376, 477, 659,
	565, -649, -355, -361, 497, 550, -421, 663, -421, -414,
	98, 619, -583, -125, 378, 659, 663, -416, 38, 656,
	660, -570, 2, 2, -565, 606, 658, 658, -462, 658,
	202, -649, -361, 550, 497, 2, -653, 545, -415, -583,
	565, -702, -703, -686, 659, -688, -696, -681, -690, 240,
	385, 255, 604, -577, -546, 4, -588, -315, 2, -346,
	-422, -291, 164, -422, -422, -291, 663, 164, -329, -350,
	-355, -358, -361, -315, -581, -583, -291, -351, -705, 659,
	569, -482, -376, 431, 520, 454, 498, 545, 9, 9,
	663, -576, -233, 486, 342, -328, -328, -328, -328, 663,
	-706, 99, 565, 83, 658, 487, -308, 304, 565, -486,
	232, 83, -600, 99, -332, -601, -315, 77, 585, 419,
	199, 162, -706, 99, 419, -706, 99, 2, 251, 99,
	503, 528, 658, 29, 64, -531, 43, 43, 29, -658,
	-659, 290, 202, 625, 549, 249, 487, 565, 565, -531,
	-448, -546, 125, 315, 316, 64, -571, -571, 64, -571,
	-571, -571, 619, -571, 619, -349, -531, 487, 565, 565,
	565, 441, 539, 441, 539, 493, -299, -301, -169, 493,
	539, 304, 565, 565, -169, 29, -215, 462, 134, -730,
	640, 441, 290, -659, 565, 202, 663, 43, 43, 29,
	-658, 202, 565, -371, -330, 600, 45, 600, 45, 600,
	565, 45, 487, 565, 663, 45, -283, -282, 503, -285,
	-585, -284, 340, -711, -695, 461, 503, 565, 487, 565,
	143, 376, 365, 494, 136, 266, 292, -517, -517, -315,
	-280, -643, -643, -240, -239, -315, 5, -414, 79, 565,
	565, -16, 503, -655, -320, 112, 348, 308, 349, 103,
	345, 102, 344, 110, 346, 111, 347, 607, 361, 608,
	362, 68, 343, 319, 350, 524, 351, 611, 363, -321,
	-322, 155, 398, 598, 127, -581, -16, -16, 503, 391,
	453, 164, -675, 240, 29, -664, 240, -539, 240, -539,
	-363, -315, 660, -155, -495, -495, -155, -495, -155, 49,
	164, 39, 164, 2, 658, 283, 658, -380, 358, 202,
	-414, -540, 663, -346, 39, -240, 380, 164, -581, -447,
	-446, 358, -351, 232, 2, 164, -726, -404, 358, 158,
	658, 429, 2, 164, -331, 232, -316, -315, -466, -293,
	553, 164, -444, 596, -477, -155, 658, 134, 39, -477,
	-433, -434, -537, -435, -332, 658, -339, -492, -126, -542,
	659, 659, 659, -254, -405, -333, -332, 126, 433, 433,
	-247, 619, -151, -152, 659, 663, -539, 240, 531, -152,
	-585, -241, -241, -539, -539, -346, 195, -585, -151, -241,
	-241, -241, 2, 2, 2, 2, -450, -346, -329, -371,
	-346, -357, 240, 29, 660, -583, -583, -361, -362, -360,
	-315, -355, -450, -329, -450, -329, -450, -329, -450, -450,
	-155, -495, 528, 2, 500, 195, 195, 660, -450, 8,
	-407, 464, 5, 2, 429, 127, 549, 396, 249, -346,
	-371, -346, -371, -329, 127, -329, 128, 127, -346, 4,
	-531, -441, -269, 377, 278, 508, -474, -475, -497, 476,
	477, -475, 476, 477, 8, 9, 8, 9, -273, 512,
	364, -422, 663, -278, 40, 144, 278, -346, -574, 625,
	160, -495, -495, 565, -732, 543, -502, 160, -495, 334,
	365, 576, 180, 586, 148, 369, 202, 658, -496, -496,
	659, -426, -495, -495, 657, 667, 659, 660, 659, -410,
	663, -408, -495, -424, -424, 659, 660, -424, -414, 657,
	657, 663, 659, -513, -514, 153, -495, 565, 565, 565,
	565, 658, 659, 660, -634, 387, 658, 658, -495, 659,
	659, 659, 659, 39, 663, 663, 663, 659, 663, 663,
	663, 659, 659, 659, 663, 659, 625, 625, 659, 659,
	659, 659, 663, 659, 663, 659, 202, 659, 659, -464,
	403, 659, 11, 12, 648, 649, 650, 651, 193, 652,
	653, 646, 647, 645, 638, 639, 640, 92, 311, 478,
	14, 15, 16, -374, 267, 240, -496, -496, -496, -496,
	659, -500, -501, 202, 195, 39, -459, -459, -459, 659,
	202, -424, 659, 659, 658, -627, 313, 358, 659, -489,
	-488, 617, -536, -418, 2, -526, -341, -576, -489, -489,
	-424, -495, 273, 273, -452, 596, 376, -454, -526, -519,
	-572, -494, -493, 197, 40, 144, 352, 353, 354, 235,
	198, -519, -339, -404, -519, -519, -576, -520, -520, -518,
	659, -642, -572, 659, -419, -529, -621, -410, 660, -576,
	-251, -622, -216, 5, 365, -216, -216, -216, -216, -346,
	-583, 565, 565, 240, 240, -421, -414, 26, -673, 619,
	404, -546, 656, 657, 8, -576, 658, -570, -570, -570,
	-583, 202, 202, 240, 240, 376, -653, 202, -581, -291,
	659, 663, -681, -690, -696, -690, 385, 2, -291, -422,
	-291, -291, -371, -372, -291, -291, -291, -445, 619, -573,
	-481, 583, 88, 431, 561, -573, 124, 486, -287, 453,
	503, -332, -332, -346, -258, -257, -255, -315, 5, -356,
	-315, 216, 442, -581, 358, -486, 232, -292, 358, 232,
	-340, -546, 658, -468, 621, 278, 278, 596, -332, -340,
	278, 232, -332, 232, -340, 2, -340, -656, 431, 370,
	-495, -256, -255, 64, -387, 302, 429, 359, -288, 453,
	503, 391, -155, -155, -155, 658, -705, 596, 147, -346,
	-371, -346, -356, -581, -351, 503, 391, 453, 355, -365,
	-571, -571, -571, -446, 503, 391, 453, -356, -581, -349,
	-581, -298, 232, -315, 441, -298, 232, 441, 441, 441,
	441, 216, 442, 487, -329, 441, 625, 48, -730, 565,
	202, -495, -495, -289, -155, -155, -155, 658, -330, -290,
	453, 5, 232, -332, 5, -332, 232, 5, -315, -332,
	-356, -581, -709, 25, 152, -332, 663, 282, 263, 619,
	-666, 203, 484, 436, -286, 640, -315, -356, -581, 376,
	365, 376, 136, 266, -241, 663, 640, 640, -356, -581,
	-320, 398, -667, 365, 5, 10, 592, -329, -654, -336,
	487, 565, 565, -531, -671, -672, 218, 469, 487, 472,
	-583, -151, -244, 619, -151, -238, 244, 650, -646, -585,
	-585, -315, -683, -684, -687, -688, -315, -378, -381, -379,
	-332, -487, -486, -604, -605, -600, 296, 249, 585, 265,
	181, 99, -259, -260, 621, 619, 164, -369, -346, 656,
	-241, -644, -541, 181, 495, 658, -358, -359, 164, -404,
	358, -581, 605, 39, 164, 658, 2, 2, -350, 376,
	358, -331, 232, -294, 154, -730, -329, -489, -418, -443,
	-479, 464, 376, -405, 601, -339, -443, -420, 663, 202,
	640, 660, -405, -535, 650, -126, -126, -241, 658, -585,
	659, 663, 660, 658, 640, 640, -249, 380, -248, 156,
	280, 264, 514, 515, 516, 517, 146, 513, 131, 339,
	245, 555, 488, -539, -585, -247, -152, 202, -539, 240,
	202, -81, 619, 549, 240, -241, 662, 487, 472, -315,
	660, -450, -450, -450, 500, 500, -315, 195, -414, -342,
	-576, -329, -346, -343, -371, 195, 195, -329, -329, 589,
	-475, 377, 307, -522, -279, 627, -346, 662, -495, -495,
	160, 160, -495, -496, -496, -495, 160, 202, 658, -495,
	-506, 34, 34, 659, 663, -491, -495, -373, 659, 604,
	-410, -410, 659, 650, -576, 662, 659, -504, 157, -495,
	559, 320, 230, 318, -463, 318, -463, -463, -570, 5,
	-576, 650, -635, -335, 658, -315, 617, -409, 382, 659,
	-548, -546, -495, -495, -495, -495, -495, -570, -551, -551,
	-566, -566, -495, -500, -495, -548, -546, -496, -496, -496,
	-496, -496, -496, -496, -496, -496, -496, -496, -496, -496,
	-496, -496, -496, -496, -496, -496, -496, 148, 358, 369,
	-496, -501, -500, -495, -495, -546, 659, 659, 659, -424,
	-125, 658, 313, -437, 221, -495, -539, 663, -437, -437,
	659, -526, -526, 658, -495, 273, 657, 663, 666, 640,
	640, -404, 660, -518, -519, 657, 659, 663, 659, 663,
	-478, 39, 659, -576, -489, -253, -252, 145, 57, 114,
	142, 365, 373, 201, 226, 428, 160, 196, 154, 267,
	-673, -583, -583, 487, 487, 379, 218, 5, 8, 656,
	657, 660, -570, 659, 659, 659, -583, -583, 487, 487,
	-647, 579, 487, 29, 202, -583, -688, -690, -690, -291,
	-291, 126, 342, -495, -230, 619, 621, 565, 565, 659,
	663, 640, 64, 240, 164, 358, 598, 358, -601, 162,
	-606, -495, 658, 249, 658, 658, 2, -275, -276, -277,
	152, 503, 25, -707, 2, 596, 164, -291, 164, -291,
	623, 659, 663, -387, 658, 658, 565, 487, -308, 565,
	619, -424, -495, -242, 134, -575, -660, 662, -660, 662,
	487, 565, 565, 487, 565, 565, 358, -315, 164, -315,
	-730, -315, -660, -660, 240, 619, 179, 179, 625, -298,
	-495, -495, 195, 565, 619, -424, 565, -550, 52, 27,
	358, -350, -291, 164, 565, 565, 579, 503, -282, -585,
	-151, -245, 156, 468, 146, 280, 245, 49, 379, -667,
	-151, 175, 256, 365, -239, -585, -585, -667, -585, 365,
	-16, -356, -581, -351, 503, 391, 453, -653, -653, 218,
	-361, -675, -539, -246, 380, -245, -539, -244, 202, 263,
	619, 659, 663, 134, 640, 2, 659, 659, 663, 663,
	-607, -292, -346, -331, 249, 249, -338, -316, 39, 373,
	373, 658, -346, -104, 619, -538, -572, -337, -315, -432,
	-240, 46, -349, 39, 164, -654, -351, -155, -351, -544,
	-545, 5, 39, -346, 164, 376, 358, -295, 288, -730,
	-580, -622, -410, -443, -432, 359, 97, 659, -489, -434,
	-418, -495, 2, 659, -585, -241, -254, -333, 2, -586,
	-585, -585, 663, 658, 640, 640, 640, 640, 640, 640,
	640, -247, -539, -151, -247, -152, -155, 380, -346, -151,
	650, -356, -357, 650, -450, 5, -393, -392, 396, 369,
	-393, 476, 476, 377, 189, 284, -278, -330, -495, -495,
	160, 34, 34, -495, -495, -506, 659, -495, -495, -424,
	657, 5, -495, 659, 659, 8, -495, 659, 660, -636,
	-315, -495, 659, 64, 659, 659, 663, 663, 659, 659,
	659, 659, 659, 659, 659, -501, 202, 148, 369, 658,
	659, 659, -125, -503, 224, 64, -526, -503, -503, -452,
	-414, -526, -493, -330, 656, -330, 656, -576, -572, -529,
	658, 660, -252, 640, -585, -585, 2, 2, 5, 5,
	428, 358, 365, 5, -216, -673, -673, 619, -361, -361,
	379, 657, 2, 656, -576, 659, -361, -361, 202, -649,
	-361, 550, -583, 126, 195, 229, 229, -332, -332, -257,
	-573, 549, 476, -298, 419, -486, 164, 164, -608, 99,
	-610, 81, 181, 109, 358, 365, 585, 419, 77, 134,
	376, 438, -720, -721, -722, 39, 630, 631, 659, -412,
	-523, -621, 658, -315, -412, -414, 358, 536, 134, 376,
	358, 134, 376, 613, 126, 2, 579, 84, -332, -340,
	-255, -414, -414, -346, -356, -581, 172, 659, 663, 640,
	2, 650, 650, -356, -581, -351, -356, -581, -349, 164,
	601, -298, -298, 601, -298, 394, 179, 565, -155, -495,
	172, 659, -330, 5, 5, 164, -327, 81, -332, 5,
	-332, -350, 126, 640, 640, 640, 640, 640, 31, -667,
	-239, 619, -315, 256, 487, 565, 565, 376, 376, 379,
	-671, -672, -244, 663, 658, -244, -586, -151, 2, 466,
	-687, -495, -495, -394, 251, -332, -605, -602, -603, 419,
	-487, -609, -611, 181, 419, -382, 658, -331, -316, 658,
	-155, 2, -258, 658, -380, 380, 657, 202, 659, -581,
	-447, -155, -351, -404, -402, 619, -404, 659, 663, 158,
	-469, 596, -330, -346, 164, -296, 287, -730, -580, -293,
	-473, -471, 149, 658, 376, -155, -410, 640, 659, 126,
	659, -248, -249, -585, -151, -585, -585, -585, -151, -585,
	-247, -677, 39, -539, -82, -83, 249, 99, 401, -241,
	-343, 549, 249, 658, 658, -278, -495, -495, -495, 659,
	-410, -576, 650, -630, 396, 659, -522, -495, -495, -496,
	202, 658, -506, 659, -631, 618, -495, -438, -439, -495,
	474, 115, 222, -631, -631, 659, -572, -572, 2, -585,
	2, 2, 365, 2, 2, 2, 565, 565, 656, 2,
	202, 202, -583, 202, 202, 240, -155, 240, 39, 441,
	-486, -340, -340, -344, -337, 181, 232, 365, 613, -468,
	278, 658, -496, 589, -346, 658, 2, 231, 231, 31,
	64, -723, 139, 253, 659, 663, -524, -326, -315, -495,
	-524, 659, 659, 365, 589, 365, 613, -495, 589, -546,
	658, -291, -291, 659, 659, -495, 565, -575, 106, -573,
	2, -660, -298, -414, -414, -660, -329, -495, 195, -495,
	565, 5, -291, -344, -291, -291, -327, 579, -585, -495,
	576, 180, -151, -151, 375, -356, -581, -351, -676, 550,
	497, 580, 489, 205, 475, -676, 195, -245, -246, -244,
	-679, 504, -388, -389, 2, -607, 278, -337, 278, 242,
	163, -412, 658, 658, -414, -719, 619, 659, -378, -259,
	-105, -106, 566, -538, -650, -368, -404, 39, 342, 126,
	39, 5, 658, 658, -315, 376, 658, -330, -310, 98,
	-730, -580, -294, -443, 359, -414, 99, -473, -502, -241,
	658, -241, 659, 555, -247, 663, 29, 658, 29, 658,
	-346, -371, -424, -424, 659, -410, 64, 663, 659, 659,
	-496, -506, 659, -632, -633, -335, 663, 658, 658, 505,
	657, 657, 2, -583, -583, 2, -583, -583, -583, -583,
	487, -298, 419, -315, -601, -610, -337, 358, -260, 596,
	619, -495, -496, -317, 658, -495, 658, 658, 39, 134,
	253, 140, 237, -485, -724, 108, 537, 241, -523, -278,
	659, -484, 596, 438, -496, -327, -412, 658, 658, 658,
	640, 202, -155, 658, -550, -291, -350, 640, 565, 2,
	2, 202, -653, 659, -666, -689, -690, -259, 658, -260,
	-383, 86, 100, 135, 231, 206, 250, 528, 534, 29,
	-383, 659, -412, -412, 659, -384, 376, 126, 342, 659,
	39, -106, 9, -489, 39, -155, 126, -155, -544, -412,
	-346, -412, 376, -300, -299, 297, -580, -295, 659, -340,
	-443, -586, -572, 4, -83, -414, -414, 659, 659, -637,
	429, 477, 223, -424, -411, 659, 663, 39, -439, 2,
	2, 2, -673, -673, -361, 441, -292, 164, 225, 659,
	-612, 312, -315, 659, -447, -447, 39, 140, 237, -390,
	-386, 658, -279, -524, -260, 225, -346, -661, 596, 659,
	-396, -395, -392, -398, -397, -392, -424, -573, 106, 394,
	-424, -327, -151, -583, -583, 376, -668, 203, -691, -692,
	-694, 39, 283, 572, 618, -695, -384, -413, -525, -332,
	-484, 659, 659, 87, 126, -394, -155, -155, 2, -402,
	659, 659, -469, 659, -346, -297, -587, 441, 443, -730,
	-296, -489, 149, 659, 659, 659, 659, -638, -639, 54,
	582, 116, -495, -638, -638, -633, -635, 202, 181, -483,
	628, -613, -616, -615, 635, 511, 203, 395, 659, 536,
	612, 659, 659, -723, -414, -483, -404, -495, -484, 659,
	663, 601, 659, 663, 601, 659, 202, 659, -291, -673,
	-291, -676, -243, 619, 49, -701, -698, 53, 465, -694,
	-682, 5, -580, -309, -308, 659, 663, -485, -484, -390,
	418, 141, 152, -388, -719, -484, 658, -485, 658, -307,
	-306, -730, -566, -310, 149, 359, 589, -241, -640, 162,
	-639, 415, 194, 476, 415, 194, -640, -640, -583, -337,
	-260, 59, -615, 635, -616, 635, 589, 141, -489, 659,
	-612, -260, -395, 240, -397, 202, 394, 202, 484, -667,
	31, 44, -495, -260, -525, -390, -485, -260, 477, 477,
	2, -259, -384, -485, -412, -390, -412, -303, -304, -305,
	-414, -300, 359, 589, 503, 116, 221, 560, 342, 34,
	640, -614, 342, 461, 69, 503, -614, -613, 658, 658,
	-583, 380, -700, -260, -390, -489, 2, -384, -390, 659,
	-260, 659, -582, 391, -297, 503, -433, 476, 384, -639,
	-495, 24, 365, 134, -723, -424, -424, -291, -240, 658,
	-699, 157, -3, -698, -489, -260, -470, 358, 613, -309,
	-260, -484, -489, -485, -302, -301, 493, -730, -307, -433,
	-489, 659, 659, -240, 664, -470, -489, 613, -489, -485,
	-470, -390, -581, -303, -489, -385, -386, 565, 659, -470,
	-470, -390, -260, -302, 658, -260, -489, -424, -489, -470,
	659, -470, -385,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1721, 1723,
	714, 715, 717, 718, 719, 721, 722, 724, 726, 728,
	729, 730, 732, 733, 735, 736, 737, 738, 739, 741,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 834, 836, 0, 1703,
	1705, 1707, 1709, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 412, 414, 416, 418,
	0, 450, 452, 453, 455, 457, 458, 460, 462, -2,
	0, 644, 645, 647, 649, 651, -2, 0, 1279, 1281,
	1283, 0, 822, 824, 0, 1286, 1288, 1290, 0, 0,
	846, 847, 0, 1824, -2, 838, 840, 842, 844, 923,
	925, 927, 929, 931, 933, 935, 937, 939, 941, 942,
	944, 946, 948, 950, 952, 953, 955, 957, 959, 960,
	962, 963, 965, 967, 969, 971, 973, 975, 977, 979,
	981, 983, 985, 987, 989, 991, -2, 994, 995, 996,
	998, -2, 0, -2, -2, 1717, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 75, 76,
	590, 592, 594, 596, 598, 601, 603, 605, 607, 1882,
	653, 655, 657, 659, 661, 663, 665, 667, 0, 0,
	-2, 1896, 0, 0, 0, 1087, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 145, 146, 147, 148,
	149, 150, 151, 91, 92, 93, 95, 96, 97, 98,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 142, 143, 89, 118,
	119, 120, 121, 122, 0, 0, 1855, 1857, 1859, 1861,
	-2, 0, 0, 8, 12, 14, 16, 18, 20, 22,
	24, 26, 28, 30, 32, 36, 38, 40, 42, 1722,
	1724, 716, 720, 723, 725, 727, 731, 734, 740, 742,
	744, 699, 700, 703, 2598, 2616, 2617, 2618, 2621, 2622,
	2623, 2624, 2625, 2626, 3157, 3238, 3239, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
	2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921,
	2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931,
	2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941,
	2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951,
	2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961,
	2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971,
	2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981,
	2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991,
	2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001,
	3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011,
	3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021,
	3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031,
	3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041,
	3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051,
	3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061,
	3062, 3063, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090,
	3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100,
	3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110,
	3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120,
	3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130,
	3131, 3132, 3133, 3134, 3135, 3136, 701, 702, 1473, 0,
	783, 781, 2581, 784, 2908, 786, 788, 638, 639, 640,
	641, 642, 643, 0, 815, 3013, 798, 1894, 816, 818,
	819, 820, 821, 778, 776, 0, 820, 815, 2654, 3013,
	813, 1701, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 569, 1536, 1537, 1538, 1686,
	1687, 2964, 1732, 0, 277, 835, -2, -2, 3121, -2,
	877, 878, -2, -2, 892, 896, 887, 3126, 0, 2967,
	2949, -2, 899, 1704, 1706, 1708, 999, 1000, 1001, 2602,
	1005, 1003, 1015, 1016, 1019, 0, 1036, -2, 0, 2650,
	2931, -2, -2, 1037, 1038, -2, -2, -2, -2, 1017,
	1018, 0, 0, 0, 0, 0, 1734, 1726, 1729, 1727,
	1728, 46, 48, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 287, -2, -2,
	-2, -2, 0, 0, 3019, 2712, 2549, 2618, 2552, 2547,
	413, 415, 417, 419, 420, 0, 0, 0, 0, 0,
	0, 0, 451, 454, 456, 459, 461, -2, 0, 463,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 1345, 1346, 1603, 0, 0, 0, -2, 646, 648,
	650, 704, 705, 0, 1883, 1883, 712, 713, -2, 0,
	0, 0, 0, 374, 365, 1280, 1282, 1284, 1285, 0,
	0, 0, 0, 0, 823, 825, 0, 0, 3013, 338,
	1287, 1289, 1291, 1292, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 839, 841, 843, 845, 924, 926, 928,
	930, 932, 934, 936, 938, 940, 943, 945, 947, 949,
	951, 954, 956, 958, 961, 964, 966, 968, 970, 972,
	974, 976, 978, 980, 982, 984, 986, 988, 990, 992,
	993, 1044, 0, 0, 0, 0, -2, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 1156, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 0, 1249,
	0, 0, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	0, 1129, 1154, 1155, 1165, 997, 0, 1516, 1884, 1734,
	1711, 1712, 1713, 1718, 1720, 1714, 1715, 1716, 52, 54,
	56, 58, 60, 62, 64, 66, 68, 70, 72, 74,
	77, 591, 593, 595, 597, 599, 602, 604, 606, -2,
	1853, 1854, 654, 656, 658, 660, 662, 664, 666, 826,
	0, 829, 0, 1049, 828, -2, 0, 1888, 1888, 1888,
	0, 0, 1854, 1852, 0, 0, 0, 832, 833, 903,
	904, 2161, 0, 0, 0, 0, 0, 0, 0, 0,
	2421, 2249, 0, 905, -2, 2282, 2284, 3095, 2880, 3121,
	2420, 2286, 2287, 2288, 2289, 2290, 0, 2292, 2293, 2294,
	2295, 2296, 2297, 0, 2299, 0, 2304, 2305, 2306, 0,
	3102, 2524, 2612, -2, 0, 0, 3109, 2608, 0, 2387,
	2322, -2, -2, 2635, 2614, 2093, 2094, 2095, 2096, 2097,
	-2, -2, 3140, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 0, 3083, 3103, 3104, 3110, 3112,
	3105, 3092, 2347, 2728, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 2120, 2129, -2,
	-2, -2, -2, -2, -2, -2, 3096, 3097, 3115, 3118,
	3125, 3130, 3131, 3101, 3111, 3139, 3141, 3142, 3143, 3144,
	3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154,
	3155, 3156, 2121, -2, -2, -2, -2, 0, 1871, 2924,
	1874, 1473, 1872, 1856, 1858, 0, 1860, 0, 0, 0,
	1865, 1891, 1889, 0, 1940, 1869, 1870, 1963, 1963, 1987,
	0, 1968, 0, 1987, 1883, 2014, 0, 1974, 2954, 2323,
	2324, 0, 2618, 2613, -2, -2, 3137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 779, 0,
	785, 787, 0, 0, 0, 0, 815, 814, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 3103,
	581, 531, 534, 0, 572, 573, 574, 575, 576, 3103,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 247, 3103, 672, 697, 0, 247, 3103, 675, 247,
	3103, 678, 0, 681, 1601, 247, 3103, 684, 2577, 247,
	3103, 687, 689, 2585, 247, 3103, 693, 2592, 2590, 694,
	0, 696, 267, 263, 264, 265, 266, 1697, 1698, 1699,
	1700, 0, 1731, 1602, 837, 0, 863, 0, 875, 876,
	3091, -2, 0, 2978, 880, 881, -2, 883, 1735, 1739,
	1740, 1741, 1742, 1743, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 870, 871, 890, 891, 897, 900, 0,
	1008, 1004, 1020, 0, 1035, 0, 1036, 1036, 2566, 2557,
	2558, 0, 0, 1036, 1036, 0, 0, 1039, 1040, 1041,
	1042, 1043, 1725, -2, 88, 0, 3103, 2014, 90, 0,
	2571, 2644, 2645, 2646, 2647, 2648, 3138, 3158, 3159, 3160,
	3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170,
	3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180,
	3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190,
	3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200,
	3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210,
	3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220,
	3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230,
	3231, 3232, 3233, 3234, 3235, 3236, 3237, 3140, 94, 0,
	3103, 99, 0, 3103, 0, -2, 123, 0, 144, 0,
	171, -2, -2, -2, 152, 0, 3103, 0, 2546, -2,
	0, 259, -2, 0, 769, 377, 378, 2631, 2632, 2640,
	2641, 2642, 2643, 366, 367, 549, 0, 760, 0, 866,
	2421, 0, 0, 1317, -2, 0, 1529, 1531, 1531, 0,
	-2, 0, 0, 0, 1268, 2543, 2548, 1269, 1270, 2567,
	1271, 2553, 0, 421, 422, 423, 424, 425, 0, 426,
	3103, 428, 429, 0, 431, 432, 3103, 434, 435, 0,
	437, 0, 439, 0, 302, 319, 317, 3103, 0, 3103,
	465, 468, 0, 570, 0, 567, 0, 551, 552, 0,
	554, 0, 0, 0, 559, 560, 562, 563, 564, 565,
	566, 0, 611, 609, 2582, 629, 391, 0, -2, 3103,
	0, 1314, 0, 0, 1581, -2, 0, 1522, -2, 0,
	1588, 3103, 1584, 0, -2, 0, 1881, 3103, 1752, 1349,
	1350, 1351, 1352, 2026, 635, 0, 1788, 0, 1790, 0,
	1810, 2020, 1963, 0, 0, 2025, 0, -2, 757, 2601,
	-2, 707, 0, 708, 0, -2, 0, 391, 0, 0,
	1295, 1297, 1298, 1300, 1301, 1304, 1305, 1306, 1307, 0,
	1309, 2000, 339, 341, 0, 0, 0, 0, 1294, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 0, 629,
	848, 0, 0, 1045, 1046, 0, 0, 1064, 1065, 1066,
	0, 0, 391, -2, -2, -2, 1074, 0, 1081, 1084,
	-2, 0, 0, 0, 0, 1091, 0, 1096, 1097, 1098,
	0, -2, 0, 1105, 1107, 1278, 1109, 0, 0, 1111,
	0, 1115, 0, 1118, 0, 1120, 0, 1122, -2, -2,
	-2, 1130, 1131, -2, 1136, -2, 0, 1140, -2, 0,
	1143, 0, 1146, -2, 0, 1156, 1152, 1153, 0, 0,
	0, 0, 1173, 1174, 0, 1183, 0, 1186, 1187, 1188,
	0, 0, 1193, 1194, 0, 1196, 1197, 1198, 1200, 1201,
	1202, 0, 3050, 2975, 2712, 2760, 0, 1211, -2, 1217,
	1219, 0, -2, 0, 1235, 0, 1239, 0, 0, 1248,
	0, 0, 0, 1048, 0, 1057, 1058, 1059, 247, 2018,
	1710, 0, -2, 0, 827, 0, 831, 1913, 1839, 1836,
	0, 1910, 1911, 1840, 0, 0, 0, 1847, 0, 1886,
	1887, 0, 0, 0, 1826, 1827, 0, 0, 0, 0,
	0, 0, 2426, 2427, 2428, 2429, 2442, 2430, 2431, 2441,
	2439, 2440, 2432, 2433, 2438, 2452, 2453, 2443, 2444, 2434,
	2447, 2445, 2446, 2448, 2449, 2450, 2451, 0, 0, 2457,
	0, 2435, 2436, 2437, 2465, 0, 0, 2466, 0, 2468,
	0, 2458, 2454, 2455, 2456, 0, 2228, 2230, 2532, 0,
	0, 0, 2464, 2459, 2460, 2166, 2167, 2168, 2169, 2170,
	2203, 2207, 2208, 0, 0, 2283, 2529, 2528, 2285, 0,
	0, 2480, 0, 2298, -2, 0, 2421, 2475, 0, 0,
	2307, 2308, 2309, 0, 0, 2480, 0, 0, 2523, 2319,
	2320, 2158, 0, 0, 2389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2107, 2106, 0, 2108, 0, 2109, 2110,
	2117, 2130, 0, 0, 0, 0, 2134, 0, 0, 0,
	0, 0, 0, 0, 2504, -2, 0, 0, 0, 0,
	2122, 0, 0, 1873, 0, 0, 1944, 2533, 2537, 2538,
	1944, 1944, 0, 0, 2481, 2011, 2011, 0, 0, 2006,
	2006, 2006, 2004, 1987, 0, 1987, 1997, 0, 1987, 1987,
	0, -2, 1968, 0, 0, 1997, 0, 1981, 745, 747,
	749, 751, 752, 753, 755, 2015, 2016, 0, 0, 0,
	0, 2619, 0, 0, 0, 0, 0, 0, 2604, 0,
	0, 2576, 446, 447, 0, 0, 0, 3032, 2967, 0,
	-2, -2, -2, -2, 2975, 0, 0, 2712, 2749, 790,
	817, 0, 1883, 0, 2483, 2041, 2045, 0, 2047, 2048,
	2049, 2050, 2051, 0, 0, 2042, -2, 2118, 2120, 2141,
	2636, 2637, 2638, 2101, 2102, 2103, 2104, 2105, 2113, 2100,
	2100, 2100, 2111, 2140, 2132, 2140, 2136, 2086, 2087, 2088,
	2123, 2124, 2125, 2126, 0, 3032, 2967, 0, -2, 0,
	801, 0, 0, 0, 1821, 329, 330, 529, 0, 245,
	246, 0, 533, 0, 571, 0, 578, 579, 580, 0,
	668, 0, 0, 247, 3103, 673, 0, 676, 0, 247,
	3103, 2541, 682, 0, 685, 0, 0, 691, 0, 0,
	0, 0, 0, 247, 1823, 0, 0, 0, 0, -2,
	885, 893, 894, 895, 0, 1737, 0, 1744, 914, 915,
	916, 1746, 1747, 0, 1749, 888, 917, 918, 919, 920,
	921, 922, 0, 2555, 2556, 2561, 2562, 0, 0, 886,
	907, 889, 0, 901, 1011, 1006, 1007, 1021, 1022, 0,
	0, 2559, 2560, 0, 0, 1027, 1028, 153, 1683, 0,
	0, 200, 0, 1683, 1683, 0, 0, 0, 0, 228,
	0, 0, 1383, 0, 0, 0, 0, 171, 185, 196,
	165, 166, 167, 0, 0, 0, 0, 0, 0, 100,
	1495, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	1511, 1514, 0, 0, 0, 0, 0, 125, 126, 0,
	0, 131, 132, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 1785, 0, 175, 171, 0, 0, 170, 172,
	155, 0, 0, 171, 186, 198, 0, 234, 236, 1380,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 269,
	0, 0, 304, 767, 0, 770, 0, 543, 0, 518,
	0, 0, 540, 548, 0, 0, 505, 506, 507, 508,
	0, 0, 513, 0, 0, 0, 0, 519, 759, 761,
	629, 629, 0, 0, 864, 868, 869, 0, 0, 865,
	867, 0, 0, 1523, 0, 0, 0, 1880, 0, 0,
	0, 0, 3103, 1681, 0, 1664, 0, 2000, 2808, -2,
	-2, 339, 2000, 1267, 0, 0, 2619, 2551, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 328, 0,
	0, 0, 474, 0, 561, 550, 553, 555, 556, 557,
	600, 1442, 3103, 0, 0, 633, 624, 0, 628, 0,
	0, 632, 0, 0, 1494, 3103, 1492, 2586, 0, 1520,
	0, 1580, 1473, 3103, 2584, 0, 0, 0, 1589, 2628,
	1598, 1602, 1773, 0, 637, 0, 1791, 1793, 0, 0,
	2021, 0, 2023, 1963, 1883, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 1308, 348, 0, 1999, 0,
	0, 379, 2000, 339, 2937, 0, 1293, 391, 391, 2000,
	850, 2000, 852, 0, 0, 1067, 0, 0, 1070, 391,
	391, 391, 1079, 1080, 1082, 1083, -2, -2, -2, -2,
	1085, 1086, 1180, 0, 0, 0, 1179, 1679, 0, 1101,
	1104, 1108, 0, 1252, 2949, 2967, 3032, 1276, 1180, 2712,
	1180, 2712, 1180, 2712, 1180, 1180, 1124, 1168, 1176, 1135,
	1142, 0, 1137, 1141, 1144, 1147, 0, 1149, 1157, 0,
	-2, 0, 1160, 0, 1162, 0, 1164, 1180, 1181, 1184,
	0, 1192, 1195, 0, 1203, 1204, 1205, 1206, 2599, 1207,
	1208, 1209, 1210, -2, 1214, 1215, 0, 1226, 1231, 1232,
	1228, 0, 0, 0, 0, 0, 0, 1242, 1243, 0,
	0, 0, 1251, 0, 1060, 1515, 0, 1719, 1913, 1839,
	830, 1830, 1912, 1831, 1838, 1841, 0, 0, 1843, 0,
	1845, 0, 1908, 1909, 1916, 1917, 0, 1927, 1928, 1920,
	0, -2, 0, 0, 1923, 1924, 1849, 0, 1866, 1867,
	1868, 1897, 1900, 1617, 0, 3238, 873, 0, 2162, 2036,
	2163, 2164, 2570, 0, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, -2, -2, -2, -2, -2, -2,
	-2, -2, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, -2, -2, -2, 2204, 2205, 2206, -2,
	2467, 2469, 0, 2532, 0, -2, 0, -2, -2, -2,
	-2, 2225, 0, 2227, 2232, 2234, 2236, 0, 0, 0,
	0, 2531, 2246, 2515, 2516, 0, 0, 2423, 2424, 2425,
	2231, 0, 2250, 2530, 2527, 0, 0, 2461, 0, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 0, 2479, 1896, 2311, 0, 0, 0, 0,
	2318, 2303, 2477, 0, 2476, 0, 0, 0, 2487, 0,
	2522, 2518, 0, 2568, 2157, 2144, 2145, 2146, 2147, 2148,
	2149, 2159, 0, 2565, 2605, 2611, 2397, 0, 0, 0,
	2348, 2349, 2350, 2351, 2352, 0, 2354, 2355, 0, 2357,
	2358, 0, 2360, 2361, 0, 2363, 2364, 2365, 2366, 2367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 0,
	0, 2369, 0, 2490, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2371, 0, 2373, 2481, 2501, 0, 0,
	2251, 0, 0, 0, 0, 0, 2376, 2481, 2509, 0,
	0, 0, 0, 0, 2481, 0, 2514, 0, 2383, 0,
	2385, 1088, 1089, 1875, 0, 0, 2031, 0, 0, 0,
	2536, 2539, 2540, 3064, 3065, 3066, 3067, 3068, 3069, 3070,
	3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080,
	3081, 3082, 2031, 2031, 0, 1939, 0, 0, 2007, 2008,
	2009, 2010, 0, 0, 2011, 0, 2001, 2005, 2002, 2003,
	1997, 1960, 0, 0, 2572, 1997, 1966, 1996, 0, 1473,
	1986, 1997, 1997, 0, -2, 1970, 1987, 0, 0, 746,
	748, 750, 754, 756, 0, 0, 1896, -2, 0, -2,
	393, 1472, 0, 0, 0, 0, 0, 0, 780, 782,
	0, 0, 688, 0, 0, 0, 1258, 0, 1260, 1261,
	0, 0, 1667, 774, 0, 777, 0, 2032, 2035, 0,
	0, 2046, 2052, 2053, 0, -2, 0, 0, 2142, 0,
	0, 0, 0, 0, 0, 812, 0, 3013, 0, 810,
	0, 532, 247, 0, 536, 537, 0, 0, 486, 487,
	488, 489, 491, 2639, 492, -2, -2, 0, 582, 698,
	247, 670, 0, 247, 247, 679, 0, 0, 247, 690,
	247, 2593, 247, 2591, 268, 695, 1822, 280, 0, 872,
	0, 1736, 1745, 0, 911, 0, 913, 0, 2563, 2564,
	0, 902, 0, 1009, 0, 1023, 1024, 1025, 1026, 0,
	0, 0, 0, 1682, 0, 0, 1627, 0, 0, 204,
	3103, 0, 249, 0, 0, 1435, 2578, 0, 1425, 0,
	0, 2736, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 1497, 1499, 1506, 1508, 0, 1502, 1503, 0, 1505,
	1507, 1509, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 137, 1532, 2973,
	0, 0, 0, 0, 1533, 1534, 1535, 1761, 1762, 0,
	1784, 1785, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 2545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 305, 0, 771,
	0, 772, 0, 539, 541, 542, 518, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 514, 515, 516, 517,
	762, 391, 764, 765, 387, 384, 386, 766, 0, 0,
	0, 1525, 0, 1576, 1574, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 0, 0, 0, 0, -2, 1527, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 382,
	2544, 2554, 0, 1302, 1303, 427, 430, 433, 436, 286,
	0, 0, 0, 467, 476, 0, 1355, 1327, 0, 0,
	610, 391, 629, 631, 0, 389, 2883, 2597, 1312, 1490,
	1493, 0, 1473, 3103, 1544, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 3103, 2573, 2627, 2628, 1775,
	1785, 0, 2031, 0, 1808, 1794, 0, 0, 0, 1808,
	1812, 1813, 1815, 1816, 0, 0, 2022, 2028, 706, 758,
	1883, 1883, 391, 0, 0, 1797, 1799, 0, 0, 0,
	331, 0, 342, 2000, 340, 0, 348, 0, 0, 2000,
	339, 0, 623, 849, 854, 1062, 0, 0, 391, 1071,
	1072, 1073, 1126, 1170, 1178, 1230, 1090, 1092, 1093, 1094,
	0, 1099, 0, 0, 0, 1277, 1272, 1273, 1274, 2594,
	2590, 1275, 1110, 1180, 1113, 1180, 1116, 1180, 1119, 1121,
	1139, 1145, 1158, 1151, 1159, 0, 0, 0, 1172, 0,
	1190, 0, 1199, 1213, 0, 0, 0, 0, 0, 0,
	0, 1236, 1237, 1238, 1240, 1245, 1244, 0, 1250, 1061,
	2019, 1834, 1835, 1837, 0, 1846, 0, 0, 1922, -2,
	-2, 1921, 1925, 1926, -2, -2, -2, -2, 1842, 0,
	1851, 1848, 0, 1907, 1615, 1616, 0, 0, 874, 0,
	0, -2, -2, 0, 0, 0, 2247, 0, -2, 2226,
	2229, 2233, 2235, 2237, 0, 0, 0, 0, 0, 0,
	2470, 0, 2472, 2248, 2525, 2528, 2463, 0, 2419, 0,
	0, 1895, 1896, 1896, 0, 2317, 0, 2478, 0, 2485,
	2486, 0, 2310, 0, 2519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2321, 0, 0, 0, 0, 2353,
	2356, 2359, 2362, 0, 0, 0, 0, 2342, 0, 0,
	0, 2346, 2112, 2098, 0, 2140, 2138, 2139, 2133, 2140,
	2137, 2090, 0, 2089, 0, 2368, 0, 2370, 2372, 0,
	0, 2374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2254, 2255, 2256, 2276,
	2375, 2507, 2508, 0, 0, 0, 0, 0, 0, 2381,
	0, 2513, 2382, 2384, 1883, 0, 1876, 0, 1941, 1930,
	2030, 0, 2534, 2000, 1943, 1945, 2535, 2575, 1930, 1930,
	0, 2482, 0, 0, 1991, 0, 0, 0, 1993, 1964,
	0, 0, 1958, 0, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1965, 1473, 1995, 1967, 1971, 2605, 0, 1997, 0,
	1982, 0, 1984, 2017, 0, 1976, 1979, 0, 0, 2620,
	2031, 0, 440, 448, 449, 441, 442, 443, 444, 0,
	1667, 0, 0, 0, 0, 1259, 1262, 0, 797, 0,
	0, 2484, 0, 2037, 0, 2043, 0, 0, 0, 0,
	799, 0, 0, 0, 0, 0, 0, 0, 1820, 530,
	535, 0, 0, 485, 0, 484, 490, 577, 669, 247,
	674, 677, 2542, 247, 683, 686, 692, 276, 0, 862,
	-2, 909, 910, 912, 0, 908, 1014, 1010, 201, 1683,
	0, 0, 0, 1623, 0, 1338, 0, 1333, 1334, 1625,
	2589, 1629, 1635, 1638, 0, 206, 3103, 218, 0, 3103,
	0, 1399, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 3103, 247, 3103, 247, 222, 224, 227, 0, 233,
	229, 0, 1335, 0, 1387, 0, 0, 1390, 154, 1683,
	0, 0, 157, 161, 173, 0, 0, 0, 183, 0,
	0, 0, 1640, 1644, 1652, 0, 0, 0, 1500, 1501,
	1504, 1510, 1513, 101, 0, 0, 0, 1648, 1650, 1656,
	124, 127, 3103, 2587, 0, 129, 3103, 0, 138, 1785,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 159, 163, 174, 0, 1658, 156,
	0, 262, 0, 0, 252, 247, 3103, 0, 254, 0,
	255, 256, 270, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 768, 0, 544, 545, 546, 0,
	0, 0, 509, 510, 763, 0, 0, 0, 1315, 1316,
	1575, 0, 1518, 1519, 314, 315, 0, 1530, 1524, 0,
	0, 0, 0, 0, 1660, 1661, 0, 0, 0, 1681,
	1676, 2000, 282, 0, 2000, 290, 0, 2550, 0, 318,
	327, 464, 0, 475, 477, 479, 0, 0, 0, 1354,
	1453, 1356, 1358, 1359, 1360, 249, 0, 2628, 1425, 2795,
	2628, 0, 0, 1322, 0, 0, 0, 616, 612, 0,
	621, 625, 626, 0, 0, 0, -2, 0, 0, 0,
	0, -2, 0, 0, 0, 1591, 1585, 1586, 0, 0,
	0, 0, 3103, 1777, 1785, 0, 1881, 1896, 636, 1786,
	1808, 0, 0, 0, 1796, 1792, 1789, 2031, 0, 0,
	0, 0, 0, 2024, 2027, 709, 710, 368, 0, 391,
	0, 0, 0, 0, 0, 0, 346, 0, 349, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 0, 0,
	0, 0, 364, 348, 380, 333, 2000, 0, 348, 0,
	0, 851, 0, 0, 0, 1069, 0, 0, 1679, 1103,
	0, 1112, 1114, 1117, 1161, 1163, 1180, 0, 1191, 1220,
	2574, 1221, 1377, 0, 1377, 0, 0, 1241, 1247, 1844,
	0, 1919, 1850, 1901, 1902, 0, 1617, 0, 2165, 2210,
	0, 0, -2, 0, 0, 2214, 0, 0, 0, -2,
	0, 0, 0, 2471, 2473, 0, 2527, 2462, 2312, 0,
	0, 0, 2316, 2300, 2301, 0, 2422, 2488, 2517, 2521,
	0, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 0, 2569,
	2606, 2610, 2395, 2396, 2400, 2583, 0, 0, 0, 2325,
	0, 0, 0, 0, 0, 0, 0, 0, 2131, 2135,
	0, 0, 2489, 2500, 2502, 2252, 2253, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, -2, -2, -2,
	2270, 2271, 2272, -2, -2, -2, 2277, 0, 0, 0,
	2503, 2505, 2506, 2510, 2511, 0, 2378, 2379, 2380, 2512,
	0, 1883, 1877, 1938, 0, 2029, 1942, 0, 1938, 1938,
	1890, 1989, 0, 0, 2013, 0, 1961, 0, 1962, 0,
	0, 1994, 0, 1969, 1972, 1973, 1983, 0, 1975, 0,
	1978, 0, 2312, -2, 392, 394, 396, 0, 399, 400,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	789, 1667, 1667, 0, 0, 791, 0, 775, 0, 0,
	2039, 0, 0, 2115, 2119, 2143, 803, 805, 0, 0,
	0, 3032, 2967, 0, 0, 802, 538, 482, 483, 671,
	680, 278, 0, 1998, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 248, 0, 1434, 0,
	1397, 0, 0, 1424, 0, 0, 1440, 208, 209, 210,
	0, 0, 0, 0, 220, 0, 0, 216, 0, 226,
	232, 231, 0, 1384, 0, 0, 0, 0, 1628, 0,
	0, 0, 180, 181, 182, 0, 187, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 139, 140, 0, 0, 1767, 1768, 0, 1755,
	177, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 1614, 272, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 294, 296, 0, 0, 0, 0, 316,
	0, 0, 503, 0, 388, 383, 385, 1517, 1578, 1579,
	1526, 1641, 1645, 1653, 0, 0, 0, 0, 0, 820,
	1680, 0, 290, 288, 0, 291, 290, 284, 0, 0,
	0, 0, 0, 0, 0, 558, 1325, 1441, 0, 0,
	1443, 1361, 1365, 0, 2628, 2628, 0, 2580, 0, 1323,
	0, 0, 1442, 608, 0, 615, 0, 630, 2579, 0,
	0, 0, 1494, 0, 0, 1521, 1473, 1547, 1473, 0,
	1590, 1592, 0, 1600, 0, 0, 0, 1779, 1785, 0,
	1772, 1773, 1915, 1787, 1806, -2, 0, 0, 1896, 1814,
	1811, 1817, 1818, 0, 0, 371, 0, 1798, 1800, 0,
	1296, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 348, 345, 335, 2000, 375, 0, 1063, 391,
	1095, 1678, 1100, 2595, 1171, 1189, 1222, 1376, 0, 0,
	1224, 0, 0, 1918, 1905, 1906, 1903, 1617, 2212, 2216,
	0, 0, 0, 2218, -2, 0, 2240, -2, -2, 2474,
	2526, 2291, 1896, 2313, 2315, 2302, 2520, 2160, 0, 2402,
	2399, 0, 2386, 0, 2337, 2338, 0, 0, 2341, 2343,
	2344, 2345, 2099, 2092, 2091, 2499, 0, 0, 0, 0,
	2377, 1878, 0, 2391, 0, 0, 1946, 2391, 2391, 1990,
	0, 1992, 1959, 1947, 0, 1956, 0, 2606, 1985, 1977,
	0, 0, 397, 0, 401, 402, 403, 404, 406, 0,
	0, 0, 0, 0, 445, 792, 793, 0, 0, 0,
	1666, 2033, 2038, 0, 2044, 2114, 0, 0, 0, 0,
	0, 0, 811, 279, 0, 1012, 1013, 202, 203, 1339,
	1337, 1632, 1636, 1633, 0, 205, 0, 0, 1398, 0,
	1401, 0, 0, 0, 0, 1408, 1425, 0, 0, 0,
	0, 0, 0, 1427, 0, 1426, 0, 0, 1457, 0,
	1605, 1612, 0, -2, 0, 0, 0, 212, 238, 0,
	0, 0, 0, 241, 1684, 214, 0, 0, 247, 247,
	1336, 0, 0, 1624, 1626, 1639, 0, 0, 0, 0,
	190, 0, 0, 1642, 1646, 1654, 1649, 1651, 1657, 0,
	0, 130, 1758, 0, 0, 0, 1769, 0, 176, 0,
	0, 0, 1659, 260, 261, 0, 247, 0, 247, 253,
	247, 1614, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 0, 547, 504, 0, 0, 0, 0, 0, 0,
	1662, 1663, 281, 0, 0, 283, 381, 290, 466, 473,
	478, 480, 481, 1386, 0, 1453, 1445, 1446, 1447, 0,
	1357, 1452, 1454, 0, 0, 1362, 0, 0, 0, 0,
	1342, 1324, 0, 1355, 1327, 0, 613, 0, 390, 1313,
	1491, 1539, 1473, 0, 1542, 0, 0, 1582, 0, 0,
	0, 0, 0, 0, 0, 1781, 1785, 0, 1774, 1775,
	1808, 1914, 0, 0, 0, 1795, 1915, 0, 391, 0,
	391, 350, 0, 351, 352, 353, 360, 361, 362, 363,
	334, 337, 0, 348, 853, 855, 0, 0, 861, 1068,
	1375, 0, 0, 0, 0, 1904, 2220, -2, -2, 2241,
	0, 2607, 2609, 1896, 0, 2388, 1898, 0, 0, -2,
	0, 0, 0, 1879, 1862, 0, 1937, 1929, 1931, 1933,
	2952, 2707, 3102, 1863, 1864, 2012, 0, 0, 1980, 398,
	407, 408, 0, 410, 411, 794, 0, 0, 0, 2040,
	0, 0, 800, 0, 0, 0, 1002, 0, 0, 1634,
	207, 0, 0, 1402, 1403, 1405, 0, 1407, 1409, 1410,
	1327, 0, 1414, 0, 2630, 0, 1419, 1422, 1423, 0,
	0, 1436, 1458, 0, 1467, 0, 1607, 1617, 1611, 0,
	1609, 1469, 0, 211, 240, 213, 242, 237, 0, 1614,
	0, 215, 225, 0, 0, 158, 0, 0, 2700, 193,
	191, 189, 128, 134, 136, 141, 1621, 179, 0, 160,
	0, 262, 271, 1613, 273, 257, 247, 0, 293, 295,
	297, 298, 299, 300, 0, 1643, 1647, 1655, 0, 1670,
	1671, 1672, 1673, 0, 0, 0, 0, 292, 0, 0,
	0, 472, 1327, 1385, 1326, 1444, 0, 1455, 1327, 0,
	0, 0, 0, 0, 0, 1329, 0, 1328, 0, 0,
	614, 617, 0, 620, 2031, 627, 0, 0, 0, 1546,
	0, 1593, 1591, 0, 1599, 0, 0, 0, 1754, 0,
	0, 1776, 1777, 634, 1801, 0, 0, 1808, 1819, 370,
	0, 373, 347, 0, 336, 0, 857, 0, 859, 0,
	1223, 1225, 0, 0, 2314, 2406, 0, 0, 2339, 2340,
	-2, 0, 2280, 2390, 2392, 0, 0, 0, 0, 0,
	1948, 1957, 409, 1667, 1667, 2034, 807, 808, 804, 806,
	0, 1630, 0, 1637, 249, 1400, 1404, 0, 1411, 0,
	0, 0, 1415, 1477, 0, 0, 1494, 1494, 1428, 0,
	0, 1461, 1462, 1382, 0, 1463, 1464, 1465, 1606, 1907,
	1612, 1327, 0, 0, 239, 244, 0, 0, 0, 0,
	0, 0, 178, 0, 251, 274, 1614, 0, 0, 1674,
	1675, 0, 0, 289, 323, 495, 493, 1329, 0, 1456,
	1363, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1364, 1469, 0, 0, 1433, 1340, 0, 1343, 0, 1325,
	0, 618, 619, 622, 0, 1540, 0, 1547, 0, 0,
	1600, 0, 0, 1764, 1753, 1785, 1778, 1779, 2031, 0,
	1809, 0, 343, 344, 856, 0, 0, 1233, 1234, 0,
	0, 0, 0, 2401, 1899, 2281, 0, 0, 1932, 1934,
	1935, 1936, 795, 796, 0, 1631, 219, 0, 1471, 1413,
	1482, 0, 0, 0, 0, 0, 1429, 1459, 1460, 1457,
	1381, 0, 1610, 1608, 1438, 1471, 1473, 217, 0, 1469,
	0, 1391, 0, 0, 1394, 0, 0, 194, 2700, 192,
	0, 247, 773, 1667, 247, 0, 326, 0, 528, 494,
	496, 0, 0, 500, 501, 502, 1321, 0, 1449, 1451,
	1467, 1469, 1382, 0, 1344, 1386, 1342, 1541, 1545, 1543,
	1583, 1469, 0, 1467, 0, 1771, 1785, 1765, 1766, 0,
	1781, 0, 0, 391, 858, 860, 2398, 2418, 2407, -2,
	3035, 2708, 0, 2418, 2418, 2393, 2394, 0, 0, 1327,
	0, 1416, 1478, 1479, 0, 1474, 1475, 1476, 2629, 1417,
	1418, 1420, 1421, 2031, 0, 1468, 1477, 243, 1327, 1388,
	0, 0, 1389, 0, 0, 197, 0, 199, 275, 1665,
	1668, 0, 301, 0, 0, 469, 526, 0, 0, 497,
	498, 520, 499, 1318, 1320, 1327, 0, 1382, 1467, 1327,
	0, 0, 0, 1327, 1329, 1467, 0, 1382, 0, 1760,
	1770, 0, 1780, 1754, 0, 1804, 0, 372, 2403, 0,
	0, 2409, 2410, 2411, 2412, 2413, 2404, 2405, 809, 1406,
	1412, 0, 1480, 0, 1481, 0, 0, 0, 1437, 1466,
	1482, 223, 1392, 0, 1395, 0, 195, 0, 0, 321,
	322, 525, 521, 1448, 1450, 1327, 1382, 2031, 1330, 0,
	1332, 1329, 1341, 1382, 0, 1327, 0, 1783, 1759, 1763,
	2588, 1764, 1802, 0, 0, 0, 2415, 2416, 0, 0,
	0, 1483, 0, 1486, 1487, 0, 1484, 1457, 0, 0,
	247, 0, 1883, 2031, 1327, 1620, 1331, 1321, 1327, 1469,
	2031, 1467, 1757, 1785, 1771, 0, 2031, 2414, 2417, 2408,
	1470, 1485, 1488, 1489, 1439, 0, 0, 1669, 324, 0,
	0, 527, 522, 523, 1620, 2031, 1432, 0, 1619, 1319,
	2031, 1467, 1620, 1382, 1750, 1756, 0, 0, 1760, 2031,
	1805, 1379, 0, 0, 524, 1430, 1620, 1618, 1620, 1382,
	1596, 1327, 1782, 1757, 1803, 1393, 1378, 0, 325, 1431,
	1594, 1327, 2031, 1751, 0, 2031, 1620, 0, 1620, 1597,
	1379, 1595, 1396,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 646, 3, 652, 647, 3,
	658, 659, 650, 648, 663, 649, 660, 651, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 667, 664,
	638, 640, 639, 643, 662, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 656, 3, 657, 653, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 665, 645, 666, 641,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 642, 57981, 644, 57982, 654, 57983, 655, 57984, 661,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1655
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1698
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1706
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1772
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1812
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1888
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1899
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2026
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2039
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2052
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2088
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2144
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2153
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2174
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2182
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2218
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2229
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2360
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2368
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2379
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2389
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2399
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2408
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2419
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2425
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2451
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2456
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2547
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2601
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2604
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = nil
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = true
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = false
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2857
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2861
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3045
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = nil
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3565
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3668
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3677
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3683
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3688
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3693
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = nil
		}
	case 392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3801
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3887
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4033
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4054
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4055
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "CREATE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4098
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4109
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = true
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = false
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = true
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = false
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4150
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4205
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4207
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			return unimplemented(sqllex, "create window function")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4310
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{
		}
	case 543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4439
		{
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = true
		}
	case 549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = false
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4489
		{
			return unimplemented(sqllex, "create access method")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			return unimplemented(sqllex, "create cast")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4492
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4494
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4495
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4496
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4497
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return unimplemented(sqllex, "create publication")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4500
		{
			return unimplemented(sqllex, "create rule")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			return unimplemented(sqllex, "create server")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4505
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4508
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4509
		{
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
		}
	case 570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4513
		{
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4516
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4520
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4523
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4524
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4525
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4531
		{
			return unimplemented(sqllex, "drop server")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4532
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4615
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4662
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4680
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4711
		{
		}
	case 629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4713
		{
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.str = ""
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4731
		{

			sqlVAL.union.val = nil
		}
	case 634:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "DELETE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4759
		{
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4773
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4786
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "DROP")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4987
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4992
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5053
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5069
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5077
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5085
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "DELETE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			return helpWith(sqllex, "INSERT")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "DELETE")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "INSERT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5275
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5308
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5399
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "GRANT")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5563
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5576
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "RESET")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			return helpWith(sqllex, "RESET")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "USE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5655
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5660
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "USE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5678
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5786
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5794
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5832
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5838
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			return unimplemented(sqllex, "set from current")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5923
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5958
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.Low
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.Normal
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.High
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6108
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6120
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6129
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			return helpWith(sqllex, "SHOW")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = true
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = false
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = true
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = false
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = false
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = int64(1)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = int64(1)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = int64(1)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6349
		{
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6353
		{
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6357
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6389
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.str = "client_encoding"
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6411
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.str = "timezone"
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6445
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6572
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6581
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6587
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6612
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6635
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6664
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6704
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6717
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6725
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6736
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6749
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6774
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6785
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6790
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = true
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = true
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = false
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6828
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6888
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6940
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6947
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = true
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = false
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6966
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6971
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7017
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = true
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = false
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7064
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7074
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7085
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7107
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7135
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7151
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7156
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7161
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7166
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7171
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7191
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7204
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7209
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7220
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7231
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7249
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7257
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7283
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7288
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7301
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7324
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7402
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7412
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7648
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7723
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7735
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7738
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7749
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7777
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7822
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7941
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7956
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7984
		{

			sqlVAL.union.val = nil
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.str = ""
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = nil
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8023
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8027
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8063
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8076
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8090
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8091
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8092
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8184
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.str = ""
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8329
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8436
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{

			sqlVAL.union.val = true
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = false
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8498
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8598
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8719
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8722
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8724
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8891
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8900
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8908
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8937
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9045
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.str = ""
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9065
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = true
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{

			sqlVAL.union.val = true
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = false
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9105
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9119
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9131
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9143
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9154
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9165
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = false
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = true
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = true
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = nil
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9312
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9340
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9342
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9344
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9348
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9383
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9401
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9420
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9437
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9454
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = false
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = true
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = false
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9524
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.str = ""
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.str = ""
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = true
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = false
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = false
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9599
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9605
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9830
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9836
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9848
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9854
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9868
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9874
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9933
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = true
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = false
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9997
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.str = ""
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10037
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10066
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10075
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10144
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10149
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10150
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10169
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10193
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10216
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10217
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10224
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10231
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10236
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.str = ""
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.str = ""
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10410
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{

		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10447
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.str = ""
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.str = ""
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.str = ""
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.str = ""
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10502
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10528
		{
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10557
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10637
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10682
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10773
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10788
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10932
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10967
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10968
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10969
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11030
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11090
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = true
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = false
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11144
		{
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = nil
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11158
		{
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = true
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = false
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = false
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = true
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11188
		{
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11192
		{
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11245
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11250
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11276
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11309
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11369
		{
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11405
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11435
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11437
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11474
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11521
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11533
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11552
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11594
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11604
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11650
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11680
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11713
		{
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = nil
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = true
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = false
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.str = tree.AstFull
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.str = tree.AstRight
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.str = tree.AstInner
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11833
		{
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.str = tree.AstHash
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.str = ""
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11902
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11907
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11925
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11947
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = true
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = false
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = true
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = false
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12009
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12017
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12018
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12036
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12046
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12066
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12127
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12128
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = types.Geography
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12177
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12185
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12219
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = nil
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = types.Int2
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = types.Int
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = types.Float4
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = types.Float
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12262
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12270
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12278
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = types.Bool
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12292
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = types.Float
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12311
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12317
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12339
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = types.String
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = true
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = false
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = types.Date
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12396
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12410
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12419
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12427
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12444
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = true
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = false
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = false
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = types.Interval
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12468
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12552
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12567
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = nil
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12657
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12806
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12814
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13013
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13035
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13143
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13151
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13247
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13252
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13254
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13266
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13270
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13278
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13287
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13302
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13336
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13347
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13348
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13363
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13372
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13425
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13438
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13499
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13525
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13529
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13553
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13563
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13568
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13577
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13586
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13595
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13604
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13609
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13614
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13619
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13624
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13629
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13638
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13639
		{
			return unimplemented(sqllex, "treat")
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13660
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13665
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13671
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13675
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13685
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13696
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13702
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13712
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13720
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13735
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.str = ""
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13761
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13771
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13779
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13801
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13814
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13870
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13874
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13882
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13887
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13911
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13923
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13927
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13931
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13947
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13949
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13952
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13954
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13956
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13957
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13958
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13961
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13963
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13964
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13966
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13967
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13969
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13970
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13971
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13972
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13973
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13974
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13975
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13976
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13978
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13979
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13980
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13982
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13987
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14010
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14011
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14012
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14013
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14040
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14065
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14069
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14075
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14079
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14086
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14102
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14112
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14116
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14122
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14132
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14136
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14159
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14163
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14173
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14184
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14201
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14205
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14209
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14223
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14229
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14235
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14239
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14243
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14249
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14268
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14278
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14284
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14288
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14318
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14327
		{
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14328
		{
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14332
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14336
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14351
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14355
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14359
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14371
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14381
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14404
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14412
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14435
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14444
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14448
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14456
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14481
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14485
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14497
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14501
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14510
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14521
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14530
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14538
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14555
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14640
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14648
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14652
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14658
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14668
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14674
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14681
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14708
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14715
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14719
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14723
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14737
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14741
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14745
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14758
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14767
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14785
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14798
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14805
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14830
		{
			sqlVAL.str = ""
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14836
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14840
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
