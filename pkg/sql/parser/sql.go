// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11986

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1360,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	232, 206,
	484, 206,
	-2, 0,
	-1, 82,
	221, 1158,
	234, 1158,
	250, 348,
	374, 348,
	384, 940,
	416, 348,
	428, 940,
	469, 940,
	495, 348,
	521, 940,
	-2, 0,
	-1, 88,
	250, 352,
	-2, 0,
	-1, 89,
	129, 1360,
	227, 1360,
	506, 1360,
	507, 1360,
	-2, 0,
	-1, 105,
	146, 1331,
	164, 1331,
	177, 1331,
	230, 1331,
	263, 1331,
	327, 1331,
	337, 1331,
	501, 1331,
	-2, 1302,
	-1, 141,
	154, 818,
	249, 818,
	377, 787,
	433, 787,
	487, 818,
	489, 787,
	-2, 0,
	-1, 143,
	4, 1362,
	21, 1362,
	22, 1362,
	23, 1362,
	24, 1362,
	25, 1362,
	26, 1362,
	27, 1362,
	29, 1362,
	30, 1362,
	36, 1362,
	41, 1362,
	42, 1362,
	44, 1362,
	45, 1362,
	46, 1362,
	47, 1362,
	48, 1362,
	49, 1362,
	50, 1362,
	52, 1362,
	53, 1362,
	54, 1362,
	55, 1362,
	57, 1362,
	58, 1362,
	59, 1362,
	60, 1362,
	61, 1362,
	62, 1362,
	63, 1362,
	67, 1362,
	68, 1362,
	69, 1362,
	70, 1362,
	72, 1362,
	73, 1362,
	74, 1362,
	78, 1362,
	79, 1362,
	80, 1362,
	81, 1362,
	82, 1362,
	83, 1362,
	84, 1362,
	87, 1362,
	88, 1362,
	89, 1362,
	90, 1362,
	91, 1362,
	93, 1362,
	95, 1362,
	96, 1362,
	97, 1362,
	98, 1362,
	99, 1362,
	100, 1362,
	102, 1362,
	103, 1362,
	104, 1362,
	106, 1362,
	107, 1362,
	115, 1362,
	116, 1362,
	117, 1362,
	118, 1362,
	120, 1362,
	121, 1362,
	122, 1362,
	124, 1362,
	125, 1362,
	126, 1362,
	128, 1362,
	129, 1362,
	131, 1362,
	132, 1362,
	133, 1362,
	136, 1362,
	137, 1362,
	138, 1362,
	140, 1362,
	141, 1362,
	143, 1362,
	144, 1362,
	145, 1362,
	147, 1362,
	148, 1362,
	149, 1362,
	150, 1362,
	151, 1362,
	152, 1362,
	153, 1362,
	154, 1362,
	155, 1362,
	156, 1362,
	157, 1362,
	158, 1362,
	159, 1362,
	160, 1362,
	161, 1362,
	163, 1362,
	169, 1362,
	170, 1362,
	171, 1362,
	172, 1362,
	176, 1362,
	178, 1362,
	182, 1362,
	183, 1362,
	184, 1362,
	185, 1362,
	186, 1362,
	187, 1362,
	188, 1362,
	189, 1362,
	190, 1362,
	191, 1362,
	192, 1362,
	193, 1362,
	195, 1362,
	196, 1362,
	198, 1362,
	199, 1362,
	201, 1362,
	202, 1362,
	203, 1362,
	204, 1362,
	205, 1362,
	206, 1362,
	207, 1362,
	208, 1362,
	209, 1362,
	211, 1362,
	212, 1362,
	214, 1362,
	215, 1362,
	216, 1362,
	217, 1362,
	221, 1362,
	222, 1362,
	223, 1362,
	224, 1362,
	227, 1362,
	228, 1362,
	229, 1362,
	231, 1362,
	233, 1362,
	234, 1362,
	236, 1362,
	238, 1362,
	239, 1362,
	240, 1362,
	242, 1362,
	246, 1362,
	247, 1362,
	248, 1362,
	249, 1362,
	250, 1362,
	251, 1362,
	253, 1362,
	254, 1362,
	255, 1362,
	257, 1362,
	258, 1362,
	260, 1362,
	261, 1362,
	264, 1362,
	268, 1362,
	269, 1362,
	272, 1362,
	273, 1362,
	274, 1362,
	275, 1362,
	277, 1362,
	278, 1362,
	279, 1362,
	280, 1362,
	281, 1362,
	282, 1362,
	283, 1362,
	284, 1362,
	285, 1362,
	286, 1362,
	287, 1362,
	288, 1362,
	289, 1362,
	290, 1362,
	291, 1362,
	292, 1362,
	293, 1362,
	294, 1362,
	295, 1362,
	296, 1362,
	297, 1362,
	298, 1362,
	300, 1362,
	302, 1362,
	303, 1362,
	304, 1362,
	305, 1362,
	306, 1362,
	307, 1362,
	308, 1362,
	309, 1362,
	310, 1362,
	311, 1362,
	312, 1362,
	313, 1362,
	315, 1362,
	317, 1362,
	319, 1362,
	320, 1362,
	322, 1362,
	323, 1362,
	324, 1362,
	325, 1362,
	326, 1362,
	329, 1362,
	332, 1362,
	333, 1362,
	334, 1362,
	335, 1362,
	338, 1362,
	339, 1362,
	340, 1362,
	342, 1362,
	344, 1362,
	345, 1362,
	346, 1362,
	347, 1362,
	348, 1362,
	349, 1362,
	350, 1362,
	351, 1362,
	352, 1362,
	353, 1362,
	354, 1362,
	355, 1362,
	357, 1362,
	358, 1362,
	359, 1362,
	360, 1362,
	361, 1362,
	362, 1362,
	363, 1362,
	364, 1362,
	365, 1362,
	366, 1362,
	367, 1362,
	368, 1362,
	369, 1362,
	370, 1362,
	371, 1362,
	373, 1362,
	375, 1362,
	376, 1362,
	377, 1362,
	378, 1362,
	379, 1362,
	380, 1362,
	381, 1362,
	382, 1362,
	383, 1362,
	384, 1362,
	385, 1362,
	386, 1362,
	388, 1362,
	394, 1362,
	396, 1362,
	397, 1362,
	398, 1362,
	399, 1362,
	400, 1362,
	401, 1362,
	402, 1362,
	403, 1362,
	405, 1362,
	406, 1362,
	407, 1362,
	409, 1362,
	410, 1362,
	411, 1362,
	412, 1362,
	413, 1362,
	414, 1362,
	416, 1362,
	417, 1362,
	418, 1362,
	419, 1362,
	420, 1362,
	421, 1362,
	422, 1362,
	423, 1362,
	424, 1362,
	425, 1362,
	426, 1362,
	428, 1362,
	429, 1362,
	430, 1362,
	431, 1362,
	432, 1362,
	433, 1362,
	435, 1362,
	436, 1362,
	437, 1362,
	438, 1362,
	439, 1362,
	441, 1362,
	442, 1362,
	443, 1362,
	444, 1362,
	445, 1362,
	446, 1362,
	447, 1362,
	449, 1362,
	451, 1362,
	452, 1362,
	453, 1362,
	454, 1362,
	455, 1362,
	456, 1362,
	457, 1362,
	458, 1362,
	459, 1362,
	460, 1362,
	461, 1362,
	462, 1362,
	463, 1362,
	465, 1362,
	466, 1362,
	468, 1362,
	470, 1362,
	471, 1362,
	472, 1362,
	473, 1362,
	474, 1362,
	475, 1362,
	476, 1362,
	477, 1362,
	479, 1362,
	480, 1362,
	481, 1362,
	482, 1362,
	483, 1362,
	485, 1362,
	487, 1362,
	488, 1362,
	489, 1362,
	490, 1362,
	491, 1362,
	492, 1362,
	494, 1362,
	495, 1362,
	496, 1362,
	497, 1362,
	499, 1362,
	500, 1362,
	503, 1362,
	504, 1362,
	505, 1362,
	506, 1362,
	507, 1362,
	508, 1362,
	509, 1362,
	511, 1362,
	514, 1362,
	515, 1362,
	516, 1362,
	517, 1362,
	518, 1362,
	519, 1362,
	521, 1362,
	522, 1362,
	523, 1362,
	524, 1362,
	529, 1362,
	530, 1362,
	531, 1362,
	532, 1362,
	533, 1362,
	534, 1362,
	-2, 0,
	-1, 144,
	1, 1231,
	127, 1231,
	238, 1231,
	316, 1231,
	373, 1231,
	381, 1231,
	537, 1231,
	561, 1231,
	-2, 0,
	-1, 146,
	1, 1231,
	561, 1231,
	-2, 0,
	-1, 147,
	1, 1231,
	561, 1231,
	-2, 0,
	-1, 148,
	1, 1231,
	484, 1231,
	561, 1231,
	-2, 0,
	-1, 177,
	146, 1330,
	164, 1330,
	177, 1330,
	230, 1330,
	263, 1330,
	327, 1330,
	337, 1330,
	501, 1330,
	-2, 1305,
	-1, 215,
	4, 1369,
	5, 1369,
	6, 1369,
	7, 1369,
	8, 1369,
	9, 1369,
	10, 1369,
	21, 1369,
	22, 1369,
	23, 1369,
	24, 1369,
	25, 1369,
	26, 1369,
	27, 1369,
	29, 1369,
	30, 1369,
	36, 1369,
	37, 1369,
	41, 1369,
	42, 1369,
	43, 1369,
	44, 1369,
	45, 1369,
	46, 1369,
	47, 1369,
	48, 1369,
	49, 1369,
	50, 1369,
	52, 1369,
	53, 1369,
	54, 1369,
	55, 1369,
	57, 1369,
	58, 1369,
	59, 1369,
	60, 1369,
	61, 1369,
	62, 1369,
	63, 1369,
	64, 1369,
	65, 1369,
	66, 1369,
	67, 1369,
	68, 1369,
	69, 1369,
	70, 1369,
	72, 1369,
	73, 1369,
	74, 1369,
	76, 1369,
	78, 1369,
	79, 1369,
	80, 1369,
	81, 1369,
	82, 1369,
	83, 1369,
	84, 1369,
	87, 1369,
	88, 1369,
	89, 1369,
	90, 1369,
	91, 1369,
	93, 1369,
	95, 1369,
	96, 1369,
	97, 1369,
	98, 1369,
	99, 1369,
	100, 1369,
	102, 1369,
	103, 1369,
	104, 1369,
	105, 1369,
	106, 1369,
	107, 1369,
	108, 1369,
	109, 1369,
	110, 1369,
	111, 1369,
	112, 1369,
	113, 1369,
	114, 1369,
	115, 1369,
	116, 1369,
	117, 1369,
	118, 1369,
	119, 1369,
	120, 1369,
	121, 1369,
	122, 1369,
	123, 1369,
	124, 1369,
	125, 1369,
	126, 1369,
	128, 1369,
	129, 1369,
	131, 1369,
	132, 1369,
	133, 1369,
	136, 1369,
	137, 1369,
	138, 1369,
	140, 1369,
	141, 1369,
	143, 1369,
	144, 1369,
	145, 1369,
	147, 1369,
	148, 1369,
	149, 1369,
	150, 1369,
	151, 1369,
	152, 1369,
	153, 1369,
	154, 1369,
	155, 1369,
	156, 1369,
	157, 1369,
	158, 1369,
	159, 1369,
	160, 1369,
	161, 1369,
	162, 1369,
	163, 1369,
	169, 1369,
	170, 1369,
	171, 1369,
	172, 1369,
	176, 1369,
	178, 1369,
	181, 1369,
	182, 1369,
	183, 1369,
	184, 1369,
	185, 1369,
	186, 1369,
	187, 1369,
	188, 1369,
	189, 1369,
	190, 1369,
	191, 1369,
	192, 1369,
	193, 1369,
	195, 1369,
	196, 1369,
	198, 1369,
	199, 1369,
	201, 1369,
	202, 1369,
	203, 1369,
	204, 1369,
	205, 1369,
	206, 1369,
	207, 1369,
	208, 1369,
	209, 1369,
	210, 1369,
	211, 1369,
	212, 1369,
	214, 1369,
	215, 1369,
	216, 1369,
	217, 1369,
	221, 1369,
	222, 1369,
	223, 1369,
	224, 1369,
	226, 1369,
	227, 1369,
	228, 1369,
	229, 1369,
	231, 1369,
	233, 1369,
	234, 1369,
	235, 1369,
	236, 1369,
	237, 1369,
	238, 1369,
	239, 1369,
	240, 1369,
	241, 1369,
	242, 1369,
	246, 1369,
	247, 1369,
	248, 1369,
	249, 1369,
	250, 1369,
	251, 1369,
	253, 1369,
	254, 1369,
	255, 1369,
	257, 1369,
	258, 1369,
	259, 1369,
	260, 1369,
	261, 1369,
	262, 1369,
	264, 1369,
	268, 1369,
	269, 1369,
	270, 1369,
	271, 1369,
	272, 1369,
	273, 1369,
	274, 1369,
	275, 1369,
	277, 1369,
	278, 1369,
	279, 1369,
	280, 1369,
	281, 1369,
	282, 1369,
	283, 1369,
	284, 1369,
	285, 1369,
	286, 1369,
	287, 1369,
	288, 1369,
	289, 1369,
	290, 1369,
	291, 1369,
	292, 1369,
	293, 1369,
	294, 1369,
	295, 1369,
	296, 1369,
	297, 1369,
	298, 1369,
	300, 1369,
	301, 1369,
	302, 1369,
	303, 1369,
	304, 1369,
	305, 1369,
	306, 1369,
	307, 1369,
	308, 1369,
	309, 1369,
	310, 1369,
	311, 1369,
	312, 1369,
	313, 1369,
	314, 1369,
	315, 1369,
	316, 1369,
	317, 1369,
	318, 1369,
	319, 1369,
	320, 1369,
	321, 1369,
	322, 1369,
	323, 1369,
	324, 1369,
	325, 1369,
	326, 1369,
	329, 1369,
	333, 1369,
	334, 1369,
	335, 1369,
	338, 1369,
	339, 1369,
	340, 1369,
	341, 1369,
	342, 1369,
	343, 1369,
	344, 1369,
	345, 1369,
	346, 1369,
	347, 1369,
	348, 1369,
	349, 1369,
	350, 1369,
	351, 1369,
	352, 1369,
	353, 1369,
	354, 1369,
	355, 1369,
	357, 1369,
	358, 1369,
	359, 1369,
	360, 1369,
	361, 1369,
	362, 1369,
	363, 1369,
	364, 1369,
	365, 1369,
	366, 1369,
	367, 1369,
	368, 1369,
	369, 1369,
	370, 1369,
	371, 1369,
	373, 1369,
	375, 1369,
	376, 1369,
	377, 1369,
	378, 1369,
	379, 1369,
	380, 1369,
	381, 1369,
	382, 1369,
	383, 1369,
	384, 1369,
	385, 1369,
	386, 1369,
	388, 1369,
	394, 1369,
	396, 1369,
	397, 1369,
	398, 1369,
	399, 1369,
	400, 1369,
	401, 1369,
	402, 1369,
	403, 1369,
	405, 1369,
	406, 1369,
	407, 1369,
	408, 1369,
	409, 1369,
	410, 1369,
	411, 1369,
	412, 1369,
	413, 1369,
	414, 1369,
	416, 1369,
	417, 1369,
	418, 1369,
	419, 1369,
	420, 1369,
	421, 1369,
	422, 1369,
	423, 1369,
	424, 1369,
	425, 1369,
	426, 1369,
	428, 1369,
	429, 1369,
	430, 1369,
	431, 1369,
	432, 1369,
	433, 1369,
	434, 1369,
	435, 1369,
	436, 1369,
	437, 1369,
	438, 1369,
	439, 1369,
	440, 1369,
	441, 1369,
	442, 1369,
	443, 1369,
	444, 1369,
	445, 1369,
	446, 1369,
	447, 1369,
	449, 1369,
	451, 1369,
	452, 1369,
	453, 1369,
	454, 1369,
	455, 1369,
	456, 1369,
	457, 1369,
	458, 1369,
	459, 1369,
	460, 1369,
	461, 1369,
	462, 1369,
	463, 1369,
	465, 1369,
	466, 1369,
	467, 1369,
	468, 1369,
	470, 1369,
	471, 1369,
	472, 1369,
	473, 1369,
	474, 1369,
	475, 1369,
	476, 1369,
	477, 1369,
	479, 1369,
	480, 1369,
	481, 1369,
	482, 1369,
	483, 1369,
	485, 1369,
	487, 1369,
	488, 1369,
	489, 1369,
	490, 1369,
	491, 1369,
	492, 1369,
	493, 1369,
	494, 1369,
	495, 1369,
	496, 1369,
	497, 1369,
	499, 1369,
	500, 1369,
	502, 1369,
	503, 1369,
	504, 1369,
	505, 1369,
	506, 1369,
	507, 1369,
	508, 1369,
	509, 1369,
	510, 1369,
	511, 1369,
	514, 1369,
	515, 1369,
	516, 1369,
	517, 1369,
	518, 1369,
	519, 1369,
	521, 1369,
	522, 1369,
	523, 1369,
	524, 1369,
	529, 1369,
	530, 1369,
	531, 1369,
	532, 1369,
	533, 1369,
	534, 1369,
	535, 1369,
	542, 1369,
	549, 1369,
	550, 1369,
	551, 1369,
	558, 1369,
	562, 1369,
	-2, 0,
	-1, 673,
	180, 2109,
	484, 2109,
	541, 2109,
	560, 2109,
	-2, 0,
	-1, 674,
	180, 2207,
	484, 2207,
	541, 2207,
	560, 2207,
	-2, 0,
	-1, 675,
	180, 2096,
	484, 2096,
	541, 2096,
	560, 2096,
	-2, 0,
	-1, 677,
	180, 2331,
	484, 2331,
	541, 2331,
	560, 2331,
	-2, 0,
	-1, 679,
	180, 2365,
	484, 2365,
	541, 2365,
	560, 2365,
	-2, 0,
	-1, 686,
	180, 2233,
	484, 2233,
	541, 2233,
	560, 2233,
	-2, 628,
	-1, 718,
	560, 2046,
	563, 2046,
	-2, 876,
	-1, 719,
	560, 2048,
	563, 2048,
	-2, 877,
	-1, 720,
	560, 2047,
	563, 2047,
	-2, 878,
	-1, 721,
	563, 1980,
	-2, 879,
	-1, 744,
	177, 220,
	-2, 0,
	-1, 766,
	43, 2050,
	-2, 0,
	-1, 767,
	521, 1135,
	-2, 941,
	-1, 783,
	4, 1489,
	21, 1489,
	22, 1489,
	23, 1489,
	24, 1489,
	25, 1489,
	26, 1489,
	27, 1489,
	29, 1489,
	30, 1489,
	36, 1489,
	41, 1489,
	42, 1489,
	44, 1489,
	45, 1489,
	46, 1489,
	47, 1489,
	48, 1489,
	49, 1489,
	50, 1489,
	52, 1489,
	53, 1489,
	54, 1489,
	55, 1489,
	57, 1489,
	58, 1489,
	59, 1489,
	60, 1489,
	61, 1489,
	62, 1489,
	63, 1489,
	67, 1489,
	68, 1489,
	69, 1489,
	70, 1489,
	72, 1489,
	73, 1489,
	74, 1489,
	78, 1489,
	79, 1489,
	80, 1489,
	81, 1489,
	82, 1489,
	83, 1489,
	84, 1489,
	87, 1489,
	88, 1489,
	89, 1489,
	90, 1489,
	91, 1489,
	93, 1489,
	95, 1489,
	96, 1489,
	97, 1489,
	98, 1489,
	99, 1489,
	100, 1489,
	102, 1489,
	103, 1489,
	104, 1489,
	106, 1489,
	107, 1489,
	115, 1489,
	116, 1489,
	117, 1489,
	118, 1489,
	120, 1489,
	121, 1489,
	122, 1489,
	124, 1489,
	125, 1489,
	126, 1489,
	128, 1489,
	129, 1489,
	131, 1489,
	132, 1489,
	133, 1489,
	136, 1489,
	137, 1489,
	138, 1489,
	140, 1489,
	141, 1489,
	143, 1489,
	144, 1489,
	145, 1489,
	147, 1489,
	148, 1489,
	149, 1489,
	150, 1489,
	151, 1489,
	152, 1489,
	153, 1489,
	154, 1489,
	155, 1489,
	156, 1489,
	157, 1489,
	158, 1489,
	159, 1489,
	160, 1489,
	161, 1489,
	163, 1489,
	169, 1489,
	170, 1489,
	171, 1489,
	172, 1489,
	176, 1489,
	178, 1489,
	182, 1489,
	183, 1489,
	184, 1489,
	185, 1489,
	186, 1489,
	187, 1489,
	188, 1489,
	189, 1489,
	190, 1489,
	191, 1489,
	192, 1489,
	193, 1489,
	195, 1489,
	196, 1489,
	198, 1489,
	199, 1489,
	201, 1489,
	202, 1489,
	203, 1489,
	204, 1489,
	205, 1489,
	206, 1489,
	207, 1489,
	208, 1489,
	209, 1489,
	211, 1489,
	212, 1489,
	214, 1489,
	215, 1489,
	216, 1489,
	217, 1489,
	221, 1489,
	222, 1489,
	223, 1489,
	224, 1489,
	227, 1489,
	228, 1489,
	229, 1489,
	231, 1489,
	233, 1489,
	234, 1489,
	236, 1489,
	238, 1489,
	239, 1489,
	240, 1489,
	242, 1489,
	246, 1489,
	247, 1489,
	248, 1489,
	249, 1489,
	250, 1489,
	251, 1489,
	253, 1489,
	254, 1489,
	255, 1489,
	257, 1489,
	258, 1489,
	260, 1489,
	261, 1489,
	264, 1489,
	268, 1489,
	269, 1489,
	272, 1489,
	273, 1489,
	274, 1489,
	275, 1489,
	277, 1489,
	278, 1489,
	279, 1489,
	280, 1489,
	281, 1489,
	282, 1489,
	283, 1489,
	284, 1489,
	285, 1489,
	286, 1489,
	287, 1489,
	288, 1489,
	289, 1489,
	290, 1489,
	291, 1489,
	292, 1489,
	293, 1489,
	294, 1489,
	295, 1489,
	296, 1489,
	297, 1489,
	298, 1489,
	300, 1489,
	302, 1489,
	303, 1489,
	304, 1489,
	305, 1489,
	306, 1489,
	307, 1489,
	308, 1489,
	309, 1489,
	310, 1489,
	311, 1489,
	312, 1489,
	313, 1489,
	315, 1489,
	317, 1489,
	319, 1489,
	320, 1489,
	322, 1489,
	323, 1489,
	324, 1489,
	325, 1489,
	326, 1489,
	329, 1489,
	333, 1489,
	334, 1489,
	335, 1489,
	338, 1489,
	339, 1489,
	340, 1489,
	342, 1489,
	344, 1489,
	345, 1489,
	346, 1489,
	347, 1489,
	348, 1489,
	349, 1489,
	350, 1489,
	351, 1489,
	352, 1489,
	353, 1489,
	354, 1489,
	355, 1489,
	357, 1489,
	358, 1489,
	359, 1489,
	360, 1489,
	361, 1489,
	362, 1489,
	363, 1489,
	364, 1489,
	365, 1489,
	366, 1489,
	367, 1489,
	368, 1489,
	369, 1489,
	370, 1489,
	371, 1489,
	373, 1489,
	375, 1489,
	376, 1489,
	377, 1489,
	378, 1489,
	379, 1489,
	380, 1489,
	381, 1489,
	382, 1489,
	383, 1489,
	384, 1489,
	385, 1489,
	386, 1489,
	388, 1489,
	394, 1489,
	396, 1489,
	397, 1489,
	398, 1489,
	399, 1489,
	400, 1489,
	401, 1489,
	402, 1489,
	403, 1489,
	405, 1489,
	406, 1489,
	407, 1489,
	409, 1489,
	410, 1489,
	411, 1489,
	412, 1489,
	413, 1489,
	414, 1489,
	416, 1489,
	417, 1489,
	418, 1489,
	419, 1489,
	420, 1489,
	421, 1489,
	422, 1489,
	423, 1489,
	424, 1489,
	425, 1489,
	426, 1489,
	428, 1489,
	429, 1489,
	430, 1489,
	431, 1489,
	432, 1489,
	433, 1489,
	435, 1489,
	436, 1489,
	437, 1489,
	438, 1489,
	439, 1489,
	441, 1489,
	442, 1489,
	443, 1489,
	444, 1489,
	445, 1489,
	446, 1489,
	447, 1489,
	449, 1489,
	451, 1489,
	452, 1489,
	453, 1489,
	454, 1489,
	455, 1489,
	456, 1489,
	457, 1489,
	458, 1489,
	459, 1489,
	460, 1489,
	461, 1489,
	462, 1489,
	463, 1489,
	465, 1489,
	466, 1489,
	468, 1489,
	470, 1489,
	471, 1489,
	472, 1489,
	473, 1489,
	474, 1489,
	475, 1489,
	476, 1489,
	477, 1489,
	479, 1489,
	480, 1489,
	481, 1489,
	482, 1489,
	483, 1489,
	485, 1489,
	487, 1489,
	488, 1489,
	489, 1489,
	490, 1489,
	491, 1489,
	492, 1489,
	494, 1489,
	495, 1489,
	496, 1489,
	497, 1489,
	499, 1489,
	500, 1489,
	503, 1489,
	504, 1489,
	505, 1489,
	506, 1489,
	507, 1489,
	508, 1489,
	509, 1489,
	511, 1489,
	514, 1489,
	515, 1489,
	516, 1489,
	517, 1489,
	518, 1489,
	519, 1489,
	521, 1489,
	522, 1489,
	523, 1489,
	524, 1489,
	529, 1489,
	530, 1489,
	531, 1489,
	532, 1489,
	533, 1489,
	534, 1489,
	-2, 0,
	-1, 808,
	4, 1156,
	21, 1156,
	22, 1156,
	23, 1156,
	24, 1156,
	25, 1156,
	26, 1156,
	27, 1156,
	29, 1156,
	30, 1156,
	36, 1156,
	41, 1156,
	42, 1156,
	44, 1156,
	45, 1156,
	46, 1156,
	47, 1156,
	48, 1156,
	49, 1156,
	50, 1156,
	52, 1156,
	53, 1156,
	54, 1156,
	55, 1156,
	57, 1156,
	58, 1156,
	59, 1156,
	60, 1156,
	61, 1156,
	62, 1156,
	63, 1156,
	67, 1156,
	68, 1156,
	69, 1156,
	70, 1156,
	72, 1156,
	73, 1156,
	74, 1156,
	78, 1156,
	79, 1156,
	80, 1156,
	81, 1156,
	82, 1156,
	83, 1156,
	84, 1156,
	87, 1156,
	88, 1156,
	89, 1156,
	90, 1156,
	91, 1156,
	93, 1156,
	95, 1156,
	96, 1156,
	97, 1156,
	98, 1156,
	99, 1156,
	100, 1156,
	102, 1156,
	103, 1156,
	104, 1156,
	106, 1156,
	107, 1156,
	115, 1156,
	116, 1156,
	117, 1156,
	118, 1156,
	120, 1156,
	121, 1156,
	122, 1156,
	124, 1156,
	125, 1156,
	126, 1156,
	128, 1156,
	129, 1156,
	131, 1156,
	132, 1156,
	133, 1156,
	136, 1156,
	137, 1156,
	138, 1156,
	140, 1156,
	141, 1156,
	143, 1156,
	144, 1156,
	145, 1156,
	147, 1156,
	148, 1156,
	149, 1156,
	150, 1156,
	151, 1156,
	152, 1156,
	153, 1156,
	154, 1156,
	155, 1156,
	156, 1156,
	157, 1156,
	158, 1156,
	159, 1156,
	160, 1156,
	161, 1156,
	163, 1156,
	169, 1156,
	170, 1156,
	171, 1156,
	172, 1156,
	176, 1156,
	178, 1156,
	182, 1156,
	183, 1156,
	184, 1156,
	185, 1156,
	186, 1156,
	187, 1156,
	188, 1156,
	189, 1156,
	190, 1156,
	191, 1156,
	192, 1156,
	193, 1156,
	195, 1156,
	196, 1156,
	198, 1156,
	199, 1156,
	201, 1156,
	202, 1156,
	203, 1156,
	204, 1156,
	205, 1156,
	206, 1156,
	207, 1156,
	208, 1156,
	209, 1156,
	211, 1156,
	212, 1156,
	214, 1156,
	215, 1156,
	216, 1156,
	217, 1156,
	221, 1156,
	222, 1156,
	223, 1156,
	224, 1156,
	227, 1156,
	228, 1156,
	229, 1156,
	231, 1156,
	233, 1156,
	234, 1156,
	236, 1156,
	238, 1156,
	239, 1156,
	240, 1156,
	242, 1156,
	246, 1156,
	247, 1156,
	248, 1156,
	249, 1156,
	250, 1156,
	251, 1156,
	253, 1156,
	254, 1156,
	255, 1156,
	257, 1156,
	258, 1156,
	260, 1156,
	261, 1156,
	264, 1156,
	268, 1156,
	269, 1156,
	272, 1156,
	273, 1156,
	274, 1156,
	275, 1156,
	277, 1156,
	278, 1156,
	279, 1156,
	280, 1156,
	281, 1156,
	282, 1156,
	283, 1156,
	284, 1156,
	285, 1156,
	286, 1156,
	287, 1156,
	288, 1156,
	289, 1156,
	290, 1156,
	291, 1156,
	292, 1156,
	293, 1156,
	294, 1156,
	295, 1156,
	296, 1156,
	297, 1156,
	298, 1156,
	300, 1156,
	302, 1156,
	303, 1156,
	304, 1156,
	305, 1156,
	306, 1156,
	307, 1156,
	308, 1156,
	309, 1156,
	310, 1156,
	311, 1156,
	312, 1156,
	313, 1156,
	315, 1156,
	317, 1156,
	319, 1156,
	320, 1156,
	322, 1156,
	323, 1156,
	324, 1156,
	325, 1156,
	326, 1156,
	329, 1156,
	333, 1156,
	334, 1156,
	335, 1156,
	338, 1156,
	339, 1156,
	340, 1156,
	342, 1156,
	344, 1156,
	345, 1156,
	346, 1156,
	347, 1156,
	348, 1156,
	349, 1156,
	350, 1156,
	351, 1156,
	352, 1156,
	353, 1156,
	354, 1156,
	355, 1156,
	357, 1156,
	358, 1156,
	359, 1156,
	360, 1156,
	361, 1156,
	362, 1156,
	363, 1156,
	364, 1156,
	365, 1156,
	366, 1156,
	367, 1156,
	368, 1156,
	369, 1156,
	370, 1156,
	371, 1156,
	373, 1156,
	375, 1156,
	376, 1156,
	377, 1156,
	378, 1156,
	379, 1156,
	380, 1156,
	381, 1156,
	382, 1156,
	383, 1156,
	384, 1156,
	385, 1156,
	386, 1156,
	388, 1156,
	394, 1156,
	396, 1156,
	397, 1156,
	398, 1156,
	399, 1156,
	400, 1156,
	401, 1156,
	402, 1156,
	403, 1156,
	405, 1156,
	406, 1156,
	407, 1156,
	409, 1156,
	410, 1156,
	411, 1156,
	412, 1156,
	413, 1156,
	414, 1156,
	416, 1156,
	417, 1156,
	418, 1156,
	419, 1156,
	420, 1156,
	421, 1156,
	422, 1156,
	423, 1156,
	424, 1156,
	425, 1156,
	426, 1156,
	428, 1156,
	429, 1156,
	430, 1156,
	431, 1156,
	432, 1156,
	433, 1156,
	435, 1156,
	436, 1156,
	437, 1156,
	438, 1156,
	439, 1156,
	441, 1156,
	442, 1156,
	443, 1156,
	444, 1156,
	445, 1156,
	446, 1156,
	447, 1156,
	449, 1156,
	451, 1156,
	452, 1156,
	453, 1156,
	454, 1156,
	455, 1156,
	456, 1156,
	457, 1156,
	458, 1156,
	459, 1156,
	460, 1156,
	461, 1156,
	462, 1156,
	463, 1156,
	465, 1156,
	466, 1156,
	468, 1156,
	470, 1156,
	471, 1156,
	472, 1156,
	473, 1156,
	474, 1156,
	475, 1156,
	476, 1156,
	477, 1156,
	479, 1156,
	480, 1156,
	481, 1156,
	482, 1156,
	483, 1156,
	485, 1156,
	487, 1156,
	488, 1156,
	489, 1156,
	490, 1156,
	491, 1156,
	492, 1156,
	494, 1156,
	495, 1156,
	496, 1156,
	497, 1156,
	499, 1156,
	500, 1156,
	503, 1156,
	504, 1156,
	505, 1156,
	506, 1156,
	507, 1156,
	508, 1156,
	509, 1156,
	511, 1156,
	514, 1156,
	515, 1156,
	516, 1156,
	517, 1156,
	518, 1156,
	519, 1156,
	521, 1156,
	522, 1156,
	523, 1156,
	524, 1156,
	529, 1156,
	530, 1156,
	531, 1156,
	532, 1156,
	533, 1156,
	534, 1156,
	-2, 0,
	-1, 889,
	377, 788,
	433, 788,
	489, 788,
	-2, 0,
	-1, 890,
	377, 787,
	433, 787,
	489, 787,
	-2, 729,
	-1, 894,
	1, 832,
	557, 832,
	559, 832,
	561, 832,
	-2, 0,
	-1, 895,
	1, 764,
	557, 764,
	559, 764,
	561, 764,
	-2, 0,
	-1, 896,
	1, 766,
	557, 766,
	559, 766,
	561, 766,
	-2, 0,
	-1, 897,
	1, 875,
	177, 875,
	557, 875,
	559, 875,
	561, 875,
	-2, 0,
	-1, 905,
	1, 791,
	557, 791,
	559, 791,
	561, 791,
	-2, 0,
	-1, 911,
	1, 832,
	557, 832,
	559, 832,
	561, 832,
	-2, 0,
	-1, 912,
	1, 834,
	557, 834,
	559, 834,
	561, 834,
	-2, 0,
	-1, 913,
	1, 837,
	557, 837,
	559, 837,
	561, 837,
	-2, 0,
	-1, 919,
	1, 854,
	557, 854,
	559, 854,
	561, 854,
	-2, 0,
	-1, 920,
	1, 856,
	557, 856,
	559, 856,
	561, 856,
	-2, 0,
	-1, 969,
	164, 1371,
	177, 1371,
	263, 1371,
	327, 1371,
	-2, 1309,
	-1, 984,
	164, 1370,
	177, 1370,
	263, 1370,
	327, 1370,
	-2, 1306,
	-1, 1010,
	560, 2045,
	-2, 636,
	-1, 1038,
	5, 2037,
	558, 2035,
	-2, 2026,
	-1, 1046,
	5, 2058,
	558, 2055,
	-2, 2046,
	-1, 1047,
	5, 2059,
	558, 2056,
	-2, 2047,
	-1, 1055,
	560, 2043,
	-2, 2025,
	-1, 1056,
	558, 2447,
	-2, 2044,
	-1, 1079,
	558, 2446,
	-2, 2060,
	-1, 1080,
	5, 1564,
	-2, 2417,
	-1, 1081,
	5, 1565,
	-2, 2418,
	-1, 1082,
	5, 1566,
	-2, 2432,
	-1, 1083,
	5, 1567,
	-2, 2396,
	-1, 1084,
	5, 1568,
	-2, 2430,
	-1, 1085,
	5, 1576,
	-2, 2409,
	-1, 1086,
	5, 1563,
	-2, 2405,
	-1, 1087,
	5, 1563,
	-2, 2404,
	-1, 1088,
	5, 1563,
	-2, 2423,
	-1, 1089,
	5, 1574,
	-2, 2398,
	-1, 1090,
	5, 1579,
	-2, 2397,
	-1, 1091,
	5, 1581,
	-2, 2442,
	-1, 1094,
	5, 1603,
	-2, 2435,
	-1, 1095,
	5, 1595,
	-2, 2436,
	-1, 1096,
	5, 1603,
	-2, 2437,
	-1, 1097,
	5, 1599,
	-2, 2438,
	-1, 1098,
	5, 1549,
	-2, 2410,
	-1, 1099,
	5, 1550,
	-2, 2411,
	-1, 1100,
	5, 1551,
	-2, 2399,
	-1, 1128,
	5, 1586,
	-2, 2443,
	-1, 1129,
	5, 1587,
	-2, 2433,
	-1, 1130,
	5, 1588,
	522, 1588,
	-2, 2400,
	-1, 1131,
	5, 1589,
	522, 1589,
	-2, 2401,
	-1, 1168,
	558, 2055,
	-2, 2046,
	-1, 1169,
	558, 2056,
	-2, 2047,
	-1, 1200,
	180, 2365,
	484, 2365,
	541, 2365,
	560, 2365,
	-2, 0,
	-1, 1203,
	1, 614,
	561, 614,
	-2, 1239,
	-1, 1332,
	396, 2021,
	435, 2021,
	551, 2021,
	-2, 2018,
	-1, 1344,
	562, 2021,
	-2, 2022,
	-1, 1351,
	1, 1132,
	557, 1132,
	559, 1132,
	561, 1132,
	-2, 1358,
	-1, 1407,
	384, 940,
	521, 940,
	-2, 347,
	-1, 1426,
	43, 2049,
	-2, 2019,
	-1, 1431,
	1, 1132,
	557, 1132,
	559, 1132,
	561, 1132,
	-2, 1358,
	-1, 1438,
	4, 1156,
	21, 1156,
	22, 1156,
	23, 1156,
	24, 1156,
	25, 1156,
	26, 1156,
	27, 1156,
	29, 1156,
	30, 1156,
	36, 1156,
	41, 1156,
	42, 1156,
	44, 1156,
	45, 1156,
	46, 1156,
	47, 1156,
	48, 1156,
	49, 1156,
	50, 1156,
	52, 1156,
	53, 1156,
	54, 1156,
	55, 1156,
	57, 1156,
	58, 1156,
	59, 1156,
	60, 1156,
	61, 1156,
	62, 1156,
	63, 1156,
	67, 1156,
	68, 1156,
	69, 1156,
	70, 1156,
	72, 1156,
	73, 1156,
	74, 1156,
	78, 1156,
	79, 1156,
	80, 1156,
	81, 1156,
	82, 1156,
	83, 1156,
	84, 1156,
	87, 1156,
	88, 1156,
	89, 1156,
	90, 1156,
	91, 1156,
	93, 1156,
	95, 1156,
	96, 1156,
	97, 1156,
	98, 1156,
	99, 1156,
	100, 1156,
	102, 1156,
	103, 1156,
	104, 1156,
	106, 1156,
	107, 1156,
	115, 1156,
	116, 1156,
	117, 1156,
	118, 1156,
	120, 1156,
	121, 1156,
	122, 1156,
	124, 1156,
	125, 1156,
	126, 1156,
	128, 1156,
	129, 1156,
	131, 1156,
	132, 1156,
	133, 1156,
	136, 1156,
	137, 1156,
	138, 1156,
	140, 1156,
	141, 1156,
	143, 1156,
	144, 1156,
	145, 1156,
	147, 1156,
	148, 1156,
	149, 1156,
	150, 1156,
	151, 1156,
	152, 1156,
	153, 1156,
	154, 1156,
	155, 1156,
	156, 1156,
	157, 1156,
	158, 1156,
	159, 1156,
	160, 1156,
	161, 1156,
	169, 1156,
	170, 1156,
	171, 1156,
	172, 1156,
	176, 1156,
	178, 1156,
	182, 1156,
	183, 1156,
	184, 1156,
	185, 1156,
	186, 1156,
	187, 1156,
	188, 1156,
	189, 1156,
	190, 1156,
	191, 1156,
	192, 1156,
	193, 1156,
	195, 1156,
	196, 1156,
	198, 1156,
	199, 1156,
	201, 1156,
	202, 1156,
	203, 1156,
	204, 1156,
	205, 1156,
	206, 1156,
	207, 1156,
	208, 1156,
	209, 1156,
	211, 1156,
	212, 1156,
	214, 1156,
	215, 1156,
	216, 1156,
	217, 1156,
	222, 1156,
	223, 1156,
	224, 1156,
	227, 1156,
	228, 1156,
	229, 1156,
	231, 1156,
	233, 1156,
	234, 1156,
	236, 1156,
	238, 1156,
	239, 1156,
	240, 1156,
	242, 1156,
	246, 1156,
	247, 1156,
	248, 1156,
	249, 1156,
	250, 1156,
	251, 1156,
	253, 1156,
	254, 1156,
	255, 1156,
	257, 1156,
	258, 1156,
	260, 1156,
	261, 1156,
	264, 1156,
	268, 1156,
	269, 1156,
	272, 1156,
	273, 1156,
	274, 1156,
	275, 1156,
	277, 1156,
	278, 1156,
	279, 1156,
	280, 1156,
	281, 1156,
	282, 1156,
	283, 1156,
	284, 1156,
	285, 1156,
	286, 1156,
	287, 1156,
	288, 1156,
	289, 1156,
	290, 1156,
	291, 1156,
	292, 1156,
	293, 1156,
	294, 1156,
	295, 1156,
	296, 1156,
	297, 1156,
	298, 1156,
	300, 1156,
	302, 1156,
	303, 1156,
	304, 1156,
	305, 1156,
	306, 1156,
	307, 1156,
	308, 1156,
	309, 1156,
	310, 1156,
	311, 1156,
	312, 1156,
	313, 1156,
	315, 1156,
	319, 1156,
	320, 1156,
	322, 1156,
	323, 1156,
	324, 1156,
	325, 1156,
	326, 1156,
	329, 1156,
	331, 1156,
	333, 1156,
	334, 1156,
	335, 1156,
	338, 1156,
	339, 1156,
	340, 1156,
	342, 1156,
	344, 1156,
	345, 1156,
	346, 1156,
	347, 1156,
	348, 1156,
	349, 1156,
	350, 1156,
	351, 1156,
	352, 1156,
	353, 1156,
	354, 1156,
	355, 1156,
	357, 1156,
	358, 1156,
	359, 1156,
	360, 1156,
	361, 1156,
	362, 1156,
	363, 1156,
	364, 1156,
	365, 1156,
	366, 1156,
	367, 1156,
	368, 1156,
	369, 1156,
	370, 1156,
	371, 1156,
	373, 1156,
	375, 1156,
	376, 1156,
	377, 1156,
	378, 1156,
	379, 1156,
	380, 1156,
	381, 1156,
	382, 1156,
	383, 1156,
	384, 1156,
	385, 1156,
	386, 1156,
	388, 1156,
	394, 1156,
	396, 1156,
	397, 1156,
	398, 1156,
	399, 1156,
	400, 1156,
	401, 1156,
	402, 1156,
	403, 1156,
	405, 1156,
	406, 1156,
	407, 1156,
	409, 1156,
	410, 1156,
	411, 1156,
	412, 1156,
	413, 1156,
	414, 1156,
	416, 1156,
	417, 1156,
	418, 1156,
	419, 1156,
	420, 1156,
	421, 1156,
	422, 1156,
	423, 1156,
	424, 1156,
	425, 1156,
	426, 1156,
	428, 1156,
	429, 1156,
	430, 1156,
	431, 1156,
	432, 1156,
	433, 1156,
	435, 1156,
	436, 1156,
	437, 1156,
	438, 1156,
	439, 1156,
	441, 1156,
	442, 1156,
	443, 1156,
	444, 1156,
	445, 1156,
	446, 1156,
	447, 1156,
	449, 1156,
	451, 1156,
	452, 1156,
	453, 1156,
	454, 1156,
	455, 1156,
	456, 1156,
	457, 1156,
	458, 1156,
	459, 1156,
	460, 1156,
	461, 1156,
	462, 1156,
	463, 1156,
	465, 1156,
	466, 1156,
	468, 1156,
	470, 1156,
	471, 1156,
	472, 1156,
	473, 1156,
	474, 1156,
	475, 1156,
	476, 1156,
	477, 1156,
	479, 1156,
	480, 1156,
	481, 1156,
	482, 1156,
	483, 1156,
	485, 1156,
	487, 1156,
	488, 1156,
	489, 1156,
	490, 1156,
	491, 1156,
	492, 1156,
	494, 1156,
	495, 1156,
	496, 1156,
	497, 1156,
	499, 1156,
	500, 1156,
	503, 1156,
	504, 1156,
	505, 1156,
	506, 1156,
	507, 1156,
	508, 1156,
	509, 1156,
	511, 1156,
	514, 1156,
	515, 1156,
	516, 1156,
	517, 1156,
	518, 1156,
	519, 1156,
	521, 1156,
	522, 1156,
	523, 1156,
	524, 1156,
	529, 1156,
	530, 1156,
	531, 1156,
	532, 1156,
	533, 1156,
	534, 1156,
	-2, 0,
	-1, 1513,
	1, 487,
	557, 487,
	559, 487,
	561, 487,
	-2, 1329,
	-1, 1516,
	4, 2441,
	11, 2441,
	12, 2441,
	14, 2441,
	15, 2441,
	16, 2441,
	17, 2441,
	18, 2441,
	19, 2441,
	21, 2441,
	22, 2441,
	23, 2441,
	24, 2441,
	25, 2441,
	26, 2441,
	27, 2441,
	29, 2441,
	30, 2441,
	33, 2441,
	34, 2441,
	36, 2441,
	38, 2441,
	41, 2441,
	42, 2441,
	44, 2441,
	45, 2441,
	46, 2441,
	47, 2441,
	48, 2441,
	49, 2441,
	50, 2441,
	52, 2441,
	53, 2441,
	54, 2441,
	55, 2441,
	57, 2441,
	58, 2441,
	59, 2441,
	60, 2441,
	61, 2441,
	62, 2441,
	63, 2441,
	67, 2441,
	68, 2441,
	69, 2441,
	70, 2441,
	72, 2441,
	73, 2441,
	74, 2441,
	75, 2441,
	78, 2441,
	79, 2441,
	80, 2441,
	81, 2441,
	82, 2441,
	83, 2441,
	84, 2441,
	85, 2441,
	87, 2441,
	88, 2441,
	89, 2441,
	90, 2441,
	91, 2441,
	93, 2441,
	94, 2441,
	95, 2441,
	96, 2441,
	97, 2441,
	98, 2441,
	99, 2441,
	100, 2441,
	102, 2441,
	103, 2441,
	104, 2441,
	105, 2441,
	106, 2441,
	107, 2441,
	115, 2441,
	116, 2441,
	117, 2441,
	118, 2441,
	120, 2441,
	121, 2441,
	122, 2441,
	124, 2441,
	125, 2441,
	126, 2441,
	128, 2441,
	129, 2441,
	131, 2441,
	132, 2441,
	133, 2441,
	136, 2441,
	137, 2441,
	138, 2441,
	140, 2441,
	141, 2441,
	143, 2441,
	144, 2441,
	145, 2441,
	147, 2441,
	148, 2441,
	149, 2441,
	150, 2441,
	151, 2441,
	152, 2441,
	153, 2441,
	154, 2441,
	155, 2441,
	156, 2441,
	157, 2441,
	158, 2441,
	159, 2441,
	160, 2441,
	161, 2441,
	165, 2441,
	166, 2441,
	167, 2441,
	168, 2441,
	169, 2441,
	170, 2441,
	171, 2441,
	172, 2441,
	175, 2441,
	176, 2441,
	178, 2441,
	181, 2441,
	182, 2441,
	183, 2441,
	184, 2441,
	185, 2441,
	186, 2441,
	187, 2441,
	188, 2441,
	189, 2441,
	190, 2441,
	191, 2441,
	192, 2441,
	193, 2441,
	195, 2441,
	196, 2441,
	198, 2441,
	199, 2441,
	201, 2441,
	202, 2441,
	203, 2441,
	204, 2441,
	205, 2441,
	206, 2441,
	207, 2441,
	208, 2441,
	209, 2441,
	210, 2441,
	211, 2441,
	212, 2441,
	213, 2441,
	214, 2441,
	215, 2441,
	216, 2441,
	217, 2441,
	219, 2441,
	220, 2441,
	222, 2441,
	223, 2441,
	224, 2441,
	226, 2441,
	227, 2441,
	228, 2441,
	229, 2441,
	231, 2441,
	233, 2441,
	234, 2441,
	235, 2441,
	236, 2441,
	237, 2441,
	238, 2441,
	239, 2441,
	240, 2441,
	241, 2441,
	242, 2441,
	244, 2441,
	245, 2441,
	246, 2441,
	247, 2441,
	248, 2441,
	249, 2441,
	250, 2441,
	251, 2441,
	253, 2441,
	254, 2441,
	255, 2441,
	257, 2441,
	258, 2441,
	259, 2441,
	260, 2441,
	261, 2441,
	262, 2441,
	264, 2441,
	268, 2441,
	269, 2441,
	272, 2441,
	273, 2441,
	274, 2441,
	275, 2441,
	276, 2441,
	277, 2441,
	278, 2441,
	279, 2441,
	280, 2441,
	281, 2441,
	282, 2441,
	283, 2441,
	284, 2441,
	285, 2441,
	286, 2441,
	287, 2441,
	288, 2441,
	289, 2441,
	290, 2441,
	291, 2441,
	292, 2441,
	293, 2441,
	294, 2441,
	295, 2441,
	296, 2441,
	297, 2441,
	298, 2441,
	300, 2441,
	301, 2441,
	302, 2441,
	303, 2441,
	304, 2441,
	305, 2441,
	306, 2441,
	307, 2441,
	308, 2441,
	309, 2441,
	310, 2441,
	311, 2441,
	312, 2441,
	313, 2441,
	315, 2441,
	318, 2441,
	319, 2441,
	320, 2441,
	322, 2441,
	323, 2441,
	324, 2441,
	325, 2441,
	326, 2441,
	329, 2441,
	333, 2441,
	334, 2441,
	335, 2441,
	336, 2441,
	338, 2441,
	339, 2441,
	340, 2441,
	342, 2441,
	344, 2441,
	345, 2441,
	346, 2441,
	347, 2441,
	348, 2441,
	349, 2441,
	350, 2441,
	351, 2441,
	352, 2441,
	353, 2441,
	354, 2441,
	355, 2441,
	357, 2441,
	358, 2441,
	359, 2441,
	360, 2441,
	361, 2441,
	362, 2441,
	363, 2441,
	364, 2441,
	365, 2441,
	366, 2441,
	367, 2441,
	368, 2441,
	369, 2441,
	370, 2441,
	371, 2441,
	373, 2441,
	375, 2441,
	376, 2441,
	377, 2441,
	378, 2441,
	379, 2441,
	380, 2441,
	381, 2441,
	382, 2441,
	383, 2441,
	384, 2441,
	385, 2441,
	386, 2441,
	388, 2441,
	394, 2441,
	395, 2441,
	396, 2441,
	397, 2441,
	398, 2441,
	399, 2441,
	400, 2441,
	401, 2441,
	402, 2441,
	403, 2441,
	405, 2441,
	406, 2441,
	407, 2441,
	408, 2441,
	409, 2441,
	410, 2441,
	411, 2441,
	412, 2441,
	413, 2441,
	414, 2441,
	415, 2441,
	416, 2441,
	417, 2441,
	418, 2441,
	419, 2441,
	420, 2441,
	421, 2441,
	422, 2441,
	423, 2441,
	424, 2441,
	425, 2441,
	426, 2441,
	428, 2441,
	429, 2441,
	430, 2441,
	431, 2441,
	432, 2441,
	433, 2441,
	435, 2441,
	436, 2441,
	437, 2441,
	438, 2441,
	439, 2441,
	440, 2441,
	441, 2441,
	442, 2441,
	443, 2441,
	444, 2441,
	445, 2441,
	446, 2441,
	447, 2441,
	449, 2441,
	451, 2441,
	452, 2441,
	453, 2441,
	454, 2441,
	455, 2441,
	456, 2441,
	457, 2441,
	458, 2441,
	459, 2441,
	460, 2441,
	461, 2441,
	462, 2441,
	463, 2441,
	465, 2441,
	466, 2441,
	468, 2441,
	470, 2441,
	471, 2441,
	472, 2441,
	473, 2441,
	474, 2441,
	475, 2441,
	476, 2441,
	477, 2441,
	479, 2441,
	480, 2441,
	481, 2441,
	482, 2441,
	483, 2441,
	485, 2441,
	487, 2441,
	488, 2441,
	489, 2441,
	490, 2441,
	491, 2441,
	492, 2441,
	494, 2441,
	495, 2441,
	496, 2441,
	497, 2441,
	499, 2441,
	500, 2441,
	503, 2441,
	504, 2441,
	505, 2441,
	506, 2441,
	507, 2441,
	508, 2441,
	509, 2441,
	511, 2441,
	514, 2441,
	515, 2441,
	516, 2441,
	517, 2441,
	518, 2441,
	519, 2441,
	521, 2441,
	522, 2441,
	523, 2441,
	524, 2441,
	529, 2441,
	530, 2441,
	531, 2441,
	532, 2441,
	533, 2441,
	534, 2441,
	535, 2441,
	536, 2441,
	539, 2441,
	540, 2441,
	541, 2441,
	542, 2441,
	543, 2441,
	544, 2441,
	546, 2441,
	547, 2441,
	548, 2441,
	549, 2441,
	550, 2441,
	551, 2441,
	552, 2441,
	553, 2441,
	554, 2441,
	556, 2441,
	559, 2441,
	560, 2441,
	562, 2441,
	563, 2441,
	-2, 0,
	-1, 1521,
	180, 2331,
	484, 2331,
	541, 2331,
	560, 2331,
	-2, 0,
	-1, 1570,
	377, 788,
	433, 788,
	489, 788,
	-2, 0,
	-1, 1596,
	1, 783,
	557, 783,
	559, 783,
	561, 783,
	-2, 0,
	-1, 1597,
	1, 819,
	557, 819,
	559, 819,
	561, 819,
	-2, 0,
	-1, 1598,
	1, 827,
	557, 827,
	559, 827,
	561, 827,
	-2, 0,
	-1, 1599,
	1, 790,
	557, 790,
	559, 790,
	561, 790,
	-2, 0,
	-1, 1601,
	1, 794,
	557, 794,
	559, 794,
	561, 794,
	-2, 0,
	-1, 1607,
	1, 801,
	557, 801,
	559, 801,
	561, 801,
	-2, 0,
	-1, 1635,
	1, 2387,
	557, 2387,
	559, 2387,
	560, 2387,
	561, 2387,
	-2, 852,
	-1, 1636,
	1, 2328,
	557, 2328,
	559, 2328,
	560, 2328,
	561, 2328,
	-2, 853,
	-1, 1651,
	1, 1234,
	561, 1234,
	-2, 1239,
	-1, 1654,
	164, 1370,
	177, 1370,
	263, 1370,
	327, 1370,
	-2, 1310,
	-1, 1748,
	146, 1331,
	164, 1331,
	177, 1331,
	230, 1331,
	263, 1331,
	327, 1331,
	337, 1331,
	501, 1331,
	-2, 1764,
	-1, 1808,
	559, 1914,
	-2, 0,
	-1, 1843,
	146, 1331,
	164, 1331,
	177, 1331,
	230, 1331,
	263, 1331,
	327, 1331,
	337, 1331,
	501, 1331,
	-2, 1451,
	-1, 1892,
	558, 1591,
	-2, 1579,
	-1, 1935,
	1, 616,
	561, 616,
	-2, 1239,
	-1, 2047,
	213, 221,
	-2, 2054,
	-1, 2048,
	213, 222,
	-2, 264,
	-1, 2177,
	1, 785,
	557, 785,
	559, 785,
	561, 785,
	-2, 0,
	-1, 2178,
	1, 821,
	557, 821,
	559, 821,
	561, 821,
	-2, 0,
	-1, 2179,
	1, 829,
	557, 829,
	559, 829,
	561, 829,
	-2, 0,
	-1, 2211,
	1, 803,
	557, 803,
	559, 803,
	561, 803,
	-2, 0,
	-1, 2257,
	413, 1397,
	414, 1397,
	-2, 1624,
	-1, 2288,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1644,
	-1, 2289,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1645,
	-1, 2290,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1646,
	-1, 2291,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1647,
	-1, 2292,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1648,
	-1, 2293,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1649,
	-1, 2294,
	94, 0,
	244, 0,
	245, 0,
	543, 0,
	544, 0,
	-2, 1650,
	-1, 2295,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1651,
	-1, 2307,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1663,
	-1, 2308,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1664,
	-1, 2309,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1665,
	-1, 2312,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1670,
	-1, 2318,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1674,
	-1, 2320,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1682,
	-1, 2321,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1683,
	-1, 2322,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1684,
	-1, 2323,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1685,
	-1, 2459,
	5, 2058,
	180, 1925,
	558, 2055,
	-2, 2046,
	-1, 2460,
	180, 1926,
	-2, 2392,
	-1, 2461,
	180, 1927,
	-2, 2232,
	-1, 2462,
	180, 1928,
	-2, 2125,
	-1, 2463,
	180, 1929,
	-2, 2175,
	-1, 2464,
	180, 1930,
	-2, 2217,
	-1, 2465,
	180, 1931,
	-2, 2326,
	-1, 2466,
	180, 1932,
	-2, 1747,
	-1, 2535,
	1, 1452,
	2, 1452,
	105, 1452,
	146, 1452,
	164, 1452,
	177, 1452,
	181, 1452,
	197, 1452,
	200, 1452,
	226, 1452,
	230, 1452,
	241, 1452,
	259, 1452,
	263, 1452,
	301, 1452,
	327, 1452,
	331, 1452,
	337, 1452,
	404, 1452,
	408, 1452,
	501, 1452,
	512, 1452,
	526, 1452,
	527, 1452,
	528, 1452,
	537, 1452,
	557, 1452,
	559, 1452,
	561, 1452,
	563, 1452,
	-2, 1451,
	-1, 2548,
	558, 2027,
	-2, 2041,
	-1, 2550,
	1, 280,
	-2, 1358,
	-1, 2575,
	558, 1590,
	-2, 1580,
	-1, 2714,
	1, 1132,
	557, 1132,
	559, 1132,
	561, 1132,
	-2, 1358,
	-1, 2890,
	332, 1400,
	-2, 2431,
	-1, 2891,
	332, 1401,
	-2, 2312,
	-1, 2895,
	413, 1991,
	414, 1991,
	-2, 1745,
	-1, 2896,
	413, 1995,
	414, 1995,
	-2, 1746,
	-1, 2897,
	413, 1992,
	414, 1992,
	-2, 1745,
	-1, 2898,
	413, 1996,
	414, 1996,
	-2, 1746,
	-1, 2911,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1672,
	-1, 2912,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1676,
	-1, 2918,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1678,
	-1, 3148,
	1, 613,
	557, 613,
	559, 613,
	561, 613,
	-2, 1239,
	-1, 3280,
	1, 1132,
	557, 1132,
	559, 1132,
	561, 1132,
	-2, 1358,
	-1, 3390,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1680,
	-1, 3397,
	235, 0,
	237, 0,
	318, 0,
	-2, 1699,
	-1, 3464,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1728,
	-1, 3465,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1729,
	-1, 3466,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1730,
	-1, 3470,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1734,
	-1, 3471,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1735,
	-1, 3472,
	14, 0,
	15, 0,
	16, 0,
	539, 0,
	540, 0,
	541, 0,
	-2, 1736,
	-1, 3518,
	558, 2028,
	-2, 2042,
	-1, 3655,
	560, 2548,
	-2, 1286,
	-1, 3713,
	235, 0,
	237, 0,
	318, 0,
	-2, 1700,
	-1, 3716,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1703,
	-1, 3717,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1705,
	-1, 3929,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1704,
	-1, 3930,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 1706,
	-1, 3941,
	235, 0,
	-2, 1737,
	-1, 4093,
	235, 0,
	-2, 1738,
	-1, 4242,
	49, 0,
	210, 0,
	262, 0,
	440, 0,
	535, 0,
	542, 0,
	-2, 2395,
}

const sqlPrivate = 57344

const sqlLast = 112737

var sqlAct = [...]int{

	250, 4115, 4252, 3853, 3265, 2807, 4241, 2776, 4136, 3069,
	3973, 4353, 4216, 3550, 3696, 4200, 2613, 4019, 2044, 3264,
	4197, 4253, 3976, 1371, 4254, 4046, 4182, 4302, 4026, 2652,
	3961, 2146, 3429, 1172, 3886, 4097, 4240, 2267, 3881, 994,
	3166, 3918, 3292, 3647, 3867, 3297, 4035, 3835, 3589, 1504,
	1354, 3783, 4060, 1879, 2335, 985, 3290, 3891, 242, 3623,
	38, 2275, 1663, 3607, 3260, 3250, 3609, 2904, 2155, 3382,
	1988, 3551, 720, 3347, 1236, 1499, 1536, 2816, 3946, 2268,
	1329, 684, 2765, 2829, 2130, 2818, 2747, 2677, 2737, 3345,
	3520, 3112, 3075, 1334, 3052, 3092, 1161, 720, 2491, 3695,
	2809, 3084, 993, 168, 2826, 2815, 1927, 3752, 2528, 822,
	1849, 1998, 3073, 1818, 2777, 3489, 2762, 2615, 2760, 2153,
	4, 2038, 2272, 1756, 4098, 2888, 2348, 2527, 2039, 1337,
	3051, 1038, 2377, 2090, 1535, 1424, 1045, 2128, 1503, 1479,
	1794, 2691, 4020, 715, 2033, 1219, 2117, 244, 243, 2024,
	1042, 2651, 2017, 1049, 1578, 2748, 1974, 2509, 1651, 2368,
	1044, 2256, 1880, 2332, 1819, 1961, 2239, 1971, 3262, 2488,
	2237, 2560, 2770, 1514, 2825, 1835, 1838, 2078, 1500, 1429,
	649, 1047, 1205, 1490, 2819, 1092, 2559, 1789, 2530, 721,
	722, 1155, 168, 2371, 2604, 3119, 2517, 2499, 1134, 1356,
	1828, 2455, 2349, 1741, 1664, 2421, 177, 1665, 717, 104,
	816, 178, 666, 1607, 2077, 2238, 1512, 2240, 1169, 726,
	729, 795, 678, 1366, 1453, 1151, 2102, 1987, 767, 652,
	2261, 1023, 1157, 43, 660, 42, 40, 635, 31, 29,
	1152, 657, 27, 1132, 726, 729, 1670, 883, 2379, 903,
	1650, 2939, 1377, 3503, 2935, 3504, 1040, 2119, 2119, 2119,
	2119, 2119, 3071, 4418, 4408, 1678, 1679, 2508, 3326, 4398,
	4397, 4370, 4368, 2508, 2508, 3799, 3799, 4364, 4282, 4276,
	4274, 2052, 4283, 2508, 2508, 4271, 989, 4268, 1709, 4272,
	1021, 4269, 4263, 4238, 4237, 1681, 2052, 2052, 2052, 3306,
	4236, 3307, 4231, 4230, 2139, 837, 2139, 2139, 4225, 4223,
	1149, 3142, 3799, 3799, 4195, 1678, 1679, 4176, 3799, 4169,
	4168, 2566, 4163, 2508, 2508, 3141, 3799, 4162, 4156, 1680,
	4129, 3799, 2052, 4095, 3845, 4077, 4074, 2566, 1709, 3684,
	2052, 3127, 4071, 4028, 3993, 1681, 3799, 4029, 2052, 1167,
	1214, 3992, 3984, 3983, 1164, 2052, 2052, 3799, 3952, 3931,
	3910, 989, 2052, 2566, 2139, 1600, 3899, 3830, 3818, 3798,
	3326, 2508, 2508, 3799, 1214, 970, 2154, 3715, 1163, 1680,
	969, 2566, 3663, 3657, 3621, 2585, 3342, 3342, 3622, 990,
	2501, 3513, 3511, 1678, 1679, 3514, 3512, 3496, 1135, 1135,
	3493, 2508, 3413, 3409, 3341, 3333, 2052, 2508, 3342, 3334,
	3068, 3063, 1188, 3062, 2508, 2508, 1709, 2508, 3015, 1183,
	2137, 2989, 3016, 1681, 979, 2990, 3326, 2981, 2979, 1686,
	984, 2982, 2508, 2950, 2948, 2832, 2562, 2508, 2805, 2139,
	2949, 2804, 2142, 2588, 2565, 2142, 2557, 2508, 2566, 2551,
	2508, 2903, 2508, 2052, 1136, 1678, 1679, 1680, 1711, 1712,
	1713, 1721, 1722, 1723, 2584, 2507, 4177, 1700, 2141, 2508,
	2673, 2052, 2142, 1708, 1710, 4090, 1697, 1714, 1709, 1686,
	1138, 4078, 1139, 215, 2139, 1681, 3493, 2500, 3880, 3845,
	3819, 2052, 3684, 1727, 3334, 2668, 2603, 1992, 1184, 1940,
	2118, 2743, 2134, 2051, 2685, 2374, 2601, 1814, 1165, 1365,
	3580, 1580, 2508, 3385, 2773, 3363, 3024, 3025, 1836, 1680,
	2027, 2544, 3308, 1708, 1710, 217, 2543, 3709, 2542, 1700,
	1701, 2541, 2540, 1140, 3024, 3025, 1137, 978, 1697, 977,
	1379, 3309, 3768, 2868, 215, 976, 975, 1703, 1704, 1705,
	1706, 974, 973, 972, 968, 967, 966, 1686, 965, 964,
	963, 962, 961, 3024, 3025, 960, 3042, 3043, 3044, 959,
	958, 957, 956, 216, 955, 954, 953, 952, 934, 881,
	1701, 880, 879, 878, 209, 3711, 217, 2938, 877, 2375,
	3039, 876, 210, 875, 874, 873, 2120, 2120, 2120, 2120,
	2120, 1708, 1710, 1370, 872, 871, 870, 869, 868, 1703,
	1704, 1705, 1706, 867, 179, 866, 865, 1370, 864, 1686,
	4309, 863, 862, 861, 860, 859, 1695, 1696, 858, 857,
	856, 855, 854, 853, 216, 852, 851, 3039, 850, 840,
	215, 839, 835, 834, 828, 827, 785, 784, 743, 742,
	741, 740, 732, 731, 1718, 730, 699, 1728, 1701, 690,
	1391, 689, 688, 1708, 1710, 672, 238, 237, 2376, 1702,
	2373, 236, 235, 234, 233, 179, 232, 231, 3727, 1724,
	3030, 1725, 217, 1047, 3306, 230, 229, 1047, 1695, 1696,
	228, 227, 4259, 226, 1184, 225, 224, 223, 3030, 1544,
	222, 221, 220, 1239, 219, 218, 1716, 1239, 2137, 3530,
	3507, 1359, 3343, 3115, 2961, 3893, 2944, 2724, 2756, 1702,
	1701, 2570, 1218, 1797, 2549, 2534, 1223, 3030, 2404, 1796,
	216, 3024, 3025, 1969, 3066, 1047, 1797, 1047, 2149, 1047,
	2390, 209, 1796, 1862, 1767, 1359, 2388, 1839, 1209, 210,
	1373, 1800, 89, 4081, 3971, 1148, 2059, 2793, 2118, 2137,
	2134, 2232, 1726, 1332, 1795, 1225, 1344, 1347, 1171, 1359,
	1677, 179, 3067, 2500, 4239, 4143, 4087, 1707, 3945, 4079,
	1715, 3040, 1537, 3900, 1345, 3879, 1530, 3045, 3775, 3750,
	215, 3337, 1340, 3749, 1758, 1184, 1376, 1702, 1383, 3040,
	1389, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 3743,
	3742, 2378, 4308, 1359, 1047, 3741, 3734, 2148, 215, 1359,
	3733, 3731, 3726, 1359, 3723, 3722, 3620, 3534, 3040, 1347,
	1347, 1047, 217, 1047, 3533, 1369, 3626, 1359, 1203, 1707,
	3532, 3517, 3484, 1047, 3483, 1047, 1435, 1437, 1348, 3482,
	1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 1702,
	217, 3405, 3401, 1758, 1390, 3110, 3059, 1440, 3050, 1347,
	3023, 726, 729, 3020, 1379, 1510, 3019, 3017, 2988, 2987,
	216, 2986, 2983, 1427, 1719, 2980, 1678, 1679, 1602, 1359,
	2960, 209, 1528, 2943, 1533, 3030, 3024, 3025, 2936, 210,
	1198, 2806, 1765, 1493, 1542, 1422, 1547, 1047, 216, 1709,
	1047, 3895, 2535, 1368, 1367, 2361, 1681, 1677, 2372, 209,
	3041, 179, 168, 168, 2057, 1698, 1694, 210, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 1759, 3041, 1757,
	1517, 1519, 1232, 2579, 1326, 1331, 1484, 1487, 2093, 2772,
	1680, 1676, 4412, 4362, 2758, 4361, 1549, 3024, 3025, 3627,
	1700, 1379, 4292, 4290, 4281, 1173, 1601, 3041, 3431, 1697,
	3578, 4135, 4125, 4122, 4121, 4120, 4114, 1385, 4107, 1717,
	4075, 4059, 1496, 1692, 1693, 1699, 1720, 1698, 1694, 4058,
	1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 2338,
	1047, 1047, 1047, 1047, 1047, 1047, 1047, 1209, 2344, 1456,
	1209, 4044, 4041, 3989, 3064, 3967, 3943, 3926, 1515, 3925,
	3394, 3907, 215, 3906, 3870, 1655, 3846, 3767, 990, 3748,
	3685, 1047, 3679, 3676, 141, 3568, 3567, 1047, 3554, 3553,
	1703, 1704, 1705, 1706, 3499, 1548, 3487, 3396, 1378, 1745,
	1686, 3035, 3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032,
	3030, 3344, 3327, 3133, 217, 3627, 1616, 3283, 3222, 3035,
	3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032, 3024, 3025,
	3195, 3042, 3043, 3044, 1529, 215, 1678, 1679, 3169, 3168,
	3135, 3036, 3037, 3038, 1708, 1710, 1543, 2965, 3035, 3033,
	3034, 3026, 3027, 3028, 3029, 3031, 3032, 2964, 2959, 1709,
	3956, 2927, 216, 2736, 1803, 1802, 1681, 3024, 3025, 1695,
	1696, 3030, 1801, 209, 215, 1798, 1790, 217, 3169, 1788,
	2577, 210, 1554, 2757, 2576, 2546, 2539, 2506, 3894, 1747,
	1571, 2386, 1047, 1047, 1047, 1861, 1817, 1812, 1047, 1811,
	1680, 1701, 3039, 179, 1810, 1169, 1809, 1169, 1603, 1808,
	1807, 3040, 1806, 1805, 1804, 1780, 217, 4099, 3107, 1816,
	1785, 2637, 1239, 1784, 1783, 216, 1649, 1782, 1781, 1780,
	1047, 1384, 1779, 720, 1778, 1777, 209, 1897, 720, 1776,
	1775, 1359, 1652, 1774, 210, 2150, 1773, 1865, 1047, 1772,
	970, 1660, 1359, 1659, 1771, 969, 1760, 1876, 1746, 1744,
	1739, 215, 1923, 1454, 216, 1197, 179, 1186, 1179, 1853,
	1047, 1654, 3040, 1379, 3873, 209, 1239, 3771, 1656, 3719,
	3529, 3510, 3502, 210, 1673, 1674, 1344, 1799, 2947, 2537,
	990, 1928, 3030, 2568, 3773, 1459, 1825, 1958, 3528, 1846,
	1686, 1759, 1938, 217, 3131, 179, 1822, 1823, 1742, 1967,
	1960, 168, 1870, 3312, 1857, 3821, 1214, 1222, 1866, 1209,
	1707, 3028, 3029, 3031, 3032, 1791, 1792, 1932, 1872, 1960,
	3046, 3030, 4359, 4082, 4352, 2403, 1167, 1960, 1167, 1220,
	1702, 1164, 1839, 1164, 1708, 1710, 1933, 2389, 3293, 4123,
	3041, 216, 3045, 2387, 3024, 3025, 4031, 4030, 1869, 4080,
	3970, 1147, 209, 3898, 3848, 1163, 4036, 1163, 3847, 3820,
	210, 3770, 1135, 1534, 1221, 1946, 3688, 1868, 1837, 3687,
	726, 729, 3686, 1780, 1847, 726, 729, 3505, 2656, 3329,
	1891, 215, 179, 3040, 3328, 1215, 3630, 2985, 1844, 2984,
	2909, 1701, 1678, 1679, 1797, 1214, 1678, 1679, 1570, 1935,
	1796, 3041, 2639, 1217, 1359, 1359, 990, 3566, 1214, 950,
	1647, 3267, 1894, 3266, 1239, 1980, 1931, 1815, 1769, 4235,
	3198, 2147, 1681, 217, 4027, 4279, 1681, 1841, 3024, 3025,
	4264, 1873, 1856, 1579, 1855, 1854, 1920, 1852, 1851, 1617,
	4251, 1850, 215, 3071, 3251, 2013, 2830, 1580, 2016, 3433,
	2040, 2021, 951, 3947, 1877, 3586, 1680, 2169, 1698, 1694,
	1680, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688,
	3585, 216, 3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032,
	2045, 2049, 209, 1885, 217, 1165, 3571, 1165, 1963, 1953,
	210, 3360, 3146, 2953, 2369, 1766, 1211, 2575, 1678, 1679,
	1813, 4260, 1793, 3258, 2087, 1483, 1434, 2682, 2094, 1458,
	215, 1362, 179, 215, 1192, 4273, 1511, 4270, 3302, 3545,
	4116, 2679, 3041, 2025, 3882, 1997, 1558, 2086, 1681, 4194,
	1702, 4104, 216, 1351, 3034, 3026, 3027, 3028, 3029, 3031,
	3032, 3172, 3561, 209, 2813, 3244, 2769, 992, 4318, 2083,
	4319, 210, 217, 726, 729, 217, 1686, 3377, 4010, 1359,
	1686, 1359, 1680, 1359, 4261, 1947, 1992, 1394, 3150, 3599,
	3809, 1409, 1401, 179, 1216, 2589, 2177, 4343, 948, 1359,
	1359, 2217, 4407, 1459, 2247, 4003, 3995, 3843, 946, 1344,
	1359, 1431, 3030, 2088, 930, 1368, 1367, 944, 3595, 3152,
	216, 2215, 1359, 216, 1359, 1359, 1359, 1614, 2020, 2099,
	942, 209, 780, 939, 209, 1363, 3594, 1615, 2417, 210,
	3588, 3584, 210, 3582, 3542, 3541, 720, 3247, 2156, 2050,
	3598, 1212, 2178, 1222, 2168, 1507, 3126, 2958, 988, 1213,
	1936, 179, 2245, 2042, 179, 1523, 3036, 3037, 3038, 2330,
	1410, 2957, 3132, 3035, 3033, 3034, 3026, 3027, 3028, 3029,
	3031, 3032, 2096, 2122, 1682, 1683, 1684, 1685, 1687, 1688,
	2070, 2124, 2109, 2956, 2126, 2152, 2069, 2328, 2955, 2913,
	2131, 2689, 2688, 2133, 2107, 2684, 2161, 2136, 2179, 2173,
	1221, 2675, 2667, 3040, 2666, 3026, 3027, 3028, 3029, 3031,
	3032, 1556, 1613, 2665, 2664, 2643, 2630, 1047, 2558, 1047,
	781, 1562, 2101, 1456, 2157, 2104, 1047, 2104, 2105, 1897,
	1897, 1239, 987, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
	1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
	1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
	1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1515, 1047,
	1515, 1047, 1047, 1047, 1047, 1215, 4344, 2249, 990, 2319,
	990, 1222, 2147, 726, 729, 2143, 2246, 2144, 2607, 2236,
	1653, 1596, 2607, 1047, 1198, 2416, 1047, 1047, 215, 2277,
	2474, 936, 2766, 2605, 1047, 1214, 3924, 2605, 1047, 3197,
	1047, 1047, 2569, 2229, 3361, 2160, 2185, 1458, 1239, 2230,
	1446, 2165, 1445, 2324, 1047, 1047, 1047, 1047, 1469, 1047,
	1047, 1047, 1047, 1047, 1047, 1047, 1047, 2641, 1221, 989,
	217, 2325, 3041, 2068, 2193, 2231, 2326, 1597, 1405, 2660,
	2331, 2653, 2654, 1551, 2244, 1047, 1047, 1047, 1047, 1047,
	1047, 1047, 1047, 1047, 3822, 1444, 1417, 1443, 1047, 1572,
	2653, 2654, 2374, 2211, 2226, 2596, 2550, 1364, 2653, 2654,
	1169, 1626, 1891, 1891, 2260, 4371, 1211, 1239, 216, 2369,
	1204, 2273, 2274, 2629, 2350, 2351, 1169, 3032, 2334, 209,
	2334, 3557, 2221, 1598, 2901, 2871, 1989, 210, 2350, 2366,
	2886, 2182, 1047, 1239, 1894, 1894, 2233, 2228, 2248, 2241,
	2186, 2235, 1658, 2234, 4347, 2628, 3805, 970, 3842, 179,
	970, 970, 2264, 2365, 2412, 2265, 2266, 4318, 1985, 2106,
	1682, 1683, 1684, 1685, 1687, 1688, 1684, 1685, 1687, 1688,
	1612, 215, 1646, 2458, 2458, 2472, 2375, 2350, 2342, 2681,
	2492, 2494, 1990, 1991, 1216, 2340, 2498, 1176, 1552, 1580,
	3368, 3367, 2514, 2176, 2522, 1580, 3026, 3027, 3028, 3029,
	3031, 3032, 215, 1347, 1568, 1885, 1885, 3978, 1846, 2865,
	2378, 2680, 1986, 217, 2346, 4257, 3149, 1952, 1951, 783,
	782, 1960, 1962, 986, 990, 2678, 1196, 1174, 1609, 2874,
	2547, 1167, 2363, 990, 4348, 1215, 1164, 990, 2327, 2247,
	1239, 1212, 647, 2316, 217, 2536, 2900, 1167, 2329, 1213,
	1347, 168, 1164, 3422, 3605, 2376, 2513, 2373, 1857, 3583,
	1163, 216, 1430, 848, 2617, 3581, 1557, 1999, 642, 2563,
	1897, 1688, 209, 1135, 3923, 1992, 1163, 2467, 1209, 2454,
	210, 2483, 2521, 2496, 2526, 1678, 1679, 2532, 2533, 2003,
	2504, 2505, 216, 3604, 940, 4329, 2216, 2245, 1239, 2519,
	2520, 2515, 179, 209, 940, 2640, 1428, 1844, 1709, 2414,
	3570, 210, 1359, 940, 2415, 1681, 2214, 2418, 2636, 2419,
	2420, 3980, 1799, 2609, 2561, 990, 941, 1047, 1047, 940,
	1047, 1177, 4356, 179, 2924, 2586, 1955, 925, 1332, 3803,
	3548, 4350, 2225, 1555, 2000, 925, 1211, 3246, 2587, 1680,
	697, 2672, 778, 1359, 777, 1344, 3212, 2525, 2873, 2578,
	2661, 983, 2922, 1630, 1791, 1792, 3795, 3216, 2683, 983,
	2740, 2582, 2620, 3205, 2243, 2583, 2663, 2716, 2581, 2645,
	2642, 2676, 981, 4258, 925, 2227, 2725, 2870, 2184, 2728,
	1165, 2730, 2590, 2780, 2754, 3211, 2378, 2608, 2378, 3791,
	4335, 1468, 2571, 1928, 2314, 1214, 1165, 2317, 983, 2011,
	1359, 1359, 3204, 1359, 4334, 3569, 2715, 2556, 3558, 2606,
	4374, 1404, 4307, 1891, 1216, 1359, 2655, 2657, 2658, 2659,
	2612, 2246, 2646, 2771, 3419, 2719, 2771, 1995, 2827, 2721,
	1359, 2622, 2625, 3701, 1957, 2004, 2056, 2055, 2010, 1686,
	926, 3792, 4173, 982, 695, 1894, 2313, 3700, 926, 2746,
	2801, 2835, 2836, 1347, 1347, 3299, 1975, 4388, 841, 726,
	729, 1976, 2842, 2843, 2844, 4256, 1994, 2872, 1983, 1047,
	2796, 1212, 1956, 2853, 3804, 2854, 2855, 3300, 937, 1213,
	2119, 2750, 1407, 1708, 1710, 2632, 2795, 926, 2919, 2244,
	4117, 2831, 2893, 2894, 4131, 2372, 1430, 2644, 2037, 2005,
	2006, 1368, 2722, 3420, 168, 1344, 4349, 1975, 3151, 2734,
	2662, 2920, 1976, 1047, 3225, 2925, 1885, 2744, 2812, 1047,
	1047, 2787, 2802, 2001, 3612, 2790, 1983, 2791, 2862, 2788,
	1553, 2851, 2915, 3610, 2333, 2792, 2798, 2833, 2775, 2850,
	1701, 2837, 2764, 2838, 1625, 1344, 2783, 1344, 2036, 2857,
	3299, 2859, 829, 2861, 1786, 2619, 2181, 2782, 1624, 3979,
	1983, 3862, 815, 4354, 2002, 2145, 1657, 2797, 2592, 1175,
	1977, 2876, 2023, 2878, 1047, 1047, 2803, 2799, 3920, 2814,
	1047, 1507, 2158, 2879, 2594, 3129, 3183, 1979, 643, 1627,
	2341, 4306, 2159, 1047, 1047, 2022, 3697, 2607, 2848, 1047,
	1047, 3936, 1515, 4328, 2167, 1047, 2170, 2171, 2172, 2856,
	849, 2858, 2623, 2860, 1047, 1047, 1047, 2595, 2175, 4205,
	1047, 1977, 4171, 927, 2315, 4134, 1831, 2018, 1567, 1569,
	1047, 927, 2916, 2869, 3787, 1214, 2593, 3828, 1979, 3788,
	3613, 3182, 2892, 665, 2946, 696, 2378, 1047, 1738, 3186,
	1195, 1990, 1991, 2963, 2518, 1981, 998, 4172, 4375, 644,
	3612, 4355, 2883, 2902, 4285, 2882, 2531, 2937, 4363, 3610,
	927, 1834, 2007, 4286, 2887, 1992, 989, 4069, 2260, 1702,
	3435, 2019, 2360, 2921, 2014, 2618, 2516, 3872, 3691, 698,
	3790, 3525, 694, 2923, 4357, 842, 843, 1189, 3188, 3702,
	3379, 645, 1584, 646, 1832, 3793, 1981, 3919, 2884, 4137,
	4255, 4317, 3625, 2941, 2942, 4315, 1827, 4152, 2945, 4043,
	3645, 2028, 3286, 1667, 1628, 3383, 2035, 3608, 2076, 4061,
	1824, 1187, 1182, 2881, 634, 1668, 1662, 1047, 1047, 1047,
	2914, 3698, 4062, 2008, 3746, 2263, 1047, 1047, 1047, 3473,
	1993, 1047, 1964, 1965, 1975, 1948, 1667, 928, 3986, 1976,
	3187, 1047, 1169, 1239, 4380, 928, 4052, 1047, 3985, 1047,
	3863, 3965, 3418, 4063, 3078, 3079, 3613, 1169, 1982, 733,
	4103, 3646, 1983, 4305, 1945, 3592, 3544, 2952, 3355, 830,
	831, 3120, 1831, 3808, 3287, 1239, 4389, 3348, 3611, 1460,
	3807, 3279, 980, 929, 928, 3164, 1629, 1169, 990, 3160,
	1239, 929, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 2120,
	3789, 2755, 1666, 2749, 3100, 2738, 2100, 1897, 3190, 1982,
	2089, 1239, 4065, 1983, 2081, 2034, 4138, 1834, 2062, 1398,
	3538, 3921, 3125, 671, 3488, 1359, 1359, 4183, 1047, 3061,
	929, 3380, 1829, 1833, 4064, 1666, 3796, 1943, 1667, 4153,
	2647, 2222, 1047, 3114, 3139, 3080, 1941, 3191, 1977, 3088,
	1832, 4066, 2253, 3648, 1897, 3887, 844, 845, 2735, 3155,
	1471, 3156, 3157, 4025, 4023, 1979, 1668, 3147, 2510, 3350,
	1047, 1359, 2624, 1167, 3090, 1928, 1928, 1944, 1164, 3173,
	3966, 3153, 3177, 3113, 3349, 3175, 4284, 3106, 1167, 3089,
	3109, 3171, 1830, 1164, 3098, 3056, 3057, 3058, 1209, 1668,
	3101, 3102, 1163, 2166, 3174, 3072, 1359, 3179, 3180, 3170,
	2907, 3474, 2012, 3087, 3611, 3747, 1239, 1163, 1167, 3118,
	3475, 1928, 3086, 1164, 2885, 1359, 3501, 1978, 3083, 3161,
	1359, 3143, 3144, 1981, 3192, 3193, 3228, 1666, 3194, 3231,
	1344, 2512, 4379, 3236, 3238, 1599, 2511, 1163, 3703, 3082,
	832, 833, 3104, 1359, 3105, 3094, 1928, 2555, 3099, 1359,
	1891, 1359, 2015, 2086, 2554, 1239, 3200, 1738, 248, 3130,
	3219, 3220, 720, 3806, 3221, 1928, 2553, 3185, 1978, 2552,
	1928, 1452, 1438, 1359, 2254, 3214, 1980, 3159, 3148, 3122,
	3123, 3124, 1894, 3263, 1359, 1439, 734, 735, 1450, 1833,
	3154, 3217, 847, 3223, 4139, 2648, 2649, 1891, 3539, 987,
	1169, 1585, 3215, 3272, 3617, 1980, 3165, 3203, 3295, 2742,
	4110, 3202, 1869, 2031, 3278, 3196, 3854, 3338, 3704, 2827,
	1237, 3233, 1165, 3974, 1338, 3249, 3240, 3252, 2827, 1894,
	3189, 3207, 3213, 2098, 3254, 4325, 3095, 1165, 3208, 3904,
	4021, 2025, 3209, 1359, 1359, 2834, 1982, 3210, 3218, 2025,
	1983, 3304, 3232, 1885, 2714, 3136, 3137, 3239, 3138, 3224,
	3234, 2720, 3241, 2029, 2718, 1359, 3245, 1165, 3325, 3351,
	3352, 3353, 3354, 4067, 1561, 3963, 4191, 3121, 4068, 3226,
	4180, 3753, 1344, 1344, 3093, 3490, 2385, 3054, 4209, 670,
	2645, 3294, 1427, 3085, 1006, 4327, 1972, 4275, 4186, 4124,
	1885, 1239, 2030, 3362, 1239, 3256, 3903, 4111, 3318, 726,
	729, 3276, 3296, 3288, 3275, 3097, 1644, 1642, 3964, 3355,
	1621, 3975, 1619, 1595, 737, 736, 1593, 1591, 3348, 1589,
	1587, 1167, 1577, 3942, 1047, 1973, 1164, 168, 168, 1010,
	1047, 1047, 3745, 3616, 1047, 1047, 1047, 3356, 1047, 1575,
	1448, 3053, 2800, 1507, 3395, 3323, 3324, 1047, 1897, 3315,
	1163, 1827, 3319, 1344, 3314, 3358, 1047, 3316, 3317, 1047,
	3336, 3340, 3320, 3140, 3321, 1239, 3322, 3301, 3373, 738,
	739, 4187, 2841, 3018, 1047, 2926, 3310, 2739, 3248, 3374,
	4112, 2674, 1239, 3303, 2638, 3371, 2580, 1864, 1860, 3357,
	1645, 1451, 1897, 1897, 1047, 1047, 1539, 1047, 1047, 1047,
	2213, 3398, 990, 3381, 3376, 1978, 3375, 1662, 1449, 3096,
	3350, 2867, 846, 2866, 2840, 2242, 3407, 3408, 2224, 1608,
	3370, 2189, 2061, 2384, 1924, 3349, 1770, 1831, 1550, 1421,
	4250, 3829, 3364, 3378, 3365, 3817, 3366, 4179, 3885, 1047,
	3447, 3834, 3780, 1047, 938, 1897, 1897, 1047, 1047, 1047,
	1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
	1047, 1047, 1047, 1047, 1047, 1047, 3448, 1047, 3644, 3415,
	3227, 3636, 1834, 3597, 1047, 1047, 1897, 1055, 3564, 3562,
	1165, 1047, 3403, 3543, 1643, 1641, 4303, 1829, 1620, 3282,
	1618, 1594, 1047, 3414, 1592, 1590, 3277, 1588, 1586, 3268,
	1576, 1891, 2794, 1169, 1169, 1832, 2789, 1047, 3430, 3421,
	3423, 3424, 3346, 2767, 3437, 2753, 2745, 1574, 1447, 2732,
	2717, 2140, 246, 246, 246, 2138, 637, 638, 2135, 653,
	637, 653, 663, 1894, 669, 2132, 1239, 2127, 687, 2125,
	2121, 2112, 2060, 693, 3445, 1891, 1891, 1830, 3446, 246,
	2058, 2041, 2026, 3506, 2273, 3438, 2009, 1996, 1984, 3291,
	3235, 4295, 1144, 1671, 1871, 2035, 3477, 3452, 826, 2905,
	3523, 3524, 3450, 1047, 246, 2212, 3522, 1894, 1894, 3485,
	4319, 1949, 4219, 3909, 3535, 3536, 3537, 168, 1145, 1047,
	1047, 943, 945, 947, 3902, 3497, 3498, 3901, 1891, 1891,
	3841, 3776, 2828, 3478, 1885, 3486, 1968, 2273, 3453, 1403,
	2607, 2607, 4054, 3492, 3494, 3495, 1047, 1047, 2627, 4047,
	3351, 3352, 3353, 3354, 2097, 2605, 2626, 3656, 3425, 1891,
	1894, 1894, 710, 3508, 1167, 1167, 1992, 2180, 3481, 1164,
	1164, 1639, 1640, 1047, 1492, 2208, 1491, 2207, 1885, 1885,
	4218, 3444, 2187, 3509, 1833, 3521, 3810, 3836, 1678, 1679,
	2906, 1894, 1573, 1163, 1163, 1359, 4089, 1678, 1679, 1672,
	3754, 3732, 2650, 2631, 2034, 1675, 1190, 4321, 4313, 1863,
	648, 239, 4280, 2731, 1897, 3591, 2210, 637, 637, 3633,
	3577, 3579, 2082, 1201, 1146, 246, 2679, 1681, 2671, 3576,
	2687, 1885, 1885, 2686, 3547, 2635, 3590, 1347, 1492, 2669,
	2633, 2670, 4178, 1359, 3572, 768, 4147, 4144, 2634, 4109,
	1047, 812, 1680, 4039, 3593, 4018, 3635, 631, 1169, 1047,
	1492, 1680, 1885, 1970, 659, 3658, 3624, 3516, 3281, 3615,
	2774, 3587, 2645, 2780, 3563, 2497, 3565, 1934, 1878, 1359,
	1359, 1359, 4351, 3667, 3649, 4211, 2086, 3972, 3631, 3128,
	4212, 4378, 3638, 3650, 3653, 1359, 3024, 3025, 1678, 1679,
	4211, 3652, 2599, 2600, 1370, 4212, 2597, 2598, 3634, 2827,
	4331, 4146, 1560, 3671, 1239, 3724, 2380, 3527, 1559, 3606,
	2599, 2597, 3614, 1165, 1165, 2413, 1623, 4040, 4004, 1622,
	3837, 3603, 3632, 3596, 3531, 3602, 1239, 3833, 3832, 1047,
	1047, 3720, 3618, 3642, 3683, 1047, 1047, 1897, 3526, 3426,
	1047, 1047, 3637, 1047, 3229, 1764, 1763, 1047, 4365, 4336,
	4100, 1010, 3999, 3654, 3957, 1010, 3639, 1891, 1047, 3690,
	3660, 3659, 3954, 3651, 3865, 3772, 3165, 3666, 3682, 3662,
	3619, 1323, 3560, 3555, 1047, 1323, 3313, 3285, 3284, 1167,
	3674, 3014, 3672, 3673, 1164, 3013, 3012, 3681, 3011, 1894,
	3714, 3680, 3705, 3010, 3009, 3678, 3677, 3008, 3007, 3006,
	3005, 2053, 3664, 3004, 3003, 3002, 3665, 3001, 1163, 3000,
	2999, 2998, 2997, 3706, 3699, 2996, 2995, 3689, 2994, 2993,
	2992, 2991, 2864, 2847, 2846, 2845, 2785, 2759, 2733, 2573,
	2572, 2345, 2209, 2206, 1169, 3242, 2205, 2204, 2203, 2202,
	2115, 3718, 1169, 2114, 2113, 2111, 1239, 2095, 1239, 2071,
	2067, 2066, 2065, 2064, 2063, 1169, 1638, 1637, 1582, 1581,
	1885, 1478, 1477, 3759, 3694, 3273, 1476, 1475, 1474, 1473,
	1472, 1239, 1470, 1465, 1464, 1463, 3280, 1462, 1461, 1416,
	1415, 1414, 1413, 1412, 1411, 3744, 1406, 1402, 1400, 1399,
	1891, 1230, 1229, 1228, 1047, 1227, 1226, 1194, 3777, 3778,
	1193, 1127, 1939, 949, 935, 3977, 3794, 3801, 1632, 87,
	1408, 756, 81, 2032, 3559, 908, 4208, 1392, 3802, 3811,
	4130, 1239, 1894, 763, 4193, 3181, 3755, 2690, 2188, 1239,
	168, 3813, 3814, 3762, 3760, 3331, 3332, 1583, 1165, 3761,
	3758, 2190, 3756, 3757, 3108, 3812, 3766, 2538, 3751, 4170,
	3769, 3113, 3838, 3728, 3839, 2962, 4096, 1359, 1359, 3935,
	3800, 3779, 2383, 3765, 1768, 1167, 3065, 83, 1031, 1077,
	1164, 3861, 3860, 1167, 1359, 3781, 3546, 2817, 1164, 3855,
	3858, 3857, 1882, 2086, 1884, 1239, 1167, 997, 1242, 1950,
	1359, 1164, 3852, 1885, 1163, 1925, 1037, 1347, 1966, 1959,
	2574, 2457, 1163, 1054, 1051, 3827, 3850, 1886, 1888, 1053,
	1052, 1887, 3844, 3878, 3840, 1163, 3831, 1047, 1787, 1050,
	3849, 1881, 3641, 3640, 1928, 3864, 2741, 1359, 1359, 1359,
	3905, 3888, 2778, 3311, 3851, 1457, 3876, 1180, 1239, 1455,
	3889, 910, 1954, 3908, 2339, 2367, 2951, 1761, 3856, 3816,
	1047, 1047, 1047, 1012, 3897, 3892, 3825, 3871, 3896, 1033,
	3824, 3875, 3826, 2364, 1185, 1022, 1191, 1011, 1239, 3091,
	3070, 3298, 3883, 1047, 3890, 687, 1047, 1047, 3515, 2252,
	3874, 772, 3021, 2370, 1178, 2480, 1047, 2473, 2469, 1897,
	3145, 2768, 1648, 1740, 1047, 1047, 2779, 1224, 3911, 246,
	1015, 246, 246, 1335, 3914, 246, 246, 1350, 2276, 1239,
	3877, 1359, 3922, 3916, 3927, 3912, 2337, 3932, 1752, 2931,
	2262, 246, 3305, 1372, 1165, 1239, 3111, 2567, 4215, 3434,
	2075, 1143, 1165, 1047, 1142, 1141, 4199, 4196, 3675, 3261,
	1047, 1942, 3944, 2591, 1396, 1165, 1730, 3269, 1047, 1027,
	1897, 1343, 3938, 3076, 3339, 1418, 692, 1039, 1047, 1729,
	2711, 1047, 1420, 3959, 1426, 2710, 4106, 1210, 246, 246,
	1047, 1335, 1208, 1207, 1206, 3950, 3951, 1239, 3163, 4387,
	3556, 214, 2899, 1669, 1661, 211, 3960, 213, 1359, 1359,
	1467, 212, 3866, 3949, 3519, 2381, 3117, 4278, 3958, 3574,
	3998, 3253, 246, 22, 246, 246, 21, 1335, 246, 1350,
	3982, 3981, 20, 108, 3953, 41, 19, 123, 140, 687,
	139, 246, 246, 116, 138, 137, 1239, 3263, 4009, 1359,
	136, 4033, 135, 4024, 4000, 1750, 142, 134, 4006, 1755,
	1323, 3996, 1891, 133, 826, 128, 132, 1047, 1047, 131,
	4014, 4038, 4013, 130, 129, 4022, 127, 4017, 4053, 126,
	4072, 4073, 4001, 125, 124, 4016, 1047, 1047, 122, 121,
	4048, 120, 4057, 119, 1894, 4032, 118, 4051, 117, 4049,
	115, 4037, 4076, 1047, 1897, 114, 113, 4050, 1010, 112,
	2548, 111, 110, 4056, 1323, 4055, 109, 4070, 3990, 3991,
	3892, 683, 680, 1891, 59, 58, 107, 106, 1047, 18,
	39, 1047, 3988, 4045, 14, 63, 246, 4012, 64, 17,
	4113, 4011, 4005, 1344, 13, 4007, 4008, 34, 86, 98,
	1047, 4088, 97, 246, 4102, 1894, 35, 4094, 95, 94,
	33, 16, 15, 4119, 92, 1885, 91, 32, 30, 4084,
	11, 4101, 9, 8, 36, 1848, 12, 5, 173, 172,
	175, 171, 174, 85, 4085, 4086, 170, 3600, 169, 84,
	28, 1047, 1047, 10, 165, 4034, 4118, 3629, 78, 4133,
	167, 166, 1047, 164, 163, 1047, 162, 79, 76, 1359,
	161, 80, 160, 4126, 77, 4149, 159, 2602, 4151, 1359,
	1359, 26, 6, 700, 62, 2257, 1885, 7, 3917, 1347,
	4141, 4142, 3359, 4161, 4140, 101, 1359, 102, 37, 4132,
	74, 4145, 73, 2928, 2929, 72, 4128, 25, 61, 24,
	1047, 1047, 202, 201, 4155, 4157, 200, 1891, 199, 4154,
	4148, 4158, 1323, 4037, 4166, 198, 4167, 197, 4159, 4160,
	192, 3668, 3669, 3670, 191, 196, 194, 193, 195, 4190,
	4165, 190, 205, 1047, 1047, 4164, 1047, 1507, 4175, 1894,
	204, 4188, 206, 203, 208, 4198, 4201, 189, 4189, 187,
	183, 182, 4213, 186, 188, 185, 184, 4220, 181, 207,
	4210, 157, 4217, 158, 69, 156, 4127, 155, 154, 153,
	152, 151, 150, 4203, 4233, 68, 4229, 23, 4234, 2,
	1, 0, 1047, 1047, 1047, 0, 4207, 0, 705, 0,
	0, 0, 0, 0, 4232, 0, 0, 0, 4174, 4224,
	4228, 637, 0, 0, 0, 1047, 4227, 4267, 0, 4262,
	1885, 0, 0, 0, 2475, 4221, 0, 0, 4222, 4246,
	4247, 4249, 246, 4248, 246, 0, 0, 0, 246, 0,
	0, 4202, 0, 0, 4206, 4289, 4265, 3047, 3048, 3049,
	0, 1372, 1335, 246, 0, 246, 4298, 0, 4287, 0,
	246, 1372, 653, 1047, 4300, 246, 1372, 0, 4291, 4304,
	4288, 0, 0, 687, 4294, 0, 4299, 4293, 713, 0,
	0, 0, 4296, 4297, 0, 0, 0, 0, 4301, 0,
	0, 4323, 4320, 0, 4310, 4311, 4316, 0, 4314, 0,
	0, 4312, 707, 0, 4198, 0, 0, 4201, 4326, 0,
	4324, 1047, 4322, 1047, 0, 4341, 4333, 4338, 0, 4330,
	4217, 0, 0, 4346, 4340, 4332, 4342, 4337, 0, 0,
	0, 0, 4339, 0, 0, 0, 4345, 0, 0, 0,
	0, 0, 0, 0, 0, 4360, 0, 0, 0, 0,
	0, 4358, 0, 0, 0, 0, 0, 0, 0, 711,
	0, 0, 0, 4367, 1826, 0, 4366, 0, 0, 0,
	4372, 0, 1047, 1047, 4277, 0, 0, 0, 4376, 4369,
	1047, 0, 1047, 1047, 4373, 0, 0, 0, 0, 4385,
	4391, 4382, 0, 0, 4392, 0, 0, 0, 4396, 4394,
	0, 0, 4395, 0, 0, 4390, 0, 0, 2780, 0,
	0, 0, 4399, 4393, 0, 4400, 0, 4403, 0, 1507,
	0, 0, 4402, 0, 4404, 4410, 4405, 0, 0, 1323,
	4409, 702, 0, 1047, 4401, 4406, 4414, 0, 4416, 0,
	246, 4411, 0, 246, 4417, 0, 4419, 0, 4413, 0,
	0, 0, 0, 0, 0, 0, 4420, 0, 0, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4383, 4384, 0, 0, 0, 0, 0, 0, 0, 3913,
	712, 3915, 1678, 1679, 0, 246, 0, 3795, 0, 246,
	0, 0, 0, 709, 0, 0, 246, 0, 0, 704,
	0, 0, 246, 0, 0, 1709, 1323, 0, 0, 0,
	0, 0, 1681, 0, 0, 0, 0, 246, 0, 246,
	3791, 4415, 0, 637, 3784, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 996, 0, 0, 0, 2116,
	701, 3782, 0, 0, 0, 0, 1680, 0, 0, 0,
	3786, 246, 0, 0, 0, 0, 1700, 0, 246, 0,
	0, 0, 0, 3955, 0, 1697, 0, 708, 0, 0,
	0, 0, 3792, 0, 0, 1323, 0, 0, 0, 0,
	0, 714, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 703, 826, 0, 0, 0, 0, 0, 0,
	3077, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3785, 2343, 0, 0, 3389, 0, 246, 0,
	1335, 246, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 3103, 0, 0, 687, 1703, 1704, 1705, 1706,
	4015, 0, 246, 0, 0, 0, 1686, 3116, 0, 0,
	0, 0, 0, 246, 246, 0, 246, 0, 246, 2889,
	246, 0, 246, 0, 0, 0, 0, 0, 3134, 0,
	0, 0, 0, 0, 0, 3391, 3392, 0, 0, 0,
	0, 0, 2479, 2218, 0, 0, 2219, 0, 2220, 0,
	1708, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 1695, 1696, 0, 0, 0,
	0, 669, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2475,
	2475, 0, 0, 0, 1678, 1679, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3787, 1323, 1709, 0, 0,
	3788, 0, 0, 0, 1681, 3024, 3025, 0, 3042, 3043,
	3044, 0, 0, 0, 0, 0, 0, 3454, 3455, 3456,
	3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466,
	3467, 3468, 3469, 3470, 3471, 3472, 0, 3476, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 3790, 3116, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 3793, 0, 0, 0,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 3039,
	0, 1507, 1507, 2450, 2451, 2452, 2453, 2446, 2447, 2448,
	2449, 0, 0, 1709, 0, 0, 1707, 0, 1507, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 3388, 0,
	0, 0, 637, 2475, 2475, 2475, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 1703, 1704,
	1705, 1706, 0, 0, 1680, 0, 637, 0, 1686, 0,
	0, 0, 0, 246, 1700, 637, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 246, 0, 0,
	0, 0, 2426, 2427, 2428, 2429, 0, 0, 0, 3030,
	0, 0, 246, 1350, 0, 0, 0, 0, 0, 0,
	0, 3789, 1708, 1710, 2438, 2439, 2440, 2441, 2434, 2435,
	2436, 2437, 2442, 2443, 2444, 2445, 0, 0, 1338, 0,
	0, 1237, 0, 0, 2917, 0, 0, 1695, 1696, 0,
	0, 0, 1678, 1679, 0, 0, 0, 3796, 0, 246,
	1350, 0, 653, 0, 1703, 1704, 1705, 1706, 0, 246,
	0, 0, 0, 0, 1686, 1709, 0, 0, 0, 1701,
	0, 0, 1681, 0, 1698, 1694, 0, 1691, 1689, 1690,
	1682, 1683, 1684, 1685, 1687, 1688, 0, 2422, 2423, 2424,
	2425, 2430, 2431, 2432, 2433, 0, 0, 996, 0, 0,
	3040, 996, 3411, 2616, 0, 0, 1680, 0, 1708, 1710,
	0, 0, 246, 0, 0, 0, 1700, 0, 0, 3427,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 1696, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 1380, 0, 1386, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	2723, 0, 0, 0, 0, 0, 0, 2479, 1707, 0,
	0, 0, 0, 0, 0, 0, 1703, 1704, 1705, 1706,
	0, 0, 0, 0, 1372, 0, 1686, 246, 1702, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 2763, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 2616, 0, 637, 0, 0, 3041,
	2784, 0, 0, 0, 0, 1526, 246, 1531, 0, 246,
	1708, 1710, 0, 246, 0, 246, 0, 1540, 0, 1545,
	1335, 0, 246, 246, 0, 1350, 1350, 2479, 2479, 0,
	0, 0, 0, 3518, 0, 2810, 826, 0, 2616, 2616,
	0, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 3024, 3025, 0, 3042, 3043, 3044,
	0, 1323, 0, 0, 1702, 0, 0, 1701, 0, 0,
	0, 0, 246, 1335, 246, 0, 3710, 1372, 0, 1372,
	1372, 1604, 0, 1335, 1610, 1335, 0, 1335, 0, 0,
	0, 0, 0, 1323, 0, 0, 1698, 1694, 0, 1691,
	1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 1323, 0,
	0, 0, 0, 246, 246, 246, 246, 1335, 246, 0,
	246, 0, 0, 3036, 3037, 3038, 0, 0, 3039, 1323,
	3035, 3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032, 0,
	0, 2475, 2475, 0, 0, 0, 1010, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 246,
	1010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2479, 2479, 2479, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 0, 0, 0, 0, 0, 1707, 0, 0, 0,
	0, 0, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 1749, 1702, 0, 0, 0,
	0, 1762, 0, 0, 0, 0, 0, 0, 3030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1372, 0,
	0, 0, 0, 2475, 2475, 2475, 2475, 2475, 2475, 2475,
	2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475,
	2475, 2475, 0, 2475, 0, 0, 3024, 3025, 3045, 3042,
	3043, 3044, 0, 1323, 0, 0, 0, 0, 0, 0,
	2706, 0, 0, 0, 0, 0, 0, 0, 3400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1820, 1820, 3040,
	0, 0, 0, 2698, 2696, 0, 3941, 0, 0, 0,
	2700, 2702, 2692, 0, 0, 0, 0, 1691, 1689, 1690,
	1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 0, 0,
	3039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 637, 0, 0, 637, 0, 0,
	637, 637, 0, 0, 0, 3764, 637, 0, 0, 1323,
	0, 0, 1323, 0, 246, 0, 0, 0, 0, 0,
	3030, 0, 0, 0, 0, 0, 1372, 0, 3774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2616, 2616, 246, 0, 1350, 0, 0, 2616,
	3045, 2694, 3167, 1323, 0, 0, 0, 0, 0, 0,
	2616, 3167, 2708, 2616, 3167, 3167, 0, 0, 0, 0,
	1323, 0, 0, 4093, 0, 0, 0, 0, 246, 246,
	1350, 246, 0, 2707, 2699, 2697, 2701, 2703, 2693, 2695,
	2709, 3040, 0, 0, 0, 0, 0, 2705, 0, 0,
	0, 1350, 246, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2616, 0, 3230,
	2616, 1350, 0, 0, 2616, 2616, 1350, 0, 0, 0,
	2712, 0, 3036, 3037, 3038, 0, 0, 0, 0, 3035,
	3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 2479,
	2479, 0, 0, 0, 0, 1237, 0, 0, 0, 246,
	3257, 0, 0, 3259, 2616, 0, 0, 246, 0, 0,
	0, 246, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3933, 0, 0, 0, 0,
	0, 0, 2763, 0, 0, 1335, 0, 246, 0, 0,
	2616, 0, 637, 0, 0, 0, 0, 0, 0, 2616,
	0, 0, 0, 0, 1323, 0, 0, 246, 0, 0,
	3041, 246, 246, 0, 0, 0, 3933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2276, 0, 0, 0, 0, 0, 246, 2763,
	0, 0, 2763, 0, 0, 0, 0, 0, 0, 0,
	0, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
	2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
	0, 2479, 2713, 0, 0, 0, 0, 0, 0, 0,
	0, 2704, 0, 0, 2276, 0, 3369, 1678, 1679, 1335,
	246, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3024, 3025, 0, 3042, 3043, 3044,
	1709, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 0, 246, 3399, 0, 0, 0,
	0, 0, 0, 0, 3036, 3037, 3038, 0, 0, 0,
	0, 3035, 3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 2251, 0, 2255, 0, 0, 0, 0, 3039, 0,
	2269, 3432, 0, 0, 0, 0, 0, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 0, 2318, 0, 2320, 2321, 2322, 2323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1704, 1705, 1706, 0, 0, 2347, 0, 0,
	0, 1686, 1323, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 2362, 0, 0, 0, 0, 0, 3030, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 2392, 2395,
	2398, 2401, 0, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	0, 0, 0, 0, 0, 1708, 1710, 0, 0, 0,
	246, 246, 2475, 0, 0, 0, 0, 0, 0, 0,
	0, 2471, 0, 2482, 2484, 2489, 0, 0, 0, 0,
	1695, 1696, 637, 637, 0, 0, 0, 0, 3045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1372, 1372, 0, 0, 0, 2475,
	0, 0, 1701, 0, 0, 0, 0, 0, 1372, 1372,
	1372, 0, 0, 0, 0, 0, 0, 0, 0, 3040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 246, 0, 0, 0, 1323,
	0, 1707, 0, 0, 0, 0, 246, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 1702, 0, 0, 0, 246, 0, 0, 0, 2475,
	246, 0, 0, 0, 246, 0, 0, 0, 3041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2616, 246, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 2810, 2810, 0, 0, 0, 0,
	826, 826, 2616, 0, 0, 2763, 2763, 0, 0, 826,
	2616, 2726, 2727, 0, 2729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 241, 241, 633, 0, 0, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1323, 0, 0, 1698,
	1694, 0, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687,
	1688, 0, 3036, 3037, 3038, 0, 0, 0, 0, 3035,
	3033, 3034, 3026, 3027, 3028, 3029, 3031, 3032, 0, 3729,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 1678, 1679, 0, 1711, 1712, 1713,
	1721, 1722, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 1010,
	0, 246, 1727, 2863, 0, 0, 0, 1372, 0, 246,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 2616,
	2616, 2616, 0, 1731, 1732, 0, 0, 0, 0, 0,
	2479, 0, 1372, 0, 1323, 0, 0, 0, 0, 0,
	2616, 0, 3167, 0, 0, 1372, 1372, 246, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	246, 1350, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2616, 0, 2616, 246, 2479, 2911, 2912,
	0, 0, 0, 0, 2918, 0, 0, 0, 1703, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 1686, 0,
	2616, 0, 0, 2932, 2933, 3868, 0, 0, 0, 2362,
	0, 0, 0, 0, 246, 0, 0, 0, 2940, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 2954, 0, 1728, 0, 0, 0,
	0, 0, 1708, 1710, 0, 0, 0, 0, 0, 0,
	0, 2966, 0, 0, 0, 0, 0, 1372, 1056, 0,
	0, 0, 149, 0, 0, 0, 0, 1695, 1696, 0,
	70, 0, 45, 44, 0, 0, 0, 0, 0, 1010,
	1010, 0, 0, 0, 0, 1716, 71, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 75, 247, 247, 247, 0, 0, 0, 0,
	0, 0, 0, 65, 0, 0, 0, 0, 0, 0,
	47, 0, 146, 0, 0, 0, 0, 2479, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	2489, 2489, 2489, 0, 0, 247, 0, 0, 2616, 0,
	3167, 0, 0, 3962, 0, 1820, 49, 66, 0, 0,
	0, 246, 1010, 3081, 50, 0, 0, 0, 0, 88,
	0, 0, 0, 147, 0, 0, 0, 817, 0, 0,
	0, 48, 0, 103, 0, 0, 0, 687, 89, 100,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 70, 0, 820, 819, 1707, 0,
	1350, 246, 0, 70, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 51, 0, 0, 1702, 71,
	3962, 0, 0, 0, 0, 0, 75, 0, 2616, 0,
	0, 0, 996, 90, 0, 75, 0, 0, 0, 0,
	4042, 0, 0, 1719, 0, 0, 996, 0, 0, 0,
	0, 0, 1372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	0, 0, 0, 0, 3184, 82, 0, 0, 0, 0,
	0, 246, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 3432, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 0, 103, 0, 0,
	0, 3962, 89, 100, 0, 0, 103, 0, 0, 0,
	0, 89, 100, 0, 0, 0, 0, 0, 1717, 0,
	0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691,
	1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 93, 0, 0, 90, 1234, 0,
	0, 0, 0, 0, 1342, 0, 90, 3868, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 55, 0, 0, 0, 0, 57,
	0, 0, 3167, 70, 0, 67, 0, 0, 0, 0,
	56, 176, 96, 0, 99, 0, 0, 0, 53, 71,
	0, 0, 148, 0, 0, 0, 0, 0, 1372, 54,
	1372, 0, 0, 0, 0, 75, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	141, 0, 0, 0, 0, 4184, 0, 0, 0, 0,
	0, 0, 1372, 0, 145, 246, 0, 0, 0, 0,
	0, 1482, 0, 1482, 1482, 82, 0, 0, 0, 0,
	217, 0, 246, 2616, 0, 0, 0, 0, 0, 0,
	1524, 1525, 0, 0, 0, 0, 0, 2564, 0, 0,
	246, 0, 0, 0, 0, 143, 0, 0, 93, 0,
	0, 0, 88, 0, 0, 0, 0, 93, 0, 0,
	180, 0, 0, 0, 0, 3432, 103, 0, 216, 0,
	0, 89, 100, 0, 0, 0, 0, 0, 2269, 209,
	0, 0, 0, 0, 3386, 3387, 0, 210, 3390, 0,
	0, 0, 3393, 0, 0, 176, 96, 0, 99, 0,
	0, 3397, 0, 0, 176, 96, 0, 99, 0, 179,
	3404, 0, 3, 3081, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 1631, 90, 0, 3416, 0,
	821, 215, 0, 0, 141, 0, 0, 0, 3962, 821,
	0, 0, 0, 141, 0, 0, 0, 0, 3439, 3440,
	0, 3441, 3442, 3443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 1372,
	0, 2616, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 3449, 0, 0, 0, 3451, 143, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 216, 180, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 209, 0, 0, 0, 0, 3479, 3480,
	0, 210, 209, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 3491, 0, 0, 0,
	0, 2810, 0, 818, 0, 0, 0, 0, 0, 2616,
	0, 3500, 179, 0, 0, 0, 0, 93, 0, 0,
	247, 1243, 247, 247, 2810, 1243, 247, 247, 0, 1243,
	0, 0, 1678, 1679, 0, 1711, 1712, 1713, 1721, 1722,
	1723, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 1709, 0, 0, 0, 0,
	0, 0, 1681, 1243, 176, 96, 0, 99, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 3540, 3024, 3025,
	0, 3042, 3043, 3044, 0, 0, 0, 1243, 0, 247,
	247, 215, 0, 3549, 3552, 0, 1680, 0, 0, 821,
	0, 0, 0, 141, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 1858, 0, 0,
	0, 3573, 0, 247, 0, 247, 247, 0, 0, 247,
	0, 1243, 1867, 217, 1342, 0, 0, 1243, 0, 0,
	0, 1243, 247, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 3039, 0, 0, 1243, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 1703, 1704, 1705, 1706,
	0, 0, 209, 0, 0, 0, 1686, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 1820, 0, 0, 0, 0, 0,
	0, 1718, 0, 3661, 1728, 0, 0, 247, 0, 0,
	1708, 1710, 3030, 0, 0, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 247, 0, 1724, 0, 1725, 0,
	0, 0, 0, 0, 0, 1695, 1696, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	0, 0, 3045, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 3707, 3708, 0, 0, 0, 0, 3712,
	3713, 1700, 0, 0, 3716, 3717, 0, 0, 0, 0,
	1697, 3721, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 3725, 3040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 3730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 2080, 0,
	0, 2910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1704, 1705, 1706, 0, 2103, 0, 2103, 0,
	0, 1686, 0, 0, 2110, 0, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	1482, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 1708, 1710, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3552, 247,
	1695, 1696, 3041, 0, 0, 0, 0, 0, 0, 0,
	1243, 0, 0, 0, 247, 247, 247, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 247, 2080, 0, 1243,
	2163, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	1243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2194, 1243, 2196, 0, 2198, 0, 2200,
	0, 2201, 0, 0, 0, 0, 1717, 0, 0, 0,
	1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690,
	1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 70, 0,
	3737, 0, 0, 0, 3736, 0, 0, 0, 0, 2223,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 3552, 0, 0, 0, 0, 3036, 3037, 3038, 0,
	75, 0, 0, 3035, 3033, 3034, 3026, 3027, 3028, 3029,
	3031, 3032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 0, 3928, 3929, 3930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 1702, 0, 0, 0, 0, 0, 2269, 0, 0,
	3939, 3940, 0, 0, 0, 0, 0, 1043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3948, 0,
	0, 247, 1243, 1243, 247, 0, 0, 88, 0, 0,
	0, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 89, 100, 0, 0,
	0, 0, 245, 245, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3552, 0, 0, 0, 0, 0,
	0, 0, 3987, 0, 0, 0, 247, 0, 0, 727,
	247, 0, 3994, 0, 0, 996, 0, 247, 0, 0,
	0, 0, 0, 247, 4002, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 727, 0, 0, 0, 247, 0,
	247, 0, 0, 0, 0, 0, 247, 0, 0, 1698,
	1694, 0, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687,
	1688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 70, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 2545, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3552, 3552, 0, 0, 75, 0, 1243, 0, 1243,
	0, 1243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 1243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1243, 247,
	0, 0, 247, 0, 0, 82, 0, 0, 0, 0,
	1243, 0, 1243, 1243, 1243, 1166, 0, 0, 2092, 0,
	0, 0, 4105, 247, 0, 4108, 0, 0, 0, 0,
	0, 0, 93, 0, 247, 247, 0, 247, 0, 247,
	0, 247, 88, 247, 3552, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 89, 100, 0, 0, 786, 0, 0, 0, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	96, 247, 99, 0, 0, 996, 996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3552, 0, 0, 3552,
	0, 0, 0, 0, 0, 0, 215, 0, 788, 0,
	0, 0, 0, 1342, 821, 0, 90, 0, 141, 789,
	1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 1243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 1714, 1709, 0, 2269, 0, 0, 217, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	809, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 143, 2092, 0, 0, 0, 996, 791,
	0, 0, 0, 0, 1680, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 1700, 0, 216, 0, 0, 0,
	0, 0, 792, 1697, 0, 2786, 0, 209, 1482, 0,
	0, 0, 1482, 0, 1482, 210, 1243, 0, 0, 0,
	0, 0, 793, 0, 0, 794, 4245, 4245, 4245, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 4266,
	0, 0, 2839, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 0, 0,
	0, 2849, 0, 2852, 1703, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 1686, 1243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4245, 0, 0,
	0, 0, 0, 0, 176, 96, 0, 99, 247, 0,
	0, 1243, 2875, 1342, 2877, 1342, 0, 2880, 0, 1718,
	0, 805, 1728, 247, 0, 0, 0, 0, 1708, 1710,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 141, 1724, 3552, 1725, 3552, 0, 0,
	1482, 0, 0, 1695, 1696, 0, 0, 0, 2908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1716, 0, 217, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	796, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 4245, 4377, 0, 0,
	0, 0, 0, 180, 4381, 0, 0, 815, 1243, 797,
	0, 216, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 209, 247, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 247, 798,
	0, 0, 1518, 813, 814, 811, 0, 0, 0, 0,
	0, 806, 0, 0, 799, 247, 1243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1243, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	247, 245, 245, 0, 1707, 245, 245, 0, 0, 0,
	0, 800, 807, 0, 0, 0, 0, 0, 0, 0,
	801, 727, 0, 0, 1702, 0, 0, 0, 247, 0,
	0, 1243, 0, 0, 802, 0, 247, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 714, 0, 1032, 105, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 0, 247, 245, 245,
	247, 0, 0, 0, 247, 0, 247, 0, 0, 0,
	0, 0, 0, 247, 247, 0, 0, 0, 1243, 1243,
	0, 1243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 1243, 245, 245, 0, 0, 245, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 1243, 0,
	0, 245, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 105, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 247, 247, 247, 0, 247,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 245, 0, 0, 0,
	247, 0, 0, 0, 971, 0, 0, 3199, 3201, 0,
	2092, 0, 0, 245, 0, 991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 1679, 0, 1153, 0, 0, 1721, 1722, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3270, 0, 0, 0,
	3274, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	1342, 1342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1243, 1842, 0, 1166, 0, 0, 0, 245, 3372,
	0, 1342, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 1728, 245, 1842, 245, 0, 0, 1708, 1710,
	727, 0, 0, 1243, 0, 727, 0, 0, 0, 0,
	0, 745, 0, 0, 3384, 0, 0, 0, 1243, 0,
	0, 0, 0, 1695, 1696, 0, 0, 0, 0, 0,
	0, 747, 0, 0, 0, 0, 748, 0, 0, 1243,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1243, 1243, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 247, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	0, 750, 0, 0, 0, 0, 751, 0, 0, 247,
	247, 0, 247, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 752, 247, 1243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1243, 771, 0, 0, 0, 0,
	0, 0, 0, 1243, 0, 0, 0, 0, 1243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	245, 1243, 0, 727, 0, 0, 247, 1243, 753, 1243,
	0, 754, 0, 1243, 1702, 0, 0, 0, 0, 0,
	247, 0, 775, 0, 0, 0, 713, 0, 247, 0,
	0, 1243, 247, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 247, 247, 0, 0, 0, 245, 0, 245,
	0, 0, 0, 0, 0, 245, 0, 0, 774, 0,
	0, 1243, 1243, 0, 0, 0, 0, 769, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 1243, 0, 0, 0, 0, 245, 0,
	0, 105, 0, 105, 1717, 105, 0, 0, 0, 0,
	0, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 0, 0, 1243,
	0, 247, 1243, 247, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 245, 0,
	0, 245, 0, 0, 0, 3628, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 758, 0, 0, 0, 2092,
	105, 0, 245, 3643, 991, 105, 105, 0, 0, 0,
	0, 0, 0, 727, 245, 0, 245, 105, 245, 105,
	245, 0, 245, 1243, 0, 0, 0, 0, 712, 105,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 744,
	1243, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 764, 0, 0, 0, 0, 3692, 0,
	0, 0, 0, 251, 0, 0, 0, 760, 0, 0,
	778, 105, 777, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	762, 0, 0, 0, 0, 770, 0, 0, 0, 0,
	0, 779, 0, 776, 0, 0, 0, 0, 0, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 971,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1243, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3815, 245, 1170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	0, 0, 245, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1243, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	1840, 0, 1843, 0, 105, 0, 0, 247, 0, 245,
	0, 0, 0, 2092, 0, 0, 247, 0, 0, 245,
	0, 247, 3884, 0, 0, 247, 0, 0, 0, 0,
	0, 1243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 1243, 1243,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1243, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	247, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	3969, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 245,
	0, 0, 0, 245, 0, 245, 0, 0, 0, 0,
	2092, 0, 245, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1243, 0, 1243, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	0, 0, 245, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4083, 1342, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 245, 245, 245, 245, 0, 245, 1243,
	245, 247, 0, 247, 0, 0, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 1243, 1243, 0, 0, 245,
	0, 0, 0, 0, 991, 0, 991, 0, 0, 0,
	0, 0, 1243, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 1243, 247, 0, 0, 0, 1243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4150, 0, 0, 0, 0, 1243, 1243, 1243, 0, 0,
	0, 0, 0, 1170, 0, 0, 1243, 1170, 0, 0,
	0, 1170, 0, 0, 0, 0, 1240, 0, 0, 0,
	1240, 0, 0, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1243, 0, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 0, 4192, 0, 0, 0, 0, 1170,
	0, 0, 0, 0, 0, 0, 0, 1243, 0, 1243,
	0, 4214, 1360, 0, 0, 0, 971, 0, 0, 971,
	971, 0, 0, 1243, 0, 0, 0, 0, 0, 4226,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1170, 0, 0, 0, 0, 0, 1170,
	0, 0, 0, 1170, 0, 0, 1360, 0, 0, 0,
	0, 0, 1360, 0, 0, 0, 1360, 1170, 0, 0,
	0, 0, 0, 0, 2336, 1243, 0, 0, 0, 0,
	1360, 0, 247, 0, 0, 0, 1243, 1243, 0, 1166,
	991, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 1748, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1170,
	0, 0, 0, 0, 1243, 0, 0, 1243, 0, 0,
	0, 0, 1360, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 245, 245,
	0, 245, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 1243, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 1243, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 245, 0, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 245, 0, 0,
	0, 245, 245, 0, 0, 1170, 0, 1170, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 1170, 0, 105, 0, 105, 0, 245, 0,
	0, 0, 0, 0, 0, 1240, 0, 1898, 0, 0,
	0, 1170, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 719, 1170, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 105, 0,
	0, 105, 0, 0, 0, 0, 1170, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 0, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 245, 1678, 1679, 0, 1711,
	1712, 1713, 1721, 1722, 1723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 1709,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1170, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 1170, 0, 0, 1360, 1360, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1048, 0, 0,
	1703, 1704, 1705, 1706, 0, 0, 0, 0, 0, 0,
	1686, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	1166, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 0, 1728, 0,
	0, 0, 0, 0, 1708, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 1725, 0, 0, 0, 0, 0, 0, 1695,
	1696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 1170,
	0, 1170, 0, 1170, 0, 0, 0, 0, 0, 0,
	0, 1701, 1360, 0, 1360, 0, 1360, 0, 0, 1170,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 0, 1360, 1360, 0, 0, 0, 0, 0, 0,
	0, 0, 1170, 1360, 1170, 1170, 1170, 0, 0, 0,
	0, 0, 0, 1726, 0, 1360, 0, 1360, 1360, 1360,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 1153, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 1153, 0, 0, 245, 0, 0, 0, 0,
	245, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	1898, 1170, 0, 0, 1678, 1679, 0, 1711, 1712, 1713,
	1721, 1722, 1723, 0, 1240, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 1709, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 245,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 105,
	105, 0, 0, 105, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 1170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1240, 0, 0, 0, 105, 105, 0, 0, 105,
	1717, 0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694,
	0, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688,
	0, 0, 0, 0, 2975, 0, 0, 0, 2976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 0, 0, 0, 0, 0, 0, 1170, 1703, 1704,
	1705, 1706, 0, 0, 0, 0, 1170, 0, 1686, 0,
	1240, 1166, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 1240, 0, 0, 0,
	0, 0, 0, 1718, 0, 1153, 1728, 0, 991, 0,
	0, 0, 1708, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	1725, 0, 0, 0, 0, 0, 0, 1695, 1696, 0,
	105, 105, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 245, 0, 0, 0, 0, 0,
	1898, 0, 0, 245, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1240, 1170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1170, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 1241, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 1170, 0, 1170, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 1360, 1360, 1170, 1360, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 0, 1360, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 1360, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 1153,
	0, 245, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691,
	1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0,
	1361, 0, 4185, 0, 0, 0, 1361, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1170, 1170, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 1240, 1170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 1240, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 0, 0, 0, 1898, 0, 0,
	0, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 1170, 1170, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 1360,
	0, 0, 0, 105, 0, 0, 0, 0, 1361, 1153,
	0, 0, 0, 0, 1898, 0, 0, 1153, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 0, 0, 1360,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 1240,
	1170, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 1678, 1679, 1360, 1711, 1712, 1713, 1721, 1722, 1723,
	0, 0, 0, 1170, 0, 0, 0, 0, 0, 1170,
	0, 1170, 0, 0, 1709, 1170, 1360, 0, 0, 0,
	0, 1681, 1360, 0, 1360, 0, 0, 0, 1240, 1727,
	105, 0, 0, 1170, 0, 719, 0, 0, 0, 0,
	0, 105, 0, 0, 1170, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 1360, 0, 0,
	1170, 0, 0, 105, 0, 1700, 0, 0, 0, 0,
	0, 1361, 1361, 0, 1697, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1170, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 1360, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 0, 0, 1703, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 1170, 0, 0, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 1240, 0, 0,
	0, 1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723,
	1718, 0, 0, 1728, 0, 0, 0, 0, 0, 1708,
	1710, 0, 0, 1714, 1709, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 1724, 0, 1725, 1898, 1727,
	0, 0, 0, 0, 1695, 1696, 1361, 0, 1361, 0,
	1361, 0, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 1680, 1361, 1361, 1240, 0,
	0, 0, 1170, 0, 0, 1700, 1701, 1361, 0, 0,
	0, 0, 1898, 1898, 1697, 1240, 0, 0, 0, 1361,
	0, 1361, 1361, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 2336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 1686, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1170, 1170, 1707, 0, 0, 0, 0,
	1718, 0, 0, 1728, 0, 0, 0, 0, 1241, 1708,
	1710, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 1170, 1725, 0, 0,
	0, 0, 0, 0, 1695, 1696, 0, 0, 0, 1240,
	1719, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 1692,
	1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682,
	1683, 1684, 1685, 1687, 1688, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 1360, 0,
	105, 0, 0, 105, 1898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1170, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 1170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1170,
	1170, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1360, 1360, 1360, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 0, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 1170, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 1692,
	1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682,
	1683, 1684, 1685, 1687, 1688, 0, 0, 0, 0, 2358,
	0, 0, 0, 2359, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1170, 0, 0, 0, 0, 0,
	1361, 0, 1170, 0, 0, 0, 1170, 0, 1170, 0,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 1240,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 1361, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 0, 0, 1361, 0, 1170,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 1170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1360, 1360, 0, 0, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 1360, 0, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 1240, 0,
	0, 1678, 1679, 1360, 1711, 1712, 1713, 1721, 1722, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 1709, 0, 0, 1170, 1170, 1170,
	0, 1681, 0, 0, 0, 0, 0, 0, 1170, 1727,
	1360, 1360, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 1170, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 1240, 0, 0, 1697, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1170,
	0, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 1360, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1898, 0, 0, 0, 0, 1703, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1170, 1170,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1718, 1360, 1360, 1728, 0, 0, 0, 0, 0, 1708,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 1170, 1725, 0, 1170,
	0, 0, 0, 0, 1695, 1696, 0, 0, 0, 1240,
	0, 0, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 1678, 1679, 0, 1711, 1712, 1713,
	1721, 1722, 1723, 0, 0, 0, 0, 1241, 1726, 0,
	0, 0, 0, 0, 0, 0, 1714, 1709, 0, 0,
	0, 0, 0, 0, 1681, 0, 1715, 0, 1241, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 1361, 1170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1170,
	1170, 0, 1360, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 1360, 1360, 0, 0, 1170, 0, 0, 0,
	0, 0, 0, 1361, 0, 0, 0, 0, 0, 1360,
	1719, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 1361, 1703, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 1361, 0, 1361, 0,
	0, 0, 1241, 1678, 1679, 0, 1711, 1712, 1713, 1721,
	1722, 1723, 0, 1718, 0, 0, 1728, 0, 0, 0,
	1361, 0, 1708, 1710, 0, 1714, 1709, 0, 0, 0,
	0, 1361, 0, 1681, 0, 0, 0, 0, 1724, 0,
	1725, 1727, 0, 0, 0, 1717, 0, 1695, 1696, 1692,
	1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682,
	1683, 1684, 1685, 1687, 1688, 1716, 0, 1680, 0, 0,
	0, 0, 0, 3735, 0, 0, 0, 1700, 0, 1701,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	1361, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 1241, 0, 0, 0, 0, 0, 1703, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 1709, 0, 0, 0, 0, 1707, 0,
	1681, 0, 1718, 0, 0, 1728, 0, 0, 1727, 0,
	0, 1708, 1710, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 1241, 0, 0, 0, 0, 1724, 0, 1725,
	0, 0, 0, 0, 1680, 0, 1695, 1696, 0, 1241,
	0, 0, 0, 1719, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1716, 0, 0, 0, 1678, 1679,
	0, 1711, 1712, 1713, 1721, 1722, 1723, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 1709, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 1703, 1704, 1705, 1706, 1715, 0,
	0, 0, 1700, 0, 1686, 0, 0, 0, 1717, 0,
	0, 1697, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691,
	1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0,
	0, 0, 0, 0, 0, 0, 3402, 0, 0, 1718,
	0, 0, 1728, 0, 0, 0, 0, 0, 1708, 1710,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 1241, 1724, 0, 1725, 0, 0, 0,
	0, 0, 0, 1695, 1696, 0, 0, 1702, 0, 0,
	0, 0, 1703, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 1716, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	1728, 0, 0, 0, 0, 0, 1708, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 1724, 0, 1725, 0, 0, 0, 0, 0,
	0, 1695, 1696, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 1701, 0, 0, 0, 1717, 0, 0,
	0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 0,
	0, 0, 0, 0, 1707, 2978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	1361, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 1361, 1361, 1361, 0,
	1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 0,
	0, 0, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 1709, 0, 0, 0, 0, 0, 0,
	1681, 1241, 1707, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 1719, 0, 0,
	0, 0, 0, 1697, 1717, 0, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 0, 0, 0,
	0, 0, 2977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 0, 1717, 1241, 0, 1241, 1692, 1693, 1699, 1720,
	1698, 1694, 0, 1691, 1689, 1690, 1682, 1683, 1684, 1685,
	1687, 1688, 0, 0, 0, 0, 0, 0, 1241, 1718,
	2974, 0, 1728, 0, 0, 0, 0, 0, 1708, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 1725, 0, 0, 0,
	0, 0, 0, 1695, 1696, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 1716, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 1361, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 1241, 0, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 1361, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 0, 0, 0,
	0, 0, 2973, 1241, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 1361, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 1244, 262, 263,
	1245, 1246, 1247, 1361, 1248, 579, 1249, 1250, 1251, 1252,
	264, 265, 1110, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 1253, 584, 273, 274, 275,
	276, 277, 278, 1254, 1255, 0, 279, 585, 586, 587,
	1256, 280, 281, 588, 1257, 1324, 1258, 282, 283, 284,
	285, 286, 287, 288, 0, 1259, 290, 291, 292, 289,
	293, 1260, 294, 0, 295, 296, 297, 298, 299, 300,
	1261, 301, 302, 303, 1111, 304, 305, 1262, 1263, 1265,
	1264, 1266, 1267, 1268, 306, 307, 308, 309, 0, 310,
	589, 590, 1269, 314, 311, 312, 1270, 315, 313, 1271,
	316, 317, 318, 1272, 1273, 319, 320, 321, 1274, 322,
	323, 1275, 324, 325, 326, 1276, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 1277, 252, 1278, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 1279, 344, 1280, 1281,
	1112, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 1282, 355, 597, 1283, 598, 356, 1284,
	357, 358, 359, 360, 361, 599, 600, 601, 436, 1114,
	362, 363, 1285, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 1286, 1113, 370, 602, 603, 1287,
	604, 1288, 372, 373, 1115, 605, 1116, 374, 375, 376,
	1117, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 1289, 384, 386, 385, 1290, 387, 606, 1118, 388,
	389, 1119, 1291, 390, 0, 0, 0, 391, 392, 1292,
	1293, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1120, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1121, 423, 1294, 254, 1122, 433, 434,
	1295, 607, 435, 608, 437, 438, 1296, 0, 439, 0,
	1297, 1298, 441, 442, 443, 1299, 1300, 444, 445, 609,
	1123, 446, 1124, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 1301, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 1302, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 1303, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 1304, 490, 491, 492, 1125, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 1305, 513, 514, 512,
	515, 516, 517, 1306, 518, 502, 503, 519, 520, 1126,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 1307,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 1308, 539, 540, 0, 538, 1309, 541,
	542, 543, 544, 545, 546, 334, 547, 1310, 548, 620,
	621, 622, 623, 1311, 557, 1312, 549, 550, 551, 624,
	552, 625, 1313, 553, 554, 555, 556, 0, 558, 559,
	1314, 1315, 560, 561, 562, 564, 565, 563, 566, 1316,
	567, 1317, 0, 568, 569, 570, 626, 627, 628, 1318,
	572, 571, 573, 629, 1319, 1320, 1321, 1322, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 2523, 0, 0, 0, 0,
	0, 0, 0, 2524, 255, 257, 256, 258, 259, 260,
	261, 1244, 262, 263, 1245, 1246, 1247, 0, 1248, 579,
	1249, 1250, 1251, 1252, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 1253,
	584, 273, 274, 275, 276, 277, 278, 1254, 1255, 0,
	279, 585, 586, 587, 1256, 280, 281, 588, 1257, 1324,
	1258, 282, 283, 284, 285, 286, 287, 288, 0, 1259,
	290, 291, 292, 289, 293, 1260, 294, 0, 295, 296,
	297, 298, 299, 300, 1261, 301, 302, 303, 1111, 304,
	305, 1262, 1263, 1265, 1264, 1266, 1267, 1268, 306, 307,
	308, 309, 0, 310, 589, 590, 1269, 314, 311, 312,
	1270, 315, 313, 1271, 316, 317, 318, 1272, 1273, 319,
	320, 321, 1274, 322, 323, 1275, 324, 325, 326, 1276,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 1277, 252, 1278, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	1279, 344, 1280, 1281, 1112, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 1282, 355, 597,
	1283, 598, 356, 1284, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 1114, 362, 363, 1285, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 1286, 1113,
	370, 602, 603, 1287, 604, 1288, 372, 373, 1115, 605,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 1289, 384, 386, 385, 1290,
	387, 606, 1118, 388, 389, 1119, 1291, 390, 0, 0,
	0, 391, 392, 1292, 1293, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1294,
	254, 1122, 433, 434, 1295, 607, 435, 608, 437, 438,
	1296, 0, 439, 0, 1297, 1298, 441, 442, 443, 1299,
	1300, 444, 445, 609, 1123, 446, 1124, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 1301,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 1302, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	1303, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 1304, 490, 491,
	492, 1125, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	1305, 513, 514, 512, 515, 516, 517, 1306, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 1307, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 1308, 539, 540,
	0, 538, 1309, 541, 542, 543, 544, 545, 546, 334,
	547, 1310, 548, 620, 621, 622, 623, 1311, 557, 1312,
	549, 550, 551, 624, 552, 625, 1313, 553, 554, 555,
	556, 0, 558, 559, 1314, 1315, 560, 561, 562, 564,
	565, 563, 566, 1316, 567, 1317, 0, 568, 569, 570,
	626, 627, 628, 1318, 572, 571, 573, 629, 1319, 1320,
	1321, 1322, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 3410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3412, 255, 257, 256, 258,
	259, 260, 261, 1244, 262, 263, 1245, 1246, 1247, 0,
	1248, 579, 1249, 1250, 1251, 1252, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 1253, 584, 273, 274, 275, 276, 277, 278, 1254,
	1255, 0, 279, 585, 586, 587, 1256, 280, 281, 588,
	1257, 1324, 1258, 282, 283, 284, 285, 286, 287, 288,
	0, 1259, 290, 291, 292, 289, 293, 1260, 294, 0,
	295, 296, 297, 298, 299, 300, 1261, 301, 302, 303,
	1111, 304, 305, 1262, 1263, 1265, 1264, 1266, 1267, 1268,
	306, 307, 308, 309, 0, 310, 589, 590, 1269, 314,
	311, 312, 1270, 315, 313, 1271, 316, 317, 318, 1272,
	1273, 319, 320, 321, 1274, 322, 323, 1275, 324, 325,
	326, 1276, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 1277, 252, 1278,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 1279, 344, 1280, 1281, 1112, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 1282,
	355, 597, 1283, 598, 356, 1284, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 1114, 362, 363, 1285, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	1286, 1113, 370, 602, 603, 1287, 604, 1288, 372, 373,
	1115, 605, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1289, 384, 386,
	385, 1290, 387, 606, 1118, 388, 389, 1119, 1291, 390,
	0, 0, 0, 391, 392, 1292, 1293, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1294, 254, 1122, 433, 434, 1295, 607, 435, 608,
	437, 438, 1296, 0, 439, 0, 1297, 1298, 441, 442,
	443, 1299, 1300, 444, 445, 609, 1123, 446, 1124, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 1301, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 1302, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 1303, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 1304,
	490, 491, 492, 1125, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 1305, 513, 514, 512, 515, 516, 517, 1306,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 1307, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 1308,
	539, 540, 0, 538, 1309, 541, 542, 543, 544, 545,
	546, 334, 547, 1310, 548, 620, 621, 622, 623, 1311,
	557, 1312, 549, 550, 551, 624, 552, 625, 1313, 553,
	554, 555, 556, 0, 558, 559, 1314, 1315, 560, 561,
	562, 564, 565, 563, 566, 1316, 567, 1317, 0, 568,
	569, 570, 626, 627, 628, 1318, 572, 571, 573, 629,
	1319, 1320, 1321, 1322, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3763, 255, 257, 256, 258, 259, 260, 261, 1244,
	262, 263, 1245, 1246, 1247, 0, 1248, 579, 1249, 1250,
	1251, 1252, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 1253, 584, 273,
	274, 275, 276, 277, 278, 1254, 1255, 0, 279, 585,
	586, 587, 1256, 280, 281, 588, 1257, 1324, 1258, 282,
	283, 284, 285, 286, 287, 288, 0, 1259, 290, 291,
	292, 289, 293, 1260, 294, 0, 295, 296, 297, 298,
	299, 300, 1261, 301, 302, 303, 1111, 304, 305, 1262,
	1263, 1265, 1264, 1266, 1267, 1268, 306, 307, 308, 309,
	0, 310, 589, 590, 1269, 314, 311, 312, 1270, 315,
	313, 1271, 316, 317, 318, 1272, 1273, 319, 320, 321,
	1274, 322, 323, 1275, 324, 325, 326, 1276, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 1277, 252, 1278, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 1279, 344,
	1280, 1281, 1112, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 1282, 355, 597, 1283, 598,
	356, 1284, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 1114, 362, 363, 1285, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 1286, 1113, 370, 602,
	603, 1287, 604, 1288, 372, 373, 1115, 605, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 1289, 384, 386, 385, 1290, 387, 606,
	1118, 388, 389, 1119, 1291, 390, 0, 0, 0, 391,
	392, 1292, 1293, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 1294, 254, 1122,
	433, 434, 1295, 607, 435, 608, 437, 438, 1296, 0,
	439, 0, 1297, 1298, 441, 442, 443, 1299, 1300, 444,
	445, 609, 1123, 446, 1124, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 1301, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 1302, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 1303, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 1304, 490, 491, 492, 1125,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 1305, 513,
	514, 512, 515, 516, 517, 1306, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 1307, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 1308, 539, 540, 0, 538,
	1309, 541, 542, 543, 544, 545, 546, 334, 547, 1310,
	548, 620, 621, 622, 623, 1311, 557, 1312, 549, 550,
	551, 624, 552, 625, 1313, 553, 554, 555, 556, 0,
	558, 559, 1314, 1315, 560, 561, 562, 564, 565, 563,
	566, 1316, 567, 1317, 0, 568, 569, 570, 626, 627,
	628, 1318, 572, 571, 573, 629, 1319, 1320, 1321, 1322,
	574, 575, 630, 576, 577, 578, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3934, 255, 257, 256, 258, 259, 260, 261,
	1244, 262, 263, 1245, 1246, 1247, 0, 1248, 579, 1249,
	1250, 1251, 1252, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 1253, 584,
	273, 274, 275, 276, 277, 278, 1254, 1255, 0, 279,
	585, 586, 587, 1256, 280, 281, 588, 1257, 1324, 1258,
	282, 283, 284, 285, 286, 287, 288, 0, 1259, 290,
	291, 292, 289, 293, 1260, 294, 0, 295, 296, 297,
	298, 299, 300, 1261, 301, 302, 303, 1111, 304, 305,
	1262, 1263, 1265, 1264, 1266, 1267, 1268, 306, 307, 308,
	309, 0, 310, 589, 590, 1269, 314, 311, 312, 1270,
	315, 313, 1271, 316, 317, 318, 1272, 1273, 319, 320,
	321, 1274, 322, 323, 1275, 324, 325, 326, 1276, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 1277, 252, 1278, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 1279,
	344, 1280, 1281, 1112, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 1282, 355, 597, 1283,
	598, 356, 1284, 357, 358, 359, 360, 361, 599, 600,
	601, 436, 1114, 362, 363, 1285, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 1286, 1113, 370,
	602, 603, 1287, 604, 1288, 372, 373, 1115, 605, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 1289, 384, 386, 385, 1290, 387,
	606, 1118, 388, 389, 1119, 1291, 390, 0, 0, 0,
	391, 392, 1292, 1293, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1294, 254,
	1122, 433, 434, 1295, 607, 435, 608, 437, 438, 1296,
	0, 439, 0, 1297, 1298, 441, 442, 443, 1299, 1300,
	444, 445, 609, 1123, 446, 1124, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 1301, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 1302, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 1303,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 1304, 490, 491, 492,
	1125, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 1305,
	513, 514, 512, 515, 516, 517, 1306, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 1307, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 1308, 539, 540, 0,
	538, 1309, 541, 542, 543, 544, 545, 546, 334, 547,
	1310, 548, 620, 621, 622, 623, 1311, 557, 1312, 549,
	550, 551, 624, 552, 625, 1313, 553, 554, 555, 556,
	0, 558, 559, 1314, 1315, 560, 561, 562, 564, 565,
	563, 566, 1316, 567, 1317, 0, 568, 569, 570, 626,
	627, 628, 1318, 572, 571, 573, 629, 1319, 1320, 1321,
	1322, 574, 575, 630, 576, 577, 578, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3823, 255, 257, 256, 258, 259, 260,
	261, 1244, 262, 263, 1245, 1246, 1247, 0, 1248, 579,
	1249, 1250, 1251, 1252, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 1253,
	584, 273, 274, 275, 276, 277, 278, 1254, 1255, 0,
	279, 585, 586, 587, 1256, 280, 281, 588, 1257, 1324,
	1258, 282, 283, 284, 285, 286, 287, 288, 0, 1259,
	290, 291, 292, 289, 293, 1260, 294, 0, 295, 296,
	297, 298, 299, 300, 1261, 301, 302, 303, 1111, 304,
	305, 1262, 1263, 1265, 1264, 1266, 1267, 1268, 306, 307,
	308, 309, 0, 310, 589, 590, 1269, 314, 311, 312,
	1270, 315, 313, 1271, 316, 317, 318, 1272, 1273, 319,
	320, 321, 1274, 322, 323, 1275, 324, 325, 326, 1276,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 1277, 252, 1278, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	1279, 344, 1280, 1281, 1112, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 1282, 355, 597,
	1283, 598, 356, 1284, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 1114, 362, 363, 1285, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 1286, 1113,
	370, 602, 603, 1287, 604, 1288, 372, 373, 1115, 605,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 1289, 384, 386, 385, 1290,
	387, 606, 1118, 388, 389, 1119, 1291, 390, 0, 0,
	0, 391, 392, 1292, 1293, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1294,
	254, 1122, 433, 434, 1295, 607, 435, 608, 437, 438,
	1296, 0, 439, 0, 1297, 1298, 441, 442, 443, 1299,
	1300, 444, 445, 609, 1123, 446, 1124, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 1301,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 1302, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	1303, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 1304, 490, 491,
	492, 1125, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	1305, 513, 514, 512, 515, 516, 517, 1306, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 1307, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 1308, 539, 540,
	0, 538, 1309, 541, 542, 543, 544, 545, 546, 334,
	547, 1310, 548, 620, 621, 622, 623, 1311, 557, 1312,
	549, 550, 551, 624, 552, 625, 1313, 553, 554, 555,
	556, 0, 558, 559, 1314, 1315, 560, 561, 562, 564,
	565, 563, 566, 1316, 567, 1317, 0, 568, 569, 570,
	626, 627, 628, 1318, 572, 571, 573, 629, 1319, 1320,
	1321, 1322, 574, 575, 630, 576, 577, 578, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3693, 255, 257, 256, 258, 259,
	260, 261, 1244, 262, 263, 1245, 1246, 1247, 0, 1248,
	579, 1249, 1250, 1251, 1252, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	1253, 584, 273, 274, 275, 276, 277, 278, 1254, 1255,
	0, 279, 585, 586, 587, 1256, 280, 281, 588, 1257,
	1324, 1258, 282, 283, 284, 285, 286, 287, 288, 0,
	1259, 290, 291, 292, 289, 293, 1260, 294, 0, 295,
	296, 297, 298, 299, 300, 1261, 301, 302, 303, 1111,
	304, 305, 1262, 1263, 1265, 1264, 1266, 1267, 1268, 306,
	307, 308, 309, 0, 310, 589, 590, 1269, 314, 311,
	312, 1270, 315, 313, 1271, 316, 317, 318, 1272, 1273,
	319, 320, 321, 1274, 322, 323, 1275, 324, 325, 326,
	1276, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 1277, 252, 1278, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 1279, 344, 1280, 1281, 1112, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 1282, 355,
	597, 1283, 598, 356, 1284, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 1114, 362, 363, 1285, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 1286,
	1113, 370, 602, 603, 1287, 604, 1288, 372, 373, 1115,
	605, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 1289, 384, 386, 385,
	1290, 387, 606, 1118, 388, 389, 1119, 1291, 390, 0,
	0, 0, 391, 392, 1292, 1293, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	1294, 254, 1122, 433, 434, 1295, 607, 435, 608, 437,
	438, 1296, 0, 439, 0, 1297, 1298, 441, 442, 443,
	1299, 1300, 444, 445, 609, 1123, 446, 1124, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	1301, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 1302, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 1303, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 1304, 490,
	491, 492, 1125, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 1305, 513, 514, 512, 515, 516, 517, 1306, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 1307, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 1308, 539,
	540, 0, 538, 1309, 541, 542, 543, 544, 545, 546,
	334, 547, 1310, 548, 620, 621, 622, 623, 1311, 557,
	1312, 549, 550, 551, 624, 552, 625, 1313, 553, 554,
	555, 556, 0, 558, 559, 1314, 1315, 560, 561, 562,
	564, 565, 563, 566, 1316, 567, 1317, 0, 568, 569,
	570, 626, 627, 628, 1318, 572, 571, 573, 629, 1319,
	1320, 1321, 1322, 574, 575, 630, 576, 577, 578, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3428, 255, 257, 256, 258,
	259, 260, 261, 1244, 262, 263, 1245, 1246, 1247, 0,
	1248, 579, 1249, 1250, 1251, 1252, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 1253, 584, 273, 274, 275, 276, 277, 278, 1254,
	1255, 0, 279, 585, 586, 587, 1256, 280, 281, 588,
	1257, 1324, 1258, 282, 283, 284, 285, 286, 287, 288,
	0, 1259, 290, 291, 292, 289, 293, 1260, 294, 0,
	295, 296, 297, 298, 299, 300, 1261, 301, 302, 303,
	1111, 304, 305, 1262, 1263, 1265, 1264, 1266, 1267, 1268,
	306, 307, 308, 309, 0, 310, 589, 590, 1269, 314,
	311, 312, 1270, 315, 313, 1271, 316, 317, 318, 1272,
	1273, 319, 320, 321, 1274, 322, 323, 1275, 324, 325,
	326, 1276, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 1277, 252, 1278,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 1279, 344, 1280, 1281, 1112, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 1282,
	355, 597, 1283, 598, 356, 1284, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 1114, 362, 363, 1285, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	1286, 1113, 370, 602, 603, 1287, 604, 1288, 372, 373,
	1115, 605, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1289, 384, 386,
	385, 1290, 387, 606, 1118, 388, 389, 1119, 1291, 390,
	0, 0, 0, 391, 392, 1292, 1293, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1294, 254, 1122, 433, 434, 1295, 607, 435, 608,
	437, 438, 1296, 0, 439, 0, 1297, 1298, 441, 442,
	443, 1299, 1300, 444, 445, 609, 1123, 446, 1124, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 1301, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 1302, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 1303, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 1304,
	490, 491, 492, 1125, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 1305, 513, 514, 512, 515, 516, 517, 1306,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 1307, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 1308,
	539, 540, 0, 538, 1309, 541, 542, 543, 544, 545,
	546, 334, 547, 1310, 548, 620, 621, 622, 623, 1311,
	557, 1312, 549, 550, 551, 624, 552, 625, 1313, 553,
	554, 555, 556, 0, 558, 559, 1314, 1315, 560, 561,
	562, 564, 565, 563, 566, 1316, 567, 1317, 0, 568,
	569, 570, 626, 627, 628, 1318, 572, 571, 573, 629,
	1319, 1320, 1321, 1322, 574, 575, 630, 576, 577, 578,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3255, 255, 257, 256,
	258, 259, 260, 261, 1244, 262, 263, 1245, 1246, 1247,
	0, 1248, 579, 1249, 1250, 1251, 1252, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 1253, 584, 273, 274, 275, 276, 277, 278,
	1254, 1255, 0, 279, 585, 586, 587, 1256, 280, 281,
	588, 1257, 1324, 1258, 282, 283, 284, 285, 286, 287,
	288, 0, 1259, 290, 291, 292, 289, 293, 1260, 294,
	0, 295, 296, 297, 298, 299, 300, 1261, 301, 302,
	303, 1111, 304, 305, 1262, 1263, 1265, 1264, 1266, 1267,
	1268, 306, 307, 308, 309, 0, 310, 589, 590, 1269,
	314, 311, 312, 1270, 315, 313, 1271, 316, 317, 318,
	1272, 1273, 319, 320, 321, 1274, 322, 323, 1275, 324,
	325, 326, 1276, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 1277, 252,
	1278, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 1279, 344, 1280, 1281, 1112, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	1282, 355, 597, 1283, 598, 356, 1284, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 1114, 362, 363, 1285,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 1286, 1113, 370, 602, 603, 1287, 604, 1288, 372,
	373, 1115, 605, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 1289, 384,
	386, 385, 1290, 387, 606, 1118, 388, 389, 1119, 1291,
	390, 0, 0, 0, 391, 392, 1292, 1293, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1294, 254, 1122, 433, 434, 1295, 607, 435,
	608, 437, 438, 1296, 0, 439, 0, 1297, 1298, 441,
	442, 443, 1299, 1300, 444, 445, 609, 1123, 446, 1124,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 1301, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 1302, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 1303, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	1304, 490, 491, 492, 1125, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 1305, 513, 514, 512, 515, 516, 517,
	1306, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 1307, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	1308, 539, 540, 0, 538, 1309, 541, 542, 543, 544,
	545, 546, 334, 547, 1310, 548, 620, 621, 622, 623,
	1311, 557, 1312, 549, 550, 551, 624, 552, 625, 1313,
	553, 554, 555, 556, 0, 558, 559, 1314, 1315, 560,
	561, 562, 564, 565, 563, 566, 1316, 567, 1317, 0,
	568, 569, 570, 626, 627, 628, 1318, 572, 571, 573,
	629, 1319, 1320, 1321, 1322, 574, 575, 630, 576, 577,
	578, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 255, 257,
	256, 258, 259, 260, 261, 1244, 262, 263, 1245, 1246,
	1247, 0, 1248, 579, 1249, 1250, 1251, 1252, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 1253, 584, 273, 274, 275, 276, 277,
	278, 1254, 1255, 0, 279, 585, 586, 587, 1256, 280,
	281, 588, 1257, 1324, 1258, 282, 283, 284, 285, 286,
	287, 288, 0, 1259, 290, 291, 292, 289, 293, 1260,
	294, 0, 295, 296, 297, 298, 299, 300, 1261, 301,
	302, 303, 1111, 304, 305, 1262, 1263, 1265, 1264, 1266,
	1267, 1268, 306, 307, 308, 309, 0, 310, 589, 590,
	1269, 314, 311, 312, 1270, 315, 313, 1271, 316, 317,
	318, 1272, 1273, 319, 320, 321, 1274, 322, 323, 1275,
	324, 325, 326, 1276, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 1277,
	252, 1278, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 1279, 344, 1280, 1281, 1112, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 1282, 355, 597, 1283, 598, 356, 1284, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 1114, 362, 363,
	1285, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 1286, 1113, 370, 602, 603, 1287, 604, 1288,
	372, 373, 1115, 605, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 1289,
	384, 386, 385, 1290, 387, 606, 1118, 388, 389, 1119,
	1291, 390, 0, 0, 0, 391, 392, 1292, 1293, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 1294, 254, 1122, 433, 434, 1295, 607,
	435, 608, 437, 438, 1296, 0, 439, 0, 1297, 1298,
	441, 442, 443, 1299, 1300, 444, 445, 609, 1123, 446,
	1124, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 1301, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 1302,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 1303, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 1304, 490, 491, 492, 1125, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 1305, 513, 514, 512, 515, 516,
	517, 1306, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 1307, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 1308, 539, 540, 0, 538, 1309, 541, 542, 543,
	544, 545, 546, 334, 547, 1310, 548, 620, 621, 622,
	623, 1311, 557, 1312, 549, 550, 551, 624, 552, 625,
	1313, 553, 554, 555, 556, 0, 558, 559, 1314, 1315,
	560, 561, 562, 564, 565, 563, 566, 1316, 567, 1317,
	0, 568, 569, 570, 626, 627, 628, 1318, 572, 571,
	573, 629, 1319, 1320, 1321, 1322, 574, 575, 630, 576,
	577, 578, 1336, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2054, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 1244, 262,
	263, 1245, 1246, 1247, 0, 1248, 579, 1249, 1250, 1251,
	1252, 264, 265, 1110, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 1253, 584, 273, 274,
	275, 276, 277, 278, 1254, 1255, 0, 279, 585, 586,
	587, 1256, 280, 281, 588, 1257, 1324, 1258, 282, 283,
	284, 285, 286, 287, 288, 0, 1259, 290, 291, 292,
	289, 293, 1260, 294, 0, 295, 296, 297, 298, 299,
	300, 1261, 301, 302, 303, 1111, 304, 305, 1262, 1263,
	1265, 1264, 1266, 1267, 1268, 306, 307, 308, 309, 0,
	310, 589, 590, 1269, 314, 311, 312, 1270, 315, 313,
	1271, 316, 317, 318, 1272, 1273, 319, 320, 321, 1274,
	322, 323, 1275, 324, 325, 326, 1276, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 1277, 252, 1278, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 1279, 344, 1280,
	1281, 1112, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 1282, 355, 597, 1283, 598, 356,
	1284, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	1114, 362, 363, 1285, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 1286, 1113, 370, 602, 603,
	1287, 604, 1288, 372, 373, 1115, 605, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 1289, 384, 386, 385, 1290, 387, 606, 1118,
	388, 389, 1119, 1291, 390, 0, 0, 0, 391, 392,
	1292, 1293, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 1294, 254, 1122, 433,
	434, 1295, 607, 435, 608, 437, 438, 1296, 0, 439,
	0, 1297, 1298, 441, 442, 443, 1299, 1300, 444, 445,
	609, 1123, 446, 1124, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 1301, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 1302, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 1303, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 1304, 490, 491, 492, 1125, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 1305, 513, 514,
	512, 515, 516, 517, 1306, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	1307, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 1308, 539, 540, 0, 538, 1309,
	541, 542, 543, 544, 545, 546, 334, 547, 1310, 548,
	620, 621, 622, 623, 1311, 557, 1312, 549, 550, 551,
	624, 552, 625, 1313, 553, 554, 555, 556, 0, 558,
	559, 1314, 1315, 560, 561, 562, 564, 565, 563, 566,
	1316, 567, 1317, 0, 568, 569, 570, 626, 627, 628,
	1318, 572, 571, 573, 629, 1319, 1320, 1321, 1322, 574,
	575, 630, 576, 577, 578, 1235, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 1244, 262, 263, 1245, 1246, 1247, 0, 1248, 579,
	1249, 1250, 1251, 1252, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 1253,
	584, 273, 274, 275, 276, 277, 278, 1254, 1255, 0,
	279, 585, 586, 587, 1256, 280, 281, 588, 1257, 1324,
	1258, 282, 283, 284, 285, 286, 287, 288, 0, 1259,
	290, 291, 292, 289, 293, 1260, 294, 0, 295, 296,
	297, 298, 299, 300, 1261, 301, 302, 303, 1111, 304,
	305, 1262, 1263, 1265, 1264, 1266, 1267, 1268, 306, 307,
	308, 309, 0, 310, 589, 590, 1269, 314, 311, 312,
	1270, 315, 313, 1271, 316, 317, 318, 1272, 1273, 319,
	320, 321, 1274, 322, 323, 1275, 324, 325, 326, 1276,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 1277, 252, 1278, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	1279, 344, 1280, 1281, 1112, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 1282, 355, 597,
	1283, 598, 356, 1284, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 1114, 362, 363, 1285, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 1286, 1113,
	370, 602, 603, 1287, 604, 1288, 372, 373, 1115, 605,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 1289, 384, 386, 385, 1290,
	387, 606, 1118, 388, 389, 1119, 1291, 390, 0, 0,
	0, 391, 392, 1292, 1293, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1294,
	254, 1122, 433, 434, 1295, 607, 435, 608, 437, 438,
	1296, 0, 439, 0, 1297, 1298, 441, 442, 443, 1299,
	1300, 444, 445, 609, 1123, 446, 1124, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 1301,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 1302, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	1303, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 1304, 490, 491,
	492, 1125, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	1305, 513, 514, 512, 515, 516, 517, 1306, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 1307, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 1308, 539, 540,
	0, 538, 1309, 541, 542, 543, 544, 545, 546, 334,
	547, 1310, 548, 620, 621, 622, 623, 1311, 557, 1312,
	549, 550, 551, 624, 552, 625, 1313, 553, 554, 555,
	556, 0, 558, 559, 1314, 1315, 560, 561, 562, 564,
	565, 563, 566, 1316, 567, 1317, 0, 568, 569, 570,
	626, 627, 628, 1318, 572, 571, 573, 629, 1319, 1320,
	1321, 1322, 574, 575, 630, 576, 577, 578, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 1244, 262, 263, 1245, 1246, 1247, 0, 1248,
	579, 1249, 1250, 1251, 1252, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	1253, 584, 273, 274, 275, 276, 277, 278, 1254, 1255,
	0, 279, 585, 586, 587, 1256, 280, 281, 588, 1257,
	1324, 1258, 282, 283, 284, 285, 286, 287, 288, 0,
	1259, 290, 291, 292, 289, 293, 1260, 294, 0, 295,
	296, 297, 298, 299, 300, 1261, 301, 302, 303, 1111,
	304, 305, 1262, 1263, 1265, 1264, 1266, 1267, 1268, 306,
	307, 308, 309, 0, 310, 589, 590, 1269, 314, 311,
	312, 1270, 315, 313, 1271, 316, 317, 318, 1272, 1273,
	319, 320, 321, 1274, 322, 323, 1275, 324, 325, 326,
	1276, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 1277, 252, 1278, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 1279, 344, 1280, 1281, 1112, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 1282, 355,
	597, 1283, 598, 356, 1284, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 1114, 362, 363, 1285, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 1286,
	1113, 370, 602, 603, 1287, 604, 1288, 372, 373, 1115,
	605, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 1289, 384, 386, 385,
	1290, 387, 606, 1118, 388, 389, 1119, 1291, 390, 0,
	0, 0, 391, 392, 1292, 1293, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	1294, 254, 1122, 433, 434, 1295, 607, 435, 608, 437,
	438, 1296, 0, 439, 0, 1297, 1298, 441, 442, 443,
	1299, 1300, 444, 445, 609, 1123, 446, 1124, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	1301, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 1302, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 1303, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 1304, 490,
	491, 492, 1125, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 1305, 513, 514, 512, 515, 516, 517, 1306, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 1307, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 1308, 539,
	540, 0, 538, 1309, 541, 542, 543, 544, 545, 546,
	334, 547, 1310, 548, 620, 621, 622, 623, 1311, 557,
	1312, 549, 550, 551, 624, 552, 625, 1313, 553, 554,
	555, 556, 0, 558, 559, 1314, 1315, 560, 561, 562,
	564, 565, 563, 566, 1316, 567, 1317, 0, 568, 569,
	570, 626, 627, 628, 1318, 572, 571, 573, 629, 1319,
	1320, 1321, 1322, 574, 575, 630, 576, 577, 578, 2357,
	0, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 2354, 262, 263, 0, 0,
	0, 0, 0, 1070, 1034, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 1083, 0, 271,
	1090, 272, 1089, 0, 1100, 273, 274, 275, 276, 277,
	278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280,
	281, 1076, 0, 1057, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062,
	1061, 1065, 306, 307, 308, 309, 1093, 310, 1087, 1086,
	1007, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 2355, 0, 319, 1078, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1013, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1101, 1102, 1025,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1085,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 1098, 1099, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1108, 0, 1035, 356, 0, 357, 358,
	359, 360, 361, 1071, 1072, 1075, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1113, 370, 1080, 1081, 0, 1041, 0,
	372, 373, 1115, 1073, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1109, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 1064, 1063, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074,
	435, 1088, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 1103, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 1104, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1084,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	1014, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1067, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 1082, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 1129, 533, 534, 535, 536,
	1105, 0, 539, 540, 1002, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 1094, 1095, 1096,
	1097, 0, 557, 0, 549, 550, 551, 1106, 552, 1107,
	1024, 553, 554, 555, 556, 0, 558, 559, 0, 1008,
	560, 561, 562, 564, 565, 563, 566, 1068, 567, 0,
	0, 568, 569, 570, 626, 1091, 1128, 2353, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1005, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 999, 1000, 2356, 0,
	0, 0, 0, 0, 0, 1030, 2352, 0, 992, 1028,
	1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1070, 1034, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 1083, 0, 271, 1090,
	272, 1089, 0, 1100, 273, 274, 275, 276, 277, 278,
	1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280, 281,
	1076, 0, 1057, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061,
	1065, 306, 307, 308, 309, 1093, 310, 1087, 1086, 1007,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1078, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1013, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1101, 1102, 1025, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1085, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	1098, 1099, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1108, 0, 1035, 356, 0, 357, 358, 359,
	360, 361, 1071, 1072, 1075, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1113, 370, 1080, 1081, 0, 1041, 0, 372,
	373, 1115, 1073, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1109, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 1064, 1063, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074, 435,
	1088, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	1103, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 1104, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1084, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 1014,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 215, 513, 514, 512, 515, 516, 517,
	1067, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 1082, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 1129, 533, 534, 535, 536, 1105,
	0, 539, 540, 1002, 538, 217, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 1094, 1095, 1096, 1097,
	0, 557, 0, 549, 550, 551, 1106, 552, 1107, 1024,
	553, 554, 555, 556, 0, 558, 559, 0, 1008, 560,
	561, 562, 564, 565, 563, 566, 1068, 567, 0, 0,
	568, 569, 570, 1516, 1091, 1128, 0, 572, 571, 573,
	629, 0, 0, 0, 209, 574, 575, 630, 576, 577,
	578, 1005, 210, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 999, 1000, 1046, 1018, 1019,
	1020, 1016, 1017, 1029, 1753, 1751, 0, 0, 1028, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1070,
	1034, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 1083, 0, 271, 1090, 272, 1089, 0,
	1100, 273, 274, 275, 276, 277, 278, 1036, 1069, 1003,
	279, 1130, 1131, 587, 0, 280, 281, 1076, 0, 1057,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307,
	308, 309, 1093, 310, 1087, 1086, 1007, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1078, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1013, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1101, 1102, 1025, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1085, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 1098, 1099, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1108,
	0, 1035, 356, 0, 357, 358, 359, 360, 361, 1071,
	1072, 1075, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1113,
	370, 1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1109, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 1064, 1063, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1004,
	254, 1122, 433, 434, 1026, 1074, 435, 1088, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 1103, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	1104, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1084, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 1014, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	215, 513, 514, 512, 515, 516, 517, 1067, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	1082, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 1129, 533, 534, 535, 536, 1105, 0, 539, 540,
	1002, 538, 217, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 1094, 1095, 1096, 1097, 0, 557, 0,
	549, 550, 551, 1106, 552, 1107, 1024, 553, 554, 555,
	556, 0, 558, 559, 0, 1008, 560, 561, 562, 564,
	565, 563, 566, 1068, 567, 0, 0, 568, 569, 570,
	1516, 1091, 1128, 0, 572, 571, 573, 629, 0, 0,
	0, 209, 574, 575, 630, 576, 577, 578, 1005, 210,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 999, 1000, 1046, 1018, 1019, 1020, 1016, 1017,
	1029, 1753, 2930, 0, 0, 1028, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1070, 1034, 0, 0,
	0, 264, 265, 1110, 266, 267, 268, 269, 270, 580,
	1083, 0, 271, 1090, 272, 1089, 0, 1100, 273, 274,
	275, 276, 277, 278, 1036, 1069, 1003, 279, 1130, 1131,
	587, 0, 280, 281, 1076, 0, 1057, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1111, 304, 305, 1060, 1058,
	1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309, 1093,
	310, 1087, 1086, 1007, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1078, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1013,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1101, 1102, 1025, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1085, 0, 0, 0, 343, 0, 344, 0,
	0, 1112, 345, 346, 1098, 1099, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1108, 0, 1035, 356,
	0, 357, 358, 359, 360, 361, 1071, 1072, 1075, 436,
	1114, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1113, 370, 1080, 1081,
	0, 1041, 0, 372, 373, 1115, 1073, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1109, 1118,
	388, 389, 1119, 0, 390, 0, 0, 0, 391, 392,
	1064, 1063, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 1004, 254, 1122, 433,
	434, 1026, 1074, 435, 1088, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 1123, 446, 1124, 1103, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 1104, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1084, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1125, 493,
	494, 495, 496, 1014, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 215, 513, 514,
	512, 515, 516, 517, 1067, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 1082, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 1129, 533,
	534, 535, 536, 1105, 0, 539, 540, 1002, 538, 217,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	1094, 1095, 1096, 1097, 0, 557, 0, 549, 550, 551,
	1106, 552, 1107, 1024, 553, 554, 555, 556, 0, 558,
	559, 0, 1008, 560, 561, 562, 564, 565, 563, 566,
	1068, 567, 0, 0, 568, 569, 570, 1516, 1091, 1128,
	0, 572, 571, 573, 629, 0, 0, 0, 209, 574,
	575, 630, 576, 577, 578, 1005, 210, 0, 0, 0,
	0, 0, 1001, 0, 0, 0, 0, 0, 0, 999,
	1000, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 1753, 1751,
	0, 0, 1028, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1070, 1034, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 1083, 0, 271,
	1090, 272, 1089, 2485, 1100, 273, 274, 275, 276, 277,
	278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280,
	281, 1076, 0, 1057, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062,
	1061, 1065, 306, 307, 308, 309, 1093, 310, 1087, 1086,
	1007, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1078, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1013, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1101, 1102, 1025,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1085,
	0, 0, 0, 343, 0, 344, 0, 2490, 1112, 345,
	346, 1098, 1099, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1108, 0, 1035, 356, 0, 357, 358,
	359, 360, 361, 1071, 1072, 1075, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1113, 370, 1080, 1081, 0, 1041, 0,
	372, 373, 1115, 1073, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 2486, 387, 1109, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 1064, 1063, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074,
	435, 1088, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 1103, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 1104, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1084,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	1014, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1067, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 1082, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 1129, 533, 534, 535, 536,
	1105, 0, 539, 540, 1002, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 1094, 1095, 1096,
	1097, 0, 557, 2487, 549, 550, 551, 1106, 552, 1107,
	1024, 553, 554, 555, 556, 0, 558, 559, 0, 1008,
	560, 561, 562, 564, 565, 563, 566, 1068, 567, 0,
	0, 568, 569, 570, 626, 1091, 1128, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1005, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 999, 1000, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 2402, 1028,
	1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1070, 1034, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 1083, 0, 271, 1090,
	272, 1089, 0, 1100, 273, 274, 275, 276, 277, 278,
	1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280, 281,
	1076, 0, 1057, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061,
	1065, 306, 307, 308, 309, 1093, 310, 1087, 1086, 1007,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1078, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1013, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1101, 1102, 1025, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1085, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	1098, 1099, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1108, 0, 1035, 356, 0, 357, 358, 359,
	360, 361, 1071, 1072, 1075, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1113, 370, 1080, 1081, 0, 1041, 0, 372,
	373, 1115, 1073, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1109, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 1064, 1063, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074, 435,
	1088, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	1103, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 1104, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1084, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 1014,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1067, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 1082, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 1129, 533, 534, 535, 536, 1105,
	0, 539, 540, 1002, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 1094, 1095, 1096, 1097,
	0, 557, 0, 549, 550, 551, 1106, 552, 1107, 1024,
	553, 554, 555, 556, 0, 558, 559, 0, 1008, 560,
	561, 562, 564, 565, 563, 566, 1068, 567, 0, 0,
	568, 569, 570, 626, 1091, 1128, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1005, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 999, 1000, 0, 0, 0,
	0, 0, 0, 0, 1030, 2400, 0, 2399, 1028, 1046,
	1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1070, 1034, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 1083, 0, 271, 1090, 272,
	1089, 0, 1100, 273, 274, 275, 276, 277, 278, 1036,
	1069, 1003, 279, 1130, 1131, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 1093, 310, 1087, 1086, 1007, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1078, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1013, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 1025, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1085, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 1098,
	1099, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 1035, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1113, 370, 1080, 1081, 0, 1041, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1084, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 1014, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 1082, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 1129, 533, 534, 535, 536, 1105, 0,
	539, 540, 1002, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 1094, 1095, 1096, 1097, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 1024, 553,
	554, 555, 556, 0, 558, 559, 0, 1008, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 626, 1091, 1128, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1005, 0, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 999, 1000, 0, 0, 0, 0,
	0, 0, 0, 1030, 2397, 0, 2396, 1028, 1046, 1018,
	1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1070, 1034, 0, 0, 0, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 1083, 0, 271, 1090, 272, 1089,
	0, 1100, 273, 274, 275, 276, 277, 278, 1036, 1069,
	1003, 279, 1130, 1131, 587, 0, 280, 281, 1076, 0,
	1057, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1111,
	304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306,
	307, 308, 309, 1093, 310, 1087, 1086, 1007, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1078, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1013, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1101, 1102, 1025, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1085, 0, 0, 0,
	343, 0, 344, 0, 0, 1112, 345, 346, 1098, 1099,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1108, 0, 1035, 356, 0, 357, 358, 359, 360, 361,
	1071, 1072, 1075, 436, 1114, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1113, 370, 1080, 1081, 0, 1041, 0, 372, 373, 1115,
	1073, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1109, 1118, 388, 389, 1119, 0, 390, 0,
	0, 0, 391, 392, 1064, 1063, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 1123, 446, 1124, 1103, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 1104, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1084, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1125, 493, 494, 495, 496, 1014, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1067, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 1082, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 1129, 533, 534, 535, 536, 1105, 0, 539,
	540, 1002, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 1094, 1095, 1096, 1097, 0, 557,
	0, 549, 550, 551, 1106, 552, 1107, 1024, 553, 554,
	555, 556, 0, 558, 559, 0, 1008, 560, 561, 562,
	564, 565, 563, 566, 1068, 567, 0, 0, 568, 569,
	570, 626, 1091, 1128, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1005,
	0, 0, 0, 0, 0, 0, 1001, 0, 0, 0,
	0, 0, 0, 999, 1000, 0, 0, 0, 0, 0,
	0, 0, 1030, 2394, 0, 2393, 1028, 1046, 1018, 1019,
	1020, 1016, 1017, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1070,
	1034, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 1083, 0, 271, 1090, 272, 1089, 0,
	1100, 273, 274, 275, 276, 277, 278, 1036, 1069, 1003,
	279, 1130, 1131, 587, 0, 280, 281, 1076, 0, 1057,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307,
	308, 309, 1093, 310, 1087, 1086, 1007, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1078, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1013, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1101, 1102, 1025, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1085, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 1098, 1099, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1108,
	0, 1035, 356, 0, 357, 358, 359, 360, 361, 1071,
	1072, 1075, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1113,
	370, 1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1109, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 1064, 1063, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1004,
	254, 1122, 433, 434, 1026, 1074, 435, 1088, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 1103, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	1104, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1084, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 1014, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1067, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	1082, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 1129, 533, 534, 535, 536, 1105, 0, 539, 540,
	1002, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 1094, 1095, 1096, 1097, 0, 557, 0,
	549, 550, 551, 1106, 552, 1107, 1024, 553, 554, 555,
	556, 0, 558, 559, 0, 1008, 560, 561, 562, 564,
	565, 563, 566, 1068, 567, 0, 0, 568, 569, 570,
	626, 1091, 1128, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1005, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 999, 1000, 0, 0, 0, 0, 0, 0,
	0, 1030, 2391, 0, 1606, 1028, 1046, 1018, 1019, 1020,
	1016, 1017, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1034,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 1083, 0, 271, 1090, 272, 1089, 0, 1100,
	273, 274, 275, 276, 277, 278, 1036, 1069, 1003, 279,
	1130, 1131, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 1093, 310, 1087, 1086, 1007, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1078,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1013, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 1025, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1085, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 1098, 1099, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	1035, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1004, 254,
	1122, 433, 434, 1026, 1074, 435, 1088, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1084, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 1014, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 1082,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	1129, 533, 534, 535, 536, 1105, 0, 539, 540, 1002,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 1094, 1095, 1096, 1097, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 1024, 553, 554, 555, 556,
	0, 558, 559, 0, 1008, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	1091, 1128, 0, 572, 571, 573, 629, 1605, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1005, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 0, 0,
	0, 999, 1000, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 995, 1028, 1046, 1018, 1019, 1020, 1016,
	1017, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1070, 1034, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 1083, 0, 271, 1090, 272, 1089, 0, 1100, 273,
	274, 275, 276, 277, 278, 1036, 1069, 1003, 279, 1130,
	1131, 587, 0, 280, 281, 1076, 0, 1057, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 1060,
	1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309,
	1093, 310, 1087, 1086, 1007, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1078, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1013, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1101, 1102, 1025, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1085, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 1098, 1099, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1108, 0, 1035,
	356, 0, 357, 358, 359, 360, 361, 1071, 1072, 1075,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1113, 370, 1080,
	1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1109,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 1064, 1063, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 1004, 254, 1122,
	433, 434, 1026, 1074, 435, 1088, 437, 438, 0, 0,
	439, 0, 1009, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 1103, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 1104, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1084, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 1014, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1067, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 1082, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 1129,
	533, 534, 535, 536, 1105, 0, 539, 540, 1002, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 1094, 1095, 1096, 1097, 0, 557, 0, 549, 550,
	551, 1106, 552, 1107, 1024, 553, 554, 555, 556, 0,
	558, 559, 0, 1008, 560, 561, 562, 564, 565, 563,
	566, 1068, 567, 0, 0, 568, 569, 570, 626, 1091,
	1128, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1005, 0, 0, 0,
	0, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	999, 1000, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 1030,
	0, 0, 0, 1028, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1070, 1034, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 1083, 0,
	271, 1090, 272, 1089, 0, 1100, 273, 274, 275, 276,
	277, 278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0,
	280, 281, 1076, 0, 1057, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 4204, 300, 0,
	301, 302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066,
	1062, 1061, 1065, 306, 307, 308, 309, 1093, 310, 1087,
	1086, 1007, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1078, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1013, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1101, 1102,
	1025, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1085, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 1098, 1099, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1108, 0, 1035, 356, 0, 357,
	358, 359, 360, 361, 1071, 1072, 1075, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1113, 370, 1080, 1081, 0, 1041,
	0, 372, 373, 1115, 1073, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1109, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 1064, 1063,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 1004, 254, 1122, 433, 434, 1026,
	1074, 435, 1088, 437, 438, 0, 0, 439, 0, 1009,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 1103, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 1104, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1084, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 1014, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1067, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 1082, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 1129, 533, 534, 535,
	536, 1105, 0, 539, 540, 1002, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 1094, 1095,
	1096, 1097, 0, 557, 0, 549, 550, 551, 1106, 552,
	1107, 1024, 553, 554, 555, 556, 0, 558, 559, 0,
	1008, 560, 561, 562, 564, 565, 563, 566, 1068, 567,
	0, 0, 568, 569, 570, 626, 1091, 1128, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1005, 0, 0, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 999, 1000, 1046,
	1018, 1019, 1020, 1016, 1017, 1029, 1030, 0, 0, 0,
	1028, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1070, 1034, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 1083, 0, 271, 1090, 272,
	1089, 0, 1100, 273, 274, 275, 276, 277, 278, 1036,
	1069, 1003, 279, 1130, 1131, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 1093, 310, 1087, 1086, 1007, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1078, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1013, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 1025, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1085, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 1098,
	1099, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 1035, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 2271, 368, 369, 371,
	0, 1113, 370, 1080, 1081, 0, 1041, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 2270, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1084, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 1014, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 1082, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 1129, 533, 534, 535, 536, 1105, 0,
	539, 540, 1002, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 1094, 1095, 1096, 1097, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 1024, 553,
	554, 555, 556, 0, 558, 559, 0, 1008, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 626, 1091, 1128, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1005, 0, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 999, 1000, 1046, 1018, 1019, 1020,
	1016, 1017, 1029, 1030, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1034,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 1083, 0, 271, 1090, 272, 1089, 0, 1100,
	273, 274, 275, 276, 277, 278, 1036, 1069, 1003, 279,
	1130, 1131, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 1093, 310, 1087, 1086, 1007, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1078,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1013, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 1025, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1085, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 1098, 1099, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	1035, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1004, 254,
	1122, 433, 434, 1026, 1074, 435, 1088, 437, 438, 0,
	0, 439, 0, 1009, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1084, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 1014, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 1082,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	1129, 533, 534, 535, 536, 1105, 0, 539, 540, 1002,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 1094, 1095, 1096, 1097, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 1024, 553, 554, 555, 556,
	0, 558, 559, 0, 1008, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	1091, 1128, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1005, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 0, 0,
	0, 999, 1000, 1046, 1018, 1019, 1020, 1016, 1017, 1029,
	1030, 0, 0, 0, 1028, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1070, 1034, 0, 0, 0,
	264, 265, 1110, 266, 267, 268, 269, 270, 580, 1083,
	0, 271, 1090, 272, 1089, 0, 1100, 273, 274, 275,
	276, 277, 278, 1036, 1069, 1003, 279, 1130, 1131, 587,
	0, 280, 281, 1076, 0, 1057, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 3997, 300,
	0, 301, 302, 303, 1111, 304, 305, 1060, 1058, 1059,
	1066, 1062, 1061, 1065, 306, 307, 308, 309, 1093, 310,
	1087, 1086, 1007, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1078, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1013, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1101,
	1102, 1025, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1085, 0, 0, 0, 343, 0, 344, 0, 0,
	1112, 345, 346, 1098, 1099, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1108, 0, 1035, 356, 0,
	357, 358, 359, 360, 361, 1071, 1072, 1075, 436, 1114,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1113, 370, 1080, 1081, 0,
	1041, 0, 372, 373, 1115, 1073, 1116, 374, 375, 376,
	1117, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1109, 1118, 388,
	389, 1119, 0, 390, 0, 0, 0, 391, 392, 1064,
	1063, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1120, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1121, 423, 1004, 254, 1122, 433, 434,
	1026, 1074, 435, 1088, 437, 438, 0, 0, 439, 0,
	1009, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	1123, 446, 1124, 1103, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 1104, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1084, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1125, 493, 494,
	495, 496, 1014, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1067, 518, 502, 503, 519, 520, 1126,
	521, 522, 523, 524, 525, 526, 1082, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 1129, 533, 534,
	535, 536, 1105, 0, 539, 540, 1002, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 1094,
	1095, 1096, 1097, 0, 557, 0, 549, 550, 551, 1106,
	552, 1107, 1024, 553, 554, 555, 556, 0, 558, 559,
	0, 1008, 560, 561, 562, 564, 565, 563, 566, 1068,
	567, 0, 0, 568, 569, 570, 626, 1091, 1128, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1005, 0, 0, 0, 0, 0,
	0, 1001, 0, 0, 0, 0, 0, 0, 999, 1000,
	1046, 1018, 1019, 1020, 1016, 1017, 1029, 1030, 0, 0,
	0, 1028, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1070, 1034, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 1083, 0, 271, 1090,
	272, 1089, 0, 1100, 273, 274, 275, 276, 277, 278,
	1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280, 281,
	1076, 0, 1057, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061,
	1065, 306, 307, 308, 309, 1093, 310, 1087, 1086, 1007,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1078, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1013, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1101, 1102, 1025, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1085, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	1098, 1099, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1108, 0, 1035, 356, 0, 357, 358, 359,
	360, 361, 1071, 1072, 1075, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1113, 370, 1080, 1081, 0, 1041, 0, 372,
	373, 1115, 1073, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1109, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 1064, 1063, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1004, 3655, 1122, 433, 434, 1026, 1074, 435,
	1088, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	1103, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 1104, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1084, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 1014,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1067, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 1082, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 1129, 533, 534, 535, 536, 1105,
	0, 539, 540, 1002, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 1094, 1095, 1096, 1097,
	0, 557, 0, 549, 550, 551, 1106, 552, 1107, 1024,
	553, 554, 555, 556, 0, 558, 559, 0, 1008, 560,
	561, 562, 564, 565, 563, 566, 1068, 567, 0, 0,
	568, 569, 570, 626, 1091, 1128, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1005, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 999, 1000, 1821, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 1028, 1046,
	1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1070, 1034, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 1083, 0, 271, 1090, 272,
	1089, 0, 1100, 273, 274, 275, 276, 277, 278, 1036,
	1069, 1003, 279, 1130, 1131, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 1093, 310, 1087, 1086, 1007, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1078, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1013, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 1025, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1085, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 1098,
	1099, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 1035, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1113, 370, 1080, 1081, 0, 1041, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1084, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 1014, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 1082, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 1129, 533, 534, 535, 536, 1105, 0,
	539, 540, 1002, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 1094, 1095, 1096, 1097, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 1024, 553,
	554, 555, 556, 0, 558, 559, 0, 1008, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 626, 1091, 1128, 3406, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1005, 0, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 999, 1000, 1046, 1018, 1019, 1020,
	1016, 1017, 1029, 1030, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1034,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 1083, 0, 271, 1090, 272, 1089, 0, 1100,
	273, 274, 275, 276, 277, 278, 1036, 1069, 1003, 279,
	1130, 1131, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 1093, 310, 1087, 1086, 1007, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1078,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1013, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 1025, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1085, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 1098, 1099, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	1035, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1004, 254,
	1122, 433, 434, 1026, 1074, 435, 1088, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1084, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 1014, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 1082,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	1129, 533, 534, 535, 536, 1105, 0, 539, 540, 1002,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 1094, 1095, 1096, 1097, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 1024, 553, 554, 555, 556,
	0, 558, 559, 0, 1008, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	1091, 1128, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1005, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 0, 0,
	0, 999, 1000, 1821, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 1028, 1046, 1018, 1019, 1020, 1016,
	1017, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1070, 1034, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 1083, 0, 271, 1090, 272, 1089, 0, 1100, 273,
	274, 275, 276, 277, 278, 1036, 1069, 1003, 279, 1130,
	1131, 587, 0, 280, 281, 1076, 0, 1057, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 1060,
	1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309,
	1093, 310, 1087, 1086, 1007, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1078, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1013, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1101, 1102, 1025, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1085, 0, 0, 0, 343, 0, 344,
	0, 2490, 1112, 345, 346, 1098, 1099, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1108, 0, 1035,
	356, 0, 357, 358, 359, 360, 361, 1071, 1072, 1075,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1113, 370, 1080,
	1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1109,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 1064, 1063, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 1004, 254, 1122,
	433, 434, 1026, 1074, 435, 1088, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 1103, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 1104, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1084, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 1014, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1067, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 1082, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 1129,
	533, 534, 535, 536, 1105, 0, 539, 540, 1002, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 1094, 1095, 1096, 1097, 0, 557, 0, 549, 550,
	551, 1106, 552, 1107, 1024, 553, 554, 555, 556, 0,
	558, 559, 0, 1008, 560, 561, 562, 564, 565, 563,
	566, 1068, 567, 0, 0, 568, 569, 570, 626, 1091,
	1128, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1005, 0, 0, 0,
	0, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	999, 1000, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 1030,
	0, 0, 0, 1028, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1070, 1034, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 1083, 0,
	271, 1090, 272, 1089, 0, 1100, 273, 274, 275, 276,
	277, 278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0,
	280, 281, 1076, 0, 1057, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066,
	1062, 1061, 1065, 306, 307, 308, 309, 1093, 310, 1087,
	1086, 1007, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1078, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1013, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1101, 1102,
	1025, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1085, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 1098, 1099, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1108, 0, 1035, 356, 0, 357,
	358, 359, 360, 361, 1071, 1072, 1075, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1113, 370, 1080, 1081, 0, 1041,
	0, 372, 373, 1115, 1073, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1109, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 1064, 1063,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 1004, 254, 1122, 433, 434, 1026,
	1074, 435, 1088, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 1103, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 1104, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1084, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 1014, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1067, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 1082, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 1129, 533, 534, 535,
	536, 1105, 0, 539, 540, 1002, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 1094, 1095,
	1096, 1097, 0, 557, 0, 549, 550, 551, 1106, 552,
	1107, 1024, 553, 554, 555, 556, 0, 558, 559, 0,
	1008, 560, 561, 562, 564, 565, 563, 566, 1068, 567,
	0, 0, 568, 569, 570, 626, 1091, 1128, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1005, 0, 0, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 999, 1000, 0,
	0, 0, 0, 0, 0, 0, 1030, 1751, 0, 2495,
	1028, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1070, 1034, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 1083, 0, 271,
	1090, 272, 1089, 0, 1100, 273, 274, 275, 276, 277,
	278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280,
	281, 1076, 0, 1057, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062,
	1061, 1065, 306, 307, 308, 309, 1093, 310, 1087, 1086,
	1007, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1078, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1013, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1101, 1102, 1025,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1085,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 1098, 1099, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1108, 0, 1035, 356, 0, 357, 358,
	359, 360, 361, 1071, 1072, 1075, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1113, 370, 1080, 1081, 0, 1041, 0,
	372, 373, 1115, 1073, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1109, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 1064, 1063, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074,
	435, 1088, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 1103, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 1104, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1084,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	1014, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1067, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 1082, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 1129, 533, 534, 535, 536,
	1105, 0, 539, 540, 1002, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 1094, 1095, 1096,
	1097, 0, 557, 0, 549, 550, 551, 1106, 552, 1107,
	1024, 553, 554, 555, 556, 0, 558, 559, 0, 1008,
	560, 561, 562, 564, 565, 563, 566, 1068, 567, 0,
	0, 568, 569, 570, 626, 1091, 1128, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1005, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 999, 1000, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 2493, 1028,
	1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1070, 1034, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 1083, 0, 271, 1090,
	272, 1089, 0, 1100, 273, 274, 275, 276, 277, 278,
	1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280, 281,
	1076, 0, 1057, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061,
	1065, 306, 307, 308, 309, 1093, 310, 1087, 1086, 1007,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1078, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1013, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1101, 1102, 1025, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1085, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	1098, 1099, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1108, 0, 1035, 356, 0, 357, 358, 359,
	360, 361, 1071, 1072, 1075, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1113, 370, 1080, 1081, 0, 1041, 0, 372,
	373, 1115, 1073, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1109, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 1064, 1063, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074, 435,
	1088, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	1103, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 1104, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1084, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 1014,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1067, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 1082, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 1129, 533, 534, 535, 536, 1105,
	0, 539, 540, 1002, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 1094, 1095, 1096, 1097,
	0, 557, 0, 549, 550, 551, 1106, 552, 1107, 1024,
	553, 554, 555, 556, 0, 558, 559, 0, 1008, 560,
	561, 562, 564, 565, 563, 566, 1068, 567, 0, 0,
	568, 569, 570, 626, 1091, 1128, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1005, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 999, 1000, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 2481, 1028, 1046,
	1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1070, 1034, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 1083, 0, 271, 1090, 272,
	1089, 0, 1100, 273, 274, 275, 276, 277, 278, 1036,
	1069, 1003, 279, 1130, 1131, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 1093, 310, 1087, 1086, 1007, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1078, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1013, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 1025, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1085, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 1098,
	1099, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 1035, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1113, 370, 1080, 1081, 0, 1041, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1084, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 1014, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 1082, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 1129, 533, 534, 535, 536, 1105, 0,
	539, 540, 1002, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 1094, 1095, 1096, 1097, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 1024, 553,
	554, 555, 556, 0, 558, 559, 0, 1008, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 626, 1091, 1128, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1005, 0, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 999, 1000, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 2470, 1028, 1046, 1018,
	1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1070, 1034, 0, 0, 0, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 1083, 0, 271, 1090, 272, 1089,
	0, 1100, 273, 274, 275, 276, 277, 278, 1036, 1069,
	1003, 279, 1130, 1131, 587, 0, 280, 281, 1076, 0,
	1057, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1111,
	304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306,
	307, 308, 309, 1093, 310, 1087, 1086, 1007, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1078, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1013, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1101, 1102, 1025, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1085, 0, 0, 0,
	343, 0, 344, 0, 0, 1112, 345, 346, 1098, 1099,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1108, 0, 1035, 356, 0, 357, 358, 359, 360, 361,
	1071, 1072, 1075, 436, 1114, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1113, 370, 1080, 1081, 0, 1041, 0, 372, 373, 1115,
	1073, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1109, 1118, 388, 389, 1119, 0, 390, 0,
	0, 0, 391, 392, 1064, 1063, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 1123, 446, 1124, 1103, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 1104, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1084, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1125, 493, 494, 495, 496, 1014, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1067, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 1082, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 1129, 533, 534, 535, 536, 1105, 0, 539,
	540, 1002, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 1094, 1095, 1096, 1097, 0, 557,
	0, 549, 550, 551, 1106, 552, 1107, 1024, 553, 554,
	555, 556, 0, 558, 559, 0, 1008, 560, 561, 562,
	564, 565, 563, 566, 1068, 567, 0, 0, 568, 569,
	570, 626, 1091, 1128, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1005,
	0, 0, 0, 0, 0, 0, 1001, 0, 0, 0,
	0, 0, 0, 999, 1000, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 2468, 1028, 2459, 2466, 1019,
	1020, 1016, 1017, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1070,
	1034, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 1083, 0, 271, 1090, 272, 1089, 0,
	1100, 273, 274, 275, 276, 277, 278, 1036, 1069, 1003,
	279, 1130, 1131, 587, 0, 280, 281, 1076, 0, 1057,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307,
	308, 309, 1093, 2462, 1087, 1086, 1007, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1078, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1013, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1101, 1102, 1025, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1085, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 1098, 1099, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1108,
	0, 1035, 356, 0, 357, 358, 359, 2463, 361, 1071,
	1072, 1075, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1113,
	370, 1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1109, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 1064, 1063, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 2464, 404, 2461, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1004,
	254, 1122, 433, 434, 1026, 1074, 435, 1088, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 1103, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	1104, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1084, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 1014, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 2465,
	0, 513, 514, 512, 515, 516, 517, 1067, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	1082, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 1129, 533, 534, 535, 536, 1105, 0, 539, 540,
	1002, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 1094, 1095, 1096, 1097, 0, 557, 0,
	549, 550, 551, 1106, 552, 1107, 1024, 553, 554, 555,
	556, 0, 558, 559, 0, 1008, 560, 561, 562, 564,
	565, 563, 566, 1068, 567, 0, 0, 568, 569, 570,
	626, 1091, 1128, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 2460, 578, 1005, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 999, 1000, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 2456, 1028, 2459, 2466, 1019, 1020,
	1016, 1017, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1034,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 1083, 0, 271, 1090, 272, 1089, 0, 1100,
	273, 274, 275, 276, 277, 278, 1036, 1069, 1003, 279,
	1130, 1131, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 1093, 2462, 1087, 1086, 1007, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1078,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1013, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 1025, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1085, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 1098, 1099, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	1035, 356, 0, 357, 358, 359, 2463, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 2464, 404, 2461, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1004, 254,
	1122, 433, 434, 1026, 1074, 435, 1088, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1084, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 1014, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 2465, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 1082,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	1129, 533, 534, 535, 536, 1105, 0, 539, 540, 1002,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 1094, 1095, 1096, 1097, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 1024, 553, 554, 555, 556,
	0, 558, 559, 0, 1008, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	1091, 1128, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 2460, 578, 1005, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 0, 0,
	0, 999, 1000, 1046, 1018, 1019, 1020, 1016, 1017, 1029,
	1030, 0, 0, 0, 1028, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1070, 1034, 0, 0, 0,
	264, 265, 1110, 266, 267, 268, 269, 270, 580, 1083,
	0, 271, 1090, 272, 1089, 0, 1100, 273, 274, 275,
	276, 277, 278, 1036, 1069, 1003, 279, 1130, 1131, 587,
	0, 280, 281, 1076, 0, 1057, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1111, 304, 305, 1060, 1058, 1059,
	1066, 1062, 1061, 1065, 306, 307, 308, 309, 1093, 310,
	1087, 1086, 1007, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1078, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1013, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1101,
	1102, 1025, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1085, 0, 0, 0, 343, 0, 344, 0, 0,
	1112, 345, 346, 1098, 1099, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1108, 0, 1035, 356, 0,
	357, 358, 359, 360, 361, 1071, 1072, 1075, 436, 1114,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1113, 370, 1080, 1081, 0,
	1041, 0, 372, 373, 1115, 1073, 1116, 374, 375, 376,
	1117, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1109, 1118, 388,
	389, 1119, 0, 390, 0, 0, 0, 391, 392, 1064,
	1063, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1120, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1121, 423, 1004, 254, 1122, 433, 434,
	1026, 1074, 435, 1088, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	1123, 446, 1124, 1103, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 1104, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1084, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1125, 493, 494,
	495, 496, 1014, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1067, 518, 502, 503, 519, 520, 1126,
	521, 522, 523, 524, 525, 526, 1082, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 1129, 533, 534,
	535, 536, 1105, 0, 539, 540, 1002, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 1094,
	1095, 1096, 1097, 0, 557, 0, 549, 550, 551, 1106,
	552, 1107, 1024, 553, 554, 555, 556, 0, 558, 559,
	0, 1008, 560, 561, 562, 564, 565, 563, 566, 1068,
	567, 0, 0, 568, 569, 570, 626, 1091, 1128, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1005, 0, 0, 0, 0, 0,
	0, 1001, 0, 0, 0, 0, 0, 0, 999, 1000,
	0, 0, 0, 0, 0, 1759, 0, 1030, 0, 0,
	0, 1028, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 2250, 262, 263, 0,
	0, 0, 0, 0, 1070, 1034, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 1083, 0,
	271, 1090, 272, 1089, 0, 1100, 273, 274, 275, 276,
	277, 278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0,
	280, 281, 1076, 0, 1057, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066,
	1062, 1061, 1065, 306, 307, 308, 309, 1093, 310, 1087,
	1086, 1007, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1078, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1013, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1101, 1102,
	1025, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1085, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 1098, 1099, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1108, 0, 1035, 356, 0, 357,
	358, 359, 360, 361, 1071, 1072, 1075, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1113, 370, 1080, 1081, 0, 1041,
	0, 372, 373, 1115, 1073, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1109, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 1064, 1063,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 1004, 254, 1122, 433, 434, 1026,
	1074, 435, 1088, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 1103, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 1104, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1084, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 1014, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1067, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 1082, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 1129, 533, 534, 535,
	536, 1105, 0, 539, 540, 1002, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 1094, 1095,
	1096, 1097, 0, 557, 0, 549, 550, 551, 1106, 552,
	1107, 1024, 553, 554, 555, 556, 0, 558, 559, 0,
	1008, 560, 561, 562, 564, 565, 563, 566, 1068, 567,
	0, 0, 568, 569, 570, 626, 1091, 1128, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1005, 0, 0, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 999, 1000, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 1611,
	1028, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1070, 1034, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 1083, 0, 271,
	1090, 272, 1089, 0, 1100, 273, 274, 275, 276, 277,
	278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280,
	281, 1076, 0, 1057, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062,
	1061, 1065, 306, 307, 308, 309, 1093, 310, 1087, 1086,
	1007, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1078, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1013, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1101, 1102, 1025,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1085,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 1098, 1099, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1108, 0, 1035, 356, 0, 357, 358,
	359, 360, 361, 1071, 1072, 1075, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1113, 370, 1080, 1081, 0, 1041, 0,
	372, 373, 1115, 1073, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1109, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 1064, 1063, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074,
	435, 1088, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 1103, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 1104, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1084,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	1014, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1067, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 1082, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 1129, 533, 534, 535, 536,
	1105, 0, 539, 540, 1002, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 1094, 1095, 1096,
	1097, 0, 557, 0, 549, 550, 551, 1106, 552, 1107,
	1024, 553, 554, 555, 556, 0, 558, 559, 0, 1008,
	560, 561, 562, 564, 565, 563, 566, 1068, 567, 0,
	0, 568, 569, 570, 626, 1091, 1128, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1005, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 999, 1000, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 1546, 1028,
	1046, 1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1070, 1034, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 1083, 0, 271, 1090,
	272, 1089, 0, 1100, 273, 274, 275, 276, 277, 278,
	1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280, 281,
	1076, 0, 1057, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061,
	1065, 306, 307, 308, 309, 1093, 310, 1087, 1086, 1007,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1078, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1013, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1101, 1102, 1025, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1085, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	1098, 1099, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1108, 0, 1035, 356, 0, 357, 358, 359,
	360, 361, 1071, 1072, 1075, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1113, 370, 1080, 1081, 0, 1041, 0, 372,
	373, 1115, 1073, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1109, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 1064, 1063, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074, 435,
	1088, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	1103, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 1104, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1084, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 1014,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1067, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 1082, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 1129, 533, 534, 535, 536, 1105,
	0, 539, 540, 1002, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 1094, 1095, 1096, 1097,
	0, 557, 0, 549, 550, 551, 1106, 552, 1107, 1024,
	553, 554, 555, 556, 0, 558, 559, 0, 1008, 560,
	561, 562, 564, 565, 563, 566, 1068, 567, 0, 0,
	568, 569, 570, 626, 1091, 1128, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1005, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 999, 1000, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 1541, 1028, 1046,
	1018, 1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1070, 1034, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 1083, 0, 271, 1090, 272,
	1089, 0, 1100, 273, 274, 275, 276, 277, 278, 1036,
	1069, 1003, 279, 1130, 1131, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 1093, 310, 1087, 1086, 1007, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1078, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1013, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 1025, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1085, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 1098,
	1099, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 1035, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1113, 370, 1080, 1081, 0, 1041, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1084, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 1014, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 1082, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 1129, 533, 534, 535, 536, 1105, 0,
	539, 540, 1002, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 1094, 1095, 1096, 1097, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 1024, 553,
	554, 555, 556, 0, 558, 559, 0, 1008, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 626, 1091, 1128, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1005, 0, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 999, 1000, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 1532, 1028, 1046, 1018,
	1019, 1020, 1016, 1017, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1070, 1034, 0, 0, 0, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 1083, 0, 271, 1090, 272, 1089,
	0, 1100, 273, 274, 275, 276, 277, 278, 1036, 1069,
	1003, 279, 1130, 1131, 587, 0, 280, 281, 1076, 0,
	1057, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1111,
	304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306,
	307, 308, 309, 1093, 310, 1087, 1086, 1007, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1078, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1013, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1101, 1102, 1025, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1085, 0, 0, 0,
	343, 0, 344, 0, 0, 1112, 345, 346, 1098, 1099,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1108, 0, 1035, 356, 0, 357, 358, 359, 360, 361,
	1071, 1072, 1075, 436, 1114, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1113, 370, 1080, 1081, 0, 1041, 0, 372, 373, 1115,
	1073, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1109, 1118, 388, 389, 1119, 0, 390, 0,
	0, 0, 391, 392, 1064, 1063, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 1123, 446, 1124, 1103, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 1104, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1084, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1125, 493, 494, 495, 496, 1014, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1067, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 1082, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 1129, 533, 534, 535, 536, 1105, 0, 539,
	540, 1002, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 1094, 1095, 1096, 1097, 0, 557,
	0, 549, 550, 551, 1106, 552, 1107, 1024, 553, 554,
	555, 556, 0, 558, 559, 0, 1008, 560, 561, 562,
	564, 565, 563, 566, 1068, 567, 0, 0, 568, 569,
	570, 626, 1091, 1128, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1005,
	0, 0, 0, 0, 0, 0, 1001, 0, 0, 0,
	0, 0, 0, 999, 1000, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 1527, 1028, 1046, 1018, 1019,
	1020, 1016, 1017, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1070,
	1034, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 1083, 0, 271, 1090, 272, 1089, 0,
	1100, 273, 274, 275, 276, 277, 278, 1036, 1069, 1003,
	279, 1130, 1131, 587, 0, 280, 281, 1076, 0, 1057,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307,
	308, 309, 1093, 310, 1087, 1086, 1007, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1078, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1013, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1101, 1102, 1025, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1085, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 1098, 1099, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1108,
	0, 1035, 356, 0, 357, 358, 359, 360, 361, 1071,
	1072, 1075, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1113,
	370, 1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1109, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 1064, 1063, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1004,
	254, 1122, 433, 434, 1026, 1074, 435, 1088, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 1103, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	1104, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1084, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 1014, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1067, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	1082, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 1129, 533, 534, 535, 536, 1105, 0, 539, 540,
	1002, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 1094, 1095, 1096, 1097, 0, 557, 0,
	549, 550, 551, 1106, 552, 1107, 1024, 553, 554, 555,
	556, 0, 558, 559, 0, 1008, 560, 561, 562, 564,
	565, 563, 566, 1068, 567, 0, 0, 568, 569, 570,
	626, 1091, 1128, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1005, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 999, 1000, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 1509, 1028, 1046, 1018, 1019, 1020,
	1016, 1017, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1034,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 1083, 0, 271, 1090, 272, 1089, 0, 1100,
	273, 274, 275, 276, 277, 278, 1036, 1069, 1003, 279,
	1130, 1131, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 1093, 310, 1087, 1086, 1007, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1078,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1013, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 1025, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1085, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 1098, 1099, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	1035, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1004, 254,
	1122, 433, 434, 1026, 1074, 435, 1088, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1084, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 1014, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 1082,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	1129, 533, 534, 535, 536, 1105, 0, 539, 540, 1002,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 1094, 1095, 1096, 1097, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 1024, 553, 554, 555, 556,
	0, 558, 559, 0, 1008, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	1091, 1128, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1005, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 0, 0,
	0, 999, 1000, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 1388, 1028, 1046, 1018, 1019, 1020, 1016,
	1017, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1070, 1034, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 1083, 0, 271, 1090, 272, 1089, 0, 1100, 273,
	274, 275, 276, 277, 278, 1036, 1069, 1003, 279, 1130,
	1131, 587, 0, 280, 281, 1076, 0, 1057, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 1060,
	1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309,
	1093, 310, 1087, 1086, 1007, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1078, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1013, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1101, 1102, 1025, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1085, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 1098, 1099, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1108, 0, 1035,
	356, 0, 357, 358, 359, 360, 361, 1387, 1072, 1075,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1113, 370, 1080,
	1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1109,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 1064, 1063, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 1004, 254, 1122,
	433, 434, 1026, 1074, 435, 1088, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 1103, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 1104, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1084, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 1014, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1067, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 1082, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 1129,
	533, 534, 535, 536, 1105, 0, 539, 540, 1002, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 1094, 1095, 1096, 1097, 0, 557, 0, 549, 550,
	551, 1106, 552, 1107, 1024, 553, 554, 555, 556, 0,
	558, 559, 0, 1008, 560, 561, 562, 564, 565, 563,
	566, 1068, 567, 0, 0, 568, 569, 570, 626, 1091,
	1128, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1005, 0, 0, 0,
	0, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	999, 1000, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 1382, 1028, 1046, 1018, 1019, 1020, 1016, 1017,
	1029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1070, 1034, 0, 0,
	0, 264, 265, 1110, 266, 267, 268, 269, 270, 580,
	1083, 0, 271, 1090, 272, 1089, 0, 1100, 273, 274,
	275, 276, 277, 278, 1036, 1069, 1003, 279, 1130, 1131,
	587, 0, 280, 281, 1076, 0, 1057, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1111, 304, 305, 1060, 1058,
	1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309, 1093,
	310, 1087, 1086, 1007, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1078, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1013,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1101, 1102, 1025, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1085, 0, 0, 0, 343, 0, 344, 0,
	0, 1112, 345, 346, 1098, 1099, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1108, 0, 1035, 356,
	0, 357, 358, 359, 360, 361, 1381, 1072, 1075, 436,
	1114, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1113, 370, 1080, 1081,
	0, 1041, 0, 372, 373, 1115, 1073, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1109, 1118,
	388, 389, 1119, 0, 390, 0, 0, 0, 391, 392,
	1064, 1063, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 1004, 254, 1122, 433,
	434, 1026, 1074, 435, 1088, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 1123, 446, 1124, 1103, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 1104, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1084, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1125, 493,
	494, 495, 496, 1014, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1067, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 1082, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 1129, 533,
	534, 535, 536, 1105, 0, 539, 540, 1002, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	1094, 1095, 1096, 1097, 0, 557, 0, 549, 550, 551,
	1106, 552, 1107, 1024, 553, 554, 555, 556, 0, 558,
	559, 0, 1008, 560, 561, 562, 564, 565, 563, 566,
	1068, 567, 0, 0, 568, 569, 570, 626, 1091, 1128,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1005, 0, 0, 0, 0,
	0, 0, 1001, 0, 0, 0, 0, 0, 0, 999,
	1000, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 1375, 1028, 1046, 1018, 1019, 1020, 1016, 1017, 1029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1070, 1034, 0, 0, 0,
	264, 265, 1110, 266, 267, 268, 269, 270, 580, 1083,
	0, 271, 1090, 272, 1089, 0, 1100, 273, 274, 275,
	276, 277, 278, 1036, 1069, 1003, 279, 1130, 1131, 587,
	0, 280, 281, 1076, 0, 1057, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1111, 304, 305, 1060, 1058, 1059,
	1066, 1062, 1061, 1065, 306, 307, 308, 309, 1093, 310,
	1087, 1086, 1007, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1078, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1013, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1101,
	1102, 1025, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1085, 0, 0, 0, 343, 0, 344, 0, 0,
	1112, 345, 346, 1098, 1099, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1108, 0, 1035, 356, 0,
	357, 358, 359, 360, 361, 1071, 1072, 1075, 436, 1114,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1113, 370, 1080, 1081, 0,
	1041, 0, 372, 373, 1115, 1073, 1116, 374, 375, 376,
	1117, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1109, 1118, 388,
	389, 1119, 0, 390, 0, 0, 0, 391, 392, 1064,
	1063, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1120, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1121, 423, 1004, 254, 1122, 433, 434,
	1026, 1074, 435, 1088, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	1123, 446, 1124, 1103, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 1104, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1084, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1125, 493, 494,
	495, 496, 1014, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1067, 518, 502, 503, 519, 520, 1126,
	521, 522, 523, 524, 525, 526, 1082, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 1129, 533, 534,
	535, 536, 1105, 0, 539, 540, 1002, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 1094,
	1095, 1096, 1097, 0, 557, 0, 549, 550, 551, 1106,
	552, 1107, 1024, 553, 554, 555, 556, 0, 558, 559,
	0, 1008, 560, 561, 562, 564, 565, 563, 566, 1068,
	567, 0, 0, 568, 569, 570, 626, 1091, 1128, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1005, 0, 0, 0, 0, 0,
	0, 1001, 0, 0, 0, 0, 0, 0, 999, 1000,
	1046, 1018, 1019, 1020, 1016, 1017, 1029, 1030, 0, 0,
	0, 1028, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1070, 1034, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 1083, 0, 271, 1090,
	272, 1089, 0, 1100, 273, 274, 275, 276, 277, 278,
	1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280, 281,
	1076, 0, 1057, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061,
	1065, 306, 307, 308, 309, 1093, 310, 1087, 1086, 1007,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1078, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1013, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1101, 1102, 1025, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1085, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	1098, 1099, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1108, 0, 1035, 356, 0, 357, 358, 359,
	360, 361, 1071, 1072, 1075, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1113, 370, 1080, 1081, 0, 1041, 0, 372,
	373, 1115, 1073, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1109, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 1064, 1063, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074, 435,
	1088, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	1103, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 1104, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1084, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 1014,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1067, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 1082, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 1129, 533, 534, 535, 536, 1105,
	0, 539, 540, 1002, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 1094, 1095, 1096, 1097,
	0, 557, 0, 549, 550, 551, 1106, 552, 1107, 1024,
	553, 554, 555, 556, 0, 558, 559, 0, 1008, 560,
	561, 562, 564, 565, 563, 566, 1068, 567, 0, 0,
	568, 569, 570, 626, 1091, 1128, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1005, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 999, 1000, 1046, 1018, 1019,
	1020, 1016, 1017, 1029, 1030, 0, 0, 0, 1028, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1070,
	1034, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 1083, 0, 271, 1090, 272, 1089, 0,
	1100, 273, 274, 275, 276, 277, 278, 1036, 1069, 1003,
	279, 1130, 1131, 587, 0, 280, 281, 1076, 0, 1057,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	4244, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307,
	308, 309, 1093, 310, 1087, 1086, 1007, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1078, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1013, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1101, 1102, 1025, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1085, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 1098, 1099, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1108,
	0, 1035, 356, 0, 357, 358, 359, 360, 361, 1071,
	1072, 1075, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1113,
	370, 1080, 1081, 0, 1041, 0, 372, 373, 1115, 1073,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1109, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 1064, 1063, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 1004,
	254, 1122, 433, 434, 1026, 1074, 435, 1088, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 1103, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	1104, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1084, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 1014, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1067, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	1082, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 1129, 533, 534, 535, 536, 1105, 0, 539, 540,
	1002, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 1094, 1095, 1096, 1097, 0, 557, 0,
	549, 550, 551, 1106, 552, 1107, 1024, 553, 554, 555,
	556, 0, 4243, 559, 0, 1008, 560, 561, 562, 564,
	565, 563, 566, 1068, 567, 0, 0, 568, 569, 570,
	626, 1091, 1128, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1005, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 999, 1000, 1046, 1018, 1019, 1020, 1016, 1017,
	1029, 1030, 0, 0, 0, 1028, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1070, 1034, 0, 0,
	0, 264, 265, 1110, 266, 267, 268, 269, 270, 4242,
	1083, 0, 271, 1090, 272, 1089, 0, 1100, 273, 274,
	275, 276, 277, 278, 1036, 1069, 1003, 279, 1130, 1131,
	587, 0, 280, 281, 1076, 0, 1057, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1111, 304, 4244, 1060, 1058,
	1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309, 1093,
	310, 1087, 1086, 1007, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1078, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1013,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1101, 1102, 1025, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1085, 0, 0, 0, 343, 0, 344, 0,
	0, 1112, 345, 346, 1098, 1099, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1108, 0, 1035, 356,
	0, 357, 358, 359, 360, 361, 1071, 1072, 1075, 436,
	1114, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1113, 370, 1080, 1081,
	0, 1041, 0, 372, 373, 1115, 1073, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1109, 1118,
	388, 389, 1119, 0, 390, 0, 0, 0, 391, 392,
	1064, 1063, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 1004, 254, 1122, 433,
	434, 1026, 1074, 435, 1088, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 1123, 446, 1124, 1103, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 1104, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1084, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1125, 493,
	494, 495, 496, 1014, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1067, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 1082, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 1129, 533,
	534, 535, 536, 1105, 0, 539, 540, 1002, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	1094, 1095, 1096, 1097, 0, 557, 0, 549, 550, 551,
	1106, 552, 1107, 1024, 553, 554, 555, 556, 0, 4243,
	559, 0, 1008, 560, 561, 562, 564, 565, 563, 566,
	1068, 567, 0, 0, 568, 569, 570, 626, 1091, 1128,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1005, 0, 0, 0, 0,
	0, 0, 1001, 0, 0, 0, 0, 0, 0, 999,
	1000, 1046, 1018, 1019, 1020, 2897, 2898, 1029, 1030, 0,
	0, 0, 1028, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1070, 1034, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 1083, 0, 271,
	1090, 272, 1089, 0, 1100, 273, 274, 275, 276, 277,
	278, 1036, 1069, 1003, 279, 1130, 1131, 587, 0, 280,
	281, 1076, 0, 1057, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066, 1062,
	1061, 1065, 306, 307, 308, 309, 1093, 310, 1087, 1086,
	1007, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1078, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1013, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1101, 1102, 1025,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1085,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 1098, 1099, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1108, 0, 1035, 356, 0, 357, 358,
	359, 360, 361, 1071, 1072, 1075, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1113, 370, 1080, 1081, 0, 1041, 0,
	372, 373, 1115, 1073, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1109, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 1064, 1063, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 1004, 254, 1122, 433, 434, 1026, 1074,
	435, 1088, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 1103, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 1104, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1084,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	1014, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1067, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 1082, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 1129, 533, 534, 535, 536,
	1105, 0, 539, 540, 1002, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 1094, 1095, 1096,
	1097, 0, 557, 0, 549, 550, 551, 1106, 552, 1107,
	1024, 553, 554, 555, 556, 0, 558, 559, 0, 1008,
	560, 561, 562, 564, 565, 563, 566, 1068, 567, 0,
	0, 568, 569, 570, 626, 1091, 1128, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1005, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 999, 1000, 1046, 1018,
	1019, 1020, 2895, 2896, 1029, 1030, 0, 0, 0, 1028,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1070, 1034, 0, 0, 0, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 1083, 0, 271, 1090, 272, 1089,
	0, 1100, 273, 274, 275, 276, 277, 278, 1036, 1069,
	1003, 279, 1130, 1131, 587, 0, 280, 281, 1076, 0,
	1057, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1111,
	304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306,
	307, 308, 309, 1093, 310, 1087, 1086, 1007, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1078, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1013, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1101, 1102, 1025, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1085, 0, 0, 0,
	343, 0, 344, 0, 0, 1112, 345, 346, 1098, 1099,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1108, 0, 1035, 356, 0, 357, 358, 359, 360, 361,
	1071, 1072, 1075, 436, 1114, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1113, 370, 1080, 1081, 0, 1041, 0, 372, 373, 1115,
	1073, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1109, 1118, 388, 389, 1119, 0, 390, 0,
	0, 0, 391, 392, 1064, 1063, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	1004, 254, 1122, 433, 434, 1026, 1074, 435, 1088, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 1123, 446, 1124, 1103, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 1104, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1084, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1125, 493, 494, 495, 496, 1014, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1067, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 1082, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 1129, 533, 534, 535, 536, 1105, 0, 539,
	540, 1002, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 1094, 1095, 1096, 1097, 0, 557,
	0, 549, 550, 551, 1106, 552, 1107, 1024, 553, 554,
	555, 556, 0, 558, 559, 0, 1008, 560, 561, 562,
	564, 565, 563, 566, 1068, 567, 0, 0, 568, 569,
	570, 626, 1091, 1128, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1005,
	0, 0, 0, 0, 0, 0, 1001, 0, 0, 0,
	0, 0, 0, 999, 1000, 1046, 1018, 1019, 1020, 1016,
	1017, 1029, 1030, 0, 0, 0, 1028, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1070, 1034, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 1083, 0, 271, 1090, 272, 1089, 0, 1100, 273,
	274, 275, 276, 277, 278, 1036, 1069, 1003, 279, 1130,
	1131, 587, 0, 280, 281, 1076, 0, 1057, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 1060,
	1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309,
	1093, 310, 1087, 1086, 1007, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1078, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1013, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1101, 1102, 1025, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1085, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 1098, 1099, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1108, 0, 1035,
	356, 0, 357, 358, 359, 360, 361, 1071, 1072, 1075,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1113, 370, 1080,
	1081, 0, 1041, 0, 372, 373, 1115, 1073, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1109,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 1064, 1063, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 1004, 254, 1122,
	433, 434, 1026, 1074, 435, 1088, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 1103, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 1104, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1084, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 1014, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1067, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 1082, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 1129,
	533, 534, 535, 536, 1105, 0, 539, 540, 1002, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 1094, 1095, 1096, 1097, 0, 557, 0, 549, 550,
	551, 1106, 552, 1107, 1024, 553, 554, 555, 556, 0,
	558, 559, 0, 1008, 560, 561, 562, 564, 565, 563,
	566, 1068, 567, 0, 0, 568, 569, 570, 626, 1091,
	1128, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1005, 0, 0, 0,
	0, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	2258, 2259, 1046, 1018, 1019, 1020, 1016, 1017, 1029, 1030,
	0, 0, 0, 1028, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1070, 1034, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 1083, 0,
	271, 1090, 272, 1089, 0, 1100, 273, 274, 275, 276,
	277, 278, 1036, 1069, 0, 279, 1130, 1131, 587, 0,
	280, 281, 1076, 0, 1057, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066,
	1062, 1061, 1065, 306, 307, 308, 309, 1093, 310, 1087,
	1086, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1078, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1013, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1101, 1102,
	1025, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1085, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 1098, 1099, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1108, 0, 1035, 356, 0, 357,
	358, 359, 360, 361, 1071, 1072, 1075, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1113, 370, 1080, 1081, 0, 1041,
	0, 372, 373, 1115, 1073, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1109, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 1064, 1063,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 0, 254, 1122, 433, 434, 1026,
	1074, 435, 1088, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 1103, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 1104, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1084, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 1014, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1067, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 1082, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 1129, 533, 534, 535,
	536, 1105, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 1094, 1095,
	1096, 1097, 0, 557, 0, 549, 550, 551, 1106, 552,
	1107, 1024, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 1068, 567,
	0, 0, 568, 569, 570, 626, 1091, 1128, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	2478, 0, 0, 0, 0, 0, 0, 2476, 2477, 1046,
	1018, 1019, 1020, 1016, 1017, 1029, 1030, 0, 0, 0,
	1028, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1070, 1034, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 1083, 0, 271, 1090, 272,
	1089, 0, 1100, 273, 274, 275, 276, 277, 278, 1036,
	1069, 0, 279, 1130, 1131, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 1093, 310, 1087, 1086, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1078, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1013, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 1025, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1085, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 1098,
	1099, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 1035, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1113, 370, 1080, 1081, 0, 1041, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 0, 254, 1122, 433, 434, 1026, 1074, 435, 1088,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1084, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 2890, 2891,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 1082, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 1129, 533, 534, 535, 536, 1105, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 1094, 1095, 1096, 1097, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 1024, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 626, 1091, 1128, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1046, 1018, 1019, 1020,
	1016, 1017, 1029, 1030, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1034,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 0, 1083, 0, 271, 1090, 272, 1089, 0, 1100,
	273, 274, 275, 276, 277, 278, 1036, 1069, 1003, 279,
	1130, 1131, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 4244,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 1093, 310, 1087, 1086, 1007, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1078,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1013, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 1025, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1085, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 1098, 1099, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	1035, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	1080, 1081, 0, 1041, 0, 372, 373, 0, 1073, 0,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 1004, 254,
	0, 433, 434, 1026, 1074, 435, 1088, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1084, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 1014, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 1082,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	1129, 533, 534, 535, 536, 1105, 0, 539, 540, 1002,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 1094, 1095, 1096, 1097, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 1024, 553, 554, 555, 556,
	0, 4243, 559, 0, 1008, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	1091, 1128, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 992, 0, 1168, 0,
	0, 999, 1000, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 1028, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1070, 0, 0, 0, 0, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 1069,
	0, 279, 585, 586, 587, 0, 280, 281, 1076, 0,
	1057, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1111,
	304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1101, 1102, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 1112, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1108, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	1071, 1072, 1075, 436, 1114, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1113, 370, 602, 603, 0, 604, 0, 372, 373, 1115,
	1073, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 1154, 384, 386, 385,
	0, 387, 1109, 1118, 388, 389, 1119, 0, 390, 0,
	0, 0, 391, 392, 1064, 1063, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	0, 254, 1122, 433, 434, 0, 1074, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 1160, 441, 442, 443,
	0, 0, 444, 445, 609, 1123, 446, 1124, 1103, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 1104, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1125, 493, 494, 495, 496, 616, 1162, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 215, 513, 514, 512, 515, 516, 517, 1067, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 1105, 0, 539,
	540, 0, 538, 217, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 1106, 552, 1107, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 1068, 567, 0, 0, 568, 569,
	570, 1516, 627, 628, 0, 572, 571, 573, 629, 1168,
	0, 0, 209, 574, 575, 630, 576, 577, 578, 0,
	210, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	1158, 1070, 1845, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	1069, 0, 279, 585, 586, 587, 0, 280, 281, 1076,
	0, 1057, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 1060, 1058, 1059, 1066, 1062, 1061, 1065,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1101, 1102, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1108, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 1071, 1072, 1075, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1113, 370, 602, 603, 0, 604, 0, 372, 373,
	1115, 1073, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1154, 384, 386,
	385, 0, 387, 1109, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 1064, 1063, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 0, 254, 1122, 433, 434, 0, 1074, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 1160, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 1103,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 1104, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 616, 1162,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 215, 513, 514, 512, 515, 516, 517, 1067,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 1105, 0,
	539, 540, 0, 538, 217, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 1106, 552, 1107, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 1068, 567, 0, 0, 568,
	569, 570, 1516, 627, 628, 0, 572, 571, 573, 629,
	3074, 0, 1168, 209, 574, 575, 630, 576, 577, 578,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 1158, 0, 1845, 1070, 0, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 1069, 0, 279, 585, 586, 587, 0,
	280, 281, 1076, 0, 1057, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1111, 304, 305, 1060, 1058, 1059, 1066,
	1062, 1061, 1065, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1101, 1102,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1108, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 1071, 1072, 1075, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1113, 370, 602, 603, 0, 604,
	0, 372, 373, 1115, 1073, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	1154, 384, 386, 385, 0, 387, 1109, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 1064, 1063,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 0, 254, 1122, 433, 434, 0,
	1074, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	1160, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 1103, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 1104, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 616, 1162, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1067, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 1105, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 1106, 552,
	1107, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 1068, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1150, 0, 1168, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 1158, 0, 1156, 1070, 0, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 1069, 0, 279, 585,
	586, 587, 0, 280, 281, 1076, 0, 1057, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 1060,
	1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1101, 1102, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1108, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 1071, 1072, 1075,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1113, 370, 602,
	603, 0, 604, 0, 372, 373, 1115, 1073, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 1154, 384, 386, 385, 0, 387, 1109,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 1064, 1063, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 0, 254, 1122,
	433, 434, 0, 1074, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 1160, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 1103, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 1104, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 616, 1162, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1067, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 1105, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 1106, 552, 1107, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 1068, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 1168, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 1158, 1070, 1156,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 1069, 0, 279,
	585, 586, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	602, 603, 0, 604, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 1154, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 0, 254,
	1122, 433, 434, 0, 1074, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 1160, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 616, 1162, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 1105, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 1168, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 1158, 1070,
	1156, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 1069, 0,
	279, 585, 586, 587, 0, 280, 281, 1076, 0, 1057,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	305, 1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1101, 1102, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1108,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 1071,
	1072, 1075, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1113,
	370, 602, 603, 0, 604, 0, 372, 373, 1115, 1073,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1109, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 1064, 1063, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 0,
	254, 1122, 433, 434, 0, 1074, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 1103, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	1104, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 616, 1162, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1067, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 1105, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 1106, 552, 1107, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 1068, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 992, 0,
	1358, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 1744, 579, 0, 0, 0, 0, 264, 265, 1110,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 1324, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1111, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 1112, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 1114, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 1113, 370, 602, 603, 0, 604, 0, 372,
	373, 1115, 605, 1116, 374, 375, 376, 1117, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 1118, 388, 389, 1119, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1120, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1121, 423, 0, 0, 1122, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 1123, 446, 1124,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1125, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 215, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 1126, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 217, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 1516, 627, 628, 0, 572, 571, 573,
	629, 1513, 0, 1358, 209, 574, 575, 630, 576, 577,
	578, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 179, 579, 0, 0, 0, 0,
	264, 265, 1110, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 1324, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1111, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	1112, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 599, 600, 601, 436, 1114,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1113, 370, 602, 603, 0,
	604, 0, 372, 373, 1115, 605, 1116, 374, 375, 376,
	1117, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 1118, 388,
	389, 1119, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1120, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1121, 423, 0, 0, 1122, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	1123, 446, 1124, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1125, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 215, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 1126,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 217, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 1516, 627, 628, 0,
	572, 571, 573, 629, 0, 0, 0, 209, 574, 575,
	630, 576, 577, 578, 0, 210, 0, 0, 0, 0,
	0, 1358, 1357, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 1324, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1113, 370, 602, 603, 0, 604, 0,
	372, 373, 1115, 605, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 0, 0, 1122, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 1358,
	1357, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 1110, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 1324, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1111, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 1112, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 1114, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 1113, 370, 602, 603, 0, 604, 0, 372, 373,
	1115, 605, 1116, 374, 375, 376, 1117, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 1118, 388, 389, 1119, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1120, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1121,
	423, 0, 0, 1122, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 1123, 446, 1124, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1125, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 1126, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 1358, 2047, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3330, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 1110, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 0, 280, 281, 588, 0, 1324,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1111, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 1112, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 1114, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 1113,
	370, 602, 603, 0, 604, 0, 372, 373, 1115, 605,
	1116, 374, 375, 376, 1117, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 2046, 386, 385, 0,
	387, 606, 1118, 388, 389, 1119, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1120, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1121, 423, 0,
	0, 1122, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 1123, 446, 1124, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1125, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 502,
	503, 519, 520, 1126, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 1358, 1357, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 1324, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 1113, 370, 602,
	603, 0, 604, 0, 372, 373, 1115, 605, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 0, 0, 1122,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 1168, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1070, 1522,
	0, 0, 0, 264, 265, 1110, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 1069, 0, 279,
	585, 586, 587, 0, 280, 281, 1076, 0, 1057, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1111, 304, 305,
	1060, 1058, 1059, 1066, 1062, 1061, 1065, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1101, 1102, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 1112, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1108, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 1071, 1072,
	1075, 436, 1114, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1113, 370,
	602, 603, 0, 604, 0, 372, 373, 1115, 1073, 1116,
	374, 375, 376, 1117, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1109, 1118, 388, 389, 1119, 0, 390, 0, 0, 0,
	391, 392, 1064, 1063, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1120, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1121, 423, 0, 254,
	1122, 433, 434, 0, 1074, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 1123, 446, 1124, 1103, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 1104,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1125, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1067, 518, 502, 503,
	519, 520, 1126, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 1105, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 1106, 552, 1107, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 1068, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 992, 0, 249,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 215, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 217, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 1516, 627, 628, 0, 572, 571, 573, 629,
	249, 0, 0, 209, 574, 575, 630, 576, 577, 578,
	0, 210, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 179, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 249, 2811, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 1859, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 249, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 4386, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 249, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 3271, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 249, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	1458, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 249, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 2781, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 249, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 3431,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 599, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 838, 0, 718,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	2151, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 725, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 836, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 723, 541, 542, 543, 544, 724,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	1926, 0, 1358, 1357, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 728, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 1324, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1111, 304, 305, 0, 0, 0, 0,
	0, 0, 1929, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 1113, 370, 602, 603, 0, 604,
	0, 372, 373, 1115, 605, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 0, 0, 1122, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1930, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 716, 0, 718, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 725, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	723, 541, 542, 543, 544, 724, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 1896, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 0, 1902, 0, 271,
	1892, 272, 1908, 0, 1915, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 1918, 1919, 0, 0, 280,
	281, 0, 0, 1324, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 1093, 310, 1906, 1905,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1078, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 1904,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 1913, 1914, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 0, 357, 358,
	359, 360, 361, 0, 0, 0, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1113, 370, 1899, 1900, 0, 1895, 0,
	372, 373, 1115, 0, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 0, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 0, 0, 1122, 433, 434, 0, 0,
	435, 1907, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 0, 1123, 446,
	1124, 0, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 1889, 459, 460, 461,
	1890, 462, 463, 464, 0, 465, 0, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1903,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	0, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 1901, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 1917, 533, 534, 535, 536,
	0, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 1909, 1910, 1911,
	1912, 0, 557, 0, 549, 550, 551, 0, 552, 0,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 0, 1893, 1916, 0, 572, 571,
	573, 0, 0, 1358, 1357, 0, 574, 575, 0, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 1883,
	264, 265, 1110, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 1324, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1111, 304, 305, 0, 0, 0,
	0, 0, 0, 1929, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	1112, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 599, 600, 601, 436, 1114,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1113, 370, 602, 603, 0,
	604, 0, 372, 373, 1115, 605, 1116, 374, 375, 376,
	1117, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 1118, 388,
	389, 1119, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1120, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1121, 423, 0, 0, 1122, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	1123, 446, 1124, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1125, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1930, 518, 502, 503, 519, 520, 1126,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1358, 1357, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 1110, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 1324, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1111, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 1112, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	1114, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1113, 370, 602, 603,
	0, 604, 0, 372, 373, 1115, 605, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 1118,
	388, 389, 1119, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 0, 0, 1122, 433,
	434, 3601, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 1123, 446, 1124, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1125, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	718, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 725, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 723, 541, 542, 543, 544,
	724, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1358, 1357, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 1324, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1113, 370, 602, 603, 0, 604, 0,
	372, 373, 1115, 605, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 0, 0, 1122, 433, 434, 3243, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 718, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 0, 280, 281, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	725, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 373, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 2191, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 2192, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 723, 541, 542, 543, 544, 724, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 718, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 728, 579, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 725, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 599, 600, 601, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 602, 603, 0,
	604, 0, 372, 373, 0, 605, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	0, 446, 0, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 1922, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 0,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 723, 541,
	542, 543, 544, 724, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 1921, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 718,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	728, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 725, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 1875, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 723, 541, 542, 543, 544, 724,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 1874, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1566, 0, 1358, 1357, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 1110, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 1324, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1111, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 1565, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 1112,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 1114, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 1113, 370, 602, 603, 0, 604,
	0, 372, 373, 1115, 605, 1116, 374, 375, 376, 1117,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 1118, 388, 389,
	1119, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1120,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1121, 423, 0, 0, 1122, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 1123,
	446, 1124, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 1564, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1125, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 1563, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 1126, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1506, 0, 1358, 1357, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 1324, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 1505, 600, 601,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 1113, 370, 602,
	603, 0, 604, 0, 372, 373, 1115, 605, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 0, 0, 1122,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1433, 0, 1358, 1357,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 1110, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	1324, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1111,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 1112, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	1432, 600, 601, 436, 1114, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	1113, 370, 602, 603, 0, 604, 0, 372, 373, 1115,
	605, 1116, 374, 375, 376, 1117, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 1118, 388, 389, 1119, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1120, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1121, 423,
	0, 0, 1122, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 1123, 446, 1124, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1125, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 1126, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1393,
	0, 1358, 1357, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 1324, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1113, 370, 602, 603, 0, 604, 0,
	372, 373, 1115, 605, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 0, 0, 1122, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1353, 0, 1358, 1357, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 1110, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 1324, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1111, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 1112, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 1352, 600, 601, 436,
	1114, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1113, 370, 602, 603,
	0, 604, 0, 372, 373, 1115, 605, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 1118,
	388, 389, 1119, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 0, 0, 1122, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 1123, 446, 1124, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1125, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1358, 1357, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 1324, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 1113, 370, 602,
	603, 0, 604, 0, 372, 373, 1115, 605, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 0, 0, 1122,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 249, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 1358, 1357, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 728, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 1110, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 1324, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1111, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 1937, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 1112, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	1114, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1113, 370, 602, 603,
	0, 604, 0, 372, 373, 1115, 605, 1116, 374, 375,
	376, 1117, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 1118,
	388, 389, 1119, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1120, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1121, 423, 0, 0, 1122, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 1123, 446, 1124, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1125, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	1126, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 1358, 1357, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 1110, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 1324, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1111, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 1112, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 1114, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 1113, 370, 602,
	603, 0, 604, 0, 372, 373, 1115, 605, 1116, 374,
	375, 376, 1117, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	1118, 388, 389, 1119, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1120, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1121, 423, 0, 0, 1122,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 1123, 446, 1124, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1125,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 1126, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 1358, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	1110, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 1324, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1111, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 1112, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 1114, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1113, 370, 602, 603, 0, 604, 0,
	372, 373, 1115, 605, 1116, 374, 375, 376, 1117, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 1118, 388, 389, 1119,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1120, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1121, 423, 0, 0, 1122, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 1123, 446,
	1124, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1125, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 1126, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 249, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 2617, 280, 281, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 2614, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	2621, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 2824, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 2620, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 2821, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 2823, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 2820, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 2619, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 2822, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 249, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	2617, 280, 281, 588, 0, 0, 2611, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 2614, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 2621, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 2620, 0,
	0, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 2610, 600, 601, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 602, 603, 0,
	604, 0, 372, 373, 0, 605, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	0, 446, 0, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 2619, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 0,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 2618, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 1633, 0, 249, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 599, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	1636, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 1634, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 1635, 571, 573, 629, 1328, 0, 249,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 1330, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 1160, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	1325, 0, 249, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 1327, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	1160, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1231, 0, 249, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 1233, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 1160, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 662, 0, 249, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 661,
	260, 261, 651, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 654, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 655, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 656, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 650,
	0, 249, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 651, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 654, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 655, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 656, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 249, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 0, 280, 281, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 373, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 1160, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 249, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 599, 600, 601, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 602, 603, 0,
	604, 0, 372, 373, 0, 605, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 3206, 423, 0, 254, 0, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	0, 446, 0, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 0,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 2752, 0, 249, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 2751, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 2164, 0, 249,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 249, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	2079, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 2085, 0, 249, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	2084, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 2072,
	0, 249, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 2074, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 249, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 0, 280, 281, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 2043,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 373, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 1160, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 1498, 0,
	249, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 1497, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1489, 0, 249, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 1488, 600, 601, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 602, 603, 0,
	604, 0, 372, 373, 0, 605, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	0, 446, 0, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 0,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 1486, 0, 249, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 1485, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 1481, 0, 249,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 1480, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	1436, 0, 249, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1346, 0, 249, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 1339, 0, 249, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	1341, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 632,
	0, 249, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 240, 0, 249, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	249, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 249, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 654, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 655, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 599, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 656,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 249, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 2199, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 249, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 2197, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 249, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 2195, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	249, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 2129, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 249, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 2123, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 249, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 2091, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 825, 0, 249, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 824, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	823, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 249, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	2824, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 3859,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 685, 0, 249, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 1201, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	1199, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	686, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 682, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 1202, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	681, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 685, 0, 249, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 1201, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 1199, 0, 280, 281, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 373, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 686, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 682, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 1202, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 681, 621, 622, 623, 0, 557, 0,
	549, 1200, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 641, 0,
	249, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 640, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 639, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 249, 2811, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 249, 3869, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 249, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 3575, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 249, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 2529, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 249, 2811, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 2808, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 249, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 2174, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 2162, 0, 249, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 685, 0, 249, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 0, 280, 675, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 373, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 686, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 682, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 1521, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 681, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 1502, 0,
	249, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 1501, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1495, 0, 249, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 1494, 600, 601, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 602, 603, 0,
	604, 0, 372, 373, 0, 605, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	0, 446, 0, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 0,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 1442, 0, 249, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 1441, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 1425, 0, 249,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 1423, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	1419, 0, 249, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1397, 0, 249, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 1395, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 1349, 0, 249, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 1333,
	0, 249, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 580, 581, 0, 271,
	582, 272, 583, 0, 584, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 585, 586, 587, 0, 280,
	281, 588, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 589, 590,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 591, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 594,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 595, 596, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 597, 0, 598, 356, 0, 357, 358,
	359, 360, 361, 599, 600, 601, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 602, 603, 0, 604, 0,
	372, 373, 0, 605, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 606, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 607,
	435, 608, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 609, 0, 446,
	0, 610, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 611, 459, 460, 461,
	612, 462, 463, 464, 613, 465, 614, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 615,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	616, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 502, 503, 519, 520, 0, 521, 522,
	523, 524, 525, 526, 617, 0, 527, 0, 528, 529,
	530, 531, 504, 532, 537, 618, 533, 534, 535, 536,
	619, 0, 539, 540, 0, 538, 0, 541, 542, 543,
	544, 545, 546, 334, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 249, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 1181, 262, 263, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 580, 581, 0, 271, 582, 272, 583, 0,
	584, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 585, 586, 587, 0, 280, 281, 588, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 589, 590, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 591, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 594, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 595, 596, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 597,
	0, 598, 356, 0, 357, 358, 359, 360, 361, 599,
	600, 601, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 602, 603, 0, 604, 0, 372, 373, 0, 605,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 606, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 607, 435, 608, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 609, 0, 446, 0, 610, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 611, 459, 460, 461, 612, 462, 463, 464,
	613, 465, 614, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 615, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 616, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 502,
	503, 519, 520, 0, 521, 522, 523, 524, 525, 526,
	617, 0, 527, 0, 528, 529, 530, 531, 504, 532,
	537, 618, 533, 534, 535, 536, 619, 0, 539, 540,
	0, 538, 0, 541, 542, 543, 544, 545, 546, 334,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 249, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 691, 262, 263,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 580, 581,
	0, 271, 582, 272, 583, 0, 584, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 585, 586, 587,
	0, 280, 281, 588, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	589, 590, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 591, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 594, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 595, 596, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 597, 0, 598, 356, 0,
	357, 358, 359, 360, 361, 599, 600, 601, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 602, 603, 0,
	604, 0, 372, 373, 0, 605, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 606, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 607, 435, 608, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 609,
	0, 446, 0, 610, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 611, 459,
	460, 461, 612, 462, 463, 464, 613, 465, 614, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 615, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 616, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 502, 503, 519, 520, 0,
	521, 522, 523, 524, 525, 526, 617, 0, 527, 0,
	528, 529, 530, 531, 504, 532, 537, 618, 533, 534,
	535, 536, 619, 0, 539, 540, 0, 538, 0, 541,
	542, 543, 544, 545, 546, 334, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 685, 0, 249, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 675, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 673, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 599, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 674, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 686, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 676, 497, 0, 498, 499,
	505, 506, 500, 501, 682, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 677, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 681, 621, 622, 623, 0, 557, 0, 549,
	679, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 667, 0, 249,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 580, 581, 0, 271, 582, 272,
	583, 0, 584, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 585, 586, 587, 0, 280, 281, 588,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 589, 590, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 591, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 594, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 595,
	596, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 597, 0, 598, 356, 0, 357, 358, 359, 360,
	361, 599, 600, 601, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 602, 603, 0, 604, 0, 372, 373,
	0, 605, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 606, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 607, 435, 608,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 609, 0, 446, 0, 610,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 611, 459, 460, 461, 612, 462,
	463, 464, 613, 465, 614, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 615, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 616, 497,
	0, 498, 499, 668, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 502, 503, 519, 520, 0, 521, 522, 523, 524,
	525, 526, 617, 0, 527, 0, 528, 529, 530, 531,
	504, 532, 537, 618, 533, 534, 535, 536, 619, 0,
	539, 540, 0, 538, 0, 541, 542, 543, 544, 545,
	546, 334, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	664, 0, 249, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 658, 0, 249, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	580, 581, 0, 271, 582, 272, 583, 0, 584, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 585,
	586, 587, 0, 280, 281, 588, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 589, 590, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	591, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 594, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 595, 596, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 597, 0, 598,
	356, 0, 357, 358, 359, 360, 361, 599, 600, 601,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 602,
	603, 0, 604, 0, 372, 373, 0, 605, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 606,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 607, 435, 608, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 609, 0, 446, 0, 610, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	611, 459, 460, 461, 612, 462, 463, 464, 613, 465,
	614, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 615, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 616, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 502, 503, 519,
	520, 0, 521, 522, 523, 524, 525, 526, 617, 0,
	527, 0, 528, 529, 530, 531, 504, 532, 537, 618,
	533, 534, 535, 536, 619, 0, 539, 540, 0, 538,
	0, 541, 542, 543, 544, 545, 546, 334, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 636, 0, 249, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	599, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 249, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	249, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 3289, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 249, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 3237, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 249, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 3178, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 249, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	3176, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 249, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 3162, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	249, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 356, 0, 357, 358, 359,
	360, 361, 2761, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 249, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 580, 581, 0, 271, 582, 272, 583, 0, 584,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	585, 586, 587, 0, 280, 281, 588, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 589, 590, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 591, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 594, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 595, 596, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 597, 0,
	598, 356, 0, 357, 358, 359, 360, 361, 599, 600,
	601, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	602, 603, 0, 604, 0, 372, 373, 0, 605, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	606, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 607, 435, 608, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 609, 0, 446, 0, 610, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 611, 459, 460, 461, 612, 462, 463, 464, 613,
	465, 614, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 615, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 616, 497, 0, 498, 499,
	668, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 502, 503,
	519, 520, 0, 521, 522, 523, 524, 525, 526, 617,
	0, 527, 0, 528, 529, 530, 531, 504, 532, 537,
	618, 533, 534, 535, 536, 619, 0, 539, 540, 0,
	538, 0, 541, 542, 543, 544, 545, 546, 334, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 249, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 579, 0, 2108, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 580, 581, 0,
	271, 582, 272, 583, 0, 584, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 585, 586, 587, 0,
	280, 281, 588, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 589,
	590, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 591, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	594, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 595, 596, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 597, 0, 598, 356, 0, 357,
	358, 359, 360, 361, 599, 600, 601, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 602, 603, 0, 604,
	0, 372, 373, 0, 605, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 606, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	607, 435, 608, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 609, 0,
	446, 0, 610, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 611, 459, 460,
	461, 612, 462, 463, 464, 613, 465, 614, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	615, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 616, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 0, 502, 503, 519, 520, 0, 521,
	522, 523, 524, 525, 526, 617, 0, 527, 0, 528,
	529, 530, 531, 504, 532, 537, 618, 533, 534, 535,
	536, 619, 0, 539, 540, 0, 538, 0, 541, 542,
	543, 544, 545, 546, 334, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 249, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 580, 581, 0, 271, 582, 272, 583,
	0, 584, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 585, 586, 587, 0, 280, 281, 588, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 589, 590, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 591, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 594, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 595, 596,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	597, 0, 598, 356, 0, 357, 358, 359, 360, 361,
	1466, 600, 601, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 602, 603, 0, 604, 0, 372, 373, 0,
	605, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 606, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 607, 435, 608, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 609, 0, 446, 0, 610, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 611, 459, 460, 461, 612, 462, 463,
	464, 613, 465, 614, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 615, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 616, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	502, 503, 519, 520, 0, 521, 522, 523, 524, 525,
	526, 617, 0, 527, 0, 528, 529, 530, 531, 504,
	532, 537, 618, 533, 534, 535, 536, 619, 0, 539,
	540, 0, 538, 0, 541, 542, 543, 544, 545, 546,
	334, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 249, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 580,
	581, 0, 271, 582, 272, 583, 0, 584, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 585, 586,
	587, 0, 280, 281, 588, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 589, 590, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 591,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 594, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 595, 596, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 597, 0, 598, 356,
	0, 357, 358, 359, 360, 361, 599, 600, 601, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 602, 603,
	0, 604, 0, 372, 373, 0, 605, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 606, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 607, 435, 608, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	609, 0, 446, 0, 610, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 611,
	459, 460, 461, 612, 462, 463, 464, 613, 465, 614,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 615, 476, 1133, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 616, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 502, 503, 519, 520,
	0, 521, 522, 523, 524, 525, 526, 617, 0, 527,
	0, 528, 529, 530, 531, 504, 532, 537, 618, 533,
	534, 535, 536, 619, 0, 539, 540, 0, 538, 0,
	541, 542, 543, 544, 545, 546, 334, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	249, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 580, 581, 0, 271, 582,
	272, 583, 0, 584, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 585, 586, 587, 0, 280, 281,
	588, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 589, 590, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 591, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 594, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	595, 596, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 597, 0, 598, 0, 0, 357, 358, 359,
	360, 361, 599, 600, 601, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 602, 603, 0, 604, 0, 372,
	373, 0, 605, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 606, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 607, 435,
	608, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 609, 0, 446, 0,
	610, 447, 448, 440, 449, 450, 0, 452, 453, 454,
	455, 456, 0, 457, 458, 611, 459, 460, 461, 612,
	462, 463, 464, 613, 465, 614, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 0, 474, 475, 615, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 616,
	0, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 502, 503, 519, 520, 0, 521, 522, 523,
	524, 525, 526, 617, 0, 527, 0, 528, 529, 530,
	531, 504, 532, 537, 618, 533, 534, 535, 536, 619,
	0, 539, 540, 0, 538, 0, 541, 542, 543, 544,
	545, 546, 334, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 1709, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 1709, 1680, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 1700, 0, 0, 0, 1727,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1704, 1705, 1706, 0,
	1718, 0, 0, 1728, 0, 1686, 0, 0, 0, 1708,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 1725, 0, 0,
	0, 0, 0, 0, 1695, 1696, 0, 0, 0, 0,
	1718, 0, 0, 1728, 0, 0, 0, 0, 0, 1708,
	1710, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 1701, 1725, 0, 0,
	0, 0, 0, 0, 1695, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 1678, 1679, 0, 1711, 1712, 1713,
	1721, 1722, 1723, 0, 0, 0, 1701, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 1714, 1709, 0, 0,
	0, 0, 0, 0, 1681, 0, 1715, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 1703, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 1711, 1712, 1713, 1721,
	1722, 1723, 0, 1718, 0, 0, 1728, 0, 0, 0,
	0, 0, 1708, 1710, 0, 1714, 1709, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 1724, 0,
	1725, 1727, 0, 0, 0, 1717, 0, 1695, 1696, 1692,
	1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682,
	1683, 1684, 1685, 1687, 1688, 1716, 0, 1680, 0, 0,
	0, 0, 0, 2972, 0, 0, 0, 1700, 0, 1701,
	0, 0, 0, 0, 0, 1717, 1697, 0, 0, 1692,
	1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682,
	1683, 1684, 1685, 1687, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 2359, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 1709, 0, 0, 0, 0, 1707, 0,
	1681, 0, 1718, 0, 0, 1728, 0, 0, 1727, 0,
	0, 1708, 1710, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 1725,
	0, 0, 0, 0, 1680, 0, 1695, 1696, 0, 0,
	0, 0, 0, 1719, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1716, 0, 1678, 1679, 0, 1711,
	1712, 1713, 1721, 1722, 1723, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 1709,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 1703, 1704, 1705, 1706, 1715, 0,
	1700, 0, 0, 0, 1686, 0, 0, 0, 1717, 1697,
	0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691,
	1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0,
	0, 0, 4181, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 1728, 0, 0, 0, 0, 0, 1708, 1710,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 1724, 0, 1725, 0, 0, 0,
	0, 0, 0, 1695, 1696, 0, 0, 1702, 0, 0,
	1703, 1704, 1705, 1706, 0, 0, 0, 0, 0, 0,
	1686, 1716, 1678, 1679, 0, 1711, 1712, 1713, 1721, 1722,
	1723, 0, 1719, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 1709, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 1718, 0, 0, 1728, 0,
	1727, 0, 0, 0, 1708, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	1724, 0, 1725, 0, 0, 0, 1680, 0, 0, 1695,
	1696, 0, 0, 0, 0, 1715, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 0,
	0, 4092, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 1703, 1704, 1705, 1706,
	0, 1715, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 1678, 1679, 0, 1711, 1712, 1713, 1721,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 0, 1728, 1714, 1709, 0, 0, 0,
	1708, 1710, 0, 1681, 0, 0, 0, 0, 0, 0,
	1707, 1727, 0, 0, 0, 0, 1724, 0, 1725, 0,
	0, 0, 0, 0, 0, 1695, 1696, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 1719, 1697, 1701, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 0, 4091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694,
	0, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688,
	0, 0, 1718, 0, 3937, 1728, 1707, 0, 0, 0,
	0, 1708, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 1724, 0, 1725,
	0, 0, 0, 0, 0, 0, 1695, 1696, 0, 0,
	1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 0,
	0, 1719, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 1714, 1709, 0, 0, 0, 0, 1701, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690,
	1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 0, 0,
	3797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 1703, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 1686, 1678, 1679, 1702, 1711, 1712,
	1713, 1721, 1722, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 1709, 0,
	0, 0, 1719, 0, 0, 1681, 0, 0, 0, 1718,
	0, 0, 1728, 1727, 0, 0, 0, 0, 1708, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 1725, 0, 0, 1680,
	0, 0, 0, 1695, 1696, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 1726, 0, 0,
	0, 3740, 0, 0, 0, 0, 0, 0, 0, 1703,
	1704, 1705, 1706, 0, 0, 1715, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 1679,
	0, 1711, 1712, 1713, 1721, 1722, 1723, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 1728, 0, 0,
	1714, 1709, 0, 1708, 1710, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 1707, 0, 1727, 0, 0, 1724,
	0, 1725, 0, 0, 0, 0, 0, 0, 1695, 1696,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 1719,
	1701, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 1718, 3739, 1707,
	1728, 0, 0, 0, 0, 0, 1708, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 1724, 0, 1725, 0, 0, 0, 0, 0,
	0, 1695, 1696, 0, 0, 1678, 1679, 0, 1711, 1712,
	1713, 1721, 1722, 1723, 1719, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1714, 1709, 0,
	0, 0, 0, 1701, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1717,
	0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0,
	1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0,
	0, 0, 0, 3738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 1703,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 1686,
	1678, 1679, 1702, 1711, 1712, 1713, 1721, 1722, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 1709, 0, 0, 0, 1719, 0, 0,
	1681, 0, 0, 0, 1718, 0, 0, 1728, 1727, 0,
	0, 0, 0, 1708, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 1725, 0, 0, 1680, 0, 0, 0, 1695, 1696,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 1692, 1693, 1699, 1720,
	1698, 1694, 0, 1691, 1689, 1690, 1682, 1683, 1684, 1685,
	1687, 1688, 1726, 0, 0, 0, 3436, 0, 0, 0,
	0, 0, 0, 0, 1703, 1704, 1705, 1706, 0, 0,
	1715, 0, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 1711, 1712, 1713, 1721,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 1728, 0, 0, 1714, 1709, 0, 1708, 1710,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 1707,
	0, 1727, 0, 0, 1724, 0, 1725, 0, 0, 0,
	0, 0, 0, 1695, 1696, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 1719, 1701, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1717,
	0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0,
	1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0,
	0, 0, 1718, 2970, 1707, 1728, 0, 0, 0, 0,
	0, 1708, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 1724, 0, 1725,
	0, 0, 0, 0, 0, 0, 1695, 1696, 0, 0,
	1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 1719,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 1714, 1709, 0, 0, 0, 0, 1701, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 0, 2969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 1703, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 1686, 1678, 1679, 1702, 1711, 1712,
	1713, 1721, 1722, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 1709, 0,
	0, 0, 1719, 0, 0, 1681, 0, 0, 0, 1718,
	0, 0, 1728, 1727, 0, 0, 0, 0, 1708, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 1725, 0, 0, 1680,
	0, 0, 0, 1695, 1696, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 1726, 0, 0,
	0, 2968, 0, 0, 0, 0, 0, 0, 0, 1703,
	1704, 1705, 1706, 0, 0, 1715, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 1679,
	0, 1711, 1712, 1713, 1721, 1722, 1723, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 1728, 0, 0,
	1714, 1709, 0, 1708, 1710, 0, 2905, 0, 1681, 0,
	0, 0, 0, 0, 1707, 0, 1727, 0, 0, 1724,
	0, 1725, 0, 0, 0, 0, 0, 0, 1695, 1696,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 1719,
	1701, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2906, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 1692, 1693,
	1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683,
	1684, 1685, 1687, 1688, 0, 0, 0, 1718, 2967, 1707,
	1728, 0, 0, 0, 0, 0, 1708, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 1724, 0, 1725, 0, 0, 0, 0, 0,
	0, 1695, 1696, 0, 0, 1678, 1679, 0, 1711, 1712,
	1713, 1721, 1722, 1723, 1719, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1714, 1709, 0,
	0, 0, 0, 1701, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1717,
	0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0,
	1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0,
	0, 2934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 1703,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 1686,
	0, 3054, 1702, 0, 3053, 0, 0, 0, 0, 0,
	0, 2503, 0, 0, 0, 0, 0, 0, 1678, 1679,
	0, 1711, 1712, 1713, 1721, 1722, 1723, 1719, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 1728, 0, 0,
	1714, 1709, 0, 1708, 1710, 2502, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 1724,
	0, 1725, 0, 0, 0, 0, 0, 0, 1695, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	1701, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 1692, 1693, 1699, 1720,
	1698, 1694, 0, 1691, 1689, 1690, 1682, 1683, 1684, 1685,
	1687, 1688, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 1686, 1678, 1679, 0, 1711, 1712, 1713, 1721,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 1709, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 1718, 0, 1707,
	1728, 1727, 0, 0, 0, 0, 1708, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 1724, 0, 1725, 0, 0, 1680, 0, 0,
	0, 1695, 1696, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 1719, 0, 1697, 0, 0, 1716,
	0, 1678, 1679, 0, 1711, 1712, 1713, 1721, 1722, 1723,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 1709, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 1703, 1704, 1705,
	1706, 0, 0, 1715, 0, 1700, 0, 1686, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 1717,
	0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694, 0,
	1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688, 0,
	0, 0, 1718, 0, 0, 1728, 0, 0, 0, 0,
	0, 1708, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 1724, 0, 1725,
	0, 0, 0, 0, 0, 0, 1695, 1696, 0, 0,
	0, 0, 1702, 0, 0, 1703, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 1716, 1686, 1678, 1679, 0, 1711,
	1712, 1713, 1721, 1722, 1723, 0, 0, 1719, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 1709,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	1718, 0, 0, 1728, 1727, 0, 0, 0, 0, 1708,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 1724, 0, 1725, 0, 0,
	1680, 0, 0, 0, 1695, 1696, 0, 0, 1715, 989,
	1700, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 1692, 1693, 1699, 1720,
	1698, 1694, 0, 1691, 1689, 1690, 1682, 1683, 1684, 1685,
	1687, 1688, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	1703, 1704, 1705, 1706, 0, 0, 1715, 0, 0, 0,
	1686, 0, 0, 0, 0, 3060, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 0, 1728, 0,
	0, 1714, 1709, 0, 1708, 1710, 3055, 0, 0, 1681,
	0, 0, 0, 0, 0, 1707, 0, 1727, 0, 0,
	1724, 0, 1725, 0, 0, 0, 0, 0, 0, 1695,
	1696, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	1719, 1701, 1697, 0, 0, 0, 0, 1717, 0, 0,
	0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3417, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 1704, 1705, 1706, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 1692,
	1693, 1699, 1720, 1698, 1694, 0, 1691, 1689, 1690, 1682,
	1683, 1684, 1685, 1687, 1688, 0, 0, 0, 1718, 0,
	1707, 1728, 0, 0, 0, 0, 0, 1708, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 1724, 0, 1725, 0, 0, 0, 0,
	0, 0, 1695, 1696, 0, 0, 1678, 1679, 0, 1711,
	1712, 1713, 1721, 1722, 1723, 1719, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 1714, 1709,
	0, 0, 0, 0, 1701, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	1700, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694,
	0, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 0, 0, 0, 0, 0,
	1703, 1704, 1705, 1706, 0, 0, 0, 0, 0, 0,
	1686, 0, 0, 1702, 0, 0, 0, 0, 0, 1678,
	1679, 0, 1711, 1712, 1713, 1721, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 1714, 1709, 0, 0, 1718, 2971, 0, 1728, 1681,
	0, 0, 0, 0, 1708, 1710, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 1725, 0, 0, 0, 0, 0, 0, 1695,
	1696, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 1716, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 1692, 1693, 1699,
	1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683, 1684,
	1685, 1687, 1688, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 1703, 1704, 1705, 1706, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 3022, 0, 1678, 1679, 0, 1711, 1712, 1713, 1721,
	1722, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 1709, 0, 1718, 0,
	0, 1728, 0, 1681, 0, 0, 0, 1708, 1710, 0,
	1707, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 1725, 0, 0, 0, 0,
	1702, 0, 1695, 1696, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	1716, 0, 0, 0, 0, 1719, 1697, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 1703, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 0, 1692, 1693, 1699, 1720, 1698, 1694,
	0, 1691, 1689, 1690, 1682, 1683, 1684, 1685, 1687, 1688,
	0, 0, 1718, 0, 882, 1728, 925, 0, 0, 0,
	0, 1708, 1710, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 1725,
	890, 0, 0, 1702, 0, 0, 1695, 1696, 0, 0,
	0, 0, 0, 0, 0, 0, 904, 888, 887, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 889, 0, 0, 0, 0,
	892, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 0, 0, 901, 902, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 926,
	894, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 0, 0, 1717, 0, 924, 0, 1692, 1693, 1699,
	1720, 1698, 1694, 0, 1691, 1689, 1690, 1682, 1683, 1684,
	1685, 1687, 1688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 897, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 898, 899, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 906, 905, 0, 0, 0, 0, 0, 0, 900,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 1692, 1693, 1699, 1720, 1698, 1694, 0, 1691, 1689,
	1690, 1682, 1683, 1684, 1685, 1687, 1688, 0, 0, 0,
	0, 0, 0, 893, 0, 0, 932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 891, 0, 0,
	0, 922, 923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 931,
	916, 0, 909, 907, 0, 912, 0, 0, 0, 0,
	0, 913, 0, 0, 884, 0, 928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 914, 0, 0,
	0, 0, 911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 919, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 921,
}
var sqlPact = [...]int{

	6721, -1000, -1000, -1000, -1000, 144, -1000, -1000, 143, 141,
	140, 139, 136, 135, 134, 132, 130, 129, -1000, -1000,
	-1000, -1000, -1000, -1000, 125, -1000, -1000, 124, -1000, 116,
	115, 113, -1000, -1000, 112, -1000, 111, -1000, -1000, -1000,
	-1000, 110, 106, 105, 82110, 81587, 82626, 2143, 100834, 88846,
	1970, 73247, 100311, 72724, 99788, 2038, 99265, 2581, 104, -1000,
	98742, 101, 100, 98, -1000, 98219, -1000, 1963, -1000, 95,
	4061, 59641, 94, 92, 91, 2517, 90, -1000, 89, 88,
	87, -1000, 9279, 1443, -1000, 86, 85, -1000, 8333, 6865,
	86761, 84, 83, 2290, 82, 81, 58595, 80, 78, 2196,
	2760, -1000, -1000, 1926, -1000, -1000, 77, 75, 74, 72,
	71, 70, 69, 68, 67, 64, 63, -1000, 62, 61,
	60, 57, 55, 54, 52, 47, -1000, 46, 45, 44,
	43, 34, 33, 32, 30, 27, 22, 21, 20, 18,
	-1000, 112202, 17, 1749, 1571, 1568, 1555, 1546, 1536, 881,
	16, 15, 14, 13, 11, 10, 9, 8, 4, -1000,
	1, 0, -1, -2, -3, -5, -6, -7, 117, -8,
	-9, -10, -15, -16, -22, -24, 2110, -1000, 1452, 1505,
	27681, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 106510,
	101350, -25, -81, -28, -1000, 3140, 753, 49151, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 208, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 407, 1840, 660, -1000, -1000, -1000, 97703,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2141, -65,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 659, -1000, 2140,
	232, 2103, -1000, -1000, -1000, 3197, -1000, -1000, 101350, -1000,
	953, -1000, -1000, 3558, 3555, 1954, 657, 88323, -1000, 1838,
	-1000, 829, 29322, -1000, 1109, -1000, 29322, 205, -1000, -1000,
	-1000, -1000, -1000, -1000, 3554, 3553, 3551, 3550, 3549, -1000,
	-1000, 72201, 21063, 71678, 71155, 97187, 20530, 81064, 80541, 96664,
	66470, 950, -1000, -1000, -1000, 1343, -1000, -1000, -1000, -1000,
	-1000, -1000, -54, 67517, 3346, 101350, -1000, 190, -1000, -1000,
	-1000, -1000, -1000, -1000, 42119, 1046, 41560, 975, 41001, 658,
	-1000, -1000, -1000, -1000, 65937, -1000, 96141, 2297, 3547, 3546,
	1041, 3545, 3092, 1682, 3544, 1824, 1115, 3542, 3541, 3540,
	3539, 3538, 3537, 1347, 95618, 2832, 95095, 1608, 65404, 945,
	80018, 82626, 2521, 94572, 1344, 1299, -1000, -1000, -1000, -1000,
	2918, 2756, 2739, 1211, -1000, -1000, 2257, 3536, 3535, 3533,
	3532, 3531, 105994, 1662, 3530, 2370, 3528, 3527, 3526, 3525,
	3524, 3520, 3519, -1000, 79495, 944, 78972, 78449, 3224, 94049,
	77926, 93526, 64871, 40442, 1474, -1000, -1000, -1000, 51239, 8194,
	7969, 93003, 53391, 82626, 82626, -1000, -1000, -1000, -1000, -1000,
	39883, 784, 39324, 1321, -1000, -1000, 51777, 2796, -1000, -1000,
	-1000, -1000, 38765, 697, 38206, 1043, 101350, -1000, 2831, 1801,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2071, 1484, 3360, 2631, 64338, 1932,
	1285, 3169, 2917, 2900, 1391, 3517, 3516, 2440, 2898, 2897,
	2895, 2894, 2891, 1364, 2465, 363, 27122, 2822, 1537, 37647,
	1413, 1397, 2890, 2888, 3374, 1920, 1829, 2091, 70632, 3515,
	3514, 3134, 2885, 2884, 2790, -1000, -1000, -1000, -1000, 1368,
	-1000, -1000, -1000, -1000, -1000, 73763, -1000, -1000, 1218, -1000,
	-1000, 1218, -1000, -1000, -1000, -1000, -1000, 1256, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1452,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2063, -1000, 1870, -1000, -1000, 2299, 3115, 3115, 3115, 3196,
	392, 358, -1000, 117, -1000, -1000, 111992, -1000, -1000, 42666,
	42666, 42666, 42666, 42666, 42666, 42666, 2045, -1000, 652, -1000,
	-1000, 702, -1000, 651, 491, -1000, -1000, -1000, -1000, -1000,
	-1000, 650, -1000, -1000, -1000, -1000, -1000, -1000, 3346, -1000,
	23780, -1000, -1000, -1000, 381, 648, 42666, -1000, -1000, 3401,
	3400, 897, -1000, 184, 849, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2829, 646, 641,
	-1000, 638, 635, 632, 631, 627, -1000, -1000, -1000, 626,
	624, 621, 620, 619, 616, 615, 612, -1000, 1925, -1000,
	-1000, -1000, -1000, -1000, -1000, 571, 568, 568, 568, -1000,
	940, -1000, -1000, -1000, 206, 567, 193, 564, 557, 556,
	-1000, 606, 605, 604, 602, 601, 598, 596, 591, 589,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 938, -1000, -1000,
	-1000, -1000, -56, 101350, -1000, 407, -56, -1000, -1000, 588,
	-1000, 31522, 31522, 31522, -1000, -1000, 2139, 42666, -1000, 2826,
	-1000, -44, -44, 756, 50193, -1000, 48105, 756, 595, 713,
	54956, -1000, 2788, -1000, -1000, 587, 183, -1000, -1000, -1000,
	-1000, 21594, 2787, 101350, 101350, 82626, 82626, 82626, 3011, 42666,
	-1000, -1000, 63805, 101350, 83142, 3290, 60157, 63289, 101350, 2827,
	59118, -1000, 3138, -1000, -1000, 101350, -1000, 42666, -1000, 3289,
	1598, 68040, 3230, -64, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2345, 2322, 993, 2170, -1000, 3034, 1943, -1000, 29322,
	3079, -1000, -1000, -1000, 173, 21594, -1000, -1000, -1000, -1000,
	-1000, -1000, 2470, 2989, 1437, -1000, 2165, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1771, 2988, -1000, 1959,
	2987, 1743, -1000, -1000, 2326, -1000, -1000, 3127, -1000, -1000,
	1916, 2983, -42, -1000, -1000, 2437, -1000, -1000, 1892, -1000,
	-1000, 882, 2982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 77403, 52853, 51777, 67517, -60, -1000, -1000, -1000,
	-1000, -72, -1000, 19997, 111992, -1000, -1000, -1000, -1000, 1756,
	111992, 775, -1000, -1000, 2981, -1000, 111992, 607, -1000, -1000,
	2973, -1000, 2825, -1000, -1000, 2262, -1000, -1000, 3512, -1000,
	-1000, 3511, -1000, 3510, 3509, 3508, -1000, 1611, 1928, 3507,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 76887, 2137, -1000,
	-1000, 75841, -1000, 2258, 3229, -1000, -1000, -1000, 76364, 943,
	-1000, 882, 2254, -1000, 86238, 910, -1000, 3505, 3202, 2582,
	882, 2250, -1000, -1000, -1000, -1000, -1000, 913, -1000, 56514,
	-1000, 56514, -1000, 1454, -1000, 105478, -44, 82626, 3346, -1000,
	3503, -1000, -1000, -1000, -1000, -1000, 2972, 3502, 3501, 3498,
	-1000, 101350, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 195,
	2971, -1000, -1000, 85722, 195, 2970, -1000, 195, 2968, -1000,
	85206, -1000, -1000, 2157, 2966, -1000, 197, 2959, -1000, -1000,
	196, 2956, -1000, -1000, -79, 2952, -1000, -1000, 111992, -1000,
	-1000, -1000, -91, -1000, -1000, -1000, 753, -1000, 50716, -1000,
	50716, 87800, 67001, 853, 637, 58072, 111992, -1000, -1000, -1000,
	-1000, 111992, -1000, -1000, -1000, -187, -1000, -1000, 67001, 51777,
	111992, -1000, -1000, -1000, -1000, 111992, -1000, -1000, -1000, 67001,
	75841, -1000, 92480, 75325, -1000, -1000, 1302, 2421, -1000, -1000,
	-1000, 67001, 1204, 67001, 67001, 67001, -1000, 91957, -1000, -1000,
	1921, 1159, 3129, 1859, 82626, -1000, 1649, -1000, -1000, -1000,
	3153, -1000, -1000, 2824, -1000, 62773, 84690, -1000, 84174, -1000,
	83658, -1000, 82626, -1000, 82626, -1000, 3497, 3496, 3495, 3494,
	-1000, 3491, 3143, -1000, 111992, 3141, -1000, 3490, 3221, 2822,
	111992, -1000, 2978, 1559, 1539, 101350, -1000, -1000, 101350, -1000,
	101350, -1000, -1000, -1000, 1398, -1000, -1000, 2340, -1000, -1000,
	-1000, -1000, 82626, -1000, -1000, -1000, -1000, -1000, -1000, 2821,
	-1000, 1603, -1000, 1646, -1000, 1300, -1000, -1000, 198, -1000,
	-1000, -64, -1000, 104962, -1000, 2299, -1000, 101350, -1000, 2332,
	2810, 2818, 1723, 2148, 2434, -1000, 37088, 2441, 45401, 2160,
	117, -1000, -1000, 117, 117, 28775, -1000, -1000, 60157, 60157,
	21594, 1269, 42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666,
	42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666,
	42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666, 42666,
	42666, 42666, 42666, 42666, 42666, 42666, 42666, 1924, 42666, 1245,
	42666, 42666, 42666, 42666, 1475, -1000, -1000, 1810, 441, 1880,
	-1000, 3337, 3337, 3337, 1341, 1341, 12420, 12420, 450, 3489,
	702, -1000, 42666, -1000, 56, 42666, 22127, -1000, 358, 12610,
	2384, -1000, 356, 22686, -1000, -1000, -1000, 23780, 491, 36529,
	42666, 929, 111992, -1000, -1000, 1702, 3358, 19466, 2833, 2659,
	583, 744, 738, 26563, 26004, 25445, 24886, 726, 42666, 42666,
	42666, 42666, 42666, 42666, 42666, 42666, -1000, -1000, 3367, -1000,
	3358, -1000, -1000, -1000, -1000, 3358, 1265, 1098, 3358, -1000,
	3358, 3358, 4658, 4658, 35982, 35423, 34864, 45948, 34305, 42666,
	24327, 33746, 33187, -1000, 101350, -56, 3287, 42666, 210, -1000,
	110807, -1000, 210, 210, 579, -94, 111992, 2427, 2427, 49672,
	2185, 2053, 2053, 2053, -1000, 756, 15189, 756, 90920, 2068,
	756, 756, 165, 211, 353, 47584, 2826, 90920, 682, 578,
	-29, -30, -33, -1000, -1000, -35, -40, -1000, -1000, 82626,
	577, 22127, 21594, 164, 1370, -110, 2504, 2501, 2489, -1000,
	2482, 1733, -113, 1184, 82626, 101350, -92, -1000, 6874, -115,
	-1000, 1206, 161, 3358, -1000, -1000, -1000, -1000, -1000, 3488,
	3487, -1000, 935, 576, 572, 385, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 571, 568, 568, 568, -1000, 206,
	567, 193, 564, 557, 556, -1000, -1000, -1000, -1000, -1000,
	2786, 82626, 101350, -72, 83142, -99, -1000, -1000, -1000, -1000,
	-1000, 82626, 783, -116, 1047, -64, -1000, -1000, -1000, 1218,
	-1000, 1927, -1000, -1000, -1000, -1000, -1000, -1000, 1359, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 897, -1000, -1000,
	-1000, -1000, -1000, -1000, 3348, 3344, -57, -1000, -1000, 21594,
	-1000, -67, 1665, 1705, -1000, 70109, 2260, 3114, 3106, 1440,
	-1000, 1389, 1182, 3194, 73763, 3249, 3257, 914, -1000, 2784,
	-1000, -1000, 828, 1566, 1688, 1181, 73763, 1959, -1000, 60157,
	-1000, 2485, 3193, 1252, 1279, 1252, 1252, 1271, -1000, 73763,
	1684, 1180, 1179, -1000, 1170, 1168, -1000, -68, 3248, 3250,
	213, -1000, 2781, 1167, -1000, -1000, 82626, 21594, 1439, 1425,
	1676, 1161, -59, -1000, 3241, 3238, 1158, 1157, -1000, 5398,
	-1000, 67001, 1711, 2951, 2621, 729, 2618, -1000, -1000, 729,
	-60, 67517, 101350, 157, -1000, 56, 42666, 42666, 56, 42666,
	56, 3218, 2950, -1000, -1000, -1000, -1000, -1000, 3486, 1852,
	2368, -1000, -1000, 555, 2249, 2777, 101350, 2547, -62, 82626,
	-1000, 2947, 60679, 1959, 2247, -1000, -1000, 74802, -1000, 2946,
	407, 2245, -1000, 575, 3485, -1000, 104446, -1000, 3138, 1280,
	2944, 994, 391, 3282, -1000, 391, 57030, -1000, 101350, -1000,
	-44, -1000, 101350, -1000, -1000, -1000, 3484, -1000, 82626, -1000,
	-1000, 82626, 195, 2937, -1000, 82626, -1000, 82626, 194, 2933,
	-1000, -1000, 101350, -1000, 82626, 82626, -1000, 101350, 101350, 67001,
	67001, 7084, 69077, -118, -121, 342, -1000, 91441, 101350, 992,
	69593, 101350, 3066, 878, 51777, -1000, -124, -187, 2602, 853,
	853, 729, -1000, 729, -1000, 82626, 2817, -1000, -1000, 67001,
	853, 853, 853, -1000, -1000, -1000, -1000, 3483, 3482, 3481,
	-1000, -1000, -1000, 879, 82626, 101350, 82626, -1000, -1000, 101350,
	-1000, 101350, 101350, -1000, 879, 101350, 879, 101350, 879, 101350,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56, 42666, -1000,
	-1000, 3480, 1507, -1000, 2816, -1000, 2814, -1000, -17, -1000,
	-1000, -1000, -1000, -1000, 1738, 82626, 82626, 82626, 82626, 101350,
	82626, -1000, 73763, -1000, 2332, 2810, -1000, -1000, -1000, -1000,
	-1000, -1000, 1298, 2116, -1000, 2438, -1000, 1422, -1000, -1000,
	-1000, 111992, 46495, -1000, -1000, 111992, 1819, -1000, 44854, 44307,
	-1000, -1000, 1534, 82626, 2539, -1000, 2539, -112, -1000, 110387,
	2424, 82626, -1000, -1000, -1000, -1000, -1000, 816, 1345, 1345,
	1447, 1447, 1447, 1447, 3236, 2004, 1075, 254, 9049, 9049,
	4961, 4961, 4961, 4961, 4961, 9049, 304, 1341, 1341, 304,
	304, 304, 304, 304, 1341, 1341, 1341, 9049, 9049, 9049,
	12420, 8399, 7656, 42666, 42666, 1155, 1808, 441, 4819, 42666,
	5916, 5916, 5916, 5916, -1000, 1930, -1000, -1000, -1000, -1000,
	2775, 553, 45948, 45948, -1000, -1000, -1000, -1000, 23233, 42666,
	-1000, -1000, -1000, -1000, 32628, -1000, -1000, 110204, -312, 339,
	-111, 24, -1000, 42666, 42666, 42666, 334, -1000, 156, 42666,
	101350, -1000, 107590, 681, -123, -1000, -126, 1314, -1000, 42666,
	-1000, -1000, 1154, -1000, 1149, 1127, 1113, -1000, 550, 331,
	-1000, 154, -1000, 2051, 549, 539, 42666, -1000, -1000, -1000,
	-1000, -1000, 110039, -1000, -1000, 109802, -1000, -1000, 109619, -1000,
	-1000, 109454, -1000, -1000, -1000, 111818, 107550, 14469, 14117, 10985,
	14029, 13862, -131, 326, -132, 323, 815, 813, 322, 320,
	319, -138, -1000, 3479, 3478, 3477, -1000, 3476, 3474, 3473,
	-1000, 3470, 3469, 3468, -1000, 3467, 3465, 3463, -1000, 3462,
	3461, 3458, -1000, 3457, 3456, 3455, -1000, 3452, 3451, 3446,
	-1000, 3444, 3443, 3439, -141, 318, -1000, 2773, -111, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 317, -1000, 314,
	-1000, 111645, -111, 311, 1067, -1000, 45948, 45948, 45948, -1000,
	309, -1000, 110624, -1000, 111408, 32081, 32081, 32081, 307, 111225,
	42666, -111, -146, -1000, -148, -1000, -1000, 456, -149, 877,
	31522, 48628, 21594, -1000, 877, 877, 42666, -1000, 42666, 2468,
	-1000, -1000, -1000, 2447, 2351, 2427, 49672, -1000, -1000, -1000,
	-1000, 90920, -1000, 3346, 2676, -1000, 90920, -1000, -1000, 101350,
	407, -1000, 90920, 90920, 21594, 756, -1000, 756, 90920, 609,
	-1000, -1000, -1000, -1000, -1000, 306, 53912, 24, 153, 21594,
	882, -1000, 2526, 2526, 2526, 2526, -1000, -1000, 101350, 1112,
	-61, -143, 3314, -1000, 1968, -1000, 60157, -1000, 698, 1055,
	21594, -1000, -1000, -1000, 532, -1000, 3358, 3358, -1000, 3358,
	101350, 2763, 145, 131, 60679, 60679, 924, 29322, -1000, 1218,
	-1000, -1000, 1446, -1000, 1867, -1000, 1079, -1000, -1000, -1000,
	-1000, 29322, -1000, 2223, 101350, 101350, 82626, -1000, 101350, -1000,
	2233, 103930, 2229, 60157, 101350, -1000, -1000, 531, 530, 2423,
	2405, 989, 101350, 101350, 2399, 103414, 102898, 101350, 2000, 42666,
	60679, 2121, 2172, 56, 56, -1000, -1000, 56, 522, 1247,
	82626, 82626, 101350, 82626, 1707, -1000, -1000, -1000, -1000, -1000,
	74279, -1000, -1000, 3363, 3362, -1000, 1252, -1000, -1000, -1000,
	1252, 1959, 1690, 101350, 82626, 60679, 1675, 101350, 1950, 56,
	56, -1000, -1000, 56, 510, 21594, 1858, -1000, 2844, 101350,
	3399, 101350, 101350, 101350, 60679, 3116, 102382, 101350, 101350, 60679,
	5398, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 62257, 997, 882, 1655, 1103, 73763, 51777, 876,
	51777, 2587, -1000, -1000, 18935, -1000, 111992, 111992, -1000, 111992,
	-1000, 61726, 101350, -1000, 942, 101350, 69593, 843, 2930, 55998,
	-72, 853, 67001, 82626, -62, 101350, -1000, -1000, 1959, 2927,
	407, 2225, -1000, 67001, 3280, 2920, 509, 3436, 3435, -1000,
	2131, 2218, -1000, -1000, 101866, 2999, 757, 101350, 877, 49672,
	1886, -1000, 54435, 961, 101350, 1791, 121, -1000, -1000, -1000,
	-19, 101350, -1000, 712, 3434, -1000, -1000, 195, -1000, 82626,
	195, 195, -1000, 82626, 82626, 2157, -1000, 197, -1000, 196,
	-1000, -79, -1000, -1000, 7084, 7084, 853, -137, 504, -1000,
	803, 798, 52315, 67001, -154, -1000, -1000, -1000, -1000, -1000,
	82626, 101350, 570, 2566, 101350, -155, -1000, 152, 503, -1000,
	2757, -1000, -1000, 878, 51777, 2755, -1000, -1000, 923, -1000,
	1295, 853, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -47, -72, -72, -72, -1000, 879, -1000, 879,
	-1000, 879, -1000, 111992, -1000, -1000, 1489, 1488, 101350, -1000,
	21594, 101350, 82626, 21594, 82626, 2809, 2807, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1011, -1000, 1819, 2108, -1000,
	491, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2319, -1000, -63, 28775, 2142, -1000, -1000, 82626, -49, 42666,
	42666, 4723, 4461, 42666, 45948, 45948, -1000, 42666, 875, -1000,
	-1000, -1000, -1000, -1000, 2744, 489, 42666, 60157, 5933, 5435,
	-1000, 303, 13673, 304, -1000, 42666, -1000, 302, 30975, -1000,
	110972, -51, -156, -1000, 15733, -111, -157, -1000, -1000, 695,
	-1000, 2907, -1000, 42666, 111060, 2227, 1960, 1700, 1514, 3358,
	3394, 18404, -1000, 57551, 883, 2083, 109217, -1000, -1000, -1000,
	-1000, 60157, 60157, 42666, 42666, -1000, 42666, 42666, 42666, -1000,
	-1000, -1000, 3358, 824, -1000, -1000, -1000, 824, -1000, -1000,
	1252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1252, -1000, 42666, -1000,
	-1000, 2741, 42666, -1000, 60157, 60157, 45948, 45948, 45948, 45948,
	45948, 45948, 45948, 45948, 45948, 45948, 45948, 45948, 45948, 45948,
	45948, 45948, 45948, 45948, 45948, 2355, 45948, 3335, 3335, 3335,
	-1000, 2680, 2741, 42666, 42666, 60157, 290, 285, 283, -1000,
	42666, -111, -1000, -1000, 7084, 488, -1000, 2306, -1000, 2658,
	-1000, 42666, -1000, -163, -1000, 2826, -1000, -1000, 2658, 2658,
	-162, 111992, 49672, 49672, -1000, 486, 42666, 2445, -1000, -1000,
	675, -310, -1000, 796, -1000, -1000, -1000, -1000, -1000, 407,
	-1000, -1000, -1000, 150, 90920, 90920, 674, -1000, -167, -1000,
	-1000, -168, -1000, 3279, 282, 21594, -1000, -1000, 3104, -1000,
	-1000, -1000, -1000, -1000, -1000, -72, 101350, 101350, 2097, 3393,
	-1000, 3359, 692, 673, 149, 3358, 281, 275, 268, -72,
	101350, 101350, 101350, -1000, -1000, -1000, 2464, -1000, -64, -1000,
	-1000, -1000, 42666, -1000, -1000, 3113, 1101, 1100, -1000, -1000,
	2914, -1000, 2210, -1000, 965, -1000, 1923, -1000, 42666, 42666,
	481, 480, 3431, 1713, 3430, 990, 2910, 2157, 2909, 2157,
	-1000, -1000, 835, -1000, 111992, -1000, 478, 477, -1000, -67,
	1661, 1618, 918, -1000, -1000, 42666, 42666, 90404, -1000, 408,
	3127, -52, -1000, -1000, 1573, 1099, -1000, -1000, -1000, -1000,
	1959, 1567, 1097, -1000, -1000, -1000, 902, -1000, -1000, 887,
	-1000, -1000, 42666, -1000, -68, 1096, 3239, 2209, 82626, 1092,
	-1000, 1074, -1000, -1000, -1000, 3234, 2157, 2904, 1094, -1000,
	-1000, -1000, -1000, -1000, 61210, -1000, 101350, 82626, 1588, 729,
	-1000, 2132, 729, 876, 2733, -1000, 2542, -1000, 82626, 3428,
	267, -175, -69, 60157, 3278, -1000, 2123, 507, 82626, 818,
	-1000, 3346, -1000, -1000, -1000, -1000, 3226, 82626, 3268, 2902,
	882, 56, 82626, 3388, -1000, -1000, 82626, 2899, 2129, 2205,
	2358, 757, 68561, -1000, 882, 2079, -77, -1000, 1791, 30416,
	3117, -176, -1000, -1000, -1000, 877, 57030, 49672, 42666, 3427,
	-177, -1000, -1000, -1000, -1000, 195, -1000, -1000, -1000, 194,
	-1000, -1000, -1000, -1000, -1000, -1000, 89367, 89367, 67001, 67001,
	67001, 853, 101350, 101350, 69593, -1000, 475, 101350, 101350, 474,
	-1000, 101350, 101350, 3426, 67001, -71, 472, -1000, 791, 788,
	785, -1000, -1000, -1000, -1000, -1000, -1000, -187, 56, -1000,
	2093, 82626, -1000, 17873, -1000, -1000, -1000, -1000, -1000, 879,
	-1000, -1000, 1986, 2156, 1986, 1774, 1760, -1000, 2107, -1000,
	-1000, -1000, -1000, 2537, 3110, 21594, 3227, 5916, 42666, 42666,
	382, 5213, 552, 5916, 42666, 42666, 60157, 6503, -182, 42666,
	42666, -1000, 42666, 672, 111992, 3386, 42666, 266, 265, -1000,
	-1000, -1000, 3357, -1000, -1000, -1000, 111992, 42666, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 263, -1000, 118, -1000, -1000,
	-1000, 107026, -1000, 42666, 262, 3192, -1000, 261, 257, 13380,
	7441, 109034, 108869, 108632, 256, -1000, -1000, 251, 250, 111992,
	2680, 111992, -1000, -1000, 720, 720, 1293, 1293, 1293, 1293,
	3335, 946, 1377, 885, 505, 505, 505, 523, 1106, 1106,
	505, 505, 505, 2732, 2350, 471, 7487, -1000, -1000, 111992,
	111992, 234, -1000, -1000, -1000, -111, 230, 7084, -1000, 2651,
	3191, 111992, -1000, 49672, 2651, 2651, -1000, -1000, 2351, 101350,
	111992, 49672, -1000, 2676, -1000, 16275, -1000, 21594, -1000, -1000,
	-1000, -1000, 3346, -1000, 53912, -1000, 469, -1000, -18, 3104,
	-1000, 780, -1000, -72, -72, -1000, -1000, 670, 3423, 688,
	21594, 229, -1000, -1000, -1000, -72, -72, -72, -1000, 3065,
	111992, 101350, 101350, 101350, 2873, -1000, 4439, -1000, 989, 108451,
	-190, -1000, 110387, 42666, 101350, -1000, -1000, 1753, 2417, 1034,
	-1000, 3158, 101350, -1000, 101350, -1000, -1000, 101350, 101350, 82626,
	101350, 2859, -191, 111992, -73, -1000, 778, -1000, 1263, -1000,
	17342, 101350, 82626, 101350, 82626, 2029, 2855, -192, 21594, -1000,
	3383, 3382, 2872, 3162, 3375, 101350, -1000, 101350, 82626, 3064,
	-1000, -1000, -1000, -1000, 1456, 1063, 876, -74, 468, -1000,
	777, -1000, -1000, 773, 876, -1000, 67001, 51777, 407, -1000,
	2562, -1000, 87277, 2138, 56, -1000, 3422, 89888, 466, -1000,
	2092, -1000, 667, 60679, 1959, 56, 82626, -1000, -1000, 407,
	226, -75, -1000, 972, 21594, 82626, 2869, 2361, 757, 68561,
	-1000, 1280, 2434, -1000, -76, -1000, 580, 56, 2079, -1000,
	-77, 111992, -1000, 772, -1000, -1000, -1000, -193, -1000, -1000,
	224, -1000, 3061, 3058, -1000, 2661, 42666, 465, 463, 101350,
	3047, -1000, -1000, -199, 2396, 2396, 67001, 51777, 67001, 878,
	-1000, 2226, -1000, -1000, -1000, -1000, -1000, 21594, 1535, -1000,
	461, 459, -1000, -1000, -1000, -1000, 3110, 5916, 5916, 42666,
	42666, 42666, 5916, 6503, -200, -1000, 5916, 5916, -111, -1000,
	-1000, 110972, -1000, -1000, -1000, 111992, -1000, 16811, 1991, -1000,
	108285, -1000, 28775, -1000, -1000, 42666, 42666, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 45948, 2723, 458, 60157, -1000,
	-1000, 219, 886, 42666, 42666, 2826, 886, 886, -1000, -201,
	-1000, -1000, -1000, 3346, -18, -1000, -1000, 3420, 21594, -1000,
	67001, 554, -1000, 3412, -1000, -1000, -1000, -1000, -1000, -1000,
	101350, -1000, 101350, -1000, 21594, 101350, 2682, 2190, -1000, -1000,
	2394, 457, 45948, 82626, 752, -1000, 3307, 2666, 1837, 42666,
	2142, -206, -207, 2187, -1000, -1000, 2177, 42666, -1000, 60157,
	455, 2157, 2157, -208, -215, -1000, -1000, 42666, 1062, 101350,
	29869, -1000, 3410, 3127, -1000, -1000, -1000, -1000, 101350, 42666,
	1061, -1000, -1000, -1000, 3373, 2157, 21594, -1000, 2157, 2157,
	3162, 1022, 101350, 82626, -1000, 2268, 2268, 67001, 51777, -1000,
	-79, 876, 3267, 1950, 2597, -1000, -1000, -1000, -1000, 2378,
	-1000, -1000, 101350, 2377, 856, -1000, -216, -1000, 766, 765,
	69593, 843, 831, -1000, -1000, -1000, -1000, 407, 3265, -1000,
	3372, 454, 101350, 2128, 453, 21594, 3108, 757, 68561, -1000,
	2999, 1791, -1000, 2189, 101350, 3100, -1000, 2434, 441, -1000,
	853, 431, 423, 2389, 2389, -217, 42666, 42666, -223, 422,
	853, -1000, -224, -1000, -1000, -1000, -1000, -82, -1000, 751,
	725, -1000, -1000, 82626, 82626, 42666, 42666, -1000, 5916, 5916,
	5916, -1000, 217, -1000, -1000, 2079, 3187, -1000, -88, 108199,
	108032, 4754, 45948, 60157, -226, -1000, -1000, 101350, 111992, -111,
	-1000, -1000, -1000, 610, -1000, -1000, 3408, -1000, -1000, 2058,
	-1000, -1000, -1000, 101350, 2204, -1000, 979, 42666, 7487, 420,
	42666, -1000, 3261, -1000, 2555, 2749, 2562, 418, -1000, -1000,
	-1000, -1000, -1000, 968, 1843, -1000, -1000, 111992, 3162, 42666,
	-1000, -1000, 417, 416, 111992, 415, 758, 2689, -1000, -1000,
	-1000, -1000, 111992, 414, 3239, -1000, -1000, -1000, -1000, 2157,
	82626, -1000, -1000, -1000, -229, -1000, -1000, 1849, 56, 843,
	-1000, 2017, 2138, 413, -1000, -1000, 2118, 2460, -1000, 89888,
	29322, 29322, 216, 3259, 831, -1000, 3352, -1000, 3258, 56,
	-1000, 42666, -1000, 82626, 42666, 2126, -1000, 2336, 68561, -1000,
	2358, -1000, -1000, -231, 101350, 1791, -1000, -1000, 67001, 67001,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 968, -232, -237, -1000, 67001, -1000, -1000, 2226, -1000,
	101350, -1000, 101350, -1000, -1000, -239, -240, -1000, 1983, 42666,
	28775, -1000, -1000, 4754, -242, -1000, -97, -1000, 3254, -1000,
	-1000, -1000, -1000, 2868, 2649, 107843, 2310, 101350, 11403, -1000,
	2740, -1000, -1000, 1950, 101350, 2562, 2645, 82626, 977, -245,
	1986, 1986, 42666, 28228, 2011, 42666, -1000, -1000, 3162, -1000,
	2677, 3345, -1000, 2118, 82626, 101350, -1000, 3149, -1000, 3046,
	-1000, -1000, -1000, 2562, 56, -1000, -1000, 56, -1000, -250,
	972, -251, 82626, 757, -1000, 2361, 877, -1000, -1000, -256,
	-257, 1837, 968, 851, -259, -1000, -265, -266, -1000, -1000,
	215, 43760, 43760, 43760, -111, -112, -1000, 101350, 410, 2847,
	872, -1000, 2119, 1764, 133, 1000, -1000, -1000, 2666, -267,
	-1000, 862, 407, -1000, 42666, 968, -272, -1000, 960, -274,
	-1000, 958, -279, -1000, 2687, -1000, -280, 2157, 857, 3217,
	-1000, -1000, -1000, -1000, 406, -281, -1000, -1000, 2275, -1000,
	1950, 856, -1000, 968, 405, 1837, 404, 1252, 3108, 3006,
	853, 853, 2562, 1837, 877, 401, 853, -1000, -1000, -1000,
	2919, -1000, 47042, 2155, 1739, 444, 2919, 2919, -1000, -1000,
	101350, 3204, -1000, 2124, 2120, 1381, -1000, -1000, -1000, -1000,
	-1000, -1000, 877, -1000, 3203, 2310, 111992, 2562, -1000, 1986,
	2592, -1000, 1986, 2685, -1000, 1995, -1000, -1000, -1000, 1605,
	3330, 101350, -1000, 101350, 1730, 1716, 3407, 843, 2118, 1837,
	42666, 2562, 42666, -1000, -1000, 1220, -1000, -1000, 1950, 2562,
	-1000, -1000, -1000, 1767, 3299, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 743, -1000, 3031, -1000, 1002, 1999, 1999,
	-1000, 741, 2119, -1000, -1000, 397, -1000, 395, -1000, 2073,
	-1000, -1000, -282, -1000, -1000, 3406, -1000, 2118, -1000, 2562,
	-287, 1950, -288, -1000, 1400, 851, 1950, 1737, -1000, -1000,
	2059, 43213, 42666, -1000, 3318, -1000, -1000, 2381, -1000, 42666,
	2666, 42666, 42666, 55477, 2134, -1000, -1000, 1950, 968, 851,
	1837, 57030, 877, 851, -1000, -1000, -1000, 111992, -1000, -1000,
	-1000, 111992, -1000, -289, -290, -137, 89367, -1000, -1000, -1000,
	851, 1837, 877, 2562, -264, -1000, 877, 1950, 1058, -295,
	877, 2562, -1000, 1950, -1000, -1000, -1000, 394, -1000, -1000,
	1950, 851, 42666, 851, 877, -296, 877, -1000, 1950, -1000,
	-1000,
}
var sqlPgo = [...]int{

	0, 4170, 4169, 4167, 4165, 4162, 4161, 4160, 4159, 4158,
	4157, 4155, 4154, 4153, 4151, 4149, 4148, 4146, 4145, 4144,
	4143, 4141, 4140, 4139, 4137, 4134, 4133, 4132, 4130, 4122,
	4121, 4118, 4117, 4116, 4115, 4114, 4110, 4107, 4105, 4098,
	4096, 4093, 4092, 4089, 4088, 4087, 4085, 4082, 4080, 4078,
	4077, 4075, 4072, 4068, 41, 4067, 4064, 4062, 4061, 4056,
	4054, 4052, 4051, 4050, 4048, 4047, 4046, 4044, 4043, 4041,
	4040, 4038, 4037, 4035, 46, 4034, 242, 4033, 4030, 4029,
	4028, 4026, 4023, 4022, 4021, 4020, 4019, 4018, 4017, 239,
	4016, 120, 4015, 4014, 4013, 4012, 4010, 238, 4008, 4007,
	4006, 4004, 252, 4002, 4001, 4000, 3999, 3998, 3996, 3992,
	3989, 3988, 3987, 76, 134, 3984, 3979, 60, 3978, 3975,
	3974, 3970, 3969, 3967, 3966, 3965, 3964, 3962, 222, 3961,
	236, 3956, 3952, 3951, 3949, 3946, 3945, 3940, 3938, 3936,
	3933, 3931, 3929, 3928, 3924, 3923, 3919, 3916, 3914, 3913,
	3909, 3906, 3905, 3903, 3897, 3896, 3892, 3890, 3885, 3884,
	3883, 3880, 3878, 3877, 247, 195, 3876, 3875, 235, 233,
	3873, 3872, 3866, 3863, 3861, 100, 5, 31, 3859, 3857,
	65, 66, 63, 83, 73, 89, 3856, 90, 3854, 109,
	44, 3852, 19, 4, 209, 211, 8845, 206, 3851, 3847,
	3845, 217, 166, 3844, 207, 3843, 3842, 3841, 3840, 67,
	69, 156, 167, 149, 152, 146, 3839, 3838, 82, 56,
	43, 34, 25, 3834, 3833, 3832, 3827, 3057, 116, 3826,
	229, 212, 141, 3825, 3820, 3819, 290, 3817, 47, 3816,
	93, 87, 118, 16, 104, 3815, 124, 30, 3814, 188,
	40, 3813, 129, 74, 61, 8087, 6376, 3811, 80, 75,
	133, 58, 148, 147, 171, 138, 135, 178, 190, 189,
	150, 131, 3809, 226, 3807, 3261, 84, 137, 3806, 3803,
	3801, 64, 168, 88, 3799, 3798, 52, 8, 3, 17,
	142, 14, 99, 20, 3797, 15, 3796, 3795, 3794, 3791,
	33, 174, 3790, 251, 3789, 55, 37, 13, 3788, 23,
	180, 3787, 197, 112, 3786, 3782, 223, 177, 139, 3780,
	98, 202, 3779, 3778, 3776, 3760, 3757, 113, 7, 114,
	3756, 3753, 115, 215, 170, 3752, 45, 3751, 3750, 155,
	86, 111, 246, 154, 196, 101, 200, 157, 201, 3748,
	3747, 3745, 169, 3744, 3743, 193, 132, 3742, 3741, 183,
	249, 38, 62, 204, 57, 161, 125, 3739, 172, 3738,
	3731, 250, 158, 182, 1, 22, 77, 105, 3730, 9,
	203, 126, 175, 95, 3729, 4344, 1750, 2396, 3727, 3725,
	130, 94, 54, 107, 123, 231, 53, 3724, 3723, 2864,
	3719, 3713, 3707, 3706, 159, 3705, 3704, 3702, 108, 127,
	176, 3701, 79, 71, 12, 92, 225, 232, 91, 191,
	240, 224, 3699, 3695, 3693, 164, 3692, 68, 119, 3686,
	173, 216, 3683, 3682, 162, 3681, 122, 256, 48, 140,
	3679, 187, 3678, 3671, 3670, 3669, 3668, 3667, 3664, 185,
	205, 3663, 3661, 3660, 29, 165, 3659, 230, 248, 151,
	110, 39, 3658, 81, 2087, 3656, 153, 199, 50, 106,
	3655, 3649, 782, 49, 0, 11147, 9730, 6738, 9743, 3648,
	2728, 3647, 3644, 3642, 184, 117, 3641, 3640, 3637, 85,
	3636, 59, 3635, 3632, 51, 3631, 26, 2, 11, 24,
	21, 160, 136, 3629, 3628, 96, 128, 102, 3627, 243,
	198, 3626, 3624, 3622, 3619, 78, 3616, 35, 3615, 32,
	3613, 3609, 36, 6, 27, 3607, 3604, 208, 3601, 186,
	214, 3597, 143, 3588, 3260, 121, 3587, 3585, 227, 70,
	3584, 228, 3583, 3212, 3580, 3577, 18, 3576, 3575, 213,
	145, 194, 3574, 3573, 144, 3572, 3571, 3570, 221, 3569,
	3568, 28, 3566, 10, 3565, 3564, 179, 3024, 3563, 3562,
	42, 3561, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 538, 538, 21, 35,
	22, 36, 15, 539, 539, 539, 539, 28, 23, 37,
	25, 25, 25, 25, 25, 178, 178, 178, 178, 20,
	20, 31, 31, 212, 212, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 537, 537,
	214, 214, 213, 208, 208, 540, 540, 215, 215, 215,
	217, 217, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 438, 438, 438, 470, 470, 469, 469, 469, 553,
	553, 554, 554, 554, 554, 554, 116, 116, 338, 338,
	338, 43, 43, 43, 43, 43, 532, 532, 180, 180,
	180, 182, 182, 181, 181, 181, 181, 65, 65, 545,
	545, 546, 546, 544, 547, 547, 547, 179, 179, 179,
	112, 112, 112, 112, 113, 113, 114, 114, 183, 183,
	183, 185, 185, 184, 184, 184, 184, 184, 184, 184,
	184, 189, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 93, 93, 472, 472, 473, 473, 174, 174, 175,
	175, 175, 175, 176, 176, 177, 177, 177, 57, 186,
	186, 188, 188, 187, 187, 45, 45, 45, 45, 45,
	45, 45, 46, 46, 46, 46, 46, 47, 47, 47,
	47, 47, 47, 48, 48, 48, 48, 48, 48, 55,
	55, 55, 55, 165, 165, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 62, 62, 62, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 556, 556, 557,
	557, 558, 558, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	71, 71, 302, 302, 274, 274, 72, 72, 72, 73,
	73, 74, 74, 59, 59, 530, 530, 317, 317, 429,
	429, 76, 76, 337, 337, 77, 77, 77, 77, 77,
	77, 78, 78, 78, 78, 78, 78, 78, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 86, 86, 86, 86, 86, 87, 87, 87,
	84, 84, 84, 81, 81, 81, 80, 80, 80, 85,
	85, 85, 529, 264, 264, 83, 83, 83, 267, 267,
	82, 82, 82, 318, 318, 88, 88, 88, 88, 275,
	89, 89, 89, 89, 89, 89, 89, 89, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 431, 431, 90, 90, 90, 397, 397, 94, 94,
	94, 353, 353, 95, 95, 95, 95, 95, 96, 96,
	96, 96, 96, 96, 115, 115, 115, 115, 115, 115,
	534, 534, 310, 310, 230, 230, 230, 230, 105, 105,
	105, 105, 106, 106, 106, 107, 107, 170, 170, 122,
	122, 122, 122, 122, 121, 121, 121, 121, 121, 121,
	49, 49, 49, 50, 50, 51, 51, 52, 52, 53,
	53, 54, 54, 54, 54, 54, 124, 124, 550, 550,
	126, 123, 123, 123, 125, 125, 125, 125, 127, 128,
	128, 128, 128, 128, 128, 128, 128, 129, 129, 463,
	463, 326, 326, 461, 461, 481, 481, 462, 462, 279,
	279, 279, 279, 279, 280, 280, 280, 471, 471, 471,
	471, 471, 471, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 171, 171, 172,
	173, 173, 173, 173, 173, 150, 150, 150, 164, 164,
	164, 164, 164, 164, 164, 153, 153, 153, 140, 140,
	131, 131, 131, 131, 131, 131, 131, 135, 135, 135,
	135, 135, 135, 135, 135, 132, 132, 142, 142, 142,
	142, 142, 136, 136, 137, 137, 160, 160, 139, 139,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 133,
	133, 133, 133, 144, 144, 144, 144, 360, 360, 360,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 163, 163, 163, 163, 163, 163, 548, 548, 549,
	549, 157, 157, 157, 157, 157, 157, 411, 411, 151,
	151, 151, 151, 156, 156, 156, 156, 159, 159, 159,
	159, 343, 343, 148, 148, 148, 149, 149, 149, 154,
	154, 155, 152, 152, 158, 158, 158, 158, 134, 134,
	134, 560, 560, 560, 161, 161, 147, 147, 162, 162,
	162, 162, 162, 162, 162, 162, 146, 146, 146, 145,
	145, 145, 145, 138, 531, 531, 527, 527, 527, 527,
	527, 527, 527, 527, 528, 528, 528, 533, 533, 99,
	99, 99, 99, 99, 108, 108, 108, 108, 108, 100,
	100, 100, 100, 100, 102, 102, 101, 101, 101, 101,
	66, 66, 66, 66, 66, 14, 14, 14, 67, 67,
	192, 192, 192, 193, 193, 287, 287, 287, 287, 190,
	190, 191, 191, 68, 68, 561, 561, 561, 541, 541,
	541, 542, 542, 542, 542, 542, 542, 281, 281, 282,
	282, 377, 377, 377, 377, 377, 285, 285, 285, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 288, 288,
	216, 216, 216, 291, 292, 292, 289, 289, 290, 290,
	290, 294, 294, 293, 296, 296, 295, 376, 490, 490,
	492, 492, 492, 492, 492, 492, 492, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 562, 562,
	488, 488, 488, 489, 484, 484, 485, 485, 485, 485,
	485, 283, 283, 284, 284, 284, 284, 486, 487, 308,
	308, 414, 491, 491, 493, 493, 495, 563, 563, 563,
	563, 563, 563, 564, 564, 564, 375, 375, 374, 374,
	300, 300, 496, 496, 496, 496, 497, 497, 497, 497,
	497, 500, 499, 498, 498, 498, 498, 498, 70, 70,
	70, 340, 340, 339, 339, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	167, 167, 233, 233, 64, 64, 64, 12, 12, 12,
	543, 543, 543, 69, 69, 69, 69, 69, 69, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 536,
	536, 535, 535, 234, 234, 566, 566, 75, 75, 75,
	75, 75, 75, 75, 432, 432, 433, 433, 63, 63,
	63, 63, 63, 361, 361, 359, 359, 358, 358, 307,
	307, 413, 238, 238, 209, 209, 209, 27, 26, 19,
	19, 24, 24, 39, 39, 39, 39, 42, 42, 38,
	38, 38, 38, 40, 40, 34, 34, 551, 551, 552,
	552, 104, 104, 109, 109, 109, 109, 109, 110, 110,
	110, 110, 111, 111, 111, 111, 120, 120, 166, 166,
	166, 166, 166, 166, 166, 44, 44, 44, 44, 56,
	56, 56, 56, 118, 568, 568, 568, 119, 119, 119,
	567, 567, 231, 231, 371, 371, 372, 372, 569, 569,
	373, 373, 373, 373, 373, 224, 223, 225, 225, 226,
	226, 61, 61, 61, 218, 218, 219, 219, 220, 220,
	221, 221, 222, 222, 570, 570, 97, 97, 97, 169,
	169, 273, 273, 273, 368, 368, 368, 301, 301, 244,
	244, 370, 370, 370, 370, 336, 336, 336, 168, 168,
	315, 315, 328, 328, 329, 329, 426, 426, 330, 103,
	103, 117, 117, 196, 196, 194, 194, 194, 194, 194,
	194, 194, 194, 201, 201, 202, 202, 203, 203, 204,
	205, 205, 205, 205, 319, 319, 206, 206, 206, 195,
	195, 195, 197, 197, 197, 197, 197, 197, 197, 200,
	200, 200, 200, 207, 207, 207, 199, 199, 507, 507,
	507, 509, 509, 511, 511, 510, 510, 506, 506, 508,
	508, 565, 565, 342, 342, 342, 298, 299, 297, 297,
	305, 305, 303, 304, 304, 306, 306, 412, 412, 412,
	210, 210, 210, 333, 333, 333, 333, 334, 334, 364,
	364, 362, 362, 362, 362, 363, 363, 365, 365, 365,
	366, 366, 367, 367, 332, 332, 393, 393, 198, 198,
	198, 312, 312, 312, 313, 313, 383, 383, 383, 383,
	383, 383, 384, 384, 382, 382, 382, 382, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 416, 417, 417,
	314, 314, 418, 369, 369, 525, 525, 525, 526, 526,
	410, 410, 419, 419, 419, 419, 419, 419, 408, 408,
	409, 409, 427, 428, 428, 346, 346, 346, 346, 344,
	344, 347, 347, 347, 347, 345, 345, 420, 420, 420,
	420, 335, 335, 421, 421, 421, 421, 422, 423, 423,
	424, 424, 378, 379, 379, 434, 434, 434, 434, 436,
	311, 311, 311, 311, 311, 483, 482, 482, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 451,
	451, 451, 451, 451, 451, 451, 437, 437, 437, 437,
	437, 441, 441, 441, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 442, 442, 447, 447, 448,
	448, 448, 443, 444, 449, 449, 449, 449, 571, 571,
	453, 453, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 439, 439, 439, 446, 446, 446, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	354, 354, 356, 356, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 387, 387, 387, 387, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	501, 501, 501, 501, 501, 501, 501, 501, 389, 389,
	504, 504, 505, 505, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 512, 512, 513, 513, 515, 515, 516,
	516, 517, 518, 518, 518, 519, 520, 520, 514, 514,
	521, 521, 521, 521, 522, 522, 523, 523, 523, 523,
	523, 524, 524, 524, 524, 524, 399, 399, 400, 400,
	406, 406, 406, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 235,
	235, 235, 235, 235, 324, 324, 322, 322, 322, 325,
	325, 323, 323, 321, 321, 320, 320, 396, 396, 394,
	394, 398, 398, 348, 348, 452, 452, 452, 452, 452,
	452, 452, 452, 349, 349, 349, 357, 350, 350, 351,
	351, 351, 351, 351, 390, 391, 352, 352, 352, 392,
	392, 401, 405, 405, 404, 403, 403, 402, 402, 380,
	380, 381, 381, 331, 331, 572, 572, 327, 327, 425,
	425, 425, 425, 277, 277, 316, 316, 276, 276, 268,
	268, 269, 269, 269, 269, 309, 309, 407, 407, 454,
	454, 455, 455, 456, 456, 457, 457, 458, 459, 460,
	395, 395, 254, 253, 241, 242, 252, 251, 250, 240,
	243, 247, 248, 249, 245, 246, 260, 259, 258, 265,
	266, 256, 257, 430, 239, 270, 270, 271, 271, 271,
	272, 272, 272, 272, 236, 236, 237, 237, 261, 261,
	262, 263, 263, 255, 255, 255, 227, 227, 227, 228,
	228, 229, 229, 468, 468, 465, 465, 465, 466, 466,
	466, 467, 467, 467, 467, 464, 464, 464, 464, 464,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 475, 475, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 477, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 480, 480,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 6, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 1, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 2, 6, 4, 7, 7, 7, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 11, 14,
	1, 2, 3, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 9, 12, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 561, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -115, -120, -103, -104, -116, -122, -166,
	-171, -172, -173, -3, -43, -45, -58, -76, -78, -89,
	-98, -97, -99, -105, -112, -108, -93, -49, -117, -121,
	-130, -167, -168, -169, 32, 31, 99, 79, 150, 125,
	133, 194, 370, 407, 418, 383, 399, 388, -125, -126,
	435, -44, -56, -119, -118, 72, 126, 394, -4, -12,
	29, 45, -46, -47, -48, 61, -64, -60, -71, -65,
	-62, -555, 101, -508, -79, -82, -111, -559, 138, 157,
	212, -100, -101, 353, -106, -107, 401, -109, -110, 403,
	158, -51, -50, 152, -194, -196, -123, -124, -170, -131,
	-132, -133, -134, -135, -136, -137, -160, -138, -139, -140,
	-141, -142, -143, -163, -144, -145, -146, -147, -152, -148,
	-149, -150, -151, -153, -154, -156, -157, -158, -159, -161,
	-162, 439, -155, 494, 48, 453, 81, 142, 411, 21,
	-5, -6, -7, -8, -9, -10, -11, -14, -13, -59,
	-61, -63, -66, -67, -68, -75, -69, -70, -507, -80,
	-81, -84, -86, -87, -83, -85, 400, -197, -195, 558,
	509, -16, -21, -22, -17, -18, -20, -23, -19, -24,
	-30, -35, -36, -32, -33, -31, -34, -37, -38, -39,
	-40, -41, -42, -26, -28, -29, -27, -15, -25, 528,
	536, -200, -198, -199, -207, 427, 517, 469, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, -275,
	2, -256, -261, -262, -263, -255, -227, -477, -480, 4,
	-474, -478, 163, 221, 317, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 52, 54, 58, 59, 60, 61, 62, 63, 67,
	72, 73, 78, 79, 80, 81, 82, 83, 84, 90,
	87, 88, 89, 91, 93, 95, 96, 97, 98, 99,
	100, 102, 103, 104, 106, 107, 115, 116, 117, 118,
	120, 125, 126, 129, 124, 128, 131, 132, 133, 136,
	137, 138, 140, 141, 143, 144, 145, 147, 148, 150,
	151, 152, 155, 153, 476, 154, 156, 157, 158, 159,
	169, 170, 171, 176, 178, 182, 183, 186, 187, 188,
	189, 190, 191, 192, 193, 195, 199, 201, 202, 203,
	204, 205, 211, 212, 214, 215, 216, 217, 222, 223,
	227, 224, 233, 234, 238, 239, 240, 242, 246, 247,
	248, 249, 250, 251, 253, 255, 254, 257, 260, 261,
	264, 268, 269, 272, 273, 274, 275, 277, 278, 281,
	279, 282, 283, 280, 284, 286, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 285, 300, 298,
	302, 303, 304, 315, 313, 308, 309, 305, 310, 306,
	307, 311, 312, 319, 320, 323, 209, 325, 326, 329,
	347, 333, 334, 335, 338, 339, 342, 345, 346, 348,
	349, 350, 351, 352, 353, 354, 355, 357, 358, 360,
	361, 362, 364, 365, 366, 368, 370, 371, 373, 375,
	376, 377, 378, 379, 380, 381, 383, 385, 384, 386,
	388, 394, 399, 396, 397, 398, 400, 401, 402, 403,
	405, 406, 407, 409, 410, 411, 412, 414, 416, 417,
	420, 421, 436, 437, 455, 418, 419, 422, 423, 424,
	425, 426, 430, 428, 429, 431, 432, 433, 435, 438,
	439, 441, 442, 443, 444, 445, 446, 449, 451, 452,
	453, 454, 456, 459, 460, 461, 462, 457, 468, 465,
	466, 470, 471, 472, 473, 474, 475, 477, 479, 487,
	488, 489, 491, 494, 495, 496, 497, 485, 499, 500,
	503, 504, 505, 508, 506, 507, 509, 511, 514, 515,
	516, 522, 521, 523, 529, 530, 532, 533, 534, 36,
	49, 50, 53, 55, 57, 68, 69, 70, 74, 121,
	122, 149, 160, 161, 172, 184, 185, 196, 198, 206,
	207, 208, 228, 229, 231, 236, 258, 322, 324, 340,
	344, 359, 363, 367, 369, 382, 413, 447, 458, 463,
	480, 481, 482, 483, 490, 492, 517, 518, 519, 524,
	531, -275, 2, -256, 331, -249, 2, -227, -227, 370,
	28, 2, 28, 358, 429, 471, 473, 2, -534, -310,
	2, 28, -230, -227, 101, 194, 427, -249, 2, -534,
	-310, 25, 2, -227, 2, 345, -231, 2, 418, -227,
	278, 2, 561, 93, 269, 73, 413, 432, -128, 488,
	-127, 480, 422, -129, -463, 2, 300, -227, 561, 561,
	561, 28, -239, -227, 469, 221, 422, 117, 466, 561,
	2, 469, 350, 521, 428, 117, 379, 221, 496, 422,
	-543, 278, 409, 197, 510, -532, 2, -527, 4, -478,
	-474, -269, -268, 469, 474, 117, -263, -255, 551, -262,
	561, 561, 561, 2, 239, 240, 378, 377, 432, 433,
	561, 561, 561, 561, 420, 2, 159, 22, 27, 65,
	92, 97, 123, 179, 182, 336, -556, 347, 376, 431,
	468, 477, 491, -542, 454, 67, 422, -541, -543, 278,
	496, 136, -358, 117, 269, 193, 504, 473, 471, 502,
	129, 227, 507, 506, 561, 561, 22, 27, 65, 76,
	97, 136, 159, 179, 182, -558, 347, 376, 416, 431,
	468, 477, 491, 2, 521, 278, 428, 469, 221, 117,
	496, 422, -543, 420, 421, 374, -91, 2, 558, 32,
	31, 435, -189, 469, 232, 2, -227, 561, 561, 2,
	239, 240, 420, 421, 561, 561, 180, -527, 2, 561,
	561, 2, 239, 240, 420, 421, 232, 2, 67, 424,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 2, -164, 432, 454, 203, 46, 45, 73,
	28, 375, 78, 351, 118, 144, 497, 195, 221, 222,
	247, 92, 93, -360, 44, 240, 239, 421, -548, 420,
	-411, 470, 423, 429, 465, 251, 418, 488, 101, 511,
	410, 534, 379, 380, 153, 4, 117, 300, 434, 480,
	269, 417, 354, 83, 561, -565, 2, 469, -567, 2,
	488, 488, 2, -567, 2, -567, 2, -567, 2, -568,
	488, 531, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, -195,
	-197, -196, 561, 561, 561, 561, 561, 561, 561, -164,
	432, 2, 73, 28, -303, -305, 501, 230, 146, 337,
	-194, -196, 2, -507, -461, 2, -385, -481, -387, 549,
	550, 542, 467, 66, 316, 535, -399, 123, 502, 331,
	-480, -388, -401, 149, 413, -325, 8, 9, 5, 6,
	7, -236, -389, -395, 493, 162, 321, -272, 562, 10,
	558, -504, -196, -400, 37, 198, 64, -465, -271, -237,
	-437, 231, -270, -255, -501, -502, 4, -474, -475, -466,
	-440, -448, -444, -445, -451, -227, -477, 76, 109, 110,
	108, 113, 112, 271, 270, 114, 111, 434, 510, 65,
	36, 206, 207, 236, 322, 208, 74, -503, 137, -476,
	228, 229, 447, 50, 382, 172, 122, 121, 324, 55,
	53, 518, -449, 119, 480, 481, 482, 483, 184, 185,
	57, 160, 161, 344, 367, 463, 490, 492, 196, 258,
	43, 105, 181, 226, 210, 235, 237, 241, 259, 262,
	301, 314, 318, 341, 343, 408, 440, -571, 519, 458,
	68, 69, -509, 384, -510, -249, -509, 561, 561, 563,
	561, -297, -298, -299, 2, 28, 134, 558, 2, -415,
	2, -416, -420, -196, 252, -419, 558, -417, 556, -256,
	332, -505, 414, -501, -502, -236, -255, -271, 4, -474,
	-476, 560, -300, 558, 117, 469, 77, 221, -353, 558,
	-227, 28, 331, 484, 563, -397, 558, 331, 180, 334,
	59, -227, 521, 2, 2, 436, 2, 558, -128, 70,
	488, 43, 432, -372, 2, -373, -223, -224, -225, -427,
	-226, 238, 373, 381, 537, 127, 316, 534, -461, -550,
	180, 541, 484, -461, -326, 560, 2, 2, 2, 2,
	2, 2, -420, 206, -256, 2, -253, -464, 4, -474,
	-478, -475, -479, -477, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 56, 64, 65, 71, 75, 77, 86,
	92, 101, 108, 109, 111, 110, 112, 113, 114, 123,
	127, 130, 134, 135, 139, 142, 146, 162, 164, 177,
	179, 180, 194, 197, 200, 213, 225, 230, 232, 252,
	256, 263, 270, 271, 316, 321, 327, 331, 332, 336,
	337, 356, 372, 387, 404, 427, 434, 450, 464, 469,
	478, 484, 486, 493, 501, 502, 510, 512, 520, 525,
	526, 527, 528, -480, 76, 2, -420, 206, 2, -258,
	206, -420, -261, 2, -240, -227, 2, -252, -464, 2,
	-276, 206, -256, -257, -261, -259, 2, -261, -265, 2,
	-227, -472, 206, 2, -468, 10, -467, 5, 4, -474,
	-478, -475, 521, 232, 484, 563, -316, -268, -269, -460,
	8, -309, -227, 560, -385, 2, -117, -102, 2, 177,
	-385, 206, 2, -117, 206, 2, -385, 206, 2, -117,
	206, 2, -545, 2, -472, 206, -227, 2, 282, 2,
	2, 491, 2, 97, 469, 116, 2, 398, -557, 416,
	495, 2, 2, 2, 2, 2, 2, 469, -245, 2,
	-227, 177, -265, 206, -266, 2, -227, -228, 428, -566,
	384, -472, 206, 2, 521, -259, 2, -259, 221, 234,
	-240, 206, 2, 473, 471, 473, 471, 180, 2, 232,
	2, 232, 2, -421, 2, -422, -416, -423, 556, 332,
	282, 2, 2, 2, 2, 2, 206, -227, 469, 116,
	2, 250, 2, 2, 2, 2, 2, 2, 2, -318,
	206, 2, -256, 521, -318, 206, 2, -318, 206, 2,
	-359, 2, 86, -240, 206, 2, -264, 206, 2, -259,
	-267, 206, 2, -265, -473, 206, 2, -472, -385, 2,
	-117, 2, -431, 2, -430, -467, 517, -91, 558, -91,
	558, 432, 558, -472, -256, -256, -385, 2, -117, -102,
	2, -385, 2, -117, 2, -114, -113, -472, 558, 180,
	-385, 2, -117, -102, 2, -385, 2, -117, 2, -189,
	177, 2, 117, 469, -164, 2, 177, 512, 2, 8,
	2, 213, -472, 423, 380, 169, 2, 436, 2, 437,
	73, -360, 534, 73, 180, 2, 180, 2, -343, 2,
	528, 2, 2, -531, 2, 331, 180, 2, 180, 2,
	180, 2, 180, 2, 180, 2, 377, 433, 489, 240,
	2, -117, 525, -102, -385, 525, 2, -549, 177, 421,
	-385, 2, 487, 249, 154, 180, -343, 2, 180, 2,
	180, 2, 5, 2, 378, 455, 2, 238, 373, 455,
	2, -256, -560, 2, 469, 521, 428, 2, 2, 87,
	88, 180, 2, 180, 2, 180, 534, 2, -335, -420,
	-371, -372, -371, 484, -303, -305, -164, 436, 2, -201,
	-333, -203, 177, -362, -363, -204, 263, 164, 327, -205,
	-342, 28, 134, -342, -342, 59, 559, 559, 11, 12,
	75, 41, 549, 550, 551, 552, 175, 553, 554, 547,
	548, 546, 539, 540, 544, 244, 245, 94, 543, 541,
	85, 276, 415, 165, 166, 167, 168, 395, 219, 34,
	220, 14, 15, 16, 33, 336, 262, 535, 210, 440,
	542, 17, 18, 19, 235, 237, 318, 49, 213, -235,
	-278, -385, -385, -385, -385, -385, -385, -385, 343, 558,
	-331, -380, 556, -196, 558, 558, 558, -460, -196, -385,
	-399, 559, -323, 558, -196, -399, -394, 558, 413, 556,
	558, -402, -385, 5, 5, 5, 558, 560, -512, 529,
	177, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 369, -442, 558, -441,
	558, -441, -441, 522, -439, 558, 536, 530, 558, -439,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 522, 563, -509, -300, 558, -327, -425,
	-385, 551, -327, -327, 331, -320, -385, 105, -346, 241,
	301, 181, 259, 408, 226, -382, 562, -382, -410, 536,
	-196, -417, -255, -196, -419, 558, -415, -410, -92, -460,
	-76, -89, -97, -117, -130, -168, -169, 551, -256, 558,
	180, 558, 560, -464, 180, -309, -240, -256, -270, -271,
	-276, 133, -320, -527, 496, 422, -309, -230, 38, -396,
	-434, -435, -483, 562, -482, -437, -447, -443, -446, 359,
	363, -466, 53, 518, -449, 231, 4, -474, -476, 228,
	229, 447, 50, 382, 172, 122, 121, 324, 55, 480,
	481, 482, 483, 184, 185, 57, 519, 458, 68, 69,
	-527, 496, 422, -309, 177, -470, 2, -469, -468, 114,
	434, -359, -463, -320, 38, -372, 2, 123, -468, -569,
	563, 261, -280, 275, 315, 202, 332, 532, 325, 127,
	-471, 5, 4, -395, -407, 123, 269, 231, -454, -456,
	8, -455, 9, -457, 549, 550, -462, -461, 107, 560,
	-464, -212, 396, 435, -211, 24, 29, 138, 515, 155,
	-290, 223, 346, 350, 149, 451, 505, -538, -539, 419,
	475, 476, 89, 325, 435, 396, 149, -339, -341, 38,
	115, 304, 345, 60, 216, 280, 281, 453, 524, 149,
	435, 396, 346, -539, 98, 396, -539, -214, 451, 505,
	-538, -539, 419, 396, -213, -290, 149, 562, 24, 396,
	435, 346, -553, -554, 138, 29, 396, 346, -535, -506,
	528, 149, -420, 206, -546, -113, 253, 5, 10, -113,
	-316, 563, 563, -464, 551, 421, 420, 149, 149, 149,
	149, 177, 316, 2, 2, 2, 2, 2, 182, -541,
	-558, 2, 2, -256, 206, -302, 331, -530, -317, 469,
	-256, 316, 43, -258, 206, 2, -261, 521, -535, 316,
	-260, 206, -256, 38, 558, 2, -359, 2, 221, -506,
	316, -421, -273, -256, -416, -273, 435, -249, 38, -382,
	-256, 2, 149, 2, 2, 2, -227, -215, 563, 63,
	402, 149, -318, 206, -215, 149, -215, 149, -277, 206,
	-276, -215, 149, -215, 563, 149, -215, 563, 149, 563,
	149, 559, 563, -431, -431, -472, -177, 528, 180, 101,
	558, 558, -189, -428, 563, -427, -473, -114, -472, -472,
	-530, -240, 2, -256, 2, 469, 242, -472, -177, 213,
	-472, -472, -472, -463, 28, 437, 2, 377, 433, 489,
	88, 437, 2, -256, 469, 117, 221, 79, -533, 177,
	-528, 409, 422, -527, -256, 117, -256, 117, -256, 117,
	-256, -256, 2, 2, 2, 2, 2, 84, 84, 2,
	45, -549, 177, 2, 487, 2, 487, 2, -227, -227,
	-227, 454, 261, -256, 177, 469, 221, 469, 221, 117,
	469, -215, 563, -231, -201, -333, -463, -334, -333, -202,
	-201, -204, 177, 381, 506, 304, 438, 246, -363, -362,
	28, -385, -367, 171, 303, -385, -365, -387, 549, 550,
	-455, -457, -319, 325, -195, -195, -195, -306, -412, -385,
	372, 221, -436, -434, -434, -254, -464, 480, -385, -385,
	-385, -385, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, -385, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, -385, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, -385, -385, 262, 210, 440, 49, 213, -385, 484,
	-385, -385, -385, -385, 298, 316, 321, 493, 162, 503,
	134, 325, -572, 464, 40, -392, -196, -324, 558, -406,
	35, 450, 28, -399, 558, 2, -380, -385, -381, -321,
	-320, -320, 559, 520, 28, 134, 551, 2, 559, 563,
	38, 559, -385, -321, -398, -394, -320, -405, -404, 525,
	-354, -355, 533, 285, 120, 204, 283, -356, 426, -458,
	8, -464, 551, -513, 170, 197, 558, 559, 2, 559,
	2, 559, -385, 2, 559, -385, 2, 559, -385, 2,
	559, -385, 2, 559, 2, -385, -385, -385, -385, -385,
	-385, -385, -320, 8, -458, -458, 480, 480, -458, -458,
	-458, -450, 359, 360, 361, 362, 264, 265, 266, 267,
	363, 364, 365, 366, 290, 291, 292, 293, 286, 287,
	288, 289, 294, 295, 296, 297, 189, 190, 191, 192,
	185, 186, 187, 188, -450, -348, 2, -452, -320, 4,
	533, 285, 120, 204, 283, 426, 5, -348, 2, -349,
	2, -385, -320, -350, -386, -387, 549, 550, 542, -399,
	-351, 2, -385, -321, -385, 56, 256, 486, -352, -385,
	180, -320, -320, 2, -320, 2, -510, 38, -320, -312,
	563, 180, 38, 4, -312, -312, 558, 559, 563, -347,
	201, 279, 274, -347, -415, -346, 241, -344, 341, -344,
	-344, -410, -241, 556, 564, -464, -410, -409, -408, 38,
	-249, 338, -410, -410, 560, 559, -409, 557, -525, 558,
	561, 561, 561, 561, 561, -256, 558, -320, -464, 560,
	456, 559, 235, 235, 235, 235, 414, 559, 484, -529,
	-264, -267, 528, -91, 333, 559, 563, -311, 37, 556,
	560, -458, 2, 2, -453, 522, 558, 558, -355, 558,
	180, -529, -267, -310, 563, 484, -260, -550, 559, 488,
	-373, -279, 381, 449, 397, 430, 466, 8, 9, 8,
	9, 563, -464, 563, -551, 92, 484, 77, 422, -376,
	206, 77, -484, -243, 92, -485, -227, 71, 502, 372,
	179, 147, -551, 92, 372, -551, 92, 92, 435, 454,
	484, 59, -420, 41, 41, 28, -117, 257, 180, 534,
	469, 221, 422, 484, -420, -341, -434, 115, 280, 281,
	59, -459, -454, 549, 550, -459, 59, -459, -459, -459,
	528, -258, -420, 422, 484, 484, 484, 484, 563, 41,
	41, 28, -117, 257, 180, 484, -276, -241, 516, 42,
	516, 484, 42, 422, 484, 563, 42, 42, 484, 484,
	-536, -232, 104, 310, 273, 311, 96, 307, 95, 306,
	102, 308, 103, 309, 523, 319, 62, 305, 284, 312,
	-233, -234, 352, 514, -472, 435, 396, 149, 213, -428,
	213, -428, -268, -227, 560, -117, -385, -385, -117, -385,
	-117, 45, 149, 2, -566, 250, 558, -283, 316, 180,
	-309, -429, 232, 563, -317, 149, -469, -340, -339, 316,
	-260, 206, 2, 149, -300, 316, 143, 558, 379, 2,
	-242, 206, -228, -227, -359, -218, 472, 149, -337, 512,
	-368, -117, 558, 123, 38, -368, -328, -329, -426, -330,
	-243, 558, -249, -382, -227, 2, -256, -318, -215, 149,
	-318, -318, -215, 563, 149, -240, -259, -264, -265, -267,
	-472, -473, -91, -430, 559, 559, 559, -176, 335, -175,
	-227, 5, -189, 512, -282, -377, -376, -488, -489, -484,
	262, 221, 502, 234, 163, -301, -244, -243, 116, -183,
	528, -113, 559, -428, 213, -177, -177, -428, -428, -256,
	177, -472, -177, -177, -177, 2, 2, 2, -343, -256,
	-240, -276, -256, -309, -309, -309, -343, -240, -343, -240,
	-343, -240, -117, -385, 2, 432, 177, 177, 560, -343,
	379, 117, 469, 350, 221, -256, -276, -256, -276, -240,
	-256, -420, -334, -202, 332, 246, 438, -365, -366, -387,
	413, 414, -366, 413, 414, 8, 9, 8, 9, -206,
	442, 320, -318, 563, -209, 39, 130, 246, -256, 534,
	145, -385, -385, 484, -572, 464, -392, 145, -385, 298,
	321, 493, 162, 503, 134, 325, 180, 558, -386, -386,
	559, -322, -385, -385, 557, 566, 559, -305, 563, -303,
	-385, -320, -320, 559, 560, -320, -309, 557, 557, 563,
	559, -403, -404, 139, -385, 484, 484, 484, 484, 558,
	559, 560, -518, 342, 558, 558, -385, 559, 559, 559,
	559, 38, 563, 563, 563, 559, 563, 563, 563, 559,
	559, 559, 563, 559, 534, 534, 559, 559, 559, 559,
	563, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 559, 563, 559, 180, 559,
	559, -357, 356, 559, 11, 12, 549, 550, 551, 552,
	175, 553, 554, 547, 548, 546, 539, 540, 541, 85,
	276, 415, 14, 15, 16, 235, 213, -386, -386, -386,
	559, -390, -391, 180, 177, 38, -352, -352, -352, 559,
	180, -320, 559, 559, 558, -511, 278, 316, 559, -379,
	-378, 526, -425, -313, 2, -415, -251, -464, -379, -379,
	-320, -385, 241, 241, -345, 512, 331, -347, -415, -409,
	-460, -384, -383, 178, 39, 130, 313, 209, -409, -249,
	-300, -409, -409, -464, -410, -410, -408, 559, -526, -460,
	559, -314, -418, -505, -305, 560, -464, -186, -506, -165,
	5, 321, -165, -165, -165, -309, 484, 484, 25, 357,
	-434, 556, 557, 8, -464, 558, -458, -458, -458, -309,
	180, 180, 180, -469, -469, -338, 528, -461, -372, 500,
	82, 381, 480, -461, -211, 396, -243, -243, -256, -265,
	316, -376, 206, -217, 316, -434, -250, -227, 558, 558,
	246, 246, 512, -243, -250, 246, 206, -243, 206, -250,
	-250, -537, 381, 326, -385, -469, 268, 379, 317, -212,
	396, 435, -117, -117, -117, 558, -550, 512, 133, -256,
	-276, -256, -265, -260, 435, 396, 314, -270, -459, -459,
	-339, 435, 396, -265, -258, -469, 422, -240, -213, -117,
	-117, -117, 558, -241, -214, 396, 5, 206, -243, 5,
	-227, -243, -265, -469, -554, 24, -243, 206, -243, -265,
	-469, -232, -472, 321, 508, -535, 422, 484, -420, -113,
	-180, 528, -113, -174, 217, 551, -532, -227, 521, -227,
	-281, -284, -282, -243, -192, -193, 530, 528, 149, -274,
	-256, 556, -177, -472, -256, -265, -266, 149, -300, 316,
	-472, 38, 149, 558, 2, 2, 331, 316, -242, 206,
	-219, 140, -570, 541, -240, -379, -313, -336, -370, 404,
	331, -301, 517, -249, -336, -315, 563, 180, 541, 560,
	-301, -424, 551, 2, -215, -318, -215, -215, -276, -277,
	-215, -215, -215, -91, -91, -177, 563, 558, 541, 541,
	558, -472, -472, 559, 563, -256, -242, 221, 221, -248,
	-228, 559, 563, 560, 558, -185, 335, -184, 141, 248,
	233, 443, 444, 445, 446, 132, -183, -114, 180, -52,
	528, 469, -177, 562, -343, -343, -343, 432, 432, -227,
	-252, -240, -256, -253, -276, 177, 177, 506, -366, 332,
	272, -412, -210, 323, -256, 562, -385, -385, 145, 145,
	-385, -386, -386, -385, 145, 180, 558, -385, -396, 33,
	33, 559, 563, -381, -385, 559, 520, -305, -305, 559,
	551, -464, 562, 559, -394, 142, -385, 478, 285, 204,
	283, -356, 283, -356, -356, -458, 5, -464, 551, -519,
	-246, 558, -227, 526, -304, 337, 559, -436, -434, -385,
	-385, -385, -385, -385, -458, -439, -439, -454, -454, -385,
	-390, -385, -436, -434, -386, -386, -386, -386, -386, -386,
	-386, -386, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, -386, -386, 134, 316, 325, -386, -391, -390, -385,
	-385, -434, 559, 559, 559, -320, -91, 558, 278, -332,
	197, -385, -428, 563, -332, -332, 559, -415, -415, 558,
	-385, 241, 557, 563, 565, 541, -300, 560, -408, -409,
	557, 559, 563, 559, 563, -369, 38, 559, -464, -188,
	-187, 131, 52, -309, -309, 334, 5, 8, 556, 557,
	560, -458, 559, 559, 559, -309, -309, -309, 116, 304,
	-385, 484, 484, 149, 316, 514, -490, -485, 147, -385,
	-307, -413, -385, 558, 558, 2, -208, 138, 435, -552,
	2, 512, 149, -215, 149, -215, 532, 558, 558, 484,
	422, 528, -320, -385, -178, 123, -463, -539, 562, -539,
	562, 422, 484, 422, 484, 528, 528, -320, 484, -438,
	47, 26, 316, -259, 484, 484, -215, 149, 496, 435,
	-472, 321, -265, -260, 435, 396, -428, -182, 335, -181,
	141, 406, 132, 248, -428, -180, 180, 232, -260, 2,
	559, 559, 563, -491, 38, 329, 329, 558, -256, -72,
	528, -427, -460, 43, -258, 38, 149, -535, -117, -260,
	-432, -433, 5, -256, 149, 331, 316, -220, 255, -570,
	-468, -506, -305, -336, -327, 317, 90, 559, -379, -329,
	-313, -385, 2, 559, -215, -215, -175, -176, -472, -472,
	-472, -177, -189, -189, -377, -285, 558, -242, -228, 558,
	-189, -244, 2, -473, 563, 558, 541, 541, 541, -428,
	-117, 335, -256, 551, -343, -292, -291, 350, 325, -292,
	413, 413, 332, 171, 251, -209, -241, -385, -385, 145,
	33, 33, -385, -385, -396, 559, -385, -385, -320, 557,
	5, -385, 559, 559, 8, -385, 559, 560, -520, -227,
	-385, 559, 59, 559, 559, 563, 563, 559, 559, 559,
	559, 559, 559, 559, -391, 180, 134, 325, 558, 559,
	559, -91, -393, 200, 59, -415, -393, -393, -345, -309,
	-415, -383, -241, 556, -464, -460, -418, 558, 560, -187,
	541, 557, 2, 556, -464, 559, 116, -243, -243, -376,
	149, -492, 92, -494, 75, 163, 101, 316, 321, 502,
	372, 71, 123, 387, -562, 38, 538, 559, 559, 563,
	-209, -307, -309, 316, 461, 123, 316, 123, 116, 496,
	78, -243, -250, -309, -309, -256, -265, 156, 559, 563,
	541, 2, 551, 551, -265, -260, -265, -258, 348, 156,
	559, -241, 5, 5, 149, -238, 75, 5, -243, -243,
	-259, 116, 422, 484, -180, 563, 558, 541, 541, -180,
	-473, -113, -300, -288, 224, -243, -489, -486, -487, 372,
	-493, -495, 163, 372, -117, 2, -191, -190, -227, 5,
	558, -283, 335, 557, -469, -340, -117, -260, -300, 559,
	563, -361, 512, -241, -256, 149, -221, 254, -570, -468,
	-218, -364, -362, 135, 558, 331, -117, -305, 541, 559,
	559, 116, 116, 215, 148, -307, 558, 558, -309, 116,
	559, -184, -185, -472, -113, -472, -183, -53, -54, 221,
	92, 355, -253, 469, 221, 558, 558, -209, -385, -385,
	-385, 559, -305, -464, 551, -514, 350, 559, -412, -385,
	-385, -386, 180, 558, -396, 559, -515, 527, -385, -320,
	-515, -515, 559, -460, 2, -472, 556, 2, -376, -250,
	-254, -247, -227, 163, 206, 321, 246, 558, -386, -256,
	558, 2, 30, -563, 127, 225, -375, -564, 100, 462,
	214, -413, -210, 559, 559, 321, 321, -385, -434, 558,
	-215, -215, 559, 559, -385, 484, -463, 99, -461, 2,
	-539, -240, -385, 484, 5, -215, -254, -215, -215, -238,
	496, -265, -260, -181, -182, -472, -113, -180, 38, -289,
	-290, 213, -491, 246, -247, 246, -561, 528, 559, 563,
	541, 541, -281, -192, -73, -74, 485, -427, -300, 38,
	5, 558, -227, 331, 558, -241, -222, 91, -570, -468,
	-219, -336, 317, -309, 92, -364, -392, -177, 558, 558,
	-286, 80, 93, 124, 205, 183, 222, 454, 459, 28,
	-286, 559, -307, -307, 559, 558, -177, 559, 563, 28,
	558, 28, 558, -256, -276, -320, -320, 559, -305, 59,
	563, 559, 559, -386, -396, 559, -516, -517, -246, 557,
	2, -494, -247, 316, 512, -385, -229, 558, -385, 38,
	225, 128, 211, -288, 558, -374, 512, 387, -238, -307,
	558, 558, 558, 541, 180, 558, -438, -215, -259, 559,
	-544, 385, -117, -192, 348, 558, -287, 331, 116, 304,
	-190, -461, -461, 559, 38, -74, 9, 38, -117, -307,
	-256, -307, 331, 263, -468, -220, 559, -250, -336, -473,
	-473, -374, 559, 559, -473, -54, -309, -309, 559, 559,
	-521, 379, 414, 199, -320, -306, 559, 563, 38, 149,
	201, 559, -496, 277, -227, 559, 128, 211, -289, -309,
	-288, 201, -256, -540, 512, 559, -294, -293, -291, -296,
	-295, -291, -320, -461, 99, 348, -320, -238, -547, 181,
	-546, 5, 10, -287, -256, -308, -414, -243, 81, 116,
	-288, -117, -117, 559, -361, 559, -256, -570, -221, -379,
	559, 559, -375, -374, -193, 528, 559, 559, 559, 559,
	-522, -523, 49, 499, 107, -385, -522, -522, -517, -519,
	163, 528, -497, -500, -499, 331, 441, 181, 349, 559,
	461, 524, -563, 559, 528, -300, -385, -374, 559, 563,
	517, 559, 563, 517, 559, 180, 559, -215, -179, 528,
	45, 558, 559, 563, 371, 129, 138, -289, -561, -374,
	558, -375, 558, -454, -222, 135, -177, -177, -288, -375,
	-379, -177, -524, 147, -523, 368, 176, 413, 368, 176,
	-524, -524, -247, 54, -499, 331, -500, 331, 506, 129,
	-379, 54, -496, -288, -293, 213, -295, 180, 348, 420,
	-546, 30, -309, -414, 414, 414, 2, -192, -287, -375,
	-307, -288, -307, 317, 506, -289, -288, 107, 197, 479,
	304, 33, 541, -498, 304, 402, 63, 435, -498, 541,
	-497, 558, 558, 335, 559, 2, -287, -288, 559, -289,
	559, 435, -193, -289, 413, 339, -523, -385, 23, 321,
	123, -385, -563, -320, -320, -176, 558, -216, 63, 402,
	-289, -374, -193, -375, -328, -379, -193, 559, 559, -176,
	-193, -375, -379, -288, -379, -379, -289, 484, 559, -379,
	-288, -289, 558, -289, -193, -320, -193, -379, 559, -379,
	-289,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 488, 489, 491, 492, 493, 495, 496,
	498, 500, 502, 503, 504, 506, 507, 509, 510, 511,
	512, 513, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 581,
	0, 1208, 1210, 1212, 1214, 0, 719, 0, 34, 35,
	0, -2, 285, 287, 289, 0, 315, 317, 318, 320,
	322, 324, -2, 0, 421, 422, 424, 426, -2, -2,
	0, 889, 891, 0, 568, 570, 0, 894, 896, 0,
	0, 590, 591, 0, 1301, -2, 584, 586, 588, 653,
	655, 657, 659, 661, 663, 665, 667, 669, 670, 672,
	674, 676, 678, 680, 682, 684, 686, 687, 689, 691,
	693, 695, 697, 699, 701, 703, 705, 707, 709, 711,
	713, -2, 715, -2, -2, 0, -2, -2, -2, 1226,
	38, 40, 42, 44, 46, 48, 50, 52, 54, 372,
	373, 375, 377, 379, 381, 384, 386, 388, 1359, 428,
	430, 432, 434, 436, 438, 440, 0, -2, 1371, 0,
	0, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	85, 86, 87, 88, 89, 90, 91, 92, 68, 69,
	71, 72, 73, 77, 78, 79, 80, 83, 66, 0,
	0, 1332, 1334, 1336, 1338, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 490,
	494, 497, 499, 501, 505, 508, 514, 516, 518, 475,
	476, 479, 2021, 2038, 2039, 2040, 2043, 2044, 2045, 2046,
	2047, 2048, 2466, 2547, 2548, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 477, 478, 1051, 0, 542, 540, 2013, 543, 2281,
	545, 547, 415, 416, 417, 418, 419, 420, 0, 561,
	553, 560, 562, 564, 565, 566, 567, 537, 535, 0,
	561, 2074, 559, 1206, 1207, 0, 1191, 1192, 2320, 1233,
	0, 197, 580, -2, -2, -2, 2431, -2, 612, -2,
	619, 2435, 2322, 624, 0, 626, -2, 629, 1209, 1211,
	1213, 717, 718, 2024, 0, 0, 0, 0, 0, 36,
	37, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 1101, 1102, 0, 205, 207, -2, -2,
	-2, -2, 0, 0, 2360, 2123, 1981, 2040, 1984, 1979,
	286, 288, 290, 291, 0, 0, 0, 0, 0, 0,
	316, 319, 321, 323, -2, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 946, 938, 939, 1157,
	0, 0, 0, -2, 423, 425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 351, 480, 481, 0, 1360,
	1360, 0, 0, 0, 0, 260, 251, 890, 892, 893,
	0, 0, 0, 0, 569, 571, 0, 0, 233, 895,
	897, 898, 0, 0, 0, 0, 0, 262, 0, 0,
	585, 587, 589, 654, 656, 658, 660, 662, 664, 666,
	668, 671, 673, 675, 677, 679, 681, 683, 685, 688,
	690, 692, 694, 696, 698, 700, 702, 704, 706, 708,
	710, 712, 714, 725, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 809, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 728, 730, 731, 732, 0,
	789, 807, 808, 817, 716, 0, 1091, 1361, 1235, 1216,
	1230, 1235, 1218, 1219, 1220, 1221, 1222, 1227, 1229, 1223,
	1224, 1225, 39, 41, 43, 45, 47, 49, 51, 53,
	55, 374, 376, 378, 380, 382, 385, 387, 389, -2,
	1330, 1331, 429, 431, 433, 435, 437, 439, 441, 572,
	0, 574, 0, 729, -2, 0, 1365, 1365, 1365, 0,
	0, 1331, 1329, 0, 577, 578, 633, 634, 1624, 0,
	0, 0, 0, 0, 0, 0, 1878, 1710, 0, 635,
	-2, 1741, 1743, 2406, 2431, 1877, 1745, 1746, 1747, 1748,
	1749, 0, 1751, 1752, 1753, 1754, 1755, 1756, 0, 1758,
	0, 1763, 1764, 1765, 0, 2413, 1958, 2034, -2, 0,
	0, 2419, 2030, 0, 1844, 1781, -2, -2, 2057, 2036,
	1556, 1557, 1558, 1559, 1560, -2, -2, 2449, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 0,
	2394, 2414, 2415, 2420, 2422, 2416, 2403, 1806, 2135, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1583, 1592, -2, -2, -2, -2, -2, -2,
	-2, 2407, 2408, 2425, 2428, 2434, 2439, 2440, 2412, 2421,
	2448, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 1584, -2, -2,
	-2, -2, 1348, 2293, 1351, 1051, 1349, 1333, 1335, 0,
	1337, 0, 0, 0, 1342, 1368, 1366, 0, 1409, 1346,
	1347, 1427, 1427, 1451, 0, 1432, 0, 1451, 1360, 1477,
	0, 1438, 2312, 1782, 1783, 0, 2040, 2035, -2, -2,
	2446, 0, 0, 0, 0, 0, 0, 0, 538, 0,
	544, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1232, 1156, 582, 583, 0, 607, 0, 611, 2402,
	-2, 0, 2331, -2, 615, 1236, 1240, 1241, 1242, 1243,
	1244, 0, 0, 0, 0, 1249, 0, 0, 621, 0,
	0, 608, 609, 627, 630, 0, 720, 721, 722, 723,
	724, 65, 0, 2414, 1477, 67, 0, 2003, 2065, 2066,
	2067, 2068, 2069, 2447, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2449, 70, 0, 2414, 74, 0,
	2414, 0, -2, 81, 0, 2009, 84, 0, 2006, 93,
	0, 2414, 0, 1978, -2, 0, 180, 2017, 0, 917,
	2019, -2, 2414, 1099, 263, 264, 2053, 2054, 2061, 2062,
	2063, 2064, 0, 0, 0, 0, 881, 1975, 1980, 882,
	1999, 883, 1985, 0, 292, 293, 294, 295, 296, 0,
	297, 2414, 299, 300, 0, 302, 303, 2414, 305, 306,
	0, 308, 0, 218, 219, 2414, 327, 328, 0, 330,
	331, 0, 333, 0, 0, 0, 337, -2, 352, 0,
	349, 340, 341, 343, 344, 345, 346, 0, 393, 391,
	2014, 0, 910, 2414, 0, 914, -2, 2020, 0, 0,
	1136, -2, 2414, 1096, 0, 1142, 1138, 0, -2, 0,
	1358, 2414, 1253, 942, 943, 944, 945, 1489, 412, 0,
	1268, 0, 1270, 0, 1289, 1483, 1427, 0, 0, 1488,
	0, 354, 355, 356, 357, 358, 2414, 0, 0, 0,
	363, 0, 365, 366, 367, 368, 369, 370, 371, 169,
	2414, 446, 473, 0, 169, 2414, 449, 169, 2414, 452,
	0, 455, 1155, 169, 2414, 458, 169, 2414, 461, 463,
	169, 2414, 467, 468, 470, 2414, 472, 265, 1202, 1203,
	1204, 1205, 0, -2, 531, 2023, -2, 483, 0, 484,
	0, -2, 0, 277, 0, 0, 899, 900, 901, 902,
	903, 906, 907, 908, 909, 1464, 236, 234, 0, 0,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 0,
	0, 592, 0, 0, 726, 727, 0, 0, 737, 738,
	739, 0, 277, 2323, 2289, 2155, 746, 0, 749, 752,
	-2, 0, 0, 0, 0, 756, 0, 761, 762, 763,
	0, 765, 767, 888, 769, 0, 0, 771, 0, 775,
	0, 778, 0, 780, 0, 782, -2, -2, -2, -2,
	793, -2, 0, 796, 798, 0, 800, -2, 0, 809,
	805, 806, 0, 0, 0, 0, 825, 826, 0, 835,
	0, 838, 839, 840, 0, 842, 843, 0, 845, 846,
	847, 848, 0, 850, 851, -2, -2, 855, 857, 0,
	864, 0, 868, 0, 872, 0, 733, 734, 169, 1481,
	1215, -2, 1217, 0, -2, 0, 573, 0, 576, 1388,
	1316, 1313, 0, 1385, 1386, 1317, 0, 0, 0, 1324,
	0, 1363, 1364, 0, 0, 0, 1303, 1304, 0, 0,
	0, 0, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892,
	1889, 1890, 1893, 1894, 0, 0, 0, 0, 0, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 1897, 1898, 0, 0, 1900, 0, 1902, 0,
	0, 0, 0, 0, 0, 1689, 1691, 1966, 0, 0,
	1899, 1629, 1630, 1631, 1632, 1633, 1668, 1669, 0, 0,
	1742, 1963, 1962, 1744, 0, 1914, 0, 1757, -2, 0,
	1878, 1909, 0, 0, 1766, 1767, 1768, 0, 0, 1914,
	0, 0, 1957, 1778, 1779, 1621, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 1569, 0, 1571,
	0, 1572, 1573, 1580, 1593, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 1938, -2, 0,
	0, 0, 0, 1585, 0, 1350, 0, 0, 1413, 1967,
	1971, 1972, 1413, 1413, 0, 0, 1915, 1474, 1474, 0,
	0, 1470, 1470, 1470, 1468, 1451, 0, 1451, 1461, 0,
	1451, 1451, 0, -2, 1432, 0, 0, 1461, 0, 1445,
	519, 521, 523, 525, 526, 527, 529, 1478, 1479, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 2370, 2322, 549, 563, 1360, 0,
	1917, 1504, 1508, 0, 1510, 1511, 1512, 1513, 1514, 0,
	0, 1505, -2, 1581, 1583, 1604, 2058, 2059, 2060, 1564,
	1565, 1566, 1567, 1568, 1576, 1563, 1563, 1563, 1574, 1603,
	1595, 1603, 1599, 1549, 1550, 1551, 1586, 1587, 1588, 1589,
	0, 2370, 2322, 555, 0, 0, 1300, 184, 186, 187,
	188, 0, 0, 0, 0, -2, 617, 622, 623, 0,
	1238, 0, 1245, 644, 645, 646, 1247, 1248, 0, 1250,
	620, 647, 648, 649, 650, 651, 652, 0, 1987, 1988,
	1989, 1990, 1993, 1994, 0, 0, 618, 637, 625, 0,
	631, 94, 1188, 0, 133, 0, 1188, 1188, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 118, 129,
	106, 107, 0, 0, 0, 0, 0, 75, 1073, 0,
	1076, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 0, 0, 117, 0, 0, 112, 96, 0, 0,
	0, 119, 131, 0, 160, 162, 0, 0, 0, 0,
	0, 0, 179, 189, 0, 0, 0, 0, 1097, 0,
	1357, 0, 0, 2414, 0, 1464, 2199, -2, -2, 1464,
	880, 0, 0, 2041, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 332, 334, 335, 336, 0, 1135,
	0, 342, 383, 1022, 2414, 0, 0, 410, 405, 0,
	407, 0, 0, 1072, 2414, 1070, 2018, 0, 1094, 0,
	1051, 2414, 2016, 0, 0, 1143, 2050, 1152, 1156, 1255,
	0, 414, 0, 1271, 1273, 0, 0, 1484, 0, 1486,
	1427, 353, 0, 360, 361, 362, 0, 442, 0, 167,
	168, 0, 169, 2414, 447, 0, 450, 0, 169, 2414,
	1973, 456, 0, 459, 0, 0, 465, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 240, 0, 1463, 0, 1464, 234, 277,
	277, 1464, 594, 1464, 596, 0, 0, 740, 741, 0,
	277, 277, 277, 747, 748, 750, 751, -2, -2, -2,
	865, 753, 754, 832, 0, 0, 0, 831, 768, 0,
	874, 2308, 2322, 886, 832, 2123, 832, 2123, 832, 2123,
	779, 781, 784, 820, 828, 792, 797, 0, 0, 802,
	810, -2, 0, 812, 0, 814, 0, 816, 832, 833,
	836, 841, 844, 849, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 1228, 1388, 1316, 575, 1307, 1387, 1308,
	1315, 1318, 0, 0, 1320, 0, 1322, 0, 1383, 1384,
	1391, 1392, 0, 1402, 1403, 1395, 0, -2, 0, 0,
	1398, 1399, 1326, 0, 1343, 1344, 1345, 1372, 1375, 1166,
	0, 2547, 1625, 1499, 1626, 1627, 2002, 0, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, -2, -2,
	-2, -2, -2, -2, -2, -2, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, -2, -2, -2,
	1666, 1667, -2, 1901, 1903, 0, 1966, 0, -2, 0,
	-2, -2, -2, -2, 1686, 0, 1688, 1693, 1695, 1697,
	0, 0, 0, 0, 1965, 1707, 1949, 1950, 0, 0,
	1880, 1881, 1882, 1692, 0, 1711, 1964, 1961, 0, 0,
	1913, 1371, 1770, 0, 0, 0, 0, 1777, 1762, 1911,
	0, 1910, 0, 0, 0, 1921, 0, 1956, 1952, 0,
	2000, 1620, 1607, 1608, 1609, 1610, 1611, 1612, 1622, 0,
	1997, 2027, 2033, 1854, 0, 0, 0, 1807, 1808, 1809,
	1810, 1811, 0, 1813, 1814, 0, 1816, 1817, 0, 1819,
	1820, 0, 1822, 1823, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 1521, 0, 0, 0,
	1525, 0, 0, 0, 1529, 0, 0, 0, 1533, 0,
	0, 0, 1537, 0, 0, 0, 1541, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 1826, 0, 1924, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1828, 0,
	1830, 1915, 1935, 0, 0, 1712, 0, 0, 0, 1878,
	0, 1833, 1915, 1943, 0, 0, 0, 0, 0, 1915,
	0, 1948, 0, 1840, 0, 1842, 1352, 0, 0, 1494,
	0, 0, 0, 1970, 1494, 1494, 0, 1408, 0, 0,
	1471, 1472, 1473, 0, 0, 1474, 0, 1465, 1469, 1466,
	1467, 1461, 1424, 0, 0, 2004, 1461, 1430, 1460, 0,
	1051, 1450, 1461, 1461, 0, -2, 1434, 1451, 0, 0,
	520, 522, 524, 528, 530, 0, 0, 1371, -2, 0,
	-2, 1050, 0, 0, 0, 0, 539, 541, 0, 0,
	462, 0, 0, 533, 0, 536, 0, 1495, 1498, 0,
	0, 1509, 1515, 1516, 0, -2, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 610, 0,
	1237, 1246, 0, 641, 0, 643, 0, 1991, 1995, 1992,
	1996, 0, 632, 0, 0, 0, 0, 1187, 0, 137,
	2414, 0, 171, 0, 0, 1015, 2010, 0, 0, 0,
	0, 2142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 1075, 1077, 1084, 1086,
	0, 1080, 1998, 0, 0, 1081, 0, 1083, 1085, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 109, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1131, 1129, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 0, 0, -2, 0, 0, 0, 0, 210,
	0, 268, 1976, 1986, 0, 904, 905, 298, 301, 304,
	307, 206, 0, 338, 0, 0, 948, 923, 0, 0,
	392, 277, 0, 0, 406, 2050, 912, 1068, 1071, 0,
	1051, 2414, 1108, 0, 0, 0, 0, 0, 0, 1141,
	0, 2414, 2005, 2049, 2050, 1257, 1265, 0, 1494, 0,
	1287, 1274, 0, 0, 0, 1287, 1291, 1292, 1294, 1295,
	0, 0, 1485, 1491, 0, 364, 474, 169, 444, 0,
	169, 169, 453, 0, 0, 169, 464, 169, 469, 169,
	266, 471, 482, 532, 1360, 1360, 277, 275, 2258, 273,
	270, 272, 0, 0, 0, 949, 951, 952, 953, 954,
	0, 2050, 0, 2188, 2050, 0, 1277, 1279, 0, 230,
	0, 237, 235, 240, 0, 0, 404, 593, 598, 735,
	0, 277, 743, 744, 745, 786, 822, 830, 755, 757,
	758, 759, 0, 887, 884, 885, 770, 832, 773, 832,
	776, 832, 795, 799, 804, 811, 0, 0, 0, 824,
	0, 0, 0, 0, 0, 0, 0, 869, 870, 871,
	873, 1482, 1311, 1312, 1314, 0, 1323, 0, 0, 1397,
	-2, -2, 1396, 1400, 1401, -2, -2, -2, -2, 1319,
	0, 1328, 1325, 0, 1382, 1164, 1165, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1708, 0, -2, 1687,
	1690, 1694, 1696, 1698, 0, 0, 0, 0, 0, 0,
	1904, 0, 1906, 1709, 1959, 1962, 1876, 0, 0, 1370,
	1371, 1371, 0, 1776, 0, 1912, 0, 1919, 1920, 0,
	1769, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 1812, 1815, 1818,
	1821, 0, 0, 0, 0, 1801, 0, 0, 0, 1805,
	1575, 1561, 0, 1603, 1601, 1602, 1596, 1603, 1600, 1553,
	0, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1527, 1528,
	1530, 1531, 1532, 1534, 1535, 1536, 1538, 1539, 1540, 1542,
	1543, 1544, 1546, 1547, 1548, 1552, 0, 1825, 0, 1827,
	1829, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 1716, 1717,
	1832, 1941, 1942, 0, 0, 0, 0, 0, 0, 1838,
	0, 1947, 1839, 1841, 1360, 0, 1353, 0, 1410, 1405,
	1493, 0, 1968, 1464, 1412, 1414, 1969, 2007, 1405, 1405,
	0, 1916, 0, 0, 1455, 0, 0, 0, 1457, 1428,
	0, 0, 1422, 0, 1418, 1419, 1420, 1421, 1429, 1051,
	1459, 1431, 1435, 2027, 0, 1461, 0, 1446, 0, 1448,
	1480, 0, 1440, 1443, 0, 0, 2042, 278, 0, 309,
	313, 314, 310, 311, 312, 548, 0, 0, 0, 0,
	1918, 0, 1500, 0, 1506, 0, 0, 0, 0, 554,
	0, 0, 0, 185, 1299, 196, 0, 606, -2, 639,
	640, 642, 0, 638, 134, 1188, 0, 0, 1169, 1171,
	0, 139, 2414, 148, 0, 989, 0, 2008, 0, 0,
	0, 0, 0, 1190, 0, 0, 2414, 169, 2414, 169,
	151, 154, 0, 159, 156, 157, 0, 0, 980, 95,
	1188, 0, 98, 102, 110, 0, 0, 0, 116, 0,
	0, 0, 1173, 1179, 0, 0, 1078, 1079, 1082, 1088,
	76, 0, 0, 1177, 1183, 82, 0, 1168, 161, 100,
	104, 111, 0, 1185, 97, 0, 183, 0, 0, 0,
	175, 0, 176, 177, 190, 0, 169, 2414, 0, 915,
	916, 1130, 1092, 1093, 0, 1098, 0, 0, 0, 1464,
	202, 0, 1464, 210, 0, 1982, 0, 326, 0, 0,
	0, 0, 947, 1033, 0, 920, 0, 0, 0, 398,
	394, 0, 403, 409, 408, 911, 0, 0, 0, 0,
	-2, 0, 0, 1145, 1139, 1140, 0, 0, 0, 2414,
	1259, 1265, 0, 1264, 1358, 1371, 413, 1266, 1287, 0,
	0, 0, 1276, 1272, 1269, 1494, 0, 0, 0, 0,
	0, 1487, 1490, 359, 443, 169, 448, 451, 1974, 169,
	457, 460, 466, 485, 486, 252, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 958, 0, 2050, 2050, 0,
	2012, 0, 0, 0, 0, 238, 0, 241, 0, 0,
	0, 246, 247, 248, 249, 250, 231, 1464, 0, 595,
	0, 0, 742, 0, 772, 774, 777, 813, 815, 832,
	858, 859, 975, 0, 975, 0, 0, 1321, 0, 1394,
	1327, 1376, 1377, 0, 1166, 0, 1628, 1671, 0, 0,
	-2, 0, 0, 1675, 0, 0, 0, -2, 0, 0,
	0, 1905, 1907, 0, 1961, 1771, 0, 0, 0, 1775,
	1759, 1760, 0, 1879, 1922, 1951, 1955, 0, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 0, 2001, 2028, 2032, 1852,
	1853, 1857, 2015, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 1594, 1598, 0, 0, 1923,
	1934, 1936, 1713, 1714, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, -2, -2, -2, 1731, 1732, 1733,
	-2, -2, -2, 0, 0, 0, 1937, 1939, 1940, 1944,
	1945, 0, 1835, 1836, 1837, 1946, 0, 1360, 1354, 1407,
	0, 1492, 1411, 0, 1407, 1407, 1367, 1453, 0, 0,
	1476, 0, 1425, 0, 1426, 0, 1458, 0, 1433, 1436,
	1437, 1447, 0, 1439, 0, 1442, 0, 1771, -2, 279,
	281, 0, 284, 551, 552, 550, 534, 0, 0, 1502,
	0, 0, 1578, 1582, 1606, 557, 558, 556, 198, 0,
	1462, 0, 0, 0, 0, 170, 987, 1014, 0, 0,
	0, 1159, 1166, 0, 0, 1020, 141, 0, 0, 0,
	149, 0, 0, 146, 0, 153, 158, 0, 0, 0,
	0, 0, 0, 113, 114, 115, 0, 120, 0, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 1163, 0, 0, 192, 0, 0, 0,
	1133, 1134, 1174, 1180, 0, 0, 210, 208, 0, 211,
	0, 214, 215, 0, 210, 204, 0, 0, 1051, 339,
	969, 1021, 0, 1023, 0, 921, 0, 0, 1022, 390,
	0, 397, 0, 0, 1072, 0, 0, 1095, 1106, 1051,
	0, 1144, 1146, 1154, 0, 0, 0, 1261, 1265, 0,
	1254, 1255, 1390, 1267, 1285, -2, 0, 0, 1371, 1293,
	1290, 1296, 1297, 0, 445, 454, 274, 0, 269, 271,
	0, 255, 0, 0, 950, 955, 0, 0, 0, 0,
	0, 1278, 1280, 0, 0, 0, 0, 0, 0, 240,
	261, 0, 736, 760, 823, 860, 974, 0, 0, 862,
	0, 0, 1393, 1380, 1381, 1378, 1166, 1673, 1677, 0,
	0, 0, 1679, -2, 0, 1701, -2, -2, 1908, 1960,
	1750, 1371, 1772, 1774, 1761, 1954, 1623, 0, 1859, 1856,
	0, 1843, 0, 1796, 1797, 0, 0, 1800, 1802, 1803,
	1804, 1562, 1555, 1554, 1933, 0, 0, 0, 0, 1834,
	1355, 0, 1848, 0, 0, 1415, 1848, 1848, 1454, 0,
	1456, 1423, 1416, 0, 2028, 1449, 1441, 0, 0, 282,
	0, 1496, 1501, 0, 1507, 1577, 199, 135, 136, 138,
	0, 988, 0, 991, 0, 0, 0, 0, 998, 999,
	0, 0, 0, 0, 0, 1008, 0, 1037, 1047, 0,
	1382, 0, 0, 0, 143, 164, 0, 0, 1189, 0,
	0, 169, 169, 0, 0, 1170, 1172, 0, 0, 0,
	0, 123, 0, 0, 1175, 1181, 1178, 1184, 0, 0,
	0, 1186, 181, 182, 0, 169, 0, 174, 169, 169,
	1163, 0, 0, 0, 201, 0, 0, 0, 0, 203,
	267, 210, 0, 977, 0, 1033, 1025, 1026, 1027, 0,
	1032, 1034, 0, 0, 935, 922, 0, 931, 0, 0,
	948, 923, 0, 395, 913, 1069, 1103, 1051, 0, 1137,
	0, 0, 0, 0, 0, 0, 1263, 1265, 0, 1256,
	1257, 1287, 1389, 0, 0, 0, 1275, 1390, 0, 276,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 242, 0, 243, 244, 245, 232, 597, 599, 0,
	0, 605, 973, 0, 0, 0, 0, 1379, 1681, -2,
	-2, 1702, 0, 2029, 2031, 1371, 0, 1845, 1373, 0,
	0, -2, 0, 0, 0, 1356, 1339, 0, 1406, 1404,
	1340, 1341, 1475, 0, 1444, 283, 0, 1503, 140, 0,
	992, 993, 2011, 995, 0, 997, 1000, 0, 1003, 2052,
	0, 1007, 0, 1016, 1038, 0, 969, 0, 1043, 1044,
	1045, 1160, 1161, 1049, 0, 142, 144, 163, 1163, 0,
	145, 152, 0, 0, 99, 0, 0, 2114, 126, 124,
	122, 1167, 101, 0, 183, 191, 1162, 178, 193, 169,
	0, 1176, 1182, 212, 0, 213, 216, 0, 0, 923,
	976, 0, 1024, 0, 1035, 1036, 925, 0, 924, 0,
	0, 0, 0, 0, 396, 399, 0, 402, 0, 0,
	1147, 0, 1153, 0, 0, 0, 1251, 0, 0, 1258,
	1259, 411, 1281, 0, 0, 1287, 1298, 254, 0, 0,
	956, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	957, 1049, 0, 0, 1013, 0, 259, 239, 0, 601,
	0, 603, 0, 861, 863, 0, 0, 1773, 1863, 0,
	0, 1798, 1799, -2, 0, 1739, 1847, 1849, 0, 1417,
	1497, 990, 994, 0, 0, 0, 1055, 0, 0, 1009,
	0, 1041, 1042, 977, 0, 969, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 173, 194, 1163, 209,
	226, 0, 1104, 925, 0, 0, 933, 0, 936, 0,
	932, 929, 930, 969, 0, 400, 401, 0, 1107, 0,
	1154, 0, 0, 1265, 1260, 1261, 1494, 1284, 1288, 0,
	0, 1047, 1049, 923, 0, 600, 0, 0, 866, 867,
	0, 0, 0, 0, 1858, 1374, 1740, 0, 0, 0,
	0, 1002, 1060, 0, 0, 0, 1039, 1040, 1037, 0,
	1018, 0, 1051, 147, 0, 1049, 0, 981, 0, 0,
	984, 0, 0, 127, 2114, 125, 0, 169, 229, 0,
	223, 221, 222, 918, 0, 0, 1029, 1031, 0, 937,
	977, 935, 1105, 1049, 0, 1047, 0, 0, 1263, 0,
	277, 277, 969, 1047, 1494, 0, 277, 602, 604, 1855,
	1875, 1864, -2, 2373, 2120, 0, 1875, 1875, 1850, 1851,
	0, 0, 1004, 1056, 1057, 0, 1052, 1053, 1054, 2051,
	1005, 1006, 1494, 1046, 0, 1055, 165, 969, 978, 0,
	0, 979, 0, 0, 130, 0, 132, 195, 217, 0,
	0, 0, 1028, 0, 0, 0, 0, 923, 925, 1047,
	0, 969, 0, 1262, 1252, 0, 256, 257, 977, 969,
	1012, 258, 1860, 0, 0, 1866, 1867, 1868, 1869, 1870,
	1861, 1862, 996, 0, 1058, 0, 1059, 0, 0, 0,
	1017, 0, 1060, 150, 982, 0, 985, 0, 128, 0,
	224, 225, 0, 1030, 926, 0, 928, 925, 934, 969,
	0, 977, 0, 1282, 0, 923, 977, 0, 1872, 1873,
	0, 0, 0, 1061, 0, 1064, 1065, 0, 1062, 0,
	1037, 0, 0, 0, 972, 927, 919, 977, 1049, 923,
	1047, 0, 1494, 923, 1871, 1874, 1865, 1001, 1063, 1066,
	1067, 1048, 1019, 0, 0, 227, 0, 968, 970, 971,
	923, 1047, 1494, 969, 1494, 1010, 1494, 977, 0, 0,
	1494, 969, 1150, 977, 1283, 1011, 983, 0, 228, 1148,
	977, 923, 0, 923, 1494, 0, 1494, 1151, 977, 1149,
	986,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 547, 3, 553, 548, 3,
	558, 559, 551, 549, 563, 550, 560, 552, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 566, 3,
	539, 541, 540, 544, 562, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 556, 3, 557, 554, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 564, 546, 565, 542,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 543, 57882, 545, 57883, 555, 57884, 561,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1235
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1261
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1364
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1377
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1402
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1419
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1423
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1444
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1490
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1494
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1500
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1509
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1524
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1530
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1538
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1552
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1562
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1573
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1580
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1592
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1599
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1616
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1627
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1635
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1656
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1666
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1675
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1686
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1692
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1718
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1723
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1843
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1892
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2053
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2057
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2060
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2120
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2203
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2211
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2238
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2349
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = nil
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2464
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2597
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2608
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2613
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2618
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2627
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2730
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2806
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2909
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2931
		{
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CREATE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "create access method")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplemented(sqllex, "create cast")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "create operator")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "create publication")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "create rule")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "create server")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2968
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2969
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2973
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2977
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			return unimplemented(sqllex, "drop server")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3003
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3011
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3079
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3090
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3118
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3153
		{

			sqlVAL.union.val = nil
		}
	case 411:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DELETE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3181
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "DROP")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3417
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3482
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3514
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "DELETE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "INSERT")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "INSERT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3591
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3624
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "GRANT")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3768
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "RESET")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "RESET")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "USE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3842
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "USE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4030
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4071
		{
			return unimplemented(sqllex, "set from current")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.Low
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.Normal
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.High
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4258
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4277
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.str = "client_encoding"
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.str = "timezone"
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4327
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4390
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4399
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4516
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = true
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = true
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = false
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4718
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = true
		}
	case 818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = false
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = false
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4838
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4859
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4885
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4928
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4936
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4973
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4996
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5012
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5152
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "RESUME")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5432
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5447
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5465
		{

			sqlVAL.union.val = nil
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = nil
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5497
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5529
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5543
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5558
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5559
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5632
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5643
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5646
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5650
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5656
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.str = ""
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5880
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5990
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6028
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6108
		{
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6109
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6111
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6269
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6278
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6317
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = true
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{

			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = false
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6405
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6419
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6431
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6443
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6453
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6463
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = nil
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6573
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6592
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6594
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6596
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6600
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6638
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6656
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6675
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6692
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6709
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = false
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = true
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = false
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = true
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = false
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.str = ""
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6820
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6826
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6896
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6902
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6914
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6920
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6934
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6940
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6958
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6961
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6962
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7058
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7069
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7074
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7112
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7128
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7149
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7190
		{
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7277
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.str = ""
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.str = ""
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.str = ""
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.str = ""
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7321
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7335
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7395
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7444
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7471
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7565
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7745
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7746
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7851
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7921
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = nil
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7935
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = true
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = false
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = false
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = true
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8027
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8032
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8150
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8153
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8209
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8224
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8246
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8251
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8298
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8337
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8347
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8393
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8423
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8456
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8458
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = nil
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = true
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = false
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.str = tree.AstFull
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.str = tree.AstRight
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.str = tree.AstInner
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8576
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.str = tree.AstHash
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.str = ""
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = true
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = false
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8732
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8745
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8753
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8754
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8772
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8774
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8782
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8802
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8863
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8872
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8873
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8876
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8878
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8881
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8884
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8888
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8896
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8897
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8898
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = types.Geography
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8913
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8921
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8955
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = nil
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = types.Int2
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = types.Int
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = types.Float4
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = types.Float
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9006
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = types.Bool
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = types.Float
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9047
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9053
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9075
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = types.String
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = true
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = false
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = types.Date
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9132
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9146
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9163
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = types.Interval
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9204
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = nil
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9711
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9932
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9958
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9982
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10012
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10023
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10024
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10039
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10114
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10290
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10310
		{
			return unimplemented(sqllex, "treat")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.str = ""
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10485
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10553
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10582
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.Any
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = tree.Some
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = tree.All
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = tree.Div
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.LT
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = tree.GT
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.LE
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = tree.GE
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.NE
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = tree.Like
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10944
		{
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11097
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11113
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11162
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11362
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.str = ""
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
