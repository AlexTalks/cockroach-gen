// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:881
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13862

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1609,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 419,
	-2, 0,
	-1, 74,
	245, 248,
	521, 248,
	-2, 0,
	-1, 88,
	234, 1344,
	247, 1344,
	263, 415,
	395, 415,
	406, 1097,
	446, 415,
	459, 1097,
	506, 1097,
	532, 415,
	558, 1097,
	-2, 0,
	-1, 94,
	133, 1609,
	240, 1609,
	543, 1609,
	544, 1609,
	-2, 0,
	-1, 112,
	152, 1580,
	172, 1580,
	185, 1580,
	243, 1580,
	276, 1580,
	346, 1580,
	356, 1580,
	538, 1580,
	-2, 1551,
	-1, 153,
	160, 936,
	262, 936,
	398, 897,
	464, 897,
	505, 897,
	524, 936,
	526, 897,
	-2, 0,
	-1, 157,
	4, 1611,
	21, 1611,
	22, 1611,
	23, 1611,
	24, 1611,
	25, 1611,
	26, 1611,
	27, 1611,
	29, 1611,
	30, 1611,
	36, 1611,
	41, 1611,
	42, 1611,
	44, 1611,
	45, 1611,
	46, 1611,
	47, 1611,
	48, 1611,
	49, 1611,
	50, 1611,
	51, 1611,
	53, 1611,
	54, 1611,
	55, 1611,
	56, 1611,
	58, 1611,
	59, 1611,
	60, 1611,
	61, 1611,
	62, 1611,
	63, 1611,
	64, 1611,
	68, 1611,
	69, 1611,
	70, 1611,
	71, 1611,
	73, 1611,
	74, 1611,
	75, 1611,
	79, 1611,
	80, 1611,
	81, 1611,
	82, 1611,
	83, 1611,
	84, 1611,
	85, 1611,
	88, 1611,
	89, 1611,
	90, 1611,
	91, 1611,
	92, 1611,
	94, 1611,
	96, 1611,
	97, 1611,
	98, 1611,
	99, 1611,
	100, 1611,
	101, 1611,
	103, 1611,
	104, 1611,
	105, 1611,
	107, 1611,
	108, 1611,
	109, 1611,
	117, 1611,
	118, 1611,
	119, 1611,
	120, 1611,
	121, 1611,
	123, 1611,
	124, 1611,
	125, 1611,
	126, 1611,
	128, 1611,
	129, 1611,
	130, 1611,
	132, 1611,
	133, 1611,
	134, 1611,
	136, 1611,
	137, 1611,
	138, 1611,
	141, 1611,
	142, 1611,
	143, 1611,
	145, 1611,
	146, 1611,
	147, 1611,
	149, 1611,
	150, 1611,
	151, 1611,
	153, 1611,
	154, 1611,
	155, 1611,
	156, 1611,
	157, 1611,
	158, 1611,
	159, 1611,
	160, 1611,
	161, 1611,
	162, 1611,
	163, 1611,
	164, 1611,
	165, 1611,
	166, 1611,
	167, 1611,
	168, 1611,
	169, 1611,
	171, 1611,
	177, 1611,
	178, 1611,
	179, 1611,
	180, 1611,
	184, 1611,
	186, 1611,
	187, 1611,
	188, 1611,
	192, 1611,
	193, 1611,
	194, 1611,
	195, 1611,
	196, 1611,
	197, 1611,
	198, 1611,
	199, 1611,
	200, 1611,
	201, 1611,
	202, 1611,
	203, 1611,
	204, 1611,
	205, 1611,
	207, 1611,
	208, 1611,
	210, 1611,
	211, 1611,
	213, 1611,
	214, 1611,
	215, 1611,
	216, 1611,
	217, 1611,
	218, 1611,
	219, 1611,
	220, 1611,
	221, 1611,
	223, 1611,
	224, 1611,
	226, 1611,
	227, 1611,
	228, 1611,
	229, 1611,
	230, 1611,
	234, 1611,
	235, 1611,
	236, 1611,
	237, 1611,
	240, 1611,
	241, 1611,
	242, 1611,
	244, 1611,
	246, 1611,
	247, 1611,
	249, 1611,
	251, 1611,
	252, 1611,
	253, 1611,
	255, 1611,
	259, 1611,
	260, 1611,
	261, 1611,
	262, 1611,
	263, 1611,
	264, 1611,
	266, 1611,
	267, 1611,
	268, 1611,
	270, 1611,
	271, 1611,
	273, 1611,
	274, 1611,
	277, 1611,
	278, 1611,
	279, 1611,
	280, 1611,
	281, 1611,
	282, 1611,
	283, 1611,
	286, 1611,
	287, 1611,
	288, 1611,
	289, 1611,
	291, 1611,
	292, 1611,
	293, 1611,
	294, 1611,
	295, 1611,
	296, 1611,
	297, 1611,
	298, 1611,
	299, 1611,
	300, 1611,
	301, 1611,
	302, 1611,
	303, 1611,
	304, 1611,
	305, 1611,
	306, 1611,
	307, 1611,
	308, 1611,
	309, 1611,
	310, 1611,
	311, 1611,
	312, 1611,
	314, 1611,
	316, 1611,
	317, 1611,
	318, 1611,
	319, 1611,
	320, 1611,
	321, 1611,
	322, 1611,
	323, 1611,
	324, 1611,
	325, 1611,
	326, 1611,
	327, 1611,
	328, 1611,
	329, 1611,
	330, 1611,
	332, 1611,
	333, 1611,
	335, 1611,
	337, 1611,
	338, 1611,
	339, 1611,
	341, 1611,
	342, 1611,
	343, 1611,
	344, 1611,
	345, 1611,
	348, 1611,
	351, 1611,
	352, 1611,
	353, 1611,
	354, 1611,
	357, 1611,
	358, 1611,
	359, 1611,
	361, 1611,
	363, 1611,
	364, 1611,
	365, 1611,
	366, 1611,
	367, 1611,
	368, 1611,
	369, 1611,
	370, 1611,
	371, 1611,
	372, 1611,
	373, 1611,
	374, 1611,
	375, 1611,
	377, 1611,
	378, 1611,
	379, 1611,
	380, 1611,
	381, 1611,
	382, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	388, 1611,
	389, 1611,
	390, 1611,
	391, 1611,
	393, 1611,
	394, 1611,
	396, 1611,
	397, 1611,
	398, 1611,
	399, 1611,
	400, 1611,
	401, 1611,
	402, 1611,
	403, 1611,
	404, 1611,
	405, 1611,
	406, 1611,
	407, 1611,
	408, 1611,
	410, 1611,
	412, 1611,
	413, 1611,
	414, 1611,
	420, 1611,
	421, 1611,
	423, 1611,
	424, 1611,
	425, 1611,
	426, 1611,
	427, 1611,
	428, 1611,
	429, 1611,
	430, 1611,
	431, 1611,
	432, 1611,
	434, 1611,
	435, 1611,
	436, 1611,
	438, 1611,
	439, 1611,
	440, 1611,
	441, 1611,
	442, 1611,
	443, 1611,
	444, 1611,
	446, 1611,
	447, 1611,
	448, 1611,
	449, 1611,
	450, 1611,
	451, 1611,
	452, 1611,
	453, 1611,
	454, 1611,
	455, 1611,
	456, 1611,
	457, 1611,
	459, 1611,
	460, 1611,
	461, 1611,
	462, 1611,
	463, 1611,
	464, 1611,
	466, 1611,
	467, 1611,
	468, 1611,
	469, 1611,
	470, 1611,
	471, 1611,
	473, 1611,
	474, 1611,
	475, 1611,
	476, 1611,
	477, 1611,
	478, 1611,
	479, 1611,
	480, 1611,
	482, 1611,
	484, 1611,
	485, 1611,
	486, 1611,
	487, 1611,
	488, 1611,
	489, 1611,
	490, 1611,
	491, 1611,
	492, 1611,
	493, 1611,
	494, 1611,
	495, 1611,
	496, 1611,
	497, 1611,
	498, 1611,
	499, 1611,
	501, 1611,
	502, 1611,
	504, 1611,
	505, 1611,
	507, 1611,
	508, 1611,
	509, 1611,
	510, 1611,
	511, 1611,
	512, 1611,
	513, 1611,
	514, 1611,
	516, 1611,
	517, 1611,
	518, 1611,
	519, 1611,
	520, 1611,
	522, 1611,
	524, 1611,
	525, 1611,
	526, 1611,
	527, 1611,
	528, 1611,
	529, 1611,
	531, 1611,
	532, 1611,
	533, 1611,
	534, 1611,
	536, 1611,
	537, 1611,
	540, 1611,
	541, 1611,
	542, 1611,
	543, 1611,
	544, 1611,
	545, 1611,
	546, 1611,
	548, 1611,
	551, 1611,
	552, 1611,
	553, 1611,
	554, 1611,
	555, 1611,
	556, 1611,
	558, 1611,
	559, 1611,
	560, 1611,
	561, 1611,
	562, 1611,
	563, 1611,
	564, 1611,
	569, 1611,
	570, 1611,
	571, 1611,
	572, 1611,
	573, 1611,
	574, 1611,
	-2, 0,
	-1, 158,
	1, 1461,
	131, 1461,
	251, 1461,
	334, 1461,
	393, 1461,
	402, 1461,
	578, 1461,
	608, 1461,
	-2, 0,
	-1, 160,
	1, 1461,
	608, 1461,
	-2, 0,
	-1, 161,
	1, 1461,
	608, 1461,
	-2, 0,
	-1, 162,
	1, 1461,
	521, 1461,
	608, 1461,
	-2, 0,
	-1, 191,
	152, 1579,
	172, 1579,
	185, 1579,
	243, 1579,
	276, 1579,
	346, 1579,
	356, 1579,
	538, 1579,
	-2, 1554,
	-1, 238,
	4, 1618,
	5, 1618,
	6, 1618,
	7, 1618,
	8, 1618,
	9, 1618,
	10, 1618,
	21, 1618,
	22, 1618,
	23, 1618,
	24, 1618,
	25, 1618,
	26, 1618,
	27, 1618,
	29, 1618,
	30, 1618,
	36, 1618,
	37, 1618,
	41, 1618,
	42, 1618,
	43, 1618,
	44, 1618,
	45, 1618,
	46, 1618,
	47, 1618,
	48, 1618,
	49, 1618,
	50, 1618,
	51, 1618,
	53, 1618,
	54, 1618,
	55, 1618,
	56, 1618,
	58, 1618,
	59, 1618,
	60, 1618,
	61, 1618,
	62, 1618,
	63, 1618,
	64, 1618,
	65, 1618,
	66, 1618,
	67, 1618,
	68, 1618,
	69, 1618,
	70, 1618,
	71, 1618,
	73, 1618,
	74, 1618,
	75, 1618,
	77, 1618,
	79, 1618,
	80, 1618,
	81, 1618,
	82, 1618,
	83, 1618,
	84, 1618,
	85, 1618,
	88, 1618,
	89, 1618,
	90, 1618,
	91, 1618,
	92, 1618,
	94, 1618,
	96, 1618,
	97, 1618,
	98, 1618,
	99, 1618,
	100, 1618,
	101, 1618,
	103, 1618,
	104, 1618,
	105, 1618,
	106, 1618,
	107, 1618,
	108, 1618,
	109, 1618,
	110, 1618,
	111, 1618,
	112, 1618,
	113, 1618,
	114, 1618,
	115, 1618,
	116, 1618,
	117, 1618,
	118, 1618,
	119, 1618,
	120, 1618,
	121, 1618,
	122, 1618,
	123, 1618,
	124, 1618,
	125, 1618,
	126, 1618,
	127, 1618,
	128, 1618,
	129, 1618,
	130, 1618,
	132, 1618,
	133, 1618,
	134, 1618,
	136, 1618,
	137, 1618,
	138, 1618,
	141, 1618,
	142, 1618,
	143, 1618,
	145, 1618,
	146, 1618,
	147, 1618,
	149, 1618,
	150, 1618,
	151, 1618,
	153, 1618,
	154, 1618,
	155, 1618,
	156, 1618,
	157, 1618,
	158, 1618,
	159, 1618,
	160, 1618,
	161, 1618,
	162, 1618,
	163, 1618,
	164, 1618,
	165, 1618,
	166, 1618,
	167, 1618,
	168, 1618,
	169, 1618,
	170, 1618,
	171, 1618,
	177, 1618,
	178, 1618,
	179, 1618,
	180, 1618,
	184, 1618,
	186, 1618,
	187, 1618,
	188, 1618,
	191, 1618,
	192, 1618,
	193, 1618,
	194, 1618,
	195, 1618,
	196, 1618,
	197, 1618,
	198, 1618,
	199, 1618,
	200, 1618,
	201, 1618,
	202, 1618,
	203, 1618,
	204, 1618,
	205, 1618,
	207, 1618,
	208, 1618,
	210, 1618,
	211, 1618,
	213, 1618,
	214, 1618,
	215, 1618,
	216, 1618,
	217, 1618,
	218, 1618,
	219, 1618,
	220, 1618,
	221, 1618,
	222, 1618,
	223, 1618,
	224, 1618,
	226, 1618,
	227, 1618,
	228, 1618,
	229, 1618,
	230, 1618,
	234, 1618,
	235, 1618,
	236, 1618,
	237, 1618,
	239, 1618,
	240, 1618,
	241, 1618,
	242, 1618,
	244, 1618,
	246, 1618,
	247, 1618,
	248, 1618,
	249, 1618,
	250, 1618,
	251, 1618,
	252, 1618,
	253, 1618,
	254, 1618,
	255, 1618,
	259, 1618,
	260, 1618,
	261, 1618,
	262, 1618,
	263, 1618,
	264, 1618,
	266, 1618,
	267, 1618,
	268, 1618,
	270, 1618,
	271, 1618,
	272, 1618,
	273, 1618,
	274, 1618,
	275, 1618,
	277, 1618,
	278, 1618,
	279, 1618,
	280, 1618,
	281, 1618,
	282, 1618,
	283, 1618,
	284, 1618,
	285, 1618,
	286, 1618,
	287, 1618,
	288, 1618,
	289, 1618,
	291, 1618,
	292, 1618,
	293, 1618,
	294, 1618,
	295, 1618,
	296, 1618,
	297, 1618,
	298, 1618,
	299, 1618,
	300, 1618,
	301, 1618,
	302, 1618,
	303, 1618,
	304, 1618,
	305, 1618,
	306, 1618,
	307, 1618,
	308, 1618,
	309, 1618,
	310, 1618,
	311, 1618,
	312, 1618,
	314, 1618,
	315, 1618,
	316, 1618,
	317, 1618,
	318, 1618,
	319, 1618,
	320, 1618,
	321, 1618,
	322, 1618,
	323, 1618,
	324, 1618,
	325, 1618,
	326, 1618,
	327, 1618,
	328, 1618,
	329, 1618,
	330, 1618,
	331, 1618,
	332, 1618,
	333, 1618,
	334, 1618,
	335, 1618,
	336, 1618,
	337, 1618,
	338, 1618,
	339, 1618,
	340, 1618,
	341, 1618,
	342, 1618,
	343, 1618,
	344, 1618,
	345, 1618,
	348, 1618,
	352, 1618,
	353, 1618,
	354, 1618,
	357, 1618,
	358, 1618,
	359, 1618,
	360, 1618,
	361, 1618,
	362, 1618,
	363, 1618,
	364, 1618,
	365, 1618,
	366, 1618,
	367, 1618,
	368, 1618,
	369, 1618,
	370, 1618,
	371, 1618,
	372, 1618,
	373, 1618,
	374, 1618,
	375, 1618,
	377, 1618,
	378, 1618,
	379, 1618,
	380, 1618,
	381, 1618,
	382, 1618,
	383, 1618,
	384, 1618,
	385, 1618,
	386, 1618,
	387, 1618,
	388, 1618,
	389, 1618,
	390, 1618,
	391, 1618,
	393, 1618,
	394, 1618,
	396, 1618,
	397, 1618,
	398, 1618,
	399, 1618,
	400, 1618,
	401, 1618,
	402, 1618,
	403, 1618,
	404, 1618,
	405, 1618,
	406, 1618,
	407, 1618,
	408, 1618,
	410, 1618,
	412, 1618,
	413, 1618,
	414, 1618,
	420, 1618,
	421, 1618,
	423, 1618,
	424, 1618,
	425, 1618,
	426, 1618,
	427, 1618,
	428, 1618,
	429, 1618,
	430, 1618,
	431, 1618,
	432, 1618,
	434, 1618,
	435, 1618,
	436, 1618,
	437, 1618,
	438, 1618,
	439, 1618,
	440, 1618,
	441, 1618,
	442, 1618,
	443, 1618,
	444, 1618,
	446, 1618,
	447, 1618,
	448, 1618,
	449, 1618,
	450, 1618,
	451, 1618,
	452, 1618,
	453, 1618,
	454, 1618,
	455, 1618,
	456, 1618,
	457, 1618,
	459, 1618,
	460, 1618,
	461, 1618,
	462, 1618,
	463, 1618,
	464, 1618,
	465, 1618,
	466, 1618,
	467, 1618,
	468, 1618,
	469, 1618,
	470, 1618,
	471, 1618,
	472, 1618,
	473, 1618,
	474, 1618,
	475, 1618,
	476, 1618,
	477, 1618,
	478, 1618,
	479, 1618,
	480, 1618,
	482, 1618,
	484, 1618,
	485, 1618,
	486, 1618,
	487, 1618,
	488, 1618,
	489, 1618,
	490, 1618,
	491, 1618,
	492, 1618,
	493, 1618,
	494, 1618,
	495, 1618,
	496, 1618,
	497, 1618,
	498, 1618,
	499, 1618,
	501, 1618,
	502, 1618,
	503, 1618,
	504, 1618,
	505, 1618,
	507, 1618,
	508, 1618,
	509, 1618,
	510, 1618,
	511, 1618,
	512, 1618,
	513, 1618,
	514, 1618,
	516, 1618,
	517, 1618,
	518, 1618,
	519, 1618,
	520, 1618,
	522, 1618,
	524, 1618,
	525, 1618,
	526, 1618,
	527, 1618,
	528, 1618,
	529, 1618,
	530, 1618,
	531, 1618,
	532, 1618,
	533, 1618,
	534, 1618,
	536, 1618,
	537, 1618,
	539, 1618,
	540, 1618,
	541, 1618,
	542, 1618,
	543, 1618,
	544, 1618,
	545, 1618,
	546, 1618,
	547, 1618,
	548, 1618,
	551, 1618,
	552, 1618,
	553, 1618,
	554, 1618,
	555, 1618,
	556, 1618,
	558, 1618,
	559, 1618,
	560, 1618,
	561, 1618,
	562, 1618,
	563, 1618,
	564, 1618,
	569, 1618,
	570, 1618,
	571, 1618,
	572, 1618,
	573, 1618,
	574, 1618,
	575, 1618,
	588, 1618,
	595, 1618,
	596, 1618,
	597, 1618,
	605, 1618,
	609, 1618,
	-2, 0,
	-1, 755,
	4, 1342,
	21, 1342,
	22, 1342,
	23, 1342,
	24, 1342,
	25, 1342,
	26, 1342,
	27, 1342,
	29, 1342,
	30, 1342,
	36, 1342,
	41, 1342,
	42, 1342,
	44, 1342,
	45, 1342,
	46, 1342,
	47, 1342,
	48, 1342,
	49, 1342,
	50, 1342,
	51, 1342,
	53, 1342,
	54, 1342,
	55, 1342,
	56, 1342,
	58, 1342,
	59, 1342,
	60, 1342,
	61, 1342,
	62, 1342,
	63, 1342,
	64, 1342,
	68, 1342,
	69, 1342,
	70, 1342,
	71, 1342,
	73, 1342,
	74, 1342,
	75, 1342,
	79, 1342,
	80, 1342,
	81, 1342,
	82, 1342,
	83, 1342,
	84, 1342,
	85, 1342,
	88, 1342,
	89, 1342,
	90, 1342,
	91, 1342,
	92, 1342,
	94, 1342,
	96, 1342,
	97, 1342,
	98, 1342,
	99, 1342,
	100, 1342,
	101, 1342,
	103, 1342,
	104, 1342,
	105, 1342,
	107, 1342,
	108, 1342,
	109, 1342,
	117, 1342,
	118, 1342,
	119, 1342,
	120, 1342,
	121, 1342,
	123, 1342,
	124, 1342,
	125, 1342,
	126, 1342,
	128, 1342,
	129, 1342,
	130, 1342,
	132, 1342,
	133, 1342,
	134, 1342,
	136, 1342,
	137, 1342,
	138, 1342,
	141, 1342,
	142, 1342,
	143, 1342,
	145, 1342,
	146, 1342,
	147, 1342,
	149, 1342,
	150, 1342,
	151, 1342,
	153, 1342,
	154, 1342,
	155, 1342,
	156, 1342,
	157, 1342,
	158, 1342,
	159, 1342,
	160, 1342,
	161, 1342,
	162, 1342,
	163, 1342,
	164, 1342,
	165, 1342,
	166, 1342,
	167, 1342,
	168, 1342,
	169, 1342,
	171, 1342,
	177, 1342,
	178, 1342,
	179, 1342,
	180, 1342,
	184, 1342,
	186, 1342,
	187, 1342,
	188, 1342,
	192, 1342,
	193, 1342,
	194, 1342,
	195, 1342,
	196, 1342,
	197, 1342,
	198, 1342,
	199, 1342,
	200, 1342,
	201, 1342,
	202, 1342,
	203, 1342,
	204, 1342,
	205, 1342,
	207, 1342,
	208, 1342,
	210, 1342,
	211, 1342,
	213, 1342,
	214, 1342,
	215, 1342,
	216, 1342,
	217, 1342,
	218, 1342,
	219, 1342,
	220, 1342,
	221, 1342,
	223, 1342,
	224, 1342,
	226, 1342,
	227, 1342,
	228, 1342,
	229, 1342,
	230, 1342,
	234, 1342,
	235, 1342,
	236, 1342,
	237, 1342,
	240, 1342,
	241, 1342,
	242, 1342,
	244, 1342,
	246, 1342,
	247, 1342,
	249, 1342,
	251, 1342,
	252, 1342,
	253, 1342,
	255, 1342,
	259, 1342,
	260, 1342,
	261, 1342,
	262, 1342,
	263, 1342,
	264, 1342,
	266, 1342,
	267, 1342,
	268, 1342,
	270, 1342,
	271, 1342,
	273, 1342,
	274, 1342,
	277, 1342,
	278, 1342,
	279, 1342,
	280, 1342,
	281, 1342,
	282, 1342,
	283, 1342,
	286, 1342,
	287, 1342,
	288, 1342,
	289, 1342,
	291, 1342,
	292, 1342,
	293, 1342,
	294, 1342,
	295, 1342,
	296, 1342,
	297, 1342,
	298, 1342,
	299, 1342,
	300, 1342,
	301, 1342,
	302, 1342,
	303, 1342,
	304, 1342,
	305, 1342,
	306, 1342,
	307, 1342,
	308, 1342,
	309, 1342,
	310, 1342,
	311, 1342,
	312, 1342,
	314, 1342,
	316, 1342,
	317, 1342,
	318, 1342,
	319, 1342,
	320, 1342,
	321, 1342,
	322, 1342,
	323, 1342,
	324, 1342,
	325, 1342,
	326, 1342,
	327, 1342,
	328, 1342,
	329, 1342,
	330, 1342,
	332, 1342,
	333, 1342,
	335, 1342,
	337, 1342,
	338, 1342,
	339, 1342,
	341, 1342,
	342, 1342,
	343, 1342,
	344, 1342,
	345, 1342,
	348, 1342,
	352, 1342,
	353, 1342,
	354, 1342,
	357, 1342,
	358, 1342,
	359, 1342,
	361, 1342,
	363, 1342,
	364, 1342,
	365, 1342,
	366, 1342,
	367, 1342,
	368, 1342,
	369, 1342,
	370, 1342,
	371, 1342,
	372, 1342,
	373, 1342,
	374, 1342,
	375, 1342,
	377, 1342,
	378, 1342,
	379, 1342,
	380, 1342,
	381, 1342,
	382, 1342,
	383, 1342,
	384, 1342,
	385, 1342,
	386, 1342,
	387, 1342,
	388, 1342,
	389, 1342,
	390, 1342,
	391, 1342,
	393, 1342,
	394, 1342,
	396, 1342,
	397, 1342,
	398, 1342,
	399, 1342,
	400, 1342,
	401, 1342,
	402, 1342,
	403, 1342,
	404, 1342,
	405, 1342,
	406, 1342,
	407, 1342,
	408, 1342,
	410, 1342,
	412, 1342,
	413, 1342,
	414, 1342,
	420, 1342,
	421, 1342,
	423, 1342,
	424, 1342,
	425, 1342,
	426, 1342,
	427, 1342,
	428, 1342,
	429, 1342,
	430, 1342,
	431, 1342,
	432, 1342,
	434, 1342,
	435, 1342,
	436, 1342,
	438, 1342,
	439, 1342,
	440, 1342,
	441, 1342,
	442, 1342,
	443, 1342,
	444, 1342,
	446, 1342,
	447, 1342,
	448, 1342,
	449, 1342,
	450, 1342,
	451, 1342,
	452, 1342,
	453, 1342,
	454, 1342,
	455, 1342,
	456, 1342,
	457, 1342,
	459, 1342,
	460, 1342,
	461, 1342,
	462, 1342,
	463, 1342,
	464, 1342,
	466, 1342,
	467, 1342,
	468, 1342,
	469, 1342,
	470, 1342,
	471, 1342,
	473, 1342,
	474, 1342,
	475, 1342,
	476, 1342,
	477, 1342,
	478, 1342,
	479, 1342,
	480, 1342,
	482, 1342,
	484, 1342,
	485, 1342,
	486, 1342,
	487, 1342,
	488, 1342,
	489, 1342,
	490, 1342,
	491, 1342,
	492, 1342,
	493, 1342,
	494, 1342,
	495, 1342,
	496, 1342,
	497, 1342,
	498, 1342,
	499, 1342,
	501, 1342,
	502, 1342,
	504, 1342,
	505, 1342,
	507, 1342,
	508, 1342,
	509, 1342,
	510, 1342,
	511, 1342,
	512, 1342,
	513, 1342,
	514, 1342,
	516, 1342,
	517, 1342,
	518, 1342,
	519, 1342,
	520, 1342,
	522, 1342,
	524, 1342,
	525, 1342,
	526, 1342,
	527, 1342,
	528, 1342,
	529, 1342,
	531, 1342,
	532, 1342,
	533, 1342,
	534, 1342,
	536, 1342,
	537, 1342,
	540, 1342,
	541, 1342,
	542, 1342,
	543, 1342,
	544, 1342,
	545, 1342,
	546, 1342,
	548, 1342,
	551, 1342,
	552, 1342,
	553, 1342,
	554, 1342,
	555, 1342,
	556, 1342,
	558, 1342,
	559, 1342,
	560, 1342,
	561, 1342,
	562, 1342,
	563, 1342,
	564, 1342,
	569, 1342,
	570, 1342,
	571, 1342,
	572, 1342,
	573, 1342,
	574, 1342,
	-2, 0,
	-1, 774,
	190, 2410,
	521, 2410,
	587, 2410,
	607, 2410,
	-2, 0,
	-1, 775,
	190, 2397,
	521, 2397,
	587, 2397,
	607, 2397,
	-2, 0,
	-1, 777,
	190, 2663,
	521, 2663,
	587, 2663,
	607, 2663,
	-2, 0,
	-1, 780,
	190, 2522,
	521, 2522,
	587, 2522,
	607, 2522,
	-2, 0,
	-1, 781,
	190, 2704,
	521, 2704,
	587, 2704,
	607, 2704,
	-2, 0,
	-1, 789,
	190, 2549,
	521, 2549,
	587, 2549,
	607, 2549,
	-2, 718,
	-1, 824,
	607, 2346,
	610, 2346,
	-2, 1018,
	-1, 825,
	607, 2348,
	610, 2348,
	-2, 1019,
	-1, 826,
	607, 2347,
	610, 2347,
	-2, 1020,
	-1, 827,
	610, 2272,
	-2, 1021,
	-1, 852,
	185, 267,
	-2, 0,
	-1, 876,
	43, 2319,
	-2, 0,
	-1, 877,
	558, 1320,
	-2, 1098,
	-1, 893,
	4, 1752,
	21, 1752,
	22, 1752,
	23, 1752,
	24, 1752,
	25, 1752,
	26, 1752,
	27, 1752,
	29, 1752,
	30, 1752,
	36, 1752,
	41, 1752,
	42, 1752,
	44, 1752,
	45, 1752,
	46, 1752,
	47, 1752,
	48, 1752,
	49, 1752,
	50, 1752,
	51, 1752,
	53, 1752,
	54, 1752,
	55, 1752,
	56, 1752,
	58, 1752,
	59, 1752,
	60, 1752,
	61, 1752,
	62, 1752,
	63, 1752,
	64, 1752,
	68, 1752,
	69, 1752,
	70, 1752,
	71, 1752,
	73, 1752,
	74, 1752,
	75, 1752,
	79, 1752,
	80, 1752,
	81, 1752,
	82, 1752,
	83, 1752,
	84, 1752,
	85, 1752,
	88, 1752,
	89, 1752,
	90, 1752,
	91, 1752,
	92, 1752,
	94, 1752,
	96, 1752,
	97, 1752,
	98, 1752,
	99, 1752,
	100, 1752,
	101, 1752,
	103, 1752,
	104, 1752,
	105, 1752,
	107, 1752,
	108, 1752,
	109, 1752,
	117, 1752,
	118, 1752,
	119, 1752,
	120, 1752,
	121, 1752,
	123, 1752,
	124, 1752,
	125, 1752,
	126, 1752,
	128, 1752,
	129, 1752,
	130, 1752,
	132, 1752,
	133, 1752,
	134, 1752,
	136, 1752,
	137, 1752,
	138, 1752,
	141, 1752,
	142, 1752,
	143, 1752,
	145, 1752,
	146, 1752,
	147, 1752,
	149, 1752,
	150, 1752,
	151, 1752,
	153, 1752,
	154, 1752,
	155, 1752,
	156, 1752,
	157, 1752,
	158, 1752,
	159, 1752,
	160, 1752,
	161, 1752,
	162, 1752,
	163, 1752,
	164, 1752,
	165, 1752,
	166, 1752,
	167, 1752,
	168, 1752,
	169, 1752,
	171, 1752,
	177, 1752,
	178, 1752,
	179, 1752,
	180, 1752,
	184, 1752,
	186, 1752,
	187, 1752,
	188, 1752,
	192, 1752,
	193, 1752,
	194, 1752,
	195, 1752,
	196, 1752,
	197, 1752,
	198, 1752,
	199, 1752,
	200, 1752,
	201, 1752,
	202, 1752,
	203, 1752,
	204, 1752,
	205, 1752,
	207, 1752,
	208, 1752,
	210, 1752,
	211, 1752,
	213, 1752,
	214, 1752,
	215, 1752,
	216, 1752,
	217, 1752,
	218, 1752,
	219, 1752,
	220, 1752,
	221, 1752,
	223, 1752,
	224, 1752,
	226, 1752,
	227, 1752,
	228, 1752,
	229, 1752,
	230, 1752,
	234, 1752,
	235, 1752,
	236, 1752,
	237, 1752,
	240, 1752,
	241, 1752,
	242, 1752,
	244, 1752,
	246, 1752,
	247, 1752,
	249, 1752,
	251, 1752,
	252, 1752,
	253, 1752,
	255, 1752,
	259, 1752,
	260, 1752,
	261, 1752,
	262, 1752,
	263, 1752,
	264, 1752,
	266, 1752,
	267, 1752,
	268, 1752,
	270, 1752,
	271, 1752,
	273, 1752,
	274, 1752,
	277, 1752,
	278, 1752,
	279, 1752,
	280, 1752,
	281, 1752,
	282, 1752,
	283, 1752,
	286, 1752,
	287, 1752,
	288, 1752,
	289, 1752,
	291, 1752,
	292, 1752,
	293, 1752,
	294, 1752,
	295, 1752,
	296, 1752,
	297, 1752,
	298, 1752,
	299, 1752,
	300, 1752,
	301, 1752,
	302, 1752,
	303, 1752,
	304, 1752,
	305, 1752,
	306, 1752,
	307, 1752,
	308, 1752,
	309, 1752,
	310, 1752,
	311, 1752,
	312, 1752,
	314, 1752,
	316, 1752,
	317, 1752,
	318, 1752,
	319, 1752,
	320, 1752,
	321, 1752,
	322, 1752,
	323, 1752,
	324, 1752,
	325, 1752,
	326, 1752,
	327, 1752,
	328, 1752,
	329, 1752,
	330, 1752,
	332, 1752,
	333, 1752,
	335, 1752,
	337, 1752,
	338, 1752,
	339, 1752,
	341, 1752,
	342, 1752,
	343, 1752,
	344, 1752,
	345, 1752,
	348, 1752,
	352, 1752,
	353, 1752,
	354, 1752,
	357, 1752,
	358, 1752,
	359, 1752,
	361, 1752,
	363, 1752,
	364, 1752,
	365, 1752,
	366, 1752,
	367, 1752,
	368, 1752,
	369, 1752,
	370, 1752,
	371, 1752,
	372, 1752,
	373, 1752,
	374, 1752,
	375, 1752,
	377, 1752,
	378, 1752,
	379, 1752,
	380, 1752,
	381, 1752,
	382, 1752,
	383, 1752,
	384, 1752,
	385, 1752,
	386, 1752,
	387, 1752,
	388, 1752,
	389, 1752,
	390, 1752,
	391, 1752,
	393, 1752,
	394, 1752,
	396, 1752,
	397, 1752,
	398, 1752,
	399, 1752,
	400, 1752,
	401, 1752,
	402, 1752,
	403, 1752,
	404, 1752,
	405, 1752,
	406, 1752,
	407, 1752,
	408, 1752,
	410, 1752,
	412, 1752,
	413, 1752,
	414, 1752,
	420, 1752,
	421, 1752,
	423, 1752,
	424, 1752,
	425, 1752,
	426, 1752,
	427, 1752,
	428, 1752,
	429, 1752,
	430, 1752,
	431, 1752,
	432, 1752,
	434, 1752,
	435, 1752,
	436, 1752,
	438, 1752,
	439, 1752,
	440, 1752,
	441, 1752,
	442, 1752,
	443, 1752,
	444, 1752,
	446, 1752,
	447, 1752,
	448, 1752,
	449, 1752,
	450, 1752,
	451, 1752,
	452, 1752,
	453, 1752,
	454, 1752,
	455, 1752,
	456, 1752,
	457, 1752,
	459, 1752,
	460, 1752,
	461, 1752,
	462, 1752,
	463, 1752,
	464, 1752,
	466, 1752,
	467, 1752,
	468, 1752,
	469, 1752,
	470, 1752,
	471, 1752,
	473, 1752,
	474, 1752,
	475, 1752,
	476, 1752,
	477, 1752,
	478, 1752,
	479, 1752,
	480, 1752,
	482, 1752,
	484, 1752,
	485, 1752,
	486, 1752,
	487, 1752,
	488, 1752,
	489, 1752,
	490, 1752,
	491, 1752,
	492, 1752,
	493, 1752,
	494, 1752,
	495, 1752,
	496, 1752,
	497, 1752,
	498, 1752,
	499, 1752,
	501, 1752,
	502, 1752,
	504, 1752,
	505, 1752,
	507, 1752,
	508, 1752,
	509, 1752,
	510, 1752,
	511, 1752,
	512, 1752,
	513, 1752,
	514, 1752,
	516, 1752,
	517, 1752,
	518, 1752,
	519, 1752,
	520, 1752,
	522, 1752,
	524, 1752,
	525, 1752,
	526, 1752,
	527, 1752,
	528, 1752,
	529, 1752,
	531, 1752,
	532, 1752,
	533, 1752,
	534, 1752,
	536, 1752,
	537, 1752,
	540, 1752,
	541, 1752,
	542, 1752,
	543, 1752,
	544, 1752,
	545, 1752,
	546, 1752,
	548, 1752,
	551, 1752,
	552, 1752,
	553, 1752,
	554, 1752,
	555, 1752,
	556, 1752,
	558, 1752,
	559, 1752,
	560, 1752,
	561, 1752,
	562, 1752,
	563, 1752,
	564, 1752,
	569, 1752,
	570, 1752,
	571, 1752,
	572, 1752,
	573, 1752,
	574, 1752,
	-2, 0,
	-1, 903,
	263, 419,
	-2, 0,
	-1, 980,
	398, 898,
	464, 898,
	505, 898,
	526, 898,
	-2, 0,
	-1, 981,
	398, 897,
	464, 897,
	505, 897,
	526, 897,
	-2, 829,
	-1, 985,
	1, 950,
	604, 950,
	606, 950,
	608, 950,
	-2, 0,
	-1, 987,
	1, 872,
	604, 872,
	606, 872,
	608, 872,
	-2, 0,
	-1, 988,
	1, 876,
	604, 876,
	606, 876,
	608, 876,
	-2, 0,
	-1, 989,
	1, 1017,
	185, 1017,
	604, 1017,
	606, 1017,
	608, 1017,
	-2, 0,
	-1, 997,
	1, 903,
	604, 903,
	606, 903,
	608, 903,
	-2, 0,
	-1, 1004,
	1, 950,
	604, 950,
	606, 950,
	608, 950,
	-2, 0,
	-1, 1005,
	1, 952,
	604, 952,
	606, 952,
	608, 952,
	-2, 0,
	-1, 1006,
	1, 955,
	604, 955,
	606, 955,
	608, 955,
	-2, 0,
	-1, 1012,
	1, 981,
	604, 981,
	606, 981,
	608, 981,
	-2, 0,
	-1, 1013,
	1, 983,
	604, 983,
	606, 983,
	608, 983,
	-2, 0,
	-1, 1018,
	1, 1011,
	604, 1011,
	606, 1011,
	608, 1011,
	-2, 0,
	-1, 1070,
	172, 1622,
	185, 1622,
	276, 1622,
	346, 1622,
	-2, 1558,
	-1, 1085,
	172, 1621,
	185, 1621,
	276, 1621,
	346, 1621,
	-2, 1555,
	-1, 1112,
	607, 2345,
	-2, 726,
	-1, 1141,
	5, 2337,
	605, 2335,
	-2, 2326,
	-1, 1149,
	5, 2358,
	605, 2355,
	-2, 2346,
	-1, 1150,
	5, 2359,
	605, 2356,
	-2, 2347,
	-1, 1158,
	607, 2343,
	-2, 2325,
	-1, 1159,
	605, 2789,
	-2, 2344,
	-1, 1182,
	605, 2788,
	-2, 2360,
	-1, 1183,
	5, 1827,
	-2, 2759,
	-1, 1184,
	5, 1828,
	-2, 2760,
	-1, 1185,
	5, 1829,
	-2, 2774,
	-1, 1186,
	5, 1830,
	-2, 2738,
	-1, 1187,
	5, 1831,
	-2, 2772,
	-1, 1188,
	5, 1839,
	-2, 2751,
	-1, 1189,
	5, 1826,
	-2, 2747,
	-1, 1190,
	5, 1826,
	-2, 2746,
	-1, 1191,
	5, 1826,
	-2, 2765,
	-1, 1192,
	5, 1837,
	-2, 2740,
	-1, 1193,
	5, 1842,
	-2, 2739,
	-1, 1194,
	5, 1844,
	-2, 2784,
	-1, 1197,
	5, 1866,
	-2, 2777,
	-1, 1198,
	5, 1858,
	-2, 2778,
	-1, 1199,
	5, 1866,
	-2, 2779,
	-1, 1200,
	5, 1862,
	-2, 2780,
	-1, 1201,
	5, 1812,
	-2, 2752,
	-1, 1202,
	5, 1813,
	-2, 2753,
	-1, 1203,
	5, 1814,
	-2, 2741,
	-1, 1231,
	5, 1849,
	-2, 2785,
	-1, 1232,
	5, 1850,
	-2, 2775,
	-1, 1233,
	5, 1851,
	559, 1851,
	-2, 2742,
	-1, 1234,
	5, 1852,
	559, 1852,
	-2, 2743,
	-1, 1271,
	605, 2355,
	-2, 2346,
	-1, 1272,
	605, 2356,
	-2, 2347,
	-1, 1370,
	190, 2704,
	521, 2704,
	587, 2704,
	607, 2704,
	-2, 0,
	-1, 1375,
	1, 702,
	608, 702,
	-2, 1469,
	-1, 1505,
	365, 2320,
	423, 2320,
	466, 2320,
	597, 2320,
	-2, 2310,
	-1, 1511,
	190, 129,
	270, 129,
	332, 129,
	564, 129,
	-2, 2700,
	-1, 1512,
	190, 130,
	270, 130,
	332, 130,
	564, 130,
	-2, 2455,
	-1, 1513,
	190, 131,
	270, 131,
	332, 131,
	564, 131,
	-2, 2625,
	-1, 1519,
	609, 2320,
	-2, 2322,
	-1, 1527,
	1, 1317,
	428, 1276,
	466, 1276,
	581, 1276,
	604, 1317,
	606, 1317,
	608, 1317,
	-2, 1607,
	-1, 1533,
	206, 1414,
	225, 1414,
	436, 1414,
	-2, 0,
	-1, 1589,
	406, 1097,
	558, 1097,
	-2, 414,
	-1, 1606,
	43, 2318,
	-2, 1063,
	-1, 1613,
	1, 1317,
	604, 1317,
	606, 1317,
	608, 1317,
	-2, 1607,
	-1, 1621,
	4, 1342,
	21, 1342,
	22, 1342,
	23, 1342,
	24, 1342,
	25, 1342,
	26, 1342,
	27, 1342,
	29, 1342,
	30, 1342,
	36, 1342,
	41, 1342,
	42, 1342,
	44, 1342,
	45, 1342,
	46, 1342,
	47, 1342,
	48, 1342,
	49, 1342,
	50, 1342,
	51, 1342,
	53, 1342,
	54, 1342,
	55, 1342,
	56, 1342,
	58, 1342,
	59, 1342,
	60, 1342,
	61, 1342,
	62, 1342,
	63, 1342,
	64, 1342,
	68, 1342,
	69, 1342,
	70, 1342,
	71, 1342,
	73, 1342,
	74, 1342,
	75, 1342,
	79, 1342,
	80, 1342,
	81, 1342,
	82, 1342,
	83, 1342,
	84, 1342,
	85, 1342,
	88, 1342,
	89, 1342,
	90, 1342,
	91, 1342,
	92, 1342,
	94, 1342,
	96, 1342,
	97, 1342,
	98, 1342,
	99, 1342,
	100, 1342,
	101, 1342,
	103, 1342,
	104, 1342,
	105, 1342,
	107, 1342,
	108, 1342,
	109, 1342,
	117, 1342,
	118, 1342,
	119, 1342,
	120, 1342,
	121, 1342,
	123, 1342,
	124, 1342,
	125, 1342,
	126, 1342,
	128, 1342,
	129, 1342,
	130, 1342,
	132, 1342,
	133, 1342,
	134, 1342,
	136, 1342,
	137, 1342,
	138, 1342,
	141, 1342,
	142, 1342,
	143, 1342,
	145, 1342,
	146, 1342,
	147, 1342,
	149, 1342,
	150, 1342,
	151, 1342,
	153, 1342,
	154, 1342,
	155, 1342,
	156, 1342,
	157, 1342,
	158, 1342,
	159, 1342,
	160, 1342,
	161, 1342,
	162, 1342,
	163, 1342,
	164, 1342,
	165, 1342,
	166, 1342,
	167, 1342,
	168, 1342,
	169, 1342,
	177, 1342,
	178, 1342,
	179, 1342,
	180, 1342,
	184, 1342,
	186, 1342,
	187, 1342,
	188, 1342,
	192, 1342,
	193, 1342,
	194, 1342,
	195, 1342,
	196, 1342,
	197, 1342,
	198, 1342,
	199, 1342,
	200, 1342,
	201, 1342,
	202, 1342,
	203, 1342,
	204, 1342,
	205, 1342,
	207, 1342,
	208, 1342,
	210, 1342,
	211, 1342,
	213, 1342,
	214, 1342,
	215, 1342,
	216, 1342,
	217, 1342,
	218, 1342,
	219, 1342,
	220, 1342,
	221, 1342,
	223, 1342,
	224, 1342,
	226, 1342,
	227, 1342,
	228, 1342,
	229, 1342,
	230, 1342,
	235, 1342,
	236, 1342,
	237, 1342,
	240, 1342,
	241, 1342,
	242, 1342,
	244, 1342,
	246, 1342,
	247, 1342,
	249, 1342,
	251, 1342,
	252, 1342,
	253, 1342,
	255, 1342,
	259, 1342,
	260, 1342,
	261, 1342,
	262, 1342,
	263, 1342,
	264, 1342,
	266, 1342,
	267, 1342,
	268, 1342,
	270, 1342,
	271, 1342,
	273, 1342,
	274, 1342,
	277, 1342,
	278, 1342,
	279, 1342,
	280, 1342,
	281, 1342,
	282, 1342,
	283, 1342,
	286, 1342,
	287, 1342,
	288, 1342,
	289, 1342,
	291, 1342,
	292, 1342,
	293, 1342,
	294, 1342,
	295, 1342,
	296, 1342,
	297, 1342,
	298, 1342,
	299, 1342,
	300, 1342,
	301, 1342,
	302, 1342,
	303, 1342,
	304, 1342,
	305, 1342,
	306, 1342,
	307, 1342,
	308, 1342,
	309, 1342,
	310, 1342,
	311, 1342,
	312, 1342,
	314, 1342,
	316, 1342,
	317, 1342,
	318, 1342,
	319, 1342,
	320, 1342,
	321, 1342,
	322, 1342,
	323, 1342,
	324, 1342,
	325, 1342,
	326, 1342,
	327, 1342,
	328, 1342,
	329, 1342,
	330, 1342,
	332, 1342,
	333, 1342,
	337, 1342,
	338, 1342,
	339, 1342,
	341, 1342,
	342, 1342,
	343, 1342,
	344, 1342,
	345, 1342,
	348, 1342,
	350, 1342,
	352, 1342,
	353, 1342,
	354, 1342,
	357, 1342,
	358, 1342,
	359, 1342,
	361, 1342,
	363, 1342,
	364, 1342,
	365, 1342,
	366, 1342,
	367, 1342,
	368, 1342,
	369, 1342,
	370, 1342,
	371, 1342,
	372, 1342,
	373, 1342,
	374, 1342,
	375, 1342,
	377, 1342,
	378, 1342,
	379, 1342,
	380, 1342,
	381, 1342,
	382, 1342,
	383, 1342,
	384, 1342,
	385, 1342,
	386, 1342,
	387, 1342,
	388, 1342,
	389, 1342,
	390, 1342,
	391, 1342,
	393, 1342,
	394, 1342,
	396, 1342,
	397, 1342,
	398, 1342,
	399, 1342,
	400, 1342,
	401, 1342,
	402, 1342,
	403, 1342,
	404, 1342,
	405, 1342,
	406, 1342,
	407, 1342,
	408, 1342,
	410, 1342,
	412, 1342,
	413, 1342,
	414, 1342,
	420, 1342,
	421, 1342,
	423, 1342,
	424, 1342,
	425, 1342,
	426, 1342,
	427, 1342,
	428, 1342,
	429, 1342,
	430, 1342,
	431, 1342,
	432, 1342,
	434, 1342,
	435, 1342,
	436, 1342,
	438, 1342,
	439, 1342,
	440, 1342,
	441, 1342,
	442, 1342,
	443, 1342,
	444, 1342,
	446, 1342,
	447, 1342,
	448, 1342,
	449, 1342,
	450, 1342,
	451, 1342,
	452, 1342,
	453, 1342,
	454, 1342,
	455, 1342,
	456, 1342,
	457, 1342,
	459, 1342,
	460, 1342,
	461, 1342,
	462, 1342,
	463, 1342,
	464, 1342,
	466, 1342,
	467, 1342,
	468, 1342,
	469, 1342,
	470, 1342,
	471, 1342,
	473, 1342,
	474, 1342,
	475, 1342,
	476, 1342,
	477, 1342,
	478, 1342,
	479, 1342,
	480, 1342,
	482, 1342,
	484, 1342,
	485, 1342,
	486, 1342,
	487, 1342,
	488, 1342,
	489, 1342,
	490, 1342,
	491, 1342,
	492, 1342,
	493, 1342,
	494, 1342,
	495, 1342,
	496, 1342,
	497, 1342,
	498, 1342,
	499, 1342,
	501, 1342,
	502, 1342,
	504, 1342,
	505, 1342,
	507, 1342,
	508, 1342,
	509, 1342,
	510, 1342,
	511, 1342,
	512, 1342,
	513, 1342,
	514, 1342,
	516, 1342,
	517, 1342,
	518, 1342,
	519, 1342,
	520, 1342,
	522, 1342,
	524, 1342,
	525, 1342,
	526, 1342,
	527, 1342,
	528, 1342,
	529, 1342,
	531, 1342,
	532, 1342,
	533, 1342,
	534, 1342,
	536, 1342,
	537, 1342,
	540, 1342,
	541, 1342,
	542, 1342,
	543, 1342,
	544, 1342,
	545, 1342,
	546, 1342,
	548, 1342,
	551, 1342,
	552, 1342,
	553, 1342,
	554, 1342,
	555, 1342,
	556, 1342,
	558, 1342,
	559, 1342,
	560, 1342,
	561, 1342,
	562, 1342,
	563, 1342,
	564, 1342,
	569, 1342,
	570, 1342,
	571, 1342,
	572, 1342,
	573, 1342,
	574, 1342,
	-2, 0,
	-1, 1644,
	1, 559,
	604, 559,
	606, 559,
	608, 559,
	-2, 1578,
	-1, 1647,
	4, 2783,
	11, 2783,
	12, 2783,
	14, 2783,
	15, 2783,
	16, 2783,
	17, 2783,
	18, 2783,
	19, 2783,
	21, 2783,
	22, 2783,
	23, 2783,
	24, 2783,
	25, 2783,
	26, 2783,
	27, 2783,
	29, 2783,
	30, 2783,
	33, 2783,
	34, 2783,
	36, 2783,
	38, 2783,
	41, 2783,
	42, 2783,
	44, 2783,
	45, 2783,
	46, 2783,
	47, 2783,
	48, 2783,
	49, 2783,
	50, 2783,
	51, 2783,
	53, 2783,
	54, 2783,
	55, 2783,
	56, 2783,
	58, 2783,
	59, 2783,
	60, 2783,
	61, 2783,
	62, 2783,
	63, 2783,
	64, 2783,
	67, 2783,
	68, 2783,
	69, 2783,
	70, 2783,
	71, 2783,
	73, 2783,
	74, 2783,
	75, 2783,
	76, 2783,
	79, 2783,
	80, 2783,
	81, 2783,
	82, 2783,
	83, 2783,
	84, 2783,
	85, 2783,
	86, 2783,
	88, 2783,
	89, 2783,
	90, 2783,
	91, 2783,
	92, 2783,
	94, 2783,
	95, 2783,
	96, 2783,
	97, 2783,
	98, 2783,
	99, 2783,
	100, 2783,
	101, 2783,
	103, 2783,
	104, 2783,
	105, 2783,
	106, 2783,
	107, 2783,
	108, 2783,
	109, 2783,
	117, 2783,
	118, 2783,
	119, 2783,
	120, 2783,
	121, 2783,
	123, 2783,
	124, 2783,
	125, 2783,
	126, 2783,
	128, 2783,
	129, 2783,
	130, 2783,
	132, 2783,
	133, 2783,
	134, 2783,
	136, 2783,
	137, 2783,
	138, 2783,
	141, 2783,
	142, 2783,
	143, 2783,
	145, 2783,
	146, 2783,
	147, 2783,
	149, 2783,
	150, 2783,
	151, 2783,
	153, 2783,
	154, 2783,
	155, 2783,
	156, 2783,
	157, 2783,
	158, 2783,
	159, 2783,
	160, 2783,
	161, 2783,
	162, 2783,
	163, 2783,
	164, 2783,
	165, 2783,
	166, 2783,
	167, 2783,
	168, 2783,
	169, 2783,
	173, 2783,
	174, 2783,
	175, 2783,
	176, 2783,
	177, 2783,
	178, 2783,
	179, 2783,
	180, 2783,
	183, 2783,
	184, 2783,
	186, 2783,
	187, 2783,
	188, 2783,
	191, 2783,
	192, 2783,
	193, 2783,
	194, 2783,
	195, 2783,
	196, 2783,
	197, 2783,
	198, 2783,
	199, 2783,
	200, 2783,
	201, 2783,
	202, 2783,
	203, 2783,
	204, 2783,
	205, 2783,
	207, 2783,
	208, 2783,
	210, 2783,
	211, 2783,
	213, 2783,
	214, 2783,
	215, 2783,
	216, 2783,
	217, 2783,
	218, 2783,
	219, 2783,
	220, 2783,
	221, 2783,
	222, 2783,
	223, 2783,
	224, 2783,
	225, 2783,
	226, 2783,
	227, 2783,
	228, 2783,
	229, 2783,
	230, 2783,
	232, 2783,
	233, 2783,
	235, 2783,
	236, 2783,
	237, 2783,
	239, 2783,
	240, 2783,
	241, 2783,
	242, 2783,
	244, 2783,
	246, 2783,
	247, 2783,
	248, 2783,
	249, 2783,
	250, 2783,
	251, 2783,
	252, 2783,
	253, 2783,
	254, 2783,
	255, 2783,
	257, 2783,
	258, 2783,
	259, 2783,
	260, 2783,
	261, 2783,
	262, 2783,
	263, 2783,
	264, 2783,
	266, 2783,
	267, 2783,
	268, 2783,
	270, 2783,
	271, 2783,
	272, 2783,
	273, 2783,
	274, 2783,
	275, 2783,
	277, 2783,
	278, 2783,
	279, 2783,
	280, 2783,
	281, 2783,
	282, 2783,
	283, 2783,
	286, 2783,
	287, 2783,
	288, 2783,
	289, 2783,
	290, 2783,
	291, 2783,
	292, 2783,
	293, 2783,
	294, 2783,
	295, 2783,
	296, 2783,
	297, 2783,
	298, 2783,
	299, 2783,
	300, 2783,
	301, 2783,
	302, 2783,
	303, 2783,
	304, 2783,
	305, 2783,
	306, 2783,
	307, 2783,
	308, 2783,
	309, 2783,
	310, 2783,
	311, 2783,
	312, 2783,
	314, 2783,
	315, 2783,
	316, 2783,
	317, 2783,
	318, 2783,
	319, 2783,
	320, 2783,
	321, 2783,
	322, 2783,
	323, 2783,
	324, 2783,
	325, 2783,
	326, 2783,
	327, 2783,
	328, 2783,
	329, 2783,
	330, 2783,
	332, 2783,
	333, 2783,
	336, 2783,
	337, 2783,
	338, 2783,
	339, 2783,
	341, 2783,
	342, 2783,
	343, 2783,
	344, 2783,
	345, 2783,
	348, 2783,
	352, 2783,
	353, 2783,
	354, 2783,
	355, 2783,
	357, 2783,
	358, 2783,
	359, 2783,
	361, 2783,
	363, 2783,
	364, 2783,
	365, 2783,
	366, 2783,
	367, 2783,
	368, 2783,
	369, 2783,
	370, 2783,
	371, 2783,
	372, 2783,
	373, 2783,
	374, 2783,
	375, 2783,
	377, 2783,
	378, 2783,
	379, 2783,
	380, 2783,
	381, 2783,
	382, 2783,
	383, 2783,
	384, 2783,
	385, 2783,
	386, 2783,
	387, 2783,
	388, 2783,
	389, 2783,
	390, 2783,
	391, 2783,
	393, 2783,
	394, 2783,
	396, 2783,
	397, 2783,
	398, 2783,
	399, 2783,
	400, 2783,
	401, 2783,
	402, 2783,
	403, 2783,
	404, 2783,
	405, 2783,
	406, 2783,
	407, 2783,
	408, 2783,
	410, 2783,
	412, 2783,
	413, 2783,
	414, 2783,
	420, 2783,
	421, 2783,
	422, 2783,
	423, 2783,
	424, 2783,
	425, 2783,
	426, 2783,
	427, 2783,
	428, 2783,
	429, 2783,
	430, 2783,
	431, 2783,
	432, 2783,
	434, 2783,
	435, 2783,
	436, 2783,
	437, 2783,
	438, 2783,
	439, 2783,
	440, 2783,
	441, 2783,
	442, 2783,
	443, 2783,
	444, 2783,
	445, 2783,
	446, 2783,
	447, 2783,
	448, 2783,
	449, 2783,
	450, 2783,
	451, 2783,
	452, 2783,
	453, 2783,
	454, 2783,
	455, 2783,
	456, 2783,
	457, 2783,
	459, 2783,
	460, 2783,
	461, 2783,
	462, 2783,
	463, 2783,
	464, 2783,
	466, 2783,
	467, 2783,
	468, 2783,
	469, 2783,
	470, 2783,
	471, 2783,
	472, 2783,
	473, 2783,
	474, 2783,
	475, 2783,
	476, 2783,
	477, 2783,
	478, 2783,
	479, 2783,
	480, 2783,
	482, 2783,
	484, 2783,
	485, 2783,
	486, 2783,
	487, 2783,
	488, 2783,
	489, 2783,
	490, 2783,
	491, 2783,
	492, 2783,
	493, 2783,
	494, 2783,
	495, 2783,
	496, 2783,
	497, 2783,
	498, 2783,
	499, 2783,
	501, 2783,
	502, 2783,
	503, 2783,
	504, 2783,
	505, 2783,
	507, 2783,
	508, 2783,
	509, 2783,
	510, 2783,
	511, 2783,
	512, 2783,
	513, 2783,
	514, 2783,
	516, 2783,
	517, 2783,
	518, 2783,
	519, 2783,
	520, 2783,
	522, 2783,
	524, 2783,
	525, 2783,
	526, 2783,
	527, 2783,
	528, 2783,
	529, 2783,
	531, 2783,
	532, 2783,
	533, 2783,
	534, 2783,
	536, 2783,
	537, 2783,
	540, 2783,
	541, 2783,
	542, 2783,
	543, 2783,
	544, 2783,
	545, 2783,
	546, 2783,
	548, 2783,
	551, 2783,
	552, 2783,
	553, 2783,
	554, 2783,
	555, 2783,
	556, 2783,
	558, 2783,
	559, 2783,
	560, 2783,
	561, 2783,
	562, 2783,
	563, 2783,
	564, 2783,
	569, 2783,
	570, 2783,
	571, 2783,
	572, 2783,
	573, 2783,
	574, 2783,
	575, 2783,
	577, 2783,
	585, 2783,
	586, 2783,
	587, 2783,
	588, 2783,
	589, 2783,
	590, 2783,
	592, 2783,
	593, 2783,
	594, 2783,
	595, 2783,
	596, 2783,
	597, 2783,
	598, 2783,
	599, 2783,
	600, 2783,
	603, 2783,
	606, 2783,
	607, 2783,
	609, 2783,
	610, 2783,
	-2, 0,
	-1, 1652,
	190, 2663,
	521, 2663,
	587, 2663,
	607, 2663,
	-2, 0,
	-1, 1705,
	398, 898,
	464, 898,
	505, 898,
	526, 898,
	-2, 0,
	-1, 1716,
	1, 1414,
	604, 1414,
	606, 1414,
	608, 1414,
	-2, 0,
	-1, 1733,
	1, 893,
	604, 893,
	606, 893,
	608, 893,
	-2, 0,
	-1, 1734,
	1, 937,
	604, 937,
	606, 937,
	608, 937,
	-2, 0,
	-1, 1735,
	1, 945,
	604, 945,
	606, 945,
	608, 945,
	-2, 0,
	-1, 1738,
	1, 902,
	604, 902,
	606, 902,
	608, 902,
	-2, 0,
	-1, 1740,
	1, 908,
	604, 908,
	606, 908,
	608, 908,
	-2, 0,
	-1, 1743,
	1, 904,
	604, 904,
	606, 904,
	608, 904,
	-2, 0,
	-1, 1748,
	1, 918,
	604, 918,
	606, 918,
	608, 918,
	-2, 0,
	-1, 1779,
	1, 2646,
	604, 2646,
	606, 2646,
	607, 2646,
	608, 2646,
	-2, 0,
	-1, 1783,
	1, 992,
	604, 992,
	606, 992,
	608, 992,
	-2, 0,
	-1, 1800,
	1, 1464,
	608, 1464,
	-2, 1469,
	-1, 1803,
	172, 1621,
	185, 1621,
	276, 1621,
	346, 1621,
	-2, 1559,
	-1, 1903,
	152, 1580,
	172, 1580,
	185, 1580,
	243, 1580,
	276, 1580,
	346, 1580,
	356, 1580,
	538, 1580,
	-2, 2031,
	-1, 1964,
	606, 2206,
	-2, 0,
	-1, 1999,
	152, 1580,
	172, 1580,
	185, 1580,
	243, 1580,
	276, 1580,
	346, 1580,
	356, 1580,
	538, 1580,
	-2, 1713,
	-1, 2039,
	521, 2660,
	607, 2660,
	610, 2660,
	-2, 0,
	-1, 2056,
	605, 1854,
	-2, 1842,
	-1, 2088,
	190, 2660,
	607, 2660,
	610, 2660,
	-2, 0,
	-1, 2131,
	1, 704,
	608, 704,
	-2, 1469,
	-1, 2276,
	225, 262,
	-2, 2354,
	-1, 2277,
	225, 263,
	-2, 315,
	-1, 2386,
	1, 895,
	604, 895,
	606, 895,
	608, 895,
	-2, 0,
	-1, 2387,
	1, 939,
	604, 939,
	606, 939,
	608, 939,
	-2, 0,
	-1, 2388,
	1, 947,
	604, 947,
	606, 947,
	608, 947,
	-2, 0,
	-1, 2389,
	1, 994,
	604, 994,
	606, 994,
	608, 994,
	-2, 0,
	-1, 2430,
	1, 920,
	604, 920,
	606, 920,
	608, 920,
	-2, 0,
	-1, 2450,
	1, 977,
	604, 977,
	606, 977,
	608, 977,
	-2, 0,
	-1, 2497,
	443, 1648,
	444, 1648,
	-2, 1887,
	-1, 2528,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1907,
	-1, 2529,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1908,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1909,
	-1, 2531,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1910,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1911,
	-1, 2533,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1912,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1913,
	-1, 2535,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1914,
	-1, 2547,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1926,
	-1, 2548,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1927,
	-1, 2549,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1928,
	-1, 2553,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1935,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1939,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1947,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1948,
	-1, 2563,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1949,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1950,
	-1, 2738,
	5, 2358,
	190, 2217,
	605, 2355,
	-2, 2346,
	-1, 2739,
	190, 2218,
	-2, 2734,
	-1, 2740,
	190, 2219,
	-2, 2548,
	-1, 2741,
	190, 2220,
	-2, 2428,
	-1, 2742,
	190, 2221,
	-2, 2486,
	-1, 2743,
	190, 2222,
	-2, 2533,
	-1, 2744,
	190, 2223,
	-2, 2658,
	-1, 2745,
	190, 2224,
	-2, 2014,
	-1, 2816,
	1, 1714,
	2, 1714,
	106, 1714,
	152, 1714,
	172, 1714,
	185, 1714,
	191, 1714,
	209, 1714,
	212, 1714,
	239, 1714,
	243, 1714,
	254, 1714,
	272, 1714,
	276, 1714,
	315, 1714,
	346, 1714,
	350, 1714,
	356, 1714,
	433, 1714,
	437, 1714,
	538, 1714,
	549, 1714,
	566, 1714,
	567, 1714,
	568, 1714,
	578, 1714,
	604, 1714,
	606, 1714,
	608, 1714,
	610, 1714,
	-2, 1713,
	-1, 2829,
	605, 2327,
	-2, 2341,
	-1, 2831,
	1, 332,
	566, 332,
	-2, 1607,
	-1, 2861,
	605, 1853,
	-2, 1843,
	-1, 3052,
	1, 1317,
	428, 1276,
	466, 1276,
	581, 1276,
	604, 1317,
	606, 1317,
	608, 1317,
	-2, 1607,
	-1, 3227,
	351, 1651,
	-2, 2773,
	-1, 3228,
	351, 1652,
	-2, 2643,
	-1, 3232,
	443, 2283,
	444, 2283,
	-2, 2012,
	-1, 3233,
	443, 2287,
	444, 2287,
	-2, 2013,
	-1, 3234,
	443, 2284,
	444, 2284,
	-2, 2012,
	-1, 3235,
	443, 2288,
	444, 2288,
	-2, 2013,
	-1, 3248,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1937,
	-1, 3249,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1941,
	-1, 3255,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1943,
	-1, 3482,
	1, 699,
	604, 699,
	606, 699,
	608, 699,
	-2, 1469,
	-1, 3659,
	43, 2318,
	-2, 1064,
	-1, 3664,
	1, 1317,
	604, 1317,
	606, 1317,
	608, 1317,
	-2, 1607,
	-1, 3769,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1945,
	-1, 3776,
	248, 0,
	250, 0,
	336, 0,
	-2, 1964,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1993,
	-1, 3845,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1994,
	-1, 3846,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1995,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1999,
	-1, 3851,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 2000,
	-1, 3852,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 2001,
	-1, 3900,
	605, 2328,
	-2, 2342,
	-1, 4094,
	607, 2890,
	-2, 1533,
	-1, 4149,
	248, 0,
	250, 0,
	336, 0,
	-2, 1965,
	-1, 4152,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1968,
	-1, 4153,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1970,
	-1, 4262,
	607, 2343,
	-2, 1352,
	-1, 4422,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1969,
	-1, 4423,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1971,
	-1, 4434,
	248, 0,
	-2, 2004,
	-1, 4622,
	248, 0,
	-2, 2005,
	-1, 4839,
	50, 0,
	222, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 2737,
}

const sqlPrivate = 57344

const sqlLast = 136157

var sqlAct = [...]int{
	274, 3648, 4776, 4668, 5026, 4660, 4955, 3386, 4900, 4490,
	3124, 4884, 4775, 4838, 4825, 4850, 4732, 2926, 4969, 4807,
	3137, 4710, 4852, 4789, 4132, 2273, 4851, 4766, 1348, 1542,
	4592, 4472, 4553, 3647, 4786, 4566, 2968, 4909, 4537, 2180,
	4626, 3910, 1141, 3809, 2350, 4383, 4372, 4837, 4378, 4336,
	1275, 4310, 4495, 3094, 4443, 3761, 2993, 3500, 3681, 2507,
	4411, 4575, 2362, 1264, 1569, 4086, 4078, 4258, 4006, 3503,
	4365, 714, 4363, 4356, 4259, 826, 1095, 4388, 2100, 1341,
	4695, 2927, 4239, 3561, 2576, 3241, 2360, 2113, 3675, 1812,
	4033, 3632, 4052, 2515, 3506, 2771, 1343, 4035, 1670, 3621,
	786, 4439, 2043, 826, 3149, 2188, 1086, 3714, 3637, 3712,
	3636, 3113, 1409, 3083, 3108, 3639, 3110, 3614, 3613, 2358,
	2843, 2508, 3432, 1502, 3409, 2323, 725, 3401, 3903, 4131,
	3008, 3144, 3369, 905, 3139, 3125, 4188, 2260, 2262, 3439,
	3392, 1974, 3059, 3525, 3390, 823, 2809, 4885, 3870, 2216,
	4627, 1911, 3368, 2005, 1881, 2512, 1950, 268, 267, 2654,
	2656, 2200, 2589, 3225, 901, 4, 3143, 821, 1608, 1094,
	182, 896, 2261, 1346, 782, 2811, 2808, 3087, 2023, 2244,
	3025, 2256, 1145, 3095, 2237, 1800, 1152, 2168, 2111, 2172,
	1390, 2789, 2645, 2573, 266, 1150, 2768, 1994, 2158, 1975,
	2496, 2479, 3118, 2477, 759, 2844, 1645, 1334, 1351, 2310,
	1611, 2967, 2950, 827, 2951, 828, 1255, 1668, 4733, 3640,
	2913, 974, 1377, 2648, 1945, 701, 1258, 2798, 1984, 723,
	2779, 2734, 832, 835, 2872, 2626, 1571, 1991, 2700, 1813,
	1320, 1272, 1237, 1895, 1814, 2478, 2480, 191, 922, 1748,
	2044, 1733, 192, 2270, 1254, 1537, 111, 2309, 1195, 767,
	832, 835, 1331, 2336, 182, 1636, 778, 1143, 1643, 1510,
	4901, 2501, 1126, 4956, 718, 44, 43, 41, 816, 742,
	32, 30, 28, 1270, 1235, 877, 1819, 715, 1260, 727,
	1548, 3278, 1799, 878, 995, 3884, 3272, 3885, 3388, 2102,
	1148, 2102, 2102, 2102, 2102, 3911, 5037, 5029, 5018, 2102,
	2788, 3700, 2788, 5017, 4989, 4987, 4929, 2788, 4494, 4494,
	2282, 1541, 4886, 1827, 1828, 4876, 4887, 4874, 4871, 2788,
	4868, 2788, 4872, 4847, 4869, 4835, 4834, 4833, 4463, 2282,
	2282, 3154, 3690, 4460, 4823, 4821, 1858, 2123, 4494, 4494,
	4816, 4811, 4810, 1830, 4578, 4494, 4494, 4784, 1090, 4457,
	4752, 4494, 1827, 1828, 2852, 1860, 1861, 1862, 1871, 1872,
	1873, 4745, 4744, 4737, 4709, 2788, 2788, 2282, 2282, 1883,
	3691, 1252, 4706, 4689, 1864, 1858, 4494, 4326, 1829, 4624,
	4606, 4568, 1830, 2852, 4115, 4569, 4513, 4215, 4512, 4501,
	2282, 1877, 2282, 2282, 3467, 3449, 4500, 4493, 1238, 1238,
	4494, 4494, 1080, 3464, 2781, 4450, 1562, 1679, 1883, 2282,
	1386, 1298, 4424, 1090, 1827, 1828, 2852, 1829, 4399, 4396,
	1071, 2874, 3154, 3700, 4305, 1070, 4285, 1849, 2788, 2123,
	2788, 1386, 3700, 2651, 3339, 3340, 1846, 1858, 2120, 4151,
	1091, 4102, 2359, 2852, 1830, 3707, 4096, 4049, 3895, 3893,
	3707, 4050, 3896, 3894, 3877, 1713, 1290, 1241, 2788, 1242,
	3339, 3340, 3793, 3874, 3789, 3706, 2282, 94, 2788, 3707,
	1883, 3385, 3380, 3379, 1085, 2788, 2788, 2788, 3330, 1829,
	2848, 2282, 3331, 3328, 2120, 1835, 3320, 3329, 3318, 3289,
	3321, 3287, 2788, 2788, 3153, 3135, 3134, 3288, 3154, 2346,
	2346, 2897, 2851, 2841, 1739, 2788, 2852, 2788, 1239, 2833,
	2123, 2123, 3240, 2282, 1852, 1853, 1854, 1855, 2788, 2787,
	4753, 2345, 2123, 2788, 1835, 2346, 2652, 4628, 4619, 4607,
	4578, 1267, 3154, 3874, 1857, 1859, 2780, 4376, 4326, 2120,
	4286, 4115, 4051, 3000, 2193, 1291, 2912, 2137, 2101, 2117,
	3089, 1291, 2281, 3018, 2910, 1970, 1536, 3985, 3764, 3737,
	1992, 2249, 3692, 1868, 1715, 2825, 1878, 2824, 1556, 2823,
	3339, 3340, 2822, 1857, 1859, 2821, 1661, 1243, 1240, 1079,
	238, 1078, 3693, 1541, 1077, 238, 1835, 1076, 1075, 1874,
	1550, 1875, 1850, 1074, 1073, 1069, 1068, 2422, 1844, 1845,
	4861, 1067, 2788, 3198, 4860, 1066, 3345, 2653, 1065, 2650,
	1064, 1063, 1062, 1061, 1060, 1059, 1866, 1058, 1057, 1056,
	1827, 1828, 1561, 1055, 1054, 1053, 1052, 1034, 240, 972,
	971, 1850, 3345, 240, 970, 1857, 1859, 969, 968, 1827,
	1828, 967, 1860, 1861, 1862, 1871, 1872, 1873, 966, 3121,
	1830, 965, 964, 963, 962, 2103, 961, 2103, 2103, 2103,
	2103, 1864, 1858, 960, 959, 2103, 958, 3277, 1880, 1830,
	3339, 3340, 957, 3357, 3358, 3359, 239, 1876, 1877, 956,
	955, 239, 954, 1147, 953, 1829, 952, 1550, 951, 950,
	232, 949, 948, 1850, 947, 1883, 1865, 946, 945, 233,
	944, 943, 942, 941, 1829, 940, 939, 1880, 1549, 938,
	937, 926, 925, 3355, 1849, 924, 920, 919, 912, 911,
	910, 895, 894, 1846, 851, 850, 849, 193, 848, 839,
	2683, 838, 193, 837, 836, 2681, 802, 793, 792, 3355,
	791, 4206, 3345, 2120, 773, 3354, 4163, 1851, 2120, 262,
	1353, 1150, 261, 2120, 260, 259, 258, 257, 256, 1550,
	255, 238, 254, 1856, 253, 252, 251, 2655, 250, 1880,
	249, 248, 247, 246, 153, 245, 244, 243, 1150, 1150,
	1150, 242, 241, 3920, 1555, 3889, 1851, 3103, 3708, 1880,
	3690, 3435, 1835, 3300, 3283, 3274, 1412, 4390, 3178, 3383,
	1150, 1852, 1853, 1854, 1855, 1882, 3069, 1353, 1683, 240,
	2856, 1835, 1953, 1869, 1291, 1880, 1665, 2830, 2815, 1952,
	2667, 4857, 1995, 2120, 2780, 2665, 2469, 2166, 4631, 2122,
	2018, 1291, 1150, 1922, 1150, 2123, 1150, 2884, 2101, 2120,
	2117, 3384, 3345, 1574, 1882, 2472, 1794, 1956, 1851, 3355,
	1868, 1826, 1953, 1878, 1394, 1395, 1396, 239, 1381, 1952,
	1857, 1859, 238, 238, 1544, 1398, 1274, 4836, 3356, 1353,
	4820, 232, 4717, 4616, 4610, 4485, 1874, 1913, 1875, 4608,
	233, 1520, 4438, 2649, 1359, 1844, 1845, 1951, 1515, 1574,
	4397, 1550, 4375, 4221, 3356, 4186, 1574, 1831, 1832, 1833,
	1834, 1836, 1837, 1866, 4185, 1150, 1882, 1150, 193, 4062,
	240, 240, 1574, 3339, 3340, 2865, 1867, 4179, 1850, 4178,
	1150, 4177, 1150, 4170, 1266, 1880, 1841, 1842, 1848, 1870,
	1847, 1843, 4169, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 1342, 4167, 4162, 1373, 4159, 4769, 4158, 3355,
	1617, 1620, 4048, 1338, 3339, 3340, 3924, 1375, 239, 239,
	238, 3923, 3922, 3899, 1876, 3865, 1915, 1920, 3864, 3863,
	1574, 3785, 232, 232, 1540, 1880, 3780, 832, 835, 1525,
	238, 233, 233, 1865, 1325, 1328, 1093, 3430, 3354, 3376,
	1150, 3367, 1505, 1150, 1880, 1519, 1342, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 3356, 3338, 1507, 4392, 240, 193,
	193, 1405, 3335, 1499, 1504, 1527, 3348, 3349, 3341, 3342,
	3343, 3344, 3346, 3347, 238, 1880, 3334, 3332, 240, 1124,
	3327, 3326, 238, 1539, 1367, 1538, 3325, 1914, 3105, 1912,
	1606, 3350, 3348, 3349, 3341, 3342, 3343, 3344, 3346, 3347,
	1856, 3322, 3319, 238, 3299, 1251, 239, 1684, 3282, 182,
	182, 1648, 1650, 3983, 3275, 1342, 1342, 1741, 3273, 3136,
	232, 2816, 240, 1851, 2638, 1826, 239, 1613, 1913, 233,
	240, 1623, 2326, 1825, 5032, 3345, 4063, 2289, 4978, 2287,
	232, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 233,
	1869, 240, 4977, 4899, 3356, 4897, 1276, 193, 3811, 4777,
	4694, 4680, 3381, 3339, 3340, 1381, 4676, 4675, 1381, 4674,
	239, 4654, 3339, 3340, 1150, 1646, 3345, 3120, 239, 4653,
	1150, 1882, 1827, 1828, 232, 4651, 4630, 4629, 1639, 4604,
	2579, 4590, 232, 233, 4587, 1091, 4586, 4579, 4564, 239,
	4563, 233, 4509, 3349, 3341, 3342, 3343, 3344, 3346, 3347,
	4480, 4436, 1830, 232, 238, 4419, 4063, 1804, 4418, 4359,
	4352, 193, 233, 4349, 4327, 4205, 4184, 4116, 3971, 193,
	3456, 3427, 3970, 3953, 3952, 3950, 3880, 1689, 3868, 3775,
	1900, 3709, 3355, 3701, 3667, 3580, 1660, 1829, 3536, 3505,
	193, 3458, 3304, 1867, 1831, 1832, 1833, 1834, 1836, 1837,
	3303, 1678, 240, 1841, 1842, 1848, 1870, 1847, 1843, 3298,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 3264,
	3082, 1959, 1958, 4633, 4173, 1150, 1150, 1150, 4172, 1957,
	2585, 1150, 1798, 3104, 3351, 3352, 3353, 1954, 1272, 1946,
	1272, 3350, 3348, 3349, 3341, 3342, 3343, 3344, 3346, 3347,
	239, 1944, 4391, 2863, 238, 1412, 1706, 2862, 1880, 2827,
	1268, 2820, 238, 2786, 232, 1902, 2663, 1150, 1742, 1972,
	826, 1353, 1899, 233, 2017, 3345, 2061, 826, 1973, 1353,
	1270, 1353, 1270, 1805, 3345, 1968, 2021, 1967, 1966, 1965,
	1964, 1963, 1962, 1961, 1835, 1960, 1941, 1940, 1939, 2040,
	1938, 193, 240, 2027, 1937, 1936, 1935, 2090, 1934, 2092,
	240, 1933, 1809, 1808, 1801, 1932, 1931, 1930, 1929, 1928,
	1927, 1926, 1071, 1637, 2682, 1915, 1981, 1070, 4632, 2680,
	238, 1901, 2029, 1898, 1893, 1366, 1955, 3356, 1295, 1286,
	4362, 1353, 1803, 4217, 4155, 3919, 3892, 1150, 3883, 2028,
	239, 3286, 2818, 4458, 1642, 1822, 1823, 4219, 239, 2854,
	3918, 1914, 2034, 3454, 232, 1896, 4288, 1978, 1979, 2125,
	1091, 1150, 232, 233, 1827, 1828, 3339, 3340, 240, 1412,
	2002, 233, 3355, 2157, 2107, 3696, 2013, 2109, 2182, 1391,
	4975, 1393, 1238, 2114, 4968, 1947, 1948, 2116, 2157, 2994,
	2157, 193, 2119, 4677, 1830, 4580, 2155, 4571, 4570, 193,
	4395, 182, 4330, 4329, 2666, 2035, 4328, 4287, 4208, 2664,
	4122, 4121, 2084, 4853, 4120, 4119, 239, 832, 835, 4118,
	4117, 3887, 238, 3886, 832, 835, 3711, 1381, 2003, 1829,
	232, 4611, 2129, 2026, 3710, 2128, 4609, 2164, 3703, 233,
	1757, 3702, 2972, 4925, 4576, 4923, 1519, 1392, 1880, 2227,
	1386, 4066, 2055, 1995, 3762, 2022, 2000, 1880, 4484, 1953,
	3997, 1386, 3324, 1993, 1705, 3323, 1952, 193, 3246, 3539,
	240, 1796, 1387, 2954, 3350, 3348, 3349, 3341, 3342, 3343,
	3344, 3346, 3347, 1389, 2143, 3968, 1091, 3023, 2246, 2149,
	2148, 1971, 1050, 2157, 2159, 3650, 1519, 3649, 3507, 1924,
	1386, 4945, 3570, 1714, 1758, 1574, 1574, 2012, 2011, 2010,
	2263, 2351, 2008, 2007, 2006, 1412, 1997, 1936, 239, 1936,
	3343, 3344, 3346, 3347, 2058, 4567, 2131, 3356, 1267, 2132,
	1267, 4882, 232, 2049, 4056, 2105, 2041, 4864, 1051, 2378,
	2651, 233, 4849, 4373, 3622, 3150, 1715, 1921, 2264, 4070,
	4045, 4003, 3994, 3976, 3734, 3480, 2193, 2356, 4440, 4273,
	3388, 3813, 3292, 2646, 4504, 2861, 4476, 4270, 4858, 193,
	1969, 1949, 3630, 2320, 1616, 1532, 1362, 1324, 3012, 3015,
	4873, 4870, 3686, 2223, 3177, 2231, 3010, 2952, 3944, 1693,
	2996, 2241, 1383, 4669, 4379, 2127, 1641, 4783, 2233, 3061,
	4647, 3510, 2226, 2274, 2279, 3963, 3117, 3605, 4926, 4927,
	4507, 4503, 2152, 1376, 4482, 3756, 4533, 3484, 4275, 2898,
	1574, 2450, 1574, 2447, 1574, 1591, 1583, 4016, 2191, 2327,
	2436, 2160, 2150, 2652, 1048, 4859, 2434, 1755, 1250, 1046,
	890, 4960, 1574, 1574, 5028, 4684, 1534, 2187, 1044, 2236,
	1042, 1737, 2236, 4526, 2929, 1574, 2199, 1737, 1387, 39,
	2236, 1039, 1642, 4515, 832, 835, 4319, 1574, 4318, 1574,
	1574, 1574, 1030, 2266, 2267, 1388, 2448, 3341, 3342, 3343,
	3344, 3346, 3347, 4906, 2487, 4014, 3341, 3342, 3343, 3344,
	3346, 3347, 1756, 826, 4015, 2234, 2221, 4013, 1833, 1834,
	1836, 1837, 4005, 2449, 2316, 2144, 3991, 3990, 3988, 3987,
	1393, 1592, 2377, 2916, 2653, 1150, 2650, 2387, 3975, 2268,
	1539, 2321, 1538, 1734, 3939, 3938, 3611, 3610, 2914, 2154,
	3572, 3448, 2333, 3297, 1384, 3947, 3296, 3295, 4542, 1754,
	3294, 3250, 1387, 1385, 2485, 3486, 3021, 891, 2220, 2232,
	1150, 2217, 3020, 2916, 3017, 2240, 3455, 3006, 1736, 2998,
	2354, 2988, 2280, 2987, 1736, 765, 2982, 2153, 2914, 2981,
	2980, 2932, 1691, 2382, 4269, 2319, 1392, 2959, 1383, 2388,
	765, 2958, 2920, 2842, 2341, 1735, 1150, 4505, 1150, 4477,
	4271, 2560, 1802, 2696, 2695, 1150, 2517, 3114, 2061, 2061,
	1412, 4417, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 2407, 1150,
	2302, 1150, 1150, 1150, 1150, 2301, 2471, 2343, 1587, 4961,
	832, 835, 1393, 2264, 2330, 1639, 1646, 2338, 1646, 2338,
	2364, 1388, 1383, 4231, 1686, 2370, 2335, 1150, 2339, 3568,
	3507, 1150, 1150, 2489, 2655, 2300, 1091, 2476, 1091, 1150,
	3538, 2235, 2351, 1150, 2235, 1150, 1150, 2192, 2347, 1367,
	2348, 4907, 2235, 1412, 1629, 2486, 1628, 4963, 4226, 1150,
	1150, 1150, 1150, 2956, 2869, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 2369, 1641, 2855, 2189, 2846, 1392, 1386,
	1384, 1266, 1535, 1266, 1089, 1627, 4230, 1626, 2386, 1385,
	1036, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	2397, 2446, 2459, 3735, 1150, 1388, 2905, 2462, 2976, 2467,
	2185, 4289, 1310, 1837, 800, 3347, 1272, 2374, 2487, 1792,
	2969, 2970, 1600, 1412, 1707, 2575, 2627, 2628, 2484, 2229,
	2430, 2575, 1272, 3157, 2931, 2969, 2970, 2969, 2970, 2190,
	2627, 2643, 1687, 2646, 2055, 2055, 2500, 4543, 1150, 1412,
	2649, 1771, 4267, 2832, 764, 1605, 3193, 4964, 1270, 4541,
	1767, 1753, 2943, 4272, 1384, 4539, 2440, 2691, 2186, 764,
	2428, 3223, 2193, 1385, 1270, 1088, 2394, 2391, 2485, 4926,
	2475, 2474, 2488, 1703, 2591, 2481, 2737, 2737, 2751, 3204,
	2627, 3569, 2473, 2772, 2774, 1807, 2642, 1071, 4991, 2778,
	1071, 1071, 2504, 1795, 2201, 2505, 2506, 1365, 2513, 2514,
	893, 892, 4538, 2583, 2385, 4855, 2058, 2058, 3014, 4962,
	2581, 2461, 3238, 2013, 2942, 2049, 2049, 2205, 798, 1715,
	1715, 3483, 2340, 4416, 2557, 2571, 713, 2693, 3744, 4540,
	2161, 2162, 2694, 2828, 2191, 2697, 4662, 2698, 2699, 3011,
	3013, 3960, 3743, 2803, 1353, 1353, 2795, 3009, 1612, 3195,
	2655, 2483, 708, 766, 2845, 1386, 2569, 4966, 2587, 4639,
	2173, 3802, 2002, 4317, 3799, 2174, 1238, 3989, 766, 3986,
	2640, 2930, 1750, 2893, 2202, 1091, 3927, 2919, 1090, 935,
	2395, 2871, 4025, 3914, 3617, 1091, 1692, 1412, 3609, 1091,
	3566, 3016, 2218, 3207, 2979, 2468, 2794, 2957, 2286, 2285,
	2817, 1610, 2435, 2868, 2879, 4938, 3972, 1040, 2433, 2802,
	2883, 2807, 1040, 2746, 2813, 2814, 4947, 2887, 2733, 2486,
	2763, 1040, 2061, 1041, 2894, 2955, 2867, 2849, 2857, 2784,
	2785, 4946, 182, 2776, 1040, 2796, 2800, 2801, 2890, 1386,
	4026, 2919, 888, 1381, 887, 3800, 2915, 3237, 2000, 4265,
	2840, 1342, 1955, 4254, 4972, 3230, 3231, 3261, 2193, 4993,
	3958, 4664, 4914, 4137, 2458, 4268, 4136, 2224, 4749, 3738,
	1412, 3618, 3683, 2895, 3684, 3201, 1589, 2247, 1091, 2175,
	4761, 2102, 4856, 4024, 2206, 1586, 1353, 4247, 3259, 2992,
	1768, 4467, 2484, 3615, 2995, 3555, 2555, 2179, 2565, 2558,
	1342, 2984, 2921, 2864, 2983, 2901, 1267, 1150, 1150, 4670,
	1150, 2219, 2259, 4691, 2889, 1947, 1948, 1268, 3485, 1268,
	2566, 2655, 1267, 4827, 2250, 4828, 2567, 2903, 3206, 2257,
	2572, 3583, 1342, 1342, 826, 840, 1353, 799, 2918, 2896,
	1612, 2247, 4248, 2886, 2888, 3148, 2873, 3973, 3547, 2554,
	2207, 2208, 2892, 3556, 4965, 2977, 3007, 3683, 3086, 3203,
	1087, 847, 1280, 1765, 2904, 2878, 3147, 1574, 763, 2881,
	2258, 2882, 2176, 2181, 1716, 2203, 1533, 1282, 3128, 2899,
	1574, 2961, 1574, 2460, 1293, 2902, 801, 4854, 3526, 1309,
	797, 3145, 4892, 2192, 3101, 2243, 3554, 4038, 2230, 1574,
	4913, 1942, 4893, 3494, 1277, 2655, 3548, 4036, 2055, 4346,
	4266, 2917, 2916, 2924, 3064, 2934, 2937, 2986, 1688, 3066,
	2204, 2946, 2242, 1353, 3056, 1353, 1505, 2935, 2213, 3452,
	3256, 3022, 1769, 3158, 3159, 2960, 3053, 3054, 2971, 2973,
	2974, 2975, 3528, 2251, 3165, 3166, 3167, 1150, 2978, 3546,
	1283, 3179, 2393, 3180, 2228, 2177, 2238, 4747, 3257, 832,
	835, 2985, 3262, 1519, 4413, 3205, 3097, 2997, 3602, 2990,
	2247, 1358, 2962, 3004, 4133, 3252, 1284, 2183, 3151, 3091,
	2058, 2574, 3057, 1983, 1037, 2190, 2214, 2196, 4429, 2049,
	4040, 832, 835, 4936, 3052, 1983, 3062, 4794, 4299, 2429,
	3522, 4748, 709, 3175, 3155, 2183, 3142, 3527, 732, 4970,
	3160, 4704, 3161, 1150, 2239, 1539, 2568, 3067, 1281, 1150,
	1150, 4039, 3181, 3616, 927, 3055, 2570, 1770, 2637, 2212,
	2831, 4663, 3080, 2215, 2390, 182, 1766, 3132, 3130, 1702,
	1704, 3090, 2209, 2228, 3093, 2197, 2556, 1892, 3302, 4243,
	928, 1806, 1547, 2799, 1554, 4244, 1560, 3521, 2582, 3489,
	2230, 4994, 3123, 1364, 4696, 4249, 936, 3209, 1987, 3211,
	2812, 2384, 913, 3133, 1090, 1150, 1150, 4697, 3815, 4980,
	1987, 1150, 4361, 3959, 710, 841, 842, 4127, 2195, 4455,
	4322, 2225, 3915, 2991, 1150, 1150, 2227, 1987, 918, 3152,
	1150, 1150, 3131, 1646, 4912, 4412, 1150, 4246, 1299, 4038,
	1519, 4698, 3495, 4138, 4034, 3112, 1990, 1297, 2210, 4036,
	4971, 1342, 3174, 3062, 4250, 1659, 3758, 1664, 1990, 3221,
	4347, 1985, 3182, 711, 2222, 712, 4711, 3184, 4799, 3186,
	1677, 3188, 1682, 1985, 1690, 1990, 1022, 2103, 3258, 1988,
	4891, 1150, 1150, 1150, 1721, 4731, 4973, 1150, 3260, 1108,
	2797, 1988, 3724, 3253, 4589, 2254, 2229, 1150, 4321, 4366,
	1084, 4320, 4084, 3671, 1519, 3722, 1519, 4700, 1988, 3466,
	3229, 2839, 2308, 4061, 1150, 3715, 1980, 3285, 2178, 4367,
	3212, 1296, 1986, 3214, 1289, 4037, 700, 3220, 3219, 1266,
	4699, 1816, 4040, 1817, 1986, 4134, 1816, 1740, 3854, 3218,
	2503, 2500, 2194, 3224, 1811, 1266, 4182, 2145, 4701, 4999,
	3440, 4502, 2753, 2252, 4712, 4598, 2936, 3403, 3501, 4646,
	4085, 844, 843, 4039, 4009, 3992, 3945, 1278, 3943, 3672,
	2142, 3663, 3497, 3102, 3096, 4414, 3905, 3280, 3281, 2226,
	3084, 2334, 3284, 2328, 4245, 3276, 2322, 2314, 2294, 2293,
	4583, 3798, 1023, 3935, 3239, 2493, 2253, 2963, 3726, 1580,
	1301, 3251, 772, 3869, 929, 930, 1150, 1150, 1150, 1150,
	1099, 3759, 4767, 2919, 3717, 3411, 1150, 1150, 1150, 1816,
	1279, 1150, 4734, 2441, 4255, 4256, 845, 846, 2138, 3716,
	3906, 1150, 1272, 1412, 1022, 1815, 4384, 1150, 2790, 1150,
	1815, 4087, 3395, 3396, 1989, 2140, 3081, 1312, 1272, 4559,
	4557, 4479, 914, 915, 3513, 3509, 1989, 3907, 1084, 3904,
	3508, 3244, 3222, 4139, 2375, 3882, 1412, 3400, 3399, 1744,
	1743, 2367, 2793, 1989, 1270, 3909, 2357, 2291, 1272, 1738,
	2838, 1412, 1892, 1621, 2837, 3725, 1091, 3291, 2836, 2141,
	1270, 2835, 2834, 1353, 1088, 1635, 1622, 1633, 4044, 934,
	3088, 4657, 4337, 2061, 2940, 1817, 3625, 1412, 3172, 4057,
	1817, 3412, 3420, 2792, 4491, 3951, 3378, 1353, 2791, 2332,
	1270, 3447, 3713, 1815, 3183, 1353, 3185, 4933, 3187, 4465,
	3189, 3190, 3397, 3855, 2494, 4464, 4364, 4037, 3940, 1028,
	1027, 3433, 3060, 3856, 3465, 3462, 3450, 1150, 4140, 3156,
	1023, 4183, 3065, 3199, 4713, 3063, 3402, 2361, 2263, 1696,
	3584, 1150, 4998, 3410, 3417, 2182, 4561, 4487, 4486, 4780,
	4764, 1353, 4189, 2964, 2965, 2278, 4773, 2061, 4658, 3871,
	2662, 3490, 3491, 4212, 1788, 3434, 1024, 4456, 3405, 2454,
	4582, 2661, 4801, 3936, 1150, 4474, 4937, 3416, 4935, 2182,
	4702, 2009, 3511, 931, 932, 3515, 4703, 3470, 3407, 1353,
	3472, 3473, 3373, 3374, 3375, 3476, 3426, 3477, 1790, 3478,
	3438, 4492, 3474, 3481, 3429, 3442, 3443, 3444, 3445, 3406,
	3389, 1353, 1722, 1353, 3418, 1381, 3419, 3487, 3404, 4560,
	3421, 3422, 4475, 3723, 3718, 3719, 3720, 3721, 1787, 1150,
	1150, 916, 917, 2246, 4875, 3512, 4687, 1412, 3517, 2027,
	2246, 3519, 4678, 3908, 3424, 1785, 3425, 4774, 1353, 4659,
	1762, 4462, 1353, 3459, 3460, 1268, 3461, 1760, 3586, 1732,
	3588, 1730, 3498, 3592, 1728, 3441, 1726, 3598, 4435, 2055,
	1724, 1268, 771, 4223, 3541, 1718, 4181, 1028, 1027, 1712,
	1574, 1710, 3571, 3941, 3413, 3414, 3415, 4043, 1631, 3370,
	1025, 3774, 3732, 1353, 1574, 3731, 1574, 3573, 3564, 3463,
	1412, 3333, 3263, 3085, 3475, 3005, 2999, 826, 1574, 1519,
	1519, 2953, 1267, 3468, 3482, 3545, 2866, 1026, 1634, 1574,
	1632, 3619, 933, 2463, 1024, 4545, 3493, 2352, 1267, 2020,
	3635, 1353, 3488, 3453, 2016, 3559, 1791, 1672, 2432, 2399,
	3371, 2058, 3754, 2055, 3753, 1811, 2272, 3197, 1272, 3196,
	2049, 3471, 2456, 3585, 3679, 3163, 2482, 2455, 1267, 3496,
	1749, 2402, 3655, 2313, 3529, 2292, 3543, 3581, 3145, 1029,
	2091, 4212, 2089, 1574, 1925, 3537, 1685, 3145, 3662, 3550,
	1604, 1519, 4848, 4300, 3996, 1574, 1789, 1574, 3557, 3995,
	1270, 3553, 3620, 1038, 3623, 4304, 4284, 3544, 2033, 4763,
	4382, 3677, 4309, 4905, 4297, 4236, 2319, 3504, 4235, 4083,
	3576, 3699, 3688, 4074, 3551, 2058, 1786, 3670, 3552, 3558,
	3607, 3560, 3582, 4910, 2049, 3593, 3567, 4012, 2986, 3599,
	3595, 3993, 4377, 1784, 1412, 3601, 3966, 1412, 1761, 3736,
	3964, 3795, 3942, 3666, 3661, 1759, 3651, 1731, 1025, 1729,
	3115, 3107, 1727, 3100, 1725, 3608, 3594, 3673, 1723, 3092,
	3600, 3746, 3078, 1717, 832, 835, 3077, 1711, 3058, 1709,
	2885, 1150, 2880, 2290, 3627, 1026, 1630, 1150, 1150, 2288,
	2265, 1150, 1150, 1150, 2248, 1150, 2211, 2961, 2198, 3606,
	3729, 3660, 3680, 2184, 1150, 2061, 3659, 2124, 2121, 3658,
	2118, 2115, 3727, 1150, 2110, 3612, 2108, 2104, 1150, 2095,
	3676, 4832, 1247, 1820, 1412, 3242, 4927, 3685, 2146, 3596,
	4366, 2431, 2398, 1150, 2257, 3752, 3694, 1029, 3687, 2271,
	3215, 1412, 1342, 4656, 182, 182, 3697, 3698, 1248, 3664,
	4367, 2061, 2061, 1150, 1150, 3213, 1150, 1150, 1150, 3751,
	3051, 2134, 2135, 3678, 1043, 1045, 1047, 4813, 4725, 4398,
	2466, 4316, 4227, 3146, 1150, 2165, 1585, 4600, 1150, 4593,
	2061, 2061, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 3760, 1150, 2916, 2916, 3827, 3777, 3828, 2941,
	4095, 1150, 1150, 2061, 3730, 2193, 2464, 1091, 1150, 2914,
	2938, 3243, 1782, 1783, 2389, 1333, 3787, 3788, 3757, 1150,
	2426, 2331, 2421, 4812, 1821, 1332, 2396, 4276, 1827, 1828,
	1272, 1272, 1519, 4311, 1150, 1708, 1827, 1828, 3597, 2944,
	4618, 4489, 3749, 4190, 4168, 3524, 2945, 2966, 1267, 1249,
	1824, 3755, 2465, 1360, 1300, 4930, 4921, 263, 1830, 3784,
	4008, 4883, 3076, 2423, 4071, 3782, 1412, 2315, 3001, 1371,
	3794, 2945, 1270, 1270, 2133, 3901, 4772, 3012, 3010, 1353,
	1353, 2055, 4007, 3810, 3019, 3801, 3803, 3804, 2947, 3805,
	4754, 1158, 4724, 1829, 1353, 1353, 3817, 826, 1353, 4718,
	3888, 1829, 3003, 3866, 697, 1266, 1333, 3912, 3913, 3825,
	1333, 2949, 3824, 3826, 4655, 3002, 4584, 1150, 4552, 3830,
	4466, 1266, 3925, 3926, 2948, 3832, 3932, 2055, 2055, 4081,
	4073, 3858, 4060, 3898, 3665, 3122, 1150, 270, 270, 270,
	3873, 703, 704, 2777, 719, 703, 719, 730, 2130, 2042,
	770, 1266, 3859, 2058, 790, 4967, 2055, 2055, 4803, 796,
	4488, 2989, 2049, 4804, 1531, 1530, 270, 1150, 1150, 3451,
	3878, 3879, 4997, 4720, 3875, 3876, 3867, 3339, 3340, 1541,
	3933, 182, 4080, 4940, 3934, 1827, 1828, 909, 4803, 2055,
	4160, 2513, 3818, 4804, 270, 2908, 2909, 2906, 2907, 2058,
	2058, 3890, 2657, 1150, 1150, 3917, 1695, 2908, 2049, 2049,
	2906, 1150, 1694, 2692, 1764, 3946, 4585, 1763, 4527, 4313,
	2513, 3833, 4308, 4307, 3965, 4156, 3967, 3916, 2058, 2058,
	3806, 3590, 3891, 1574, 3587, 1919, 1574, 2049, 2049, 1918,
	3217, 1353, 3928, 2470, 3724, 4984, 4948, 4818, 4758, 3921,
	4757, 4756, 4686, 3862, 832, 835, 4685, 3722, 4635, 4555,
	4519, 2058, 3977, 4459, 4453, 4354, 2061, 3715, 4334, 3981,
	2049, 4274, 4218, 4111, 4101, 4047, 3982, 3984, 3962, 3954,
	3740, 3669, 3741, 3668, 3742, 3998, 3518, 3469, 3202, 3194,
	3171, 3170, 3169, 3168, 3106, 3079, 4010, 4011, 3969, 2939,
	2876, 2870, 2859, 2858, 2847, 2586, 4004, 2457, 1574, 3974,
	2427, 2420, 2419, 2418, 1150, 2417, 2416, 4027, 4028, 2329,
	2303, 2299, 1272, 1150, 703, 703, 2298, 4097, 4053, 2297,
	1267, 1267, 270, 1574, 1574, 1574, 2296, 2295, 3128, 2098,
	1574, 1574, 1574, 2097, 4030, 2961, 2096, 2094, 2032, 2031,
	3726, 1781, 4104, 1780, 4042, 3145, 1719, 1599, 1598, 1597,
	1596, 1595, 1574, 4088, 1270, 1594, 3717, 4023, 1412, 4067,
	4032, 4092, 4089, 4041, 1593, 1588, 1584, 1582, 1581, 1524,
	4108, 3716, 1523, 1522, 1403, 1402, 4046, 4055, 4020, 1401,
	1400, 4031, 4059, 1399, 1363, 1412, 1319, 1318, 1150, 1150,
	1317, 1316, 4112, 1905, 1150, 1150, 2061, 1910, 1567, 1150,
	1150, 1342, 1150, 1315, 1314, 4072, 4091, 1150, 4021, 1313,
	1311, 1306, 4077, 1305, 1304, 1303, 1302, 1230, 1150, 902,
	8, 2136, 4075, 1049, 1035, 4661, 4253, 3725, 4068, 4252,
	4251, 1266, 2453, 93, 1150, 1590, 864, 4090, 87, 4022,
	2255, 1268, 2055, 3961, 1001, 4093, 4098, 4800, 4690, 1565,
	4125, 1654, 4123, 872, 4782, 4103, 4099, 1268, 4069, 4110,
	4109, 3520, 3024, 2401, 1720, 2403, 3428, 1669, 2819, 4141,
	4124, 4746, 4164, 3301, 4625, 4428, 2319, 2660, 1923, 3382,
	89, 1134, 1180, 4345, 4344, 4237, 3948, 1268, 3638, 4341,
	4340, 2046, 2048, 1098, 1415, 1272, 272, 4154, 4150, 4826,
	2147, 1140, 4135, 1272, 2163, 2156, 3504, 1412, 1412, 2860,
	1412, 2736, 1157, 1154, 2058, 4142, 2050, 1272, 2052, 1156,
	1155, 2051, 1943, 2049, 1153, 1697, 2045, 4079, 1574, 1574,
	4195, 3126, 3695, 1640, 1638, 1003, 2151, 1270, 2580, 2644,
	3290, 1412, 803, 1916, 1114, 1270, 1136, 2641, 1294, 1125,
	1113, 3408, 3387, 3682, 3897, 2492, 882, 3336, 2647, 1270,
	1285, 2760, 2752, 2748, 3479, 3116, 1797, 814, 4442, 1894,
	3127, 1272, 1793, 1272, 4213, 4214, 4228, 4229, 1397, 1118,
	3433, 2578, 2055, 4180, 1907, 3723, 3718, 3719, 3720, 3721,
	3268, 2502, 3689, 3431, 2853, 3070, 1353, 4806, 3073, 3814,
	3075, 3200, 4277, 4264, 2307, 1246, 1412, 1245, 1353, 1292,
	1244, 1353, 1267, 1270, 4788, 1270, 4785, 2245, 4348, 3633,
	4279, 4280, 3634, 1150, 2139, 2900, 1412, 4194, 2590, 4197,
	3652, 4216, 4192, 4193, 4260, 4191, 4260, 4198, 4200, 4204,
	4263, 1130, 1518, 4196, 4222, 4232, 3119, 4225, 2445, 3119,
	4312, 4207, 4314, 4187, 2058, 3747, 4278, 3393, 182, 4058,
	808, 1601, 795, 2049, 1574, 1574, 4496, 820, 4203, 4211,
	4224, 4234, 1142, 1879, 3047, 3046, 4650, 1382, 1380, 1379,
	1378, 813, 4957, 3957, 3956, 3955, 237, 3236, 4338, 1818,
	1810, 1112, 1353, 234, 236, 235, 4355, 4298, 3902, 3437,
	4881, 3979, 3624, 23, 1412, 22, 21, 116, 42, 1574,
	20, 155, 133, 1266, 1266, 4315, 152, 4335, 151, 125,
	150, 149, 148, 147, 154, 146, 4332, 145, 140, 144,
	143, 3191, 812, 142, 4293, 4296, 141, 139, 1574, 1574,
	1574, 1574, 1574, 1574, 1342, 137, 4369, 138, 4374, 765,
	132, 136, 4325, 135, 1412, 134, 4306, 131, 130, 129,
	128, 4331, 127, 4333, 4385, 126, 1150, 1150, 1150, 4324,
	4323, 124, 4282, 4386, 810, 156, 123, 1268, 122, 121,
	120, 119, 4343, 118, 1412, 4291, 4339, 1287, 4294, 1150,
	117, 4350, 1150, 1150, 4351, 1267, 783, 784, 4360, 61,
	60, 4389, 1150, 1267, 4283, 2061, 2319, 115, 113, 114,
	1150, 1150, 19, 40, 14, 65, 4292, 1267, 66, 4295,
	4371, 1308, 4387, 18, 4394, 13, 35, 1412, 92, 1574,
	1342, 4130, 819, 270, 4380, 270, 270, 4403, 1337, 270,
	1347, 4407, 105, 4400, 1353, 104, 4401, 103, 4420, 4408,
	36, 1361, 101, 100, 34, 17, 16, 15, 98, 790,
	97, 1412, 790, 96, 33, 4409, 4415, 31, 11, 1150,
	9, 1267, 4461, 1267, 37, 2004, 12, 5, 187, 186,
	189, 185, 1150, 188, 4425, 91, 270, 184, 270, 270,
	1337, 1150, 270, 270, 183, 90, 2061, 1347, 29, 10,
	4368, 179, 4574, 4065, 82, 1150, 181, 4437, 1150, 805,
	4431, 270, 180, 1543, 4448, 4449, 178, 177, 176, 83,
	80, 175, 1150, 86, 174, 1150, 4469, 81, 4470, 1563,
	85, 84, 1412, 27, 6, 4499, 1578, 64, 7, 1353,
	809, 4410, 3733, 108, 109, 38, 78, 77, 76, 1574,
	1574, 1574, 75, 26, 4471, 1603, 63, 25, 1347, 2182,
	4478, 173, 270, 270, 4468, 1337, 218, 217, 216, 215,
	1272, 214, 213, 4451, 212, 4452, 4510, 4511, 764, 211,
	4544, 206, 210, 208, 4518, 207, 790, 4532, 270, 270,
	209, 2055, 205, 815, 228, 227, 4554, 3635, 4558, 807,
	1666, 4521, 4565, 1412, 221, 1266, 1574, 4516, 220, 4528,
	1673, 4530, 1270, 4531, 4573, 909, 4520, 226, 225, 224,
	223, 2806, 222, 219, 231, 4529, 204, 203, 202, 200,
	196, 199, 201, 4260, 198, 197, 195, 4562, 4547, 1150,
	1150, 4599, 4581, 230, 4546, 229, 804, 72, 4549, 4550,
	171, 4556, 172, 4551, 71, 170, 1150, 2061, 169, 1268,
	1268, 4594, 4603, 2058, 4605, 4536, 168, 4597, 4577, 167,
	4595, 4572, 2049, 811, 166, 165, 164, 70, 1353, 24,
	2, 1353, 2055, 1353, 1353, 1, 0, 766, 0, 0,
	0, 0, 4601, 270, 0, 0, 4596, 0, 806, 0,
	4602, 1150, 0, 1150, 4389, 1150, 4634, 0, 0, 4636,
	0, 4637, 4638, 0, 0, 1272, 4534, 270, 0, 0,
	0, 0, 817, 818, 0, 4613, 4645, 4522, 1150, 0,
	1272, 0, 0, 4591, 4614, 4615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4508, 4535, 0, 0,
	0, 0, 2584, 0, 2058, 4617, 0, 1270, 0, 4623,
	0, 0, 0, 2049, 0, 0, 0, 0, 1905, 4640,
	0, 4643, 1270, 4644, 0, 0, 0, 0, 4260, 0,
	4672, 0, 0, 0, 1272, 1272, 0, 0, 1266, 4665,
	0, 1150, 1150, 4260, 0, 0, 1266, 4673, 2497, 2349,
	0, 1150, 4666, 0, 0, 0, 0, 4693, 1272, 0,
	1266, 1272, 0, 0, 0, 1574, 4681, 2363, 2365, 0,
	0, 0, 0, 2759, 0, 1574, 1270, 1270, 0, 0,
	2368, 4682, 1519, 4683, 0, 0, 0, 4688, 0, 1150,
	1150, 0, 2376, 2055, 2379, 2380, 2381, 4260, 4260, 1150,
	1270, 4707, 4708, 1270, 0, 0, 4719, 3533, 3534, 4742,
	3535, 4743, 4705, 4714, 1266, 0, 1266, 4715, 4716, 4721,
	1267, 4260, 4722, 4727, 4260, 4728, 0, 0, 4730, 4735,
	4739, 4577, 4736, 0, 1112, 1112, 1112, 4740, 4741, 0,
	4738, 0, 0, 0, 0, 0, 4759, 1150, 1150, 4751,
	0, 1150, 1496, 4755, 0, 1353, 0, 0, 1353, 0,
	0, 3577, 3578, 0, 3579, 2058, 0, 0, 703, 4787,
	4790, 4762, 0, 0, 2049, 0, 0, 4770, 4771, 0,
	4809, 0, 4808, 4797, 4750, 4805, 4798, 4802, 0, 270,
	4779, 270, 4778, 0, 2754, 270, 0, 0, 1342, 0,
	0, 1268, 0, 0, 0, 4796, 4760, 0, 1543, 1337,
	2024, 270, 0, 270, 2030, 4831, 0, 0, 1150, 1150,
	1150, 270, 0, 719, 4792, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 4814, 0, 0,
	0, 0, 4791, 4819, 2099, 0, 4795, 0, 4822, 0,
	0, 0, 4830, 0, 1150, 4862, 270, 0, 4867, 0,
	0, 4829, 0, 270, 4845, 1267, 4843, 4844, 4846, 0,
	0, 0, 0, 0, 0, 0, 0, 4863, 0, 0,
	1267, 0, 0, 0, 4889, 4888, 0, 2182, 0, 0,
	0, 0, 0, 0, 4890, 4896, 790, 0, 0, 4898,
	0, 0, 4865, 0, 0, 0, 0, 0, 4880, 4878,
	1150, 0, 0, 0, 0, 0, 0, 4894, 1353, 0,
	0, 4895, 0, 4911, 4554, 0, 0, 0, 0, 0,
	0, 4904, 0, 0, 1267, 1267, 4903, 0, 0, 0,
	4928, 0, 0, 0, 4922, 4877, 4919, 4879, 4908, 4924,
	4920, 4917, 4918, 4902, 0, 0, 0, 0, 1267, 0,
	0, 1267, 4944, 4931, 4787, 4943, 4934, 4790, 1272, 0,
	1272, 4942, 4951, 0, 4932, 4808, 0, 4941, 0, 4939,
	0, 4953, 0, 0, 1268, 0, 0, 4950, 0, 0,
	0, 4959, 1268, 0, 0, 0, 0, 0, 4949, 0,
	0, 0, 4958, 0, 0, 0, 1268, 0, 1353, 0,
	1270, 0, 1270, 0, 4981, 0, 4974, 4976, 2173, 0,
	0, 0, 4983, 2174, 0, 4988, 4982, 0, 0, 0,
	0, 4260, 0, 4260, 4986, 4952, 4979, 4954, 1150, 1150,
	0, 4985, 0, 4992, 4990, 0, 1150, 0, 1150, 1150,
	3128, 4995, 0, 0, 5008, 0, 5001, 0, 5010, 5007,
	1268, 5011, 1268, 0, 270, 5013, 5012, 5009, 270, 5014,
	5016, 5005, 5015, 0, 0, 1082, 0, 1022, 0, 3128,
	0, 0, 0, 0, 0, 0, 5020, 5022, 5021, 0,
	5027, 5024, 0, 5025, 0, 5031, 5023, 5019, 0, 0,
	0, 1084, 5033, 1150, 0, 5030, 0, 0, 0, 5034,
	5027, 5036, 5038, 1266, 0, 0, 0, 1105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5004, 0,
	0, 0, 270, 0, 0, 0, 270, 2175, 0, 1827,
	1828, 0, 270, 5002, 5003, 0, 0, 1083, 270, 0,
	0, 0, 0, 0, 0, 2179, 0, 0, 0, 0,
	0, 0, 1858, 0, 270, 0, 270, 0, 0, 1830,
	703, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 790, 0, 0, 0, 909, 0,
	0, 0, 0, 1023, 0, 1883, 0, 0, 5035, 0,
	0, 0, 2759, 0, 1829, 0, 0, 3339, 3340, 0,
	3357, 3358, 3359, 0, 1849, 0, 0, 270, 0, 1337,
	270, 1496, 0, 1846, 0, 0, 0, 0, 0, 4147,
	2176, 2181, 0, 0, 790, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 2400,
	0, 0, 0, 0, 270, 270, 0, 270, 1266, 270,
	0, 270, 0, 270, 0, 0, 0, 0, 1267, 0,
	1267, 0, 0, 1266, 0, 0, 0, 1410, 0, 4145,
	0, 0, 3354, 2759, 2759, 0, 0, 2173, 2437, 0,
	0, 2438, 2174, 2439, 0, 0, 0, 0, 0, 0,
	0, 1852, 1853, 1854, 1855, 270, 270, 270, 270, 0,
	0, 1835, 0, 2177, 0, 0, 2602, 2603, 2604, 2621,
	2622, 2623, 0, 3226, 0, 0, 0, 1266, 1266, 0,
	0, 0, 0, 0, 770, 0, 2624, 1112, 790, 0,
	1028, 1027, 0, 0, 0, 1496, 3265, 3266, 0, 0,
	0, 1266, 0, 0, 1266, 0, 0, 0, 0, 3532,
	1857, 1859, 0, 2183, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 3164, 0, 0, 0, 0, 3345,
	0, 0, 0, 0, 0, 1844, 1845, 1024, 2614, 1827,
	1828, 0, 0, 0, 0, 0, 0, 2610, 0, 0,
	0, 0, 0, 0, 2754, 2754, 2175, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 3530, 1850, 1830,
	0, 0, 0, 0, 2179, 4076, 0, 0, 0, 0,
	0, 2592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3361, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 1268,
	3531, 0, 0, 0, 1849, 2759, 2759, 2759, 2759, 0,
	0, 0, 0, 0, 0, 2615, 2616, 2617, 2618, 0,
	0, 0, 0, 0, 0, 2609, 3355, 0, 0, 0,
	0, 1496, 4126, 0, 1880, 0, 0, 0, 0, 2176,
	2181, 0, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 270, 1827, 1828,
	0, 0, 0, 0, 0, 0, 703, 0, 3363, 3364,
	3365, 3366, 0, 270, 0, 703, 1081, 0, 1026, 0,
	0, 1858, 0, 0, 0, 0, 2178, 270, 1830, 0,
	1856, 1852, 1853, 1854, 1855, 0, 0, 0, 0, 2619,
	2620, 1835, 1880, 0, 0, 0, 0, 0, 270, 1347,
	0, 0, 0, 1851, 1883, 0, 0, 0, 0, 0,
	0, 0, 2177, 1829, 0, 0, 2754, 2754, 2754, 2754,
	1029, 0, 2612, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 1268, 0, 0, 0, 0, 0,
	1857, 1859, 0, 0, 0, 0, 0, 270, 1347, 1268,
	0, 719, 0, 719, 0, 0, 0, 2875, 2171, 0,
	0, 1882, 2183, 270, 0, 0, 270, 0, 0, 0,
	270, 3356, 270, 0, 0, 0, 0, 1337, 0, 270,
	270, 0, 1347, 1347, 2891, 0, 0, 0, 3773, 270,
	0, 1266, 0, 1266, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 1268, 1268, 0, 0, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 2169, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	1268, 0, 0, 0, 0, 2928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 2170,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1859, 0, 0, 270, 1880, 0, 2019, 2613, 0, 0,
	0, 0, 0, 0, 790, 0, 0, 0, 0, 0,
	0, 4302, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	270, 3351, 3352, 3353, 0, 0, 0, 0, 3350, 3348,
	3349, 3341, 3342, 3343, 3344, 3346, 3347, 1850, 0, 0,
	1856, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 270, 3068, 2178, 0, 0, 0, 0,
	4353, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4370, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 270, 0, 270, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 4393, 0, 0, 0,
	0, 0, 3111, 0, 0, 0, 0, 0, 0, 1496,
	2167, 0, 2928, 1880, 703, 0, 0, 0, 0, 0,
	0, 1882, 0, 3140, 909, 2928, 73, 2599, 2600, 2601,
	2625, 2611, 2605, 0, 2607, 2608, 2606, 2593, 2594, 2595,
	2596, 2597, 2598, 74, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 270, 1337, 270, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 1347, 270, 1496,
	0, 1337, 0, 1337, 0, 1337, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 88,
	0, 2759, 2759, 0, 0, 1496, 0, 0, 0, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 270, 270, 270, 1337, 0, 0, 1337, 0, 270,
	903, 0, 0, 0, 270, 0, 0, 1268, 0, 1268,
	1882, 0, 0, 49, 0, 110, 2283, 0, 0, 0,
	0, 94, 107, 0, 3770, 3771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 3603, 0, 0, 0, 0,
	0, 2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759,
	2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759,
	2759, 0, 2759, 3628, 0, 0, 0, 0, 0, 0,
	0, 95, 2754, 2754, 3656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	0, 0, 0, 1496, 3834, 3835, 3836, 3837, 3838, 3839,
	3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849,
	3850, 3851, 3852, 3853, 0, 3857, 0, 0, 3705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1543,
	0, 0, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 0, 2754, 0, 0, 1496, 0, 0, 0,
	0, 0, 4254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 4247, 0, 0, 0,
	4240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4238, 0, 0,
	0, 0, 0, 0, 0, 0, 4242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4679, 190, 102, 0, 0, 106,
	0, 4248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4692, 270, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 0, 0, 153, 270,
	0, 0, 0, 0, 703, 4241, 0, 0, 0, 703,
	0, 0, 703, 0, 4726, 703, 703, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 1827, 1828, 270,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 1830, 157, 0,
	0, 0, 0, 0, 2658, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 3339, 3340, 0, 3357, 3358, 3359,
	0, 239, 270, 1883, 0, 0, 270, 270, 0, 0,
	0, 0, 1829, 0, 0, 232, 4146, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2928, 2928, 270, 0, 2024,
	0, 0, 0, 0, 0, 2928, 0, 2030, 0, 0,
	0, 0, 193, 0, 0, 0, 2928, 2030, 0, 2928,
	2030, 0, 0, 2030, 1863, 0, 0, 0, 4815, 3354,
	0, 0, 0, 0, 4817, 0, 0, 270, 270, 2024,
	2829, 270, 0, 0, 0, 0, 0, 0, 4243, 0,
	0, 0, 0, 0, 4244, 0, 0, 0, 0, 0,
	0, 2024, 0, 270, 4249, 3563, 3563, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2928, 0, 2928, 0, 3591, 2928, 2024, 0,
	0, 2928, 2024, 0, 0, 790, 4246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4250, 0, 0, 3345, 0, 1857, 1859,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 4017, 0,
	0, 4018, 0, 0, 0, 0, 0, 0, 270, 0,
	3629, 0, 0, 3631, 2928, 0, 0, 270, 0, 0,
	0, 270, 0, 0, 1347, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 2911, 270,
	0, 3361, 0, 0, 3111, 0, 0, 1337, 0, 270,
	0, 0, 2928, 0, 703, 0, 0, 0, 0, 0,
	0, 2928, 0, 1863, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 3355, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 0, 0, 0, 0, 0, 4105, 4106,
	4107, 0, 0, 4245, 0, 2363, 4113, 4114, 0, 0,
	3739, 0, 1880, 1858, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	3745, 0, 0, 1543, 0, 0, 1337, 270, 0, 270,
	0, 0, 0, 4255, 4256, 1337, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 1880,
	897, 0, 1496, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 1863, 270, 1496, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 73, 0, 900,
	899, 1851, 0, 1863, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 1496, 74, 0, 0, 0, 0, 1827,
	1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3768, 1864, 1858, 0, 3812, 0, 0, 0, 3356, 1830,
	0, 0, 0, 1112, 0, 0, 0, 0, 1877, 1882,
	0, 0, 1852, 1853, 1854, 1855, 0, 1112, 0, 0,
	88, 0, 1835, 1863, 0, 1883, 0, 0, 0, 1863,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 2759, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 903, 0, 4209, 4210, 0, 0, 0, 0, 0,
	0, 1857, 1859, 0, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 0, 0,
	0, 270, 270, 0, 0, 0, 1844, 1845, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0,
	0, 0, 0, 1496, 4434, 0, 703, 703, 2759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 1852, 1853, 1854, 1855, 0, 0, 0, 3351, 3352,
	3353, 1835, 95, 0, 0, 3350, 3348, 3349, 3341, 3342,
	3343, 3344, 3346, 3347, 0, 0, 0, 0, 270, 0,
	0, 0, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	0, 0, 2754, 0, 0, 0, 1496, 0, 0, 0,
	1868, 4481, 1863, 1878, 0, 0, 0, 0, 0, 0,
	1857, 1859, 0, 0, 0, 1863, 0, 0, 0, 2363,
	0, 0, 0, 0, 0, 1880, 1874, 0, 1875, 0,
	0, 0, 0, 0, 0, 1844, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 0, 1866, 0, 0, 0, 0, 0, 2754,
	0, 2758, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	1863, 1856, 0, 3563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4402, 0, 4404, 4405, 4406, 270, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 2024, 0, 270, 0, 2759, 0, 719, 719, 1347,
	1496, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 3111, 0, 0, 3111, 2030, 0,
	0, 0, 1882, 270, 0, 0, 190, 102, 0, 0,
	106, 0, 2759, 270, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 270, 4454, 0, 0, 0, 4622, 0,
	0, 0, 0, 0, 0, 0, 238, 2759, 0, 0,
	1856, 0, 2928, 270, 904, 0, 0, 0, 0, 153,
	1496, 0, 3140, 3140, 0, 0, 0, 0, 909, 2928,
	0, 0, 0, 1851, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 3394, 4649, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 2754, 270, 1847, 1843,
	1869, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	4671, 0, 0, 0, 0, 0, 0, 3423, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 3436, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 239, 2754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4548, 0, 232, 0, 3457, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 2754, 0,
	0, 0, 0, 4165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 1841, 1842, 1848, 1870, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 1543, 0, 270, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 74, 0, 0, 3339, 3340, 0, 3357,
	3358, 3359, 0, 0, 0, 0, 1347, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 3779, 1347,
	0, 270, 1347, 0, 0, 0, 0, 0, 0, 0,
	2928, 2928, 0, 3563, 2928, 0, 0, 0, 0, 0,
	0, 0, 4262, 0, 4262, 1543, 0, 0, 1982, 88,
	0, 0, 0, 0, 0, 0, 2928, 0, 2030, 0,
	0, 0, 1543, 1543, 270, 2024, 0, 0, 0, 0,
	0, 3354, 0, 0, 0, 0, 0, 0, 2024, 0,
	270, 2024, 0, 270, 0, 3563, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3436, 1863, 0, 2928, 110, 2928, 270, 0, 0,
	0, 94, 107, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 2928, 2928, 0, 0, 0, 0, 3111, 3111,
	0, 79, 0, 0, 0, 4357, 0, 0, 0, 0,
	2363, 0, 0, 0, 0, 0, 270, 0, 3345, 1863,
	0, 95, 0, 1863, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 88, 0, 0, 0, 0, 1863, 1863, 1863, 1863,
	1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
	1863, 1863, 903, 3361, 0, 3748, 0, 1863, 1410, 1863,
	1863, 1863, 1863, 1097, 1496, 49, 0, 110, 0, 0,
	0, 2758, 2758, 94, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 1496, 0, 0, 0, 3355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 3791, 0, 1863, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 2928, 2030, 0,
	2030, 0, 3807, 4473, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 1863, 0, 0,
	1863, 1880, 4497, 1863, 4497, 0, 1863, 0, 0, 0,
	0, 0, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 0,
	0, 0, 0, 0, 0, 190, 102, 0, 790, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3563,
	0, 1337, 0, 1496, 1496, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 2024,
	0, 270, 0, 904, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 1863, 0,
	3356, 3360, 0, 2758, 2758, 2758, 2758, 0, 4473, 0,
	1863, 4262, 1863, 0, 1543, 0, 0, 1863, 0, 0,
	0, 2928, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 3900, 0, 0,
	0, 4588, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 194, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 1496, 0, 0, 232, 0, 190, 102, 0,
	0, 106, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 3812, 0, 0, 0, 0, 0, 0, 0,
	3339, 3340, 0, 3357, 3358, 3359, 0, 238, 0, 0,
	0, 0, 193, 0, 0, 904, 0, 3563, 4642, 0,
	153, 0, 3778, 0, 0, 0, 4473, 0, 0, 0,
	3351, 3352, 3353, 0, 0, 0, 0, 3350, 3348, 3349,
	3341, 3342, 3343, 3344, 3346, 3347, 4262, 0, 0, 0,
	1496, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 4262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3354, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 719, 0, 0,
	1496, 1827, 1828, 239, 1860, 1861, 1862, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 4262, 4262, 232, 0, 0,
	0, 4357, 0, 1864, 1858, 0, 233, 0, 0, 0,
	1496, 1830, 0, 0, 0, 0, 0, 0, 0, 4262,
	1877, 270, 4262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 1651, 0, 0, 1883, 0, 0,
	0, 1543, 0, 1543, 0, 0, 1829, 0, 0, 0,
	0, 0, 3345, 1496, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 1347, 3339, 3340, 0, 3357, 3358, 3359, 0, 0,
	0, 0, 0, 4768, 0, 0, 0, 1496, 0, 1863,
	1863, 0, 1863, 0, 0, 0, 0, 0, 0, 4497,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3361, 0, 3339,
	3340, 0, 3357, 3358, 3359, 0, 2928, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1853, 1854, 1855, 3354, 0, 1356,
	0, 0, 0, 1835, 0, 0, 0, 0, 1496, 3355,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 1097, 1097, 0,
	0, 1827, 1828, 0, 0, 3812, 0, 0, 0, 0,
	0, 0, 1868, 0, 3354, 1878, 0, 0, 1509, 0,
	0, 0, 1857, 1859, 1858, 0, 0, 0, 0, 1543,
	1863, 1830, 0, 0, 0, 0, 0, 0, 1874, 0,
	1875, 0, 0, 0, 0, 0, 0, 1844, 1845, 1496,
	1545, 0, 1551, 0, 1557, 1880, 0, 1883, 0, 0,
	0, 0, 0, 0, 3345, 1866, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 4202, 0, 0, 0, 0, 1863, 1863, 0, 2758,
	2758, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	4473, 0, 0, 3360, 3360, 0, 3362, 1863, 1863, 0,
	0, 3345, 4220, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 1657, 0, 1662, 1876, 0, 0, 3361,
	0, 1863, 0, 0, 3356, 0, 0, 0, 1675, 2928,
	1680, 0, 0, 1863, 0, 1865, 0, 0, 0, 4262,
	0, 4262, 0, 0, 1543, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3355, 0, 1835, 0, 0, 3361, 0, 0, 2758,
	2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758,
	2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758, 0,
	2758, 3360, 3360, 3360, 3360, 0, 0, 0, 1745, 0,
	0, 1751, 1856, 0, 2928, 0, 0, 0, 3355, 0,
	0, 0, 1857, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 3140, 0, 0, 1851, 1863, 1112, 1112, 0,
	0, 0, 0, 2928, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3140, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3351, 3352, 3353, 0, 0, 0,
	1850, 3350, 3348, 3349, 3341, 3342, 3343, 3344, 3346, 3347,
	0, 0, 0, 1882, 1880, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 0, 0, 1864,
	1858, 0, 0, 0, 0, 1410, 3356, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 1904, 0, 1112, 0, 0, 0, 1917, 0,
	0, 0, 0, 1883, 0, 4426, 1880, 0, 0, 0,
	0, 1863, 1829, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 1849, 3356, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 1846, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 0, 0, 0, 0, 0, 3314, 0, 4426, 0,
	3315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2516, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1976, 1976, 1976, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 3351, 3352, 3353, 1835,
	0, 0, 0, 3350, 3348, 3349, 3341, 3342, 3343, 3344,
	3346, 3347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2516, 0, 0, 0, 0, 1868, 0,
	0, 1878, 0, 3351, 3352, 3353, 0, 0, 1857, 1859,
	3350, 3348, 3349, 3341, 3342, 3343, 3344, 3346, 3347, 0,
	0, 0, 0, 3042, 1874, 0, 1875, 0, 0, 0,
	0, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 3032, 3030, 0, 0,
	0, 0, 0, 3034, 3036, 3026, 1850, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 1863, 1863, 0, 0, 1863, 3360, 3360,
	1863, 0, 0, 0, 1863, 0, 3048, 0, 0, 0,
	0, 1863, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 1146, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 1863, 1863, 1863,
	1863, 1863, 0, 0, 0, 0, 0, 1863, 0, 1863,
	0, 0, 3360, 3360, 3360, 3360, 3360, 3360, 3360, 3360,
	3360, 3360, 3360, 3360, 3360, 3360, 3360, 3360, 3360, 3360,
	3360, 3360, 269, 269, 269, 3360, 0, 0, 1863, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 833,
	0, 0, 1871, 1872, 1873, 0, 0, 3028, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3044, 1858,
	0, 0, 0, 0, 0, 1863, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 1863, 0, 1882,
	3043, 3033, 3031, 3035, 3037, 3027, 3029, 3045, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 3039, 3041, 0,
	0, 1829, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 1863, 1863, 0,
	0, 3049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 1269, 0, 0,
	0, 0, 2635, 0, 0, 0, 2636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2424, 0, 0, 0, 1868, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 1857, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1863, 0, 0, 0, 1863, 1863, 2451, 0,
	1863, 1863, 1844, 1845, 0, 1863, 0, 0, 0, 1863,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 2758,
	0, 3050, 0, 0, 2491, 1850, 2495, 0, 0, 0,
	3038, 3040, 0, 2509, 0, 0, 0, 0, 0, 0,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 0, 2559, 0, 2561,
	2562, 2563, 2564, 0, 0, 0, 2758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 2588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1904, 0, 0,
	0, 2639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2669, 2672, 2675,
	2678, 1863, 0, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2750, 0, 2762, 2764, 2769, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 0, 0, 0, 1830, 0, 1863,
	1863, 1863, 0, 0, 0, 0, 1877, 0, 0, 0,
	1863, 1863, 3360, 2758, 0, 0, 0, 0, 0, 1863,
	0, 0, 1863, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1867, 1846, 0, 0, 0, 0, 0, 0, 0, 3360,
	2758, 0, 1262, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 1863, 0, 0, 0,
	0, 0, 0, 0, 1863, 2758, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 1863, 0, 0, 0, 0, 265, 265,
	699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 269, 1835,
	269, 269, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 1857, 1859,
	0, 269, 0, 269, 269, 0, 0, 269, 269, 0,
	3360, 0, 0, 0, 1874, 0, 1875, 0, 0, 0,
	0, 0, 0, 1844, 1845, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 3360, 0, 0,
	1863, 1866, 0, 0, 0, 3071, 3072, 0, 3074, 0,
	0, 1827, 1828, 0, 0, 0, 1850, 0, 0, 3360,
	0, 0, 0, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 269, 269, 0,
	0, 1830, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 269, 269, 0, 0, 1883, 0, 0,
	0, 1863, 0, 0, 0, 0, 1829, 0, 0, 1883,
	0, 1865, 0, 0, 0, 0, 1849, 0, 1829, 0,
	0, 0, 1880, 0, 0, 1846, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3192, 1864, 1858, 1856, 0,
	0, 3767, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 1273, 269, 0,
	0, 1851, 0, 1852, 1853, 1854, 1855, 0, 0, 0,
	1883, 0, 0, 1835, 0, 1852, 1853, 1854, 1855, 1829,
	1863, 0, 269, 0, 0, 1835, 0, 0, 1869, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 1863, 0, 0, 1884, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 1857, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1845, 0, 0, 3248, 3249, 0, 0, 0, 0, 3255,
	0, 1135, 112, 0, 0, 0, 1852, 1853, 1854, 1855,
	1850, 0, 0, 0, 0, 0, 1835, 0, 3269, 3270,
	0, 1867, 1850, 0, 2639, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 4171, 0, 1878, 0,
	0, 0, 0, 0, 1863, 1857, 1859, 0, 1863, 3279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 0, 3293, 1880, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 112, 0, 1880, 0,
	0, 0, 3305, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 1269, 0, 0, 0,
	269, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 269, 1998, 269, 0,
	0, 0, 0, 0, 0, 1851, 833, 0, 0, 1876,
	0, 0, 0, 833, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 1072, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 1092, 0, 0, 0, 1880,
	0, 269, 0, 0, 2769, 2769, 2769, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1976,
	0, 0, 0, 1882, 0, 0, 0, 3398, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 1256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 1323, 1869, 1323, 1323, 0, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 0, 1097, 1882, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 903, 3523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 1867, 269,
	0, 0, 0, 833, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 3574, 3575, 0,
	0, 0, 0, 3781, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 1655,
	1656, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 269, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2729, 2730, 2731, 2732, 2725, 2726,
	2727, 2728, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 1772, 269, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 833,
	269, 0, 269, 0, 269, 0, 269, 750, 269, 0,
	99, 0, 0, 0, 0, 2705, 2706, 2707, 2708, 0,
	0, 0, 0, 0, 0, 0, 1273, 733, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 2717, 2718,
	2719, 2720, 2713, 2714, 2715, 2716, 2721, 2722, 2723, 2724,
	269, 269, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 102, 0, 0,
	106, 735, 0, 0, 0, 0, 0, 0, 0, 2509,
	0, 0, 736, 0, 0, 3765, 3766, 0, 0, 3769,
	0, 0, 0, 3772, 0, 0, 238, 0, 0, 0,
	0, 0, 3776, 737, 904, 0, 0, 0, 0, 153,
	0, 3783, 0, 0, 0, 0, 3398, 2701, 2702, 2703,
	2704, 2709, 2710, 2711, 2712, 756, 0, 0, 0, 0,
	0, 3796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 738, 0, 0, 0,
	0, 3819, 3820, 0, 3821, 3822, 3823, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 157,
	0, 739, 3829, 0, 0, 0, 3831, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 740, 0, 0, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 3860,
	3861, 0, 0, 0, 765, 233, 2014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3872, 0, 0,
	0, 0, 2025, 0, 1517, 0, 0, 0, 0, 755,
	0, 0, 3881, 1649, 112, 0, 112, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 1323, 1269, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 1858, 269, 0, 0, 0, 0, 752, 1830, 0,
	1092, 112, 112, 0, 1273, 0, 1273, 1877, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 112, 0, 112,
	0, 1273, 0, 0, 1883, 3937, 0, 0, 0, 0,
	0, 0, 112, 1829, 112, 0, 0, 0, 0, 0,
	0, 0, 2062, 1849, 3949, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 762,
	0, 743, 0, 0, 0, 0, 3978, 0, 269, 0,
	0, 269, 0, 0, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 0, 269, 269, 0, 0, 0, 112,
	763, 0, 744, 0, 269, 0, 0, 0, 0, 0,
	0, 3999, 4000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 764, 0, 1273, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 760, 761, 758, 0,
	0, 269, 0, 0, 753, 0, 0, 746, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 1868,
	0, 0, 1878, 0, 0, 0, 0, 0, 269, 1857,
	1859, 0, 0, 0, 0, 0, 1072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 754, 0, 0, 1844, 1845, 0, 1897, 0, 748,
	0, 0, 1976, 0, 0, 269, 0, 0, 0, 0,
	0, 4100, 1866, 749, 0, 1903, 0, 0, 757, 1909,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 1827,
	1828, 0, 766, 2305, 0, 0, 0, 2312, 833, 0,
	0, 0, 0, 751, 0, 0, 0, 0, 0, 2325,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 1830,
	0, 1273, 1273, 0, 0, 2337, 0, 2337, 269, 0,
	833, 1273, 0, 2344, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 1883, 4143, 4144, 0, 0,
	0, 0, 4148, 4149, 1829, 0, 0, 4152, 4153, 0,
	0, 0, 0, 1880, 1849, 4157, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 4161, 0, 2312, 0,
	0, 2372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 4166, 0, 0, 0, 0, 0, 0, 1996,
	0, 1999, 2392, 112, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 0, 0, 0, 2408, 0, 2410, 1856,
	2412, 0, 2414, 269, 2415, 0, 0, 0, 0, 3254,
	0, 0, 0, 0, 0, 0, 1273, 0, 1273, 0,
	1273, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 1853, 1854, 1855, 0, 0, 0, 1273, 1273,
	0, 1835, 0, 0, 0, 0, 2442, 2443, 2444, 1869,
	0, 1273, 0, 0, 0, 269, 269, 269, 269, 0,
	0, 0, 0, 1273, 269, 1273, 1273, 1273, 0, 269,
	0, 0, 0, 0, 0, 1827, 1828, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 1859, 0, 0, 0, 0, 0, 0, 1858, 0,
	269, 0, 0, 0, 0, 1830, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 1844, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	1849, 0, 1867, 0, 0, 0, 0, 0, 0, 1846,
	0, 4303, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 2062, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3247, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 2826, 1273,
	0, 0, 0, 0, 0, 0, 1857, 1859, 0, 0,
	0, 0, 0, 1851, 4421, 4422, 4423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 0, 0, 0, 0, 2509, 0, 0,
	4432, 4433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4441, 4444,
	0, 0, 1273, 0, 1850, 0, 0, 0, 0, 1273,
	0, 1882, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 1092, 0, 1092, 2877, 0, 0, 1323, 1269, 0,
	0, 1323, 0, 1323, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 73, 1269, 0, 0, 0, 0, 0,
	2325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4498, 0, 0, 0, 1998, 0, 79, 0, 0, 4506,
	1880, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 4514, 0, 0, 1097, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0,
	4523, 0, 0, 4525, 0, 112, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 269, 269, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 1851,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 110, 0, 0, 0, 0, 0, 94, 107,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 1072, 0, 0, 1072, 1072, 0, 0, 0, 0,
	0, 0, 269, 269, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 1882, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 2312, 0, 0, 0, 95, 0,
	0, 0, 0, 2325, 0, 0, 0, 0, 0, 0,
	2577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1903, 0, 0, 0, 1903, 0, 0, 0, 0, 4648,
	0, 0, 0, 4652, 0, 0, 0, 3162, 0, 0,
	0, 0, 0, 1847, 1843, 269, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 3173, 0, 3176, 0,
	0, 0, 0, 833, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 1256, 0, 0,
	0, 0, 0, 1273, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 1273, 0, 1273, 1097,
	1097, 3208, 1517, 3210, 1517, 0, 99, 0, 0, 4723,
	3216, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1323, 0, 2509, 0,
	0, 0, 0, 0, 3245, 0, 0, 4444, 0, 0,
	0, 0, 190, 102, 0, 0, 106, 0, 0, 0,
	0, 0, 269, 0, 269, 0, 0, 0, 0, 0,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	904, 0, 1864, 1858, 0, 153, 1097, 0, 0, 0,
	1830, 269, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	240, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4842, 4842, 4842, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 4866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 1852, 1853, 1854, 1855, 271, 271, 271, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 1269, 4842, 0,
	0, 0, 0, 0, 0, 271, 0, 112, 0, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 1857, 1859, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 1875,
	750, 0, 0, 0, 0, 0, 1844, 1845, 112, 0,
	0, 112, 0, 833, 0, 0, 0, 112, 0, 0,
	733, 0, 0, 0, 1866, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3446, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 4842, 4996, 0, 0,
	0, 0, 0, 0, 5000, 1876, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 737, 0, 1273, 1273,
	0, 0, 0, 1323, 1865, 0, 0, 1517, 1517, 0,
	0, 0, 0, 0, 1273, 1880, 0, 0, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 269, 0, 0, 0, 0, 3492, 738,
	0, 0, 0, 0, 1273, 0, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 0, 2062,
	0, 1856, 0, 1273, 0, 0, 0, 269, 3540, 3542,
	0, 0, 2325, 0, 0, 0, 0, 740, 269, 0,
	741, 0, 0, 0, 1851, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 269, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 269, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	2577, 0, 755, 0, 0, 0, 0, 0, 1269, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 1903, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 853, 0, 3653, 0,
	0, 0, 3657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 1867, 0, 855, 0, 0, 0,
	0, 856, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3317,
	0, 0, 0, 0, 743, 0, 1273, 0, 0, 0,
	857, 0, 874, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 1273, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 763, 1273, 744, 0, 858, 0, 0,
	0, 0, 859, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 883, 0, 0, 0, 3750, 1269,
	1517, 860, 0, 0, 1273, 0, 764, 0, 0, 0,
	0, 0, 0, 1998, 745, 881, 0, 0, 0, 760,
	761, 758, 0, 1256, 0, 0, 0, 753, 0, 1273,
	746, 0, 0, 0, 0, 0, 0, 3763, 0, 1256,
	854, 1273, 0, 1273, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 0, 862, 1998, 0, 1998,
	0, 0, 747, 0, 754, 0, 0, 0, 885, 0,
	0, 0, 748, 765, 0, 0, 0, 0, 0, 269,
	1273, 0, 0, 1273, 0, 0, 749, 0, 0, 0,
	0, 757, 0, 0, 0, 269, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 879, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 112,
	112, 269, 112, 0, 0, 0, 0, 2062, 2062, 0,
	0, 269, 271, 0, 271, 271, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 2062, 2062, 0, 863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	865, 0, 0, 112, 112, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 1416, 271, 271, 2062,
	0, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 866, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 1273, 1273, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 0, 0, 0,
	875, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 0, 1151, 0, 0, 0, 0,
	0, 0, 1273, 825, 0, 852, 0, 876, 0, 0,
	0, 271, 271, 0, 0, 0, 867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 1416, 271, 271, 1256,
	0, 873, 1092, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 1416, 0, 0, 0, 112, 112, 868, 0,
	0, 0, 869, 888, 0, 887, 0, 0, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 871, 0, 2325, 0, 0, 880, 0, 0,
	0, 0, 0, 889, 0, 886, 0, 0, 0, 0,
	0, 766, 0, 2325, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 4054, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 4064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2325,
	0, 0, 271, 0, 4082, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 1273,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 4128, 0,
	0, 0, 0, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	1273, 1273, 0, 0, 0, 0, 1273, 1273, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 112, 1273, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1256, 1256, 0, 0, 0, 0, 0, 0, 0,
	269, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 1998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 269, 1998, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	271, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 4281, 0, 0, 0, 1273,
	0, 0, 0, 1273, 1273, 271, 1273, 0, 0, 0,
	0, 2325, 271, 1273, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 1273, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2325, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 4381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 112, 1273, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 1416, 1416, 271, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 1273, 1273, 1273, 1273, 1273,
	0, 0, 0, 0, 1998, 0, 1998, 0, 0, 0,
	1273, 0, 0, 0, 1827, 1828, 1413, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4483, 0, 0, 1864, 1858, 0, 0,
	1273, 271, 0, 0, 1830, 271, 0, 0, 0, 0,
	0, 271, 0, 1877, 0, 0, 0, 271, 0, 0,
	0, 2062, 0, 1575, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 271, 0, 271, 0, 0, 0, 1829,
	0, 271, 0, 1273, 0, 1273, 0, 0, 0, 1849,
	1416, 0, 1416, 0, 1416, 0, 0, 0, 1846, 0,
	112, 0, 2325, 0, 0, 0, 1256, 0, 0, 1575,
	0, 1414, 1416, 1416, 1256, 0, 1575, 1273, 0, 0,
	0, 0, 0, 0, 0, 1416, 271, 0, 0, 271,
	0, 0, 1575, 0, 0, 0, 0, 1416, 0, 1416,
	1416, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 2062, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 271, 271, 0, 271, 0, 271, 0,
	271, 0, 271, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 1273, 0,
	1575, 0, 0, 0, 0, 0, 0, 0, 0, 4612,
	1517, 0, 0, 0, 1576, 1273, 1273, 1273, 0, 0,
	0, 1576, 0, 0, 271, 271, 271, 271, 0, 0,
	0, 0, 0, 0, 0, 1868, 1273, 1576, 1878, 0,
	0, 0, 0, 112, 0, 1857, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 0, 0, 0, 0, 0, 1273,
	1844, 1845, 1273, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 112, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 1880,
	0, 1273, 4729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	1273, 1273, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 4781, 0, 0, 271, 0, 0, 1416,
	0, 0, 0, 0, 1273, 0, 0, 1273, 0, 0,
	0, 1273, 0, 0, 0, 1869, 0, 271, 0, 0,
	0, 1273, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 0, 0, 1882, 825, 0, 0,
	0, 0, 0, 0, 4824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 271, 0, 0, 0, 271,
	0, 271, 0, 0, 0, 0, 0, 0, 271, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 1416, 0, 1413,
	0, 0, 0, 3316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 2577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1575, 0, 0, 0,
	0, 0, 271, 0, 271, 1413, 112, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 112, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 271, 0, 0, 0,
	1576, 1576, 0, 0, 0, 0, 0, 271, 0, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 1575, 0, 1575, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 1575, 1575, 0, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 0, 1575, 0, 1830, 0, 271,
	271, 271, 271, 0, 0, 0, 1877, 1575, 271, 1575,
	1575, 1575, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 825, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 271, 0, 0, 0, 0, 0,
	112, 1846, 271, 0, 0, 1576, 112, 1576, 0, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1576, 0, 1576, 1576, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 1868, 0,
	0, 1878, 0, 1830, 0, 0, 0, 0, 1857, 1859,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 1875, 0, 0, 1883,
	0, 0, 0, 1844, 1845, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1866, 0, 1413, 0, 1414, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 1852, 1853, 1854, 1855, 0,
	0, 0, 1880, 1416, 0, 1835, 0, 0, 1414, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 1878, 0, 0,
	0, 1416, 0, 0, 1857, 1859, 0, 0, 1856, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1875, 0, 0, 0, 0, 1416, 1414, 1844,
	1845, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 271, 0, 0, 1414, 271, 271, 0, 1869, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 271, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 1416, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0,
	1413, 0, 0, 0, 1856, 0, 3313, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 1416, 0, 1416, 0, 0, 0,
	1416, 0, 0, 0, 1869, 0, 0, 271, 1416, 0,
	0, 0, 0, 0, 825, 0, 271, 0, 0, 1416,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 1414, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 1416, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 0, 1416, 0, 271, 1416, 271, 0,
	1827, 1828, 1576, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 1576, 0, 1576, 0, 0,
	0, 0, 1864, 1858, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 1576, 271, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 1857, 1859, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 1875,
	0, 0, 0, 0, 0, 163, 1844, 1845, 0, 0,
	0, 0, 0, 73, 0, 46, 45, 271, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	74, 0, 0, 158, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 48, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 1876, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 68, 1880, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 161, 0, 0, 0, 1413, 271, 0, 0,
	49, 0, 110, 0, 0, 0, 0, 0, 94, 107,
	0, 1413, 0, 1416, 0, 0, 1416, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 271, 0, 1851, 0, 0, 0, 1414, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 271, 0, 0, 0, 0, 271, 0, 0,
	0, 1869, 271, 0, 0, 0, 0, 0, 1416, 0,
	0, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 1882, 1416, 1416, 1416, 0, 0, 0, 0,
	1416, 1416, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 271, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 3312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 0, 1575, 0, 0, 56,
	1413, 0, 0, 0, 59, 0, 0, 825, 1575, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 1575,
	0, 58, 190, 102, 0, 0, 106, 0, 0, 0,
	54, 0, 1414, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 0, 0, 1416, 1416, 0,
	1416, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	62, 0, 0, 0, 0, 153, 0, 0, 1416, 1416,
	0, 0, 0, 1575, 0, 1576, 0, 0, 0, 0,
	159, 1416, 0, 0, 0, 1575, 0, 1575, 0, 1576,
	271, 1576, 0, 0, 0, 1414, 0, 0, 0, 0,
	240, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 271, 1413, 0, 0, 1413, 0, 0,
	194, 0, 0, 0, 0, 0, 1416, 0, 239, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 1416, 0, 1576, 0,
	0, 233, 0, 0, 0, 0, 271, 0, 0, 0,
	1576, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 3, 0, 1416, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 1413, 1414, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 271, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 1416,
	1416, 1416, 1416, 1416, 0, 0, 0, 981, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 996, 0, 979, 978, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 1414, 998, 0, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 983, 0,
	0, 0, 0, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 993, 994, 0, 0, 0, 0, 0, 0,
	0, 1011, 0, 0, 0, 0, 1413, 1416, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1023,
	985, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 987,
	0, 271, 0, 0, 0, 0, 0, 0, 1020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 1416, 0, 977, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	1416, 1416, 0, 990, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 999, 997, 0, 0, 0, 0, 0, 0, 992,
	0, 0, 0, 1008, 0, 0, 1028, 1027, 0, 0,
	0, 0, 0, 1575, 0, 0, 1575, 0, 0, 0,
	0, 1030, 1019, 1416, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1024, 0, 0, 0, 271, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 984,
	0, 1576, 1032, 1575, 1575, 1575, 0, 0, 0, 0,
	1575, 1575, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 0, 1015,
	1016, 0, 1575, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 1018, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1413, 0, 1025, 1013, 0,
	0, 0, 0, 1576, 0, 0, 1031, 1009, 0, 0,
	1002, 1000, 0, 1005, 0, 0, 0, 0, 0, 1006,
	0, 0, 975, 0, 1026, 0, 0, 0, 1576, 1576,
	1576, 0, 0, 0, 0, 1576, 1576, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 0, 0,
	271, 0, 0, 0, 0, 1416, 0, 1576, 1017, 0,
	1007, 0, 0, 1414, 0, 1416, 1004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 0,
	1414, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 1413, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 1014, 0, 0, 0, 0, 1575, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 1414, 0, 1414, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 1576, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 0, 1575, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 1858, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 1413, 0, 0, 0, 1883, 1575,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 1414, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 1575, 1575,
	1575, 1575, 1575, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 1576,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 1413, 0, 1575,
	0, 0, 0, 1576, 1576, 1576, 1576, 1576, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 1868, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 1857, 1859, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 1875, 0, 0, 0, 0, 0, 0, 1844, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 1414, 0, 1576, 0, 0, 0, 0, 0,
	0, 1850, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1575, 1575, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 1575, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 1576, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 0,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1841, 1842, 1848, 1870,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 279, 281, 280, 282, 283, 284, 285, 1417, 286,
	287, 1418, 1419, 1420, 0, 1421, 645, 1422, 1423, 1424,
	1425, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 1426, 650, 298,
	299, 300, 301, 302, 303, 1427, 1428, 0, 304, 651,
	652, 653, 1429, 305, 306, 654, 1430, 1497, 1431, 307,
	308, 309, 310, 311, 312, 313, 0, 1432, 315, 316,
	317, 314, 318, 1433, 319, 0, 320, 321, 322, 323,
	324, 325, 1434, 326, 327, 328, 1214, 329, 330, 331,
	1435, 1436, 1438, 1437, 1439, 1440, 1441, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 1442, 342, 338,
	340, 1443, 343, 341, 344, 1444, 345, 346, 347, 1445,
	1446, 348, 349, 350, 1447, 351, 352, 353, 1448, 354,
	355, 356, 1449, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	1450, 276, 1451, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 1452, 375, 376, 377, 1453,
	1454, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1455, 390, 663, 1456,
	664, 391, 1457, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 1458, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1459, 1216,
	407, 668, 669, 1460, 670, 1461, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1462, 420, 422, 421, 1463,
	423, 672, 1221, 424, 425, 1222, 1464, 426, 427, 428,
	429, 430, 431, 434, 1465, 1466, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1467, 278, 1225, 477, 478, 479,
	1468, 673, 480, 674, 482, 483, 1469, 0, 484, 0,
	1470, 1471, 486, 487, 488, 1472, 1473, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1474, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 1475, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 1476,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 1477, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 1478, 569,
	570, 568, 571, 572, 573, 1479, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 1480, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	1481, 601, 602, 0, 598, 589, 1482, 603, 604, 605,
	606, 607, 608, 609, 610, 1483, 611, 686, 687, 688,
	689, 1484, 620, 1485, 612, 613, 614, 690, 615, 691,
	1486, 616, 617, 618, 619, 0, 621, 622, 1487, 1488,
	623, 624, 625, 627, 628, 626, 629, 1489, 630, 1490,
	0, 631, 632, 633, 692, 693, 694, 1491, 635, 634,
	636, 637, 695, 638, 639, 1492, 1493, 1494, 1495, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 2804, 0, 0, 0, 0, 0, 0,
	0, 2805, 279, 281, 280, 282, 283, 284, 285, 1417,
	286, 287, 1418, 1419, 1420, 0, 1421, 645, 1422, 1423,
	1424, 1425, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 1426, 650,
	298, 299, 300, 301, 302, 303, 1427, 1428, 0, 304,
	651, 652, 653, 1429, 305, 306, 654, 1430, 1497, 1431,
	307, 308, 309, 310, 311, 312, 313, 0, 1432, 315,
	316, 317, 314, 318, 1433, 319, 0, 320, 321, 322,
	323, 324, 325, 1434, 326, 327, 328, 1214, 329, 330,
	331, 1435, 1436, 1438, 1437, 1439, 1440, 1441, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 1442, 342,
	338, 340, 1443, 343, 341, 344, 1444, 345, 346, 347,
	1445, 1446, 348, 349, 350, 1447, 351, 352, 353, 1448,
	354, 355, 356, 1449, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 1450, 276, 1451, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 1452, 375, 376, 377,
	1453, 1454, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1455, 390, 663,
	1456, 664, 391, 1457, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 1458, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1459,
	1216, 407, 668, 669, 1460, 670, 1461, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1462, 420, 422, 421,
	1463, 423, 672, 1221, 424, 425, 1222, 1464, 426, 427,
	428, 429, 430, 431, 434, 1465, 1466, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1467, 278, 1225, 477, 478,
	479, 1468, 673, 480, 674, 482, 483, 1469, 0, 484,
	0, 1470, 1471, 486, 487, 488, 1472, 1473, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1474, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 1475, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	1476, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1477, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1478,
	569, 570, 568, 571, 572, 573, 1479, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 1480, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 1481, 601, 602, 0, 598, 589, 1482, 603, 604,
	605, 606, 607, 608, 609, 610, 1483, 611, 686, 687,
	688, 689, 1484, 620, 1485, 612, 613, 614, 690, 615,
	691, 1486, 616, 617, 618, 619, 0, 621, 622, 1487,
	1488, 623, 624, 625, 627, 628, 626, 629, 1489, 630,
	1490, 0, 631, 632, 633, 692, 693, 694, 1491, 635,
	634, 636, 637, 695, 638, 639, 1492, 1493, 1494, 1495,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 3790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3792, 279, 281, 280, 282, 283, 284, 285, 1417, 286,
	287, 1418, 1419, 1420, 0, 1421, 645, 1422, 1423, 1424,
	1425, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 1426, 650, 298,
	299, 300, 301, 302, 303, 1427, 1428, 0, 304, 651,
	652, 653, 1429, 305, 306, 654, 1430, 1497, 1431, 307,
	308, 309, 310, 311, 312, 313, 0, 1432, 315, 316,
	317, 314, 318, 1433, 319, 0, 320, 321, 322, 323,
	324, 325, 1434, 326, 327, 328, 1214, 329, 330, 331,
	1435, 1436, 1438, 1437, 1439, 1440, 1441, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 1442, 342, 338,
	340, 1443, 343, 341, 344, 1444, 345, 346, 347, 1445,
	1446, 348, 349, 350, 1447, 351, 352, 353, 1448, 354,
	355, 356, 1449, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	1450, 276, 1451, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 1452, 375, 376, 377, 1453,
	1454, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1455, 390, 663, 1456,
	664, 391, 1457, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 1458, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1459, 1216,
	407, 668, 669, 1460, 670, 1461, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1462, 420, 422, 421, 1463,
	423, 672, 1221, 424, 425, 1222, 1464, 426, 427, 428,
	429, 430, 431, 434, 1465, 1466, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1467, 278, 1225, 477, 478, 479,
	1468, 673, 480, 674, 482, 483, 1469, 0, 484, 0,
	1470, 1471, 486, 487, 488, 1472, 1473, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1474, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 1475, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 1476,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 1477, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 1478, 569,
	570, 568, 571, 572, 573, 1479, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 1480, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	1481, 601, 602, 0, 598, 589, 1482, 603, 604, 605,
	606, 607, 608, 609, 610, 1483, 611, 686, 687, 688,
	689, 1484, 620, 1485, 612, 613, 614, 690, 615, 691,
	1486, 616, 617, 618, 619, 0, 621, 622, 1487, 1488,
	623, 624, 625, 627, 628, 626, 629, 1489, 630, 1490,
	0, 631, 632, 633, 692, 693, 694, 1491, 635, 634,
	636, 637, 695, 638, 639, 1492, 1493, 1494, 1495, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4201, 279, 281, 280, 282, 283, 284,
	285, 1417, 286, 287, 1418, 1419, 1420, 0, 1421, 645,
	1422, 1423, 1424, 1425, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	1426, 650, 298, 299, 300, 301, 302, 303, 1427, 1428,
	0, 304, 651, 652, 653, 1429, 305, 306, 654, 1430,
	1497, 1431, 307, 308, 309, 310, 311, 312, 313, 0,
	1432, 315, 316, 317, 314, 318, 1433, 319, 0, 320,
	321, 322, 323, 324, 325, 1434, 326, 327, 328, 1214,
	329, 330, 331, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	1442, 342, 338, 340, 1443, 343, 341, 344, 1444, 345,
	346, 347, 1445, 1446, 348, 349, 350, 1447, 351, 352,
	353, 1448, 354, 355, 356, 1449, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 1450, 276, 1451, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 1452, 375,
	376, 377, 1453, 1454, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1455,
	390, 663, 1456, 664, 391, 1457, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 1458, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1459, 1216, 407, 668, 669, 1460, 670, 1461, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1462, 420,
	422, 421, 1463, 423, 672, 1221, 424, 425, 1222, 1464,
	426, 427, 428, 429, 430, 431, 434, 1465, 1466, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1467, 278, 1225,
	477, 478, 479, 1468, 673, 480, 674, 482, 483, 1469,
	0, 484, 0, 1470, 1471, 486, 487, 488, 1472, 1473,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1474,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 1475, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 1476, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 1477, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 1478, 569, 570, 568, 571, 572, 573, 1479, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 1480, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 1481, 601, 602, 0, 598, 589, 1482,
	603, 604, 605, 606, 607, 608, 609, 610, 1483, 611,
	686, 687, 688, 689, 1484, 620, 1485, 612, 613, 614,
	690, 615, 691, 1486, 616, 617, 618, 619, 0, 621,
	622, 1487, 1488, 623, 624, 625, 627, 628, 626, 629,
	1489, 630, 1490, 0, 631, 632, 633, 692, 693, 694,
	1491, 635, 634, 636, 637, 695, 638, 639, 1492, 1493,
	1494, 1495, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4199, 279, 281, 280,
	282, 283, 284, 285, 1417, 286, 287, 1418, 1419, 1420,
	0, 1421, 645, 1422, 1423, 1424, 1425, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 1426, 650, 298, 299, 300, 301, 302,
	303, 1427, 1428, 0, 304, 651, 652, 653, 1429, 305,
	306, 654, 1430, 1497, 1431, 307, 308, 309, 310, 311,
	312, 313, 0, 1432, 315, 316, 317, 314, 318, 1433,
	319, 0, 320, 321, 322, 323, 324, 325, 1434, 326,
	327, 328, 1214, 329, 330, 331, 1435, 1436, 1438, 1437,
	1439, 1440, 1441, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 1442, 342, 338, 340, 1443, 343, 341,
	344, 1444, 345, 346, 347, 1445, 1446, 348, 349, 350,
	1447, 351, 352, 353, 1448, 354, 355, 356, 1449, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 1450, 276, 1451, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 1452, 375, 376, 377, 1453, 1454, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1455, 390, 663, 1456, 664, 391, 1457, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 1458, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1459, 1216, 407, 668, 669, 1460,
	670, 1461, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1462, 420, 422, 421, 1463, 423, 672, 1221, 424,
	425, 1222, 1464, 426, 427, 428, 429, 430, 431, 434,
	1465, 1466, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1467, 278, 1225, 477, 478, 479, 1468, 673, 480, 674,
	482, 483, 1469, 0, 484, 0, 1470, 1471, 486, 487,
	488, 1472, 1473, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1474, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 1475, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 1476, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 1477,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 1478, 569, 570, 568, 571, 572,
	573, 1479, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 1480,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 1481, 601, 602, 0,
	598, 589, 1482, 603, 604, 605, 606, 607, 608, 609,
	610, 1483, 611, 686, 687, 688, 689, 1484, 620, 1485,
	612, 613, 614, 690, 615, 691, 1486, 616, 617, 618,
	619, 0, 621, 622, 1487, 1488, 623, 624, 625, 627,
	628, 626, 629, 1489, 630, 1490, 0, 631, 632, 633,
	692, 693, 694, 1491, 635, 634, 636, 637, 695, 638,
	639, 1492, 1493, 1494, 1495, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4427, 279, 281, 280, 282, 283, 284,
	285, 1417, 286, 287, 1418, 1419, 1420, 0, 1421, 645,
	1422, 1423, 1424, 1425, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	1426, 650, 298, 299, 300, 301, 302, 303, 1427, 1428,
	0, 304, 651, 652, 653, 1429, 305, 306, 654, 1430,
	1497, 1431, 307, 308, 309, 310, 311, 312, 313, 0,
	1432, 315, 316, 317, 314, 318, 1433, 319, 0, 320,
	321, 322, 323, 324, 325, 1434, 326, 327, 328, 1214,
	329, 330, 331, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	1442, 342, 338, 340, 1443, 343, 341, 344, 1444, 345,
	346, 347, 1445, 1446, 348, 349, 350, 1447, 351, 352,
	353, 1448, 354, 355, 356, 1449, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 1450, 276, 1451, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 1452, 375,
	376, 377, 1453, 1454, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1455,
	390, 663, 1456, 664, 391, 1457, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 1458, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1459, 1216, 407, 668, 669, 1460, 670, 1461, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1462, 420,
	422, 421, 1463, 423, 672, 1221, 424, 425, 1222, 1464,
	426, 427, 428, 429, 430, 431, 434, 1465, 1466, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1467, 278, 1225,
	477, 478, 479, 1468, 673, 480, 674, 482, 483, 1469,
	0, 484, 0, 1470, 1471, 486, 487, 488, 1472, 1473,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1474,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 1475, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 1476, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 1477, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 1478, 569, 570, 568, 571, 572, 573, 1479, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 1480, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 1481, 601, 602, 0, 598, 589, 1482,
	603, 604, 605, 606, 607, 608, 609, 610, 1483, 611,
	686, 687, 688, 689, 1484, 620, 1485, 612, 613, 614,
	690, 615, 691, 1486, 616, 617, 618, 619, 0, 621,
	622, 1487, 1488, 623, 624, 625, 627, 628, 626, 629,
	1489, 630, 1490, 0, 631, 632, 633, 692, 693, 694,
	1491, 635, 634, 636, 637, 695, 638, 639, 1492, 1493,
	1494, 1495, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4290, 279, 281, 280, 282, 283, 284, 285, 1417, 286,
	287, 1418, 1419, 1420, 0, 1421, 645, 1422, 1423, 1424,
	1425, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 1426, 650, 298,
	299, 300, 301, 302, 303, 1427, 1428, 0, 304, 651,
	652, 653, 1429, 305, 306, 654, 1430, 1497, 1431, 307,
	308, 309, 310, 311, 312, 313, 0, 1432, 315, 316,
	317, 314, 318, 1433, 319, 0, 320, 321, 322, 323,
	324, 325, 1434, 326, 327, 328, 1214, 329, 330, 331,
	1435, 1436, 1438, 1437, 1439, 1440, 1441, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 1442, 342, 338,
	340, 1443, 343, 341, 344, 1444, 345, 346, 347, 1445,
	1446, 348, 349, 350, 1447, 351, 352, 353, 1448, 354,
	355, 356, 1449, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	1450, 276, 1451, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 1452, 375, 376, 377, 1453,
	1454, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1455, 390, 663, 1456,
	664, 391, 1457, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 1458, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1459, 1216,
	407, 668, 669, 1460, 670, 1461, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1462, 420, 422, 421, 1463,
	423, 672, 1221, 424, 425, 1222, 1464, 426, 427, 428,
	429, 430, 431, 434, 1465, 1466, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1467, 278, 1225, 477, 478, 479,
	1468, 673, 480, 674, 482, 483, 1469, 0, 484, 0,
	1470, 1471, 486, 487, 488, 1472, 1473, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1474, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 1475, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 1476,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 1477, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 1478, 569,
	570, 568, 571, 572, 573, 1479, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 1480, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	1481, 601, 602, 0, 598, 589, 1482, 603, 604, 605,
	606, 607, 608, 609, 610, 1483, 611, 686, 687, 688,
	689, 1484, 620, 1485, 612, 613, 614, 690, 615, 691,
	1486, 616, 617, 618, 619, 0, 621, 622, 1487, 1488,
	623, 624, 625, 627, 628, 626, 629, 1489, 630, 1490,
	0, 631, 632, 633, 692, 693, 694, 1491, 635, 634,
	636, 637, 695, 638, 639, 1492, 1493, 1494, 1495, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4129, 279, 281,
	280, 282, 283, 284, 285, 1417, 286, 287, 1418, 1419,
	1420, 0, 1421, 645, 1422, 1423, 1424, 1425, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 1426, 650, 298, 299, 300, 301,
	302, 303, 1427, 1428, 0, 304, 651, 652, 653, 1429,
	305, 306, 654, 1430, 1497, 1431, 307, 308, 309, 310,
	311, 312, 313, 0, 1432, 315, 316, 317, 314, 318,
	1433, 319, 0, 320, 321, 322, 323, 324, 325, 1434,
	326, 327, 328, 1214, 329, 330, 331, 1435, 1436, 1438,
	1437, 1439, 1440, 1441, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 1442, 342, 338, 340, 1443, 343,
	341, 344, 1444, 345, 346, 347, 1445, 1446, 348, 349,
	350, 1447, 351, 352, 353, 1448, 354, 355, 356, 1449,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 1450, 276, 1451,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 1452, 375, 376, 377, 1453, 1454, 1215, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1455, 390, 663, 1456, 664, 391, 1457,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 1217,
	397, 398, 1458, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1459, 1216, 407, 668, 669,
	1460, 670, 1461, 408, 409, 1218, 671, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1462, 420, 422, 421, 1463, 423, 672, 1221,
	424, 425, 1222, 1464, 426, 427, 428, 429, 430, 431,
	434, 1465, 1466, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1467, 278, 1225, 477, 478, 479, 1468, 673, 480,
	674, 482, 483, 1469, 0, 484, 0, 1470, 1471, 486,
	487, 488, 1472, 1473, 489, 490, 675, 1226, 491, 1227,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 1474, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 1475,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 1476, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	1477, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 1478, 569, 570, 568, 571,
	572, 573, 1479, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	1480, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 1481, 601, 602,
	0, 598, 589, 1482, 603, 604, 605, 606, 607, 608,
	609, 610, 1483, 611, 686, 687, 688, 689, 1484, 620,
	1485, 612, 613, 614, 690, 615, 691, 1486, 616, 617,
	618, 619, 0, 621, 622, 1487, 1488, 623, 624, 625,
	627, 628, 626, 629, 1489, 630, 1490, 0, 631, 632,
	633, 692, 693, 694, 1491, 635, 634, 636, 637, 695,
	638, 639, 1492, 1493, 1494, 1495, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3808, 279, 281, 280, 282, 283,
	284, 285, 1417, 286, 287, 1418, 1419, 1420, 0, 1421,
	645, 1422, 1423, 1424, 1425, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 1426, 650, 298, 299, 300, 301, 302, 303, 1427,
	1428, 0, 304, 651, 652, 653, 1429, 305, 306, 654,
	1430, 1497, 1431, 307, 308, 309, 310, 311, 312, 313,
	0, 1432, 315, 316, 317, 314, 318, 1433, 319, 0,
	320, 321, 322, 323, 324, 325, 1434, 326, 327, 328,
	1214, 329, 330, 331, 1435, 1436, 1438, 1437, 1439, 1440,
	1441, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 1442, 342, 338, 340, 1443, 343, 341, 344, 1444,
	345, 346, 347, 1445, 1446, 348, 349, 350, 1447, 351,
	352, 353, 1448, 354, 355, 356, 1449, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 1450, 276, 1451, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 1452,
	375, 376, 377, 1453, 1454, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1455, 390, 663, 1456, 664, 391, 1457, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 1458,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1459, 1216, 407, 668, 669, 1460, 670, 1461,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1462,
	420, 422, 421, 1463, 423, 672, 1221, 424, 425, 1222,
	1464, 426, 427, 428, 429, 430, 431, 434, 1465, 1466,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1467, 278,
	1225, 477, 478, 479, 1468, 673, 480, 674, 482, 483,
	1469, 0, 484, 0, 1470, 1471, 486, 487, 488, 1472,
	1473, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1474, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 1475, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 1476, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 1477, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 1478, 569, 570, 568, 571, 572, 573, 1479,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 1480, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 1481, 601, 602, 0, 598, 589,
	1482, 603, 604, 605, 606, 607, 608, 609, 610, 1483,
	611, 686, 687, 688, 689, 1484, 620, 1485, 612, 613,
	614, 690, 615, 691, 1486, 616, 617, 618, 619, 0,
	621, 622, 1487, 1488, 623, 624, 625, 627, 628, 626,
	629, 1489, 630, 1490, 0, 631, 632, 633, 692, 693,
	694, 1491, 635, 634, 636, 637, 695, 638, 639, 1492,
	1493, 1494, 1495, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3626, 279, 281, 280, 282, 283, 284, 285, 1417,
	286, 287, 1418, 1419, 1420, 0, 1421, 645, 1422, 1423,
	1424, 1425, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 1426, 650,
	298, 299, 300, 301, 302, 303, 1427, 1428, 0, 304,
	651, 652, 653, 1429, 305, 306, 654, 1430, 1497, 1431,
	307, 308, 309, 310, 311, 312, 313, 0, 1432, 315,
	316, 317, 314, 318, 1433, 319, 0, 320, 321, 322,
	323, 324, 325, 1434, 326, 327, 328, 1214, 329, 330,
	331, 1435, 1436, 1438, 1437, 1439, 1440, 1441, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 1442, 342,
	338, 340, 1443, 343, 341, 344, 1444, 345, 346, 347,
	1445, 1446, 348, 349, 350, 1447, 351, 352, 353, 1448,
	354, 355, 356, 1449, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 1450, 276, 1451, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 1452, 375, 376, 377,
	1453, 1454, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1455, 390, 663,
	1456, 664, 391, 1457, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 1458, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1459,
	1216, 407, 668, 669, 1460, 670, 1461, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1462, 420, 422, 421,
	1463, 423, 672, 1221, 424, 425, 1222, 1464, 426, 427,
	428, 429, 430, 431, 434, 1465, 1466, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1467, 278, 1225, 477, 478,
	479, 1468, 673, 480, 674, 482, 483, 1469, 0, 484,
	0, 1470, 1471, 486, 487, 488, 1472, 1473, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1474, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 1475, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	1476, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1477, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1478,
	569, 570, 568, 571, 572, 573, 1479, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 1480, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 1481, 601, 602, 0, 598, 589, 1482, 603, 604,
	605, 606, 607, 608, 609, 610, 1483, 611, 686, 687,
	688, 689, 1484, 620, 1485, 612, 613, 614, 690, 615,
	691, 1486, 616, 617, 618, 619, 0, 621, 622, 1487,
	1488, 623, 624, 625, 627, 628, 626, 629, 1489, 630,
	1490, 0, 631, 632, 633, 692, 693, 694, 1491, 635,
	634, 636, 637, 695, 638, 639, 1492, 1493, 1494, 1495,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2659, 279,
	281, 280, 282, 283, 284, 285, 1417, 286, 287, 1418,
	1419, 1420, 0, 1421, 645, 1422, 1423, 1424, 1425, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1426, 650, 298, 299, 300,
	301, 302, 303, 1427, 1428, 0, 304, 651, 652, 653,
	1429, 305, 306, 654, 1430, 1497, 1431, 307, 308, 309,
	310, 311, 312, 313, 0, 1432, 315, 316, 317, 314,
	318, 1433, 319, 0, 320, 321, 322, 323, 324, 325,
	1434, 326, 327, 328, 1214, 329, 330, 331, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1442, 342, 338, 340, 1443,
	343, 341, 344, 1444, 345, 346, 347, 1445, 1446, 348,
	349, 350, 1447, 351, 352, 353, 1448, 354, 355, 356,
	1449, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1450, 276,
	1451, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 1452, 375, 376, 377, 1453, 1454, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1455, 390, 663, 1456, 664, 391,
	1457, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1458, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1459, 1216, 407, 668,
	669, 1460, 670, 1461, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1462, 420, 422, 421, 1463, 423, 672,
	1221, 424, 425, 1222, 1464, 426, 427, 428, 429, 430,
	431, 434, 1465, 1466, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1467, 278, 1225, 477, 478, 479, 1468, 673,
	480, 674, 482, 483, 1469, 0, 484, 0, 1470, 1471,
	486, 487, 488, 1472, 1473, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1474, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1475, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1476, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1477, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1478, 569, 570, 568,
	571, 572, 573, 1479, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1480, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1481, 601,
	602, 0, 598, 589, 1482, 603, 604, 605, 606, 607,
	608, 609, 610, 1483, 611, 686, 687, 688, 689, 1484,
	620, 1485, 612, 613, 614, 690, 615, 691, 1486, 616,
	617, 618, 619, 0, 621, 622, 1487, 1488, 623, 624,
	625, 627, 628, 626, 629, 1489, 630, 1490, 0, 631,
	632, 633, 692, 693, 694, 1491, 635, 634, 636, 637,
	695, 638, 639, 1492, 1493, 1494, 1495, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 1408, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2284, 279, 281, 280, 282,
	283, 284, 285, 1417, 286, 287, 1418, 1419, 1420, 0,
	1421, 645, 1422, 1423, 1424, 1425, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 1426, 650, 298, 299, 300, 301, 302, 303,
	1427, 1428, 0, 304, 651, 652, 653, 1429, 305, 306,
	654, 1430, 1497, 1431, 307, 308, 309, 310, 311, 312,
	313, 0, 1432, 315, 316, 317, 314, 318, 1433, 319,
	0, 320, 321, 322, 323, 324, 325, 1434, 326, 327,
	328, 1214, 329, 330, 331, 1435, 1436, 1438, 1437, 1439,
	1440, 1441, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 1442, 342, 338, 340, 1443, 343, 341, 344,
	1444, 345, 346, 347, 1445, 1446, 348, 349, 350, 1447,
	351, 352, 353, 1448, 354, 355, 356, 1449, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 1450, 276, 1451, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	1452, 375, 376, 377, 1453, 1454, 1215, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1455, 390, 663, 1456, 664, 391, 1457, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 1217, 397, 398,
	1458, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1459, 1216, 407, 668, 669, 1460, 670,
	1461, 408, 409, 1218, 671, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1462, 420, 422, 421, 1463, 423, 672, 1221, 424, 425,
	1222, 1464, 426, 427, 428, 429, 430, 431, 434, 1465,
	1466, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1467,
	278, 1225, 477, 478, 479, 1468, 673, 480, 674, 482,
	483, 1469, 0, 484, 0, 1470, 1471, 486, 487, 488,
	1472, 1473, 489, 490, 675, 1226, 491, 1227, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1474, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 1475, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 1476, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 1477, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 1478, 569, 570, 568, 571, 572, 573,
	1479, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 1480, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 1481, 601, 602, 0, 598,
	589, 1482, 603, 604, 605, 606, 607, 608, 609, 610,
	1483, 611, 686, 687, 688, 689, 1484, 620, 1485, 612,
	613, 614, 690, 615, 691, 1486, 616, 617, 618, 619,
	0, 621, 622, 1487, 1488, 623, 624, 625, 627, 628,
	626, 629, 1489, 630, 1490, 0, 631, 632, 633, 692,
	693, 694, 1491, 635, 634, 636, 637, 695, 638, 639,
	1492, 1493, 1494, 1495, 640, 641, 696, 642, 643, 644,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 1417, 286, 287, 1418, 1419, 1420,
	0, 1421, 645, 1422, 1423, 1424, 1425, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 1426, 650, 298, 299, 300, 301, 302,
	303, 1427, 1428, 0, 304, 651, 652, 653, 1429, 305,
	306, 654, 1430, 1497, 1431, 307, 308, 309, 310, 311,
	312, 313, 0, 1432, 315, 316, 317, 314, 318, 1433,
	319, 0, 320, 321, 322, 323, 324, 325, 1434, 326,
	327, 328, 1214, 329, 330, 331, 1435, 1436, 1438, 1437,
	1439, 1440, 1441, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 1442, 342, 338, 340, 1443, 343, 341,
	344, 1444, 345, 346, 347, 1445, 1446, 348, 349, 350,
	1447, 351, 352, 353, 1448, 354, 355, 356, 1449, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 1450, 276, 1451, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 1452, 375, 376, 377, 1453, 1454, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1455, 390, 663, 1456, 664, 391, 1457, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 1458, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1459, 1216, 407, 668, 669, 1460,
	670, 1461, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1462, 420, 422, 421, 1463, 423, 672, 1221, 424,
	425, 1222, 1464, 426, 427, 428, 429, 430, 431, 434,
	1465, 1466, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1467, 278, 1225, 477, 478, 479, 1468, 673, 480, 674,
	482, 483, 1469, 0, 484, 0, 1470, 1471, 486, 487,
	488, 1472, 1473, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1474, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 1475, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 1476, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 1477,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 1478, 569, 570, 568, 571, 572,
	573, 1479, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 1480,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 1481, 601, 602, 0,
	598, 589, 1482, 603, 604, 605, 606, 607, 608, 609,
	610, 1483, 611, 686, 687, 688, 689, 1484, 620, 1485,
	612, 613, 614, 690, 615, 691, 1486, 616, 617, 618,
	619, 0, 621, 622, 1487, 1488, 623, 624, 625, 627,
	628, 626, 629, 1489, 630, 1490, 0, 631, 632, 633,
	692, 693, 694, 1491, 635, 634, 636, 637, 695, 638,
	639, 1492, 1493, 1494, 1495, 640, 641, 696, 642, 643,
	644, 2634, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2631, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 2632, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 2630, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 2633, 0, 0, 0,
	0, 0, 0, 0, 1133, 2629, 0, 1093, 1131, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 238, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 240, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 1647,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 232, 640, 641, 696, 642, 643, 644,
	1107, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0,
	1908, 1906, 0, 0, 1131, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 238, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 240, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 1647, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 232, 640, 641, 696,
	642, 643, 644, 1107, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 1908, 3267, 0, 0, 1131, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 238,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 240, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 1647, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 232,
	640, 641, 696, 642, 643, 644, 1107, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 0, 1908, 1906, 0, 0,
	1131, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 2765, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 2770, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 2766, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 2767, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 2679, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 2677, 0, 2676,
	1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 1133, 2674, 0, 2673, 1131, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 1133, 2671,
	0, 2670, 1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 2668, 0, 1747, 1131, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	1746, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 1096, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 1111, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 4793,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 1111,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	2511, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 2510, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 1111, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	4517, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	1111, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 4094, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 1977, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 3786, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 1977, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2770, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	1133, 1906, 0, 2775, 1131, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	2773, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 2761, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 2749, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 2747, 0, 2738, 2745, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 2741, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 2742, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 2743, 444, 2740, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 2744, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 2739, 644, 1107, 0, 0, 0, 2735, 0,
	2738, 2745, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 2741,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 2742, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 2743, 444, 2740, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 2744, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 2739,
	644, 1107, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 0, 0, 0, 0, 0, 1914, 0, 1133, 0,
	0, 0, 1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2490, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 2452, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 2425, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 1752, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 1681,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 1676, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 1663, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	1658, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 1559, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1558, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 1553, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1552, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 1546, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 1508, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 1512, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 1513, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 1511,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 1357, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 4841, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 4840, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 4839, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 4841, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	4840, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 4446,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 4447, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 4445, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 1149, 1121, 1122, 1123, 3234, 3235, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 3232, 3233, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 2498, 2499, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 0, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 2757, 0, 0,
	0, 0, 0, 0, 2755, 2756, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 0, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 3227,
	3228, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 2161, 2162, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 0, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 4841, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 0, 1176, 0, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 0,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 4840,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 1093, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 1172, 0, 304, 651,
	652, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1257, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 278, 1225, 477, 478, 479,
	0, 1177, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 1263, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 1265, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 238, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 0, 598, 589, 240, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 1647, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 232, 640,
	641, 696, 642, 643, 644, 1271, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 1261, 0, 2001, 0, 1173, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 1172, 0, 304,
	651, 652, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1257, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 278, 1225, 477, 478,
	479, 0, 1177, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 1263, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 1265, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 238,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 0, 598, 589, 240, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 1647, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 232,
	640, 641, 696, 642, 643, 644, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3391, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 0, 2001, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 1172, 0, 304, 651, 652, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 668, 669, 0,
	670, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1257, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 278, 1225, 477, 478, 479, 0, 1177, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 1263, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	1265, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1253, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 1259, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 1172, 0, 304,
	651, 652, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1257, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 278, 1225, 477, 478,
	479, 0, 1177, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 1263, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 1265, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 1261, 0, 1259, 0, 1173, 0,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 1172, 0,
	304, 651, 652, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 668, 669, 0, 670, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1257, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 0, 278, 1225, 477,
	478, 479, 0, 1177, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 1263, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 1265, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 1261, 0, 1259, 0, 1173,
	0, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 1172,
	0, 304, 651, 652, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 668, 669, 0, 670, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 0, 278, 1225,
	477, 478, 479, 0, 1177, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 4261, 0,
	1173, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	1172, 0, 304, 651, 652, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 278,
	1225, 477, 478, 479, 0, 1177, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 1265, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	273, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	2602, 2603, 2604, 2621, 2622, 2623, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	2624, 0, 645, 0, 0, 0, 0, 288, 289, 1898,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 1883, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 2614, 0, 315, 316, 317, 314, 318, 0,
	319, 2610, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 2615,
	2616, 2617, 2618, 371, 372, 373, 660, 0, 0, 2609,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 2619, 2620, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 2612, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 2613, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 1882,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	1573, 2599, 2600, 2601, 2625, 2611, 2605, 0, 2607, 2608,
	2606, 2593, 2594, 2595, 2596, 2597, 2598, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 1497, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1216, 407, 668, 669, 0,
	670, 0, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 0, 1225, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 238, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 240, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	1647, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 232, 640, 641, 696, 642, 643,
	644, 0, 1644, 233, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 193, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 1497, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 0, 1225, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 238, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 240, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 1647, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 232, 640,
	641, 696, 642, 643, 644, 1573, 1572, 233, 0, 0,
	0, 1570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 193, 0, 645, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 1497, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 0, 1225, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1573, 1572, 0, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 1671, 0, 645, 0,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 1497,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1216, 407, 668, 669, 0, 670, 0, 408, 409,
	1218, 671, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 0, 0, 1225, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1573, 1572, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 3704, 0, 645,
	0, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	1497, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1216, 407, 668, 669, 0, 670, 0, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 0, 0, 1225,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 2366,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1573, 2276,
	0, 0, 0, 0, 2277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 1671, 0,
	645, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 1497, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	2275, 422, 421, 0, 423, 672, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 0,
	1225, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1573,
	1572, 0, 0, 0, 0, 1570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 1671,
	0, 645, 0, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 1497, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1216, 407, 668, 669, 0, 670,
	0, 408, 409, 1218, 671, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 0,
	0, 1225, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1093, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	1653, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 238, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 240, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 1647, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 0, 232, 640, 641, 696,
	642, 643, 644, 0, 0, 233, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 193, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 273, 3141, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 2015, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 5006, 0, 1173,
	0, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 1172,
	0, 304, 651, 652, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 668, 669, 0, 670, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 0, 278, 1225,
	477, 478, 479, 0, 1177, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 3654, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	1641, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 273, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 3129, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 273, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 3811, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 923,
	0, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 2353,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 831, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 921, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 829, 603, 604, 605, 606, 607, 830,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 2060, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 834, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 0, 2066,
	0, 296, 2056, 297, 2072, 0, 2079, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 2082, 2083, 0,
	0, 305, 306, 0, 0, 1497, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	1196, 337, 339, 2070, 2069, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 2068, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 2077, 2078, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1216, 407, 2063,
	2064, 0, 2059, 0, 408, 409, 1218, 0, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 0, 1225, 477, 478, 479, 0, 0,
	480, 2071, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 0, 1226, 491,
	1227, 0, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 2053, 505, 506,
	507, 2054, 508, 509, 510, 0, 511, 0, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 2067, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 0, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 2065, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	2081, 592, 593, 594, 595, 0, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 2073, 2074, 2075, 2076, 0,
	620, 0, 612, 613, 614, 0, 615, 0, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 0, 2057, 2080, 0, 635, 634, 636, 637,
	0, 638, 639, 0, 0, 0, 0, 640, 641, 0,
	642, 643, 644, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 3931, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 2047, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 831,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 3930, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 829, 603, 604, 605, 606,
	607, 830, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 3929, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 824, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 2087,
	286, 287, 0, 0, 0, 0, 834, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 831, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 2086, 564, 565, 566, 567, 0,
	2088, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 829, 603, 604,
	605, 606, 607, 830, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 2085, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 824, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 2038, 286, 287, 0, 0, 0, 0, 834, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 831, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 2037, 564, 565, 566,
	567, 0, 2039, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 829,
	603, 604, 605, 606, 607, 830, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 2036, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 822, 0,
	824, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	834, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 831, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 829, 603, 604, 605, 606, 607, 830, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 824, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 834, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 831, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 829, 603, 604, 605, 606, 607,
	830, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 824, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 834, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	831, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 2404, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 2405, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 829, 603, 604, 605,
	606, 607, 830, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 2406, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 273, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 834, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 1573, 1572, 0, 0, 0, 0, 1570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 1497, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 0, 1225, 477, 478, 479, 4019,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1573, 1572, 0, 0, 0, 0,
	1570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 1497, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 0, 1225, 477, 478, 479,
	3604, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1701, 0, 1573, 1572, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	1497, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	1700, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1216, 407, 668, 669, 0, 670, 0, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 0, 0, 1225,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 1699, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 1698, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1566, 0,
	1573, 1572, 0, 0, 0, 0, 1570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 1497, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1568, 666, 667, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1216, 407, 668, 669, 0,
	670, 0, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 0, 1225, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1573, 1572, 0, 0, 0, 0, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 1497, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1216, 407, 668, 669,
	0, 670, 0, 408, 409, 1218, 671, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 0, 1225, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1573, 1572, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 1497, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 0, 1225, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1573, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 1497, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 0, 1225, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 2929, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 3646, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 2933, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 3645, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 2932,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 3642, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 3644, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 3641, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 2931, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 3643,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 2929, 305, 306, 654, 0, 0, 2923,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 2925, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 2933, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	2932, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 2922,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 2931, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	2930, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1778, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 1777, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 1776, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 1779, 556, 563, 564, 565,
	566, 567, 0, 1775, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	1773, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 1774, 634, 636, 637, 695, 638, 639, 1501,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 1503, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 1263, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1498, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1500, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 1263, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1404, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 1406, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 1263, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 729, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 728, 284, 285, 717, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 720, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 726, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 722, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 716, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 717, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 720, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 721, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 722, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 717, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 720, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 721, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 722, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 717,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 720, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 4029, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 722,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 1263, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 3549, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 3099, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 3098, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 2373, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 2311, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 2318, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 2317, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 2304, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 2306, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 2269, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 1263, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1619, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1618, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1521, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1514, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1516, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1340, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 1339, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1330, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	1329, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 1327, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 1326, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1322, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1321, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 698, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 264, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 720, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 721, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 722, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 2413, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 2411, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 2409,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 2324, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 2112,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	2106, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 908, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	907, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 906, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 3645, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 4342, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1368, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 1371, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	1369, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 789, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 788, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 787, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 1372, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 785, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1368, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 1371, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 1369, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 789, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	788, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 787, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 1372, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 785,
	687, 688, 689, 0, 620, 0, 612, 1370, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 707, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 706, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 705, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 3141, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 4358, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	4641, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 4233, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 3980, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 2810,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 3141, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 3138, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 2230, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 788, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 787, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	785, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 2383, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 2371,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1674, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1667, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 779, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	775, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 780, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	789, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 788, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 787,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 1652,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 785, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1625, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 1624, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1609, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	1607, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 1602, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1579, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1577, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1564, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1526, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1506,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1374, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 788, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 787, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 785, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1345, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 1344, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1336, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1335, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 1288, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 794, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 779, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 775, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 774, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 780, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 789, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 788,
	548, 549, 550, 551, 776, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 787, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 777, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 785, 687,
	688, 689, 0, 620, 0, 612, 781, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 768, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 769, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 731,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 724, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 702, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 3674, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 788, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 787,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 785, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 3589, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 3565, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 3562, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 3516, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 3514,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	3502, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 3499, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 3109, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 769, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 2342, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 0, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 1307, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 1236, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	0, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 0, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 0,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 0, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1615, 0, 1352, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1354, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	1614, 0, 0, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 0, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 0, 0, 491, 0, 0, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 0, 508, 509, 510, 0,
	511, 0, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 0, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 0, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1355, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 0, 592, 593, 594, 595, 0,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 0,
	0, 0, 0, 0, 620, 0, 612, 613, 614, 0,
	615, 0, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 0, 0, 0, 0,
	635, 634, 636, 637, 0, 638, 639, 1529, 0, 1352,
	0, 640, 641, 0, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 0,
	297, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 0, 0, 0, 0, 305, 306,
	0, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 1354, 332, 333, 334, 335, 336, 0, 337, 339,
	0, 0, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 0, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 1528, 0, 0, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 0, 0, 0, 0,
	0, 408, 409, 0, 0, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 0, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 0, 480, 0, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 0, 0, 491, 0, 0, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 0, 508,
	509, 510, 0, 511, 0, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 0, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 0, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1355, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 0, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 0, 592, 593,
	594, 595, 0, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 0, 0, 0, 0, 0, 620, 0, 612,
	613, 614, 0, 615, 0, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 0,
	0, 0, 0, 635, 634, 636, 637, 0, 638, 639,
	1350, 0, 1352, 0, 640, 641, 0, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1354, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 1349, 0, 0, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 0,
	480, 0, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 0, 0, 491,
	0, 0, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 0, 508, 509, 510, 0, 511, 0, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 0, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 0, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1355, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 0, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	0, 592, 593, 594, 595, 0, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 0, 0, 0, 0, 0,
	620, 0, 612, 613, 614, 0, 615, 0, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 0, 0, 0, 0, 635, 634, 636, 637,
	0, 638, 639, 2126, 0, 1352, 0, 640, 641, 0,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1354, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 0, 480, 0, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	0, 0, 491, 0, 0, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 0, 508, 509, 510, 0, 511,
	0, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 0, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 0, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1355, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 0, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 0, 592, 593, 594, 595, 0, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 0, 0,
	0, 0, 0, 620, 0, 612, 613, 614, 0, 615,
	0, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 0, 0, 0, 0, 635,
	634, 636, 637, 0, 638, 639, 2093, 0, 1352, 0,
	640, 641, 0, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 0, 297,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 0, 0, 0, 0, 305, 306, 0,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	1354, 332, 333, 334, 335, 336, 0, 337, 339, 0,
	0, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 0,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 0, 0, 0, 0, 0,
	408, 409, 0, 0, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 0, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 0, 480, 0, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 0, 0, 491, 0, 0, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 0, 508, 509,
	510, 0, 511, 0, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 0, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 0, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1355,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 0, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 0, 592, 593, 594,
	595, 0, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 0, 0, 0, 0, 0, 620, 0, 612, 613,
	614, 0, 615, 0, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 0, 0,
	0, 0, 635, 634, 636, 637, 1352, 638, 639, 0,
	0, 0, 0, 640, 641, 0, 642, 643, 644, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1354, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 0, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 0, 0, 491, 0, 0, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 0, 508, 509, 510, 0,
	511, 0, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 0, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 0, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1355, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 0, 592, 593, 594, 595, 0,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 0,
	0, 0, 0, 0, 620, 0, 612, 613, 614, 0,
	615, 0, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 0, 0, 0, 0,
	635, 634, 636, 637, 0, 638, 639, 0, 0, 0,
	0, 640, 641, 0, 642, 643, 644, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 1827, 1828, 1877, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 1864, 1858, 0, 0,
	0, 0, 1829, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 1849, 1877, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 1868, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 1857, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 1875, 0, 0, 0,
	0, 0, 0, 1844, 1845, 1868, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 1857, 1859, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 0, 0, 1850, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1827,
	1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 1864, 1858, 0, 0, 1869, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 1882, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2636, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 0, 4765,
	0, 1852, 1853, 1854, 1855, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 1858, 0, 0,
	1868, 0, 0, 1878, 1830, 0, 0, 0, 0, 0,
	1857, 1859, 0, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 1875, 0,
	1883, 0, 0, 0, 0, 1844, 1845, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 1866, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 1880, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 1878, 0,
	1864, 1858, 0, 0, 0, 1857, 1859, 0, 1830, 0,
	1856, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 1874, 0, 1875, 0, 0, 0, 0, 0, 0,
	1844, 1845, 0, 1851, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	1869, 0, 1846, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 1868,
	0, 0, 1878, 0, 4667, 1856, 0, 0, 0, 1857,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 1875, 1851, 0,
	0, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1827, 1828, 1869, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 1864, 1858, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 1882, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 1876, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 1865, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 0, 4621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1853, 1854, 1855, 0,
	0, 0, 1851, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 0, 0, 1868, 0, 0, 1878, 1830, 0,
	0, 0, 0, 0, 1857, 1859, 0, 1877, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1875, 0, 1883, 0, 0, 0, 0, 1844,
	1845, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 1866, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 1876, 0,
	0, 0, 0, 4620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 0, 1880, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 1878, 0, 1864, 1858, 0, 0, 0, 1857,
	1859, 0, 1830, 0, 1856, 0, 0, 0, 0, 0,
	0, 1877, 0, 0, 0, 1874, 0, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 0, 1851, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 1869, 0, 1846, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 1868, 0, 0, 1878, 0, 4430, 1856,
	0, 0, 0, 1857, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 1875, 1851, 0, 0, 0, 0, 0, 1844, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1827, 1828, 1869,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	1882, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 1876, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 1865, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	0, 0, 0, 4257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 1851, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872,
	1873, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 1858, 0, 0, 1868, 0,
	0, 1878, 1830, 0, 0, 0, 0, 0, 1857, 1859,
	0, 1877, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 1875, 0, 1883, 0,
	0, 0, 0, 1844, 1845, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 1866, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 1870,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 1876, 0, 0, 0, 0, 4176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 1852, 1853, 1854, 1855, 0, 0,
	0, 0, 1880, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 1878, 0, 1864, 1858,
	0, 0, 0, 1857, 1859, 0, 1830, 0, 1856, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 0, 1874,
	0, 1875, 0, 0, 0, 0, 0, 0, 1844, 1845,
	0, 1851, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 1869, 0,
	1846, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 1852, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837, 1868, 0, 0,
	1878, 0, 4175, 1856, 0, 0, 0, 1857, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 1875, 1851, 0, 0, 0,
	0, 0, 1844, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1827, 1828, 1869, 1860, 1861, 1862, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 1864, 1858, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 1882, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 1876, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	1865, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 1870,
	1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834,
	1836, 1837, 0, 0, 0, 0, 0, 4174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1853, 1854, 1855, 0, 0, 0,
	1851, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 1828, 0, 1860,
	1861, 1862, 1871, 1872, 1873, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 1858,
	0, 0, 1868, 0, 0, 1878, 1830, 0, 0, 0,
	0, 0, 1857, 1859, 0, 1877, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1875, 0, 1883, 0, 0, 0, 0, 1844, 1845, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 1866, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 1876, 0, 0, 0,
	0, 3816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 1852, 1853,
	1854, 1855, 0, 0, 0, 0, 1880, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	1878, 0, 1864, 1858, 0, 0, 0, 1857, 1859, 0,
	1830, 0, 1856, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 1874, 0, 1875, 0, 0, 0, 0,
	0, 0, 1844, 1845, 0, 1851, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 1869, 0, 1846, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 1868, 0, 0, 1878, 0, 3309, 1856, 0, 0,
	0, 1857, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 1875,
	1851, 0, 0, 0, 0, 0, 1844, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1827, 1828, 1869, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 1864, 1858, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1882, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 1876, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 1865, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839,
	1831, 1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0,
	0, 3308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 1851, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 1858, 0, 0, 1868, 0, 0, 1878,
	1830, 0, 0, 0, 0, 0, 1857, 1859, 0, 1877,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 1875, 0, 1883, 0, 0, 0,
	0, 1844, 1845, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 1866,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	1876, 0, 0, 0, 0, 3307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	1880, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 1878, 0, 1864, 1858, 0, 0,
	0, 1857, 1859, 0, 1830, 0, 1856, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 1874, 0, 1875,
	0, 0, 0, 0, 0, 0, 1844, 1845, 0, 1851,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 1849,
	0, 0, 0, 2193, 0, 0, 1869, 0, 1846, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 2191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 1868, 0, 0, 1878, 0,
	3306, 1856, 0, 0, 0, 1857, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 1851, 0, 0, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1828, 1850, 1860, 1861, 1862, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 1864, 1858, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 1880,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 0, 3271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2192, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 1852, 1853, 1854, 1855, 0, 0, 0,
	0, 0, 0, 1835, 4916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 1878, 1882, 1864, 1858, 0,
	0, 0, 1857, 1859, 0, 1830, 2190, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 1874, 0,
	1875, 0, 0, 0, 0, 0, 0, 1844, 1845, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1850, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 1835, 0, 3371,
	0, 0, 0, 0, 3370, 0, 0, 0, 4915, 0,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 1858, 0, 0, 1868, 0, 3242, 1878,
	1830, 0, 1856, 0, 0, 0, 1857, 1859, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 1875, 1851, 1883, 0, 0, 0,
	0, 1844, 1845, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 1866,
	0, 0, 1869, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	1880, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 1868, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 1857, 1859, 0, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 1875,
	0, 0, 0, 0, 0, 0, 1844, 1845, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 2783, 0,
	0, 0, 0, 0, 1866, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 0, 1869, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 1864, 1858, 0,
	0, 0, 2782, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 1876, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 1865, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 1851, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 1858, 0, 0, 1868, 0, 0, 1878,
	1830, 0, 0, 0, 0, 0, 1857, 1859, 0, 1877,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 1875, 0, 1883, 0, 0, 0,
	0, 1844, 1845, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 1866,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 1852, 1853, 1854, 1855, 0, 0, 0, 0,
	1880, 0, 1835, 0, 4524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 1878, 0, 1864, 1858, 0, 0,
	0, 1857, 1859, 0, 1830, 0, 1856, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 1874, 0, 1875,
	0, 0, 0, 0, 0, 0, 1844, 1845, 0, 1851,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 1869, 0, 1846, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 1852, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 1868, 0, 0, 1878, 0,
	0, 1856, 0, 0, 0, 1857, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 1851, 0, 0, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1827,
	1828, 1869, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 1864, 1858, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1882, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 1876,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 1865, 1090,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843,
	0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 1853, 1854, 1855, 0, 0, 0, 1851, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1828, 0, 1860, 1861,
	1862, 1871, 1872, 1873, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 1858, 0,
	1868, 0, 0, 1878, 0, 1830, 0, 0, 0, 0,
	1857, 1859, 0, 0, 1877, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 1875, 0,
	0, 1883, 0, 0, 0, 1844, 1845, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 1866, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1852, 1853, 1854,
	1855, 0, 0, 0, 1880, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 1878,
	0, 1864, 1858, 0, 0, 0, 1857, 1859, 0, 1830,
	1856, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 1874, 0, 1875, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1851, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	1869, 0, 0, 1846, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4301,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 1852, 1853, 1854, 1855, 0, 0, 0, 0, 0,
	0, 1835, 0, 4001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0,
	1868, 0, 0, 1878, 0, 0, 1856, 0, 0, 0,
	1857, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 1875, 1851,
	0, 0, 0, 0, 0, 1844, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1827, 1828, 1869, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 1864, 1858, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 1882, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4002, 0, 0, 0, 0,
	1883, 0, 0, 0, 1876, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 1865, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831,
	1832, 1833, 1834, 1836, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 1851, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1828, 0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 1858, 0, 0, 1868, 0, 0, 1878, 1830,
	0, 0, 0, 0, 0, 1857, 1859, 0, 1877, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 0, 1883, 0, 0, 0, 0,
	1844, 1845, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 1866, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 1852, 1853, 1854, 1855, 0, 0, 0, 0, 1880,
	0, 1835, 0, 0, 0, 0, 0, 0, 3377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1828, 0, 1860, 1861, 1862, 1871, 1872, 1873,
	1868, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	1857, 1859, 0, 1864, 1858, 1856, 0, 0, 3372, 0,
	0, 1830, 0, 0, 0, 0, 1874, 0, 1875, 0,
	1877, 0, 0, 0, 0, 1844, 1845, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 1866, 1827, 1828, 1829, 1860, 1861, 1862,
	1871, 1872, 1873, 0, 0, 1869, 1849, 0, 1850, 0,
	0, 0, 0, 0, 0, 1846, 1864, 1858, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3797, 0,
	1883, 0, 0, 0, 1876, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 1865, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1853, 1854, 1855, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 0, 0, 0, 0, 0, 0,
	1856, 0, 1868, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 1857, 1859, 0, 0, 1852, 1853, 1854, 1855,
	0, 0, 0, 1851, 0, 0, 1835, 0, 1874, 0,
	1875, 0, 0, 0, 0, 0, 0, 1844, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 1878, 0,
	1850, 0, 0, 0, 0, 1857, 1859, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 1875, 0, 0, 0, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 0,
	1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3337,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 1827, 1828, 0, 1860, 1861, 1862, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 1864, 1858, 0, 0, 0,
	3310, 0, 0, 1830, 0, 1856, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 1851, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 1869, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 1870, 1847,
	1843, 0, 1840, 1838, 1839, 1831, 1832, 1833, 1834, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1853, 1854, 1855, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832,
	1833, 1834, 1836, 1837, 1868, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 1857, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1875, 0, 0, 0, 0, 0, 0, 1844,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1827, 1828,
	0, 1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	1864, 1858, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 1876, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 1865, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1828, 0,
	1860, 1861, 1862, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	1858, 0, 0, 0, 1856, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	1852, 1853, 1854, 1855, 0, 0, 0, 1851, 0, 0,
	1835, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 1869, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 1857,
	1859, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 1875, 0, 0,
	0, 0, 0, 0, 1844, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 1852,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1870, 1847, 1843, 0, 1840, 1838, 1839, 1831, 1832, 1833,
	1834, 1836, 1837, 1876, 0, 0, 0, 0, 1868, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 1857, 1859,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 1874, 0, 1875, 0, 0, 0,
	0, 0, 0, 1844, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 2355, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 1870, 1847, 1843, 1869, 1840,
	1838, 1839, 1831, 1832, 1833, 1834, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1870, 1847, 1843, 0, 1840, 1838,
	1839, 1831, 1832, 1833, 1834, 1836, 1837,
}

var sqlPact = [...]int{
	15624, -1000, -1000, -1000, -1000, 184, -1000, -1000, 183, 179,
	178, 177, 175, 174, 173, 172, 170, 168, 167, -1000,
	-1000, -1000, -1000, -1000, -1000, 166, -1000, -1000, 164, -1000,
	162, 160, 159, -1000, -1000, 158, -1000, 157, -1000, -1000,
	-1000, -1000, 156, 154, 151, 91624, 91061, 92185, 2326, 115793,
	98925, 2104, 80939, 115230, 80376, 114667, 2124, 10585, 114104, 2750,
	146, -1000, 113541, 142, 140, 139, -1000, 112978, -1000, 1864,
	-1000, 138, -1000, 3920, 70766, 136, 135, 133, 131, 2313,
	130, -1000, 128, 127, -1000, -1000, 126, -1000, 12614, 1537,
	-1000, 124, 123, -1000, 6688, 96675, 122, 121, 120, 2550,
	119, 118, 67947, 117, 114, 113, 2502, 2847, -1000, -1000,
	2091, -1000, -1000, 112, 111, 108, 107, 105, 104, 103,
	102, 100, 99, 96, 94, 93, -1000, 91, 90, 88,
	86, 84, -1000, 82, 81, 74, -1000, 68, -1000, 66,
	65, 58, 56, 55, 54, 53, 50, 43, 40, 39,
	36, 32, 31, 16289, -1000, -1000, 29, 1958, 1689, 1678,
	1676, 1667, 1662, 997, 28, 27, 26, 25, 21, 20,
	19, 17, 16, 15, 14, 13, 12, 10, 7, 3,
	-2, -3, 137, -4, -5, -10, -11, -14, -17, -19,
	5003, -1000, 1802, 994, 31132, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124208, 116354, -20, -141, -21, -1000, 3280, 1063,
	56011, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 269,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 511,
	2264, 754, -1000, -1000, -1000, 112417, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2324, -55, -1000, 1970, -1000, -1000,
	-1000, -1000, -1000, 753, -1000, 2321, 2244, 231, 2235, -1000,
	-1000, -1000, 3364, 2454, 3794, 3793, 3792, 3791, 3789, 123647,
	1863, 3788, 2534, 3787, 3782, 3781, 3769, 3768, 3765, 3764,
	-1000, 90498, 1049, 89935, 89372, 3393, 111856, 88809, 111293, 126458,
	47923, 892, 3363, -1000, -1000, -1000, -1000, -1000, -1000, 116354,
	-1000, 1048, -1000, -1000, 3762, 2075, 750, 98362, -1000, -1000,
	110730, 1641, -1000, -1000, -1000, 939, 1219, 32863, 32863, 32863,
	268, -1000, -1000, -1000, -1000, -1000, -1000, 3761, 3758, 3757,
	3753, 3752, -1000, -1000, 79813, 24025, 79250, 78687, 110167, 47346,
	88246, 87683, 3751, 3750, 3747, 109604, 125895, 3507, 3506, 1047,
	1962, 1431, -1000, -1000, -1000, -1000, -1000, -1000, -44, 72452,
	3541, 116354, -1000, 267, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46769, 716, 46192, 576, 45615, 414, 109041, -1000, -1000,
	-1000, -1000, 74746, -1000, 108478, 2453, 3746, 3745, 1128, 3744,
	3238, 1759, 3743, 1831, 1209, 3742, 3733, 3729, 3728, 3727,
	3726, 3725, 1486, 107915, 2965, 1535, 107352, 1722, 125332, 1046,
	87120, 92185, 2599, 106789, 1446, 1415, -1000, -1000, -1000, -1000,
	3056, 2845, 2843, 1341, -1000, -1000, -1000, -1000, 59440, 10218,
	7459, -1000, -1000, 12308, 106226, 62295, 92185, 92185, -1000, -1000,
	-1000, -1000, -1000, -1000, 45038, 584, 44461, 824, 105663, -1000,
	-1000, 60011, 2917, -1000, -1000, -1000, -1000, -1000, 105100, 43884,
	415, 43307, 816, 116354, -1000, 2961, 1892, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2622, 1617, 3574, 2684, 74173,
	2051, 1420, 3331, 3049, 3047, 1531, 1960, 3043, 3724, 2632,
	3038, 3034, 3032, 3029, 3027, 1289, 2576, 512, 2567, 30555,
	2945, 1700, 42730, 1507, 1532, 3025, 3018, 3582, 1944, 2028,
	2019, 78124, 3721, 3719, 3294, 3013, 2996, 2729, 2966, -1000,
	2916, 1483, 249, -1000, -1000, -1000, -1000, -1000, -1000, 1499,
	-1000, -1000, -1000, -1000, -1000, 82622, -1000, -1000, 1371, -1000,
	-1000, 1371, -1000, -1000, -1000, -1000, -1000, 1301, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1802, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2780, -1000, 2063, -1000, -1000, 2509, 3255, 3255, 3255,
	3360, 487, 479, -1000, 137, -1000, -1000, 135556, -1000, -1000,
	48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 2165, -1000,
	749, -1000, -1000, 782, -1000, 748, 687, 595, -1000, -1000,
	-1000, -1000, -1000, -1000, 746, -1000, -1000, -1000, -1000, -1000,
	-1000, 3541, -1000, 26961, -1000, -1000, -1000, 444, 740, 48500,
	-1000, -1000, 3604, 3600, 972, -1000, 236, 960, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2959, 736, 735, -1000, 734, 733, 732, 731, 730, -1000,
	726, -1000, 723, 721, 720, 719, 715, 713, 712, 711,
	-1000, 1992, -1000, -1000, -1000, -1000, -1000, -1000, 666, 654,
	654, 654, -1000, 1042, -1000, -1000, -1000, 292, 652, 252,
	644, 637, 636, -1000, 710, 708, 707, 706, 705, 704,
	703, 702, 700, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1041, -1000, -1000, -1000, -1000, -45, 116354, -1000, 511, -45,
	-1000, -1000, 693, -1000, 35171, 35171, 35171, -1000, -1000, 2316,
	48500, -1000, 2369, -1000, -39, -39, 906, 57724, -1000, 54841,
	906, 313, 809, 63430, -1000, 2914, -1000, -1000, 689, 233,
	-1000, -1000, -1000, -1000, 24596, 2909, 116354, 116354, 116354, 92185,
	92185, 92185, 116354, 3717, 3716, 3030, 48500, -1000, -1000, 70203,
	128142, 92746, -1000, -1000, 3481, 68508, 69641, 2957, 128142, 2955,
	127584, 3715, -1000, -1000, -1000, -1000, -1000, 3124, 3714, 3711,
	3707, -1000, 116354, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	238, 3122, -1000, -1000, 96112, 238, 3121, -1000, 238, 3119,
	-1000, 95551, -1000, -1000, 2197, 3116, -1000, -1000, 240, 3115,
	-1000, -1000, -1000, 239, 3113, -1000, -1000, 232, -89, 3112,
	-1000, -1000, -1000, -1000, -1000, -1000, 135556, -1000, -1000, -1000,
	127021, -1000, 3298, -1000, 116354, -1000, 48500, -1000, -1000, 3480,
	1557, 3317, 3396, -1000, -1000, -53, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2504, 2506, 1163, 2353, -1000, 3157, 1515,
	32863, 3226, -1000, -1000, -1000, -1000, -1000, 230, 24596, -1000,
	-1000, -1000, -1000, -1000, -1000, 5193, 3108, 1496, -1000, 2348,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2102,
	3103, -1000, 2036, 3101, 2043, -1000, -1000, 2148, -1000, 132133,
	1358, -1000, -1000, -1000, -1000, 1952, 3099, -38, -1000, -1000,
	2280, -1000, -1000, -1000, -1000, 1927, -1000, 1315, 3095, -1000,
	2683, 2683, 86557, 3114, 61724, 60011, 72452, -48, -1000, -1000,
	-1000, -1000, -119, -1000, 23448, 135556, -1000, -1000, -1000, -1000,
	1727, 135556, 944, -1000, -1000, 3094, -1000, 135556, 942, -1000,
	-1000, 3088, -1000, 2574, -1000, 2950, -1000, -1000, 2405, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2404, -1000, -1000,
	3705, -1000, -1000, 3704, -1000, 3697, 3694, 3689, -1000, 1713,
	1953, 3688, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	85996, 2312, -1000, -1000, 84870, 2948, -1000, 2403, 3394, -1000,
	85433, 1045, -1000, 1010, 2402, -1000, 94990, 1054, 2399, -1000,
	3687, 3389, 2635, 1010, 2397, -1000, -1000, -1000, -1000, -1000,
	1023, -1000, 65687, -1000, 65687, -1000, 1636, -1000, 123086, -39,
	92185, 3541, -1000, -75, -1000, -1000, -1000, 1063, -1000, 58866,
	-1000, 58866, 97799, 75317, 973, 2907, 67374, 135437, -1000, 1019,
	-1000, -1000, 135556, -1000, -1000, -1000, 2573, -1000, -158, 2682,
	-1000, 75317, 61153, 2568, -1000, 135556, -1000, -1000, -1000, -1000,
	135556, -1000, -1000, -1000, 75317, 84870, -1000, 104537, 84309, -1000,
	-1000, 1481, 2559, -1000, -1000, -1000, 75317, 1344, 75317, 75317,
	75317, -1000, 103974, -1000, -1000, 2082, 1283, 3295, 2045, 92185,
	-1000, 1926, -1000, -1000, -1000, 3316, 3107, 116354, -1000, -1000,
	2946, -1000, 71890, 94429, -1000, 93868, -1000, 93307, -1000, 92185,
	-1000, 92185, -1000, 3684, 3683, 3681, -1000, -1000, 3680, -1000,
	3679, 3307, -1000, 605, 42153, 135556, 3305, -1000, 3678, 1994,
	2945, 135556, -1000, 3106, 1664, 1658, 116354, -1000, -1000, 116354,
	-1000, 116354, -1000, -1000, -1000, 1549, -1000, -1000, 2499, -1000,
	-1000, -1000, -1000, 92185, 92185, 92185, 92185, 1199, -1000, 41576,
	-1000, -1000, 2937, 3675, 1738, -1000, 1857, -1000, 2903, 3302,
	-1000, 1473, 1726, 229, 3609, -1000, -1000, 245, -1000, -1000,
	-53, -1000, 122525, -1000, 2509, -1000, 116354, -1000, 2514, 2930,
	2941, 1729, 2337, 2597, -1000, 40999, 2566, 51962, 2346, 137,
	-1000, -1000, 137, 137, 32286, -1000, -1000, 68508, 68508, 24596,
	1309, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500,
	48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500,
	48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500, 48500,
	48500, 48500, 48500, 48500, 48500, 48500, 48500, 2054, 48500, 1300,
	48500, 48500, 48500, 48500, 1966, -1000, -1000, 1961, 545, 2055,
	687, -1000, -1000, -1000, 3544, 3544, 3544, 619, 619, 619,
	14792, 14792, 645, 3673, 782, -1000, 48500, -1000, 132, 58286,
	48500, 25169, -1000, 479, 8496, 2470, -1000, 478, 25775, -1000,
	-1000, -1000, 26961, 595, 40393, 48500, 1028, 135556, -1000, -1000,
	1447, 3564, 22871, 2763, 2721, 681, 833, 828, 29949, 29343,
	28737, 28131, 743, 738, 48500, 48500, 48500, 48500, 48500, 48500,
	48500, 48500, -1000, -1000, 3575, -1000, 3564, -1000, -1000, -1000,
	-1000, 3564, 1307, 1306, 3564, -1000, 3564, 3564, 10318, 10318,
	39816, 39239, 38662, 52539, 38085, 48500, 27554, 37508, 36931, -1000,
	116354, -45, 3475, 48500, 224, -1000, 133054, -1000, 224, 224,
	678, -77, 135556, 2575, 2575, 56582, 2386, 2173, 2173, 2173,
	-1000, 906, 17640, 906, 102291, 2193, 906, 906, 221, 255,
	475, 54270, 2369, 102291, 768, 676, -23, -26, -29, -1000,
	-1000, -31, -33, -1000, -1000, 92185, 674, 25169, 24596, 220,
	2021, -87, 2594, 2593, -1000, 2590, 2586, -1000, 2582, 2311,
	-1000, -1000, -1000, 1786, -93, 1292, 92185, 116354, 1440, 3672,
	-78, -1000, 7317, -94, -1000, 1342, 213, 3564, -1000, -1000,
	-1000, -1000, -1000, 3671, 3670, -1000, 1036, 672, 668, 320,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 666, 654,
	654, 654, -1000, 292, 652, 252, 644, 637, 636, -1000,
	-1000, -1000, -1000, -1000, 2896, 92185, 116354, 1427, 3669, 81500,
	-89, 92746, -90, -1000, -1000, 116354, -1000, -1000, -1000, 3668,
	-1000, 92185, -1000, -1000, 92185, 238, 3087, -1000, 92185, -1000,
	92185, 237, 3085, -1000, -1000, 116354, -1000, 92185, 92185, -1000,
	116354, 116354, 116354, 128142, 128142, 235, -1000, 92185, 890, -95,
	1124, -53, -1000, -1000, -1000, -1000, 1371, -1000, 1883, -1000,
	-1000, -1000, -1000, -1000, -1000, 1474, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 972, -1000, -1000, -1000, -1000, -1000,
	-1000, 3559, 3557, -46, -1000, -1000, 24596, -1000, -54, 1705,
	1938, 1291, -1000, 77561, 2314, 3287, 3667, 2618, 3276, 1628,
	-1000, 1545, -1000, 3381, 82622, 3417, 3453, 1347, -1000, 2891,
	-1000, -1000, -1000, 929, 1699, 1724, 1290, 1286, 82622, 2036,
	-1000, 68508, -1000, 2629, 3357, 1395, 1412, 1395, 1395, 1410,
	-1000, 82622, 1721, 1279, 1278, 1275, -1000, -1000, 1872, 1869,
	-1000, -1000, 103413, -1000, 1272, 1270, 3503, 2780, 2142, 832,
	1862, -1000, 1350, 1268, 2886, -1000, -1000, -57, 3397, 3444,
	1347, -1000, 2885, 1266, -1000, -1000, -1000, 3356, 92185, 24596,
	1574, 1566, 1567, 1718, 1263, -47, -1000, 3412, 1261, 1255,
	-1000, 1051, 8680, 3200, -1000, 128142, 1051, 1051, 2039, 3083,
	2667, 1601, -1000, 2680, 902, 2677, -1000, -1000, -1000, 902,
	-48, 72452, 116354, 209, -1000, 132, 48500, 48500, 132, 48500,
	132, -1000, 3386, 3081, 3077, -1000, -1000, -1000, -1000, -1000,
	3663, 1914, 2533, -1000, -1000, 635, 2396, 2883, 116354, 2605,
	-50, 92185, -1000, 71328, 3074, 128142, 2036, 2390, -1000, -1000,
	83746, -1000, 3068, 511, 2389, -1000, 648, 3662, 3066, -1000,
	121964, -1000, 3298, 1317, 3065, 1087, 532, 3467, -1000, 532,
	66250, -1000, 116354, -1000, -39, 5787, 76439, -100, -101, 473,
	-1000, 102852, 116354, 116354, 3214, 1942, 1921, -1000, 1007, 60011,
	-1000, 60011, -102, -1000, -158, 2674, 1513, -1000, 973, 973,
	902, -1000, 902, -1000, 92185, 2940, -1000, -1000, 75317, 973,
	973, 973, -1000, -1000, -1000, -1000, 3661, 3660, 3659, 3658,
	-1000, -1000, 1008, 92185, 116354, 92185, -1000, -1000, 1586, -1000,
	201, -1000, 128142, -1000, 128142, 116354, 92185, -1000, 1008, 116354,
	1008, 116354, 1008, 116354, 1008, 1008, -1000, -1000, -1000, -1000,
	-1000, 132, -1000, -1000, 135556, -1000, 48500, -1000, -1000, 1539,
	3657, 1666, -1000, 2934, -1000, 2932, -1000, 6, -1000, -1000,
	1822, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3656, 135556, -1000, 1939, -1000, -1000, -1000, -1000, 92185, 92185,
	92185, 92185, 116354, 3195, -1000, 116354, 3179, 92185, -1000, 3606,
	-1000, -1000, 82622, -1000, 2514, 2930, -1000, -1000, -1000, -1000,
	-1000, -1000, 1455, 2258, -1000, 2553, -1000, 1571, -1000, -1000,
	-1000, 135556, 53116, -1000, -1000, 135556, 1792, -1000, 51385, 50808,
	-1000, -1000, 1753, 92185, 2601, -1000, 2601, -88, -1000, 132789,
	2552, 92185, -1000, -1000, -1000, -1000, -1000, 924, 1131, 1131,
	1383, 1383, 1383, 1383, 3387, 413, 312, 8200, 8945, 8945,
	5308, 5308, 5308, 5308, 5308, 8945, 6276, 619, 619, 6276,
	6276, 6276, 6276, 6276, 619, 619, 619, 8945, 8945, 8945,
	619, 14792, 6728, 11324, 48500, 48500, 1250, 1955, 545, 11118,
	48500, 9712, 9712, 9712, 9712, -1000, 2098, -1000, -1000, -1000,
	-1000, 2882, 634, 52539, 52539, -1000, -1000, -1000, -1000, 26368,
	48500, -1000, -1000, -1000, -1000, 36325, -1000, -1000, 131939, -317,
	472, -1000, 198, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 468, -82, 67, -1000,
	48500, 48500, 48500, 462, -1000, 197, 48500, 116354, -1000, 128706,
	767, -103, -1000, -107, 1448, -1000, 48500, -1000, -1000, 1249,
	-1000, 1246, 1245, 1242, -1000, 624, 458, -1000, 196, -1000,
	2167, 615, 607, 48500, -1000, -1000, -1000, -1000, -1000, 131754,
	-1000, -1000, 131489, -1000, -1000, 131295, -1000, -1000, 131110, -1000,
	-1000, -1000, -1000, -1000, 135172, 16981, 15389, 14606, 8000, 13753,
	12059, -108, 456, -110, 455, 921, 918, 440, 435, 434,
	-113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -118, 431, -1000, 2881, -82, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 430, -1000, 416, -1000,
	134793, -82, 409, 8091, -1000, 52539, 52539, 52539, 52539, -1000,
	395, -1000, 132604, -1000, 134730, 35748, 35748, 35748, 393, 134528,
	48500, -82, -123, -1000, -124, -1000, -1000, 517, -125, 1024,
	35171, 55426, 24596, -1000, 1024, 1024, 48500, -1000, 48500, 2564,
	-1000, -1000, -1000, -1000, 2563, 2357, 2575, 56582, -1000, -1000,
	-1000, -1000, 102291, -1000, 3541, 2726, -1000, 102291, -1000, -1000,
	116354, 511, -1000, 102291, 102291, 24596, 906, -1000, 906, 102291,
	585, -1000, -1000, -1000, -1000, -1000, 391, 64563, 67, 194,
	24596, 1010, -1000, -1000, 2695, 2695, 2695, 2695, 2695, 92185,
	-1000, -1000, 128142, 1240, -51, -116, 2671, -1000, 3514, -1000,
	2032, -1000, 68508, -1000, 780, 1182, 24596, -1000, -1000, -1000,
	606, -1000, 3564, 3564, -1000, 3564, 128142, 2879, 223, 2669,
	-1000, 2309, -49, 214, 128142, 3655, -1000, -1000, 238, -1000,
	92185, 238, 238, -1000, 92185, 92185, 2197, -1000, 240, -1000,
	239, -1000, -1000, -89, -1000, 1017, 32863, -1000, 1371, -1000,
	-1000, 1564, -1000, 1896, -1000, 1258, -1000, -1000, -1000, -1000,
	32863, -1000, 2116, 116354, 116354, 92185, -1000, 116354, -1000, 2179,
	128142, -1000, 2388, 121403, 2374, 120842, 68508, -1000, -1000, 604,
	958, 2551, 2546, 1082, 116354, 116354, 2545, 120281, 119720, -1000,
	3654, 116354, 2135, 48500, 3355, 2087, 4924, 132, 132, -1000,
	132, -1000, -1000, 603, 1361, 92185, 92185, 116354, 128142, 92185,
	1963, -1000, -1000, -1000, -1000, -1000, 83183, -1000, -1000, 3572,
	3569, -1000, 1395, -1000, -1000, -1000, 1395, 2036, 1910, 116354,
	128142, 92185, 128142, 119159, 118598, -1000, -1000, 1717, 116354, -1000,
	-1000, -1000, -1000, 1487, -1000, 832, 1239, 2877, 48500, 48500,
	2081, 132, 132, -1000, 132, 600, 24596, 1888, -1000, 2905,
	116354, 3599, 118037, 3596, 116354, 116354, 116354, 128142, 3265, 116354,
	116354, 128142, -1000, 117476, 8680, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2077, 73600,
	1092, 116354, 1315, -1000, -1000, 1715, 1236, 1235, 82622, 2067,
	1711, 1812, 128142, 60011, 1006, 60011, 2627, -1000, -1000, 22294,
	-1000, 135556, 135556, -1000, 135556, -1000, 71328, 75317, 116354, -1000,
	1044, 116354, 77000, 957, 3061, 65124, -119, 973, 75317, 92185,
	-50, 2605, 116354, -1000, -1000, 2036, 3059, 511, 2387, -1000,
	128142, 3466, 3058, 599, 3651, 3649, -1000, 92185, 2303, 2385,
	-1000, -1000, 116915, 3135, 832, 116354, 1024, 56582, 1904, -1000,
	62868, 1058, 116354, 1819, 190, -1000, -1000, -1000, -15, 116354,
	-1000, 808, -1000, -1000, 5787, 5787, 973, -168, 598, -1000,
	884, 881, 60582, -131, -1000, 191, 596, 877, 869, -1000,
	2518, -1000, -158, -1000, 75317, 1007, 60011, 2875, 2872, -1000,
	-1000, 1016, -1000, 1467, 973, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -40, 1810, 116354, -89,
	-89, -61, -51, -1000, 1008, -1000, 1008, -1000, 1008, -1000,
	-1000, -1000, 135556, -1000, -1000, -1000, 1659, 1645, 116354, -1000,
	-1000, 116354, -1000, 24596, 116354, 92185, 24596, 92185, 2929, 2927,
	-1000, -1000, -1000, 116354, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1102, -1000, 1792, 2255, -1000, 595, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2475, -1000, -52,
	32286, 908, -1000, -1000, 92185, -41, 48500, 48500, 9700, 6609,
	48500, 52539, 52539, -1000, 48500, 5437, -1000, -1000, -1000, -1000,
	-1000, 2871, 594, 48500, 68508, 7899, 7355, -1000, 380, 9813,
	6276, -1000, 48500, -1000, 5232, -1000, 375, 34594, -1000, 133433,
	2, -132, -1000, 18231, -82, -134, -1000, -1000, 778, -1000,
	3063, -1000, 48500, 134343, 2442, 1928, 1844, 1673, 3564, 3595,
	21717, -1000, 66812, 1025, 2202, 130845, -1000, -1000, -1000, -1000,
	68508, 68508, 48500, 48500, -1000, 48500, 48500, 48500, -1000, -1000,
	-1000, 3564, 919, -1000, -1000, -1000, 919, -1000, -1000, 1395,
	-1000, 1395, -1000, 48500, -1000, -1000, 2869, 48500, -1000, 68508,
	68508, 52539, 52539, 52539, 52539, 52539, 52539, 52539, 52539, 52539,
	52539, 52539, 52539, 52539, 52539, 52539, 52539, 52539, 52539, 52539,
	52539, 2549, 52539, 3536, 3536, 3536, 1121, -1000, 2925, 2869,
	48500, 48500, 68508, 373, 372, 369, -1000, 48500, -82, -1000,
	-1000, 11624, 593, -1000, 2461, -1000, 2720, -1000, 48500, -1000,
	-137, -1000, 2369, -1000, -1000, 2720, 2720, -142, 135556, 56582,
	56582, -1000, 591, 48500, 2561, -1000, -1000, 764, -315, -1000,
	866, -1000, -1000, -1000, -1000, -1000, -1000, 864, -1000, 511,
	-1000, -1000, -1000, 188, 102291, 102291, 762, -1000, -147, -1000,
	-1000, -148, -1000, 3465, 367, 24596, -1000, 1024, 2673, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2577, -263, 128142, 128142,
	1710, 2219, 3592, -1000, 3567, 777, 761, 186, 3564, 366,
	365, 360, -89, 128142, 128142, 1703, 69079, 128142, -1000, -1000,
	-1000, 238, -1000, -1000, -1000, 237, -1000, -1000, -1000, -1000,
	2624, -1000, -53, -1000, -1000, -1000, 48500, -1000, -1000, 3286,
	1234, 1233, -1000, -1000, -1000, 2828, -1000, 3057, -1000, 2384,
	-1000, 1067, 2382, 1612, -1000, 48500, 590, 2631, 589, 588,
	3647, 2097, 3646, 1086, 3055, 2197, 3051, 2197, -1000, -1000,
	-1000, 943, -1000, 135556, 2087, -1000, 587, 583, -1000, -54,
	1665, 1874, 1227, 1015, -1000, -1000, 48500, 48500, 101730, -1000,
	464, 3285, -42, -1000, -1000, -1000, 1696, 1218, 1217, -1000,
	-1000, -1000, -1000, 2036, 1694, 1216, 1215, -1000, -1000, -1000,
	-1000, -1000, 2381, -1000, -1000, 3046, 1014, -1000, 2990, 2985,
	916, 116354, 48500, 48500, 134078, 133884, -1000, 1013, -1000, -1000,
	48500, -1000, -57, 1211, 3404, 2380, 92185, -1000, 2197, 3042,
	1206, -1000, 1194, -1000, -1000, -1000, 3406, 3405, 1191, -1000,
	-1000, -1000, 75317, -1000, -1000, 73029, -1000, -1000, 1051, 116354,
	128142, 92185, 1797, -1000, -1000, 81500, 82061, 116354, 2667, -89,
	902, -1000, 2240, 902, 1006, 2867, -1000, 2603, -1000, 1012,
	92185, 3643, 356, -149, -58, 68508, -1000, -1000, -1000, -1000,
	2374, 92185, 116354, 1330, 2625, 116354, 116354, 3464, -1000, 2315,
	571, 92185, 913, -1000, 3541, -1000, -1000, -1000, 1011, -1000,
	3391, 92185, 3462, 3028, 1010, 132, 92185, 3547, -1000, -1000,
	3461, 92185, 3024, 2302, 2376, 2523, 832, 75878, 1010, 2198,
	-67, -1000, 1819, 34017, 3279, -150, -1000, -1000, -1000, 1024,
	66250, 56582, 48500, 3642, -155, -1000, -1000, -1000, -1000, -1000,
	99486, 99486, 75317, 75317, 75317, 973, 116354, 116354, 3641, 75317,
	75317, 75317, -59, 582, -1000, 863, 862, 858, -1000, -1000,
	-1000, -1000, -1000, -1000, 857, 854, 853, 1007, -1000, -1000,
	-158, 60011, 132, -1000, 2213, 92185, -1000, 21140, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1008, -119, -1000, -1000, -1000,
	2085, 2341, 2085, 1803, 1800, -1000, -1000, 2242, -1000, -1000,
	-1000, -1000, 2634, 3246, 24596, 3395, 9712, 48500, 48500, 5058,
	6323, 5126, 9712, 48500, 48500, 68508, 10837, -157, 48500, 48500,
	-1000, 48500, 760, 135556, -1000, 3590, 48500, 352, 350, -1000,
	-1000, -1000, 3552, -1000, -1000, -1000, 135556, 48500, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 348, -1000, 149, -1000, -1000,
	-1000, 124769, -1000, 48500, 347, 3354, -1000, 336, 327, 9426,
	638, 130651, 130466, 130201, 325, -1000, -1000, 323, 321, 135556,
	2925, 135556, -1000, -1000, 953, 953, 1385, 1385, 1385, 1385,
	3536, 569, 1112, 433, 912, 912, 912, 459, 1121, 1121,
	912, 912, 912, 1121, 2856, 2557, 581, 8138, -1000, -1000,
	135556, 135556, 308, -1000, -1000, -1000, -82, 299, 11624, -1000,
	2710, 3353, 135556, -1000, 56582, 2710, 2710, -1000, -1000, 2357,
	116354, 135556, 56582, -1000, 2726, -1000, 19403, 18820, -1000, 24596,
	-1000, -1000, -1000, -1000, 3541, -1000, 64563, -1000, 580, -1000,
	144, -1000, 2673, -1000, 851, -1000, -1000, 75317, 75317, 2695,
	-1000, 2727, -263, -171, 116354, -1000, -1000, 759, 3640, 774,
	24596, 297, -1000, -1000, -1000, -89, -89, 116354, 2853, 92185,
	116354, 1421, -89, -1000, -1000, -1000, 3213, 135556, 116354, 116354,
	1450, 101169, 116354, 3023, -1000, 3020, -1000, 1082, 6094, 130007,
	57153, -1000, 57153, 116354, -1000, -1000, -1000, -1000, 1895, 1470,
	3639, 1115, -1000, 3318, 116354, -1000, 116354, -1000, -1000, -1000,
	116354, 116354, 92185, 116354, -1000, 128142, 3003, -170, 135556, -60,
	-1000, 850, -1000, 1384, -1000, 20563, 116354, 128142, 92185, 116354,
	128142, 92185, 3019, 116354, 2111, -1000, -1000, 2984, -1000, 135556,
	133698, 132, 48500, 3002, -172, 24596, -1000, 3588, 3587, 3017,
	3327, -1000, 116354, 3584, 116354, 92185, 3212, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1690, 1177, 1175, 2301, 2298, 2217,
	-61, 2067, 1006, -62, 579, -1000, 849, -1000, -1000, 846,
	845, 1006, -1000, 75317, 60011, 3636, 511, -1000, 2616, -1000,
	97236, 77000, 2218, -1000, -1000, 578, 116354, 116354, 575, -1000,
	132, -1000, 3633, 100047, 574, -1000, 2208, -1000, 756, -1000,
	2532, 128142, 2036, 132, 92185, -1000, 1005, 511, 296, -63,
	-1000, 3053, 1075, 24596, 92185, 3015, 2519, 832, 75878, -1000,
	1317, 2597, -1000, -64, -1000, 667, 132, 2198, -1000, -67,
	135556, -1000, 843, -1000, -177, -1000, -1000, 294, -1000, 3210,
	-1000, -1000, -178, -1000, -1000, 3490, 3490, 75317, 60011, 75317,
	75317, 75317, 60011, -1000, 1007, 902, -1000, 2351, -1000, -1000,
	-1000, -1000, -1000, 24596, 1597, -1000, 573, 570, -1000, -1000,
	-1000, -1000, 3246, 9712, 9712, 48500, 48500, 48500, 9712, 10837,
	-184, -1000, 9712, 9712, -82, -1000, -1000, 133433, -1000, -1000,
	-1000, 135556, -1000, 19986, 2099, -1000, 129822, -1000, 32286, -1000,
	-1000, 48500, 48500, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 52539, 2848, 566, 68508, -1000, -1000, 286, 1021, 48500,
	50231, 2369, 1021, 1021, -1000, -191, -1000, -1000, -1000, 3541,
	-1000, 3541, 144, -1000, -1000, 3632, 24596, -1000, 75317, -1000,
	-1000, -1000, 2216, -1000, -1000, 2935, -162, 770, -1000, 3631,
	-1000, -1000, 153, 128142, 2831, 148, 2660, -1000, -1000, -1000,
	2654, 3452, -1000, 1859, -1000, 116354, 116354, -1000, 116354, -1000,
	24596, 116354, 2774, 1256, -1000, 958, 2542, 565, 52539, 1101,
	92185, 883, 2701, 2700, -1000, 3500, 3351, 2733, -199, -1000,
	116354, 48500, 116354, -200, -207, 2361, -1000, -1000, 1098, 1254,
	48500, 1097, -1000, -1000, -1000, 68508, 557, 2197, 2197, -208,
	-210, -1000, -1000, -1000, 48500, 1172, 116354, 33440, -1000, 3628,
	3285, -1000, -1000, -1000, -1000, -1000, -1000, 116354, -1000, 116354,
	-1000, 48500, -1000, 133239, 48500, 1162, -1000, -1000, -1000, 3583,
	2197, 24596, 2197, -1000, 2197, 3327, 1113, 116354, 128142, 92185,
	1575, 1575, 2910, -1000, -1000, -1000, 2452, 2452, 75317, 60011,
	60011, -1000, -68, 1006, -1000, 3450, 2088, 3627, -1000, -1000,
	-1000, -1000, 2541, -1000, -1000, -1000, 116354, 2540, 2762, 57153,
	555, 553, 116354, 987, -1000, -215, -1000, 841, 840, 77000,
	957, 952, -1000, -70, 552, -1000, 838, -1000, -1000, -1000,
	-1000, 511, -1000, 2621, 3448, -1000, 3581, 551, 549, 116354,
	2294, 546, 24596, 3247, 832, 75878, -1000, 3135, 1819, -1000,
	2370, 116354, 3244, -1000, 2597, 545, -1000, 973, 544, 973,
	-1000, -216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-71, -1000, 861, 856, -1000, -1000, 92185, 92185, 48500, 48500,
	-1000, 9712, 9712, 9712, -1000, 277, -1000, -1000, 2198, 3350,
	-1000, -72, 129557, 129363, 669, 52539, 68508, -217, -1000, -1000,
	116354, 135556, -73, -1000, 135556, 542, 541, 371, -1000, -1000,
	-1000, 744, 639, -1000, -1000, -1000, -1000, 128142, 3626, -1000,
	128142, -89, 128142, 128142, 1686, 100608, 116354, -1000, -1000, 1612,
	2195, -1000, -1000, -1000, 116354, 2375, -1000, -1000, -1000, 1081,
	48500, 8138, 52539, 540, 48500, -1000, 534, 526, 3446, 3176,
	-1000, 2613, 2796, 2015, 57153, -1000, 3246, -1000, 129178, -1000,
	1074, 1880, -1000, -1000, -1000, -1000, 135556, 52539, 3327, 57153,
	-1000, -1000, 524, 522, 135556, 521, 836, 2822, -1000, -1000,
	-1000, -1000, -1000, 135556, 132, 135556, 516, 3404, -1000, -1000,
	-1000, -1000, 2197, 92185, -1000, -1000, -1000, 1154, -1000, -1000,
	-1000, -1000, 3624, 3620, 2816, 81500, -1000, -223, -1000, -1000,
	-1000, 1886, 132, 957, -1000, -1000, 2218, 515, -1000, -1000,
	2463, 2463, -224, 57153, 57153, -232, 2266, 2585, -1000, 100047,
	32863, 32863, 276, 3431, 952, -1000, 3534, -1000, 3173, 3173,
	48500, 3424, 3209, -1000, 132, -1000, 3547, 57153, -1000, 92185,
	57153, 2285, 1986, 2496, 75878, -1000, 2523, -1000, -1000, -233,
	116354, 1819, -1000, -1000, 75317, -1000, -1000, 2351, -1000, 116354,
	-1000, 116354, -1000, -1000, -234, -235, -1000, 2037, 48500, 32286,
	-1000, -1000, 669, -246, -1000, -80, -1000, 3422, 50231, 3619,
	3618, 3616, -1000, -1000, -263, -1000, -89, -89, -89, 116354,
	-1000, 1848, -1000, 2374, -1000, -1000, 3014, 2707, 128743, 8138,
	2471, 116354, 351, 2036, 2036, -1000, 3408, 2794, -1000, -1000,
	2081, 514, -1000, -1000, -1000, -1000, 908, 116354, -1000, 2706,
	92185, 8138, 1078, -249, 2085, 2085, 48500, 31709, 2110, -1000,
	48500, -1000, -1000, 3327, 128142, -1000, -1000, 128142, 2268, -1000,
	2751, 3553, -1000, 2266, 116354, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1074, -254, -255, -1000,
	-1000, 3311, -1000, 3208, -1000, -1000, -1000, 2616, 132, -1000,
	-1000, -1000, -256, 135556, 132, 3615, 1005, 274, -261, 1075,
	-262, 92185, 1891, -1000, 832, -1000, 2519, 1024, 3141, -1000,
	-269, -1000, -270, -271, -1000, -1000, 271, 49654, 49654, 49654,
	-82, -88, -1000, 116354, 513, -1000, -1000, -1000, -1000, -1000,
	143, -1000, -1000, 2981, 1004, -1000, 859, 1894, 225, 1103,
	8, 4, -1000, -1000, -1000, 2733, -1000, 116354, -1000, -1000,
	999, 511, -1000, 48500, 1074, -276, -1000, 1057, -278, -1000,
	1056, -279, -1000, 2814, -1000, -281, 2197, -263, 235, 1575,
	993, 3385, -1000, -1000, -1000, 2480, -284, -1000, -1000, 2015,
	1074, 2081, 2239, -1000, 2088, 987, -1000, -1000, -1000, -1000,
	-1000, 1074, 510, 2015, 508, 1501, 832, -1000, -1000, 1395,
	3247, 3033, 1378, 973, -1000, -1000, -1000, 3040, -1000, 53693,
	2196, 1799, 132410, 3040, 3040, -1000, -1000, 128142, 116354, 3371,
	-1000, 891, 889, 1506, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1024, -290, 3370, 2471, 135556, -1000, -1000, 2085,
	2652, -1000, 2085, 2758, -1000, 2106, -1000, -1000, -1000, -1000,
	2756, -1000, 1734, 3523, -1000, -1000, -1000, 116354, 2081, 2015,
	963, 1767, 1752, 3614, 957, 2266, 2015, 57153, 2081, 57153,
	2059, -1000, 116354, -1000, 1986, 1336, -1000, 1623, -1000, -1000,
	1818, 3492, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -89,
	-1000, 827, -1000, 3153, -1000, 1095, 2170, 2170, -1000, -1000,
	823, 859, -1000, 507, -1000, 493, -1000, 128142, 2205, -1000,
	-1000, -1000, 963, 2081, 1024, 491, -1000, 3613, -1000, 2266,
	-1000, 2081, -291, 963, -292, -1000, -1000, -1000, -119, 1891,
	-1000, 1602, 66250, 1796, -1000, -1000, 2183, 49077, 48500, -1000,
	3519, -1000, -1000, 2572, -1000, 48500, 2733, 48500, 48500, 235,
	63992, 1024, 963, -1000, -1000, 2480, 963, 1074, 1024, 2015,
	1501, 66250, -268, -1000, -1000, -1000, 135556, -1000, -1000, -1000,
	135556, -1000, -293, -298, -1000, -168, 99486, -1000, 1024, -1000,
	1024, 2015, -1000, 2081, 2059, -268, -1000, 2081, 1153, -299,
	-1000, -1000, 2081, 963, -1000, -1000, -1000, -1000, 489, -1000,
	963, 1024, 48500, 1024, -1000, -300, -1000, 2081, -1000,
}

var sqlPgo = [...]int{
	0, 4465, 4460, 4459, 4457, 4456, 4455, 4454, 4449, 4446,
	4438, 4435, 4434, 149, 4432, 4430, 4427, 4425, 4423, 4416,
	4415, 4414, 4412, 4411, 4410, 4409, 4408, 4407, 4406, 4404,
	4403, 4402, 4400, 4399, 4398, 4397, 4388, 4384, 4375, 4374,
	4372, 4370, 4365, 4363, 4362, 4361, 4359, 4354, 4352, 4351,
	4349, 4348, 4347, 4346, 4341, 4337, 4336, 4333, 4332, 4328,
	4327, 4326, 4325, 4324, 4323, 4322, 4321, 60, 4318, 4317,
	4314, 4313, 4311, 4310, 4307, 4304, 4303, 4301, 4300, 4299,
	4298, 4297, 4296, 4292, 4286, 4284, 4283, 4282, 61, 4281,
	282, 4279, 4278, 4275, 4274, 4267, 4265, 4263, 4261, 4260,
	4259, 4258, 4257, 281, 4256, 164, 171, 4255, 4254, 3799,
	4250, 4248, 280, 4247, 4244, 4243, 4240, 4238, 290, 4237,
	4236, 4235, 4234, 4233, 4232, 4230, 4227, 4225, 4222, 4208,
	4206, 98, 217, 4205, 4203, 1689, 4198, 4195, 4194, 4193,
	4192, 4189, 4188, 4187, 4180, 4179, 4177, 266, 174, 4176,
	277, 4170, 4163, 4161, 4160, 4159, 4158, 4156, 4155, 4151,
	4145, 4142, 4140, 4139, 4138, 4137, 4135, 4133, 4131, 4130,
	4127, 4125, 4117, 4116, 4113, 4110, 4109, 4108, 4107, 4105,
	4104, 4103, 4102, 4101, 4100, 4099, 4098, 4096, 4092, 4091,
	251, 221, 139, 4090, 4088, 276, 275, 4087, 4086, 4085,
	4083, 4082, 134, 20, 44, 4081, 4080, 99, 97, 90,
	104, 107, 109, 4079, 128, 4078, 133, 73, 4076, 33,
	1, 256, 252, 9981, 247, 4075, 4074, 4073, 246, 201,
	4070, 244, 4069, 4067, 4066, 4065, 4064, 4063, 85, 55,
	189, 187, 179, 184, 78, 57, 111, 88, 65, 45,
	14, 83, 218, 16, 6, 273, 4062, 270, 8, 147,
	11, 30, 4060, 4059, 4058, 4057, 3461, 116, 4056, 274,
	259, 180, 4055, 4054, 4053, 1039, 4052, 4046, 51, 4042,
	207, 130, 114, 17, 131, 4041, 150, 172, 31, 4039,
	175, 69, 4037, 4035, 112, 93, 8856, 9532, 4028, 4022,
	123, 79, 125, 194, 158, 157, 205, 178, 173, 168,
	96, 215, 213, 182, 42, 4021, 263, 4010, 3427, 87,
	188, 154, 5047, 4008, 4005, 4004, 91, 4002, 113, 3999,
	3998, 80, 21, 4, 2, 143, 32, 39, 12, 3997,
	24, 129, 49, 34, 3996, 23, 3994, 3990, 3989, 3987,
	46, 3985, 50, 166, 3984, 3981, 291, 3979, 106, 59,
	67, 3977, 29, 234, 3974, 230, 144, 3973, 3972, 255,
	209, 240, 3971, 95, 235, 3970, 3964, 3961, 3959, 3958,
	3952, 141, 10, 135, 3950, 3949, 148, 3948, 54, 245,
	203, 3946, 58, 3945, 3944, 183, 53, 161, 286, 465,
	227, 127, 228, 191, 231, 3943, 3942, 3941, 196, 3940,
	3938, 223, 159, 3937, 3936, 262, 294, 94, 48, 89,
	239, 77, 200, 163, 3935, 202, 3934, 3933, 292, 185,
	222, 3, 5, 108, 110, 3932, 7, 243, 162, 237,
	124, 3931, 7418, 2702, 2760, 3930, 3929, 152, 132, 84,
	136, 151, 272, 102, 3928, 3927, 2639, 3926, 3924, 3923,
	3920, 192, 3919, 3918, 3916, 146, 176, 197, 3915, 121,
	74, 52, 19, 140, 254, 288, 122, 226, 216, 265,
	3914, 3913, 3912, 199, 3911, 86, 119, 177, 206, 268,
	66, 3907, 250, 3906, 155, 267, 68, 156, 3904, 224,
	3902, 3901, 3900, 3899, 3898, 3896, 3893, 258, 238, 3892,
	3891, 3889, 36, 198, 3885, 271, 160, 211, 153, 76,
	3884, 100, 4401, 3881, 186, 236, 64, 208, 28, 3880,
	2925, 62, 3879, 0, 13055, 9626, 12190, 12960, 3874, 3876,
	3873, 3872, 3871, 219, 81, 3870, 3869, 3868, 115, 3866,
	92, 3865, 3864, 82, 3863, 27, 15, 18, 22, 26,
	693, 300, 3862, 3861, 63, 138, 169, 3860, 284, 242,
	3859, 3858, 3857, 3855, 101, 3854, 40, 3853, 43, 3852,
	3851, 47, 13, 37, 3848, 3846, 145, 3845, 120, 257,
	3844, 167, 3843, 71, 137, 3842, 3841, 3838, 70, 72,
	269, 212, 214, 105, 3834, 285, 3833, 204, 3829, 3828,
	25, 3827, 3824, 249, 118, 117, 41, 253, 142, 38,
	190, 220, 3823, 3820, 181, 3818, 3816, 3815, 279, 3813,
	3812, 35, 3810, 3809, 3806, 9, 3805, 3804, 210, 3163,
	3803, 3801, 56, 3797, 193,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 600,
	600, 600, 601, 601, 602, 602, 602, 24, 45, 17,
	18, 18, 18, 18, 603, 603, 603, 603, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 596, 596, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 604, 604, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 528,
	528, 623, 623, 624, 624, 624, 624, 624, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 591, 591,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 610, 610, 609, 608, 608, 608, 611, 611,
	611, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 530, 530, 531, 531, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 68, 192, 192, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 76, 76, 76, 76, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 626, 626, 627, 627, 628, 628,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 85, 85, 354, 354,
	317, 317, 86, 86, 86, 87, 87, 88, 88, 72,
	72, 589, 589, 370, 370, 487, 487, 73, 597, 597,
	597, 599, 599, 598, 598, 90, 90, 393, 393, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 100, 100, 100, 100,
	100, 101, 101, 101, 98, 98, 98, 95, 95, 95,
	94, 94, 94, 99, 99, 99, 588, 306, 306, 97,
	97, 97, 96, 96, 96, 371, 371, 102, 102, 102,
	102, 318, 103, 103, 103, 103, 103, 103, 103, 103,
	106, 106, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 489, 489, 104, 104, 104,
	454, 454, 109, 109, 109, 409, 409, 110, 110, 110,
	110, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 593, 593, 363, 363, 269, 269, 269,
	269, 122, 122, 122, 122, 123, 123, 123, 124, 124,
	197, 197, 140, 140, 140, 140, 139, 139, 139, 139,
	139, 139, 139, 139, 62, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 67, 67, 67,
	143, 143, 620, 620, 145, 142, 142, 142, 142, 142,
	141, 141, 144, 144, 144, 144, 146, 148, 148, 148,
	148, 148, 147, 147, 147, 147, 147, 149, 149, 521,
	521, 379, 379, 519, 519, 540, 540, 520, 520, 324,
	324, 324, 324, 324, 325, 325, 325, 529, 529, 529,
	529, 529, 529, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 198, 198, 199, 200,
	200, 200, 200, 200, 175, 175, 175, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 380, 380,
	178, 178, 178, 162, 162, 151, 151, 151, 151, 151,
	151, 151, 156, 156, 156, 156, 156, 156, 156, 156,
	152, 152, 164, 164, 164, 164, 164, 157, 157, 158,
	158, 158, 159, 159, 159, 159, 185, 185, 161, 161,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 153,
	153, 153, 153, 166, 166, 166, 166, 416, 416, 416,
	190, 190, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 188, 188,
	188, 188, 188, 188, 612, 612, 613, 613, 613, 182,
	182, 182, 182, 182, 182, 468, 468, 176, 176, 176,
	176, 181, 181, 181, 181, 184, 184, 184, 184, 399,
	399, 173, 173, 173, 174, 174, 174, 179, 179, 180,
	355, 355, 177, 177, 183, 183, 183, 183, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 155, 155, 155,
	155, 186, 186, 172, 172, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 630, 630, 168, 168,
	168, 167, 167, 167, 167, 170, 170, 171, 171, 171,
	171, 171, 171, 169, 160, 189, 590, 590, 586, 586,
	586, 586, 586, 586, 586, 586, 587, 587, 587, 587,
	592, 592, 114, 114, 114, 114, 114, 114, 114, 125,
	125, 125, 125, 125, 125, 125, 128, 128, 115, 115,
	115, 115, 115, 115, 115, 118, 118, 116, 116, 116,
	116, 117, 117, 80, 80, 80, 80, 80, 15, 15,
	15, 81, 81, 260, 260, 219, 219, 219, 342, 342,
	220, 220, 332, 332, 332, 332, 217, 217, 218, 218,
	82, 82, 631, 631, 631, 605, 605, 605, 606, 606,
	606, 606, 606, 606, 326, 326, 327, 327, 434, 434,
	434, 434, 434, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 340, 341, 341, 333, 333,
	339, 338, 338, 337, 337, 336, 336, 334, 335, 335,
	335, 344, 344, 343, 346, 346, 345, 433, 549, 549,
	551, 551, 551, 551, 551, 551, 551, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 553, 417, 417, 632, 632, 633, 634,
	547, 547, 547, 548, 543, 543, 544, 544, 544, 544,
	544, 328, 328, 329, 329, 329, 329, 545, 546, 361,
	361, 472, 550, 550, 552, 552, 554, 635, 635, 635,
	635, 635, 635, 636, 636, 636, 432, 432, 431, 431,
	352, 352, 555, 555, 555, 555, 556, 556, 556, 556,
	556, 559, 558, 557, 557, 557, 557, 557, 84, 84,
	84, 396, 396, 395, 395, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	194, 194, 272, 272, 272, 78, 78, 78, 12, 12,
	12, 12, 12, 12, 12, 287, 287, 13, 13, 13,
	607, 607, 607, 83, 83, 83, 83, 83, 83, 350,
	350, 350, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 595, 595, 594, 594, 273, 273,
	638, 638, 89, 89, 89, 89, 89, 89, 89, 89,
	490, 490, 491, 491, 77, 77, 77, 77, 77, 418,
	418, 415, 415, 414, 414, 360, 360, 470, 470, 470,
	471, 277, 277, 278, 278, 238, 238, 238, 31, 30,
	22, 22, 26, 26, 27, 27, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 28, 28, 48, 48, 48,
	48, 49, 49, 49, 49, 52, 52, 53, 53, 47,
	47, 47, 47, 50, 50, 44, 44, 54, 54, 54,
	54, 54, 614, 616, 616, 615, 615, 619, 619, 619,
	619, 619, 619, 617, 617, 618, 618, 621, 621, 622,
	622, 121, 121, 126, 126, 126, 126, 126, 127, 127,
	127, 127, 129, 129, 129, 129, 138, 138, 193, 193,
	193, 193, 193, 193, 193, 56, 56, 56, 56, 69,
	69, 69, 69, 136, 640, 640, 640, 137, 137, 137,
	639, 639, 270, 270, 428, 428, 429, 429, 641, 641,
	430, 430, 430, 430, 430, 263, 262, 264, 264, 265,
	265, 75, 75, 75, 253, 253, 252, 254, 254, 255,
	255, 250, 250, 532, 532, 257, 257, 257, 258, 258,
	246, 246, 247, 247, 248, 248, 249, 249, 261, 261,
	642, 642, 112, 112, 112, 196, 196, 316, 316, 316,
	425, 425, 425, 353, 353, 284, 284, 427, 427, 427,
	427, 427, 392, 392, 392, 195, 195, 368, 368, 382,
	382, 383, 383, 484, 484, 384, 119, 119, 120, 120,
	135, 135, 223, 223, 221, 221, 221, 221, 221, 221,
	221, 221, 228, 228, 229, 229, 230, 230, 231, 232,
	232, 232, 232, 372, 372, 233, 233, 233, 222, 222,
	222, 224, 224, 224, 224, 224, 224, 224, 227, 227,
	227, 227, 234, 234, 234, 226, 226, 566, 566, 566,
	568, 568, 570, 570, 569, 569, 565, 565, 567, 567,
	637, 637, 398, 398, 398, 349, 351, 347, 347, 348,
	348, 358, 358, 356, 357, 357, 359, 359, 469, 469,
	469, 239, 239, 239, 389, 389, 389, 389, 390, 390,
	421, 421, 419, 419, 419, 419, 420, 420, 422, 422,
	422, 423, 423, 424, 424, 386, 386, 387, 387, 388,
	388, 388, 388, 450, 450, 225, 225, 225, 365, 365,
	365, 366, 366, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 441, 441, 439, 439, 439, 439,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 474,
	475, 475, 367, 367, 476, 426, 426, 584, 584, 584,
	585, 585, 467, 467, 477, 477, 477, 477, 477, 477,
	465, 465, 466, 466, 485, 486, 486, 402, 402, 402,
	402, 400, 400, 403, 403, 403, 403, 403, 401, 401,
	478, 478, 478, 478, 391, 391, 479, 479, 479, 479,
	480, 481, 481, 482, 482, 435, 436, 436, 492, 492,
	492, 492, 494, 364, 364, 364, 364, 364, 542, 541,
	541, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 509, 509, 509, 509, 509, 509, 509, 495,
	495, 495, 495, 495, 499, 499, 499, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 500, 500,
	505, 505, 506, 506, 506, 501, 502, 507, 507, 507,
	507, 643, 643, 511, 511, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 497, 497, 497, 504, 504, 504,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 410, 410, 412, 412, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 444, 444,
	444, 444, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 560, 560, 560,
	560, 560, 560, 560, 560, 446, 446, 563, 563, 564,
	564, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 571, 571, 572, 572, 574, 574, 575, 575,
	576, 577, 577, 577, 578, 579, 579, 573, 573, 580,
	580, 580, 580, 581, 581, 582, 582, 582, 582, 582,
	583, 583, 583, 583, 583, 456, 456, 457, 457, 463,
	463, 463, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 323, 323, 322,
	274, 274, 274, 274, 274, 274, 377, 377, 375, 375,
	375, 378, 378, 376, 376, 374, 374, 373, 373, 453,
	453, 451, 451, 455, 455, 404, 404, 510, 510, 510,
	510, 510, 510, 510, 510, 405, 405, 405, 413, 406,
	406, 407, 407, 407, 407, 407, 447, 448, 408, 408,
	408, 449, 449, 458, 462, 462, 461, 460, 460, 459,
	459, 437, 437, 438, 438, 385, 385, 644, 644, 381,
	381, 483, 483, 483, 483, 320, 320, 369, 369, 319,
	319, 311, 311, 312, 312, 312, 312, 362, 362, 464,
	464, 512, 512, 513, 513, 514, 514, 515, 515, 516,
	517, 518, 452, 452, 295, 294, 281, 282, 293, 292,
	291, 280, 283, 288, 289, 290, 285, 286, 302, 301,
	300, 251, 256, 307, 308, 308, 310, 310, 309, 309,
	297, 298, 299, 488, 279, 313, 313, 314, 314, 314,
	315, 315, 315, 315, 275, 275, 276, 276, 303, 303,
	304, 305, 305, 296, 296, 296, 266, 266, 266, 267,
	267, 268, 268, 526, 526, 523, 523, 523, 524, 524,
	524, 525, 525, 525, 525, 522, 522, 522, 522, 522,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 534, 534,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 536, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 539,
	539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 6, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 13, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	7, 10, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 608, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 390, 436, 448, 405, 143, 427, 410,
	-144, -145, 466, -56, -69, -137, -136, 73, 130, 420,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -625, 102, -567,
	-93, -96, -129, -629, 164, 224, -115, -116, -117, 372,
	-123, -124, 429, -126, -127, -128, 432, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 471, -180, -189, -158, 531, 49, 486,
	82, 148, 440, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -566, -94, -95, -98, -100, -101, -97, -99,
	428, -224, -222, 605, 546, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 568, 577, -227, -225, -226, -234, 458, 554,
	506, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, -318, 2, -297, -303, -304, -305, -296,
	-266, -536, -539, 4, -533, -537, 171, 234, 335, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 333, 328, 329, 330, 323, 324,
	320, 325, 321, 322, 326, 327, 332, 337, 338, 339,
	342, 221, 344, 345, 348, 366, 352, 353, 354, 357,
	358, 361, 364, 365, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 377, 378, 380, 381, 382, 384, 385,
	386, 388, 390, 391, 393, 394, 396, 397, 398, 399,
	400, 401, 402, 404, 405, 407, 406, 408, 410, 412,
	413, 414, 420, 427, 421, 423, 424, 425, 426, 428,
	429, 430, 431, 432, 434, 435, 436, 438, 439, 440,
	441, 442, 444, 446, 447, 451, 452, 468, 469, 488,
	448, 449, 450, 453, 454, 455, 456, 457, 461, 459,
	460, 462, 463, 464, 466, 467, 470, 471, 473, 474,
	475, 476, 477, 478, 479, 482, 484, 485, 486, 505,
	487, 489, 493, 494, 495, 496, 490, 491, 504, 498,
	499, 501, 502, 507, 508, 509, 510, 511, 512, 513,
	514, 516, 524, 525, 526, 528, 531, 532, 533, 534,
	522, 536, 537, 540, 541, 542, 545, 543, 544, 546,
	548, 551, 552, 553, 559, 558, 560, 561, 563, 564,
	569, 570, 572, 573, 574, 36, 50, 51, 54, 56,
	58, 69, 70, 71, 75, 125, 126, 155, 167, 168,
	180, 195, 196, 208, 210, 218, 219, 220, 241, 242,
	244, 249, 271, 341, 343, 359, 363, 379, 383, 387,
	389, 403, 443, 480, 492, 497, 517, 518, 519, 520,
	527, 529, 554, 555, 556, 562, 571, -318, 2, -297,
	350, -290, 2, -266, -266, 390, 28, 2, 28, 378,
	460, 509, 511, 2, -593, -363, 2, 28, -269, -266,
	102, 206, 458, -290, 2, -593, 206, -363, 25, 2,
	-266, 2, 364, 22, 27, 66, 77, 98, 141, 166,
	189, 192, -628, 366, 397, 446, 462, 504, 514, 528,
	2, 558, 292, 459, 506, 234, 120, 533, 453, -607,
	451, 452, 364, 395, 438, 209, 547, -270, 2, 448,
	-266, 292, 2, 608, 94, 74, 443, 463, -147, 2,
	282, 525, -148, -149, -146, 517, -521, 453, 438, 314,
	-266, 608, 608, 608, 28, -279, -266, 506, 234, 453,
	120, 502, 608, 2, 506, 369, 558, 459, 120, 400,
	234, 533, 192, 141, 27, 453, -607, 582, 583, 292,
	127, -591, 2, -586, 4, -537, -533, -312, -311, 506,
	512, 120, -305, -296, 597, -304, 608, 608, 608, 608,
	2, 252, 253, 399, 398, 463, 464, 28, 608, 608,
	608, 608, 451, 2, 166, 22, 27, 66, 93, 98,
	127, 189, 192, 355, -626, 366, 397, 462, 504, 508,
	514, 528, -606, 487, 68, 426, 453, -605, -607, 292,
	533, 141, -414, 120, 282, 204, 541, 511, 509, 539,
	133, 240, 544, 543, 608, 608, -106, 2, 605, 32,
	31, -105, -109, 143, 466, -216, 506, 245, 2, -266,
	608, 608, 608, 2, 252, 253, 451, 452, 28, 608,
	608, 190, -586, 2, 608, 608, 608, 2, 28, 252,
	253, 451, 452, 245, 2, 68, 455, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 2, -191, 463, 487, 215, 47, 46,
	74, 28, 396, 79, 370, 121, 127, 150, 534, 207,
	234, 235, 260, 93, 94, -416, 44, 253, 68, 252,
	452, -612, 451, -468, 507, 454, 460, 501, 264, 448,
	525, 102, 548, 439, 574, 400, 401, 499, 414, 283,
	159, 191, 4, 120, 314, 438, 465, 268, 267, 517,
	282, 447, 373, 84, 608, -637, 2, 506, -639, 2,
	525, 525, 2, -639, 2, -639, 2, -639, 2, -640,
	525, 571, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	-222, -224, -223, 608, 608, 608, 608, 608, 608, 608,
	-191, 463, 2, 74, 28, -356, -358, 538, 243, 152,
	356, -221, -223, 2, -566, -519, 2, -442, -540, -444,
	595, 596, 588, 503, 67, -322, 334, 575, -456, 127,
	539, 350, -539, -445, -458, 155, 366, 443, -378, 8,
	9, 5, 6, 7, -275, -446, -452, 530, 170, 340,
	-315, 609, 10, 605, -563, -223, -457, 37, 210, 65,
	-523, -314, -276, -495, 244, -313, -296, -560, -561, 4,
	-533, -534, -524, -498, -506, -502, -503, -509, -266, -536,
	77, 111, 112, 110, 115, 114, 285, 284, 116, 113,
	465, 547, 66, 36, 218, 219, 249, 341, 220, 75,
	-562, 142, -535, 241, 242, 480, 51, 403, 180, 126,
	125, 343, 56, 54, 555, -507, 122, 517, 518, 519,
	520, 195, 196, 58, 167, 168, 363, 387, 497, 527,
	529, 208, 271, 43, 106, 191, 239, 222, 248, 250,
	254, 272, 275, 315, 331, 336, 360, 362, 437, 472,
	-643, 556, 492, 69, 70, -568, 406, -569, -290, -568,
	608, 608, 610, 608, -347, -349, -351, 2, 28, 139,
	605, 2, -473, 2, -474, -478, -223, 265, -477, 605,
	-475, 603, -297, 351, -564, 444, -560, -561, -275, -296,
	-314, 4, -533, -535, 607, -352, 605, 120, 453, 506,
	78, 234, 93, 166, 192, -409, 605, -266, 28, 350,
	521, 610, -348, 394, -454, 605, 350, 353, 190, 353,
	60, 296, 2, 2, 2, 2, 2, 218, -266, 506,
	119, 2, 263, 2, 2, 2, 2, 2, 2, 2,
	-371, 218, 2, -297, 558, -371, 218, 2, -371, 218,
	2, -415, 2, 87, -280, 218, 2, -266, -306, 218,
	2, -301, -303, -310, 218, 2, -308, -266, -528, 218,
	2, -527, 4, -533, 116, 465, -442, 2, -135, 2,
	60, -266, 558, 2, 468, 2, 605, -147, 2, 71,
	525, 43, 463, -148, 2, -429, 2, -430, -262, -263,
	-264, -485, -265, 251, 393, 402, 578, 131, 334, 574,
	-620, 190, 587, 521, -519, -519, -519, -379, 607, 2,
	2, 2, 2, 2, 2, -478, 218, -297, 2, -294,
	-522, 4, -533, -537, -534, -538, -536, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 127, 131, 135, 139, 140, 144, 148, 152,
	170, 172, 185, 189, 190, 206, 209, 212, 225, 238,
	243, 245, 265, 269, 276, 284, 285, 334, 340, 346,
	350, 351, 355, 356, 376, 392, 409, 433, 458, 465,
	483, 500, 506, 515, 521, 523, 530, 538, 539, 547,
	549, 557, 565, 566, 567, 568, -539, 77, 2, -478,
	218, 2, -300, 218, -478, -303, 2, -280, 2, -442,
	-600, 513, 162, 421, 2, -319, 218, -297, -299, -303,
	-301, 2, 2, 2, 2, -308, 2, -527, 218, 2,
	28, 28, 558, 394, 245, 521, 610, -369, -311, -312,
	-518, 8, -362, -266, 607, -442, 2, -135, -118, 2,
	185, -442, 218, 2, -135, 218, 2, -442, 218, 2,
	-135, 218, 2, -266, 2, -608, 2, -530, 218, -526,
	10, -525, 5, 4, -533, -537, -534, 218, -266, 2,
	296, 2, 2, 528, 2, 98, 506, 119, 2, 425,
	-627, 446, 532, 2, 2, 2, 2, 2, 2, 2,
	506, -285, 2, -266, 185, 490, -308, 218, -309, 2,
	459, -638, 406, -527, 218, 2, 558, -301, 218, 2,
	-301, 234, 247, -280, 218, 2, 511, 509, 511, 509,
	190, 2, 245, 2, 245, 2, -479, 2, -480, -474,
	-481, 603, 351, -489, 2, -488, -525, 554, -106, 605,
	-106, 605, 463, 605, -530, -297, -297, -442, 2, -135,
	-118, 2, -442, 2, -135, 2, -266, 2, -132, -530,
	-131, 605, 190, -266, 2, -442, 2, -135, -118, 2,
	-442, 2, -135, 2, -216, 185, 2, 120, 506, -191,
	2, 185, 549, 2, 8, 2, 225, -530, 454, 401,
	177, 2, 468, 2, 469, 74, -416, 574, 74, 190,
	2, 190, 2, -399, 2, 568, 394, 190, 2, 2,
	-590, 2, 350, 190, 2, 190, 2, 190, 2, 190,
	2, 190, 2, -190, 464, 526, 505, 398, 253, 2,
	-135, 565, -118, 253, 252, -442, 565, 2, -613, 185,
	452, -442, 2, 524, 262, 160, 190, -399, 2, 190,
	2, 190, 2, 5, 2, 399, 488, 2, 251, 393,
	488, 2, -297, 506, 558, 459, 120, 28, 2, 451,
	2, 2, 88, 89, 190, 2, 190, 2, 205, 190,
	2, 190, 506, -380, 607, 574, 2, -391, -478, -428,
	-429, -428, 521, -356, -358, -191, 468, 2, -228, -389,
	-230, 185, -419, -420, -231, 276, 172, 346, -232, -398,
	28, 139, -398, -398, 60, 606, 606, 11, 12, 76,
	41, 595, 596, 597, 598, 183, 599, 600, 593, 594,
	592, 585, 586, 590, 257, 258, 95, 589, 587, 86,
	290, 445, 173, 174, 175, 176, 422, 232, 34, 233,
	14, 15, 16, -322, 33, 355, 275, 575, 222, 472,
	588, 17, 18, 19, 248, 250, 336, 50, 225, -274,
	366, -321, 503, 67, -442, -442, -442, -442, -442, -442,
	-442, -442, 362, 605, -385, -437, 603, -223, 605, 605,
	605, 605, -518, -223, -442, -456, 606, -376, 605, -223,
	-456, -451, 605, 443, 603, 605, -459, -442, 5, 5,
	5, 605, 607, -571, 569, 185, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 389, -500, 605, -499, 605, -499, -499, 559,
	-497, 605, 577, 570, 605, -497, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 559,
	610, -568, -352, 605, -381, -483, -442, 597, -381, -381,
	350, -373, -442, 106, -402, 254, 315, 191, 272, 437,
	239, -439, 609, -439, -467, 577, -223, -475, -296, -223,
	-477, 605, -473, -467, -107, -518, -90, -103, -112, -135,
	-150, -195, -196, 597, -297, 605, 190, 605, 607, -522,
	190, -362, -280, -307, -266, -297, -313, -314, -319, -291,
	-266, 2, 2, 138, -373, -586, 533, 453, 28, 459,
	-528, -269, 38, -453, -492, -493, -542, 609, -541, -495,
	-505, -501, -504, 379, 383, -524, 54, 555, -507, 244,
	4, -533, -535, 241, 242, 480, 51, 403, 180, 126,
	125, 343, 56, 517, 518, 519, 520, 195, 196, 58,
	556, 492, 69, 70, -586, 533, 453, 28, 459, 185,
	-528, 185, -528, 2, 2, 155, 2, 2, 2, -266,
	-244, 610, 64, 430, 155, -371, 218, -244, 155, -244,
	155, -320, 218, -319, -244, 155, -244, 610, 155, -244,
	610, 155, 607, 610, 155, -528, 2, -415, -521, -373,
	38, -429, 2, 127, 4, 5, -641, 610, 274, -325,
	289, 333, 214, 351, 572, 344, 131, -529, 5, 4,
	-452, -464, 127, 282, 244, -512, -514, 8, -513, 9,
	-515, 595, 596, -520, -519, 109, 607, -522, -241, 423,
	466, 365, -240, 24, 29, 143, 236, 319, 552, 161,
	-337, 237, -334, 369, 155, 484, 542, -600, -603, 450,
	513, 162, 421, 90, 344, 466, 365, 423, 155, -395,
	-397, 38, 118, 319, 364, 61, 228, 294, 295, 486,
	562, 155, 466, 365, 423, 365, -13, -255, 24, 143,
	-257, -252, 466, -603, 99, 423, 581, 428, 375, 498,
	392, -603, -600, 270, -602, 564, 332, -243, 484, 542,
	-600, -603, 450, 423, -242, -339, -334, 369, 155, 609,
	24, 143, 423, 466, 365, -623, -624, 29, 423, 365,
	-594, -287, -565, 225, 568, 155, -287, -287, -478, 218,
	-617, 185, 2, -610, -131, 266, 5, 10, -530, -131,
	-369, 610, 610, -522, 597, 452, 451, 155, 155, 155,
	155, 253, 185, 334, 334, 2, 2, 2, 2, 2,
	192, -605, -628, 2, 2, -297, 218, -354, 350, -589,
	-370, 506, -297, 185, 334, 43, -300, 218, 2, -303,
	558, -594, 334, -302, 218, -297, 38, 605, 334, 2,
	-415, 2, 234, -565, 334, -479, -316, -297, -474, -316,
	466, -290, 38, -439, -297, 606, 610, -489, -489, -530,
	-204, 568, 190, 605, -216, 568, 568, 253, -486, 610,
	-485, 225, -531, -530, -132, -530, 426, 253, -530, -589,
	-280, 2, -297, 2, 506, 255, -530, -204, 225, -530,
	-530, -530, -521, 28, 469, 2, -190, 464, 526, 89,
	469, 2, -297, 506, 120, 234, 80, -617, 185, 2,
	-266, -592, 185, -587, 438, 453, 533, -586, -297, 120,
	-297, 120, -297, 120, -297, -297, 2, 2, 2, 2,
	2, 85, 2, -135, -442, 2, 85, 2, 46, 485,
	-613, 185, 2, 524, 2, 524, 2, -266, -266, -266,
	487, 274, -297, -297, -297, -298, -303, 454, 507, 534,
	452, -442, 2, -630, 2, 190, 185, 2, 506, 234,
	506, 234, 120, 190, 74, 120, 28, 506, 449, 607,
	4, -244, 610, -270, -228, -389, -521, -390, -389, -229,
	-228, -231, 185, 402, 543, 319, 470, 259, -420, -419,
	28, -442, -424, 179, 318, -442, -422, -444, 595, 596,
	-513, -515, -372, 344, -222, -222, -222, -359, -469, -442,
	392, 234, -494, -492, -492, -295, -522, 517, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, 275, 222, 472, 50, 225, -442,
	521, -442, -442, -442, -442, 312, 334, 340, 530, 170,
	540, 139, 344, -644, 500, 40, -449, -223, -377, 605,
	-463, 35, 483, 28, -456, 605, 2, -437, -442, -438,
	-323, -321, -266, 595, 596, 597, 598, 599, 600, 585,
	586, 587, 14, 15, 16, 590, 594, 592, 593, 183,
	95, 589, 290, 445, 86, 173, 174, 175, 176, 257,
	258, 17, 18, 19, 34, 588, -374, -373, -373, 606,
	557, 28, 139, 597, 2, 606, 610, 38, 606, -442,
	-374, -455, -451, -373, -462, -461, 565, -410, -411, 573,
	299, 123, 216, 297, -412, 457, -516, 8, -522, 597,
	-572, 178, 209, 605, 606, 2, 606, 2, 606, -442,
	2, 606, -442, 2, 606, -442, 2, 606, -442, 2,
	606, 2, 606, 2, -442, -442, -442, -442, -442, -442,
	-442, -373, 8, -516, -516, 517, 517, -516, -516, -516,
	-508, 379, 380, 381, 382, 277, 278, 279, 280, 383,
	384, 385, 386, 304, 305, 306, 307, 300, 301, 302,
	303, 308, 309, 310, 311, 200, 201, 202, 203, 196,
	197, 198, 199, -508, -404, 2, -510, -373, 4, 573,
	299, 123, 216, 297, 457, 5, -404, 2, -405, 2,
	-442, -373, -406, -443, -444, 595, 596, 588, -322, -456,
	-407, 2, -442, -374, -442, 57, 269, 523, -408, -442,
	190, -373, -373, 2, -373, 2, -569, 38, -373, -365,
	610, 190, 38, 4, -365, -365, 605, 606, 610, -403,
	213, 293, 288, 247, -403, -473, -402, 254, -400, 360,
	-400, -400, -467, -281, 603, 611, -522, -467, -466, -465,
	38, -290, 357, -467, -467, 607, 606, -466, 604, -584,
	605, 608, 608, 608, 608, 608, -297, 605, -373, -522,
	607, 489, 2, 606, 248, 248, 248, 248, 248, 350,
	444, 606, 521, -588, -306, -310, 507, 2, 568, -105,
	352, 606, 610, -364, 37, 603, 607, -516, 2, 2,
	-511, 559, 605, 605, -411, 605, 190, -588, -310, 507,
	2, -593, -363, -363, 521, -266, 2, -297, -371, -244,
	155, -371, -371, -244, 610, 155, -280, -301, -306, -308,
	-310, -266, -527, -528, -244, -302, -620, 606, 525, -430,
	-324, 402, 482, 424, 461, 502, 8, 9, 8, 9,
	610, -522, 610, -621, 93, 521, 78, 453, -259, 283,
	521, -433, 218, 78, -543, 93, -283, -544, -266, 72,
	539, 392, 189, 153, -621, 93, 392, -621, 93, 2,
	236, 93, 466, 487, 28, 60, -478, 41, 41, 28,
	-601, -602, 270, 190, 574, 506, 234, 453, 521, 521,
	-478, -397, -492, 118, 294, 295, 60, -517, -512, 595,
	596, -517, 60, -517, -517, -517, 568, -300, -478, 453,
	521, 521, 521, 412, 412, -252, -148, 521, 521, 28,
	-191, 431, 127, -642, 587, 412, 270, -602, 521, 190,
	610, 41, 41, 28, -601, 190, 521, -319, -281, 553,
	42, 553, 42, 553, 521, 42, 453, 521, 610, 42,
	521, 521, -13, 466, -595, -271, 105, 325, 287, 326,
	97, 322, 96, 321, 103, 323, 104, 324, 560, 337,
	561, 338, 63, 320, 298, 327, -272, -273, 146, 371,
	551, 120, -527, -13, -13, 466, 365, 423, 155, -618,
	225, 28, -607, 225, -486, 225, -486, -311, -266, 607,
	-135, -442, -442, -135, -442, -135, 46, 155, 155, 2,
	-638, 263, 605, -328, 334, 190, -362, -487, 245, 610,
	-370, -586, 155, -527, -396, -395, 334, -302, 218, 2,
	155, -352, 334, 149, 605, 400, 2, 155, -282, 218,
	-267, -266, -415, -246, 510, 155, -393, 549, -425, -135,
	605, 127, 38, -425, -382, -383, -484, -384, -283, 605,
	-290, -439, -106, -488, 606, 606, 606, -203, 354, -202,
	-266, 5, -216, -353, -284, -283, 119, 404, 404, -210,
	568, -131, -132, 606, 610, -486, 225, 490, -204, -204,
	-486, -486, -297, 185, -530, -204, -204, -204, 2, 2,
	2, 2, -399, -297, -280, -319, -297, 28, 607, -528,
	-528, -310, -306, -399, -280, -399, -280, -399, -280, -399,
	-399, -135, -442, 487, 2, 463, 185, 185, 607, -399,
	-355, 433, 2, 400, 120, 506, 369, 234, -297, -319,
	-297, -319, -280, 120, -280, 121, -297, 4, -478, -390,
	-229, 351, 259, 470, -422, -423, -444, 443, 444, -423,
	443, 444, 8, 9, 8, 9, -233, 474, 339, -371,
	610, -238, 39, 135, 259, -297, 574, 151, -442, -442,
	521, -644, 500, -449, 151, -442, 312, 340, 530, 170,
	540, 139, 344, 190, 605, -443, -443, 606, -375, -442,
	-442, 604, 613, 606, 607, 606, -358, 610, -356, -442,
	-373, -373, 606, 607, -373, -362, 604, 604, 610, 606,
	-460, -461, 144, -442, 521, 521, 521, 521, 605, 606,
	607, -577, 361, 605, 605, -442, 606, 606, 606, 606,
	38, 610, 610, 610, 606, 610, 610, 610, 606, 606,
	606, 610, 606, 574, 574, 606, 606, 606, 606, 610,
	606, 610, 606, 190, 606, 606, -413, 376, 606, 11,
	12, 595, 596, 597, 598, 183, 599, 600, 593, 594,
	592, 585, 586, 587, 86, 290, 445, 14, 15, 16,
	-322, 248, 225, -443, -443, -443, -443, 606, -447, -448,
	190, 185, 38, -408, -408, -408, 606, 190, -373, 606,
	606, 605, -570, 292, 334, 606, -436, -435, 566, -483,
	-366, 2, -473, -292, -522, -436, -436, -373, -442, 254,
	254, -401, 549, 350, -403, -473, -466, -518, -441, -440,
	187, 39, 135, 328, 329, 330, 221, 188, -466, -290,
	-352, -466, -466, -522, -467, -467, -465, 606, -585, -518,
	606, -367, -476, -564, -358, 607, -522, -213, -565, -192,
	5, 340, -192, -192, -192, -192, -297, -528, 521, 521,
	225, 25, 377, -492, 603, 604, 8, -522, 605, -516,
	-516, -516, -528, 190, 190, 225, 350, 190, -527, 2,
	-244, -371, -244, -244, -319, -320, -244, -244, -244, -394,
	568, -519, -429, 537, 83, 402, 517, -519, -240, 423,
	-283, -283, -297, -307, 204, 413, -527, 334, -433, 218,
	-245, 334, 218, -291, -492, 605, -417, 570, 259, 259,
	549, -283, -291, 259, 218, -283, 218, -291, 2, -291,
	-596, 402, 345, -442, 60, -335, 281, 400, 335, -241,
	423, 466, 365, -135, -135, -135, 605, -620, 549, 138,
	-297, -319, -297, -307, -527, -302, 466, 365, 423, 331,
	-313, -517, -517, -395, 466, 365, 423, -307, -527, -300,
	-527, -251, 218, -266, -251, 218, 453, -280, 412, 574,
	45, -642, 521, 190, -442, -442, -242, -135, -135, -135,
	605, -281, -243, 423, 5, 218, -283, 5, -283, 218,
	5, -266, -283, -307, -527, -624, 24, 143, -283, -307,
	-527, -271, 371, -530, 340, 545, -280, -594, -287, 453,
	521, 521, -478, -614, -615, 206, 436, 453, 439, -528,
	-131, -207, 568, -131, -201, 229, 597, -591, -530, -266,
	558, -266, -326, -329, -327, -283, -434, -433, -547, -548,
	-543, 275, 234, 539, 247, 171, 93, -219, -220, 570,
	568, 155, -317, -297, 603, -204, -530, -297, -487, -308,
	-309, 155, -352, 334, -527, 38, 155, 605, 2, 2,
	-301, 350, 334, -282, 218, -247, 145, -642, -280, -436,
	-366, -392, -427, 433, 350, -353, 554, -290, -392, -368,
	610, 190, 587, 607, -353, -482, 597, -106, -106, -204,
	610, 605, 587, 587, 605, -530, 606, 610, 607, 605,
	587, 587, -212, 354, -211, 147, 261, 246, 476, 477,
	478, 479, 137, 475, 124, 317, 230, -486, -530, -210,
	-132, 190, 190, -65, 568, 506, -204, 609, 439, -266,
	-399, -399, -399, 463, 463, -266, -362, -293, -522, -280,
	-297, -294, -319, 185, 185, -280, 543, -423, 351, 286,
	-469, -239, 576, -297, 609, -442, -442, 151, 151, -442,
	-443, -443, -442, 151, 190, 605, -442, -453, 33, 33,
	606, 610, -438, -442, -321, 606, 557, -358, -358, 606,
	597, -522, 609, 606, -451, 148, -442, 515, 299, 216,
	297, -412, 297, -412, -412, -516, 5, -522, 597, -578,
	-286, 605, -266, 566, -357, 356, 606, -494, -492, -442,
	-442, -442, -442, -442, -516, -497, -497, -512, -512, -442,
	-447, -442, -494, -492, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, 139, 334, 344, -443, -448, -447,
	-442, -442, -492, 606, 606, 606, -373, -105, 605, 292,
	-386, 209, -442, -486, 610, -386, -386, 606, -473, -473,
	605, -442, 254, 604, 610, 612, 587, 587, -352, 607,
	-465, -466, 604, 606, 610, 606, 610, -426, 38, 606,
	-522, -436, -215, -214, 136, 53, 107, 134, 340, 248,
	-616, 568, -528, -528, 453, 353, 5, 8, 603, 604,
	607, -516, 606, 606, 606, -528, -528, 453, -586, 533,
	453, 28, -528, -244, -244, 119, 319, -442, 521, 521,
	60, 225, 155, 334, 551, 334, -544, 153, -549, -442,
	605, 234, 605, 605, 2, -235, -236, -237, 143, 466,
	24, -622, 2, 549, 155, -244, 155, -244, 572, -335,
	605, 605, 521, 453, -259, 521, 568, -373, -442, -205,
	127, -521, -603, 609, -603, 609, 453, 521, 521, 453,
	521, 521, 334, 155, 568, 169, 169, 574, -251, -442,
	-442, 185, 521, 568, -373, 521, -496, 48, 26, 334,
	-301, -244, 155, 521, 521, 533, 466, -530, -530, 340,
	-13, -307, -527, -302, 466, 365, 423, -593, -593, 206,
	-310, -618, -486, -209, 354, -208, 147, 435, 137, 261,
	230, -486, -207, 190, 245, 568, -302, 2, 606, 606,
	610, 610, -550, -245, -297, -282, 234, 234, -289, -267,
	38, 348, 348, 605, -297, -86, 568, -485, -518, -597,
	568, 43, -300, 38, 155, -594, -135, -302, -490, -491,
	5, 38, -297, 155, 350, 334, -248, 268, -642, -526,
	-565, -358, -392, -381, 335, 91, 606, -436, -383, -366,
	-442, 2, 606, -202, -203, -530, -530, -530, -204, -216,
	-284, 2, -531, -530, -530, 610, 605, 587, 587, 587,
	587, 587, 587, -210, -486, -131, -135, 354, -297, 597,
	-399, -341, -340, 369, 344, -341, 443, 443, 351, 179,
	264, -238, -281, -442, -442, 151, 33, 33, -442, -442,
	-453, 606, -442, -442, -373, 604, 5, -442, 606, 606,
	8, -442, 606, 607, -579, -266, -442, 606, 60, 606,
	606, 610, 610, 606, 606, 606, 606, 606, 606, 606,
	-448, 190, 139, 344, 605, 606, 606, -105, -450, 212,
	60, -473, -450, -450, -401, -362, -473, -440, -281, 603,
	-281, 603, -522, -518, -476, 605, 607, -214, 587, -530,
	-530, -192, 206, -616, -616, 568, -310, 604, 2, 603,
	-522, 606, -310, 190, -588, -310, 507, 119, -283, -283,
	506, 443, -251, 392, -433, 155, 155, -551, 93, -553,
	76, 171, 102, 334, 340, 539, 392, 72, 127, 350,
	409, -632, -633, -634, 38, 579, 580, 606, -360, -470,
	-564, 605, -266, -360, -362, 334, 495, 127, 350, 334,
	127, 350, 563, 119, 2, 533, 79, -283, -291, -362,
	-362, -297, -307, -527, 163, 606, 610, 587, 2, 597,
	597, -307, -527, -302, -307, -527, -300, 155, -251, 367,
	169, 521, -135, -442, 163, 606, -281, 5, 5, 155,
	-278, 76, -283, 5, -283, -301, 119, 453, 521, 521,
	350, 350, 353, -614, -615, -207, 610, 605, 587, 587,
	587, -207, -531, -131, 2, -352, -342, 236, -283, -548,
	-545, -546, 392, -434, -552, -554, 171, 392, -330, 605,
	-282, -267, 605, -135, 2, -218, -217, -266, 5, 605,
	-328, 354, 604, -599, 354, -598, 117, 137, -527, -396,
	-135, -302, -350, 568, -352, 606, 610, 149, -418, 549,
	-281, -297, 155, -249, 267, -642, -526, -246, -421, -419,
	140, 605, 350, -135, -358, 587, 606, 606, 119, 606,
	-211, -212, -530, -131, -530, -530, -530, -131, -210, -486,
	-66, -67, 234, 93, 374, -294, 506, 234, 605, 605,
	-238, -442, -442, -442, 606, -358, -522, 597, -573, 369,
	606, -469, -442, -442, -443, 190, 605, -453, 606, -574,
	567, -442, -387, -388, -442, 441, 108, 210, -574, -574,
	606, -518, -518, 2, -530, 353, 2, 521, 603, 2,
	190, -528, 190, 190, 225, 225, 38, 412, -433, -291,
	-291, -295, -288, -266, 171, 218, 340, 563, -417, 259,
	605, -443, 543, -297, 605, 2, 217, 217, 30, 60,
	-635, 131, 238, 606, 610, -471, -277, -266, -442, -471,
	606, 606, 340, 543, 340, 563, -442, 543, -492, 605,
	-244, -244, 606, 606, -442, 521, -521, 100, -519, 2,
	-603, -251, -280, -442, 185, -442, 521, 5, -244, -295,
	-244, -244, -278, 533, -307, -527, -302, -619, 507, 460,
	534, 454, 193, 442, -619, 185, -208, -209, -530, -131,
	-131, -207, 38, -336, -337, 2, -550, 259, -288, 259,
	227, 154, -360, 605, 605, -362, -631, 568, 606, 610,
	587, 587, -326, -219, -87, -88, 522, -485, 610, 605,
	587, -352, 319, 119, 38, 5, 605, 605, -266, 350,
	605, -281, -261, 92, -642, -526, -247, -392, 335, -362,
	93, -421, -449, -204, 605, -204, 606, 610, 28, 605,
	28, 605, -297, -319, -373, -373, 606, -358, 60, 610,
	606, 606, -443, -453, 606, -575, -576, -286, 610, 605,
	605, 467, 604, 604, -528, 2, -528, -528, -528, 453,
	-251, 392, -266, -544, -553, -288, 334, 549, -442, -443,
	-268, 605, -442, 605, 605, 38, 127, 238, 132, 223,
	-432, -636, 101, 496, 226, -470, -238, 606, -431, 549,
	409, -443, -278, -360, 605, 605, 605, 587, 190, -135,
	605, -496, -244, -301, 521, 2, 2, 190, -593, 606,
	-609, 407, -135, -219, 605, -331, 81, 94, 128, 217,
	194, 235, 487, 493, 28, -331, 606, -360, -360, 606,
	-332, 350, 119, 319, -217, -519, -519, 606, 38, -88,
	9, -598, -599, -442, 38, 119, -135, -490, -360, -297,
	-360, 350, -253, -252, 276, -526, -248, 606, -291, -392,
	-531, -67, -362, -362, 606, 606, -580, 400, 444, 211,
	-373, -359, 606, 610, 38, -388, 2, 2, 2, -616,
	-310, 412, -245, 155, 213, 606, -555, 291, -266, 606,
	-396, -396, 38, 132, 223, -338, -334, 605, -239, -471,
	213, -297, -604, 549, 606, -344, -343, -340, -346, -345,
	-340, -373, -519, 100, 367, -373, -278, -528, -528, 350,
	-611, 191, -610, 5, 10, -332, -361, -472, -283, -431,
	606, 606, 82, 119, -342, -135, 606, -135, 2, -350,
	606, 606, -418, 606, -297, -250, -532, 412, 414, -642,
	-249, -436, 140, 606, 606, 606, 606, -581, -582, 50,
	536, 109, -442, -581, -581, -576, -578, 190, 171, 568,
	-556, -559, -558, 584, 473, 191, 368, 606, 495, 562,
	606, 606, -635, -362, 568, -352, -442, -431, 606, 610,
	554, 606, 610, 554, 606, 190, 606, -244, -616, -244,
	-619, -206, 568, 46, -260, -259, 606, 610, -432, -431,
	-338, 391, 133, 143, -336, -631, -431, 605, -432, 605,
	-258, -257, -642, -512, -261, 140, 335, 543, -204, -583,
	153, -582, 388, 184, 443, 388, 184, -583, -583, -528,
	-288, 55, -558, 584, -559, 584, 543, 133, -436, 606,
	55, -555, -343, 225, -345, 190, 367, 190, 451, -610,
	30, -472, -338, -432, -220, 568, 444, 444, 2, -219,
	-332, -432, -360, -338, -360, -254, -255, -256, -362, -253,
	335, 543, 466, 109, 209, 516, 319, 33, 587, -557,
	319, 430, 64, 466, -557, 587, -556, 605, 605, -528,
	354, -220, -338, -436, 2, -332, -338, 606, -220, 606,
	-250, 466, -382, 443, 358, -582, -442, 23, 340, 127,
	-442, -635, -373, -373, -244, -203, 605, -436, -220, -260,
	-220, -431, -436, -432, -258, -382, -436, 606, 606, -203,
	-436, -436, -432, -338, -254, -436, -333, -334, 521, 606,
	-338, -220, 605, -220, -436, -373, -436, 606, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 562, 563, 565, 566, 567, 569,
	570, 572, 574, 576, 577, 578, 580, 581, 583, 584,
	585, 586, 587, 589, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	662, 664, 0, 1438, 1440, 1442, 1444, 0, 818, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	378, 380, 381, 383, 385, 386, 387, 389, -2, 0,
	495, 496, 498, 500, -2, 0, 1032, 1034, 1036, 0,
	651, 653, 0, 1039, 1041, 1043, 0, 0, 674, 675,
	0, 1550, -2, 666, 668, 670, 672, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 762, 764, 766,
	768, 770, 772, 773, 775, 777, 779, 780, 782, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, -2, 812, 813, 814, -2, -2, 0,
	-2, -2, -2, 1456, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 439, 441, 443, 445, 447, 450,
	452, 454, 1608, 502, 504, 506, 508, 510, 512, 514,
	0, -2, 1622, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1581, 1583, 1585, 1587, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 564, 568, 571, 573, 575, 579, 582,
	588, 590, 592, 547, 548, 551, 2320, 2338, 2339, 2340,
	2343, 2344, 2345, 2346, 2347, 2348, 2808, 2889, 2890, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 549, 550, 1221,
	0, 616, 614, 2305, 617, 2603, 619, 621, 489, 490,
	491, 492, 493, 494, 0, 644, 630, 1620, 645, 647,
	648, 649, 650, 611, 609, 0, 649, 644, 2374, 642,
	1436, 1437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 418, 1280, 1281, 1282, 1421, 1422, 2651,
	1463, 0, 239, 663, -2, -2, 2773, -2, 697, 698,
	-2, -2, 712, 716, 707, 2777, 0, 2654, 2638, -2,
	719, 1439, 1441, 1443, 816, 817, 2324, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 249, -2, -2, -2, -2, 0, 0,
	2699, 2426, 2273, 2340, 2276, 2271, 341, 343, 345, 347,
	348, 0, 0, 0, 0, 0, 0, 0, 379, 382,
	384, 388, -2, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 1095, 1096, 1343,
	0, 0, 0, -2, 497, 499, 552, 553, 0, 1609,
	1609, 560, 561, -2, 0, 0, 0, 0, 311, 301,
	1033, 1035, 1037, 1038, 0, 0, 0, 0, 0, 652,
	654, 0, 0, 279, 1040, 1042, 1044, 1045, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 667, 669, 671,
	673, 744, 746, 748, 750, 752, 754, 756, 758, 760,
	763, 765, 767, 769, 771, 774, 776, 778, 781, 784,
	786, 788, 790, 792, 794, 796, 798, 800, 802, 804,
	806, 808, 810, 811, 824, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	926, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1013,
	0, 0, 827, 830, 831, 832, 833, 834, 835, 0,
	899, 924, 925, 935, 815, 0, 1261, 1610, 1465, 1446,
	1460, 1465, 1448, 1449, 1450, 1451, 1452, 1457, 1459, 1453,
	1454, 1455, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 440, 442, 444, 446, 448, 451, 453, 455,
	-2, 1579, 1580, 503, 505, 507, 509, 511, 513, 515,
	655, 0, 657, 0, 829, -2, 0, 1614, 1614, 1614,
	0, 0, 1580, 1578, 0, 660, 661, 723, 724, 1887,
	0, 0, 0, 0, 0, 0, 0, 0, 2147, 1975,
	0, 725, -2, 2008, 2010, 2748, 2576, 2773, 2146, 2012,
	2013, 2014, 2015, 2016, 0, 2018, 2019, 2020, 2021, 2022,
	2023, 0, 2025, 0, 2030, 2031, 2032, 0, 2755, 2250,
	2334, -2, 0, 0, 2761, 2330, 0, 2113, 2048, -2,
	-2, 2357, 2336, 1819, 1820, 1821, 1822, 1823, -2, -2,
	2791, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 0, 2736, 2756, 2757, 2762, 2764, 2758, 2745,
	2073, 2440, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1846, 1855, -2, -2, -2,
	-2, -2, -2, -2, 2749, 2750, 2767, 2770, 2776, 2781,
	2782, 2754, 2763, 2790, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	1847, -2, -2, -2, -2, 1597, 2617, 1600, 1221, 1598,
	1582, 1584, 0, 1586, 0, 0, 0, 1591, 1617, 1615,
	0, 1666, 1595, 1596, 1689, 1689, 1713, 0, 1694, 0,
	1713, 1609, 1740, 0, 1700, 2643, 2049, 2050, 0, 2340,
	2335, -2, -2, 2788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 612, 0, 618, 620, 0,
	0, 0, 643, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 421, 422, 423, 424, 425, 2756, 0, 0,
	0, 430, 0, 432, 433, 434, 435, 436, 437, 438,
	209, 2756, 520, 545, 0, 209, 2756, 523, 209, 2756,
	526, 0, 529, 1341, 209, 2756, 532, 2301, 209, 2756,
	535, 537, 2309, 209, 2756, 541, 2316, 2314, 542, 0,
	544, 229, 225, 226, 227, 228, 1432, 1433, 1434, 1435,
	0, 1462, 1342, 665, 0, 691, 0, 695, 696, 2744,
	-2, 0, 2663, 700, 701, -2, 703, 1466, 1470, 1471,
	1472, 1473, 1474, 0, 0, 0, 0, 1479, 0, 0,
	0, 0, 692, 693, 710, 711, 717, 720, 0, 819,
	820, 821, 822, 823, 71, 0, 2756, 1740, 73, 0,
	2295, 2365, 2366, 2367, 2368, 2369, 2789, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2791, 77, 0,
	2756, 82, 0, 2756, 0, -2, 95, 0, 108, 0,
	135, -2, -2, -2, 116, 0, 2756, 0, 2270, -2,
	0, 221, 302, 303, 304, 0, 1070, -2, 0, 1274,
	1276, 1276, 0, -2, 0, 0, 0, 1023, 2267, 2272,
	1024, 2291, 1025, 2277, 0, 349, 350, 351, 352, 353,
	0, 354, 2756, 356, 357, 0, 359, 360, 2756, 362,
	363, 0, 365, 0, 367, 0, 261, 265, 2756, 314,
	315, 2353, 2354, 2361, 2362, 2363, 2364, 2756, 392, 394,
	0, 396, 397, 0, 399, 0, 0, 0, 403, -2,
	419, 0, 416, 406, 407, 409, 410, 411, 412, 413,
	0, 459, 457, 2306, 0, 0, -2, 2756, 0, 1067,
	0, 0, 1321, -2, 0, 1267, 0, 1328, 2756, 1324,
	0, -2, 0, 1607, 2756, 1483, 1099, 1100, 1101, 1102,
	1752, 486, 0, 1514, 0, 1516, 0, 1536, 1746, 1689,
	0, 0, 1751, 0, -2, 605, 2323, -2, 555, 0,
	556, 0, -2, 0, 328, 0, 0, 1048, 1050, 1051,
	1053, 1054, 1057, 1058, 1059, 1060, 0, 1062, 1726, 280,
	282, 0, 0, 0, 1047, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 0, 0, 676, 0, 0, 825,
	826, 0, 0, 842, 843, 844, 0, 328, 2655, 2612,
	2462, 851, 0, 854, 857, -2, 0, 0, 0, 0,
	861, 0, 866, 867, 868, 0, -2, 0, 875, 877,
	1031, 879, 0, 0, 881, 0, 885, 0, 888, 0,
	890, 0, 892, -2, -2, -2, 900, 901, -2, 906,
	-2, 0, 910, -2, 0, 913, 0, 916, -2, 0,
	926, 922, 923, 0, 0, 0, 0, 943, 944, 0,
	953, 0, 956, 957, 958, 0, 962, 963, 0, 965,
	966, 967, 968, 0, 2726, 2660, 2426, 0, 976, -2,
	982, 984, 0, -2, 0, 1000, 0, 1004, 0, 0,
	1012, 0, 0, 828, 0, 836, 837, 209, 1744, 1445,
	-2, 1447, 0, -2, 0, 656, 0, 659, 1639, 1565,
	1562, 0, 1636, 1637, 1566, 0, 0, 0, 1573, 0,
	1612, 1613, 0, 0, 0, 1552, 1553, 0, 0, 0,
	0, 2152, 2153, 2154, 2155, 2168, 2156, 2157, 2167, 2165,
	2166, 2158, 2159, 2164, 2178, 2179, 2169, 2170, 2160, 2173,
	2171, 2172, 2174, 2175, 2176, 2177, 0, 0, 2183, 0,
	2161, 2162, 2163, 2191, 0, 0, 2192, 0, 2194, 0,
	2184, 2180, 2181, 2182, 0, 1954, 1956, 2258, 0, 0,
	0, 2190, 2185, 2186, 1892, 1893, 1894, 1895, 1896, 1929,
	1933, 1934, 0, 0, 2009, 2255, 2254, 2011, 0, 0,
	2206, 0, 2024, -2, 0, 2147, 2201, 0, 0, 2033,
	2034, 2035, 0, 0, 2206, 0, 0, 2249, 2045, 2046,
	1884, 0, 0, 2115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1832, 0, 1834, 0, 1835, 1836, 1843,
	1856, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 2230, -2, 0, 0, 0, 0, 1848,
	0, 1599, 0, 0, 1670, 2259, 2263, 2264, 1670, 1670,
	0, 0, 2207, 1737, 1737, 0, 0, 1732, 1732, 1732,
	1730, 1713, 0, 1713, 1723, 0, 1713, 1713, 0, -2,
	1694, 0, 0, 1723, 0, 1707, 593, 595, 597, 599,
	600, 601, 603, 1741, 1742, 0, 0, 0, 0, 2341,
	0, 0, 0, 0, 2313, 0, 0, 2326, 0, 0,
	2300, 374, 375, 0, 0, 0, 2709, 2654, 0, -2,
	623, 646, 1609, 0, 2209, 1767, 1771, 0, 1773, 1774,
	1775, 1776, 1777, 0, 0, 1768, -2, 1844, 1846, 1867,
	2358, 2359, 2360, 1827, 1828, 1829, 1830, 1831, 1839, 1826,
	1826, 1826, 1837, 1866, 1858, 1866, 1862, 1812, 1813, 1814,
	1849, 1850, 1851, 1852, 0, 2709, 2654, 0, -2, 0,
	633, 0, 0, 1547, 420, 0, 427, 428, 429, 0,
	516, 0, 207, 208, 0, 209, 2756, 521, 0, 524,
	0, 209, 2756, 2265, 530, 0, 533, 0, 0, 539,
	0, 0, 0, 0, 0, 209, 1549, 0, 0, 0,
	0, -2, 705, 713, 714, 715, 0, 1468, 0, 1475,
	734, 735, 736, 1477, 1478, 0, 1480, 708, 737, 738,
	739, 740, 741, 742, 0, 2279, 2280, 2281, 2282, 2285,
	2286, 0, 0, 706, 727, 709, 0, 721, 117, 1418,
	0, 0, 164, 0, 1418, 1418, 0, 0, 0, 0,
	192, 0, 1133, 0, 0, 0, 0, 135, 149, 160,
	129, 130, 131, 0, 0, 0, 0, 0, 0, 83,
	1243, 0, 1246, 0, 0, 0, 0, 0, 0, 0,
	1259, 0, 0, 0, 0, 0, 97, 98, 0, 0,
	103, 104, 0, 148, 0, 0, 0, 0, 0, 1511,
	0, 139, 135, 0, 0, 134, 136, 119, 0, 0,
	135, 150, 162, 0, 196, 198, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 231, 0, 0, 0,
	1268, 0, 0, 0, 1606, 0, 0, 0, 0, 2756,
	1416, 0, 1401, 0, 1726, 2511, -2, -2, 280, 1726,
	1022, 0, 0, 2341, 2275, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 395, 398, 400, 401, 402,
	0, 1320, 0, 408, 449, 1192, 2756, 0, 0, 476,
	471, 0, 473, 0, 0, 0, 1242, 2756, 1240, 2310,
	0, 1265, 0, 1221, 2756, 2308, 0, 0, 0, 1329,
	2350, 1338, 1342, 1501, 0, 488, 0, 1517, 1519, 0,
	0, 1747, 0, 1749, 1689, 1609, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 1061, 286, 0,
	1725, 0, 0, 316, 1726, 280, 2629, 1046, 328, 328,
	1726, 678, 1726, 680, 0, 0, 845, 846, 0, 328,
	328, 328, 852, 853, 855, 856, -2, -2, -2, -2,
	858, 859, 950, 0, 0, 0, 949, 869, 0, 871,
	874, 878, 0, 1016, 2638, 2654, 2709, 1029, 950, 2426,
	950, 2426, 950, 2426, 950, 950, 894, 938, 946, 905,
	912, 0, 907, 911, 914, 917, 0, 919, 927, 0,
	-2, 0, 930, 0, 932, 0, 934, 950, 951, 954,
	961, 964, 969, 970, 971, 972, 2321, 973, 974, 975,
	-2, 979, 980, 0, 991, 996, 997, 993, 0, 0,
	0, 0, 0, 0, 1007, 1008, 0, 0, 1015, 0,
	838, 1260, 0, 1458, 1639, 1565, 658, 1556, 1638, 1557,
	1564, 1567, 0, 0, 1569, 0, 1571, 0, 1634, 1635,
	1642, 1643, 0, 1653, 1654, 1646, 0, -2, 0, 0,
	1649, 1650, 1575, 0, 1592, 1593, 1594, 1623, 1626, 1357,
	0, 2889, 1888, 1762, 1889, 1890, 2294, 0, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, -2, -2,
	-2, -2, -2, -2, -2, -2, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, -2, -2, -2,
	1930, 1931, 1932, -2, 2193, 2195, 0, 2258, 0, -2,
	0, -2, -2, -2, -2, 1951, 0, 1953, 1958, 1960,
	1962, 0, 0, 0, 0, 2257, 1972, 2241, 2242, 0,
	0, 2149, 2150, 2151, 1957, 0, 1976, 2256, 2253, 0,
	0, 2187, 0, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 0, 2205, 1622, 2037,
	0, 0, 0, 0, 2044, 2029, 2203, 0, 2202, 0,
	0, 0, 2213, 0, 2248, 2244, 0, 2292, 1883, 1870,
	1871, 1872, 1873, 1874, 1875, 1885, 0, 2289, 2327, 2333,
	2123, 0, 0, 0, 2074, 2075, 2076, 2077, 2078, 0,
	2080, 2081, 0, 2083, 2084, 0, 2086, 2087, 0, 2089,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 0, 0, 2095, 0, 2216, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2097, 0, 2099,
	2207, 2227, 0, 0, 1977, 0, 0, 0, 0, 2147,
	0, 2102, 2207, 2235, 0, 0, 0, 0, 0, 2207,
	0, 2240, 0, 2109, 0, 2111, 1601, 0, 0, 1757,
	0, 0, 0, 2262, 1757, 1757, 0, 1665, 0, 0,
	1733, 1734, 1735, 1736, 0, 0, 1737, 0, 1727, 1731,
	1728, 1729, 1723, 1686, 0, 0, 2296, 1723, 1692, 1722,
	0, 1221, 1712, 1723, 1723, 0, -2, 1696, 1713, 0,
	0, 594, 596, 598, 602, 604, 0, 0, 1622, -2,
	0, -2, 330, 1220, 0, 0, 0, 0, 0, 0,
	613, 615, 0, 0, 536, 0, 0, 629, 0, 607,
	0, 610, 0, 1758, 1761, 0, 0, 1772, 1778, 1779,
	0, -2, 0, 0, 1868, 0, 0, 0, 0, 0,
	641, 0, 644, 0, 0, 0, 431, 546, 209, 518,
	0, 209, 209, 527, 0, 0, 209, 538, 209, 2317,
	209, 2315, 230, 543, 1548, 242, 0, 694, 0, 1467,
	1476, 0, 731, 0, 733, 0, 2283, 2287, 2284, 2288,
	0, 722, 0, 0, 0, 0, 1417, 0, 1364, 0,
	0, 168, 2756, 0, 211, 0, 0, 1185, 2302, 0,
	1175, 0, 0, 2448, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 132, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 1245, 1247, 1254, 1256, 0, 1250, 2290, 0,
	0, 1251, 0, 1253, 1255, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 1277, 0, 0, 1278,
	1279, 1489, 1490, 0, 1510, 1511, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 2269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 1316, 1314, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 0, 0,
	0, 0, -2, 1272, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 319, 2268, 2278, 0,
	1055, 1056, 355, 358, 361, 364, 248, 0, 0, 404,
	0, 0, 1105, 1080, 0, 0, 458, 328, 0, 0,
	472, 476, 2319, 1065, 1238, 1241, 0, 1221, 2756, 1288,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 2756,
	2297, 2349, 2350, 1503, 1511, 0, 1757, 0, 1534, 1520,
	0, 0, 0, 1534, 1538, 1539, 1541, 1542, 0, 0,
	1748, 1754, 554, 606, 1609, 1609, 328, 326, 2579, 324,
	321, 323, 0, 0, 1523, 1525, 0, 0, 0, 274,
	0, 283, 1726, 281, 0, 286, 0, 0, 0, 470,
	677, 682, 840, 0, 328, 848, 849, 850, 896, 940,
	948, 995, 860, 862, 863, 864, 0, 0, 0, 1030,
	1026, 1027, 1028, 880, 950, 883, 950, 886, 950, 889,
	891, 909, 915, 928, 921, 929, 0, 0, 0, 942,
	959, 0, 978, 0, 0, 0, 0, 0, 0, 0,
	1001, 1002, 1003, 1005, 1010, 1009, 1014, 839, 1745, 1560,
	1561, 1563, 0, 1572, 0, 0, 1648, -2, -2, 1647,
	1651, 1652, -2, -2, -2, -2, 1568, 0, 1577, 1574,
	0, 1633, 1355, 1356, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1973, 0, -2, 1952, 1955, 1959, 1961,
	1963, 0, 0, 0, 0, 0, 0, 2196, 0, 2198,
	1974, 2251, 2254, 2189, 0, 2145, 0, 0, 1621, 1622,
	1622, 0, 2043, 0, 2204, 0, 2211, 2212, 0, 2036,
	0, 2245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 2079, 2082, 2085, 2088,
	0, 0, 0, 0, 2068, 0, 0, 0, 2072, 1838,
	1824, 0, 1866, 1864, 1865, 1859, 1866, 1863, 1816, 0,
	1815, 0, 2094, 0, 2096, 2098, 0, 0, 2100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 1981, 1982, 2002, 2101, 2233, 2234,
	0, 0, 0, 0, 0, 0, 2107, 0, 2239, 2108,
	2110, 1609, 0, 1602, 0, 1667, 1656, 1756, 0, 2260,
	1726, 1669, 1671, 2261, 2299, 1656, 1656, 0, 2208, 0,
	0, 1717, 0, 0, 0, 1719, 1690, 0, 0, 1684,
	0, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1691, 1221,
	1721, 1693, 1697, 2327, 0, 1723, 0, 1708, 0, 1710,
	1743, 0, 1702, 1705, 0, 0, 2342, 1757, 0, 368,
	376, 377, 369, 370, 371, 372, 0, 1404, 0, 0,
	0, 0, 0, 2210, 0, 1763, 0, 1769, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 1546, 426,
	517, 209, 522, 525, 2266, 209, 531, 534, 540, 238,
	0, 690, -2, 729, 730, 732, 0, 728, 165, 1418,
	0, 0, 1360, 1362, 1366, 1372, 1375, 0, 170, 2756,
	182, 0, 2756, 0, 1149, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 2756, 209, 2756, 209, 186, 188,
	191, 0, 195, 193, 0, 1137, 0, 0, 1140, 118,
	1418, 0, 0, 121, 125, 137, 0, 0, 0, 147,
	0, 0, 0, 1377, 1381, 1389, 0, 0, 0, 1248,
	1249, 1252, 1258, 84, 0, 0, 0, 1385, 1387, 1393,
	96, 99, 2756, 2311, 101, 2756, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 123, 127, 138,
	0, 1395, 120, 0, 224, 0, 0, 214, 209, 2756,
	0, 216, 0, 217, 218, 232, 0, 0, 0, 1068,
	1069, 1315, 0, 1263, 1264, 0, 1275, 1269, 0, 0,
	0, 0, 0, 1397, 1398, 0, 0, 0, 1416, 1413,
	1726, 244, 0, 1726, 252, 0, 2274, 0, 266, 391,
	0, 0, 0, 0, 1104, 1203, 1106, 1108, 1109, 1110,
	211, 0, 2350, 1175, 2500, 2350, 0, 0, 1075, 0,
	0, 0, 464, 460, 0, 469, 475, 474, 480, -2,
	0, 0, 0, 0, -2, 0, 0, 1331, 1325, 1326,
	0, 0, 0, 0, 2756, 1505, 1511, 0, 1607, 1622,
	487, 1512, 1534, 0, 0, 0, 1522, 1518, 1515, 1757,
	0, 0, 0, 0, 0, 1750, 1753, 557, 558, 305,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 284, 0, 287, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 286, 317, 276,
	1726, 0, 0, 679, 0, 0, 847, 0, 870, 873,
	882, 884, 887, 931, 933, 950, 960, 985, 2298, 986,
	1127, 0, 1127, 0, 0, 1006, 1570, 0, 1645, 1576,
	1627, 1628, 0, 1357, 0, 1891, 1936, 0, 0, -2,
	0, 0, 1940, 0, 0, 0, -2, 0, 0, 0,
	2197, 2199, 0, 2253, 2188, 2038, 0, 0, 0, 2042,
	2026, 2027, 0, 2148, 2214, 2243, 2247, 0, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 0, 2293, 2328, 2332, 2121,
	2122, 2126, 2307, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1861, 0, 0, 2215,
	2226, 2228, 1978, 1979, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, -2, -2, -2, 1996, 1997, 1998,
	-2, -2, -2, 2003, 0, 0, 0, 2229, 2231, 2232,
	2236, 2237, 0, 2104, 2105, 2106, 2238, 0, 1609, 1603,
	1664, 0, 1755, 1668, 0, 1664, 1664, 1616, 1715, 0,
	0, 1739, 0, 1687, 0, 1688, 0, 0, 1720, 0,
	1695, 1698, 1699, 1709, 0, 1701, 0, 1704, 0, 2038,
	-2, 329, 331, 333, 0, 336, 337, 0, 0, 0,
	622, 0, 1404, 1404, 0, 624, 608, 0, 0, 1765,
	0, 0, 1841, 1845, 1869, 635, 637, 0, 0, 2709,
	2654, 0, 634, 519, 528, 240, 0, 1724, 0, 0,
	0, 0, 0, 0, 210, 0, 1184, 0, 1147, 0,
	0, 1174, 0, 0, 1190, 172, 173, 174, 0, 0,
	0, 0, 184, 0, 0, 180, 0, 190, 194, 1134,
	0, 0, 0, 0, 1365, 0, 0, 0, 144, 145,
	146, 0, 151, 0, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 0, 1486, 141,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	1354, 234, 0, 0, 0, 0, 0, 1262, 1318, 1319,
	1271, 1378, 1382, 1390, 0, 0, 0, 0, 0, 649,
	1415, 0, 252, 250, 0, 253, 0, 256, 257, 0,
	0, 252, 246, 0, 0, 0, 1221, 405, 1078, 1191,
	0, 0, 1193, 1111, 1115, 0, 2350, 2350, 0, 2304,
	0, 1076, 0, 0, 1192, 456, 0, 463, 0, 477,
	0, 0, 1242, 0, 0, 1266, 1291, 1221, 0, 1330,
	1332, 0, 1340, 0, 0, 0, 1507, 1511, 0, 1500,
	1501, 1641, 1513, 1532, -2, 0, 0, 1622, 1540, 1537,
	1543, 1544, 0, 325, 0, 320, 322, 0, 308, 0,
	1524, 1526, 0, 1049, 1052, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 286, 1726, 312, 0, 841, 865,
	941, 987, 1126, 0, 0, 989, 0, 0, 1644, 1631,
	1632, 1629, 1357, 1938, 1942, 0, 0, 0, 1944, -2,
	0, 1966, -2, -2, 2200, 2252, 2017, 1622, 2039, 2041,
	2028, 2246, 1886, 0, 2128, 2125, 0, 2112, 0, 2063,
	2064, 0, 0, 2067, 2069, 2070, 2071, 1825, 1818, 1817,
	2225, 0, 0, 0, 0, 2103, 1604, 0, 2117, 0,
	0, 1672, 2117, 2117, 1716, 0, 1718, 1685, 1673, 0,
	1682, 0, 2328, 1711, 1703, 0, 0, 334, 0, 338,
	339, 373, 0, 625, 626, 0, 0, 1759, 1764, 0,
	1770, 1840, 0, 0, 0, 0, 0, 241, 166, 167,
	1369, 1373, 1370, 0, 169, 0, 0, 1148, 0, 1151,
	0, 0, 0, 0, 1158, 1175, 0, 0, 0, 0,
	0, 0, 1177, 0, 1176, 0, 0, 1207, 0, 1345,
	1352, 0, -2, 0, 0, 0, 176, 200, 0, 0,
	0, 0, 203, 1419, 178, 0, 0, 209, 209, 0,
	0, 1361, 1363, 1376, 0, 0, 0, 0, 154, 0,
	0, 1379, 1383, 1391, 1386, 1388, 1394, 0, 102, 0,
	1497, 0, 140, 0, 0, 0, 1396, 222, 223, 0,
	209, 0, 209, 215, 209, 1354, 0, 0, 0, 0,
	0, 0, 0, 1399, 1400, 243, 0, 0, 0, 0,
	0, 245, 318, 252, 393, 0, 1136, 0, 1203, 1195,
	1196, 1197, 0, 1107, 1202, 1204, 0, 0, 1112, 0,
	0, 0, 0, 1092, 1077, 0, 1088, 0, 0, 1105,
	1080, 0, 461, 478, 0, 481, 0, 484, 1066, 1239,
	1283, 1221, 1286, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 1509, 1511, 0, 1502, 1503, 1534, 1640,
	0, 0, 0, 1521, 1641, 0, 327, 328, 0, 328,
	288, 0, 289, 290, 291, 298, 299, 300, 277, 278,
	681, 683, 0, 0, 689, 1125, 0, 0, 0, 0,
	1630, 1946, -2, -2, 1967, 0, 2329, 2331, 1622, 0,
	2114, 1624, 0, 0, -2, 0, 0, 0, 1605, 1588,
	0, 1663, 1655, 1657, 1659, 2641, 2421, 2755, 1589, 1590,
	1738, 0, 0, 1706, 335, 1403, 627, 0, 0, 1766,
	0, 632, 0, 0, 0, 0, 0, 1371, 171, 0,
	0, 1152, 1153, 2303, 1155, 0, 1157, 1159, 1160, 1161,
	0, 1164, 0, 2352, 0, 1169, 1172, 1173, 0, 0,
	1186, 1208, 0, 1217, 0, 1347, 1357, 1351, 0, 1349,
	1219, 0, 175, 202, 177, 204, 199, 0, 1354, 0,
	179, 189, 0, 0, 122, 0, 0, 2415, 157, 155,
	153, 100, 1358, 143, 0, 124, 0, 224, 233, 1353,
	235, 219, 209, 0, 1380, 1384, 1392, 0, 1407, 1408,
	1409, 1410, 0, 0, 0, 0, 254, 0, 255, 258,
	259, 0, 0, 1080, 1135, 1079, 1194, 0, 1205, 1206,
	0, 0, 0, 0, 0, 0, 1082, 0, 1081, 0,
	0, 0, 0, 0, 462, 465, 0, 468, 0, 0,
	0, 0, 0, 1290, 0, 1333, 1331, 0, 1339, 0,
	0, 0, 1485, 0, 0, 1504, 1505, 485, 1527, 0,
	0, 1534, 1545, 307, 0, 310, 285, 0, 685, 0,
	687, 0, 988, 990, 0, 0, 2040, 2132, 0, 0,
	2065, 2066, -2, 0, 2006, 2116, 2118, 0, 0, 0,
	0, 0, 1674, 1683, 1404, 1760, 639, 636, 638, 0,
	1367, 0, 1374, 211, 1150, 1154, 0, 0, 0, 1165,
	1225, 0, 0, 1242, 1242, 1178, 0, 0, 1211, 1212,
	1132, 0, 1213, 1214, 1215, 1346, 1633, 1352, 1188, 0,
	0, 201, 206, 0, 0, 0, 0, 0, 0, 142,
	0, 213, 236, 1354, 0, 1411, 1412, 0, 0, 251,
	270, 0, 1284, 1082, 0, 1113, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1114, 1219, 0, 0, 1183,
	1090, 0, 1093, 0, 1089, 1086, 1087, 1078, 0, 466,
	467, 482, 0, 483, 0, 0, 1291, 0, 0, 1340,
	0, 0, 1492, 1484, 1511, 1506, 1507, 1757, 0, 1535,
	0, 684, 0, 0, 998, 999, 0, 0, 0, 0,
	2127, 1625, 2007, 0, 0, 1658, 1660, 1661, 1662, 628,
	0, 1368, 183, 0, 0, 1163, 1230, 0, 0, 0,
	0, 0, 1179, 1209, 1210, 1207, 1131, 0, 1350, 1348,
	0, 1221, 181, 0, 1219, 0, 1141, 0, 0, 1144,
	0, 0, 158, 2415, 156, 0, 209, 1404, 209, 0,
	273, 0, 264, 262, 263, 1074, 0, 1199, 1201, 1217,
	1219, 1132, 0, 1094, 1136, 1092, 479, 1285, 1289, 1287,
	1323, 1219, 0, 1217, 0, 1499, 1511, 1493, 1494, 0,
	1509, 0, 0, 328, 686, 688, 2124, 2144, 2133, -2,
	2712, 2422, 0, 2144, 2144, 2119, 2120, 0, 0, 0,
	1166, 1226, 1227, 0, 1222, 1223, 1224, 2351, 1167, 1168,
	1170, 1171, 1757, 0, 0, 1225, 205, 187, 1138, 0,
	0, 1139, 0, 0, 161, 0, 163, 237, 1402, 1405,
	0, 260, 0, 0, 1071, 1073, 1198, 0, 1132, 1217,
	1080, 0, 0, 0, 1080, 1082, 1217, 0, 1132, 0,
	1488, 1498, 0, 1508, 1485, 0, 1530, 0, 309, 2129,
	0, 0, 2135, 2136, 2137, 2138, 2139, 2130, 2131, 640,
	1156, 0, 1228, 0, 1229, 0, 0, 0, 1187, 1216,
	0, 1230, 1142, 0, 1145, 0, 159, 0, 0, 268,
	269, 1200, 1080, 1132, 1757, 0, 1083, 0, 1085, 1082,
	1091, 1132, 0, 1080, 0, 1481, 1487, 1491, 2312, 1492,
	1528, 0, 0, 0, 2141, 2142, 0, 0, 0, 1231,
	0, 1234, 1235, 0, 1232, 0, 1207, 0, 0, 209,
	0, 1757, 1080, 1182, 1084, 1074, 1080, 1219, 1757, 1217,
	1499, 0, 1757, 2140, 2143, 2134, 1162, 1233, 1236, 1237,
	1218, 1189, 0, 0, 1406, 271, 0, 1180, 1757, 1072,
	1757, 1217, 1336, 1132, 1488, 1757, 1531, 1129, 0, 0,
	1181, 1334, 1132, 1080, 1482, 1529, 1143, 1128, 0, 272,
	1080, 1757, 0, 1757, 1337, 0, 1335, 1129, 1146,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 593, 3, 599, 594, 3,
	605, 606, 597, 595, 610, 596, 607, 598, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 613, 3,
	585, 587, 586, 590, 609, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 603, 3, 604, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 611, 592, 612, 588,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 589, 57928, 591, 57929, 601,
	57930, 602, 57931, 608, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1510
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1715
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1804
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1869
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1934
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2040
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2049
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2068
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2079
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2099
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2108
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2119
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2125
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2156
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2247
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2291
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2310
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2361
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2544
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2635
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2740
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2894
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3181
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3190
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3201
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3206
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3238
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3314
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3328
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3510
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3536
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3541
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3560
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "CREATE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3574
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplemented(sqllex, "create access method")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create cast")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create publication")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create rule")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create server")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3600
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3603
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3604
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3608
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop server")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3755
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{

			sqlVAL.union.val = nil
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "DELETE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3877
		{
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3903
		{
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DROP")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4103
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4169
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4193
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4201
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "DELETE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "DELETE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "INSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4282
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4315
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4406
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4422
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "GRANT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4531
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "RESET")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "RESET")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4605
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "USE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4673
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4812
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			return unimplemented(sqllex, "set from current")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4858
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4879
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = tree.Low
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = tree.Normal
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = tree.High
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5059
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.str = "client_encoding"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.str = "timezone"
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5145
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5149
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5168
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5208
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5217
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5370
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5427
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5443
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = true
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5498
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5549
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5593
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5600
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5619
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5624
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5670
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = true
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = false
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5717
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5750
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5780
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5785
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5790
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5795
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5829
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5851
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5869
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5877
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5898
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5908
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5912
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5921
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5935
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5944
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6025
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6427
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6491
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6506
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6534
		{

			sqlVAL.union.val = nil
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6540
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.str = ""
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6550
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6573
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6577
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6603
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6616
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6630
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6631
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6632
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6713
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6973
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7018
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7032
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7035
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7131
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7169
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7249
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7411
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7420
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7428
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7476
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7489
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7493
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7520
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7554
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.str = ""
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{

			sqlVAL.union.val = true
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = false
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7603
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7617
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7629
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7641
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7651
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7661
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7665
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = nil
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7792
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7820
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7822
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7824
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7828
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7863
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7880
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7898
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7914
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7930
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = false
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = true
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = false
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = true
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = false
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7994
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.str = ""
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.str = ""
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8067
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8073
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8298
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8304
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8316
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8322
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8336
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8342
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8401
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = true
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = false
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.Types
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8490
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8494
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8505
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8561
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8658
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8660
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8677
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8681
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8709
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8728
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8845
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{

		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8877
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.str = ""
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.str = ""
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.str = ""
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.str = ""
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8932
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8946
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9191
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9206
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9448
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = true
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9562
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = nil
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = true
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = false
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = false
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = true
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9606
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9610
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9663
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9668
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9694
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9727
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9853
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9855
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9870
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9892
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9939
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9970
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10012
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10022
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10057
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10068
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10098
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10131
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = nil
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = true
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = false
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.str = tree.AstFull
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.str = tree.AstRight
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.str = tree.AstInner
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10251
		{
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.str = tree.AstHash
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.str = ""
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10343
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10355
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10365
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = true
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = false
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = true
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = false
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10427
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10435
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10464
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10484
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10533
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.Geography
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10595
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10603
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10637
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = nil
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = types.Int2
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = types.Int
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = types.Float4
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = types.Float
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10680
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10688
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10696
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = types.Bool
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = types.Float
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10729
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10735
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10757
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = types.String
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = true
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = false
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = types.Date
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10806
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10814
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10828
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10837
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10845
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10862
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = true
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = false
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = false
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = types.Interval
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10886
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = nil
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11015
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11224
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11353
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11419
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11441
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11557
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11658
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11684
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11708
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11742
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11753
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11754
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11778
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11844
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12030
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12045
		{
			return unimplemented(sqllex, "treat")
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12066
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12071
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12118
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.str = ""
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12220
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12288
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12317
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12393
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12733
		{
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12734
		{
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12773
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12806
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12814
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12887
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12903
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12912
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12932
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12940
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12957
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13176
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13196
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.str = ""
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
