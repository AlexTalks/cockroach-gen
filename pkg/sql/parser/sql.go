// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:621
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10203

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1108,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	185, 935,
	202, 935,
	217, 252,
	303, 252,
	312, 749,
	339, 252,
	348, 749,
	387, 749,
	411, 252,
	436, 749,
	-2, 0,
	-1, 75,
	217, 256,
	-2, 0,
	-1, 76,
	112, 1108,
	191, 1108,
	421, 1108,
	422, 1108,
	-2, 0,
	-1, 88,
	125, 1082,
	141, 1082,
	154, 1082,
	199, 1082,
	229, 1082,
	267, 1082,
	277, 1082,
	416, 1082,
	-2, 1053,
	-1, 120,
	131, 665,
	216, 665,
	306, 645,
	357, 645,
	404, 665,
	-2, 0,
	-1, 121,
	4, 1110,
	21, 1110,
	22, 1110,
	23, 1110,
	24, 1110,
	25, 1110,
	27, 1110,
	33, 1110,
	38, 1110,
	39, 1110,
	40, 1110,
	41, 1110,
	42, 1110,
	43, 1110,
	44, 1110,
	45, 1110,
	46, 1110,
	47, 1110,
	48, 1110,
	49, 1110,
	50, 1110,
	52, 1110,
	53, 1110,
	54, 1110,
	55, 1110,
	56, 1110,
	57, 1110,
	58, 1110,
	61, 1110,
	62, 1110,
	63, 1110,
	64, 1110,
	66, 1110,
	67, 1110,
	71, 1110,
	72, 1110,
	73, 1110,
	74, 1110,
	75, 1110,
	76, 1110,
	78, 1110,
	79, 1110,
	80, 1110,
	81, 1110,
	83, 1110,
	85, 1110,
	86, 1110,
	87, 1110,
	89, 1110,
	91, 1110,
	92, 1110,
	100, 1110,
	101, 1110,
	102, 1110,
	103, 1110,
	104, 1110,
	105, 1110,
	106, 1110,
	107, 1110,
	109, 1110,
	111, 1110,
	112, 1110,
	114, 1110,
	117, 1110,
	118, 1110,
	119, 1110,
	121, 1110,
	123, 1110,
	124, 1110,
	126, 1110,
	127, 1110,
	128, 1110,
	129, 1110,
	130, 1110,
	131, 1110,
	132, 1110,
	133, 1110,
	134, 1110,
	135, 1110,
	136, 1110,
	137, 1110,
	138, 1110,
	140, 1110,
	146, 1110,
	147, 1110,
	148, 1110,
	149, 1110,
	150, 1110,
	151, 1110,
	153, 1110,
	155, 1110,
	159, 1110,
	160, 1110,
	162, 1110,
	163, 1110,
	165, 1110,
	166, 1110,
	168, 1110,
	169, 1110,
	170, 1110,
	171, 1110,
	172, 1110,
	173, 1110,
	174, 1110,
	175, 1110,
	177, 1110,
	178, 1110,
	180, 1110,
	181, 1110,
	182, 1110,
	185, 1110,
	186, 1110,
	187, 1110,
	188, 1110,
	191, 1110,
	192, 1110,
	193, 1110,
	194, 1110,
	195, 1110,
	196, 1110,
	197, 1110,
	198, 1110,
	200, 1110,
	202, 1110,
	204, 1110,
	206, 1110,
	207, 1110,
	208, 1110,
	210, 1110,
	211, 1110,
	214, 1110,
	215, 1110,
	216, 1110,
	217, 1110,
	218, 1110,
	220, 1110,
	221, 1110,
	223, 1110,
	224, 1110,
	226, 1110,
	227, 1110,
	230, 1110,
	231, 1110,
	234, 1110,
	235, 1110,
	236, 1110,
	237, 1110,
	239, 1110,
	240, 1110,
	241, 1110,
	242, 1110,
	243, 1110,
	244, 1110,
	245, 1110,
	246, 1110,
	247, 1110,
	248, 1110,
	250, 1110,
	251, 1110,
	252, 1110,
	253, 1110,
	254, 1110,
	256, 1110,
	258, 1110,
	260, 1110,
	262, 1110,
	263, 1110,
	264, 1110,
	265, 1110,
	266, 1110,
	268, 1110,
	269, 1110,
	270, 1110,
	272, 1110,
	273, 1110,
	274, 1110,
	275, 1110,
	278, 1110,
	279, 1110,
	280, 1110,
	282, 1110,
	284, 1110,
	285, 1110,
	286, 1110,
	287, 1110,
	288, 1110,
	289, 1110,
	290, 1110,
	291, 1110,
	292, 1110,
	293, 1110,
	295, 1110,
	296, 1110,
	297, 1110,
	298, 1110,
	299, 1110,
	300, 1110,
	302, 1110,
	304, 1110,
	305, 1110,
	306, 1110,
	307, 1110,
	308, 1110,
	309, 1110,
	310, 1110,
	311, 1110,
	312, 1110,
	313, 1110,
	315, 1110,
	316, 1110,
	317, 1110,
	318, 1110,
	319, 1110,
	321, 1110,
	322, 1110,
	323, 1110,
	324, 1110,
	325, 1110,
	326, 1110,
	327, 1110,
	328, 1110,
	330, 1110,
	332, 1110,
	333, 1110,
	334, 1110,
	335, 1110,
	336, 1110,
	337, 1110,
	339, 1110,
	340, 1110,
	341, 1110,
	342, 1110,
	343, 1110,
	344, 1110,
	345, 1110,
	346, 1110,
	348, 1110,
	349, 1110,
	350, 1110,
	351, 1110,
	352, 1110,
	353, 1110,
	354, 1110,
	355, 1110,
	356, 1110,
	357, 1110,
	359, 1110,
	360, 1110,
	361, 1110,
	362, 1110,
	363, 1110,
	365, 1110,
	366, 1110,
	367, 1110,
	368, 1110,
	369, 1110,
	371, 1110,
	372, 1110,
	373, 1110,
	374, 1110,
	375, 1110,
	376, 1110,
	377, 1110,
	378, 1110,
	379, 1110,
	380, 1110,
	381, 1110,
	382, 1110,
	384, 1110,
	385, 1110,
	386, 1110,
	388, 1110,
	389, 1110,
	390, 1110,
	391, 1110,
	392, 1110,
	393, 1110,
	394, 1110,
	396, 1110,
	397, 1110,
	398, 1110,
	399, 1110,
	400, 1110,
	402, 1110,
	404, 1110,
	405, 1110,
	406, 1110,
	407, 1110,
	408, 1110,
	410, 1110,
	411, 1110,
	412, 1110,
	414, 1110,
	415, 1110,
	418, 1110,
	419, 1110,
	420, 1110,
	421, 1110,
	422, 1110,
	423, 1110,
	424, 1110,
	426, 1110,
	428, 1110,
	429, 1110,
	430, 1110,
	431, 1110,
	432, 1110,
	433, 1110,
	434, 1110,
	436, 1110,
	437, 1110,
	438, 1110,
	443, 1110,
	444, 1110,
	445, 1110,
	446, 1110,
	447, 1110,
	448, 1110,
	-2, 0,
	-1, 122,
	1, 987,
	206, 987,
	302, 987,
	310, 987,
	451, 987,
	474, 987,
	-2, 0,
	-1, 124,
	1, 987,
	474, 987,
	-2, 0,
	-1, 125,
	1, 987,
	474, 987,
	-2, 0,
	-1, 126,
	1, 987,
	401, 987,
	474, 987,
	-2, 0,
	-1, 150,
	125, 1081,
	141, 1081,
	154, 1081,
	199, 1081,
	229, 1081,
	267, 1081,
	277, 1081,
	416, 1081,
	-2, 1056,
	-1, 183,
	4, 1117,
	5, 1117,
	6, 1117,
	7, 1117,
	8, 1117,
	9, 1117,
	10, 1117,
	21, 1117,
	22, 1117,
	23, 1117,
	24, 1117,
	25, 1117,
	27, 1117,
	33, 1117,
	34, 1117,
	38, 1117,
	39, 1117,
	40, 1117,
	41, 1117,
	42, 1117,
	43, 1117,
	44, 1117,
	45, 1117,
	46, 1117,
	47, 1117,
	48, 1117,
	49, 1117,
	50, 1117,
	52, 1117,
	53, 1117,
	54, 1117,
	55, 1117,
	56, 1117,
	57, 1117,
	58, 1117,
	59, 1117,
	60, 1117,
	61, 1117,
	62, 1117,
	63, 1117,
	64, 1117,
	66, 1117,
	67, 1117,
	69, 1117,
	71, 1117,
	72, 1117,
	73, 1117,
	74, 1117,
	75, 1117,
	76, 1117,
	78, 1117,
	79, 1117,
	80, 1117,
	81, 1117,
	83, 1117,
	85, 1117,
	86, 1117,
	87, 1117,
	89, 1117,
	90, 1117,
	91, 1117,
	92, 1117,
	93, 1117,
	94, 1117,
	95, 1117,
	96, 1117,
	97, 1117,
	98, 1117,
	99, 1117,
	100, 1117,
	101, 1117,
	102, 1117,
	103, 1117,
	104, 1117,
	105, 1117,
	106, 1117,
	107, 1117,
	108, 1117,
	109, 1117,
	111, 1117,
	112, 1117,
	114, 1117,
	117, 1117,
	118, 1117,
	119, 1117,
	121, 1117,
	123, 1117,
	124, 1117,
	126, 1117,
	127, 1117,
	128, 1117,
	129, 1117,
	130, 1117,
	131, 1117,
	132, 1117,
	133, 1117,
	134, 1117,
	135, 1117,
	136, 1117,
	137, 1117,
	138, 1117,
	139, 1117,
	140, 1117,
	146, 1117,
	147, 1117,
	148, 1117,
	149, 1117,
	150, 1117,
	151, 1117,
	153, 1117,
	155, 1117,
	158, 1117,
	159, 1117,
	160, 1117,
	162, 1117,
	163, 1117,
	165, 1117,
	166, 1117,
	168, 1117,
	169, 1117,
	170, 1117,
	171, 1117,
	172, 1117,
	173, 1117,
	174, 1117,
	175, 1117,
	176, 1117,
	177, 1117,
	178, 1117,
	180, 1117,
	181, 1117,
	182, 1117,
	185, 1117,
	186, 1117,
	187, 1117,
	188, 1117,
	190, 1117,
	191, 1117,
	192, 1117,
	193, 1117,
	194, 1117,
	195, 1117,
	196, 1117,
	197, 1117,
	198, 1117,
	200, 1117,
	202, 1117,
	203, 1117,
	204, 1117,
	205, 1117,
	206, 1117,
	207, 1117,
	208, 1117,
	209, 1117,
	210, 1117,
	211, 1117,
	214, 1117,
	215, 1117,
	216, 1117,
	217, 1117,
	218, 1117,
	220, 1117,
	221, 1117,
	223, 1117,
	224, 1117,
	225, 1117,
	226, 1117,
	227, 1117,
	228, 1117,
	230, 1117,
	231, 1117,
	232, 1117,
	233, 1117,
	234, 1117,
	235, 1117,
	236, 1117,
	237, 1117,
	239, 1117,
	240, 1117,
	241, 1117,
	242, 1117,
	243, 1117,
	244, 1117,
	245, 1117,
	246, 1117,
	247, 1117,
	248, 1117,
	249, 1117,
	250, 1117,
	251, 1117,
	252, 1117,
	253, 1117,
	254, 1117,
	255, 1117,
	256, 1117,
	257, 1117,
	258, 1117,
	259, 1117,
	260, 1117,
	261, 1117,
	262, 1117,
	263, 1117,
	264, 1117,
	265, 1117,
	266, 1117,
	268, 1117,
	269, 1117,
	270, 1117,
	273, 1117,
	274, 1117,
	275, 1117,
	278, 1117,
	279, 1117,
	280, 1117,
	281, 1117,
	282, 1117,
	283, 1117,
	284, 1117,
	285, 1117,
	286, 1117,
	287, 1117,
	288, 1117,
	289, 1117,
	290, 1117,
	291, 1117,
	292, 1117,
	293, 1117,
	295, 1117,
	296, 1117,
	297, 1117,
	298, 1117,
	299, 1117,
	300, 1117,
	302, 1117,
	304, 1117,
	305, 1117,
	306, 1117,
	307, 1117,
	308, 1117,
	309, 1117,
	310, 1117,
	311, 1117,
	312, 1117,
	313, 1117,
	315, 1117,
	316, 1117,
	317, 1117,
	318, 1117,
	319, 1117,
	321, 1117,
	322, 1117,
	323, 1117,
	324, 1117,
	325, 1117,
	326, 1117,
	327, 1117,
	328, 1117,
	330, 1117,
	331, 1117,
	332, 1117,
	333, 1117,
	334, 1117,
	335, 1117,
	336, 1117,
	337, 1117,
	339, 1117,
	340, 1117,
	341, 1117,
	342, 1117,
	343, 1117,
	344, 1117,
	345, 1117,
	346, 1117,
	348, 1117,
	349, 1117,
	350, 1117,
	351, 1117,
	352, 1117,
	353, 1117,
	354, 1117,
	355, 1117,
	356, 1117,
	357, 1117,
	358, 1117,
	359, 1117,
	360, 1117,
	361, 1117,
	362, 1117,
	363, 1117,
	364, 1117,
	365, 1117,
	366, 1117,
	367, 1117,
	368, 1117,
	369, 1117,
	371, 1117,
	372, 1117,
	373, 1117,
	374, 1117,
	375, 1117,
	376, 1117,
	377, 1117,
	378, 1117,
	379, 1117,
	380, 1117,
	381, 1117,
	382, 1117,
	384, 1117,
	385, 1117,
	386, 1117,
	388, 1117,
	389, 1117,
	390, 1117,
	391, 1117,
	392, 1117,
	393, 1117,
	394, 1117,
	396, 1117,
	397, 1117,
	398, 1117,
	399, 1117,
	400, 1117,
	402, 1117,
	404, 1117,
	405, 1117,
	406, 1117,
	407, 1117,
	408, 1117,
	409, 1117,
	410, 1117,
	411, 1117,
	412, 1117,
	414, 1117,
	415, 1117,
	417, 1117,
	418, 1117,
	419, 1117,
	420, 1117,
	421, 1117,
	422, 1117,
	423, 1117,
	424, 1117,
	425, 1117,
	426, 1117,
	428, 1117,
	429, 1117,
	430, 1117,
	431, 1117,
	432, 1117,
	433, 1117,
	434, 1117,
	436, 1117,
	437, 1117,
	438, 1117,
	443, 1117,
	444, 1117,
	445, 1117,
	446, 1117,
	447, 1117,
	448, 1117,
	449, 1117,
	455, 1117,
	462, 1117,
	463, 1117,
	464, 1117,
	471, 1117,
	475, 1117,
	-2, 0,
	-1, 569,
	157, 1819,
	401, 1819,
	454, 1819,
	473, 1819,
	-2, 0,
	-1, 570,
	157, 1899,
	401, 1899,
	454, 1899,
	473, 1899,
	-2, 0,
	-1, 571,
	157, 1808,
	401, 1808,
	454, 1808,
	473, 1808,
	-2, 0,
	-1, 573,
	157, 1995,
	401, 1995,
	454, 1995,
	473, 1995,
	-2, 0,
	-1, 575,
	157, 2025,
	401, 2025,
	454, 2025,
	473, 2025,
	-2, 0,
	-1, 582,
	157, 1911,
	401, 1911,
	454, 1911,
	473, 1911,
	-2, 510,
	-1, 604,
	473, 1764,
	476, 1764,
	-2, 718,
	-1, 605,
	473, 1766,
	476, 1766,
	-2, 719,
	-1, 606,
	473, 1765,
	476, 1765,
	-2, 720,
	-1, 607,
	476, 1703,
	-2, 721,
	-1, 650,
	436, 917,
	-2, 750,
	-1, 757,
	306, 646,
	357, 646,
	-2, 0,
	-1, 758,
	306, 645,
	357, 645,
	-2, 593,
	-1, 762,
	1, 675,
	470, 675,
	472, 675,
	474, 675,
	-2, 0,
	-1, 763,
	1, 717,
	154, 717,
	470, 717,
	472, 717,
	474, 717,
	-2, 0,
	-1, 771,
	1, 649,
	470, 649,
	472, 649,
	474, 649,
	-2, 0,
	-1, 774,
	1, 675,
	470, 675,
	472, 675,
	474, 675,
	-2, 0,
	-1, 775,
	1, 677,
	470, 677,
	472, 677,
	474, 677,
	-2, 0,
	-1, 776,
	1, 680,
	470, 680,
	472, 680,
	474, 680,
	-2, 0,
	-1, 781,
	1, 696,
	470, 696,
	472, 696,
	474, 696,
	-2, 0,
	-1, 782,
	1, 698,
	470, 698,
	472, 698,
	474, 698,
	-2, 0,
	-1, 824,
	141, 1119,
	154, 1119,
	229, 1119,
	267, 1119,
	-2, 1060,
	-1, 837,
	141, 1118,
	154, 1118,
	229, 1118,
	267, 1118,
	-2, 1057,
	-1, 861,
	473, 1763,
	-2, 518,
	-1, 889,
	471, 1755,
	-2, 1746,
	-1, 895,
	5, 1259,
	-2, 1797,
	-1, 896,
	5, 1260,
	-2, 1803,
	-1, 897,
	5, 1261,
	-2, 1802,
	-1, 898,
	5, 1262,
	-2, 2022,
	-1, 899,
	5, 1263,
	-2, 1913,
	-1, 900,
	5, 1264,
	-2, 1987,
	-1, 901,
	5, 1265,
	-2, 1989,
	-1, 902,
	5, 1266,
	-2, 2002,
	-1, 903,
	5, 1267,
	-2, 1990,
	-1, 904,
	5, 1268,
	-2, 1991,
	-1, 905,
	5, 1269,
	-2, 1796,
	-1, 906,
	5, 1270,
	-2, 2039,
	-1, 907,
	5, 1271,
	-2, 1873,
	-1, 908,
	5, 1272,
	-2, 1925,
	-1, 909,
	5, 1273,
	-2, 1927,
	-1, 910,
	5, 1274,
	-2, 1877,
	-1, 911,
	5, 1275,
	471, 1773,
	-2, 1764,
	-1, 917,
	471, 1774,
	-2, 1765,
	-1, 919,
	5, 1279,
	-2, 2072,
	-1, 920,
	5, 1280,
	-2, 2073,
	-1, 921,
	5, 1281,
	-2, 1876,
	-1, 922,
	5, 1282,
	-2, 2085,
	-1, 923,
	5, 1283,
	-2, 1878,
	-1, 924,
	5, 1284,
	-2, 1879,
	-1, 925,
	5, 1285,
	-2, 1880,
	-1, 926,
	5, 1286,
	-2, 2054,
	-1, 927,
	5, 1287,
	-2, 2083,
	-1, 928,
	5, 1288,
	-2, 1856,
	-1, 929,
	5, 1289,
	-2, 1857,
	-1, 930,
	5, 1303,
	-2, 2066,
	-1, 932,
	5, 1278,
	-2, 2062,
	-1, 933,
	5, 1278,
	-2, 2061,
	-1, 934,
	5, 1278,
	-2, 2078,
	-1, 935,
	5, 1295,
	-2, 2056,
	-1, 936,
	5, 1296,
	-2, 1798,
	-1, 937,
	5, 1306,
	-2, 2055,
	-1, 938,
	5, 1308,
	-2, 2094,
	-1, 940,
	5, 1319,
	-2, 1830,
	-1, 941,
	5, 1330,
	-2, 2087,
	-1, 942,
	5, 1322,
	-2, 2088,
	-1, 943,
	5, 1330,
	-2, 2089,
	-1, 944,
	5, 1326,
	-2, 2090,
	-1, 945,
	5, 1247,
	-2, 1886,
	-1, 946,
	5, 1248,
	-2, 1887,
	-1, 947,
	473, 1761,
	-2, 1745,
	-1, 948,
	471, 2115,
	-2, 1762,
	-1, 970,
	5, 1314,
	-2, 2013,
	-1, 988,
	5, 1313,
	-2, 2095,
	-1, 998,
	5, 1315,
	437, 1315,
	-2, 2057,
	-1, 999,
	5, 1316,
	437, 1316,
	-2, 2058,
	-1, 1036,
	471, 1773,
	-2, 1764,
	-1, 1064,
	157, 2025,
	401, 2025,
	454, 2025,
	473, 2025,
	-2, 0,
	-1, 1067,
	1, 496,
	474, 496,
	-2, 995,
	-1, 1187,
	321, 1742,
	464, 1742,
	-2, 1741,
	-1, 1199,
	475, 1742,
	-2, 1743,
	-1, 1200,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 1211,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 1251,
	312, 749,
	436, 749,
	-2, 251,
	-1, 1271,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 1274,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 1280,
	271, 1768,
	-2, 0,
	-1, 1346,
	1, 371,
	470, 371,
	472, 371,
	474, 371,
	-2, 1080,
	-1, 1349,
	4, 2093,
	11, 2093,
	12, 2093,
	14, 2093,
	15, 2093,
	16, 2093,
	17, 2093,
	18, 2093,
	19, 2093,
	21, 2093,
	22, 2093,
	23, 2093,
	24, 2093,
	25, 2093,
	27, 2093,
	30, 2093,
	31, 2093,
	33, 2093,
	35, 2093,
	38, 2093,
	39, 2093,
	40, 2093,
	41, 2093,
	42, 2093,
	43, 2093,
	44, 2093,
	45, 2093,
	46, 2093,
	47, 2093,
	48, 2093,
	49, 2093,
	50, 2093,
	52, 2093,
	53, 2093,
	54, 2093,
	55, 2093,
	56, 2093,
	57, 2093,
	58, 2093,
	61, 2093,
	62, 2093,
	63, 2093,
	64, 2093,
	66, 2093,
	67, 2093,
	68, 2093,
	71, 2093,
	72, 2093,
	73, 2093,
	74, 2093,
	75, 2093,
	76, 2093,
	77, 2093,
	78, 2093,
	79, 2093,
	80, 2093,
	81, 2093,
	83, 2093,
	84, 2093,
	85, 2093,
	86, 2093,
	87, 2093,
	89, 2093,
	90, 2093,
	91, 2093,
	92, 2093,
	100, 2093,
	101, 2093,
	102, 2093,
	103, 2093,
	104, 2093,
	105, 2093,
	106, 2093,
	107, 2093,
	109, 2093,
	111, 2093,
	112, 2093,
	114, 2093,
	117, 2093,
	118, 2093,
	119, 2093,
	121, 2093,
	123, 2093,
	124, 2093,
	126, 2093,
	127, 2093,
	128, 2093,
	129, 2093,
	130, 2093,
	131, 2093,
	132, 2093,
	133, 2093,
	134, 2093,
	135, 2093,
	136, 2093,
	137, 2093,
	138, 2093,
	142, 2093,
	143, 2093,
	144, 2093,
	145, 2093,
	146, 2093,
	147, 2093,
	148, 2093,
	149, 2093,
	150, 2093,
	151, 2093,
	152, 2093,
	153, 2093,
	155, 2093,
	158, 2093,
	159, 2093,
	160, 2093,
	162, 2093,
	163, 2093,
	165, 2093,
	166, 2093,
	168, 2093,
	169, 2093,
	170, 2093,
	171, 2093,
	172, 2093,
	173, 2093,
	174, 2093,
	175, 2093,
	176, 2093,
	177, 2093,
	178, 2093,
	179, 2093,
	180, 2093,
	181, 2093,
	182, 2093,
	183, 2093,
	184, 2093,
	186, 2093,
	187, 2093,
	188, 2093,
	190, 2093,
	191, 2093,
	192, 2093,
	193, 2093,
	194, 2093,
	195, 2093,
	196, 2093,
	197, 2093,
	198, 2093,
	200, 2093,
	202, 2093,
	203, 2093,
	204, 2093,
	205, 2093,
	206, 2093,
	207, 2093,
	208, 2093,
	209, 2093,
	210, 2093,
	211, 2093,
	212, 2093,
	213, 2093,
	214, 2093,
	215, 2093,
	216, 2093,
	217, 2093,
	218, 2093,
	220, 2093,
	221, 2093,
	223, 2093,
	224, 2093,
	225, 2093,
	226, 2093,
	227, 2093,
	228, 2093,
	230, 2093,
	231, 2093,
	234, 2093,
	235, 2093,
	236, 2093,
	237, 2093,
	238, 2093,
	239, 2093,
	240, 2093,
	241, 2093,
	242, 2093,
	243, 2093,
	244, 2093,
	245, 2093,
	246, 2093,
	247, 2093,
	248, 2093,
	249, 2093,
	250, 2093,
	251, 2093,
	252, 2093,
	253, 2093,
	254, 2093,
	256, 2093,
	259, 2093,
	260, 2093,
	262, 2093,
	263, 2093,
	264, 2093,
	265, 2093,
	266, 2093,
	268, 2093,
	269, 2093,
	270, 2093,
	273, 2093,
	274, 2093,
	275, 2093,
	276, 2093,
	278, 2093,
	279, 2093,
	280, 2093,
	282, 2093,
	284, 2093,
	285, 2093,
	286, 2093,
	287, 2093,
	288, 2093,
	289, 2093,
	290, 2093,
	291, 2093,
	292, 2093,
	293, 2093,
	295, 2093,
	296, 2093,
	297, 2093,
	298, 2093,
	299, 2093,
	300, 2093,
	302, 2093,
	304, 2093,
	305, 2093,
	306, 2093,
	307, 2093,
	308, 2093,
	309, 2093,
	310, 2093,
	311, 2093,
	312, 2093,
	313, 2093,
	315, 2093,
	316, 2093,
	317, 2093,
	318, 2093,
	319, 2093,
	320, 2093,
	321, 2093,
	322, 2093,
	323, 2093,
	324, 2093,
	325, 2093,
	326, 2093,
	327, 2093,
	328, 2093,
	330, 2093,
	331, 2093,
	332, 2093,
	333, 2093,
	334, 2093,
	335, 2093,
	336, 2093,
	337, 2093,
	338, 2093,
	339, 2093,
	340, 2093,
	341, 2093,
	342, 2093,
	343, 2093,
	344, 2093,
	345, 2093,
	346, 2093,
	348, 2093,
	349, 2093,
	350, 2093,
	351, 2093,
	352, 2093,
	353, 2093,
	354, 2093,
	355, 2093,
	356, 2093,
	357, 2093,
	359, 2093,
	360, 2093,
	361, 2093,
	362, 2093,
	363, 2093,
	364, 2093,
	365, 2093,
	366, 2093,
	367, 2093,
	368, 2093,
	369, 2093,
	371, 2093,
	372, 2093,
	373, 2093,
	374, 2093,
	375, 2093,
	376, 2093,
	377, 2093,
	378, 2093,
	379, 2093,
	380, 2093,
	381, 2093,
	382, 2093,
	384, 2093,
	385, 2093,
	386, 2093,
	388, 2093,
	389, 2093,
	390, 2093,
	391, 2093,
	392, 2093,
	393, 2093,
	394, 2093,
	396, 2093,
	397, 2093,
	398, 2093,
	399, 2093,
	400, 2093,
	402, 2093,
	404, 2093,
	405, 2093,
	406, 2093,
	407, 2093,
	408, 2093,
	410, 2093,
	411, 2093,
	412, 2093,
	414, 2093,
	415, 2093,
	418, 2093,
	419, 2093,
	420, 2093,
	421, 2093,
	422, 2093,
	423, 2093,
	424, 2093,
	426, 2093,
	428, 2093,
	429, 2093,
	430, 2093,
	431, 2093,
	432, 2093,
	433, 2093,
	434, 2093,
	436, 2093,
	437, 2093,
	438, 2093,
	443, 2093,
	444, 2093,
	445, 2093,
	446, 2093,
	447, 2093,
	448, 2093,
	449, 2093,
	450, 2093,
	452, 2093,
	453, 2093,
	454, 2093,
	455, 2093,
	456, 2093,
	457, 2093,
	459, 2093,
	460, 2093,
	461, 2093,
	462, 2093,
	463, 2093,
	464, 2093,
	465, 2093,
	466, 2093,
	467, 2093,
	469, 2093,
	472, 2093,
	473, 2093,
	475, 2093,
	476, 2093,
	-2, 0,
	-1, 1355,
	157, 1995,
	401, 1995,
	454, 1995,
	473, 1995,
	-2, 0,
	-1, 1387,
	306, 646,
	357, 646,
	-2, 0,
	-1, 1411,
	1, 641,
	470, 641,
	472, 641,
	474, 641,
	-2, 0,
	-1, 1412,
	1, 666,
	470, 666,
	472, 666,
	474, 666,
	-2, 0,
	-1, 1413,
	1, 648,
	470, 648,
	472, 648,
	474, 648,
	-2, 0,
	-1, 1415,
	1, 652,
	470, 652,
	472, 652,
	474, 652,
	-2, 0,
	-1, 1442,
	1, 2046,
	470, 2046,
	472, 2046,
	473, 2046,
	474, 2046,
	-2, 694,
	-1, 1443,
	1, 1992,
	470, 1992,
	472, 1992,
	473, 1992,
	474, 1992,
	-2, 695,
	-1, 1458,
	1, 990,
	474, 990,
	-2, 995,
	-1, 1461,
	141, 1118,
	154, 1118,
	229, 1118,
	267, 1118,
	-2, 1061,
	-1, 1555,
	125, 1082,
	141, 1082,
	154, 1082,
	199, 1082,
	229, 1082,
	267, 1082,
	277, 1082,
	416, 1082,
	-2, 1489,
	-1, 1612,
	472, 1637,
	-2, 0,
	-1, 1646,
	125, 1082,
	141, 1082,
	154, 1082,
	199, 1082,
	229, 1082,
	267, 1082,
	277, 1082,
	416, 1082,
	-2, 1197,
	-1, 1705,
	471, 1318,
	-2, 1306,
	-1, 1749,
	1, 498,
	474, 498,
	-2, 995,
	-1, 1958,
	1, 643,
	470, 643,
	472, 643,
	474, 643,
	-2, 0,
	-1, 1959,
	1, 668,
	470, 668,
	472, 668,
	474, 668,
	-2, 0,
	-1, 2031,
	336, 1143,
	337, 1143,
	-2, 1351,
	-1, 2062,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1369,
	-1, 2063,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1370,
	-1, 2064,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1371,
	-1, 2065,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1372,
	-1, 2066,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1373,
	-1, 2067,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1374,
	-1, 2068,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1375,
	-1, 2069,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1376,
	-1, 2081,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1388,
	-1, 2082,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1389,
	-1, 2083,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1390,
	-1, 2086,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1395,
	-1, 2092,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1399,
	-1, 2094,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1407,
	-1, 2095,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1408,
	-1, 2096,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1409,
	-1, 2097,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1410,
	-1, 2199,
	5, 1275,
	157, 1648,
	471, 1773,
	-2, 1764,
	-1, 2200,
	157, 1649,
	-2, 2050,
	-1, 2201,
	157, 1650,
	-2, 1910,
	-1, 2202,
	157, 1651,
	-2, 1831,
	-1, 2203,
	157, 1652,
	-2, 1867,
	-1, 2204,
	157, 1653,
	-2, 1908,
	-1, 2205,
	157, 1654,
	-2, 1986,
	-1, 2206,
	157, 1655,
	-2, 1472,
	-1, 2275,
	1, 1198,
	2, 1198,
	90, 1198,
	125, 1198,
	141, 1198,
	154, 1198,
	158, 1198,
	164, 1198,
	167, 1198,
	190, 1198,
	199, 1198,
	209, 1198,
	225, 1198,
	229, 1198,
	249, 1198,
	267, 1198,
	271, 1198,
	277, 1198,
	329, 1198,
	331, 1198,
	416, 1198,
	427, 1198,
	440, 1198,
	441, 1198,
	442, 1198,
	451, 1198,
	470, 1198,
	472, 1198,
	474, 1198,
	476, 1198,
	-2, 1197,
	-1, 2288,
	471, 1747,
	-2, 1759,
	-1, 2308,
	471, 1317,
	-2, 1307,
	-1, 2409,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 2410,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 2563,
	272, 1146,
	-2, 2084,
	-1, 2564,
	272, 1147,
	-2, 1975,
	-1, 2568,
	336, 1714,
	337, 1714,
	-2, 1470,
	-1, 2569,
	336, 1718,
	337, 1718,
	-2, 1471,
	-1, 2570,
	336, 1715,
	337, 1715,
	-2, 1470,
	-1, 2571,
	336, 1719,
	337, 1719,
	-2, 1471,
	-1, 2584,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1397,
	-1, 2585,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1401,
	-1, 2591,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1403,
	-1, 2780,
	206, 995,
	302, 995,
	310, 995,
	451, 995,
	-2, 495,
	-1, 2878,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 2879,
	1, 914,
	470, 914,
	472, 914,
	474, 914,
	-2, 1106,
	-1, 2968,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1405,
	-1, 2975,
	203, 0,
	205, 0,
	259, 0,
	-2, 1424,
	-1, 3039,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1453,
	-1, 3040,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1454,
	-1, 3041,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1455,
	-1, 3045,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1459,
	-1, 3046,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1460,
	-1, 3047,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1461,
	-1, 3091,
	471, 1748,
	-2, 1760,
	-1, 3184,
	473, 2197,
	-2, 1039,
	-1, 3234,
	203, 0,
	205, 0,
	259, 0,
	-2, 1425,
	-1, 3237,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1428,
	-1, 3238,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1430,
	-1, 3403,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1429,
	-1, 3404,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1431,
	-1, 3414,
	203, 0,
	-2, 1462,
	-1, 3528,
	203, 0,
	-2, 1463,
	-1, 3658,
	43, 0,
	176, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 2053,
}

const sqlPrivate = 57344

const sqlLast = 85966

var sqlAct = [...]int{

	917, 3443, 3472, 3763, 3446, 3657, 3339, 3668, 3750, 3549,
	2231, 3635, 3626, 3217, 2711, 3607, 3669, 2865, 1222, 3670,
	3623, 3432, 3708, 2463, 1037, 3479, 3007, 3656, 2712, 3111,
	3532, 2340, 3368, 2049, 3176, 2894, 3392, 2797, 1843, 215,
	3171, 215, 215, 847, 215, 215, 215, 215, 215, 3352,
	3488, 215, 1680, 3296, 1470, 2109, 1203, 862, 3373, 2887,
	606, 32, 2861, 2889, 3155, 2496, 1800, 1338, 3112, 2960,
	3418, 1932, 1092, 580, 1334, 2452, 2435, 1652, 215, 2427,
	2734, 2577, 606, 2438, 1184, 2697, 2754, 1029, 2498, 2726,
	1910, 2717, 703, 3216, 2506, 2495, 1890, 2489, 2464, 2487,
	2715, 3269, 3062, 1887, 2265, 838, 1842, 2342, 3533, 1395,
	2046, 2696, 1837, 2268, 1621, 2612, 2042, 2561, 2153, 1809,
	1583, 846, 143, 1563, 2122, 2411, 1192, 3473, 2505, 2400,
	2270, 1832, 2267, 1825, 2436, 2398, 1787, 1785, 2151, 87,
	913, 2760, 2249, 1458, 1080, 1622, 2142, 2106, 4, 1775,
	2228, 2030, 2013, 2863, 2011, 1269, 1363, 1331, 1872, 2499,
	1020, 1836, 2257, 1347, 2332, 1205, 1578, 548, 607, 1321,
	1641, 534, 2457, 939, 209, 556, 1069, 2145, 215, 215,
	208, 1023, 1631, 2123, 1002, 2195, 608, 1546, 1472, 1189,
	150, 2239, 2012, 1471, 602, 1681, 1871, 564, 143, 2014,
	574, 1362, 1019, 1345, 1896, 151, 1638, 1295, 207, 677,
	2035, 650, 1219, 559, 2376, 1799, 874, 37, 36, 551,
	34, 1477, 25, 23, 21, 696, 1457, 752, 769, 1000,
	1025, 1277, 2608, 3076, 611, 3077, 2713, 842, 1912, 2375,
	614, 1912, 1912, 3796, 3786, 3785, 3760, 2248, 2248, 2248,
	1848, 3740, 2904, 3738, 3694, 3310, 611, 3310, 3695, 3692,
	3690, 3687, 614, 2248, 2248, 3688, 3684, 837, 842, 3679,
	3685, 3654, 2903, 1848, 2621, 1848, 714, 1017, 1485, 1486,
	2622, 2778, 2248, 3653, 1528, 1529, 1530, 1848, 2241, 3652,
	1054, 3649, 843, 1924, 2214, 1924, 3648, 3621, 1516, 3601,
	1924, 3310, 3595, 2303, 3602, 1488, 2248, 3594, 1003, 1003,
	1534, 2248, 3589, 1485, 1486, 3588, 3310, 3582, 3576, 3310,
	3574, 1848, 3310, 3530, 3310, 3511, 3508, 2303, 3481, 1848,
	3310, 1049, 3482, 1516, 825, 1487, 3514, 3462, 873, 3461,
	1488, 1848, 3453, 1848, 1507, 1006, 1848, 1007, 3452, 824,
	3424, 1504, 3310, 3405, 1848, 3390, 3381, 2303, 3337, 1924,
	2917, 3328, 2248, 1414, 3309, 2248, 1077, 3236, 3310, 3192,
	1487, 2303, 3186, 2933, 3153, 3086, 2933, 832, 3154, 3087,
	3084, 3069, 2991, 2987, 3085, 2248, 1848, 2248, 2932, 2924,
	2710, 3066, 2933, 2925, 2248, 2708, 2707, 2661, 2640, 2248,
	2248, 2248, 2641, 1077, 2148, 2299, 1050, 1240, 1004, 1510,
	1511, 1512, 1513, 2623, 2485, 3066, 2484, 2248, 1928, 1493,
	1928, 2413, 2316, 2302, 2240, 1924, 2248, 2303, 1940, 2297,
	2290, 2247, 1924, 2248, 1848, 2248, 2248, 1927, 3329, 1848,
	1848, 1928, 2925, 1525, 2389, 1804, 1535, 2331, 1755, 697,
	1515, 1517, 1911, 2917, 1493, 2433, 2576, 1847, 2329, 1617,
	2669, 2670, 183, 2687, 2688, 2689, 1218, 2611, 3139, 2963,
	2149, 1485, 1486, 2941, 58, 700, 699, 1639, 1835, 1502,
	1503, 2905, 2284, 1397, 2283, 1515, 1517, 2282, 59, 2281,
	2280, 1516, 1008, 183, 1005, 1523, 831, 830, 1488, 701,
	2906, 3285, 185, 829, 63, 1508, 828, 1913, 827, 823,
	1913, 1913, 1554, 1234, 2541, 2186, 822, 2669, 2670, 821,
	2687, 2688, 2689, 1485, 1486, 820, 2684, 819, 1487, 818,
	817, 816, 815, 185, 814, 69, 3232, 813, 812, 215,
	1508, 2460, 811, 2150, 2147, 750, 749, 184, 748, 747,
	1488, 746, 745, 744, 743, 742, 741, 177, 740, 739,
	738, 2669, 2670, 737, 736, 178, 75, 215, 735, 1554,
	734, 2903, 733, 732, 215, 731, 86, 1239, 184, 730,
	1487, 76, 83, 2684, 729, 728, 152, 1514, 727, 857,
	726, 215, 1095, 215, 215, 215, 1095, 215, 1208, 1208,
	1050, 2675, 1208, 725, 724, 1509, 723, 2240, 712, 1050,
	215, 215, 1493, 711, 1073, 668, 667, 152, 627, 626,
	2172, 625, 1079, 617, 616, 77, 1084, 2684, 615, 588,
	587, 1526, 586, 585, 584, 215, 568, 205, 76, 204,
	1509, 203, 202, 1515, 1517, 2152, 201, 200, 199, 215,
	198, 197, 1208, 1208, 215, 215, 1920, 215, 2675, 1911,
	2006, 196, 1228, 195, 1493, 194, 193, 215, 192, 191,
	190, 1195, 189, 188, 187, 215, 186, 3248, 3080, 2934,
	2757, 2634, 1227, 1233, 1232, 2617, 1238, 2685, 2445, 215,
	215, 215, 215, 215, 1208, 1208, 1093, 2417, 1508, 1208,
	1193, 2291, 2675, 215, 1208, 215, 215, 2274, 183, 2690,
	2170, 1783, 2669, 2670, 1208, 1586, 1524, 1665, 1642, 1067,
	215, 1585, 1527, 1505, 1501, 1572, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 1565, 1224, 1086, 1935, 78,
	1484, 3675, 1589, 1039, 2685, 3655, 2146, 3569, 185, 1586,
	3523, 1088, 183, 1181, 1186, 1585, 3517, 1208, 1214, 3382,
	3515, 3289, 1342, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	2312, 1361, 149, 81, 1062, 82, 1584, 3442, 1221, 1366,
	183, 215, 3268, 3267, 611, 3255, 3377, 2686, 2685, 3254,
	614, 3253, 185, 184, 183, 215, 1220, 3252, 1509, 3247,
	1416, 3244, 1187, 177, 3243, 1199, 702, 1934, 3152, 3100,
	120, 178, 1367, 3099, 3098, 3090, 3159, 3059, 3058, 3057,
	185, 143, 143, 143, 2983, 2979, 2394, 2928, 2752, 2704,
	2695, 2668, 152, 1415, 185, 2665, 1073, 184, 843, 1073,
	3137, 2664, 2662, 2647, 2686, 2646, 1282, 177, 1350, 1352,
	1354, 183, 2645, 2675, 2642, 178, 2639, 121, 183, 1325,
	1328, 2633, 1278, 1278, 1348, 184, 2616, 120, 1566, 1298,
	1564, 153, 2609, 2446, 2486, 177, 152, 1884, 2275, 184,
	2135, 1484, 1335, 178, 1424, 1570, 1279, 1565, 2686, 177,
	845, 185, 1016, 2669, 2670, 1853, 1851, 178, 185, 1483,
	1199, 2681, 2682, 2683, 2459, 3793, 3759, 3758, 2680, 2678,
	2679, 2671, 2672, 2673, 2674, 2676, 2677, 3693, 698, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1038, 3009,
	1462, 2305, 3644, 3642, 2362, 3563, 184, 3560, 3557, 3556,
	1461, 3555, 3548, 184, 3542, 3512, 177, 3507, 3506, 2112,
	183, 916, 3458, 177, 178, 1456, 3438, 1553, 2681, 2682,
	2683, 178, 3416, 3400, 3399, 2680, 2678, 2679, 2671, 2672,
	2673, 2674, 2676, 2677, 3387, 152, 1491, 1492, 1494, 1495,
	3386, 1372, 152, 2772, 3534, 2185, 3376, 1388, 3366, 3363,
	185, 3356, 3284, 3266, 3206, 3203, 3128, 3127, 3115, 3114,
	3072, 2974, 215, 1550, 2935, 2918, 2881, 183, 2844, 2680,
	2678, 2679, 2671, 2672, 2673, 2674, 2676, 2677, 3158, 2823,
	2800, 843, 2118, 2799, 2773, 2709, 1628, 1459, 1619, 215,
	2638, 1467, 3359, 2749, 2675, 184, 2444, 825, 1466, 215,
	1095, 215, 215, 215, 215, 177, 2637, 185, 2632, 606,
	215, 215, 824, 178, 606, 215, 1675, 1667, 183, 2600,
	215, 1463, 1480, 1481, 1588, 2426, 1208, 1590, 1677, 1587,
	1579, 1576, 1747, 1744, 152, 2310, 2309, 2286, 2279, 2246,
	2669, 2670, 2168, 2687, 2688, 2689, 1664, 1095, 1656, 3286,
	2171, 1620, 184, 1616, 1615, 1614, 1613, 1612, 185, 3231,
	1580, 1581, 177, 1073, 1611, 1610, 1609, 1608, 1606, 1605,
	178, 1604, 1603, 2800, 1485, 1486, 1649, 1602, 1673, 1601,
	2685, 1936, 1752, 1600, 1781, 1625, 1626, 1599, 1598, 1597,
	1596, 152, 1003, 1746, 1595, 1594, 1593, 1032, 1592, 1567,
	1551, 1488, 1549, 184, 1668, 1544, 2684, 1061, 143, 1052,
	1045, 3240, 3096, 177, 3083, 3075, 2620, 2277, 1485, 1486,
	3427, 178, 3288, 3095, 843, 2673, 2674, 2676, 2677, 1804,
	3331, 1487, 2669, 2670, 1566, 2770, 1547, 1660, 3756, 1774,
	2169, 1774, 152, 1671, 1774, 1488, 3749, 2826, 1081, 1083,
	3558, 1784, 2890, 2669, 2670, 3484, 1650, 3483, 3380, 3330,
	3078, 3518, 2920, 2919, 889, 3516, 1647, 1077, 1749, 3489,
	1642, 2644, 1074, 3162, 2643, 1487, 1793, 1208, 1208, 215,
	2686, 2675, 1077, 611, 2380, 1095, 1707, 1640, 611, 614,
	1669, 1618, 1454, 2582, 614, 183, 1574, 2364, 1078, 1601,
	1601, 1761, 1082, 1676, 1659, 1658, 3441, 1657, 1743, 1655,
	1654, 1653, 1199, 1644, 1586, 3126, 1822, 809, 1077, 1824,
	1585, 2867, 1829, 2866, 215, 1396, 1933, 3480, 215, 215,
	1678, 3680, 2690, 3667, 1750, 185, 1485, 1486, 1397, 1387,
	1425, 215, 1838, 3142, 1844, 1068, 3130, 2939, 3419, 1777,
	215, 3764, 215, 1772, 215, 1767, 1516, 810, 215, 1493,
	2713, 3011, 2143, 1488, 915, 2669, 2670, 2685, 1075, 3676,
	2626, 2308, 215, 1885, 1607, 1582, 1076, 2859, 3107, 1808,
	184, 1879, 1255, 1833, 3689, 2669, 2670, 3686, 2148, 1849,
	177, 2899, 3550, 1487, 2675, 3619, 3172, 3539, 178, 3121,
	2493, 2680, 2678, 2679, 2671, 2672, 2673, 2674, 2676, 2677,
	2456, 1571, 1208, 1875, 1208, 2851, 215, 1208, 3725, 152,
	215, 1015, 1376, 3724, 663, 1208, 2306, 3677, 1208, 215,
	2955, 215, 215, 1840, 1845, 1766, 1765, 2021, 2401, 1774,
	1776, 1208, 1208, 1208, 3581, 215, 872, 1221, 3320, 1243,
	1035, 1683, 215, 611, 2149, 1893, 2317, 2021, 2782, 614,
	1253, 606, 215, 807, 215, 1220, 215, 2686, 215, 805,
	215, 1828, 3790, 2597, 2019, 1762, 1915, 1493, 1992, 1917,
	2685, 1990, 1919, 1422, 215, 3471, 1922, 215, 1901, 215,
	1801, 1846, 1083, 1880, 2019, 1423, 1882, 2595, 3464, 3144,
	215, 803, 2335, 664, 792, 2771, 2675, 801, 1515, 1517,
	798, 1950, 1938, 3141, 2333, 3140, 3104, 1077, 1954, 3103,
	1797, 215, 1863, 1862, 2631, 215, 2675, 2150, 2147, 1939,
	2453, 1557, 1254, 2017, 1083, 1562, 2630, 1878, 1074, 1769,
	2629, 1802, 1803, 2628, 2586, 1082, 2396, 2388, 1095, 1074,
	1031, 843, 1298, 843, 1898, 2387, 1898, 1895, 1899, 213,
	2825, 2367, 2298, 1508, 2784, 1903, 1904, 2344, 1421, 1798,
	2093, 1460, 1217, 841, 1374, 2164, 1373, 1348, 787, 1348,
	2686, 2681, 2682, 2683, 2403, 2020, 2023, 1082, 2680, 2678,
	2679, 2671, 2672, 2673, 2674, 2676, 2677, 2335, 2010, 2163,
	836, 2402, 2404, 2051, 2592, 2020, 2005, 3580, 1288, 2333,
	1287, 3398, 2685, 1660, 2003, 1929, 1062, 1930, 3744, 2593,
	1944, 2124, 2125, 2598, 1042, 1943, 1941, 1965, 795, 2152,
	1495, 1771, 1033, 1095, 1075, 611, 2940, 2124, 2140, 1309,
	2407, 614, 1076, 2366, 2018, 1075, 1286, 840, 1285, 2000,
	2004, 1948, 2050, 1076, 1263, 1972, 1040, 1249, 2347, 2324,
	2108, 1788, 1770, 1509, 2018, 1789, 3316, 2289, 3448, 1489,
	1490, 1491, 1492, 1494, 1495, 2384, 788, 2194, 215, 2198,
	2198, 2212, 2355, 2124, 1433, 2034, 2232, 2234, 2677, 2143,
	3745, 2238, 3332, 2377, 2378, 2377, 2378, 2002, 2377, 2378,
	1095, 1369, 215, 2679, 2671, 2672, 2673, 2674, 2676, 2677,
	1966, 215, 2686, 861, 3117, 2009, 3646, 2015, 2007, 1707,
	1707, 1389, 2008, 215, 2022, 842, 1095, 3724, 825, 2559,
	2146, 825, 825, 666, 665, 2287, 2354, 2155, 1453, 1043,
	2574, 2047, 2048, 2038, 2108, 1962, 2039, 2040, 1861, 843,
	2139, 3753, 1465, 2116, 1060, 2104, 1420, 1790, 2161, 2114,
	843, 1957, 1900, 2162, 843, 1397, 2165, 2594, 2166, 2167,
	1792, 1385, 1958, 2946, 2945, 1411, 2596, 3747, 2408, 2102,
	1397, 2538, 2152, 1077, 2254, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 2120, 1077, 1437, 2669, 2670, 721, 2781,
	1649, 1370, 2296, 2346, 851, 3000, 215, 3767, 1003, 3673,
	2137, 2566, 2567, 3397, 1208, 3314, 2671, 2672, 2673, 2674,
	2676, 2677, 789, 1959, 3713, 1794, 1412, 1270, 787, 3222,
	2288, 3221, 2896, 3129, 2253, 2262, 2671, 2672, 2673, 2674,
	2676, 2677, 1251, 2276, 1095, 2365, 2573, 1375, 843, 215,
	836, 1999, 2837, 1073, 2831, 2207, 2223, 215, 2259, 2260,
	1821, 143, 2236, 1268, 839, 2897, 799, 1806, 215, 2261,
	1752, 2266, 799, 3551, 2272, 2273, 2255, 2244, 2245, 1795,
	1991, 215, 1270, 1989, 1683, 1683, 2098, 1788, 2300, 2815,
	1647, 1789, 3779, 1778, 1779, 215, 1095, 2099, 1912, 2001,
	1208, 2100, 1208, 2813, 799, 2105, 2783, 2152, 215, 215,
	800, 2847, 1964, 799, 2336, 1804, 1588, 2817, 695, 2345,
	1577, 2361, 3746, 2896, 2768, 1308, 788, 1795, 2334, 3733,
	3348, 215, 790, 2335, 215, 1795, 546, 2675, 3315, 3674,
	215, 1041, 3218, 1248, 3751, 2349, 2311, 2812, 2330, 2430,
	2393, 2315, 3410, 215, 3118, 1580, 1581, 3712, 3631, 2819,
	541, 215, 3449, 215, 3562, 2385, 215, 2816, 2134, 2397,
	1543, 791, 215, 2314, 2419, 215, 2421, 215, 661, 215,
	660, 215, 215, 1790, 215, 1208, 1208, 1208, 2369, 1208,
	2544, 2318, 2467, 2636, 215, 215, 1792, 215, 215, 1434,
	2258, 1208, 1804, 3768, 2997, 842, 2588, 3599, 2339, 215,
	2271, 3358, 2414, 796, 2348, 2351, 3672, 2357, 2458, 3212,
	3752, 2458, 3092, 2685, 3671, 215, 215, 215, 2368, 2507,
	215, 3394, 215, 3223, 1032, 215, 1032, 215, 1055, 215,
	2957, 2386, 2557, 3723, 1707, 3721, 3495, 1399, 2528, 2101,
	2529, 1794, 3754, 2480, 2481, 2476, 2450, 1432, 2103, 3365,
	215, 215, 215, 215, 215, 215, 2370, 215, 1791, 2090,
	2885, 2509, 789, 2547, 2512, 2513, 1221, 2998, 2424, 2448,
	947, 722, 611, 2518, 2519, 2520, 1371, 2492, 614, 1187,
	2107, 3349, 2434, 2469, 2415, 1435, 1870, 2115, 215, 1627,
	1053, 2526, 3711, 1199, 1961, 3157, 215, 2536, 2511, 143,
	1464, 2514, 1059, 2515, 1048, 2379, 2381, 2382, 2383, 211,
	1956, 536, 537, 2686, 552, 536, 552, 562, 567, 1384,
	1386, 583, 2462, 2523, 3393, 2549, 2482, 2551, 861, 2477,
	211, 533, 861, 2530, 2473, 2532, 2474, 2534, 2475, 3597,
	2494, 1179, 2483, 1795, 1348, 1179, 1823, 2510, 707, 2320,
	1475, 3780, 211, 2542, 2350, 1630, 3219, 1913, 1436, 2037,
	1805, 2322, 1763, 2478, 2961, 3455, 1788, 2546, 3598, 2152,
	1789, 3264, 790, 2996, 3773, 2787, 3048, 3454, 1634, 1199,
	1199, 3436, 1474, 2117, 3319, 215, 2543, 3538, 3106, 2614,
	2615, 3318, 2088, 2323, 2618, 2091, 3564, 2589, 2565, 1683,
	1557, 1795, 2886, 2619, 2761, 2525, 1543, 2877, 2321, 2795,
	1637, 791, 2556, 2555, 2531, 2791, 2533, 2554, 2535, 2449,
	542, 2437, 2428, 1634, 1760, 1199, 2034, 1894, 2560, 2256,
	1883, 1630, 3395, 1831, 1474, 2678, 2679, 2671, 2672, 2673,
	2674, 2676, 2677, 2552, 2087, 1635, 1881, 1469, 536, 536,
	1857, 2219, 2027, 1830, 3608, 1637, 211, 2575, 2958, 1199,
	2250, 1199, 1790, 1996, 1474, 2545, 1756, 3177, 3369, 3224,
	1473, 2425, 3478, 543, 1632, 1792, 1311, 1035, 3476, 1035,
	1949, 2610, 3437, 1826, 1791, 2805, 2802, 2801, 2587, 2580,
	1635, 2706, 1758, 1095, 2558, 3074, 2725, 1672, 2724, 1634,
	2295, 2294, 843, 2293, 1802, 1803, 1400, 2722, 1475, 2720,
	2721, 1759, 215, 544, 1633, 545, 1413, 215, 3049, 718,
	215, 3265, 1473, 215, 215, 1095, 3050, 3772, 2252, 215,
	1794, 1637, 1827, 2251, 2292, 1294, 2728, 1292, 2625, 3225,
	3317, 710, 1095, 720, 1280, 2742, 3565, 2371, 2432, 215,
	1632, 1636, 1473, 840, 2028, 3444, 3544, 834, 3340, 787,
	1475, 1281, 2929, 1892, 215, 2412, 1635, 2766, 3730, 3474,
	3616, 3605, 3270, 3434, 3063, 2159, 1451, 1031, 3732, 1031,
	2089, 836, 2777, 215, 215, 215, 3691, 3611, 3559, 215,
	1633, 2732, 215, 3415, 3263, 618, 1636, 2719, 2730, 215,
	215, 3545, 215, 215, 215, 3435, 1073, 2751, 2698, 2779,
	2973, 2758, 2937, 1449, 2788, 2789, 215, 215, 215, 1429,
	2855, 835, 1427, 2785, 2755, 215, 2701, 2702, 2703, 2745,
	2803, 2663, 1795, 2807, 3445, 2599, 2714, 2804, 215, 215,
	2809, 2810, 2748, 2756, 2731, 2429, 2759, 1095, 2729, 2740,
	2741, 2601, 2602, 3612, 2792, 2743, 2744, 788, 1208, 1033,
	2762, 1033, 2395, 2363, 1786, 1410, 2313, 3546, 1095, 1408,
	2820, 2821, 1636, 215, 2822, 1666, 215, 215, 2774, 2775,
	215, 2776, 1663, 1208, 215, 2763, 2764, 2765, 1406, 2372,
	2373, 2828, 2727, 1208, 1208, 1452, 2746, 1404, 2747, 215,
	1364, 2830, 2841, 2842, 2699, 215, 2843, 1402, 2864, 1793,
	215, 2780, 215, 2876, 2954, 2953, 1394, 1469, 2786, 215,
	2892, 1392, 2838, 1290, 716, 717, 2540, 1707, 2158, 2539,
	1988, 1450, 2517, 2854, 1293, 1793, 1291, 2016, 1998, 1969,
	2736, 2507, 719, 1208, 1208, 2818, 708, 709, 2901, 2769,
	2507, 215, 215, 2872, 1745, 215, 1591, 1368, 1267, 2824,
	3336, 2692, 2693, 2694, 1707, 2833, 3666, 1833, 1448, 3327,
	2836, 2840, 2759, 1791, 1428, 1833, 3604, 1426, 3293, 2848,
	3175, 2846, 2845, 797, 3167, 3124, 2796, 3122, 3105, 1179,
	2856, 2884, 215, 2875, 1095, 215, 215, 1095, 215, 2868,
	619, 620, 2454, 789, 2443, 2442, 2369, 2893, 2916, 1046,
	2422, 1926, 1925, 3709, 2909, 2910, 2911, 2737, 2912, 2913,
	1409, 2852, 2853, 1923, 1407, 1199, 1921, 1918, 2839, 1916,
	861, 215, 2993, 2936, 1032, 1914, 1179, 1056, 2898, 1905,
	1854, 2888, 2900, 1405, 583, 1852, 1878, 2907, 3500, 843,
	1032, 2931, 1403, 1841, 1839, 2927, 143, 143, 1834, 2735,
	1820, 211, 1401, 211, 211, 1190, 2219, 211, 1095, 2951,
	2834, 1393, 2952, 1807, 2835, 1796, 1391, 2578, 1289, 2739,
	211, 1223, 1987, 2914, 2915, 1095, 1674, 215, 1478, 3725,
	1012, 2942, 1683, 2943, 2891, 2944, 3637, 3389, 1193, 622,
	621, 1093, 3384, 2976, 3383, 1247, 2508, 1782, 802, 804,
	806, 833, 1245, 790, 1013, 3502, 2353, 3185, 2335, 1266,
	2948, 2335, 1804, 1960, 211, 211, 1986, 1190, 2956, 1683,
	2333, 1446, 1447, 2352, 3307, 598, 1985, 211, 1967, 3321,
	3553, 1390, 3525, 2959, 3271, 1307, 2219, 2219, 2374, 623,
	624, 2356, 791, 1482, 2579, 1485, 1486, 3726, 2738, 211,
	211, 211, 211, 1190, 3304, 3719, 3060, 3297, 1753, 2985,
	2986, 2390, 2989, 583, 1179, 211, 211, 1479, 1485, 1486,
	547, 3295, 1488, 2981, 2949, 2358, 3603, 3299, 2392, 3005,
	707, 3573, 3570, 3166, 3156, 3008, 2992, 215, 215, 3089,
	2391, 3003, 3748, 1014, 3012, 652, 1199, 3305, 1095, 2360,
	3013, 694, 1487, 3014, 3017, 2461, 3079, 3015, 2999, 3001,
	3002, 2359, 2237, 1748, 1707, 1679, 558, 2767, 3025, 215,
	3027, 3771, 3052, 2669, 2670, 1487, 1485, 1486, 3572, 3298,
	2327, 2328, 2325, 2326, 1378, 1554, 3245, 3101, 2154, 3094,
	1377, 211, 3783, 2327, 2325, 2160, 2219, 2219, 2219, 3053,
	1431, 3241, 3093, 1430, 3004, 211, 3070, 3071, 1552, 3535,
	3468, 3428, 3065, 3067, 3068, 3426, 215, 1707, 1707, 3307,
	3355, 143, 3287, 3209, 3131, 3202, 3191, 1035, 3170, 3151,
	3150, 3149, 3120, 1707, 1707, 2908, 2882, 2880, 2522, 2047,
	3018, 2521, 1208, 1035, 2471, 3143, 1208, 2447, 3061, 3304,
	3081, 2423, 3091, 2119, 1984, 2047, 3028, 1983, 1341, 215,
	1982, 1981, 1908, 1907, 1707, 1906, 215, 1886, 1865, 1864,
	3082, 1860, 2969, 2970, 1859, 1095, 215, 1858, 1856, 1855,
	1208, 1445, 3097, 1444, 3136, 3138, 3056, 1320, 3123, 3135,
	3125, 1319, 3305, 1318, 215, 3109, 3300, 1317, 3163, 1316,
	3301, 1315, 1314, 1313, 1312, 1310, 1305, 3187, 215, 215,
	1208, 1208, 1208, 3147, 215, 215, 215, 1304, 3148, 215,
	215, 3182, 1303, 215, 215, 2467, 1208, 1031, 1302, 1683,
	1301, 215, 1095, 1262, 1261, 1260, 3179, 1259, 1258, 3164,
	3303, 1257, 3178, 1031, 1256, 1250, 2369, 1244, 1242, 1241,
	3165, 1058, 1057, 3306, 1095, 2507, 3029, 3030, 3031, 3032,
	3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042,
	3043, 3044, 3045, 3046, 3047, 987, 3051, 1179, 894, 1754,
	808, 3239, 1683, 1683, 3198, 794, 3447, 1439, 3181, 3211,
	74, 1252, 3188, 3210, 3180, 3189, 638, 68, 1683, 1683,
	215, 3183, 3119, 647, 3618, 3193, 3199, 3200, 3194, 1033,
	3173, 3201, 536, 2811, 2399, 3207, 3205, 3235, 3208, 1968,
	1398, 1970, 3204, 2750, 2278, 1033, 3596, 3249, 1707, 1683,
	3168, 3169, 2635, 211, 3226, 211, 3220, 3531, 3409, 211,
	2157, 3300, 1573, 70, 882, 3301, 969, 3215, 3347, 1223,
	2796, 1190, 211, 3346, 211, 3294, 3302, 3108, 2497, 211,
	1223, 552, 1179, 215, 211, 1223, 3344, 3343, 850, 1095,
	583, 1095, 1098, 1764, 1878, 888, 1780, 1773, 2307, 2197,
	1687, 3276, 891, 1684, 1686, 3303, 893, 892, 1685, 3227,
	1575, 890, 1682, 2431, 215, 215, 215, 2465, 3306, 1297,
	773, 3262, 1768, 2113, 2141, 2624, 215, 1568, 863, 884,
	2138, 1051, 2733, 215, 2895, 215, 3088, 3375, 215, 215,
	215, 2026, 655, 2666, 3313, 3290, 3291, 2144, 1044, 1179,
	1095, 215, 215, 2220, 3312, 1095, 3324, 3325, 1707, 2213,
	2209, 2455, 1455, 1545, 3322, 215, 2466, 3278, 3272, 215,
	1085, 3275, 3323, 3282, 866, 1179, 3277, 2111, 215, 3273,
	3274, 3292, 1559, 215, 3283, 2755, 1095, 2219, 2219, 1208,
	2604, 2036, 2902, 2753, 2304, 3281, 3341, 3634, 2041, 1869,
	1011, 1010, 1009, 1032, 3625, 3311, 3622, 2862, 1757, 2319,
	1537, 2869, 878, 1683, 1198, 2718, 2930, 215, 1032, 1264,
	3552, 3302, 1536, 2406, 3279, 2405, 3541, 1072, 3350, 1095,
	2031, 1071, 1070, 2794, 3334, 3388, 3335, 3778, 3361, 3116,
	182, 2572, 1476, 3385, 1468, 3371, 3374, 179, 1032, 211,
	3357, 3370, 3360, 3342, 181, 180, 3351, 3133, 3378, 1095,
	91, 3362, 35, 16, 119, 118, 3372, 117, 116, 115,
	114, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219,
	2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219, 2219,
	3338, 2219, 3421, 1179, 211, 113, 1095, 108, 211, 211,
	112, 3396, 111, 3379, 215, 110, 215, 109, 1095, 215,
	107, 1891, 106, 105, 104, 103, 102, 215, 101, 3401,
	211, 3367, 211, 1683, 211, 100, 99, 98, 536, 3417,
	97, 96, 95, 1093, 94, 93, 92, 579, 576, 49,
	215, 3431, 1909, 3430, 48, 1179, 90, 89, 15, 33,
	13, 53, 54, 12, 3422, 3423, 28, 29, 3406, 215,
	1878, 80, 79, 3407, 27, 14, 2215, 215, 3425, 3429,
	26, 24, 10, 8, 7, 30, 215, 1651, 11, 148,
	3477, 1208, 147, 73, 3467, 3486, 583, 215, 146, 3450,
	707, 3451, 72, 145, 144, 71, 22, 3491, 2864, 211,
	3407, 1190, 211, 3492, 9, 3501, 3494, 3490, 215, 215,
	3469, 140, 2050, 3465, 3487, 583, 3475, 3161, 1032, 3499,
	3521, 3522, 211, 3459, 3460, 67, 3509, 3510, 142, 3485,
	215, 211, 211, 141, 211, 65, 211, 3497, 211, 139,
	211, 138, 3498, 3496, 3374, 215, 3504, 64, 3503, 137,
	1707, 136, 66, 135, 1993, 20, 1035, 1994, 5, 1995,
	52, 6, 3391, 3547, 3505, 2938, 3537, 84, 85, 31,
	211, 1035, 3513, 62, 61, 60, 1200, 1211, 19, 3529,
	1215, 51, 18, 3520, 172, 171, 170, 169, 164, 163,
	168, 567, 166, 215, 3536, 583, 165, 167, 3554, 162,
	3561, 1035, 174, 173, 1707, 176, 215, 1208, 160, 156,
	155, 159, 161, 215, 158, 157, 154, 1208, 1208, 175,
	56, 134, 133, 1208, 57, 3524, 3457, 215, 3587, 215,
	1271, 1274, 132, 131, 130, 129, 3490, 128, 55, 17,
	2, 1, 3566, 3579, 3575, 3592, 3600, 3593, 3571, 3584,
	3583, 3567, 3568, 215, 0, 0, 1031, 0, 0, 215,
	3613, 3591, 215, 3578, 1095, 0, 3615, 0, 3414, 0,
	0, 1031, 0, 215, 215, 0, 0, 3614, 3628, 3624,
	3627, 3632, 1357, 0, 3585, 3586, 3638, 0, 0, 1672,
	3590, 3643, 1215, 0, 3641, 0, 0, 3620, 0, 0,
	1707, 1031, 3650, 0, 0, 3636, 0, 0, 3651, 0,
	3439, 0, 3629, 215, 0, 1683, 0, 1199, 0, 1485,
	1486, 3647, 3645, 0, 0, 3678, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 1379, 3662, 3663, 1033, 1516,
	3665, 3683, 3639, 3664, 0, 3640, 1488, 0, 536, 0,
	0, 3696, 3681, 1033, 0, 0, 3698, 215, 0, 0,
	3700, 0, 0, 211, 0, 0, 3706, 3705, 2050, 1683,
	0, 1035, 536, 0, 3710, 3697, 1487, 215, 0, 211,
	3702, 536, 3699, 1033, 3701, 0, 1032, 1032, 2467, 0,
	0, 0, 0, 211, 0, 3716, 3717, 3722, 3718, 3720,
	3728, 0, 0, 0, 215, 0, 215, 3727, 0, 3624,
	0, 3731, 3627, 3739, 0, 3737, 3729, 3735, 3742, 0,
	3528, 0, 3734, 3743, 3736, 0, 0, 3741, 0, 0,
	3703, 3704, 594, 0, 3707, 0, 0, 3636, 0, 0,
	0, 0, 0, 0, 3755, 3757, 0, 0, 0, 0,
	3761, 0, 1179, 1629, 0, 3765, 3766, 0, 3762, 0,
	1493, 0, 0, 0, 3769, 1683, 0, 0, 1810, 3775,
	0, 1031, 0, 0, 0, 3781, 552, 3782, 0, 3776,
	3777, 2562, 3784, 0, 1179, 0, 0, 0, 0, 1814,
	0, 1515, 1517, 0, 600, 0, 0, 3788, 3789, 3787,
	3791, 1179, 3792, 0, 0, 3794, 0, 0, 0, 3797,
	0, 0, 0, 0, 3795, 596, 0, 0, 0, 2343,
	0, 0, 0, 0, 0, 861, 0, 211, 0, 687,
	0, 0, 0, 1811, 0, 0, 0, 0, 211, 861,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 211, 669, 1033, 0, 0, 0, 0, 0, 0,
	0, 2215, 2215, 2219, 0, 211, 1032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 2416,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	0, 1223, 0, 0, 211, 2219, 1179, 849, 0, 0,
	211, 0, 672, 1815, 0, 0, 0, 0, 0, 591,
	0, 0, 0, 1891, 0, 0, 0, 1179, 0, 692,
	0, 2343, 0, 536, 0, 0, 2470, 0, 595, 1035,
	1035, 0, 211, 0, 673, 211, 1509, 211, 0, 211,
	0, 211, 211, 0, 1190, 0, 0, 0, 0, 0,
	0, 0, 599, 674, 2490, 707, 0, 2343, 2343, 0,
	0, 2215, 2215, 2215, 0, 1816, 1817, 0, 593, 211,
	0, 0, 0, 675, 1812, 0, 676, 0, 0, 0,
	0, 600, 0, 0, 0, 211, 1190, 211, 0, 0,
	1223, 0, 1223, 0, 0, 1190, 0, 1190, 0, 1190,
	0, 0, 691, 0, 0, 2219, 0, 590, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1032, 0,
	211, 211, 211, 211, 1190, 211, 1032, 211, 0, 1031,
	1031, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 0, 0, 1179, 0, 597, 1179, 0, 0, 2669,
	2670, 0, 2687, 2688, 2689, 0, 592, 0, 211, 0,
	1489, 1490, 1491, 1492, 1494, 1495, 211, 0, 2978, 0,
	0, 0, 0, 2219, 2219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 1485, 1486, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 1516, 0, 1035,
	0, 1033, 1033, 0, 1488, 2684, 0, 1179, 0, 0,
	695, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 599,
	0, 0, 0, 1507, 0, 1223, 680, 0, 0, 681,
	1504, 1819, 0, 0, 0, 689, 0, 0, 0, 0,
	0, 0, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3230, 0, 0, 683, 690, 0, 0, 0, 0, 1031,
	0, 684, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 686, 1931, 0, 0, 1493, 685,
	0, 0, 0, 1215, 0, 0, 1942, 0, 0, 0,
	0, 2690, 693, 0, 0, 0, 0, 0, 0, 1951,
	1952, 1953, 0, 688, 0, 0, 0, 1179, 0, 1515,
	1517, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 0, 0, 2685, 211, 0, 1035,
	0, 0, 536, 0, 0, 0, 0, 536, 1502, 1503,
	536, 1033, 1035, 536, 536, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 1223,
	0, 0, 849, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 2215, 2215, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2343, 2343, 211, 0, 0, 0, 2343,
	0, 0, 2798, 1225, 0, 1229, 0, 1235, 0, 2343,
	2798, 1031, 2343, 2798, 2798, 0, 2686, 0, 0, 1031,
	0, 0, 0, 0, 1179, 0, 211, 211, 211, 0,
	0, 0, 1031, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 1190,
	0, 0, 0, 0, 1509, 0, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215,
	2215, 2215, 2215, 2215, 2215, 0, 2215, 0, 0, 0,
	0, 1179, 0, 2858, 0, 0, 2860, 2343, 0, 0,
	211, 0, 1360, 1033, 211, 0, 0, 0, 0, 0,
	1365, 1033, 0, 1179, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 1033, 1190, 0, 211, 0, 0,
	2343, 0, 536, 0, 0, 0, 0, 0, 0, 2343,
	2681, 2682, 2683, 0, 0, 0, 0, 2680, 2678, 2679,
	2671, 2672, 2673, 2674, 2676, 2677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 0, 0, 0,
	0, 211, 1891, 0, 0, 1891, 0, 0, 0, 0,
	0, 0, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 0, 0, 0, 0, 0, 0,
	1485, 1486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2947, 0, 0, 1190, 211, 0, 211, 0,
	1516, 0, 0, 0, 0, 0, 0, 1488, 1179, 0,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	1542, 211, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 1504, 0, 1556, 0, 0, 58, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 1179,
	0, 0, 59, 0, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3010, 63, 0,
	0, 0, 0, 2972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 69,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2409, 0,
	2410, 0, 0, 0, 0, 0, 0, 0, 1179, 0,
	75, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 76, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 211, 0, 1179, 0,
	0, 1502, 1503, 1623, 1623, 1623, 0, 0, 0, 2669,
	2670, 0, 2687, 2688, 2689, 0, 0, 536, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 2977, 77,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	0, 0, 0, 2479, 0, 0, 0, 1179, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 849, 2684, 0, 0, 0, 0,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 1486, 583, 1518, 1519, 1520,
	1528, 1529, 1530, 0, 0, 0, 0, 0, 0, 1514,
	948, 0, 0, 1521, 1516, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 2301, 0, 1534, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 78, 0, 0, 211, 0, 0, 212,
	2675, 1487, 0, 0, 0, 0, 211, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	212, 0, 0, 0, 2343, 211, 149, 81, 0, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 2490, 2490,
	0, 0, 212, 0, 707, 707, 2343, 0, 183, 1891,
	1891, 2690, 0, 707, 2343, 0, 0, 0, 0, 0,
	702, 211, 0, 0, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 0, 1493, 2685, 0, 185, 0,
	0, 0, 0, 0, 0, 1505, 1501, 0, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 2215, 1525,
	0, 121, 1535, 0, 0, 0, 1515, 1517, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	3250, 0, 0, 184, 0, 0, 1531, 0, 1532, 0,
	0, 0, 0, 177, 0, 1502, 1503, 0, 0, 0,
	2215, 178, 0, 1179, 0, 0, 0, 0, 861, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2686, 211, 0, 0,
	0, 0, 1533, 1223, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2343, 2343, 2343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 2669, 2670, 0,
	2687, 2688, 2689, 2343, 0, 2798, 0, 0, 1223, 1223,
	211, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	2215, 211, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 2343, 0, 0, 0, 3353,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 3364, 0, 0, 0, 1526, 0, 0,
	2681, 2682, 2683, 2684, 0, 0, 0, 2680, 2678, 2679,
	2671, 2672, 2673, 2674, 2676, 2677, 0, 2025, 0, 2029,
	0, 0, 0, 0, 0, 0, 2043, 1223, 0, 0,
	0, 0, 0, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 0, 2092,
	0, 2094, 2095, 2096, 2097, 0, 2849, 0, 2675, 0,
	0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505,
	1501, 2121, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 2873, 0, 0, 1556, 3258, 0, 0, 2136, 3257,
	0, 2878, 2879, 0, 2343, 0, 2798, 0, 0, 3433,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 2690,
	0, 0, 0, 0, 0, 0, 0, 0, 2174, 2177,
	2180, 2183, 0, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	583, 0, 0, 0, 2211, 0, 2222, 2224, 2229, 0,
	0, 2922, 2923, 0, 2685, 0, 0, 0, 0, 3433,
	0, 0, 0, 0, 0, 0, 0, 2343, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 1100, 212, 212, 3433, 1100, 212, 1100, 1100,
	0, 0, 1100, 0, 2686, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2669, 2670, 0, 2687, 2688, 2689, 0, 0, 0, 0,
	0, 0, 0, 3353, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 1100, 212, 212, 211, 0, 0, 0,
	0, 0, 0, 2798, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	212, 212, 212, 0, 1100, 1100, 2684, 0, 0, 1100,
	0, 0, 0, 3609, 1100, 212, 212, 0, 0, 1223,
	0, 0, 211, 0, 1100, 0, 0, 0, 2681, 2682,
	2683, 0, 0, 211, 2343, 2680, 2678, 2679, 2671, 2672,
	2673, 2674, 2676, 2677, 0, 2418, 0, 2420, 0, 0,
	0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 1521, 1516, 3010, 0, 0, 0, 0, 0, 1488,
	0, 2675, 0, 0, 1534, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 1486, 0, 212, 0, 0, 2691, 1487,
	0, 0, 0, 0, 0, 0, 0, 2343, 1507, 0,
	0, 0, 1516, 0, 0, 1504, 0, 0, 0, 1488,
	0, 0, 2690, 0, 0, 0, 0, 3433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 1223, 0, 2343, 2685, 1507, 0,
	3145, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	2537, 0, 0, 1510, 1511, 1512, 1513, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2967, 0, 1525, 0, 0,
	1535, 0, 0, 0, 1515, 1517, 1538, 1539, 0, 0,
	0, 0, 0, 1510, 1511, 1512, 1513, 0, 3195, 3196,
	3197, 0, 0, 1493, 1531, 0, 1532, 0, 0, 0,
	0, 0, 0, 1502, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2686, 0, 1523,
	0, 0, 0, 0, 1515, 1517, 0, 0, 0, 1508,
	0, 2584, 2585, 0, 0, 0, 0, 2591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 1502, 1503, 0, 2605, 2606, 0, 0,
	0, 0, 2136, 0, 0, 0, 0, 1522, 0, 0,
	0, 2613, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 2627, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 212, 212, 212, 0, 0, 0, 0, 212,
	0, 1514, 2648, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 1509,
	0, 2681, 2682, 2683, 0, 0, 0, 0, 2680, 2678,
	2679, 2671, 2672, 2673, 2674, 2676, 2677, 1100, 0, 0,
	0, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 2229,
	2229, 2229, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 2723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 849,
	0, 0, 0, 2657, 0, 0, 0, 2658, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 1100, 1100, 212,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 1501, 2814,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 212, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 212, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 63, 0, 0, 0, 0,
	1521, 1516, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 1100, 1534, 1100, 0, 0, 1100, 0, 0,
	0, 0, 0, 0, 0, 1100, 69, 0, 1100, 212,
	0, 0, 212, 0, 0, 0, 0, 0, 1487, 0,
	0, 1100, 1100, 1100, 0, 0, 0, 1507, 0, 0,
	0, 0, 212, 0, 1504, 0, 0, 75, 0, 0,
	0, 212, 212, 0, 212, 0, 212, 86, 212, 0,
	212, 0, 76, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 914, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1511, 1512, 1513, 77, 0, 0, 0,
	2043, 0, 1493, 0, 0, 0, 2964, 2965, 0, 0,
	2968, 0, 0, 0, 2971, 0, 0, 0, 0, 0,
	0, 0, 210, 2975, 0, 0, 1525, 0, 1100, 1535,
	0, 0, 2982, 1515, 1517, 2723, 0, 0, 0, 0,
	0, 0, 0, 612, 0, 0, 0, 0, 0, 0,
	2994, 0, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 3019,
	3020, 0, 3021, 3022, 3023, 0, 0, 3024, 1508, 0,
	0, 3026, 0, 0, 0, 0, 0, 0, 0, 883,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	78, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 3054, 3055, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3064, 0, 0,
	0, 0, 0, 149, 81, 0, 82, 0, 0, 0,
	0, 0, 3073, 0, 0, 0, 0, 0, 0, 1485,
	1486, 0, 0, 0, 0, 183, 0, 0, 0, 1034,
	1514, 0, 0, 0, 0, 0, 88, 702, 0, 1516,
	1100, 120, 0, 0, 0, 0, 1488, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 185, 1100, 0, 3102, 0,
	0, 0, 0, 0, 1526, 0, 1487, 0, 0, 0,
	0, 0, 0, 3110, 3113, 1507, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 826, 0, 0, 0, 0, 3132, 0,
	184, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 152,
	1510, 1511, 1512, 1513, 1100, 0, 0, 0, 0, 1524,
	1493, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	1623, 0, 2132, 0, 1100, 0, 2133, 0, 0, 3190,
	0, 1515, 1517, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 1100, 0, 0, 0,
	1100, 0, 1100, 0, 0, 0, 1508, 0, 212, 0,
	3228, 3229, 0, 0, 0, 0, 3233, 3234, 0, 0,
	0, 3237, 3238, 0, 0, 0, 0, 0, 3242, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 3246,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 212, 0, 212, 0, 212,
	0, 212, 212, 0, 0, 1100, 1100, 1100, 1514, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 1509, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3113, 0,
	212, 212, 212, 212, 0, 212, 0, 212, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 122, 0, 210, 0, 210, 210, 212, 0,
	210, 0, 0, 0, 0, 0, 212, 63, 0, 0,
	0, 0, 0, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 124, 0, 0, 0, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 38, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 3113, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 210, 210, 41,
	0, 0, 0, 0, 42, 59, 0, 0, 0, 75,
	210, 0, 125, 0, 3402, 3403, 3404, 0, 40, 86,
	0, 63, 0, 0, 76, 83, 0, 0, 0, 0,
	0, 0, 210, 210, 210, 210, 0, 0, 0, 0,
	3412, 3413, 0, 0, 0, 0, 0, 0, 210, 210,
	0, 43, 69, 0, 3420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 88, 75, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 3113, 0, 0, 0, 76, 83,
	0, 0, 3456, 0, 0, 0, 0, 0, 0, 0,
	0, 3463, 0, 0, 849, 0, 0, 0, 0, 0,
	3470, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 77, 1100, 0, 0, 0, 3113, 0, 0,
	3113, 0, 0, 0, 0, 0, 0, 0, 844, 88,
	88, 88, 0, 0, 0, 0, 216, 0, 0, 88,
	3113, 3113, 0, 0, 0, 1100, 0, 88, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	44, 0, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 149, 81, 0, 82, 0,
	45, 0, 3540, 0, 126, 3543, 605, 0, 0, 0,
	46, 88, 0, 0, 0, 212, 0, 183, 0, 0,
	0, 0, 3113, 0, 0, 0, 0, 0, 605, 50,
	0, 0, 0, 120, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 212, 212, 212, 0,
	0, 0, 0, 0, 0, 212, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 149,
	81, 0, 82, 0, 0, 0, 0, 1100, 0, 0,
	121, 0, 0, 0, 0, 0, 826, 0, 1100, 0,
	0, 183, 0, 0, 153, 0, 0, 0, 1100, 0,
	0, 0, 184, 702, 1548, 0, 0, 120, 0, 0,
	212, 0, 177, 1100, 212, 0, 0, 0, 0, 0,
	178, 1555, 849, 1100, 1100, 1561, 0, 0, 0, 212,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 3, 0, 1645, 0, 1034, 0,
	0, 0, 210, 0, 121, 0, 0, 0, 0, 0,
	0, 3661, 3661, 3661, 0, 210, 1645, 210, 153, 0,
	0, 0, 612, 1100, 1100, 0, 184, 612, 0, 0,
	0, 212, 0, 3682, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3113, 0, 3113, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 3661, 0, 1100, 0, 212, 1100, 212, 0,
	0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 1516, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 212, 1643, 1534, 1646, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1100, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 3661, 3770, 0, 1100, 0, 0, 0, 0,
	3774, 0, 0, 0, 0, 0, 0, 0, 0, 58,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 612, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	69, 210, 210, 0, 0, 0, 1525, 0, 0, 1535,
	0, 0, 0, 1515, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 210, 0, 210, 0, 0,
	0, 75, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 86, 1502, 1503, 0, 0, 76, 83, 1100, 0,
	0, 1485, 1486, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 210, 1522, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 1504, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 210, 0, 210, 0, 210,
	0, 210, 1100, 210, 0, 0, 1100, 0, 1096, 0,
	1514, 0, 1096, 0, 1209, 1209, 0, 0, 1209, 212,
	0, 918, 0, 0, 2966, 0, 212, 0, 1509, 0,
	0, 0, 0, 210, 0, 1100, 212, 0, 0, 0,
	1100, 0, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 1526, 0, 0, 0, 0, 0,
	0, 844, 0, 844, 78, 0, 0, 0, 1209, 1209,
	1100, 1100, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1517, 0, 1100, 0, 0, 0,
	0, 212, 1100, 0, 0, 0, 0, 149, 81, 0,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 1209, 1502, 1503, 1100, 1209, 0, 0, 0, 183,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 702, 0, 0, 0, 120, 0, 0, 1508, 1524,
	0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 185,
	0, 0, 0, 0, 0, 0, 3256, 0, 0, 0,
	0, 0, 0, 1209, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 826, 0, 0,
	826, 826, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	1514, 0, 178, 0, 0, 0, 1034, 0, 0, 1100,
	0, 1100, 1027, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 1034, 1351, 0, 2110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1555, 206, 0, 0, 1555, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 212, 212, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 1501, 1646, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 612, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 1096, 212, 0, 0,
	0, 0, 0, 0, 0, 605, 0, 210, 0, 0,
	605, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 210, 0, 0, 210, 88,
	210, 0, 210, 0, 210, 210, 212, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 212, 212,
	0, 0, 0, 0, 0, 1485, 1486, 0, 210, 0,
	210, 0, 88, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 210, 210, 210, 0, 210, 0,
	210, 0, 0, 0, 0, 0, 88, 0, 0, 88,
	0, 0, 1487, 1097, 0, 0, 0, 1097, 0, 1210,
	1210, 1507, 0, 1210, 0, 0, 0, 0, 1504, 0,
	0, 210, 0, 1209, 1209, 0, 0, 88, 0, 210,
	0, 1096, 0, 0, 0, 0, 212, 1100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 1100, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 2590, 0,
	0, 0, 0, 1210, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 88, 1493, 0, 0, 0,
	0, 0, 212, 0, 1100, 0, 1485, 1486, 0, 0,
	0, 0, 0, 212, 0, 1210, 1210, 0, 0, 0,
	1210, 0, 0, 0, 0, 1210, 1516, 1515, 1517, 0,
	0, 0, 0, 1488, 0, 1210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 1209, 0,
	1209, 0, 1507, 1209, 0, 0, 0, 0, 1210, 1504,
	0, 1209, 1508, 0, 1209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 1209, 1209,
	0, 2110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 0, 2583,
	0, 0, 1555, 1090, 0, 0, 0, 0, 0, 1197,
	0, 0, 0, 0, 0, 1034, 0, 1510, 1511, 1512,
	1513, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 1517,
	1645, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 0, 0, 0, 1096, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 1324, 1324, 1197, 0, 0, 0, 210, 0,
	0, 0, 0, 1508, 0, 0, 0, 1358, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 0, 210,
	210, 210, 0, 0, 0, 0, 1021, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 0, 1438, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 88, 88,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	88, 88, 0, 0, 88, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 0, 0, 0, 1021, 0, 0, 844,
	1209, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 88, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1210, 1210,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 1209, 0, 1209, 0,
	0, 1661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 1197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1209, 1209, 1209, 0, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 1210, 0, 0, 1210, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 1210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 1210, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1021, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520,
	1528, 1529, 1530, 0, 0, 0, 1867, 0, 1034, 0,
	1874, 0, 0, 1521, 1516, 0, 0, 0, 0, 1097,
	0, 1488, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 1299, 0, 1897, 0, 1897, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 1516, 0, 0, 1097, 0, 0, 0, 1488, 0,
	0, 1874, 0, 1534, 1946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1021, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 1963, 1493, 0, 0, 1487, 0,
	0, 0, 0, 0, 1973, 0, 1975, 1507, 1977, 0,
	1979, 0, 1980, 0, 1504, 0, 0, 88, 0, 1525,
	0, 0, 1535, 0, 0, 0, 1515, 1517, 0, 1096,
	1034, 1097, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 1997, 0, 0, 0, 1531, 0, 1532, 0,
	0, 1645, 0, 0, 0, 1502, 1503, 1097, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 1510, 1511, 1512, 1513, 0, 0, 1096, 0,
	0, 1508, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 210, 210, 1525, 0, 0, 1535,
	0, 0, 0, 1515, 1517, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 1210, 1021, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 1523, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 0,
	0, 1509, 0, 1096, 0, 0, 0, 0, 0, 1533,
	0, 0, 0, 0, 1209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 1522, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1209,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 1209,
	1209, 1210, 0, 1210, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2285, 88, 0, 1509, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 1209,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 1526, 1499, 1500, 1506, 1527, 1505,
	1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 0, 0, 0, 0, 0, 1210, 1210, 1210, 2980,
	1210, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	1096, 0, 1210, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1524,
	0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	0, 0, 0, 0, 1096, 0, 2660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1197, 0, 0,
	0, 0, 0, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 210,
	2110, 0, 0, 0, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 1874, 1534, 0, 0,
	0, 0, 2441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 2472, 210, 0, 1324, 1504, 1324,
	0, 1324, 0, 1197, 1197, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 0, 0, 0,
	0, 2516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2524, 0, 2527,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2548, 1197, 2550, 1197, 0, 2553, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 1531, 1209, 1532,
	1324, 0, 1209, 0, 0, 0, 1502, 1503, 2581, 0,
	88, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 1097, 0, 0, 0,
	0, 1096, 1508, 0, 0, 0, 1209, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 1209, 1209, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 1486, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 1210,
	0, 1516, 0, 0, 0, 0, 0, 0, 1488, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 1210, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1524, 1210, 1210, 1499, 1500, 1506, 1527,
	1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	2659, 0, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 1096, 0, 0, 0,
	0, 1096, 0, 0, 0, 1097, 0, 2790, 1097, 0,
	0, 0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520,
	1528, 1529, 1530, 1515, 1517, 0, 0, 0, 0, 0,
	0, 0, 1096, 1521, 1516, 1209, 0, 0, 2827, 2829,
	2441, 1488, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 1502, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 1096, 0, 0, 1508, 1097,
	1507, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 2870, 0, 0, 1096, 2874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 1096, 1493, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2926, 0, 0, 0, 0, 1509, 1525,
	0, 0, 1535, 0, 0, 0, 1515, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 1532, 0,
	0, 0, 0, 0, 0, 1502, 1503, 0, 2950, 1097,
	1197, 0, 0, 0, 0, 0, 0, 1209, 0, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2962, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 1210, 0, 1209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 1209, 0, 0, 1526, 0, 1209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1210, 1210, 1210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505,
	1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 0, 0, 1487, 0, 0, 0, 0, 0, 2656,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 1485, 1486, 0,
	1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 1516, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 3160, 1097, 0, 0, 0, 0, 1510, 1511, 1512,
	1513, 0, 0, 0, 1487, 0, 0, 1493, 3174, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 1535, 0, 0, 0, 1515, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 1097, 0, 1531, 0,
	1532, 0, 0, 3213, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 1523, 0, 0, 0, 1097, 1493, 0,
	1210, 0, 0, 1508, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 1533, 1535, 1516, 0, 0, 1515,
	1517, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	1097, 1522, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 1532, 0, 0, 0, 0, 0, 0, 1502, 1503,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	1097, 0, 1507, 0, 1523, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 1508, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 1533, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 1510, 1511, 1512,
	1513, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3326, 0, 0, 0, 1514, 0, 0, 0,
	0, 1525, 0, 2441, 1535, 0, 0, 0, 1515, 1517,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	2441, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	1526, 0, 0, 0, 1524, 0, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 1508, 0, 0, 0, 0, 0, 0,
	0, 2655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1524, 0, 0, 1499, 1500,
	1506, 1527, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 0, 1514, 0, 0, 1210, 0,
	0, 0, 2654, 0, 0, 0, 0, 0, 1210, 1210,
	0, 0, 0, 1509, 1210, 0, 0, 0, 0, 3440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3519, 1197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3617, 220, 221, 222, 223, 224,
	1101, 225, 1102, 1103, 1104, 3633, 1105, 487, 1106, 1107,
	1108, 1109, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 1110, 235, 236, 237, 238,
	239, 240, 241, 1111, 1112, 242, 492, 493, 494, 1113,
	243, 495, 1114, 1099, 1115, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 1116, 254, 0, 255,
	256, 257, 1117, 258, 971, 259, 260, 1118, 1119, 1121,
	1120, 1122, 1123, 1124, 261, 262, 263, 264, 265, 266,
	496, 497, 1125, 267, 1126, 269, 268, 1127, 270, 1128,
	1129, 271, 272, 273, 1130, 274, 1131, 275, 276, 1132,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 1133, 217, 1134, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 1135, 294,
	1136, 1137, 972, 295, 296, 1138, 297, 502, 1139, 503,
	298, 1140, 299, 300, 301, 302, 504, 505, 506, 357,
	974, 303, 304, 1141, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 1142, 973, 310, 507, 312, 311, 313,
	314, 315, 508, 1143, 509, 1144, 317, 975, 510, 976,
	318, 319, 320, 977, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 1145, 329, 328, 1146, 330, 511, 978,
	331, 332, 979, 1147, 333, 334, 1148, 1149, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 980, 349, 350, 353, 354, 352, 981,
	351, 1150, 219, 982, 355, 1151, 512, 356, 513, 358,
	359, 1152, 360, 361, 362, 1153, 1154, 364, 365, 366,
	1155, 1156, 367, 368, 514, 983, 369, 984, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 1157, 378,
	379, 516, 380, 517, 381, 1158, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 1159, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 1160, 405, 985, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 1161, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 1162, 432, 412, 413, 433, 434, 986, 435,
	436, 520, 437, 438, 1163, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 1164, 450, 451,
	449, 1165, 452, 453, 454, 455, 456, 282, 457, 1166,
	458, 522, 523, 524, 525, 1167, 465, 1168, 459, 460,
	526, 461, 527, 1169, 462, 463, 464, 0, 466, 467,
	1170, 1171, 468, 469, 470, 472, 473, 471, 475, 1172,
	476, 1173, 474, 477, 478, 479, 528, 529, 530, 1174,
	481, 480, 531, 1175, 1176, 1177, 1178, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 2263, 0, 0, 0, 0, 0, 0,
	0, 2264, 220, 221, 222, 223, 224, 1101, 225, 1102,
	1103, 1104, 0, 1105, 487, 1106, 1107, 1108, 1109, 226,
	228, 227, 229, 230, 488, 489, 231, 490, 234, 232,
	233, 491, 1110, 235, 236, 237, 238, 239, 240, 241,
	1111, 1112, 242, 492, 493, 494, 1113, 243, 495, 1114,
	1099, 1115, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 1116, 254, 0, 255, 256, 257, 1117,
	258, 971, 259, 260, 1118, 1119, 1121, 1120, 1122, 1123,
	1124, 261, 262, 263, 264, 265, 266, 496, 497, 1125,
	267, 1126, 269, 268, 1127, 270, 1128, 1129, 271, 272,
	273, 1130, 274, 1131, 275, 276, 1132, 277, 498, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 499, 500,
	1133, 217, 1134, 0, 0, 0, 0, 288, 289, 290,
	501, 291, 292, 0, 293, 1135, 294, 1136, 1137, 972,
	295, 296, 1138, 297, 502, 1139, 503, 298, 1140, 299,
	300, 301, 302, 504, 505, 506, 357, 974, 303, 304,
	1141, 305, 306, 308, 0, 0, 218, 307, 309, 316,
	1142, 973, 310, 507, 312, 311, 313, 314, 315, 508,
	1143, 509, 1144, 317, 975, 510, 976, 318, 319, 320,
	977, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	1145, 329, 328, 1146, 330, 511, 978, 331, 332, 979,
	1147, 333, 334, 1148, 1149, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 348, 346,
	980, 349, 350, 353, 354, 352, 981, 351, 1150, 219,
	982, 355, 1151, 512, 356, 513, 358, 359, 1152, 360,
	361, 362, 1153, 1154, 364, 365, 366, 1155, 1156, 367,
	368, 514, 983, 369, 984, 515, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 1157, 378, 379, 516, 380,
	517, 381, 1158, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 518, 390, 391, 1159, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	1160, 405, 985, 406, 407, 408, 409, 519, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 1161, 427,
	428, 422, 424, 425, 426, 423, 429, 430, 431, 1162,
	432, 412, 413, 433, 434, 986, 435, 436, 520, 437,
	438, 1163, 439, 440, 441, 442, 414, 443, 447, 448,
	444, 445, 446, 521, 1164, 450, 451, 449, 1165, 452,
	453, 454, 455, 456, 282, 457, 1166, 458, 522, 523,
	524, 525, 1167, 465, 1168, 459, 460, 526, 461, 527,
	1169, 462, 463, 464, 0, 466, 467, 1170, 1171, 468,
	469, 470, 472, 473, 471, 475, 1172, 476, 1173, 474,
	477, 478, 479, 528, 529, 530, 1174, 481, 480, 531,
	1175, 1176, 1177, 1178, 482, 483, 532, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 0, 0, 2988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2990, 220, 221, 222,
	223, 224, 1101, 225, 1102, 1103, 1104, 0, 1105, 487,
	1106, 1107, 1108, 1109, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 1110, 235, 236,
	237, 238, 239, 240, 241, 1111, 1112, 242, 492, 493,
	494, 1113, 243, 495, 1114, 1099, 1115, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 1116, 254,
	0, 255, 256, 257, 1117, 258, 971, 259, 260, 1118,
	1119, 1121, 1120, 1122, 1123, 1124, 261, 262, 263, 264,
	265, 266, 496, 497, 1125, 267, 1126, 269, 268, 1127,
	270, 1128, 1129, 271, 272, 273, 1130, 274, 1131, 275,
	276, 1132, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 1133, 217, 1134, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	1135, 294, 1136, 1137, 972, 295, 296, 1138, 297, 502,
	1139, 503, 298, 1140, 299, 300, 301, 302, 504, 505,
	506, 357, 974, 303, 304, 1141, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 1142, 973, 310, 507, 312,
	311, 313, 314, 315, 508, 1143, 509, 1144, 317, 975,
	510, 976, 318, 319, 320, 977, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 1145, 329, 328, 1146, 330,
	511, 978, 331, 332, 979, 1147, 333, 334, 1148, 1149,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 980, 349, 350, 353, 354,
	352, 981, 351, 1150, 219, 982, 355, 1151, 512, 356,
	513, 358, 359, 1152, 360, 361, 362, 1153, 1154, 364,
	365, 366, 1155, 1156, 367, 368, 514, 983, 369, 984,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	1157, 378, 379, 516, 380, 517, 381, 1158, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	1159, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 1160, 405, 985, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 1161, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 1162, 432, 412, 413, 433, 434,
	986, 435, 436, 520, 437, 438, 1163, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 1164,
	450, 451, 449, 1165, 452, 453, 454, 455, 456, 282,
	457, 1166, 458, 522, 523, 524, 525, 1167, 465, 1168,
	459, 460, 526, 461, 527, 1169, 462, 463, 464, 0,
	466, 467, 1170, 1171, 468, 469, 470, 472, 473, 471,
	475, 1172, 476, 1173, 474, 477, 478, 479, 528, 529,
	530, 1174, 481, 480, 531, 1175, 1176, 1177, 1178, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3280, 220, 221, 222, 223,
	224, 1101, 225, 1102, 1103, 1104, 0, 1105, 487, 1106,
	1107, 1108, 1109, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 1110, 235, 236, 237,
	238, 239, 240, 241, 1111, 1112, 242, 492, 493, 494,
	1113, 243, 495, 1114, 1099, 1115, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1116, 254, 0,
	255, 256, 257, 1117, 258, 971, 259, 260, 1118, 1119,
	1121, 1120, 1122, 1123, 1124, 261, 262, 263, 264, 265,
	266, 496, 497, 1125, 267, 1126, 269, 268, 1127, 270,
	1128, 1129, 271, 272, 273, 1130, 274, 1131, 275, 276,
	1132, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 1133, 217, 1134, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 1135,
	294, 1136, 1137, 972, 295, 296, 1138, 297, 502, 1139,
	503, 298, 1140, 299, 300, 301, 302, 504, 505, 506,
	357, 974, 303, 304, 1141, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1142, 973, 310, 507, 312, 311,
	313, 314, 315, 508, 1143, 509, 1144, 317, 975, 510,
	976, 318, 319, 320, 977, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1145, 329, 328, 1146, 330, 511,
	978, 331, 332, 979, 1147, 333, 334, 1148, 1149, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 1150, 219, 982, 355, 1151, 512, 356, 513,
	358, 359, 1152, 360, 361, 362, 1153, 1154, 364, 365,
	366, 1155, 1156, 367, 368, 514, 983, 369, 984, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 1157,
	378, 379, 516, 380, 517, 381, 1158, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 1159,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 1160, 405, 985, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 1161, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 1162, 432, 412, 413, 433, 434, 986,
	435, 436, 520, 437, 438, 1163, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 1164, 450,
	451, 449, 1165, 452, 453, 454, 455, 456, 282, 457,
	1166, 458, 522, 523, 524, 525, 1167, 465, 1168, 459,
	460, 526, 461, 527, 1169, 462, 463, 464, 0, 466,
	467, 1170, 1171, 468, 469, 470, 472, 473, 471, 475,
	1172, 476, 1173, 474, 477, 478, 479, 528, 529, 530,
	1174, 481, 480, 531, 1175, 1176, 1177, 1178, 482, 483,
	532, 484, 485, 486, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3408,
	0, 220, 221, 222, 223, 224, 1101, 225, 1102, 1103,
	1104, 0, 1105, 487, 1106, 1107, 1108, 1109, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 1110, 235, 236, 237, 238, 239, 240, 241, 1111,
	1112, 242, 492, 493, 494, 1113, 243, 495, 1114, 1099,
	1115, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 1116, 254, 0, 255, 256, 257, 1117, 258,
	971, 259, 260, 1118, 1119, 1121, 1120, 1122, 1123, 1124,
	261, 262, 263, 264, 265, 266, 496, 497, 1125, 267,
	1126, 269, 268, 1127, 270, 1128, 1129, 271, 272, 273,
	1130, 274, 1131, 275, 276, 1132, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 1133,
	217, 1134, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 1135, 294, 1136, 1137, 972, 295,
	296, 1138, 297, 502, 1139, 503, 298, 1140, 299, 300,
	301, 302, 504, 505, 506, 357, 974, 303, 304, 1141,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 1142,
	973, 310, 507, 312, 311, 313, 314, 315, 508, 1143,
	509, 1144, 317, 975, 510, 976, 318, 319, 320, 977,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 1145,
	329, 328, 1146, 330, 511, 978, 331, 332, 979, 1147,
	333, 334, 1148, 1149, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 980,
	349, 350, 353, 354, 352, 981, 351, 1150, 219, 982,
	355, 1151, 512, 356, 513, 358, 359, 1152, 360, 361,
	362, 1153, 1154, 364, 365, 366, 1155, 1156, 367, 368,
	514, 983, 369, 984, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 1157, 378, 379, 516, 380, 517,
	381, 1158, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 1159, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 1160,
	405, 985, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 1161, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 1162, 432,
	412, 413, 433, 434, 986, 435, 436, 520, 437, 438,
	1163, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 1164, 450, 451, 449, 1165, 452, 453,
	454, 455, 456, 282, 457, 1166, 458, 522, 523, 524,
	525, 1167, 465, 1168, 459, 460, 526, 461, 527, 1169,
	462, 463, 464, 0, 466, 467, 1170, 1171, 468, 469,
	470, 472, 473, 471, 475, 1172, 476, 1173, 474, 477,
	478, 479, 528, 529, 530, 1174, 481, 480, 531, 1175,
	1176, 1177, 1178, 482, 483, 532, 484, 485, 486, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3333, 0, 220, 221, 222, 223,
	224, 1101, 225, 1102, 1103, 1104, 0, 1105, 487, 1106,
	1107, 1108, 1109, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 1110, 235, 236, 237,
	238, 239, 240, 241, 1111, 1112, 242, 492, 493, 494,
	1113, 243, 495, 1114, 1099, 1115, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1116, 254, 0,
	255, 256, 257, 1117, 258, 971, 259, 260, 1118, 1119,
	1121, 1120, 1122, 1123, 1124, 261, 262, 263, 264, 265,
	266, 496, 497, 1125, 267, 1126, 269, 268, 1127, 270,
	1128, 1129, 271, 272, 273, 1130, 274, 1131, 275, 276,
	1132, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 1133, 217, 1134, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 1135,
	294, 1136, 1137, 972, 295, 296, 1138, 297, 502, 1139,
	503, 298, 1140, 299, 300, 301, 302, 504, 505, 506,
	357, 974, 303, 304, 1141, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1142, 973, 310, 507, 312, 311,
	313, 314, 315, 508, 1143, 509, 1144, 317, 975, 510,
	976, 318, 319, 320, 977, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1145, 329, 328, 1146, 330, 511,
	978, 331, 332, 979, 1147, 333, 334, 1148, 1149, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 1150, 219, 982, 355, 1151, 512, 356, 513,
	358, 359, 1152, 360, 361, 362, 1153, 1154, 364, 365,
	366, 1155, 1156, 367, 368, 514, 983, 369, 984, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 1157,
	378, 379, 516, 380, 517, 381, 1158, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 1159,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 1160, 405, 985, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 1161, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 1162, 432, 412, 413, 433, 434, 986,
	435, 436, 520, 437, 438, 1163, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 1164, 450,
	451, 449, 1165, 452, 453, 454, 455, 456, 282, 457,
	1166, 458, 522, 523, 524, 525, 1167, 465, 1168, 459,
	460, 526, 461, 527, 1169, 462, 463, 464, 0, 466,
	467, 1170, 1171, 468, 469, 470, 472, 473, 471, 475,
	1172, 476, 1173, 474, 477, 478, 479, 528, 529, 530,
	1174, 481, 480, 531, 1175, 1176, 1177, 1178, 482, 483,
	532, 484, 485, 486, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3214,
	0, 220, 221, 222, 223, 224, 1101, 225, 1102, 1103,
	1104, 0, 1105, 487, 1106, 1107, 1108, 1109, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 1110, 235, 236, 237, 238, 239, 240, 241, 1111,
	1112, 242, 492, 493, 494, 1113, 243, 495, 1114, 1099,
	1115, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 1116, 254, 0, 255, 256, 257, 1117, 258,
	971, 259, 260, 1118, 1119, 1121, 1120, 1122, 1123, 1124,
	261, 262, 263, 264, 265, 266, 496, 497, 1125, 267,
	1126, 269, 268, 1127, 270, 1128, 1129, 271, 272, 273,
	1130, 274, 1131, 275, 276, 1132, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 1133,
	217, 1134, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 1135, 294, 1136, 1137, 972, 295,
	296, 1138, 297, 502, 1139, 503, 298, 1140, 299, 300,
	301, 302, 504, 505, 506, 357, 974, 303, 304, 1141,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 1142,
	973, 310, 507, 312, 311, 313, 314, 315, 508, 1143,
	509, 1144, 317, 975, 510, 976, 318, 319, 320, 977,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 1145,
	329, 328, 1146, 330, 511, 978, 331, 332, 979, 1147,
	333, 334, 1148, 1149, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 980,
	349, 350, 353, 354, 352, 981, 351, 1150, 219, 982,
	355, 1151, 512, 356, 513, 358, 359, 1152, 360, 361,
	362, 1153, 1154, 364, 365, 366, 1155, 1156, 367, 368,
	514, 983, 369, 984, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 1157, 378, 379, 516, 380, 517,
	381, 1158, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 1159, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 1160,
	405, 985, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 1161, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 1162, 432,
	412, 413, 433, 434, 986, 435, 436, 520, 437, 438,
	1163, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 1164, 450, 451, 449, 1165, 452, 453,
	454, 455, 456, 282, 457, 1166, 458, 522, 523, 524,
	525, 1167, 465, 1168, 459, 460, 526, 461, 527, 1169,
	462, 463, 464, 0, 466, 467, 1170, 1171, 468, 469,
	470, 472, 473, 471, 475, 1172, 476, 1173, 474, 477,
	478, 479, 528, 529, 530, 1174, 481, 480, 531, 1175,
	1176, 1177, 1178, 482, 483, 532, 484, 485, 486, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3006, 0, 220, 221, 222, 223,
	224, 1101, 225, 1102, 1103, 1104, 0, 1105, 487, 1106,
	1107, 1108, 1109, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 1110, 235, 236, 237,
	238, 239, 240, 241, 1111, 1112, 242, 492, 493, 494,
	1113, 243, 495, 1114, 1099, 1115, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1116, 254, 0,
	255, 256, 257, 1117, 258, 971, 259, 260, 1118, 1119,
	1121, 1120, 1122, 1123, 1124, 261, 262, 263, 264, 265,
	266, 496, 497, 1125, 267, 1126, 269, 268, 1127, 270,
	1128, 1129, 271, 272, 273, 1130, 274, 1131, 275, 276,
	1132, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 1133, 217, 1134, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 1135,
	294, 1136, 1137, 972, 295, 296, 1138, 297, 502, 1139,
	503, 298, 1140, 299, 300, 301, 302, 504, 505, 506,
	357, 974, 303, 304, 1141, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1142, 973, 310, 507, 312, 311,
	313, 314, 315, 508, 1143, 509, 1144, 317, 975, 510,
	976, 318, 319, 320, 977, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1145, 329, 328, 1146, 330, 511,
	978, 331, 332, 979, 1147, 333, 334, 1148, 1149, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 1150, 219, 982, 355, 1151, 512, 356, 513,
	358, 359, 1152, 360, 361, 362, 1153, 1154, 364, 365,
	366, 1155, 1156, 367, 368, 514, 983, 369, 984, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 1157,
	378, 379, 516, 380, 517, 381, 1158, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 1159,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 1160, 405, 985, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 1161, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 1162, 432, 412, 413, 433, 434, 986,
	435, 436, 520, 437, 438, 1163, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 1164, 450,
	451, 449, 1165, 452, 453, 454, 455, 456, 282, 457,
	1166, 458, 522, 523, 524, 525, 1167, 465, 1168, 459,
	460, 526, 461, 527, 1169, 462, 463, 464, 0, 466,
	467, 1170, 1171, 468, 469, 470, 472, 473, 471, 475,
	1172, 476, 1173, 474, 477, 478, 479, 528, 529, 530,
	1174, 481, 480, 531, 1175, 1176, 1177, 1178, 482, 483,
	532, 484, 485, 486, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2857,
	0, 220, 221, 222, 223, 224, 1101, 225, 1102, 1103,
	1104, 0, 1105, 487, 1106, 1107, 1108, 1109, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 1110, 235, 236, 237, 238, 239, 240, 241, 1111,
	1112, 242, 492, 493, 494, 1113, 243, 495, 1114, 1099,
	1115, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 1116, 254, 0, 255, 256, 257, 1117, 258,
	971, 259, 260, 1118, 1119, 1121, 1120, 1122, 1123, 1124,
	261, 262, 263, 264, 265, 266, 496, 497, 1125, 267,
	1126, 269, 268, 1127, 270, 1128, 1129, 271, 272, 273,
	1130, 274, 1131, 275, 276, 1132, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 1133,
	217, 1134, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 1135, 294, 1136, 1137, 972, 295,
	296, 1138, 297, 502, 1139, 503, 298, 1140, 299, 300,
	301, 302, 504, 505, 506, 357, 974, 303, 304, 1141,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 1142,
	973, 310, 507, 312, 311, 313, 314, 315, 508, 1143,
	509, 1144, 317, 975, 510, 976, 318, 319, 320, 977,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 1145,
	329, 328, 1146, 330, 511, 978, 331, 332, 979, 1147,
	333, 334, 1148, 1149, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 980,
	349, 350, 353, 354, 352, 981, 351, 1150, 219, 982,
	355, 1151, 512, 356, 513, 358, 359, 1152, 360, 361,
	362, 1153, 1154, 364, 365, 366, 1155, 1156, 367, 368,
	514, 983, 369, 984, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 1157, 378, 379, 516, 380, 517,
	381, 1158, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 1159, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 1160,
	405, 985, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 1161, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 1162, 432,
	412, 413, 433, 434, 986, 435, 436, 520, 437, 438,
	1163, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 1164, 450, 451, 449, 1165, 452, 453,
	454, 455, 456, 282, 457, 1166, 458, 522, 523, 524,
	525, 1167, 465, 1168, 459, 460, 526, 461, 527, 1169,
	462, 463, 464, 0, 466, 467, 1170, 1171, 468, 469,
	470, 472, 473, 471, 475, 1172, 476, 1173, 474, 477,
	478, 479, 528, 529, 530, 1174, 481, 480, 531, 1175,
	1176, 1177, 1178, 482, 483, 532, 484, 485, 486, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2156, 0, 220, 221, 222, 223,
	224, 1101, 225, 1102, 1103, 1104, 0, 1105, 487, 1106,
	1107, 1108, 1109, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 1110, 235, 236, 237,
	238, 239, 240, 241, 1111, 1112, 242, 492, 493, 494,
	1113, 243, 495, 1114, 1099, 1115, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1116, 254, 0,
	255, 256, 257, 1117, 258, 971, 259, 260, 1118, 1119,
	1121, 1120, 1122, 1123, 1124, 261, 262, 263, 264, 265,
	266, 496, 497, 1125, 267, 1126, 269, 268, 1127, 270,
	1128, 1129, 271, 272, 273, 1130, 274, 1131, 275, 276,
	1132, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 1133, 217, 1134, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 1135,
	294, 1136, 1137, 972, 295, 296, 1138, 297, 502, 1139,
	503, 298, 1140, 299, 300, 301, 302, 504, 505, 506,
	357, 974, 303, 304, 1141, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1142, 973, 310, 507, 312, 311,
	313, 314, 315, 508, 1143, 509, 1144, 317, 975, 510,
	976, 318, 319, 320, 977, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1145, 329, 328, 1146, 330, 511,
	978, 331, 332, 979, 1147, 333, 334, 1148, 1149, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 1150, 219, 982, 355, 1151, 512, 356, 513,
	358, 359, 1152, 360, 361, 362, 1153, 1154, 364, 365,
	366, 1155, 1156, 367, 368, 514, 983, 369, 984, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 1157,
	378, 379, 516, 380, 517, 381, 1158, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 1159,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 1160, 405, 985, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 1161, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 1162, 432, 412, 413, 433, 434, 986,
	435, 436, 520, 437, 438, 1163, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 1164, 450,
	451, 449, 1165, 452, 453, 454, 455, 456, 282, 457,
	1166, 458, 522, 523, 524, 525, 1167, 465, 1168, 459,
	460, 526, 461, 527, 1169, 462, 463, 464, 0, 466,
	467, 1170, 1171, 468, 469, 470, 472, 473, 471, 475,
	1172, 476, 1173, 474, 477, 478, 479, 528, 529, 530,
	1174, 481, 480, 531, 1175, 1176, 1177, 1178, 482, 483,
	532, 484, 485, 486, 1191, 0, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 220, 221, 222, 223, 224, 1101, 225,
	1102, 1103, 1104, 0, 1105, 487, 1106, 1107, 1108, 1109,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 1110, 235, 236, 237, 238, 239, 240,
	241, 1111, 1112, 242, 492, 493, 494, 1113, 243, 495,
	1114, 1099, 1115, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 1116, 254, 0, 255, 256, 257,
	1117, 258, 971, 259, 260, 1118, 1119, 1121, 1120, 1122,
	1123, 1124, 261, 262, 263, 264, 265, 266, 496, 497,
	1125, 267, 1126, 269, 268, 1127, 270, 1128, 1129, 271,
	272, 273, 1130, 274, 1131, 275, 276, 1132, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 1133, 217, 1134, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 1135, 294, 1136, 1137,
	972, 295, 296, 1138, 297, 502, 1139, 503, 298, 1140,
	299, 300, 301, 302, 504, 505, 506, 357, 974, 303,
	304, 1141, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 1142, 973, 310, 507, 312, 311, 313, 314, 315,
	508, 1143, 509, 1144, 317, 975, 510, 976, 318, 319,
	320, 977, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 1145, 329, 328, 1146, 330, 511, 978, 331, 332,
	979, 1147, 333, 334, 1148, 1149, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 980, 349, 350, 353, 354, 352, 981, 351, 1150,
	219, 982, 355, 1151, 512, 356, 513, 358, 359, 1152,
	360, 361, 362, 1153, 1154, 364, 365, 366, 1155, 1156,
	367, 368, 514, 983, 369, 984, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 1157, 378, 379, 516,
	380, 517, 381, 1158, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 1159, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 1160, 405, 985, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 1161,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	1162, 432, 412, 413, 433, 434, 986, 435, 436, 520,
	437, 438, 1163, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 1164, 450, 451, 449, 1165,
	452, 453, 454, 455, 456, 282, 457, 1166, 458, 522,
	523, 524, 525, 1167, 465, 1168, 459, 460, 526, 461,
	527, 1169, 462, 463, 464, 0, 466, 467, 1170, 1171,
	468, 469, 470, 472, 473, 471, 475, 1172, 476, 1173,
	474, 477, 478, 479, 528, 529, 530, 1174, 481, 480,
	531, 1175, 1176, 1177, 1178, 482, 483, 532, 484, 485,
	486, 1091, 0, 1094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 1101, 225, 1102, 1103, 1104,
	0, 1105, 487, 1106, 1107, 1108, 1109, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	1110, 235, 236, 237, 238, 239, 240, 241, 1111, 1112,
	242, 492, 493, 494, 1113, 243, 495, 1114, 1099, 1115,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 1116, 254, 0, 255, 256, 257, 1117, 258, 971,
	259, 260, 1118, 1119, 1121, 1120, 1122, 1123, 1124, 261,
	262, 263, 264, 265, 266, 496, 497, 1125, 267, 1126,
	269, 268, 1127, 270, 1128, 1129, 271, 272, 273, 1130,
	274, 1131, 275, 276, 1132, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 1133, 217,
	1134, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 1135, 294, 1136, 1137, 972, 295, 296,
	1138, 297, 502, 1139, 503, 298, 1140, 299, 300, 301,
	302, 504, 505, 506, 357, 974, 303, 304, 1141, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 1142, 973,
	310, 507, 312, 311, 313, 314, 315, 508, 1143, 509,
	1144, 317, 975, 510, 976, 318, 319, 320, 977, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 1145, 329,
	328, 1146, 330, 511, 978, 331, 332, 979, 1147, 333,
	334, 1148, 1149, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 1150, 219, 982, 355,
	1151, 512, 356, 513, 358, 359, 1152, 360, 361, 362,
	1153, 1154, 364, 365, 366, 1155, 1156, 367, 368, 514,
	983, 369, 984, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 1157, 378, 379, 516, 380, 517, 381,
	1158, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 1159, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 1160, 405,
	985, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 1161, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 1162, 432, 412,
	413, 433, 434, 986, 435, 436, 520, 437, 438, 1163,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 1164, 450, 451, 449, 1165, 452, 453, 454,
	455, 456, 282, 457, 1166, 458, 522, 523, 524, 525,
	1167, 465, 1168, 459, 460, 526, 461, 527, 1169, 462,
	463, 464, 0, 466, 467, 1170, 1171, 468, 469, 470,
	472, 473, 471, 475, 1172, 476, 1173, 474, 477, 478,
	479, 528, 529, 530, 1174, 481, 480, 531, 1175, 1176,
	1177, 1178, 482, 483, 532, 484, 485, 486, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	1101, 225, 1102, 1103, 1104, 0, 1105, 487, 1106, 1107,
	1108, 1109, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 1110, 235, 236, 237, 238,
	239, 240, 241, 1111, 1112, 242, 492, 493, 494, 1113,
	243, 495, 1114, 1099, 1115, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 1116, 254, 0, 255,
	256, 257, 1117, 258, 971, 259, 260, 1118, 1119, 1121,
	1120, 1122, 1123, 1124, 261, 262, 263, 264, 265, 266,
	496, 497, 1125, 267, 1126, 269, 268, 1127, 270, 1128,
	1129, 271, 272, 273, 1130, 274, 1131, 275, 276, 1132,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 1133, 217, 1134, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 1135, 294,
	1136, 1137, 972, 295, 296, 1138, 297, 502, 1139, 503,
	298, 1140, 299, 300, 301, 302, 504, 505, 506, 357,
	974, 303, 304, 1141, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 1142, 973, 310, 507, 312, 311, 313,
	314, 315, 508, 1143, 509, 1144, 317, 975, 510, 976,
	318, 319, 320, 977, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 1145, 329, 328, 1146, 330, 511, 978,
	331, 332, 979, 1147, 333, 334, 1148, 1149, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 980, 349, 350, 353, 354, 352, 981,
	351, 1150, 219, 982, 355, 1151, 512, 356, 513, 358,
	359, 1152, 360, 361, 362, 1153, 1154, 364, 365, 366,
	1155, 1156, 367, 368, 514, 983, 369, 984, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 1157, 378,
	379, 516, 380, 517, 381, 1158, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 1159, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 1160, 405, 985, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 1161, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 1162, 432, 412, 413, 433, 434, 986, 435,
	436, 520, 437, 438, 1163, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 1164, 450, 451,
	449, 1165, 452, 453, 454, 455, 456, 282, 457, 1166,
	458, 522, 523, 524, 525, 1167, 465, 1168, 459, 460,
	526, 461, 527, 1169, 462, 463, 464, 0, 466, 467,
	1170, 1171, 468, 469, 470, 472, 473, 471, 475, 1172,
	476, 1173, 474, 477, 478, 479, 528, 529, 530, 1174,
	481, 480, 531, 1175, 1176, 1177, 1178, 482, 483, 532,
	484, 485, 486, 2131, 0, 911, 869, 870, 871, 867,
	868, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 2128, 225, 0,
	0, 0, 0, 0, 962, 885, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 926, 905, 937, 234, 895,
	936, 935, 0, 235, 236, 897, 896, 239, 240, 241,
	887, 961, 242, 998, 999, 494, 0, 243, 968, 0,
	949, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 971, 259, 260, 952, 950, 951, 958, 954, 953,
	957, 261, 262, 263, 264, 940, 266, 933, 932, 858,
	267, 0, 269, 268, 0, 270, 2129, 0, 271, 931,
	273, 0, 274, 0, 275, 276, 0, 277, 864, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 989, 990,
	876, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	930, 928, 929, 0, 293, 0, 294, 0, 0, 972,
	295, 296, 0, 297, 996, 0, 886, 298, 0, 299,
	300, 301, 302, 963, 964, 967, 357, 974, 303, 304,
	0, 305, 306, 907, 0, 0, 218, 307, 309, 316,
	0, 973, 310, 919, 910, 921, 923, 924, 925, 920,
	0, 912, 0, 317, 975, 965, 976, 318, 319, 320,
	977, 945, 946, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 997, 978, 331, 332, 979,
	0, 333, 334, 956, 955, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 899, 346,
	980, 349, 350, 353, 354, 352, 981, 351, 855, 219,
	982, 355, 877, 966, 356, 934, 358, 359, 0, 908,
	361, 909, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 983, 369, 984, 991, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 992, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 927, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 985, 406, 407, 408, 409, 865, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 900, 901, 903, 904, 423, 429, 430, 431, 959,
	432, 412, 413, 433, 434, 986, 435, 436, 922, 902,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 970,
	444, 445, 446, 993, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 898, 0, 458, 941, 942,
	943, 944, 0, 465, 0, 459, 460, 994, 461, 995,
	875, 462, 463, 464, 0, 466, 467, 0, 859, 468,
	469, 470, 472, 473, 471, 475, 960, 476, 0, 906,
	477, 478, 479, 528, 938, 988, 2127, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	856, 0, 0, 0, 0, 0, 854, 0, 0, 0,
	0, 0, 0, 852, 853, 2130, 0, 0, 0, 0,
	0, 0, 881, 2126, 0, 845, 879, 911, 869, 870,
	871, 867, 868, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 0, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	183, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	185, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 0, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 1349, 938, 988, 0, 481,
	480, 531, 0, 0, 0, 177, 482, 483, 532, 484,
	485, 486, 856, 178, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 911, 869, 870,
	871, 867, 868, 880, 1560, 1558, 0, 0, 879, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 0, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	183, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	185, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 0, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 1349, 938, 988, 0, 481,
	480, 531, 0, 0, 0, 177, 482, 483, 532, 484,
	485, 486, 856, 178, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 911, 869, 870,
	871, 867, 868, 880, 1560, 2603, 0, 0, 879, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 0, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	183, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	185, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 0, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 1349, 938, 988, 0, 481,
	480, 531, 0, 0, 0, 177, 482, 483, 532, 484,
	485, 486, 856, 178, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 911, 869, 870,
	871, 867, 868, 880, 1560, 1558, 0, 0, 879, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 2225, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	2230, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 2226, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 2227, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 528, 938, 988, 0, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 856, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 2184, 879, 911,
	869, 870, 871, 867, 868, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 963, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 219, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 0,
	0, 0, 0, 0, 0, 0, 881, 2182, 0, 2181,
	879, 911, 869, 870, 871, 867, 868, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 963,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 218, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 0, 0, 0, 0, 0, 0, 0, 881, 2179,
	0, 2178, 879, 911, 869, 870, 871, 867, 868, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 0, 0, 0, 0, 0, 0, 0,
	881, 2176, 0, 2175, 879, 911, 869, 870, 871, 867,
	868, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 962, 885, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 926, 905, 937, 234, 895,
	936, 935, 0, 235, 236, 897, 896, 239, 240, 241,
	887, 961, 242, 998, 999, 494, 0, 243, 968, 0,
	949, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 971, 259, 260, 952, 950, 951, 958, 954, 953,
	957, 261, 262, 263, 264, 940, 266, 933, 932, 858,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 931,
	273, 0, 274, 0, 275, 276, 0, 277, 864, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 989, 990,
	876, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	930, 928, 929, 0, 293, 0, 294, 0, 0, 972,
	295, 296, 0, 297, 996, 0, 886, 298, 0, 299,
	300, 301, 302, 963, 964, 967, 357, 974, 303, 304,
	0, 305, 306, 907, 0, 0, 218, 307, 309, 316,
	0, 973, 310, 919, 910, 921, 923, 924, 925, 920,
	0, 912, 0, 317, 975, 965, 976, 318, 319, 320,
	977, 945, 946, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 997, 978, 331, 332, 979,
	0, 333, 334, 956, 955, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 899, 346,
	980, 349, 350, 353, 354, 352, 981, 351, 855, 219,
	982, 355, 877, 966, 356, 934, 358, 359, 0, 908,
	361, 909, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 983, 369, 984, 991, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 992, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 927, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 985, 406, 407, 408, 409, 865, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 900, 901, 903, 904, 423, 429, 430, 431, 959,
	432, 412, 413, 433, 434, 986, 435, 436, 922, 902,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 970,
	444, 445, 446, 993, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 898, 0, 458, 941, 942,
	943, 944, 0, 465, 0, 459, 460, 994, 461, 995,
	875, 462, 463, 464, 0, 466, 467, 0, 859, 468,
	469, 470, 472, 473, 471, 475, 960, 476, 0, 906,
	477, 478, 479, 528, 938, 988, 0, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	856, 0, 0, 0, 0, 0, 854, 0, 0, 0,
	0, 0, 0, 852, 853, 0, 0, 0, 0, 0,
	0, 0, 881, 2173, 0, 1419, 879, 911, 869, 870,
	871, 867, 868, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 0, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 0, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 528, 938, 988, 0, 481,
	480, 531, 1418, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 856, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 848, 879, 911,
	869, 870, 871, 867, 868, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 963, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 219, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 860, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 911,
	869, 870, 871, 867, 868, 880, 881, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 3630, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 963, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 219, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 860, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 911,
	869, 870, 871, 867, 868, 880, 881, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 3466, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 963, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 219, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 860, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 911,
	869, 870, 871, 867, 868, 880, 881, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 963, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 3184, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 1624,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	879, 911, 869, 870, 871, 867, 868, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 963,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 218, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 2984, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 911, 869, 870, 871, 867, 868, 880, 881, 0,
	0, 0, 879, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 963,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 2045, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 2044, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 911, 869, 870, 871, 867, 868, 880, 881, 0,
	0, 0, 879, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 963,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 218, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 860, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 911, 869, 870, 871, 867, 868, 880, 881, 0,
	0, 0, 879, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 963,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 218, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 1624, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 0, 879, 911, 869, 870, 871, 867, 868, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 2230, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 0, 0, 0, 0, 0, 0, 0,
	881, 1558, 0, 2235, 879, 911, 869, 870, 871, 867,
	868, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 962, 885, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 926, 905, 937, 234, 895,
	936, 935, 0, 235, 236, 897, 896, 239, 240, 241,
	887, 961, 242, 998, 999, 494, 0, 243, 968, 0,
	949, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 971, 259, 260, 952, 950, 951, 958, 954, 953,
	957, 261, 262, 263, 264, 940, 266, 933, 932, 858,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 931,
	273, 0, 274, 0, 275, 276, 0, 277, 864, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 989, 990,
	876, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	930, 928, 929, 0, 293, 0, 294, 0, 0, 972,
	295, 296, 0, 297, 996, 0, 886, 298, 0, 299,
	300, 301, 302, 963, 964, 967, 357, 974, 303, 304,
	0, 305, 306, 907, 0, 0, 218, 307, 309, 316,
	0, 973, 310, 919, 910, 921, 923, 924, 925, 920,
	0, 912, 0, 317, 975, 965, 976, 318, 319, 320,
	977, 945, 946, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 997, 978, 331, 332, 979,
	0, 333, 334, 956, 955, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 899, 346,
	980, 349, 350, 353, 354, 352, 981, 351, 855, 219,
	982, 355, 877, 966, 356, 934, 358, 359, 0, 908,
	361, 909, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 983, 369, 984, 991, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 992, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 927, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 985, 406, 407, 408, 409, 865, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 900, 901, 903, 904, 423, 429, 430, 431, 959,
	432, 412, 413, 433, 434, 986, 435, 436, 922, 902,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 970,
	444, 445, 446, 993, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 898, 0, 458, 941, 942,
	943, 944, 0, 465, 0, 459, 460, 994, 461, 995,
	875, 462, 463, 464, 0, 466, 467, 0, 859, 468,
	469, 470, 472, 473, 471, 475, 960, 476, 0, 906,
	477, 478, 479, 528, 938, 988, 0, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	856, 0, 0, 0, 0, 0, 854, 0, 0, 0,
	0, 0, 0, 852, 853, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 2233, 879, 911, 869, 870,
	871, 867, 868, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 0, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 0, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 528, 938, 988, 0, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 856, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 2221, 879, 911,
	869, 870, 871, 867, 868, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 963, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 219, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 2210,
	879, 911, 869, 870, 871, 867, 868, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 963,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 218, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 2208, 879, 2199, 2206, 870, 871, 867, 868, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 2202, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	2203, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 2204, 2201, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 2205, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 2200, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 0, 2196, 879, 2199, 2206, 870, 871, 867,
	868, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 962, 885, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 926, 905, 937, 234, 895,
	936, 935, 0, 235, 236, 897, 896, 239, 240, 241,
	887, 961, 242, 998, 999, 494, 0, 243, 968, 0,
	949, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 971, 259, 260, 952, 950, 951, 958, 954, 953,
	957, 261, 262, 263, 264, 940, 2202, 933, 932, 858,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 931,
	273, 0, 274, 0, 275, 276, 0, 277, 864, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 989, 990,
	876, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	930, 928, 929, 0, 293, 0, 294, 0, 0, 972,
	295, 296, 0, 297, 996, 0, 886, 298, 0, 299,
	300, 301, 2203, 963, 964, 967, 357, 974, 303, 304,
	0, 305, 306, 907, 0, 0, 218, 307, 309, 316,
	0, 973, 310, 919, 910, 921, 923, 924, 925, 920,
	0, 912, 0, 317, 975, 965, 976, 318, 319, 320,
	977, 945, 946, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 997, 978, 331, 332, 979,
	0, 333, 334, 956, 955, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 2204, 2201, 347, 899, 346,
	980, 349, 350, 353, 354, 352, 981, 351, 855, 219,
	982, 355, 877, 966, 356, 934, 358, 359, 0, 908,
	361, 909, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 983, 369, 984, 991, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 992, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 927, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 985, 406, 407, 408, 409, 865, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 2205, 0, 427,
	428, 900, 901, 903, 904, 423, 429, 430, 431, 959,
	432, 412, 413, 433, 434, 986, 435, 436, 922, 902,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 970,
	444, 445, 446, 993, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 898, 0, 458, 941, 942,
	943, 944, 0, 465, 0, 459, 460, 994, 461, 995,
	875, 462, 463, 464, 0, 466, 467, 0, 859, 468,
	469, 470, 472, 473, 471, 475, 960, 476, 0, 906,
	477, 478, 479, 528, 938, 988, 0, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 2200, 486,
	856, 0, 0, 0, 0, 0, 854, 0, 0, 0,
	0, 0, 0, 852, 853, 911, 869, 870, 871, 867,
	868, 880, 881, 0, 0, 0, 879, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 962, 885, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 926, 905, 937, 234, 895,
	936, 935, 0, 235, 236, 897, 896, 239, 240, 241,
	887, 961, 242, 998, 999, 494, 0, 243, 968, 0,
	949, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 971, 259, 260, 952, 950, 951, 958, 954, 953,
	957, 261, 262, 263, 264, 940, 266, 933, 932, 858,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 931,
	273, 0, 274, 0, 275, 276, 0, 277, 864, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 989, 990,
	876, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	930, 928, 929, 0, 293, 0, 294, 0, 0, 972,
	295, 296, 0, 297, 996, 0, 886, 298, 0, 299,
	300, 301, 302, 963, 964, 967, 357, 974, 303, 304,
	0, 305, 306, 907, 0, 0, 218, 307, 309, 316,
	0, 973, 310, 919, 910, 921, 923, 924, 925, 920,
	0, 912, 0, 317, 975, 965, 976, 318, 319, 320,
	977, 945, 946, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 997, 978, 331, 332, 979,
	0, 333, 334, 956, 955, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 899, 346,
	980, 349, 350, 353, 354, 352, 981, 351, 855, 219,
	982, 355, 877, 966, 356, 934, 358, 359, 0, 908,
	361, 909, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 983, 369, 984, 991, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 992, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 927, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 985, 406, 407, 408, 409, 865, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 900, 901, 903, 904, 423, 429, 430, 431, 959,
	432, 412, 413, 433, 434, 986, 435, 436, 922, 902,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 970,
	444, 445, 446, 993, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 898, 0, 458, 941, 942,
	943, 944, 0, 465, 0, 459, 460, 994, 461, 995,
	875, 462, 463, 464, 0, 466, 467, 0, 859, 468,
	469, 470, 472, 473, 471, 475, 960, 476, 0, 906,
	477, 478, 479, 528, 938, 988, 0, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	856, 0, 0, 0, 0, 0, 854, 0, 0, 0,
	0, 0, 0, 852, 853, 0, 0, 0, 0, 0,
	1566, 0, 881, 0, 0, 0, 879, 911, 869, 870,
	871, 867, 868, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 2024,
	225, 0, 0, 0, 0, 0, 962, 885, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 926, 905, 937,
	234, 895, 936, 935, 0, 235, 236, 897, 896, 239,
	240, 241, 887, 961, 242, 998, 999, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 940, 266, 933,
	932, 858, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 931, 273, 0, 274, 0, 275, 276, 0, 277,
	864, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 876, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 930, 928, 929, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 886, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 907, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 919, 910, 921, 923, 924,
	925, 920, 0, 912, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 945, 946, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	899, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	855, 219, 982, 355, 877, 966, 356, 934, 358, 359,
	0, 908, 361, 909, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 927, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 865,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 900, 901, 903, 904, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	922, 902, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 970, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 898, 0, 458,
	941, 942, 943, 944, 0, 465, 0, 459, 460, 994,
	461, 995, 875, 462, 463, 464, 0, 466, 467, 0,
	859, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 906, 477, 478, 479, 528, 938, 988, 0, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 856, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 852, 853, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 1237, 879, 911,
	869, 870, 871, 867, 868, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 962, 885,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 926,
	905, 937, 234, 895, 936, 935, 0, 235, 236, 897,
	896, 239, 240, 241, 887, 961, 242, 998, 999, 494,
	0, 243, 968, 0, 949, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 971, 259, 260, 952, 950,
	951, 958, 954, 953, 957, 261, 262, 263, 264, 940,
	266, 933, 932, 858, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 931, 273, 0, 274, 0, 275, 276,
	0, 277, 864, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 989, 990, 876, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 930, 928, 929, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 996, 0,
	886, 298, 0, 299, 300, 301, 302, 1236, 964, 967,
	357, 974, 303, 304, 0, 305, 306, 907, 0, 0,
	218, 307, 309, 316, 0, 973, 310, 919, 910, 921,
	923, 924, 925, 920, 0, 912, 0, 317, 975, 965,
	976, 318, 319, 320, 977, 945, 946, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 997,
	978, 331, 332, 979, 0, 333, 334, 956, 955, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 899, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 855, 219, 982, 355, 877, 966, 356, 934,
	358, 359, 0, 908, 361, 909, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 991,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 992, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 927, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 865, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 900, 901, 903, 904, 423,
	429, 430, 431, 959, 432, 412, 413, 433, 434, 986,
	435, 436, 922, 902, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 970, 444, 445, 446, 993, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 898,
	0, 458, 941, 942, 943, 944, 0, 465, 0, 459,
	460, 994, 461, 995, 875, 462, 463, 464, 0, 466,
	467, 0, 859, 468, 469, 470, 472, 473, 471, 475,
	960, 476, 0, 906, 477, 478, 479, 528, 938, 988,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 856, 0, 0, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 852, 853, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 1231,
	879, 911, 869, 870, 871, 867, 868, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	962, 885, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 926, 905, 937, 234, 895, 936, 935, 0, 235,
	236, 897, 896, 239, 240, 241, 887, 961, 242, 998,
	999, 494, 0, 243, 968, 0, 949, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	952, 950, 951, 958, 954, 953, 957, 261, 262, 263,
	264, 940, 266, 933, 932, 858, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 931, 273, 0, 274, 0,
	275, 276, 0, 277, 864, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 989, 990, 876, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 930, 928, 929, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	996, 0, 886, 298, 0, 299, 300, 301, 302, 1230,
	964, 967, 357, 974, 303, 304, 0, 305, 306, 907,
	0, 0, 218, 307, 309, 316, 0, 973, 310, 919,
	910, 921, 923, 924, 925, 920, 0, 912, 0, 317,
	975, 965, 976, 318, 319, 320, 977, 945, 946, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 997, 978, 331, 332, 979, 0, 333, 334, 956,
	955, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 899, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 855, 219, 982, 355, 877, 966,
	356, 934, 358, 359, 0, 908, 361, 909, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 991, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 992, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 927, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 865, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 900, 901, 903,
	904, 423, 429, 430, 431, 959, 432, 412, 413, 433,
	434, 986, 435, 436, 922, 902, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 970, 444, 445, 446, 993,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 898, 0, 458, 941, 942, 943, 944, 0, 465,
	0, 459, 460, 994, 461, 995, 875, 462, 463, 464,
	0, 466, 467, 0, 859, 468, 469, 470, 472, 473,
	471, 475, 960, 476, 0, 906, 477, 478, 479, 528,
	938, 988, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 856, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 852,
	853, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 1226, 879, 911, 869, 870, 871, 867, 868, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 3660, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 3659, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 3658, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 3660, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 3659, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 2570, 2571, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 2568, 2569, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 852, 853, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 856, 0,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 2032, 2033, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 0, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 2218, 0, 0, 0, 0, 0,
	0, 2216, 2217, 911, 869, 870, 871, 867, 868, 880,
	881, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 0, 219, 982, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 2563, 2564, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 911, 869,
	870, 871, 867, 868, 880, 0, 0, 0, 0, 0,
	0, 1778, 1779, 0, 0, 220, 221, 222, 223, 224,
	881, 225, 0, 0, 879, 0, 0, 962, 885, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 926, 905,
	937, 234, 895, 936, 935, 0, 235, 236, 897, 896,
	239, 240, 241, 0, 961, 242, 998, 999, 494, 0,
	243, 968, 0, 949, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 971, 259, 260, 952, 950, 951,
	958, 954, 953, 957, 261, 262, 263, 264, 940, 266,
	933, 932, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 931, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 989, 990, 876, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 930, 928, 929, 0, 293, 0, 294,
	0, 0, 972, 295, 296, 0, 297, 996, 0, 886,
	298, 0, 299, 300, 301, 302, 963, 964, 967, 357,
	974, 303, 304, 0, 305, 306, 907, 0, 0, 218,
	307, 309, 316, 0, 973, 310, 919, 910, 921, 923,
	924, 925, 920, 0, 912, 0, 317, 975, 965, 976,
	318, 319, 320, 977, 945, 946, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 997, 978,
	331, 332, 979, 0, 333, 334, 956, 955, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 899, 346, 980, 349, 350, 353, 354, 352, 981,
	351, 0, 219, 982, 355, 877, 966, 356, 934, 358,
	359, 0, 908, 361, 909, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 983, 369, 984, 991, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 992, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 927, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 985, 406, 407, 408, 409,
	865, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 900, 901, 903, 904, 423, 429,
	430, 431, 959, 432, 412, 413, 433, 434, 986, 435,
	436, 922, 902, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 970, 444, 445, 446, 993, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 898, 0,
	458, 941, 942, 943, 944, 0, 465, 0, 459, 460,
	994, 461, 995, 875, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 960,
	476, 0, 906, 477, 478, 479, 528, 938, 988, 0,
	481, 480, 531, 0, 0, 0, 0, 482, 483, 532,
	484, 485, 486, 911, 869, 870, 871, 867, 868, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 881, 225, 0, 0, 879,
	0, 0, 962, 885, 0, 0, 0, 226, 228, 227,
	229, 230, 0, 926, 905, 937, 234, 895, 936, 935,
	0, 235, 236, 897, 896, 239, 240, 241, 887, 961,
	242, 998, 999, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 3660, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 940, 266, 933, 932, 858, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 931, 273, 0,
	274, 0, 275, 276, 0, 277, 864, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 876, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 930, 928,
	929, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 886, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 0, 303, 304, 0, 305,
	306, 907, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 919, 910, 921, 923, 924, 925, 920, 0, 912,
	0, 317, 0, 965, 0, 318, 319, 320, 977, 945,
	946, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 997, 978, 331, 332, 0, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 899, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 855, 219, 0, 355,
	877, 966, 356, 934, 358, 359, 0, 908, 361, 909,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	927, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 865, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 900,
	901, 903, 904, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 0, 435, 436, 922, 902, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 970, 444, 445,
	446, 993, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 898, 0, 458, 941, 942, 943, 944,
	0, 465, 0, 459, 460, 994, 461, 995, 875, 462,
	463, 464, 0, 3659, 467, 0, 859, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 906, 477, 478,
	479, 528, 938, 988, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 845, 0, 1036, 0,
	0, 852, 853, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 0, 0, 879, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 962, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 961, 242, 492, 493, 494, 0,
	243, 968, 0, 949, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 971, 259, 260, 952, 950, 951,
	958, 954, 953, 957, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 989, 990, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 972, 295, 296, 0, 297, 996, 0, 503,
	298, 0, 299, 300, 301, 302, 963, 964, 967, 357,
	974, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 973, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 975, 965, 976,
	318, 319, 320, 977, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 1022, 329, 328, 0, 330, 997, 978,
	331, 332, 979, 0, 333, 334, 956, 955, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 980, 349, 350, 353, 354, 352, 981,
	351, 0, 219, 982, 355, 0, 966, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 1028, 364, 365, 366,
	0, 0, 367, 368, 514, 983, 369, 984, 991, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 992, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 985, 406, 407, 408, 409,
	519, 1030, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 183, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 959, 432, 412, 413, 433, 434, 986, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 993, 0, 450, 451,
	449, 185, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	994, 461, 995, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 960,
	476, 0, 474, 477, 478, 479, 1349, 529, 530, 0,
	481, 480, 531, 1036, 0, 0, 177, 482, 483, 532,
	484, 485, 486, 0, 178, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 962, 1026, 0, 1648, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 961,
	242, 492, 493, 494, 0, 243, 968, 0, 949, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 952, 950, 951, 958, 954, 953, 957, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 989, 990, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 996, 0, 503, 298, 0, 299, 300, 301,
	302, 963, 964, 967, 357, 974, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 973,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 975, 965, 976, 318, 319, 320, 977, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 1022, 329,
	328, 0, 330, 997, 978, 331, 332, 979, 0, 333,
	334, 956, 955, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 0, 219, 982, 355,
	0, 966, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 1028, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 991, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 992, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 519, 1030, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 183, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 959, 432, 412,
	413, 433, 434, 986, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 993, 0, 450, 451, 449, 185, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 994, 461, 995, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 960, 476, 0, 474, 477, 478,
	479, 1349, 529, 530, 0, 481, 480, 531, 2716, 0,
	1036, 177, 482, 483, 532, 484, 485, 486, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 1026, 962,
	1648, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 961, 242, 492, 493,
	494, 0, 243, 968, 0, 949, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 971, 259, 260, 952,
	950, 951, 958, 954, 953, 957, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 989, 990, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 972, 295, 296, 0, 297, 996,
	0, 503, 298, 0, 299, 300, 301, 302, 963, 964,
	967, 357, 974, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 973, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 975,
	965, 976, 318, 319, 320, 977, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 1022, 329, 328, 0, 330,
	997, 978, 331, 332, 979, 0, 333, 334, 956, 955,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 980, 349, 350, 353, 354,
	352, 981, 351, 0, 219, 982, 355, 0, 966, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 1028, 364,
	365, 366, 0, 0, 367, 368, 514, 983, 369, 984,
	991, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 992, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 985, 406, 407,
	408, 409, 519, 1030, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 959, 432, 412, 413, 433, 434,
	986, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 993, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 994, 461, 995, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 960, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 1018, 0, 1036, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 1026, 962, 1024, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 961, 242, 492, 493, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 503, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 1022, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	0, 219, 982, 355, 0, 966, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 1028, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 519,
	1030, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 994,
	461, 995, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 1036, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 962, 1026, 0, 1024, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 961, 242,
	492, 493, 494, 0, 243, 968, 0, 949, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 971, 259,
	260, 952, 950, 951, 958, 954, 953, 957, 261, 262,
	263, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 989, 990, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 972, 295, 296, 0,
	297, 996, 0, 503, 298, 0, 299, 300, 301, 302,
	963, 964, 967, 357, 974, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 973, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 975, 965, 976, 318, 319, 320, 977, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 1022, 329, 328,
	0, 330, 997, 978, 331, 332, 979, 0, 333, 334,
	956, 955, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 980, 349, 350,
	353, 354, 352, 981, 351, 0, 219, 982, 355, 0,
	966, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	1028, 364, 365, 366, 0, 0, 367, 368, 514, 983,
	369, 984, 991, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 992, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 985,
	406, 407, 408, 409, 519, 1030, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 959, 432, 412, 413,
	433, 434, 986, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	993, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 994, 461, 995, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 960, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 0, 481, 480, 531, 1036, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 1026, 0, 1024,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 961, 242, 492, 493, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 503, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	0, 219, 982, 355, 0, 966, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 519,
	1030, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 994,
	461, 995, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 845, 0, 1207, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 1549, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 1099,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	971, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 972, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 504, 505, 506, 357, 974, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	973, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 975, 510, 976, 318, 319, 320, 977,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 978, 331, 332, 979, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 980,
	349, 350, 353, 354, 352, 981, 351, 0, 0, 982,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 983, 369, 984, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 985, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 183, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 986, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 185, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 1349, 529, 530, 0, 481, 480, 531, 1346,
	0, 1207, 177, 482, 483, 532, 484, 485, 486, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 152, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 1099, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 974, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 973, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	975, 510, 976, 318, 319, 320, 977, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 978, 331, 332, 979, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 0, 0, 982, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 183, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 986, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 185, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 1349,
	529, 530, 0, 481, 480, 531, 0, 0, 0, 177,
	482, 483, 532, 484, 485, 486, 0, 178, 0, 0,
	0, 0, 1207, 1206, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 1099, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 971, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 972, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 974, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 973, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 975, 510, 976, 318, 319, 320, 977, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 978, 331, 332, 979, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 980, 349, 350,
	353, 354, 352, 981, 351, 0, 0, 982, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 983,
	369, 984, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 985,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 986, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 0, 481, 480, 531, 0, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 1207, 1206, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 2921,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 1099, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 504, 505, 506, 357, 974,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 973, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 975, 510, 976, 318,
	319, 320, 977, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 978, 331,
	332, 979, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	0, 0, 982, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 986, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 1207, 1206, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 1216, 225, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 1099, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 971, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 972, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 974, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 973, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 975, 510, 976, 318, 319, 320, 977, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 978, 331, 332, 979, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 980, 349, 350,
	353, 354, 352, 981, 351, 0, 0, 982, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 983,
	369, 984, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 985,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 986, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 0, 481, 480, 531, 1036, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 962, 0, 0, 1356,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 961, 242, 492, 493, 494, 0, 243,
	968, 0, 949, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 952, 950, 951, 958,
	954, 953, 957, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	989, 990, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 996, 0, 503, 298,
	0, 299, 300, 301, 302, 963, 964, 967, 357, 974,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 973, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 975, 965, 976, 318,
	319, 320, 977, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 997, 978, 331,
	332, 979, 0, 333, 334, 956, 955, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	0, 219, 982, 355, 0, 966, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 991, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	992, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 959, 432, 412, 413, 433, 434, 986, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 993, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 994,
	461, 995, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 960, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 845, 0, 214, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 504, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 0, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 183, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 185, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 1349, 529, 530, 0, 481, 480, 531, 214,
	0, 0, 177, 482, 483, 532, 484, 485, 486, 0,
	178, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 152, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	0, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 219, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	0, 481, 480, 531, 1296, 0, 214, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 1662, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	219, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 214, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 1300, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 219, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 214, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 2871, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	219, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 214, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 1300, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 0, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 214, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 2468, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	0, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 214, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 3009, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 0, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 715, 0, 604, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 1937, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 610, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 713, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 504, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 219, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 609, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 0,
	481, 480, 531, 0, 603, 0, 604, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 613, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 610, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	219, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 609,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 601, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 0, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 1207, 1206, 0, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 1099, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 974, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 973, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	975, 510, 976, 318, 319, 320, 977, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 978, 331, 332, 979, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 0, 0, 982, 355, 3146, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 986, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 1207, 1206, 0, 0,
	0, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 1099, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 971, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	972, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 974, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 973, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 975, 510, 976, 318, 319,
	320, 977, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 978, 331, 332,
	979, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 980, 349, 350, 353, 354, 352, 981, 351, 0,
	0, 982, 355, 2850, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 983, 369, 984, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 985, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 986, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 604, 481, 480,
	531, 0, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 610, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 504, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 219, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 1971, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	609, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 604, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 613, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	610, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 0, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 0, 510, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 0, 349, 350,
	353, 354, 352, 0, 351, 0, 219, 0, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 0,
	369, 0, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 0, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 609, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 0, 481, 480, 531, 0, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 1383, 0, 1207,
	1206, 0, 0, 0, 0, 1204, 0, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	0, 243, 495, 0, 1099, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 971, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 217, 0, 0, 0, 0,
	0, 1382, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 972, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 974, 303, 304, 0, 305, 306, 308, 0, 0,
	0, 307, 309, 316, 0, 973, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 975, 510,
	976, 318, 319, 320, 977, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	978, 331, 332, 979, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 980, 349, 350, 353, 354, 352,
	981, 351, 0, 0, 982, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 983, 369, 984, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 1381, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 985, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 1380, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 986,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	0, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 1344, 0, 1207, 1206, 0, 0,
	0, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 1099, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 971, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	972, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 1343, 505, 506, 357, 974, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 973, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 975, 510, 976, 318, 319,
	320, 977, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 978, 331, 332,
	979, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 980, 349, 350, 353, 354, 352, 981, 351, 0,
	0, 982, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 983, 369, 984, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 985, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 986, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 0, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 1340, 0, 1207, 1206, 0, 0, 0, 0, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 1099, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 971,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 972, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 1339, 505, 506, 357, 974, 303, 304, 0, 305,
	306, 308, 0, 0, 0, 307, 309, 316, 0, 973,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 975, 510, 976, 318, 319, 320, 977, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 978, 331, 332, 979, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 980, 349,
	350, 353, 354, 352, 981, 351, 0, 0, 982, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	983, 369, 984, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	985, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 986, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 0, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 1276, 0,
	1207, 1206, 0, 0, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 1099, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 971, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 972, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 1275, 505,
	506, 357, 974, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 973, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 975,
	510, 976, 318, 319, 320, 977, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 978, 331, 332, 979, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 980, 349, 350, 353, 354,
	352, 981, 351, 0, 0, 982, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 983, 369, 984,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 985, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	986, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 0, 0, 0, 0, 482,
	483, 532, 484, 485, 486, 1273, 0, 1207, 1206, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 1099, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 1272, 505, 506, 357, 974,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 973, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 975, 510, 976, 318,
	319, 320, 977, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 978, 331,
	332, 979, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	0, 0, 982, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 986, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 1213, 0, 1207, 1206, 0, 0, 0, 0,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 1099,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	971, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 972, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 1212, 505, 506, 357, 974, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	973, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 975, 510, 976, 318, 319, 320, 977,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 978, 331, 332, 979, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 980,
	349, 350, 353, 354, 352, 981, 351, 0, 0, 982,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 983, 369, 984, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 985, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 986, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 0, 481, 480, 531, 0,
	0, 0, 0, 482, 483, 532, 484, 485, 486, 1202,
	0, 1207, 1206, 0, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 1099, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 971, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 972, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 1201,
	505, 506, 357, 974, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 973, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	975, 510, 976, 318, 319, 320, 977, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 978, 331, 332, 979, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 980, 349, 350, 353,
	354, 352, 981, 351, 0, 0, 982, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 983, 369,
	984, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 985, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 986, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 1207, 1206, 0, 0,
	0, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 1099, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 971, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	972, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 974, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 973, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 975, 510, 976, 318, 319,
	320, 977, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 978, 331, 332,
	979, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 980, 349, 350, 353, 354, 352, 981, 351, 0,
	0, 982, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 983, 369, 984, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 985, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 986, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 214, 481, 480,
	531, 0, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 504, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 219, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 1207, 1206, 0, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 613, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 1099, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 971, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 496, 497, 1751, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 972, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 974, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 973, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 975, 510, 976, 318, 319, 320, 977, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 978, 331, 332, 979, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 980, 349, 350,
	353, 354, 352, 981, 351, 0, 0, 982, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 983,
	369, 984, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 985,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 986, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 0, 481, 480, 531, 1207, 1206, 0,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 1099, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 971, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 972, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 504, 505, 506, 357, 974,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 973, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 975, 510, 976, 318,
	319, 320, 977, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 978, 331,
	332, 979, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 980, 349, 350, 353, 354, 352, 981, 351,
	0, 0, 982, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 983, 369, 984, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 985, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 986, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 1207, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 1099, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 971, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 972, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 504, 505, 506, 357,
	974, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 973, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 975, 510, 976,
	318, 319, 320, 977, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 978,
	331, 332, 979, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 980, 349, 350, 353, 354, 352, 981,
	351, 0, 0, 982, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 983, 369, 984, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 985, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 986, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 214,
	481, 480, 531, 0, 0, 0, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	2344, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 2341, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 2504, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 2347, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	2501, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 2503, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 2500, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 0, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 2346, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 2502, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	214, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 2344, 243, 495, 0, 0, 2338, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 2341, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 2347, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 2337, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 2346, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 2345, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 1440, 0, 214, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 504, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 219, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 1443, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	1441, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 1442,
	480, 531, 1183, 0, 214, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 1185, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 219, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 1028, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 0, 481, 480, 531, 1180,
	0, 214, 0, 482, 483, 532, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 1182,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 219, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 1028,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 1087, 0, 214, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 1089, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 219, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 1028, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 0,
	481, 480, 531, 561, 0, 214, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 560, 224, 550, 225, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 489, 231, 490, 234, 232,
	233, 491, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 492, 493, 494, 0, 243, 495, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 553,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 496, 497, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 498, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 290,
	501, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 554, 297, 502, 0, 503, 298, 0, 299,
	300, 301, 302, 504, 505, 506, 357, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 0, 310, 507, 312, 311, 313, 314, 315, 508,
	0, 509, 0, 317, 0, 510, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 511, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 348, 346,
	0, 349, 350, 353, 354, 352, 0, 351, 0, 0,
	0, 355, 0, 512, 356, 513, 358, 359, 0, 360,
	361, 362, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 0, 369, 0, 515, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 516, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 518, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 519, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 555, 427,
	428, 422, 424, 425, 426, 423, 429, 430, 431, 0,
	432, 412, 413, 433, 434, 0, 435, 436, 520, 437,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 448,
	444, 445, 446, 521, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 457, 0, 458, 522, 523,
	524, 525, 0, 465, 0, 459, 460, 526, 461, 527,
	0, 462, 463, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 472, 473, 471, 475, 0, 476, 0, 474,
	477, 478, 479, 528, 529, 530, 0, 481, 480, 531,
	549, 0, 214, 0, 482, 483, 532, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 550, 225, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 553, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 554,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 0, 510, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 0, 349, 350,
	353, 354, 352, 0, 351, 0, 0, 0, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 0,
	369, 0, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 555, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 0, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 214, 481, 480, 531, 0, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 504, 505, 506, 357, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 0,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 0, 510, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 0, 349,
	350, 353, 354, 352, 2832, 351, 0, 219, 0, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	0, 369, 0, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 0, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 214, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 504, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 219, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 1028, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 0, 481, 480, 531, 2440,
	0, 214, 0, 482, 483, 532, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 2439,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 219, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 1947, 0, 214, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 504, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 219, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 214,
	481, 480, 531, 0, 0, 0, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	0, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 219, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 1873, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	0, 481, 480, 531, 1877, 0, 214, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 1876, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	219, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 1866, 0, 214, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 1868, 505, 506, 357, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 0,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 0, 510, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 0, 349,
	350, 353, 354, 352, 0, 351, 0, 219, 0, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	0, 369, 0, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 0, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 0, 481, 480, 531, 1333, 0,
	214, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 1332, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 219, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 1330, 0, 214, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 1329, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 219, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 1327, 0, 214, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 1326, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 219, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 0, 481, 480, 531, 1323,
	0, 214, 0, 482, 483, 532, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 1322,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 219, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 1194, 0, 214, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 1196, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 219, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 214,
	481, 480, 531, 0, 0, 0, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	0, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 219, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	214, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 553, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 554, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 504, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 555, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 214, 481, 480, 531, 0, 0, 0, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 1978,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 219, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 214, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	1976, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 0, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 0, 510, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 0, 349, 350,
	353, 354, 352, 0, 351, 0, 219, 0, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 0,
	369, 0, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 0, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 214, 481, 480, 531, 0, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 1974, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 504, 505, 506, 357, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 0,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 0, 510, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 0, 349,
	350, 353, 354, 352, 0, 351, 0, 219, 0, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	0, 369, 0, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 0, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 0, 481, 480, 531, 706, 0,
	214, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 504, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 705, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 704, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 214, 481, 480, 531, 0, 0, 0, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 2504, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 0, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 3345, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 540, 0, 214, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	539, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 504, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 0, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 538, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 0,
	481, 480, 531, 214, 3354, 0, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 504, 505, 506, 357, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 0, 307, 309, 316, 0, 0,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 0, 510, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 0, 349,
	350, 353, 354, 352, 0, 351, 0, 0, 0, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	0, 369, 0, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 0, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 0, 481, 480, 531, 214, 2491,
	0, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 504, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 0, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 214,
	481, 480, 531, 0, 0, 0, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	0, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 3134, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	0, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 0, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	214, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 2269, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 504, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 214, 2491, 0, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 489, 231, 490, 234, 232,
	233, 491, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 492, 493, 494, 0, 243, 495, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 496, 497, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 498, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 290,
	501, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 0, 297, 502, 0, 503, 298, 0, 299,
	300, 301, 302, 504, 505, 506, 357, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 0, 310, 507, 312, 311, 313, 314, 315, 508,
	0, 509, 0, 317, 0, 510, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 511, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 348, 346,
	0, 349, 350, 353, 354, 352, 0, 351, 0, 0,
	0, 355, 0, 512, 356, 513, 358, 359, 0, 360,
	361, 362, 0, 0, 364, 365, 2488, 0, 0, 367,
	368, 514, 0, 369, 0, 515, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 516, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 518, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 519, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 422, 424, 425, 426, 423, 429, 430, 431, 0,
	432, 412, 413, 433, 434, 0, 435, 436, 520, 437,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 448,
	444, 445, 446, 521, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 457, 0, 458, 522, 523,
	524, 525, 0, 465, 0, 459, 460, 526, 461, 527,
	0, 462, 463, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 472, 473, 471, 475, 0, 476, 0, 474,
	477, 478, 479, 528, 529, 530, 214, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	0, 0, 0, 220, 221, 222, 223, 224, 1955, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	0, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 1945, 0, 214, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 504, 505, 506, 357, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 0, 307, 309, 316, 0, 0,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 0, 510, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 0, 349,
	350, 353, 354, 352, 0, 351, 0, 0, 0, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	0, 369, 0, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 0, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 0, 481, 480, 531, 581, 0,
	214, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 1065, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	1063, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 504, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 582, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 578, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 1066, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 577, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 1889, 0, 214, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 1888, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 0, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 581, 0, 214, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 571, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 504, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 582, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 0, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 578, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 1355, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 577, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 0, 481, 480, 531, 1337,
	0, 214, 0, 482, 483, 532, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 1336,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 0, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 1284, 0, 214, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 1283, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 0, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 0,
	481, 480, 531, 1265, 0, 214, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 489, 231, 490, 234, 232,
	233, 491, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 492, 493, 494, 0, 243, 495, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 496, 497, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 498, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 290,
	501, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 0, 297, 502, 0, 503, 298, 0, 299,
	300, 301, 302, 504, 505, 506, 357, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 0, 310, 507, 312, 311, 313, 314, 315, 508,
	0, 509, 0, 317, 0, 510, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 511, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 348, 346,
	0, 349, 350, 353, 354, 352, 0, 351, 0, 0,
	0, 355, 0, 512, 356, 513, 358, 359, 0, 360,
	361, 362, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 0, 369, 0, 515, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 516, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 518, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 519, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 422, 424, 425, 426, 423, 429, 430, 431, 0,
	432, 412, 413, 433, 434, 0, 435, 436, 520, 437,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 448,
	444, 445, 446, 521, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 457, 0, 458, 522, 523,
	524, 525, 0, 465, 0, 459, 460, 526, 461, 527,
	0, 462, 463, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 472, 473, 471, 475, 0, 476, 0, 474,
	477, 478, 479, 528, 529, 530, 0, 481, 480, 531,
	1188, 0, 214, 0, 482, 483, 532, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 0, 510, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 0, 349, 350,
	353, 354, 352, 0, 351, 0, 0, 0, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 0,
	369, 0, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 432, 412, 413,
	433, 434, 0, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 0, 481, 480, 531, 581, 0, 214,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 1065, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 1063,
	0, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 504, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	0, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 582, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 0, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 578, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 1066, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 577, 523, 524, 525, 0, 465, 0, 459,
	1064, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	214, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 220, 221, 222,
	223, 224, 1047, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 504, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 0, 481, 480, 531, 581, 0, 214, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 571,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 569, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 504, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 570, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 582, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 0, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 572,
	410, 0, 411, 415, 416, 578, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 573,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	577, 523, 524, 525, 0, 465, 0, 459, 575, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 0, 481,
	480, 531, 565, 0, 214, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 504, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 0, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	566, 416, 417, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 0, 481, 480, 531, 563,
	0, 214, 0, 482, 483, 532, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 0, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 415, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 0, 481, 480, 531, 557, 0, 214, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 504, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 0, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 0,
	481, 480, 531, 535, 0, 214, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 489, 231, 490, 234, 232,
	233, 491, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 492, 493, 494, 0, 243, 495, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 496, 497, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 498, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 290,
	501, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 0, 297, 502, 0, 503, 298, 0, 299,
	300, 301, 302, 504, 505, 506, 357, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 0, 310, 507, 312, 311, 313, 314, 315, 508,
	0, 509, 0, 317, 0, 510, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 511, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 348, 346,
	0, 349, 350, 353, 354, 352, 0, 351, 0, 0,
	0, 355, 0, 512, 356, 513, 358, 359, 0, 360,
	361, 362, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 0, 369, 0, 515, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 516, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 518, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 519, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 422, 424, 425, 426, 423, 429, 430, 431, 0,
	432, 412, 413, 433, 434, 0, 435, 436, 520, 437,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 448,
	444, 445, 446, 521, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 457, 0, 458, 522, 523,
	524, 525, 0, 465, 0, 459, 460, 526, 461, 527,
	0, 462, 463, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 472, 473, 471, 475, 0, 476, 0, 474,
	477, 478, 479, 528, 529, 530, 214, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 298, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	0, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	387, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 410,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 214, 481, 480,
	531, 0, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 488, 489, 231, 490,
	234, 232, 233, 491, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 492, 493, 494, 0, 243,
	495, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 496,
	497, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	498, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 290, 501, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 502, 0, 503, 298,
	0, 299, 300, 301, 302, 2808, 505, 506, 357, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 0, 310, 507, 312, 311, 313, 314,
	315, 508, 0, 509, 0, 317, 0, 510, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 511, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	338, 0, 339, 340, 342, 344, 341, 343, 345, 347,
	348, 346, 0, 349, 350, 353, 354, 352, 0, 351,
	0, 0, 0, 355, 0, 512, 356, 513, 358, 359,
	0, 360, 361, 362, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 514, 0, 369, 0, 515, 370, 363,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 379,
	516, 380, 517, 381, 0, 382, 0, 383, 384, 385,
	386, 387, 388, 389, 518, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 398, 399, 400, 397, 401, 402,
	403, 404, 0, 405, 0, 406, 407, 408, 409, 519,
	410, 0, 411, 415, 416, 417, 418, 419, 420, 421,
	0, 427, 428, 422, 424, 425, 426, 423, 429, 430,
	431, 0, 432, 412, 413, 433, 434, 0, 435, 436,
	520, 437, 438, 0, 439, 440, 441, 442, 414, 443,
	447, 448, 444, 445, 446, 521, 0, 450, 451, 449,
	0, 452, 453, 454, 455, 456, 282, 457, 0, 458,
	522, 523, 524, 525, 0, 465, 0, 459, 460, 526,
	461, 527, 0, 462, 463, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 472, 473, 471, 475, 0, 476,
	0, 474, 477, 478, 479, 528, 529, 530, 214, 481,
	480, 531, 0, 0, 0, 0, 482, 483, 532, 484,
	485, 486, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 488, 489, 231,
	490, 234, 232, 233, 491, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 492, 493, 494, 0,
	243, 495, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	496, 497, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 498, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 501, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 502, 0, 503,
	298, 0, 299, 300, 301, 302, 2806, 505, 506, 357,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 507, 312, 311, 313,
	314, 315, 508, 0, 509, 0, 317, 0, 510, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 511, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 338, 0, 339, 340, 342, 344, 341, 343, 345,
	347, 348, 346, 0, 349, 350, 353, 354, 352, 0,
	351, 0, 0, 0, 355, 0, 512, 356, 513, 358,
	359, 0, 360, 361, 362, 0, 0, 364, 365, 366,
	0, 0, 367, 368, 514, 0, 369, 0, 515, 370,
	363, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	379, 516, 380, 517, 381, 0, 382, 0, 383, 384,
	385, 386, 387, 388, 389, 518, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 398, 399, 400, 397, 401,
	402, 403, 404, 0, 405, 0, 406, 407, 408, 409,
	519, 410, 0, 411, 415, 416, 417, 418, 419, 420,
	421, 0, 427, 428, 422, 424, 425, 426, 423, 429,
	430, 431, 0, 432, 412, 413, 433, 434, 0, 435,
	436, 520, 437, 438, 0, 439, 440, 441, 442, 414,
	443, 447, 448, 444, 445, 446, 521, 0, 450, 451,
	449, 0, 452, 453, 454, 455, 456, 282, 457, 0,
	458, 522, 523, 524, 525, 0, 465, 0, 459, 460,
	526, 461, 527, 0, 462, 463, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 472, 473, 471, 475, 0,
	476, 0, 474, 477, 478, 479, 528, 529, 530, 214,
	481, 480, 531, 0, 0, 0, 0, 482, 483, 532,
	484, 485, 486, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 488, 489,
	231, 490, 234, 232, 233, 491, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 492, 493, 494,
	0, 243, 495, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 496, 497, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 498, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 290, 501, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 502, 0,
	503, 298, 0, 299, 300, 301, 302, 2793, 505, 506,
	357, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	0, 307, 309, 316, 0, 0, 310, 507, 312, 311,
	313, 314, 315, 508, 0, 509, 0, 317, 0, 510,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 511,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 338, 0, 339, 340, 342, 344, 341, 343,
	345, 347, 348, 346, 0, 349, 350, 353, 354, 352,
	0, 351, 0, 0, 0, 355, 0, 512, 356, 513,
	358, 359, 0, 360, 361, 362, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 514, 0, 369, 0, 515,
	370, 363, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 379, 516, 380, 517, 381, 0, 382, 0, 383,
	384, 385, 386, 387, 388, 389, 518, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 398, 399, 400, 397,
	401, 402, 403, 404, 0, 405, 0, 406, 407, 408,
	409, 519, 410, 0, 411, 415, 416, 417, 418, 419,
	420, 421, 0, 427, 428, 422, 424, 425, 426, 423,
	429, 430, 431, 0, 432, 412, 413, 433, 434, 0,
	435, 436, 520, 437, 438, 0, 439, 440, 441, 442,
	414, 443, 447, 448, 444, 445, 446, 521, 0, 450,
	451, 449, 0, 452, 453, 454, 455, 456, 282, 457,
	0, 458, 522, 523, 524, 525, 0, 465, 0, 459,
	460, 526, 461, 527, 0, 462, 463, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 472, 473, 471, 475,
	0, 476, 0, 474, 477, 478, 479, 528, 529, 530,
	214, 481, 480, 531, 0, 0, 0, 0, 482, 483,
	532, 484, 485, 486, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 488,
	489, 231, 490, 234, 232, 233, 491, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 492, 493,
	494, 0, 243, 495, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 496, 497, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 498, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 501, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 502,
	0, 503, 298, 0, 299, 300, 301, 302, 2451, 505,
	506, 357, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 507, 312,
	311, 313, 314, 315, 508, 0, 509, 0, 317, 0,
	510, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	511, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 338, 0, 339, 340, 342, 344, 341,
	343, 345, 347, 348, 346, 0, 349, 350, 353, 354,
	352, 0, 351, 0, 0, 0, 355, 0, 512, 356,
	513, 358, 359, 0, 360, 361, 362, 0, 0, 364,
	365, 366, 0, 0, 367, 368, 514, 0, 369, 0,
	515, 370, 363, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 379, 516, 380, 517, 381, 0, 382, 0,
	383, 384, 385, 386, 387, 388, 389, 518, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 398, 399, 400,
	397, 401, 402, 403, 404, 0, 405, 0, 406, 407,
	408, 409, 519, 410, 0, 411, 415, 416, 417, 418,
	419, 420, 421, 0, 427, 428, 422, 424, 425, 426,
	423, 429, 430, 431, 0, 432, 412, 413, 433, 434,
	0, 435, 436, 520, 437, 438, 0, 439, 440, 441,
	442, 414, 443, 447, 448, 444, 445, 446, 521, 0,
	450, 451, 449, 0, 452, 453, 454, 455, 456, 282,
	457, 0, 458, 522, 523, 524, 525, 0, 465, 0,
	459, 460, 526, 461, 527, 0, 462, 463, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 472, 473, 471,
	475, 0, 476, 0, 474, 477, 478, 479, 528, 529,
	530, 214, 481, 480, 531, 0, 0, 0, 0, 482,
	483, 532, 484, 485, 486, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	488, 489, 231, 490, 234, 232, 233, 491, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 492,
	493, 494, 0, 243, 495, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 496, 497, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 498, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 290, 501, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	502, 0, 503, 298, 0, 299, 300, 301, 302, 504,
	505, 506, 357, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 0, 310, 507,
	312, 311, 313, 314, 315, 508, 0, 509, 0, 317,
	0, 510, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 511, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 338, 0, 339, 340, 342, 344,
	341, 343, 345, 347, 348, 346, 0, 349, 350, 353,
	354, 352, 0, 351, 0, 0, 0, 355, 0, 512,
	356, 513, 358, 359, 0, 360, 361, 362, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 514, 0, 369,
	0, 515, 370, 363, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 379, 516, 380, 517, 381, 0, 382,
	0, 383, 384, 385, 386, 387, 388, 389, 518, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 398, 399,
	400, 397, 401, 402, 403, 404, 0, 405, 0, 406,
	407, 408, 409, 519, 410, 0, 411, 566, 416, 417,
	418, 419, 420, 421, 0, 427, 428, 422, 424, 425,
	426, 423, 429, 430, 431, 0, 432, 412, 413, 433,
	434, 0, 435, 436, 520, 437, 438, 0, 439, 440,
	441, 442, 414, 443, 447, 448, 444, 445, 446, 521,
	0, 450, 451, 449, 0, 452, 453, 454, 455, 456,
	282, 457, 0, 458, 522, 523, 524, 525, 0, 465,
	0, 459, 460, 526, 461, 527, 0, 462, 463, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 472, 473,
	471, 475, 0, 476, 0, 474, 477, 478, 479, 528,
	529, 530, 214, 481, 480, 531, 0, 0, 0, 0,
	482, 483, 532, 484, 485, 486, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 487, 0, 1902, 0, 0, 226, 228, 227, 229,
	230, 488, 489, 231, 490, 234, 232, 233, 491, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	492, 493, 494, 0, 243, 495, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 496, 497, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 498, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 501, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 502, 0, 503, 298, 0, 299, 300, 301, 302,
	504, 505, 506, 357, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	507, 312, 311, 313, 314, 315, 508, 0, 509, 0,
	317, 0, 510, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 511, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 338, 0, 339, 340, 342,
	344, 341, 343, 345, 347, 348, 346, 0, 349, 350,
	353, 354, 352, 0, 351, 0, 0, 0, 355, 0,
	512, 356, 513, 358, 359, 0, 360, 361, 362, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 514, 0,
	369, 0, 515, 370, 363, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 379, 516, 380, 517, 381, 0,
	382, 0, 383, 384, 385, 386, 387, 388, 389, 518,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 398,
	399, 400, 397, 401, 402, 403, 404, 0, 405, 0,
	406, 407, 408, 409, 519, 410, 0, 411, 415, 416,
	417, 418, 419, 420, 421, 0, 427, 428, 422, 424,
	425, 426, 423, 429, 430, 431, 0, 0, 412, 413,
	433, 434, 0, 435, 436, 520, 437, 438, 0, 439,
	440, 441, 442, 414, 443, 447, 448, 444, 445, 446,
	521, 0, 450, 451, 449, 0, 452, 453, 454, 455,
	456, 282, 457, 0, 458, 522, 523, 524, 525, 0,
	465, 0, 459, 460, 526, 461, 527, 0, 462, 463,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 472,
	473, 471, 475, 0, 476, 0, 474, 477, 478, 479,
	528, 529, 530, 214, 481, 480, 531, 0, 0, 0,
	0, 482, 483, 532, 484, 485, 486, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 488, 489, 231, 490, 234, 232, 233, 491,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 492, 493, 494, 0, 243, 495, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 496, 497, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 498, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 290, 501, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 502, 0, 503, 298, 0, 299, 300, 301,
	302, 1306, 505, 506, 357, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 0, 307, 309, 316, 0, 0,
	310, 507, 312, 311, 313, 314, 315, 508, 0, 509,
	0, 317, 0, 510, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 511, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 338, 0, 339, 340,
	342, 344, 341, 343, 345, 347, 348, 346, 0, 349,
	350, 353, 354, 352, 0, 351, 0, 0, 0, 355,
	0, 512, 356, 513, 358, 359, 0, 360, 361, 362,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 514,
	0, 369, 0, 515, 370, 363, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 379, 516, 380, 517, 381,
	0, 382, 0, 383, 384, 385, 386, 387, 388, 389,
	518, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	398, 399, 400, 397, 401, 402, 403, 404, 0, 405,
	0, 406, 407, 408, 409, 519, 410, 0, 411, 415,
	416, 417, 418, 419, 420, 421, 0, 427, 428, 422,
	424, 425, 426, 423, 429, 430, 431, 0, 432, 412,
	413, 433, 434, 0, 435, 436, 520, 437, 438, 0,
	439, 440, 441, 442, 414, 443, 447, 448, 444, 445,
	446, 521, 0, 450, 451, 449, 0, 452, 453, 454,
	455, 456, 282, 457, 0, 458, 522, 523, 524, 525,
	0, 465, 0, 459, 460, 526, 461, 527, 0, 462,
	463, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	472, 473, 471, 475, 0, 476, 0, 474, 477, 478,
	479, 528, 529, 530, 214, 481, 480, 531, 0, 0,
	0, 0, 482, 483, 532, 484, 485, 486, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 488, 489, 231, 490, 234, 232, 233,
	491, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 492, 493, 494, 0, 243, 495, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 496, 497, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 498, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 501,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 502, 0, 503, 298, 0, 299, 300,
	301, 302, 1246, 505, 506, 357, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 507, 312, 311, 313, 314, 315, 508, 0,
	509, 0, 317, 0, 510, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 511, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 338, 0, 339,
	340, 342, 344, 341, 343, 345, 347, 348, 346, 0,
	349, 350, 353, 354, 352, 0, 351, 0, 0, 0,
	355, 0, 512, 356, 513, 358, 359, 0, 360, 361,
	362, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	514, 0, 369, 0, 515, 370, 363, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 379, 516, 380, 517,
	381, 0, 382, 0, 383, 384, 385, 386, 387, 388,
	389, 518, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 398, 399, 400, 397, 401, 402, 403, 404, 0,
	405, 0, 406, 407, 408, 409, 519, 410, 0, 411,
	415, 416, 417, 418, 419, 420, 421, 0, 427, 428,
	422, 424, 425, 426, 423, 429, 430, 431, 0, 432,
	412, 413, 433, 434, 0, 435, 436, 520, 437, 438,
	0, 439, 440, 441, 442, 414, 443, 447, 448, 444,
	445, 446, 521, 0, 450, 451, 449, 0, 452, 453,
	454, 455, 456, 282, 457, 0, 458, 522, 523, 524,
	525, 0, 465, 0, 459, 460, 526, 461, 527, 0,
	462, 463, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 472, 473, 471, 475, 0, 476, 0, 474, 477,
	478, 479, 528, 529, 530, 214, 481, 480, 531, 0,
	0, 0, 0, 482, 483, 532, 484, 485, 486, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 488, 489, 231, 490, 234, 232,
	233, 491, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 492, 493, 494, 0, 243, 495, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 496, 497, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 498, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 290,
	501, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 0, 297, 502, 0, 503, 298, 0, 299,
	300, 301, 302, 504, 505, 506, 357, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 0, 310, 507, 312, 311, 313, 314, 315, 508,
	0, 509, 0, 317, 0, 510, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 511, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 338, 0,
	339, 340, 342, 344, 341, 343, 345, 347, 348, 346,
	0, 349, 350, 353, 354, 352, 0, 351, 0, 0,
	0, 355, 0, 512, 356, 513, 358, 359, 0, 360,
	361, 362, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 514, 0, 369, 0, 515, 370, 363, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 379, 516, 380,
	517, 381, 0, 382, 0, 383, 384, 385, 386, 387,
	388, 389, 518, 1001, 391, 0, 392, 393, 394, 395,
	396, 0, 398, 399, 400, 397, 401, 402, 403, 404,
	0, 405, 0, 406, 407, 408, 409, 519, 410, 0,
	411, 415, 416, 417, 418, 419, 420, 421, 0, 427,
	428, 422, 424, 425, 426, 423, 429, 430, 431, 0,
	432, 412, 413, 433, 434, 0, 435, 436, 520, 437,
	438, 0, 439, 440, 441, 442, 414, 443, 447, 448,
	444, 445, 446, 521, 0, 450, 451, 449, 0, 452,
	453, 454, 455, 456, 282, 457, 0, 458, 522, 523,
	524, 525, 0, 465, 0, 459, 460, 526, 461, 527,
	0, 462, 463, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 472, 473, 471, 475, 0, 476, 0, 474,
	477, 478, 479, 528, 529, 530, 214, 481, 480, 531,
	0, 0, 0, 0, 482, 483, 532, 484, 485, 486,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 488, 489, 231, 490, 234,
	232, 233, 491, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 492, 493, 494, 0, 243, 495,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 496, 497,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 498,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 501, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 502, 0, 503, 0, 0,
	299, 300, 301, 302, 504, 505, 506, 357, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 507, 312, 311, 313, 314, 315,
	508, 0, 509, 0, 317, 0, 510, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 511, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 338,
	0, 339, 340, 342, 344, 341, 343, 345, 347, 348,
	346, 0, 349, 350, 353, 354, 352, 0, 351, 0,
	0, 0, 355, 0, 512, 356, 513, 358, 359, 0,
	360, 361, 362, 0, 0, 364, 365, 366, 0, 0,
	367, 368, 514, 0, 369, 0, 515, 370, 363, 371,
	372, 0, 374, 375, 376, 377, 0, 378, 379, 516,
	380, 517, 381, 0, 382, 0, 383, 384, 385, 386,
	0, 388, 389, 518, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 398, 399, 400, 397, 401, 402, 403,
	404, 0, 405, 0, 406, 407, 408, 409, 519, 0,
	0, 411, 415, 416, 417, 418, 419, 420, 421, 0,
	427, 428, 422, 424, 425, 426, 423, 429, 430, 431,
	0, 432, 412, 413, 433, 434, 0, 435, 436, 520,
	437, 438, 0, 439, 440, 441, 442, 414, 443, 447,
	448, 444, 445, 446, 521, 0, 450, 451, 449, 0,
	452, 453, 454, 455, 456, 282, 457, 0, 458, 522,
	523, 524, 525, 0, 465, 0, 459, 460, 526, 461,
	527, 0, 462, 463, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 472, 473, 471, 475, 0, 476, 0,
	474, 477, 478, 479, 528, 529, 530, 0, 481, 480,
	531, 0, 0, 0, 0, 482, 483, 532, 484, 485,
	486, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 1516, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520,
	1528, 1529, 1530, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 1521, 1516, 0, 0, 1507, 0, 0,
	0, 1488, 0, 0, 1504, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 1535,
	0, 0, 0, 1515, 1517, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 0, 0, 0, 0, 1525,
	0, 0, 1535, 0, 0, 0, 1515, 1517, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 1532, 0,
	0, 0, 0, 0, 0, 1502, 1503, 0, 0, 1533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 1526, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 1526, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1524,
	0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 2133, 1510, 1511, 1512,
	1513, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505,
	1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 1525, 0, 0, 1535, 3610, 0, 0, 1515, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	1532, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 1510, 1511, 1512,
	1513, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 1535, 0, 0, 0, 1515, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	1532, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 1524, 0, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 1508, 0, 0, 0, 3606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 1521, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 1526,
	1521, 1516, 0, 0, 1507, 0, 0, 0, 1488, 0,
	0, 1504, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1511, 1512, 1513, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 1524, 0, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 1525, 0, 0, 1535, 3527, 0, 0,
	1515, 1517, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 1525, 0, 0, 1535,
	0, 0, 0, 1515, 1517, 1523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528,
	1529, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 1526, 1521, 1516, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 1534, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 1526, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 1499,
	1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 0, 0, 0, 0, 3526,
	0, 0, 0, 0, 1510, 1511, 1512, 1513, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 1524,
	0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1525, 0,
	0, 1535, 3411, 0, 0, 1515, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 1532, 0, 0,
	0, 0, 0, 0, 1502, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528,
	1529, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 1521, 1516, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 1534, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 0,
	0, 0, 0, 0, 1510, 1511, 1512, 1513, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 1535, 0, 0, 0, 1515, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 1532, 0, 0,
	0, 0, 0, 0, 1502, 1503, 0, 0, 0, 0,
	0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501,
	1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	1508, 0, 0, 0, 3308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 1526, 1521, 1516, 0,
	0, 1507, 0, 0, 0, 1488, 0, 0, 1504, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501,
	0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	1525, 0, 0, 1535, 3261, 0, 0, 1515, 1517, 1510,
	1511, 1512, 1513, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1525, 0, 0, 1535, 0, 0, 0,
	1515, 1517, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 0, 0, 0,
	1522, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 1526, 1521,
	1516, 0, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 1534, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 1526, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 0, 0, 0, 0, 3260, 0, 0, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 1524, 0, 0, 1499,
	1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 1525, 0, 0, 1535, 3259,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 1521,
	1516, 0, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 1534, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 1535, 0,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 1524, 0,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 1523, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 1508, 0, 0,
	0, 3016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 1521, 1516, 0, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 0, 1534, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 1526, 1521, 1516, 0, 0, 1507, 0,
	0, 0, 1488, 0, 0, 1504, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 1511, 1512, 1513, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 1524, 0,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 1525, 0, 0,
	1535, 2652, 0, 0, 1515, 1517, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 1532, 0, 0, 0,
	0, 0, 0, 1502, 1503, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 1485, 1486, 0,
	1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 1526, 1521, 1516, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 1534,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 1526, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	0, 0, 0, 2651, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1525, 0, 0, 1535, 2650, 0, 0, 1515,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 1532, 0, 0, 0, 0, 0, 0, 1502, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 1485, 1486, 0,
	1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 1521, 1516, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 1534,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1526, 0, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 1535, 0, 0, 0, 1515,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 1532, 0, 0, 0, 0, 0, 0, 1502, 1503,
	0, 0, 0, 0, 0, 1524, 0, 0, 1499, 1500,
	1506, 1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 1508, 0, 0, 0, 2649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1485,
	1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 1521, 1516,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 1534, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	1526, 1521, 1516, 0, 0, 1507, 0, 2578, 0, 1488,
	0, 0, 1504, 0, 1534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 0, 0, 0, 0, 0,
	1493, 3715, 0, 0, 2579, 1524, 0, 0, 1499, 1500,
	1506, 1527, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 1525, 0, 2607, 1535, 0, 0,
	0, 1515, 1517, 1510, 1511, 1512, 1513, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 1532, 0, 0, 0, 0, 0, 0,
	1502, 1503, 0, 0, 0, 0, 0, 1525, 0, 0,
	1535, 0, 0, 0, 1515, 1517, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 1532, 0, 0, 0,
	0, 0, 0, 1502, 1503, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3714, 0, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 1514, 1526, 0, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 1526, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 2699, 0,
	1524, 2698, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 2242,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 2705, 0, 0, 0, 0, 0, 0, 0, 2995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 2700,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 2653,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2667, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 1485,
	1486, 1507, 1518, 1519, 1520, 1528, 1529, 1530, 1504, 0,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 1534, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, 1526, 0,
	0, 0, 0, 0, 0, 1507, 1510, 1511, 1512, 1513,
	0, 0, 1504, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	1510, 1511, 1512, 1513, 0, 0, 1502, 1503, 0, 0,
	1493, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1508, 0, 1525, 0, 0, 1535, 0, 0,
	0, 1515, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 1532, 0, 0, 0, 0, 0, 0,
	1502, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 1721, 1698, 1705, 0, 1688, 1731,
	1730, 0, 1509, 0, 1690, 1689, 0, 0, 0, 0,
	0, 0, 1741, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 1732, 0, 1728, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1526, 0, 0, 0, 0, 0, 0, 1725,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 1703, 1716, 1718, 1719, 1720, 1715, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 1738, 751, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	1499, 1500, 1506, 1527, 1505, 1501, 758, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 0, 1692, 0, 0,
	770, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 1701, 0,
	1702, 0, 0, 0, 0, 0, 757, 0, 0, 0,
	0, 760, 0, 0, 0, 793, 0, 0, 0, 0,
	0, 0, 767, 768, 0, 0, 0, 0, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 788, 762, 0, 1711, 1709, 1710, 1713, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 1694, 1696, 1697, 0, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 1695, 0,
	0, 0, 763, 0, 0, 0, 0, 0, 1740, 0,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 649, 0, 0, 1691, 764, 765, 1733, 1734, 1735,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 631, 0, 0, 632, 0, 772, 771, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 1699, 0,
	0, 0, 656, 1706, 1739, 0, 0, 0, 633, 0,
	0, 792, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 789, 0,
	0, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 636,
	658, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 784, 785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 775, 0, 0, 0, 0, 0, 776,
	0, 657, 0, 0, 0, 0, 753, 0, 790, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 777, 0, 0, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 637, 791, 0, 0,
	0, 0, 0, 0, 0, 779, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 0, 0, 661,
	0, 660, 0, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 653, 0, 0, 0, 0, 662, 0, 659,
	0, 0, 0, 0, 0, 651,
}
var sqlPact = [...]int{

	6850, -1000, -1000, -1000, -1000, -1000, -1000, 202, 200, 199,
	198, 196, 195, 194, 192, -1000, -1000, -1000, 191, -1000,
	-1000, 189, -1000, 187, 177, 176, 174, -1000, 173, 172,
	168, -1000, -1000, -1000, -1000, 167, 165, 163, 61735, 1810,
	73911, 64764, 1874, 56078, 73474, 55641, 73037, 72600, 162, -1000,
	72163, 160, 159, 158, -1000, -1000, 156, 155, 3620, 45532,
	154, 150, 149, 2343, 147, 145, -1000, 144, -1000, 85540,
	1252, -1000, 142, 141, -1000, 3817, 447, 63896, 2289, 139,
	134, 45094, 2267, 2291, -1000, -1000, 1677, -1000, -1000, 132,
	130, 129, 116, 114, 111, 110, 105, 101, -1000, 99,
	98, 96, 94, 90, 89, 86, -1000, 85, 84, 82,
	81, 80, 79, 78, 77, 75, 74, 72, 71, -1000,
	85420, 1566, 1448, 1445, 1439, 1407, 1401, 852, 68, 64,
	63, 60, 58, 57, 56, -1000, 55, 53, 51, 45,
	-1000, 42, 35, 146, 34, 32, 29, 23, 22, 2305,
	-1000, 1388, 888, 21975, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 78221, 74342, 20,
	-129, 18, -1000, 2638, 890, 37653, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 457, -1000, -1000, -1000,
	270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1494, 679, -1000, -1000, -1000, 71726, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1783, -70, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 678, -1000, 1769, 133,
	1704, -1000, -1000, -1000, -1000, -1000, 74342, -1000, -1000, 2960,
	2959, 1692, 676, 71295, -1000, 1283, -1000, 790, 24747, -1000,
	1031, -1000, 24747, 264, -1000, -1000, -1000, -1000, -1000, -1000,
	55204, 16399, 54767, 54330, 70858, 15952, 61304, 50417, 49970, -1000,
	-1000, 40293, 1111, -1000, -1000, -1000, -1000, -1000, -10, 51293,
	74342, -1000, 263, -1000, -1000, -1000, -1000, -1000, -1000, 31319,
	660, 30847, 511, 30375, 405, -1000, -1000, -1000, -1000, 2957,
	2956, 982, 2955, 2577, 77790, 1496, 2953, 1459, 1061, 886,
	2952, 2949, 2946, 2945, 2943, 2942, 2941, 1207, 70421, 2354,
	1455, 49523, 49076, 61735, 61735, 2109, 69984, 1197, 1159, -1000,
	-1000, -1000, -1000, 2471, 2285, 2283, 42482, -1000, -1000, 2938,
	2936, 2930, 2925, 2914, 77359, 1478, 2913, 2009, 2912, 2911,
	2910, 2909, 2907, 2905, 2901, 2899, 2895, -1000, 60867, 60430,
	59993, 59556, 69547, 48629, 48182, -1000, -1000, -1000, 39397, 7482,
	6924, 6138, 69110, 40738, 61735, 61735, -1000, -1000, 31779, 115,
	-1000, -1000, -1000, 40293, 2293, -1000, 31779, 115, -1000, 74342,
	-1000, 2353, 1639, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1514, 1360, 2792, 47735, 1709, 1213, 2625,
	2469, 2464, 1263, 1985, 2455, 2445, 2436, 2417, 2413, 1409,
	2058, 361, 21503, 1292, 1278, 2370, 2367, 2808, 1622, 1733,
	53893, 2891, 2889, 2603, 2361, 2324, 2288, -1000, -1000, -1000,
	-1000, 1230, -1000, -1000, 56940, -1000, -1000, 1006, -1000, -1000,
	1006, -1000, -1000, -1000, -1000, -1000, 1110, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1388, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1764, -1000, 1690, -1000, -1000, 2043, 2612,
	2612, 2612, 2650, 427, 409, -1000, 146, -1000, -1000, 84694,
	-1000, -1000, 31779, 31779, 31779, 31779, 31779, 1627, -1000, 674,
	-1000, -1000, 707, -1000, 671, 532, -1000, -1000, -1000, -1000,
	-1000, -1000, 669, 2813, -1000, -1000, -1000, -1000, -1000, 2787,
	-1000, 18683, -1000, -1000, -1000, 399, 668, 31779, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 880, -1000, 252, 793, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	600, 1561, 599, 599, 599, -1000, -1000, 878, -1000, -1000,
	-1000, 305, 598, 271, 596, -1000, -1000, -1000, -1000, 2352,
	667, 665, -1000, 664, 663, 659, 658, 657, -1000, -1000,
	-1000, 656, 652, 648, 646, 641, 640, 638, 637, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 877, -1000, 636,
	635, 634, 633, 626, 625, 624, 623, 622, -1000, -1000,
	-17, 74342, -1000, 457, -17, -1000, -1000, 620, -1000, 25207,
	25207, 25207, -1000, -1000, 1768, 31779, -1000, 2091, -1000, 2,
	2, 760, 38523, -1000, 36779, 760, 504, 713, 42045, -1000,
	2275, -1000, -1000, 615, 244, -1000, -1000, 2268, 74342, 16844,
	74342, 61735, 61735, 61735, 2522, 31779, -1000, -1000, 47288, 74342,
	62166, 2740, 85210, 47288, 74342, 2350, -1000, -1000, -1000, 74342,
	-1000, 31779, -1000, 2738, 1272, 51728, 2679, -28, -1000, -1000,
	-1000, -1000, -1000, -1000, 1989, 2005, 969, 1847, 1371, -1000,
	24747, 2565, -1000, -1000, -1000, 238, 16844, -1000, 2093, 2498,
	1089, -1000, 1845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1486, 2496, -1000, 3723, 2483, 1479, -1000, -1000, 1775,
	-1000, -1000, 2592, -1000, -1000, 1862, 2481, 3, -1000, -1000,
	840, 2477, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 840, 2476, -1000, 756, -1000, 50862, 40293, 51293, -19,
	-1000, -1000, -36, -1000, 15505, 84694, -1000, -1000, -1000, 84694,
	769, -1000, -1000, 2468, -1000, 84694, 768, -1000, -1000, 2463,
	-1000, -1000, -1000, 2887, -1000, 2886, 1943, 2885, 2882, 2879,
	-1000, 1529, 1555, 2877, -1000, 2876, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 59119, 1765, -1000, -1000, 58245, 58682, 885,
	-1000, 840, 1939, -1000, 840, 1923, -1000, 842, -1000, 2875,
	68673, 2128, 840, 1920, -1000, -1000, -1000, -1000, -1000, 43352,
	-1000, 43352, -1000, 43352, -1000, 1343, -1000, 76928, 2, 2,
	2787, -1000, -1000, -1000, -1000, -1000, 2462, 2873, 2871, 2870,
	-1000, 74342, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 183, 2458, -1000, -1000, 183, 2452, -1000, 183, 2450,
	-1000, 180, 2449, -1000, -1000, 1780, 2446, -1000, -44, 2435,
	-1000, -1000, -44, 2434, -1000, -35, -1000, -1000, -1000, 890,
	-1000, 38960, -1000, 38960, -1000, 68236, 50862, 824, 650, 44657,
	84694, -1000, -48, -1000, 40293, 84694, -1000, 50862, 58245, -1000,
	67799, 57814, -1000, -1000, 1204, 2020, -1000, -1000, -1000, 824,
	50862, 50862, 50862, -1000, 67362, -1000, -1000, 1699, 1406, 2594,
	1683, 61735, -1000, 1465, -1000, -1000, -1000, 2616, 2335, -1000,
	46853, 63459, -1000, 63028, -1000, 62597, -1000, 61735, -1000, 61735,
	-1000, 2869, 2868, 2865, -1000, 2862, 2610, 84694, 2600, -1000,
	2478, 1419, 1416, 74342, -1000, -1000, 74342, -1000, 74342, -1000,
	-1000, -1000, -1000, -1000, 1986, -1000, -1000, -1000, -1000, 61735,
	-1000, -1000, -1000, -1000, -1000, -1000, 2334, -1000, 1404, -1000,
	1452, -1000, 1203, -1000, -1000, 184, -1000, -1000, -28, -1000,
	76497, -1000, 2043, -1000, 74342, -1000, 1991, 2313, 2333, 1163,
	1833, 2073, -1000, 29903, 2054, 34079, 1844, 146, -1000, -1000,
	146, 146, 24287, -1000, -1000, 85210, 85210, 16844, 1146, 31779,
	31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779,
	31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779,
	31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779, 31779,
	31779, 31779, 31779, 31779, 1966, 31779, 1109, 31779, 31779, 31779,
	31779, 1580, -1000, -1000, 1647, 478, 1667, -1000, 2775, 2775,
	2775, 84988, 84988, 551, 2861, 707, -1000, 31779, -1000, 115,
	31779, 17291, -1000, -1000, -1000, 409, 6170, 1873, -1000, 408,
	17763, -1000, -1000, -1000, 18683, 532, 29431, 31779, 863, 84694,
	1223, 2790, 15060, 2331, 2161, -1000, 2797, -1000, -1000, 2790,
	-1000, -1000, -1000, -1000, 2790, 1142, 1118, 2790, -1000, 2790,
	2790, 611, 708, 618, 21031, 20559, 20087, 19615, 513, 31779,
	31779, 31779, 31779, 31779, 31779, 31779, 31779, -1000, 28971, 28499,
	28027, 34539, 27555, 31779, 19143, 27083, 26611, 74342, -17, 2737,
	31779, 131, -1000, 83084, -1000, 131, 131, 608, -41, 84694,
	2042, 2042, 38088, 1970, 1659, 1659, 1659, -1000, 760, 11474,
	760, 66496, 1672, 760, 760, 234, 268, 406, 36344, 2091,
	66496, 687, 607, 16, 15, 13, -1000, -1000, 10, 8,
	-1000, -1000, 61735, 606, 17291, 16844, 1231, -42, 228, 2081,
	2050, 2048, -1000, 2047, 1405, -43, 1101, -37, -1000, 4601,
	-49, -1000, 897, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 874, 605, 604, 299, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 600, 1561, 599, 599, 599,
	-1000, -1000, -1000, 305, 598, 271, 596, -1000, -1000, -1000,
	-1000, -1000, -1000, 2259, -36, 62166, 788, -50, 991, -28,
	-1000, -1000, -1000, 51728, 1006, -1000, 1789, -1000, -1000, -1000,
	-1000, -1000, -1000, 1214, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 880, -1000, -1000, -1000, -1000, -1000, -1000, 2784, 2782,
	-18, -1000, -1000, 16844, -1000, -29, 1467, -1000, 53456, 1803,
	2601, 2584, 1317, -1000, 1248, 2648, 56940, 2697, 2733, 711,
	-1000, 2256, -1000, -1000, 789, 1398, 1100, 56940, 3723, -1000,
	85210, -1000, 2197, 2645, 1176, 1171, 1176, 1176, 1173, -1000,
	56940, 1094, -1000, 1086, -1000, -32, 2683, 2712, 603, -1000,
	2255, 1085, -1000, -1000, 61735, 16844, -1000, 1289, -1000, 50862,
	-1000, 50862, 2134, -1000, -51, 756, -19, 51293, 74342, 224,
	-1000, 31779, 115, 31779, 115, -1000, -1000, 2433, -1000, -1000,
	-1000, 2859, 1510, 2004, -1000, -1000, -1000, 594, 1915, 2238,
	74342, 2097, -21, 61735, -1000, 3723, 1914, -1000, -1000, 57377,
	-1000, 2428, -1000, 2427, 565, 2855, -1000, 1748, 1912, -1000,
	-1000, -1000, 76066, 1080, 2425, 923, 433, 2730, -1000, 433,
	43787, -1000, 74342, -1000, -1000, 74342, -1000, -1000, -1000, 2852,
	-1000, 61735, -1000, -1000, 61735, -1000, 61735, -1000, 61735, -1000,
	61735, 61735, -1000, 74342, 50862, 50862, 50862, 6138, 52594, -56,
	-58, 402, -1000, 66931, 74342, 913, 53025, 74342, 2555, 824,
	40293, -48, 824, 824, 756, -1000, 756, -1000, 61735, 2328,
	-1000, 824, 824, 824, -1000, -1000, -1000, -1000, 2849, 2846,
	-1000, -1000, -1000, 836, 61735, 74342, 61735, -1000, -1000, 74342,
	-1000, 74342, -1000, 836, 74342, 836, 74342, 836, 74342, -1000,
	-1000, -1000, -1000, -1000, -1000, 115, 31779, 1365, -1000, 2325,
	-1000, 2322, -1000, 41, -1000, -1000, -1000, -1000, 1828, 61735,
	61735, 61735, 61735, 74342, 61735, -1000, 56940, -1000, 1991, 2313,
	-1000, -1000, -1000, -1000, -1000, -1000, 1183, 1710, -1000, 2030,
	-1000, 1307, -1000, -1000, -1000, 84694, 34999, -1000, -1000, 84694,
	1415, -1000, 33619, 33159, -1000, -1000, 1420, 61735, 2104, -1000,
	2104, -20, -1000, 82561, 2025, 61735, -1000, -1000, -1000, -1000,
	-1000, 785, 512, 512, 1103, 1103, 1103, 1103, 2694, 302,
	3598, 1265, 267, 267, 6468, 6468, 6468, 6468, 6468, 267,
	460, 1147, 1147, 460, 460, 460, 460, 460, 1147, 1147,
	1147, 267, 267, 267, 84988, 84924, 8405, 31779, 31779, 1083,
	1563, 478, 8254, 31779, 10110, 10110, 10110, 10110, -1000, 1298,
	-1000, -1000, -1000, -1000, 2228, 588, 34539, 34539, -1000, -1000,
	-1000, -1000, 18223, 31779, -1000, -1000, -1000, -1000, 26139, -1000,
	-1000, 82226, -247, 400, -194, -9, -1000, 31779, 31779, 31779,
	394, -1000, 212, 31779, 74342, -1000, 79090, 686, -196, -1000,
	-59, 1190, -1000, 31779, -1000, -1000, 1082, -1000, 1079, 1075,
	1063, -1000, 577, 389, -1000, 208, -1000, 1651, 575, 559,
	384, -74, 382, 766, 763, 380, 373, 371, 31779, -1000,
	-1000, -1000, -1000, -1000, 81996, -1000, -1000, 81704, -1000, -1000,
	81661, -1000, -1000, 81369, -1000, -1000, -1000, 84464, 10756, 10675,
	10273, 5591, 9774, 9270, -75, 370, -1000, 2224, -194, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 369, -1000, 363,
	-1000, 84234, -194, 359, 5479, -1000, 34539, 34539, 34539, -1000,
	358, -1000, 82854, -1000, 84004, 25679, 25679, 25679, 357, 83774,
	31779, -194, -76, -1000, -77, -1000, -1000, 554, -82, 860,
	25207, 37216, 16844, -1000, 860, 860, 31779, -1000, 31779, 2039,
	-1000, -1000, -1000, 2037, 2015, 2042, 38088, -1000, -1000, -1000,
	-1000, 66496, -1000, 2787, 2454, -1000, 66496, -1000, -1000, 74342,
	457, -1000, 66496, 66496, 16844, 760, -1000, 760, 66496, 561,
	-1000, -1000, -1000, -1000, -1000, 356, 41173, -9, 207, 824,
	-1000, 16844, 2149, 2149, 2149, 2149, -1000, -1000, 74342, 2753,
	-1000, 1569, -1000, 85210, -1000, 706, 975, 553, -1000, 2790,
	2790, -1000, 2790, 74342, 124, 24747, -1000, 1006, -1000, -1000,
	1324, -1000, 1536, -1000, 1107, -1000, -1000, -1000, -1000, 24747,
	-1000, 1804, 74342, 74342, 61735, -1000, -1000, 1908, 75635, 1902,
	85210, 74342, -1000, -1000, 552, 549, 2023, 2022, 74342, 74342,
	2021, 75204, 74773, 74342, 1577, 31779, 1599, 1578, 115, 115,
	-1000, -1000, 115, 548, 1073, 61735, 61735, 61735, 1473, -1000,
	-1000, -1000, -1000, -1000, 56509, -1000, -1000, 2796, 2795, -1000,
	1176, -1000, -1000, -1000, 1176, 3723, 1471, 61735, 74342, 1586,
	115, 115, -1000, -1000, 115, 537, 16844, 1530, -1000, 1289,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 46422, 932, 840,
	840, 824, 2213, -1000, 2134, -1000, -1000, 14615, 84694, -1000,
	84694, -1000, 74342, -1000, 881, 74342, 53025, 819, 2422, 42917,
	-36, 824, 50862, 61735, -21, -1000, 3723, 2416, 457, 1900,
	-1000, -1000, 50862, 50862, 2845, 535, 2844, -1000, 61735, 2414,
	1739, 1895, 2470, 738, 74342, 860, 38088, 1534, -1000, 41610,
	899, 74342, 1443, 95, -1000, -1000, -1000, 27, 74342, -1000,
	2843, -1000, -1000, 183, 183, 183, -1000, 180, 1780, -1000,
	-44, -44, -1000, -1000, 6138, 6138, 824, -23, 534, -1000,
	749, 748, 39848, 50862, -83, -1000, -1000, -1000, -1000, -1000,
	61735, 74342, 642, 2127, 74342, -84, -1000, 206, 533, -1000,
	-1000, 824, 2205, -1000, -1000, 845, -1000, 1189, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -2, -36, -36,
	-1000, 836, -1000, 836, -1000, 836, -1000, 84694, -1000, 1358,
	1357, 74342, -1000, 16844, 74342, 61735, 16844, 61735, 2311, 2310,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 949, -1000,
	1415, 1708, -1000, 532, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1974, -1000, -24, 24287, 1851, -1000, -1000,
	61735, -6, 31779, 31779, 7610, 5641, 31779, 34539, 34539, -1000,
	31779, 4539, -1000, -1000, -1000, -1000, -1000, 2203, 530, 31779,
	85210, 4748, 4038, -1000, 353, 9183, 460, -1000, 31779, -1000,
	352, 23827, -1000, 83314, -40, -89, -1000, 11931, -194, -90,
	-1000, -1000, 705, -1000, 2460, -1000, 31779, 83544, 1878, 1773,
	1501, 1376, 2790, 2809, 14170, -1000, 44222, 861, 1668, -1000,
	-1000, 2790, 810, -1000, -1000, -1000, 810, -1000, 81139, -1000,
	-1000, -1000, -1000, 85210, 85210, 31779, 31779, -1000, 31779, 31779,
	31779, -1000, -1000, 31779, -1000, -1000, 2201, 31779, -1000, 85210,
	85210, 34539, 34539, 34539, 34539, 34539, 34539, 34539, 34539, 34539,
	34539, 34539, 34539, 34539, 34539, 34539, 34539, 34539, 34539, 34539,
	2011, 34539, 2772, 2772, 2772, -1000, 2300, 2201, 31779, 31779,
	85210, 347, 346, 345, -1000, 31779, -194, -1000, -1000, 6138,
	-1000, 2160, -1000, 31779, -1000, -85, -1000, 2091, -1000, -1000,
	2160, 2160, -91, 84694, 38088, 38088, -1000, 529, 31779, 2036,
	-1000, -1000, 685, -243, -1000, 746, -1000, -1000, -1000, -1000,
	-1000, 457, -1000, -1000, -1000, 205, 66496, 66496, 684, -1000,
	-92, -1000, -1000, -97, -1000, 2714, 343, 16844, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -36, 1688, 2807, -1000,
	2791, 694, 682, 2790, 342, 341, 337, -36, 74342, -1000,
	-28, -1000, -1000, -1000, 31779, -1000, -1000, 2598, 1058, 1055,
	-1000, 2411, -1000, 1881, -1000, 889, -1000, 1442, -1000, 31779,
	31779, 528, 527, 1535, 2840, 912, 2410, 1780, 2408, 1780,
	-1000, -1000, 809, -1000, 84694, 526, 525, -1000, -29, 1372,
	844, -1000, -1000, 31779, 31779, 66065, -1000, 365, 2592, -7,
	-1000, 1054, -1000, -1000, -1000, -1000, 3723, 1052, -1000, -1000,
	-1000, 841, -1000, -1000, 31779, -1000, -32, 1038, -1000, -1000,
	-1000, 45977, -1000, -1000, -1000, 50862, 824, -1000, 2839, 2838,
	2837, 336, -98, -34, 85210, 2709, 1776, 547, 61735, 771,
	-1000, 2787, -1000, -1000, -1000, 61735, 2708, 2407, 840, 840,
	-1000, 2836, -1000, 909, 16844, 61735, 2403, 1996, 738, 52163,
	-1000, 840, 1668, -61, -1000, 1443, 23355, 2586, -100, -1000,
	-1000, -1000, 860, 43787, 38088, 31779, 2834, -103, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 65634, 65634, 50862,
	50862, 50862, 824, 74342, 74342, 53025, 2833, 524, 74342, 74342,
	523, -1000, 74342, 74342, 2831, 50862, -1000, 115, -1000, 1684,
	61735, 13725, -1000, -1000, -1000, -1000, -1000, 836, -1000, -1000,
	1593, 1841, 1593, 1435, 1433, -1000, 1701, -1000, -1000, -1000,
	-1000, 2071, 2591, 16844, 2717, 10110, 31779, 31779, 4076, 1069,
	506, 10110, 31779, 31779, 85210, 10905, -105, 31779, 31779, -1000,
	31779, 681, 84694, 2806, 31779, 332, 329, -1000, -1000, -1000,
	2788, -1000, -1000, -1000, 84694, 31779, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 327, -1000, 204, -1000, -1000, -1000, 78652,
	-1000, 31779, 325, 319, -1000, -1000, -1000, 317, 313, 7400,
	4833, 80847, 80804, 80512, 84694, 2300, 84694, -1000, -1000, 701,
	701, 1161, 1161, 1161, 1161, 2772, 1182, 1314, 1725, 550,
	550, 550, 882, 1294, 1294, 550, 550, 550, 2187, 2006,
	522, 5126, -1000, -1000, 84694, 84694, 311, -1000, -1000, -1000,
	-194, 310, 2155, 2641, 84694, -1000, 38088, 2155, 2155, -1000,
	-1000, 2015, 74342, 84694, 38088, -1000, 2454, -1000, 12386, -1000,
	16844, -1000, -1000, -1000, -1000, 2787, -1000, 41173, -1000, 521,
	-1000, 28, -1000, -1000, 619, 2830, 693, 289, -1000, -1000,
	-1000, -36, 84694, 74342, 74342, 74342, 2401, -1000, 2649, -1000,
	80282, -108, -1000, 82561, 31779, 74342, -1000, 1498, 2033, 976,
	-1000, 2618, 74342, -1000, 74342, -1000, -1000, 74342, 74342, 61735,
	2386, -111, 84694, -38, -1000, 745, -1000, 1168, -1000, 13280,
	61735, 61735, 2377, -114, 16844, -1000, -1000, -44, -1000, -1000,
	-1000, -1000, 2120, -1000, 64327, 1730, 115, -1000, 65199, 2828,
	520, -1000, 1676, -1000, 562, 3723, 115, 61735, -1000, -1000,
	-1000, 518, 74342, 1728, 517, 16844, 1998, 738, 52163, -1000,
	1080, 2073, -1000, -52, -1000, 515, 115, 1668, -1000, -61,
	84694, -1000, 744, -1000, -116, -1000, -1000, 287, -1000, 2553,
	2551, -1000, -1000, 31779, 509, 503, 74342, 2546, -1000, -1000,
	-117, -1000, 1889, -1000, -1000, -1000, -1000, -1000, 16844, 1366,
	-1000, 493, 492, -1000, -1000, -1000, -1000, 2591, 10110, 10110,
	31779, 31779, 31779, 10110, 10905, -119, -1000, 10110, 10110, -194,
	-1000, -1000, 83314, -1000, -1000, -1000, 84694, -1000, 12835, 1603,
	-1000, 79990, -1000, -1000, -1000, -1000, 31779, 31779, -1000, -1000,
	-1000, -1000, -1000, 34539, 2186, 491, 85210, -1000, -1000, 847,
	31779, 31779, 2091, 847, 847, -1000, -122, -1000, -1000, -1000,
	2787, 28, -1000, -1000, 2823, 16844, 691, -1000, 2819, -1000,
	-1000, -1000, -1000, 74342, -1000, 74342, -1000, 16844, 74342, 2183,
	1870, -1000, -1000, 2018, 485, 34539, 61735, 775, 2195, 1521,
	31779, 1851, -124, -130, 1866, -1000, -1000, 1854, 31779, -1000,
	85210, 481, 1780, 1780, -133, -135, -1000, 31779, 1037, 74342,
	22895, -1000, 2818, 2592, -1000, -1000, 31779, 1024, -1000, 1586,
	2140, -1000, -1000, -1000, -1000, 2014, -1000, -1000, 74342, 2008,
	825, -144, -1000, 743, 741, -1000, 53025, 819, 807, -1000,
	-1000, -1000, 457, 31779, -1000, 61735, 31779, 1715, -1000, 738,
	52163, -1000, 2470, 1443, -1000, 2482, 74342, 2583, -1000, 2073,
	478, -1000, 824, 477, 476, -146, 31779, 31779, -147, 474,
	824, -140, -1000, 734, 730, -1000, -1000, 61735, 61735, 31779,
	31779, -1000, 10110, 10110, 10110, -1000, 278, -1000, -1000, 1668,
	2639, -1000, 79947, 79655, 449, 34539, 85210, -149, -1000, 74342,
	84694, -194, -1000, -1000, -1000, 514, -1000, 2817, -1000, -1000,
	2794, -1000, -1000, -1000, 74342, 1880, -1000, 910, 31779, 5126,
	473, 31779, -1000, -1000, 2117, 2240, 2120, 471, -1000, -1000,
	-1000, -1000, 905, 1499, -1000, -1000, 84694, 2622, 31779, -1000,
	-1000, 470, 468, 84694, 467, 736, 2181, -1000, -1000, -1000,
	84694, 466, 819, -1000, 1617, 1730, 464, -1000, -1000, -1000,
	2045, -1000, 65199, 35444, 35444, 275, 2707, 807, -1000, 2779,
	-1000, 2706, -152, 909, -154, 61735, 52163, -1000, 1996, -1000,
	1126, -155, 74342, 1443, -1000, -1000, 50862, 50862, 905, -157,
	-160, -1000, 50862, -1000, 1889, -1000, 74342, -1000, 74342, -1000,
	-1000, -165, -170, -1000, 1781, 31779, -1000, -1000, 449, -173,
	-1000, -172, -1000, 2701, -1000, -1000, -1000, -1000, 2399, 2153,
	79425, 1965, 74342, 79133, 2226, -1000, -1000, 1586, 74342, 2120,
	2152, 61735, 908, 16844, -175, 1593, 1593, 31779, 22435, 1611,
	31779, -1000, 61735, 74342, -1000, 2545, -1000, -1000, -1000, 2120,
	115, -1000, -1000, 115, 905, 462, 1521, 461, -1000, 1998,
	1297, -1000, 860, -1000, -1000, -176, -181, 1521, 905, -1000,
	-183, -1000, -189, -201, -1000, -1000, 273, 32699, 32699, 32699,
	-194, -1000, 74342, 458, 2376, 831, -1000, 1693, 1591, 269,
	929, -1000, -1000, 2195, -203, -1000, 829, 457, -1000, 31779,
	-1000, 905, -206, -1000, 895, -211, -1000, 892, -212, -1000,
	2179, -1000, -213, 446, -218, -1000, -1000, -1000, 1586, 825,
	-1000, 1521, 31779, 2120, 31779, -1000, 43787, -1000, 824, 824,
	2120, 1521, 824, -1000, -1000, -1000, 2437, -1000, 35889, 1744,
	1428, 82518, 2437, 2437, -1000, -1000, 74342, 2668, -1000, 1714,
	1712, 1246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2660, 1965, 84694, 2120, -1000, 1593, 2139, -1000, 1593, 2171,
	-1000, 1582, -1000, 74342, -1000, 74342, 819, -1000, 2120, -219,
	1586, -221, -204, -1000, -1000, 1586, 2120, -1000, -1000, 1466,
	2722, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 732,
	-1000, 2527, -1000, 942, 1633, 1633, 724, 1693, -1000, -1000,
	436, -1000, 435, -1000, -226, -1000, -1000, 1586, 905, 851,
	1521, -1000, -1000, 1586, 1411, -1000, -1000, 1664, 32239, 31779,
	-1000, 2759, -1000, -1000, 2016, -1000, 31779, 2195, 31779, 31779,
	1774, 851, 1521, -1000, 2800, 2120, -1000, -1000, -1000, -1000,
	84694, -1000, -1000, -1000, 84694, -1000, -227, -228, -1000, -1000,
	-1000, -1000, 2120, -1000, 1586, 1586, 1011, 1586, 851, -1000,
	434, 851, -1000, 31779, -1000, -229, 1586, -1000,
}
var sqlPgo = [...]int{

	0, 3531, 3530, 3529, 3528, 3527, 3525, 3524, 3523, 3522,
	3514, 3512, 3511, 3510, 3509, 3506, 3505, 3504, 3502, 3501,
	3500, 3499, 3498, 3495, 3493, 3492, 3489, 3487, 3486, 3482,
	3480, 3479, 3478, 3477, 3476, 3475, 3474, 3472, 3471, 3468,
	3465, 3464, 3463, 3459, 3458, 3457, 3455, 3452, 36, 3451,
	3450, 3448, 3445, 3443, 3442, 3441, 3439, 3437, 3431, 3429,
	3425, 3423, 3418, 3415, 3407, 3404, 50, 3401, 224, 3394,
	3386, 3385, 3384, 3383, 3382, 3378, 3373, 3372, 3369, 223,
	3368, 148, 3367, 3365, 3364, 3363, 3362, 222, 3361, 3360,
	3355, 3354, 3352, 3351, 3347, 3346, 156, 201, 3343, 61,
	3342, 3341, 3340, 3339, 3338, 3337, 3336, 3334, 3329, 3328,
	200, 3327, 220, 3326, 3325, 3324, 3322, 3321, 3320, 3317,
	3316, 3315, 3308, 3306, 3305, 3304, 3303, 3302, 3300, 3297,
	3295, 3292, 3290, 3287, 3285, 3260, 3259, 3258, 3257, 3255,
	3254, 227, 141, 3253, 3252, 218, 217, 3250, 125, 97,
	99, 71, 3247, 92, 49, 3246, 17, 139, 205, 6419,
	190, 3245, 3244, 3237, 199, 152, 3234, 188, 3232, 3231,
	3230, 3229, 81, 69, 136, 137, 131, 133, 90, 3227,
	3223, 75, 59, 34, 32, 3222, 3221, 3217, 2020, 96,
	3216, 219, 197, 129, 3215, 3213, 3212, 1386, 3210, 189,
	135, 103, 31, 94, 3209, 108, 21, 3206, 130, 37,
	3205, 126, 72, 33, 6303, 7942, 3204, 84, 231, 83,
	208, 180, 174, 186, 168, 140, 1204, 3202, 204, 3201,
	74, 157, 3200, 3199, 3198, 62, 153, 79, 3197, 6,
	2, 127, 13, 93, 20, 3196, 12, 3194, 3192, 3191,
	3190, 24, 128, 3189, 115, 105, 3188, 29, 3187, 18,
	167, 3184, 191, 100, 3183, 3182, 212, 158, 169, 3181,
	10, 183, 3180, 3172, 3167, 3164, 3160, 114, 23, 98,
	3156, 3153, 102, 192, 154, 3152, 35, 3151, 134, 76,
	119, 221, 109, 162, 89, 182, 142, 185, 3150, 3149,
	3143, 150, 3138, 3137, 177, 138, 3133, 3132, 228, 40,
	54, 193, 58, 151, 117, 3131, 172, 3127, 3126, 3124,
	226, 143, 176, 9, 4, 65, 95, 28, 14, 187,
	124, 206, 80, 3122, 3743, 294, 1744, 57, 111, 85,
	55, 101, 123, 216, 52, 3121, 3120, 589, 3119, 3118,
	3117, 3115, 146, 3114, 3113, 3112, 113, 132, 170, 3110,
	116, 68, 11, 91, 202, 230, 86, 181, 160, 207,
	3109, 145, 3107, 38, 106, 3103, 163, 203, 195, 3102,
	338, 120, 3101, 166, 3100, 3098, 3097, 3096, 3094, 3093,
	3092, 173, 3090, 110, 3089, 3088, 214, 149, 3087, 210,
	118, 239, 77, 43, 3086, 73, 104, 3085, 165, 56,
	3083, 2868, 67, 0, 7731, 4860, 7126, 3082, 1499, 3078,
	159, 107, 3077, 3076, 3068, 88, 3067, 64, 3065, 3063,
	53, 3058, 15, 7, 8, 19, 16, 1304, 951, 3056,
	3054, 87, 112, 121, 3053, 229, 184, 3052, 3050, 3048,
	70, 3047, 30, 3042, 26, 3037, 3036, 27, 5, 22,
	3034, 3033, 194, 3031, 196, 3030, 3029, 2730, 161, 3024,
	3023, 215, 66, 3014, 211, 3013, 144, 164, 3012, 3007,
	3006, 3001, 209, 3000, 2685, 2997, 25, 1, 2996, 2995,
	155, 3, 2533, 2990, 2989, 63, 2988, 2985, 147,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 12, 12, 7, 7, 8, 8,
	8, 36, 36, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 15, 15, 26,
	26, 16, 16, 28, 28, 17, 17, 29, 29, 471,
	471, 20, 31, 21, 32, 14, 472, 472, 472, 472,
	25, 22, 33, 23, 23, 23, 23, 23, 152, 152,
	152, 152, 19, 19, 27, 27, 175, 175, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	470, 470, 177, 177, 176, 171, 171, 473, 473, 178,
	178, 178, 180, 180, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 153, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 411, 411, 412, 412,
	148, 148, 149, 149, 149, 149, 150, 150, 151, 151,
	151, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 142,
	142, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 480, 480, 481, 481, 482, 482, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 253, 253, 229, 229, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 464, 464, 267,
	267, 375, 375, 68, 68, 287, 287, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 268, 268, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 377, 377, 80,
	80, 80, 345, 345, 84, 84, 84, 302, 302, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 98, 98,
	98, 98, 467, 467, 260, 260, 191, 191, 191, 191,
	91, 91, 91, 91, 92, 92, 92, 93, 93, 147,
	147, 104, 104, 104, 104, 104, 103, 103, 103, 103,
	103, 103, 43, 43, 43, 44, 44, 45, 45, 46,
	46, 47, 47, 48, 48, 48, 48, 48, 106, 106,
	476, 476, 108, 105, 105, 105, 107, 107, 107, 107,
	109, 110, 110, 110, 110, 110, 110, 110, 110, 111,
	111, 405, 405, 276, 276, 403, 403, 419, 419, 404,
	404, 233, 233, 233, 233, 233, 234, 234, 234, 410,
	410, 410, 410, 410, 410, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 131,
	131, 131, 141, 141, 141, 141, 141, 141, 141, 134,
	134, 134, 121, 121, 113, 113, 113, 113, 113, 117,
	117, 117, 117, 117, 117, 117, 117, 114, 114, 123,
	123, 123, 123, 123, 118, 118, 120, 120, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 115, 115, 115,
	115, 125, 125, 125, 125, 308, 308, 308, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 137, 137,
	137, 137, 137, 137, 359, 359, 132, 132, 132, 132,
	136, 136, 136, 136, 292, 292, 129, 129, 129, 130,
	130, 130, 135, 135, 133, 133, 138, 138, 138, 138,
	116, 116, 116, 485, 485, 485, 139, 139, 128, 128,
	140, 140, 140, 140, 140, 140, 140, 140, 127, 127,
	127, 126, 126, 126, 126, 119, 465, 465, 462, 462,
	462, 462, 462, 462, 462, 463, 463, 466, 466, 89,
	89, 89, 58, 58, 156, 156, 156, 156, 154, 154,
	155, 155, 59, 59, 486, 486, 486, 474, 474, 474,
	475, 475, 475, 475, 475, 475, 235, 235, 236, 236,
	326, 326, 326, 326, 326, 239, 239, 179, 179, 179,
	242, 243, 243, 240, 240, 241, 241, 241, 245, 245,
	244, 247, 247, 246, 325, 426, 426, 428, 428, 428,
	428, 428, 428, 428, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 424, 424, 424, 425, 420,
	420, 421, 421, 421, 421, 237, 237, 238, 238, 238,
	238, 422, 423, 258, 258, 362, 427, 427, 429, 429,
	431, 487, 487, 487, 487, 487, 487, 488, 488, 324,
	324, 323, 323, 251, 251, 432, 432, 432, 432, 433,
	433, 433, 433, 433, 436, 435, 434, 434, 434, 434,
	434, 62, 62, 62, 289, 289, 288, 288, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 144, 144, 194, 194, 60, 60, 60,
	57, 57, 57, 10, 10, 10, 13, 13, 13, 484,
	484, 61, 61, 61, 61, 193, 193, 193, 193, 193,
	193, 469, 469, 468, 468, 195, 195, 490, 490, 67,
	67, 67, 67, 67, 67, 56, 56, 56, 56, 56,
	491, 491, 309, 309, 307, 307, 257, 257, 361, 198,
	198, 172, 172, 172, 24, 18, 18, 34, 34, 35,
	35, 30, 30, 477, 477, 478, 478, 90, 90, 94,
	94, 94, 102, 102, 143, 143, 143, 143, 143, 143,
	143, 38, 38, 38, 38, 50, 50, 50, 50, 100,
	493, 493, 493, 101, 101, 101, 492, 492, 192, 192,
	320, 320, 321, 321, 494, 494, 322, 322, 322, 322,
	186, 185, 187, 187, 55, 55, 55, 181, 181, 182,
	182, 183, 183, 184, 184, 495, 495, 87, 87, 87,
	146, 146, 228, 228, 228, 316, 316, 316, 252, 252,
	203, 203, 319, 319, 317, 317, 317, 317, 286, 286,
	286, 145, 145, 265, 265, 278, 278, 279, 279, 372,
	372, 280, 99, 99, 159, 159, 157, 157, 157, 157,
	157, 157, 157, 157, 164, 164, 165, 165, 166, 166,
	167, 168, 168, 168, 168, 269, 269, 169, 169, 169,
	158, 158, 158, 160, 160, 160, 160, 160, 160, 160,
	163, 163, 163, 163, 170, 170, 170, 162, 162, 443,
	443, 443, 445, 445, 446, 442, 442, 444, 444, 489,
	489, 291, 291, 291, 249, 250, 248, 248, 255, 255,
	254, 256, 256, 360, 360, 360, 173, 173, 173, 283,
	283, 283, 283, 284, 284, 312, 312, 310, 310, 310,
	310, 311, 311, 313, 313, 313, 314, 314, 315, 315,
	282, 282, 341, 341, 161, 161, 161, 262, 262, 262,
	263, 263, 332, 332, 332, 332, 332, 332, 333, 333,
	331, 331, 331, 331, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 364, 365, 365, 264, 264, 366, 318,
	318, 460, 460, 460, 461, 461, 358, 358, 367, 367,
	367, 367, 367, 367, 356, 356, 357, 357, 373, 374,
	374, 295, 295, 295, 295, 293, 293, 296, 296, 296,
	296, 294, 294, 368, 368, 368, 368, 285, 285, 369,
	369, 369, 369, 370, 327, 328, 328, 378, 378, 378,
	378, 393, 261, 261, 261, 261, 261, 496, 496, 379,
	379, 379, 379, 379, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 383, 383, 383, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 392, 392, 392,
	392, 392, 384, 384, 389, 389, 390, 390, 390, 385,
	386, 391, 391, 391, 391, 497, 497, 395, 395, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 381, 381,
	381, 388, 388, 388, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 303, 303, 305,
	305, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 336, 336, 336, 336,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 437, 437, 437, 437, 437,
	437, 437, 437, 440, 440, 441, 441, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 447, 447, 448, 448,
	450, 450, 451, 451, 452, 453, 453, 453, 454, 455,
	455, 449, 449, 456, 456, 456, 456, 457, 457, 458,
	458, 458, 458, 458, 459, 459, 459, 459, 459, 347,
	347, 348, 348, 354, 354, 354, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 196, 196, 196, 196, 196, 274, 274, 272,
	272, 272, 275, 275, 273, 273, 271, 271, 270, 270,
	344, 344, 342, 342, 346, 346, 297, 297, 394, 394,
	394, 394, 394, 394, 394, 394, 298, 298, 298, 306,
	299, 299, 300, 300, 300, 300, 300, 338, 339, 301,
	301, 301, 340, 340, 349, 353, 353, 352, 351, 351,
	350, 350, 329, 329, 330, 330, 281, 281, 498, 498,
	277, 277, 371, 371, 371, 371, 231, 231, 266, 266,
	230, 230, 223, 223, 224, 224, 224, 224, 259, 259,
	355, 355, 396, 396, 397, 397, 398, 398, 399, 399,
	400, 401, 402, 343, 343, 213, 212, 200, 201, 211,
	210, 209, 199, 202, 206, 207, 208, 204, 205, 219,
	218, 217, 215, 216, 376, 225, 225, 226, 226, 226,
	227, 227, 227, 227, 197, 197, 220, 220, 221, 222,
	222, 214, 214, 214, 188, 188, 188, 189, 189, 190,
	190, 409, 409, 407, 407, 407, 408, 408, 408, 408,
	406, 406, 406, 406, 406, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 415, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 418, 418,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 2, 6, 4,
	7, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 3, 2,
	4, 3, 3, 5, 4, 3, 5, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 3, 3, 4, 3, 3, 3,
	3, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 3, 4, 10, 10,
	3, 5, 5, 5, 3, 5, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 1, 2, 0, 3,
	3, 2, 10, 13, 0, 2, 4, 3, 3, 3,
	1, 3, 9, 12, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 9, 10, 6, 5, 3,
	1, 5, 8, 7, 11, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 8, 11, 7, 5, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 6,
	7, 6, 5, 3, 4, 15, 18, 14, 17, 4,
	0, 2, 2, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 6, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 2, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 474, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -143, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -144, -145, -146, 86, 72,
	128, 109, 114, 161, 300, 330, 340, 324, -107, -108,
	359, -38, -50, -101, -100, -4, -13, -10, 27, 41,
	-40, -41, -42, 57, -57, -60, -54, -63, -479, 88,
	-444, -71, -74, -76, -483, 119, 134, 178, 292, -92,
	-93, 326, 328, 135, -45, -44, 129, -157, -159, -105,
	-106, -147, -113, -114, -115, -116, -117, -118, -119, -120,
	-121, -122, -123, -124, -125, -126, -127, -128, -133, -129,
	-130, -131, -132, -134, -135, -136, -137, -138, -139, -140,
	363, 410, 42, 373, 73, 122, 334, 21, -5, -6,
	-7, -8, -9, -11, -12, -53, -55, -56, -58, -59,
	-67, -61, -62, -443, -72, -73, -75, -77, -78, 325,
	-160, -158, 471, 424, -15, -20, -21, -16, -17, -19,
	-22, -18, -26, -31, -32, -28, -29, -27, -30, -33,
	-34, -35, -36, -24, -25, -14, -23, 442, 450, -163,
	-161, -162, -170, 347, 432, 387, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, -215, -220, -221, -222,
	-214, -188, -415, -418, 4, -413, -416, 140, 185, 258,
	21, 22, 23, 24, 25, 27, 38, 40, 39, 41,
	42, 45, 48, 49, 47, 52, 53, 54, 55, 56,
	57, 58, 61, 66, 71, 72, 73, 74, 75, 76,
	81, 78, 79, 80, 83, 85, 86, 87, 89, 91,
	92, 100, 101, 102, 103, 104, 105, 109, 112, 111,
	114, 117, 118, 119, 121, 123, 124, 126, 128, 129,
	132, 130, 393, 131, 133, 134, 135, 136, 146, 147,
	148, 150, 151, 153, 155, 159, 160, 162, 166, 168,
	169, 170, 171, 177, 178, 180, 181, 186, 182, 187,
	191, 194, 193, 195, 196, 197, 188, 202, 206, 207,
	208, 210, 211, 214, 215, 216, 217, 218, 221, 220,
	223, 226, 227, 230, 231, 234, 235, 236, 237, 239,
	240, 243, 241, 244, 242, 245, 248, 246, 247, 250,
	251, 256, 254, 252, 253, 260, 263, 175, 265, 266,
	268, 269, 270, 286, 273, 274, 275, 278, 279, 282,
	285, 287, 288, 289, 290, 291, 292, 293, 295, 296,
	298, 300, 302, 304, 305, 306, 307, 308, 309, 310,
	312, 313, 315, 316, 317, 318, 319, 324, 321, 322,
	323, 325, 326, 327, 328, 330, 332, 333, 334, 335,
	337, 339, 360, 361, 375, 340, 341, 342, 343, 344,
	345, 346, 350, 354, 351, 352, 353, 348, 349, 355,
	356, 357, 359, 362, 363, 365, 366, 368, 369, 371,
	372, 373, 374, 376, 379, 380, 381, 377, 378, 386,
	384, 385, 388, 389, 390, 391, 392, 394, 396, 404,
	405, 407, 410, 411, 412, 402, 414, 415, 418, 419,
	420, 423, 421, 422, 428, 424, 426, 429, 430, 431,
	437, 436, 443, 444, 446, 447, 448, 33, 43, 44,
	46, 50, 62, 63, 64, 67, 106, 107, 127, 137,
	138, 149, 163, 165, 172, 173, 174, 192, 198, 200,
	204, 224, 262, 264, 280, 284, 297, 299, 311, 336,
	367, 382, 397, 398, 399, 400, 406, 408, 432, 433,
	434, 438, 445, 271, -208, 2, -188, -188, 300, 26,
	2, 26, 296, 349, 389, 391, 2, -467, -260, 2,
	26, -191, -188, 88, 161, 347, -208, 2, -467, -260,
	24, 2, -188, 2, -192, 2, 340, -188, 474, 83,
	231, 66, 336, 356, -110, 405, -109, 397, 342, -111,
	-405, 2, 248, -188, 474, 474, 474, 474, 474, 2,
	387, 289, 436, 348, 102, 308, 185, 425, -484, 332,
	164, 401, -462, 2, 4, -416, -413, -224, -223, 387,
	102, -222, -214, 464, -221, 474, 474, 474, 2, 207,
	208, 307, 306, 356, 357, 474, 474, 474, 2, 25,
	60, 82, 85, 108, 136, 156, 159, 276, -480, 240,
	286, 305, 342, 355, 386, 394, 407, -475, 374, 61,
	-474, 425, -484, 412, 117, -307, 102, 231, 160, 419,
	391, 389, 417, 112, 191, 422, 421, 474, 474, 25,
	60, 69, 85, 117, 136, 156, 159, -482, 286, 305,
	339, 342, 355, 386, 394, 412, 407, 2, 436, 348,
	387, 185, 102, 425, -484, 303, -81, 2, 471, 29,
	28, 52, 359, -153, 387, 201, 2, -188, 207, 208,
	2, 474, 474, 157, -462, 2, 207, 208, 2, 201,
	2, 61, 344, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 2, -141, 356, 374, 170, 41, 66, 26, 304,
	71, 290, 103, 162, 185, 186, 215, 82, 83, -308,
	40, 208, 207, -359, 388, 343, 349, 384, 340, 405,
	88, 426, 333, 448, 308, 309, 130, 4, 102, 248,
	358, 397, 231, 75, -489, 2, 387, -492, 2, 405,
	405, 2, -492, 2, -492, 2, -492, 2, -493, 405,
	445, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, -158, -160, -159, 474, 474, 474,
	474, 474, -141, 356, 2, 66, 26, -254, -255, 416,
	199, 125, 277, -157, -159, 2, -443, -403, 2, -334,
	-419, -336, 462, 463, 455, 257, 449, -347, 108, 417,
	271, -418, -337, -349, 127, 336, -275, 8, 9, 5,
	6, 7, -197, -380, -343, 409, 139, 261, -227, 475,
	10, 471, -440, -159, -348, 34, 165, 59, -407, -226,
	-382, -390, -386, -387, -496, 48, 55, 54, 394, 247,
	350, 351, 368, 352, 353, 45, 428, 182, 268, 270,
	193, 4, 200, -225, -214, -437, -438, -413, -414, 192,
	198, 194, 367, 195, 196, 197, 44, 311, 150, 151,
	149, 118, 107, 106, 264, 50, 49, 46, 433, -391,
	104, 397, 398, 399, 400, 210, 211, -188, -415, 69,
	94, 95, 93, 98, 97, 233, 232, 99, 96, 358,
	425, 60, 33, 172, 173, 204, 262, 174, 67, -439,
	378, 90, 158, 190, 176, 203, 205, 209, 225, 228,
	249, 255, 259, 281, 283, 331, 364, -497, 434, 137,
	138, 284, 297, 382, 406, 408, 163, 224, 62, 63,
	-445, 312, -446, -208, -445, 474, 474, 476, 474, -248,
	-249, -250, 2, 26, 115, 471, 2, -363, 2, -364,
	-368, -159, 219, -367, 471, -365, 469, -215, 272, -441,
	337, -437, -438, -197, -214, -226, 4, -251, 471, 473,
	102, 387, 70, 185, -302, 471, -188, 26, 271, 401,
	476, -345, 471, 271, 157, 274, -188, 2, 2, 360,
	2, 471, -110, 64, 405, 39, 356, -321, 2, -322,
	-185, -186, -187, -373, 206, 302, 310, 451, 448, -403,
	-476, 157, 454, 401, -403, -276, 473, 2, -368, 172,
	-215, 2, -212, -406, 4, -413, -416, -414, -417, 69,
	-415, 26, 28, 29, 30, 32, 34, 35, 36, 37,
	51, 59, 60, 65, 68, 70, 82, 88, 93, 94,
	96, 95, 97, 98, 99, 108, 110, 113, 115, 116,
	120, 122, 125, 139, 141, 154, 156, 157, 161, 164,
	167, 179, 189, 199, 201, 219, 222, 229, 232, 233,
	257, 261, 267, 271, 272, 276, 277, 294, 301, 314,
	329, 347, 358, 370, 383, 387, 395, 401, 403, 409,
	416, 417, 425, 427, 435, 439, 440, 441, 442, -418,
	2, -368, 172, 2, -217, 172, -368, -220, 2, -199,
	-188, 2, -211, -406, 2, -230, 172, -215, -216, -220,
	-411, 172, 2, -409, 10, -408, 5, 4, -413, -416,
	-414, -411, 172, 2, -96, -411, 471, 401, 476, -266,
	-223, -224, -259, -188, 473, -334, 2, -99, 2, -334,
	172, 2, -99, 172, 2, -334, 172, 2, -99, 172,
	2, 2, 2, 407, 2, 85, 172, -188, 387, 101,
	2, 323, -481, 339, 411, 436, 2, 2, 2, 2,
	2, 2, 2, 387, -204, 2, -188, 154, 348, -490,
	312, -411, 172, 2, -411, 172, 2, -218, -220, -218,
	185, 202, -199, 172, 2, 391, 389, 391, 389, 157,
	2, 201, 2, 201, 2, -369, 2, -370, -364, -215,
	469, 2, 2, 2, 2, 2, 172, -188, 387, 101,
	2, 217, 2, 2, 2, 2, 2, 2, 2, 2,
	2, -268, 172, 2, -215, -268, 172, 2, -268, 172,
	2, -231, 172, 2, -230, -199, 172, 2, -412, 172,
	2, -411, -412, 172, 2, -377, 2, -376, -408, 432,
	-81, 471, -81, 471, -81, 356, 471, -411, -215, -215,
	-334, -99, -97, -96, 157, -334, -99, -153, 154, 2,
	102, 387, -141, 2, 154, 427, 2, 8, 2, -411,
	343, 309, 146, 2, 360, 2, 361, 66, -308, 448,
	66, 157, 2, 157, 2, -292, 2, 442, -465, 2,
	271, 157, 2, 157, 2, 157, 2, 157, 2, 157,
	2, 306, 357, 208, 2, -99, 439, -334, 439, 2,
	404, 216, 131, 157, -292, 2, 157, 2, 157, 2,
	5, 2, 375, 2, 206, 302, 375, 2, -215, -485,
	2, 387, 436, 348, 2, 2, 78, 79, 157, 2,
	157, 2, 157, 448, 2, -285, -368, -320, -321, -320,
	401, -254, -255, -141, 360, 2, -164, -283, -166, 154,
	-310, -311, -167, 229, 141, 267, -168, -291, 26, 115,
	-291, -291, 53, 472, 472, 11, 12, 68, 38, 462,
	463, 464, 465, 152, 466, 467, 460, 461, 459, 452,
	453, 457, 212, 213, 84, 456, 454, 77, 238, 338,
	142, 143, 144, 145, 320, 183, 31, 184, 14, 15,
	16, 30, 276, 228, 449, 176, 364, 455, 17, 18,
	19, 203, 205, 259, 43, 179, -196, -232, -334, -334,
	-334, -334, -334, 283, 471, -281, -329, 469, -159, 471,
	471, 471, 5, -402, 8, -159, -334, -347, 472, -273,
	471, -159, -347, -342, 471, 336, 469, 471, -350, -334,
	5, 471, 473, -447, 443, -384, 471, 299, -383, 471,
	-383, -383, 437, -381, 471, 450, 444, 471, -381, 471,
	471, 154, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 437, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 476, -445, -251,
	471, -277, -371, -334, 464, -277, -277, 271, -270, -334,
	90, -295, 209, 249, 158, 225, 331, 190, -331, 475,
	-331, -358, 450, -159, -365, -214, -159, -367, 471, -363,
	-358, -82, -402, -68, -79, -87, -99, -112, -145, -146,
	464, -215, 471, 157, 471, 473, 157, -259, -406, -199,
	-215, -225, -226, -230, 114, -270, -462, -259, -191, 35,
	-344, -378, -379, -380, -389, -385, -388, -392, 48, 55,
	54, 394, 247, 350, 351, 368, 352, 353, 45, 428,
	182, 268, 270, 193, 4, 46, 433, -391, 200, 316,
	317, 315, 319, 318, 192, 198, 194, 367, 195, 196,
	197, 44, 311, 150, 151, 149, 118, 107, 106, 264,
	50, 49, 104, 397, 398, 399, 400, 210, 211, 434,
	378, 62, 63, -462, -259, 154, -405, -270, 35, -321,
	2, 108, -409, 39, -494, 476, 227, -234, 237, 256,
	169, 272, 446, 265, -410, 5, 4, -343, -355, 108,
	231, 200, -396, -398, 8, -397, 9, -399, 462, 463,
	-404, -403, 92, 473, -406, -175, 321, -174, 23, 27,
	119, 430, 132, -241, 187, 289, 127, 371, 420, -471,
	-472, 341, 392, 393, 80, 265, 321, 127, -288, -290,
	35, 100, 251, 285, 56, 180, 242, 243, 373, 438,
	127, 321, -472, 321, -472, -177, 371, 420, -471, -472,
	341, 321, -176, -241, 127, 475, -468, -442, 442, 127,
	-468, 127, -374, -373, -412, -96, -266, 476, 476, -406,
	464, 127, 127, 127, 127, 2, 2, 257, 2, 2,
	2, 159, -474, -482, 2, 2, 2, -215, 172, -253,
	271, -464, -267, 387, -215, -217, 172, 2, -220, 436,
	-468, 257, -468, 257, 35, 471, 2, -201, 172, 2,
	-189, -188, 185, -442, 257, -369, -228, -215, -364, -228,
	359, -208, 35, -331, -331, 127, 2, 2, 2, -188,
	-178, 476, 58, 327, 127, -178, 127, -178, 127, -178,
	476, 127, -178, 127, 476, 127, 127, 472, 476, -377,
	-377, -411, -151, 442, 157, 88, 471, 471, -153, -374,
	476, -97, -411, -464, -199, 2, -215, 2, 387, 210,
	-151, -411, -411, -411, -405, 26, 361, 2, 306, 357,
	79, 361, 2, -215, 387, 102, 185, 72, -466, 154,
	-463, 332, -462, -215, 102, -215, 102, -215, 102, -215,
	-215, 2, 2, 2, 2, 76, 76, 154, 2, 404,
	2, 404, 2, -188, -188, -188, 227, -215, 154, 387,
	185, 387, 185, 102, 387, -178, 476, -192, -164, -283,
	-405, -284, -283, -165, -164, -167, 154, 310, 421, 251,
	362, 214, -311, -310, 26, -334, -315, 148, 250, -334,
	-313, -336, 462, 463, -397, -399, -269, 265, -158, -158,
	-158, -256, -360, -334, 301, 185, -393, -378, -378, -213,
	-406, 397, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, 228, 176, 364,
	43, 179, -334, 401, -334, -334, -334, -334, 246, 257,
	261, 409, 139, 418, 115, 265, -498, 383, 37, -340,
	-159, -274, 471, -354, 32, 370, 26, -347, 471, 2,
	-329, -334, -330, -271, -270, -270, 472, 435, 26, 115,
	464, 2, 472, 476, 35, 472, -334, -271, -346, -342,
	-270, -353, -352, 439, -303, -304, 447, 245, 105, 171,
	244, -305, 346, -400, 8, -406, 464, -448, 147, 164,
	8, -400, -400, 397, 397, -400, -400, -400, 471, 472,
	2, 472, 2, 472, -334, 2, 472, -334, 2, 472,
	-334, 2, 472, -334, 2, 472, 2, -334, -334, -334,
	-334, -334, -334, -334, -270, -297, 2, -394, -270, 4,
	447, 245, 105, 171, 244, 346, 5, -297, 2, -298,
	2, -334, -270, -299, -335, -336, 462, 463, 455, -347,
	-300, 2, -334, -271, -334, 51, 222, 403, -301, -334,
	157, -270, -270, 2, -270, 2, -446, 35, -270, -262,
	476, 157, 35, 4, -262, -262, 471, 472, 476, -296,
	168, 241, 236, -296, -363, -295, 209, -293, 281, -293,
	-293, -358, -200, 469, 477, -406, -358, -357, -356, 35,
	-208, 278, -358, -358, 473, 472, -357, 470, -460, 471,
	474, 474, 474, 474, 474, -215, 471, -270, -406, 376,
	472, 473, 203, 203, 203, 203, 337, 472, 401, 442,
	-81, 273, 472, 476, -261, 34, 469, -395, 437, 471,
	471, -304, 471, 157, -260, -476, 472, 405, -322, -233,
	310, 369, 322, 354, 385, 8, 9, 8, 9, 476,
	-406, 476, -477, 82, 401, 70, -325, 172, 70, -420,
	-202, 82, -421, -188, 65, 417, 301, 156, -477, 82,
	301, -477, 82, 82, 359, 374, 53, -368, 38, 38,
	26, -99, 223, 157, 448, 387, 185, 401, -368, -290,
	-378, 100, 242, 243, 53, -401, -396, 462, 463, -401,
	53, -401, -401, -401, 442, -217, -368, 401, 401, 476,
	38, 38, 26, -99, 223, 157, 401, -230, -200, -469,
	-193, 89, 252, 235, 253, -194, -195, 291, 429, -411,
	-411, -148, 181, 472, -374, -223, -188, 473, -334, -99,
	-334, -99, 127, 2, -490, 217, 471, -237, 257, 157,
	-259, -375, 201, 476, -267, -289, -288, 257, -219, 172,
	2, -215, 127, 127, 471, 123, 308, 2, 271, 257,
	-201, 172, -181, 390, 127, -287, 427, -316, -99, 471,
	108, 35, -316, -278, -279, -372, -280, -202, 471, -208,
	-188, 2, -215, -268, -268, -268, -230, -231, -199, -411,
	-412, -412, -81, -376, 472, 472, 472, -150, 275, -149,
	-188, 5, -153, 427, -236, -326, -325, -424, -425, -420,
	228, 185, 417, 202, 140, -252, -203, -202, 101, -151,
	-96, -374, -151, -151, -374, -374, -215, 154, -151, -151,
	-151, 2, 2, -292, -215, -199, -230, -215, -259, -259,
	-292, -199, -292, -199, -292, -199, -99, -334, 356, 154,
	154, 473, -292, 308, 102, 387, 289, 185, -215, -230,
	-215, -230, -199, -215, -368, -284, -165, 272, 214, 362,
	-313, -314, -336, 336, 337, -314, 336, 337, 8, 9,
	8, 9, -169, 366, 260, -268, 476, -172, 36, 113,
	214, -215, 448, 124, -334, -334, 401, -498, 383, -340,
	124, -334, 246, 261, 409, 139, 418, 115, 265, 157,
	471, -335, -335, 472, -272, -334, -334, 470, 479, 472,
	-255, 476, -254, -334, -270, -270, 472, 473, -270, -259,
	470, 470, 476, 472, -351, -352, 120, -334, 401, 401,
	401, 401, 471, 472, 473, -453, 282, 471, 471, 472,
	472, 476, 472, 448, 448, 472, 472, 472, -334, 472,
	472, 472, 472, 35, 476, 476, 476, 472, 476, 476,
	476, 472, 472, 157, 472, 472, -306, 294, 472, 11,
	12, 462, 463, 464, 465, 152, 466, 467, 460, 461,
	459, 452, 453, 454, 77, 238, 338, 14, 15, 16,
	203, 179, -335, -335, -335, 472, -338, -339, 157, 154,
	35, -301, -301, -301, 472, 157, -270, 472, 472, 471,
	472, -328, -327, 440, -371, -263, 2, -363, -210, -406,
	-328, -328, -270, -334, 209, 209, -294, 427, 271, -296,
	-363, -357, -402, -333, -332, 155, 36, 113, 254, 175,
	-357, -208, -251, -357, -357, -406, -358, -358, -356, 472,
	-461, -402, 472, -264, -366, -441, -255, 473, -151, -406,
	-142, 5, 261, -142, -142, -142, -259, 24, 295, -378,
	469, 470, 8, 471, -400, -400, -400, -259, 157, -403,
	-321, 415, 74, 310, 397, -403, -174, 321, -202, -202,
	-215, 257, -325, 172, -180, 257, -378, -209, -188, 471,
	471, 214, 214, -202, -209, 214, 172, -202, 172, -209,
	-209, -470, 310, 266, -334, 230, 308, 258, -175, 321,
	-99, -99, -99, 471, -476, 427, 114, -215, -230, -215,
	-219, 321, 255, -225, -401, -401, -288, 321, -217, -199,
	-176, -99, -99, -99, 471, -200, -177, 321, -193, -411,
	261, 423, -468, -468, -151, 157, -148, 464, -188, 436,
	-188, -235, -238, -236, -202, -156, 444, 442, 127, -229,
	-215, 469, -151, -411, -215, 127, -251, 257, -411, -411,
	2, 471, 2, -215, 127, 271, 257, -182, 121, -495,
	454, -199, -328, -263, -286, -319, 329, 271, -252, 432,
	-208, -286, -265, 476, 157, 454, 473, -252, 2, -178,
	-178, -178, -178, -178, -81, -81, -151, 476, 471, 454,
	454, 471, -411, -411, 472, 476, -215, -201, 185, 185,
	-207, -189, 472, 476, 473, 471, -151, 157, -46, 442,
	387, 475, -292, -292, -292, 356, 356, -188, -211, -199,
	-215, -212, -230, 154, 154, 421, -314, 272, 234, -360,
	-173, 263, -215, 475, -334, -334, 124, 124, -334, -335,
	-335, -334, 124, 157, 471, -334, -344, 30, 30, 472,
	476, -330, -334, 472, 435, -255, -255, 472, 464, -406,
	475, 472, -342, 122, -334, 395, 245, 171, 244, -305,
	244, -305, -305, -400, 5, -406, 464, -454, -205, 471,
	-188, 440, -254, -400, -381, -381, 472, -393, -378, -334,
	-334, -334, -334, -334, -334, -338, -334, -393, -378, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, 115, 257,
	265, -335, -339, -338, -334, -334, -378, 472, 472, 472,
	-270, -81, -282, 164, -334, -374, 476, -282, -282, 472,
	-363, -363, 471, -334, 209, 470, 476, 478, 454, -251,
	473, -356, -357, 470, 472, 476, 472, 476, -318, 35,
	472, -406, 274, 5, 8, 469, 470, -400, 472, 472,
	472, -259, -334, 401, 401, 127, 257, 429, -426, -421,
	-334, -257, -361, -334, 471, 471, -171, 119, 359, -478,
	2, 427, 127, -178, 127, -178, 446, 471, 471, 401,
	442, -270, -334, -152, 108, -405, -472, 475, -472, 475,
	401, 401, 442, -270, 401, -411, 261, -412, -151, 2,
	2, 2, 472, 472, 476, -427, 35, 269, 471, 269,
	-215, -64, 442, -373, -402, -217, 35, 127, -468, -468,
	2, -309, 427, -200, -215, 127, -183, 221, -495, -409,
	-442, -255, -286, -277, 258, 81, 472, -328, -279, -263,
	-334, 2, 472, -149, -150, -411, -411, -411, -151, -153,
	-153, -326, 2, 471, -201, -189, 471, -153, -203, 2,
	-412, -99, 275, -215, 464, -292, -243, -242, 289, 265,
	-243, 336, 336, 272, 148, 218, -172, -200, -334, -334,
	124, 30, 30, -334, -334, -344, 472, -334, -334, -270,
	470, 5, -334, 472, 472, 8, -334, 472, 473, -455,
	-188, -334, 472, 472, 472, 472, 476, 476, 472, 472,
	472, 472, -339, 157, 115, 265, 471, 472, 472, -341,
	167, 53, -363, -341, -341, -294, -259, -363, -332, -200,
	469, -406, -402, -366, 471, 473, 470, 2, 469, 472,
	-202, -202, -325, 127, -428, 82, -430, 68, 140, 88,
	257, 261, 417, 301, 65, 108, 314, 35, 472, 472,
	476, -172, -257, -259, 257, 380, 108, 257, 108, 101,
	412, 71, -202, -209, -259, -259, -215, 133, 472, 476,
	454, 2, 464, 464, -219, -217, 133, 472, -200, -239,
	188, -202, -425, -422, -423, 301, -429, -431, 140, 301,
	-99, -155, -154, -188, 5, 2, 471, -237, 275, 470,
	-289, -99, -219, 471, -188, 271, 471, -200, -184, 220,
	-495, -409, -181, -312, -310, -317, 471, 271, -99, -255,
	454, 472, 472, 101, 101, -257, 471, 471, -259, 101,
	472, -47, -48, 185, 82, 293, -212, 387, 185, 471,
	471, -172, -334, -334, -334, 472, -255, -406, 464, -449,
	289, 472, -334, -334, -335, 157, 471, -344, -450, 441,
	-334, -270, -450, -450, 472, -402, 2, 469, 2, -325,
	-209, -213, -206, -188, 140, 172, 261, 214, 471, -335,
	-215, 471, 2, -487, 110, 189, -324, -488, 87, 381,
	-361, -173, 472, 472, 261, 261, -334, -378, 471, -178,
	-178, 472, 472, -334, 401, -405, 86, -403, 2, -472,
	-334, 401, -240, -241, 179, -427, 214, -206, 214, -486,
	442, 472, 476, 454, 454, -235, -156, -65, -66, 402,
	-373, -251, -257, -215, -257, 271, -495, -409, -182, -286,
	116, -259, 82, -312, -340, -151, 471, 471, 472, -257,
	-257, 472, 471, -151, 476, 26, 471, 26, 471, -215,
	-230, -270, -270, 472, -255, 53, 472, 472, -335, -344,
	472, -451, -452, -205, 470, 2, -430, -206, 257, 427,
	-334, -190, 471, -334, 189, 111, 177, -239, 471, -323,
	427, 314, -198, 68, -257, 471, 471, 471, 454, 157,
	471, -156, 287, 471, 101, 251, -154, -337, -337, 472,
	35, -66, 9, 35, 472, -309, 472, -215, -409, -183,
	421, 258, 472, -209, -286, -412, -412, -323, 472, 472,
	-412, -48, -259, -259, 472, 472, -456, 308, 337, 166,
	-270, 472, 476, 35, 127, 168, 472, -432, 239, -188,
	472, 111, 177, -240, -259, -239, 168, -215, -473, 427,
	-213, 472, -245, -244, -242, -247, -246, -242, -270, -403,
	86, 287, -270, -215, -258, -362, -202, 101, -239, -99,
	-99, -323, 471, -324, 471, -184, 359, -327, 472, 472,
	-324, -323, 472, 472, 472, 472, -457, -458, 43, 414,
	92, -334, -457, -457, -452, -454, 140, 442, -433, -436,
	-435, 271, 365, 158, 288, 472, 380, 438, -487, 472,
	442, -251, -334, -323, 472, 476, 432, 472, 476, 432,
	472, 157, 472, 471, 472, 476, -240, -486, -324, -257,
	-239, -257, -278, -151, -151, -239, -324, -151, -459, 126,
	-458, 298, 153, 336, 298, 153, -459, -459, -206, 47,
	-435, 271, -436, 271, 421, 112, 47, -432, -239, -244,
	179, -246, 157, 287, -259, -362, -156, -239, 472, -240,
	472, -328, -240, -239, 92, 164, 396, 251, 30, 454,
	-434, 251, 327, 58, 359, -434, 454, -433, 471, 471,
	472, -240, -323, -491, 440, -324, -240, 336, 279, -458,
	-334, 22, 261, 108, -334, -487, -270, -270, -179, 58,
	327, -491, -324, 2, -239, 472, 472, -239, -240, -240,
	401, -240, -491, 471, -491, -270, 472, -240,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 372, 373, 375,
	376, 377, 379, 380, 382, 384, 386, 388, 389, 391,
	393, 395, 396, 397, 398, 399, 401, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 463,
	0, 964, 966, 968, 970, 25, 26, 28, 0, 0,
	192, 194, 196, 0, 221, 223, 225, 226, 228, -2,
	0, 323, 324, 326, 328, -2, -2, 0, 0, 450,
	452, 0, 0, 0, 472, 473, 0, 1052, -2, 466,
	468, 470, 535, 537, 539, 541, 543, 545, 547, 548,
	550, 552, 554, 556, 558, 560, 562, 563, 565, 567,
	569, 571, 573, 575, 577, 579, 581, 583, 585, 587,
	-2, -2, -2, 0, -2, -2, -2, 982, 31, 33,
	35, 37, 39, 41, 43, 277, 278, 280, 282, 284,
	287, 288, 290, 1107, 330, 332, 334, 336, 338, 0,
	-2, 1119, 0, 0, 45, 46, 47, 48, 49, 50,
	51, 52, 68, 69, 70, 71, 72, 73, 74, 75,
	56, 58, 59, 63, 64, 66, 54, 0, 0, 1083,
	1085, 1087, 1089, -2, 0, 0, 7, 9, 11, 13,
	15, 17, 19, 21, 374, 378, 381, 383, 385, 387,
	390, 392, 394, 400, 402, 404, 844, 1742, 1756, 1757,
	1758, 1761, 1762, 1763, 1764, 1765, 1766, 2116, 2196, 2197,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 0, 428, 426, 1736, 429, 1946, 431,
	433, 317, 318, 319, 320, 321, 322, 0, 443, 437,
	442, 444, 446, 447, 448, 449, 423, 421, 0, 443,
	1788, 441, 962, 963, 957, 958, 1980, 989, 462, -2,
	-2, -2, 2084, -2, 494, -2, 501, 2087, 1982, 506,
	0, 508, -2, 511, 965, 967, 969, 27, 29, 30,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 899,
	900, 0, 0, 156, -2, -2, -2, -2, 0, 0,
	1828, 1704, 1758, 1707, 1702, 193, 195, 197, 198, 0,
	0, 0, 0, 0, 0, 222, 224, 227, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	747, 748, 934, 0, 0, 0, 0, 325, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 255, 363, 364, 0, 1108,
	1108, 1108, 0, 0, 0, 0, 173, 164, 0, 0,
	731, 451, 453, 0, 0, 159, 0, 0, 961, 0,
	175, 0, 0, 467, 469, 471, 536, 538, 540, 542,
	544, 546, 549, 551, 553, 555, 557, 559, 561, 564,
	566, 568, 570, 572, 574, 576, 578, 580, 582, 584,
	586, 588, 589, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, -2, -2, -2, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 592, 594, 595,
	596, 0, 647, 664, 0, 884, 1109, 991, 972, 986,
	991, 974, 975, 976, 977, 978, 983, 985, 979, 980,
	981, 32, 34, 36, 38, 40, 42, 44, 279, 281,
	283, 285, 289, 291, -2, 1081, 1082, 331, 333, 335,
	337, 339, 454, 0, 456, 0, 593, -2, 0, 1113,
	1113, 1113, 0, 0, 1082, 1080, 0, 459, 460, 515,
	516, 1351, 0, 0, 0, 0, 0, 1601, 1435, 0,
	517, -2, 1466, 1468, 2063, 2084, 1600, 1470, 1471, 1472,
	1473, 1474, 0, 0, 1477, 1478, 1479, 1480, 1481, 0,
	1483, 0, 1488, 1489, 1490, 0, 2068, 1681, 1754, -2,
	1254, 1255, 1256, 1257, 1258, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2074, 1750, 0, 1567, 1504, -2, 1775, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1837, -2, -2, -2, -2, -2, -2, -2, 1310,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2098,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 0, 2052, 2069, 2070, 2075, 2077, 2071, 2060, 1529,
	-2, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 1311, -2, 2064,
	2065, 2080, 2081, 2086, 2091, 2092, 2067, 2076, -2, -2,
	1099, 1955, 1102, 844, 1100, 1084, 1086, 0, 1088, 0,
	0, 0, 1093, 1116, 1114, 0, 1155, 1097, 1098, 1173,
	1173, 1197, 0, 1178, 0, 1197, 1108, 1223, 0, 1184,
	1975, 1505, 1506, 0, 1758, 1755, -2, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 430, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 988, 464, 465, 0,
	489, 0, 493, 2059, -2, 1793, 1995, -2, 497, 992,
	996, 997, 998, 999, 0, 0, 0, 0, 0, 503,
	0, 0, 490, 491, 509, 512, 0, 53, 0, 2069,
	1223, 55, 0, 1726, 1780, 1781, 1782, 1783, 1784, 2098,
	2115, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	57, 0, 2069, 60, 0, 2069, 0, -2, 65, 0,
	1732, 67, 0, 1729, 76, 0, 2069, 0, 1701, -2,
	-2, 2069, 895, 176, 177, 1771, 1772, 1776, 1777, 1778,
	1779, -2, 2069, 898, 1210, 160, 0, 0, 0, 723,
	1698, 1703, 724, 1708, 0, 199, 200, 201, 202, 203,
	2069, 205, 206, 0, 208, 209, 2069, 211, 212, 0,
	214, 230, 231, 0, 233, 0, 2069, 0, 0, 0,
	239, -2, 256, 0, 253, 0, 243, 244, 246, 247,
	248, 249, 250, 0, 295, 293, 1737, 0, 0, 0,
	918, -2, 2069, 889, -2, 2069, 892, 923, 1740, 0,
	-2, 0, 1106, 2069, 1006, 751, 752, 753, 754, 0,
	314, 0, 1019, 0, 1021, 0, 1042, 1229, 1173, 1173,
	0, 257, 258, 259, 260, 261, 2069, 0, 0, 0,
	266, 0, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 151, 2069, 342, 361, 151, 2069, 345, 151, 2069,
	348, 151, 2069, 351, 1696, 151, 2069, 354, 355, 2069,
	357, 178, 358, 2069, 360, 0, -2, 417, 1744, -2,
	366, 0, 367, 0, 370, -2, 0, 190, 0, 0,
	729, 730, 1210, 162, 0, 959, 960, 0, 0, 474,
	0, 0, 590, 591, 0, 0, 601, 602, 603, 190,
	1983, 1953, 1853, 608, 0, 611, 614, -2, 0, 0,
	0, 0, 618, 0, 623, 624, 625, 0, 728, 627,
	0, 0, 629, 0, 633, 0, 636, 0, 638, 0,
	640, -2, -2, -2, 651, -2, 0, 655, 0, 657,
	0, 0, 0, 0, 672, 673, 0, 678, 0, 681,
	682, 683, 684, 685, 0, 687, 688, 689, 690, 0,
	692, 693, -2, -2, 697, 699, 0, 706, 0, 710,
	0, 714, 0, 597, 598, 151, 1227, 971, -2, 973,
	0, -2, 0, 455, 0, 458, 1134, 1067, 1064, 0,
	1131, 1132, 1068, 0, 0, 0, 1075, 0, 1111, 1112,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 1606,
	1607, 1608, 1609, 1610, 1611, 1614, 1615, 1612, 1613, 1616,
	1617, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 1620,
	1621, 0, 0, 1623, 0, 1625, 0, 0, 0, 0,
	0, 0, 1414, 1416, 1689, 0, 0, 1622, 1356, 1357,
	1358, 1393, 1394, 0, 0, 1467, 1686, 1685, 1469, 0,
	1637, 0, 1476, 1482, 1722, -2, 0, 1601, 1632, 0,
	0, 1491, 1492, 1493, 0, 0, 1637, 0, 0, 1680,
	1348, 0, 0, 1569, 0, 1290, 0, 1291, 1292, 0,
	1293, 1294, 1307, 1320, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 1661, -2, 0, 0, 0, 0, 0, 1101, 0,
	0, 1159, 1690, 1694, 1695, 1159, 1159, 0, 0, 1638,
	1220, 1220, 0, 0, 1216, 1216, 1216, 1214, 1197, 0,
	1197, 1207, 0, 1197, 1197, 0, -2, 1178, 0, 0,
	1207, 0, 1191, 405, 407, 409, 411, 412, 413, 415,
	1224, 1225, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 1746, 0, 0, 0, 0, 435, 445, 1108,
	0, 1640, 1246, 1249, 1250, 1251, 1252, 1253, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, -2, 1308, 1310, 1331, 1297,
	1298, 1299, 1300, 1301, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1303, 0, 1278, 1278, 1278,
	1295, 1296, 1319, 1330, 1322, 1330, 1326, 1247, 1248, 1313,
	1314, 1315, 1316, 0, 439, 0, 0, 0, 0, -2,
	499, 504, 505, 0, 0, 994, 0, 1000, 526, 527,
	528, 1002, 1003, 0, 502, 529, 530, 531, 532, 533,
	534, 0, 1710, 1711, 1712, 1713, 1716, 1717, 0, 0,
	500, 519, 507, 0, 513, 77, 954, 116, 0, 954,
	954, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	101, 112, 89, 90, 0, 0, 0, 0, 61, 866,
	0, 869, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 0, 100, 0, 95, 79, 0, 0, 0, 102,
	114, 0, 142, 144, 0, 0, 893, 0, 1105, 0,
	896, 0, 181, 1209, 0, 1210, 722, 0, 0, 1759,
	1706, 0, 0, 0, 0, 232, 234, 0, 236, 237,
	238, 0, 917, 0, 245, 242, 286, 816, 2069, 0,
	0, 312, 307, 0, 309, 865, 2069, 863, 1741, 0,
	887, 0, 890, 0, 0, 0, 924, 0, 2069, 929,
	1728, 1767, 1768, 1008, 0, 316, 0, 1022, 1024, 0,
	0, 1230, 0, 1232, 1233, 0, 263, 264, 265, 0,
	340, 0, 149, 150, 0, 343, 0, 346, 0, 349,
	0, 0, 352, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 190,
	0, 1210, 190, 190, 1210, 476, 1210, 478, 0, 0,
	604, 190, 190, 190, 609, 610, 612, 613, -2, -2,
	707, 615, 616, 675, 0, 0, 0, 674, 626, 0,
	716, 1971, 726, 675, 1828, 675, 1828, 675, 1828, 637,
	639, 642, 667, 650, 654, 0, 0, 0, 659, 0,
	661, 0, 663, 675, 676, 679, 686, 691, 0, 0,
	0, 0, 0, 0, 0, 883, 0, 984, 1134, 1067,
	457, 1058, 1133, 1059, 1066, 1069, 0, 0, 1071, 0,
	1073, 0, 1129, 1130, 1137, 1138, 0, 1148, 1149, 1141,
	0, -2, 0, 0, 1144, 1145, 1077, 0, 1094, 1095,
	1096, 1120, 1121, 943, 0, 2196, 1352, 1241, 1353, 1354,
	1725, 0, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, -2, -2, -2, -2, -2, -2, -2, -2,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, -2, -2, -2, 1391, 1392, -2, 1624, 1626, 0,
	1689, 0, -2, 0, -2, -2, -2, -2, 1411, 0,
	1413, 1418, 1420, 1422, 0, 0, 0, 0, 1688, 1432,
	1672, 1673, 0, 0, 1603, 1604, 1605, 1417, 0, 1436,
	1687, 1684, 0, 0, 1636, 1119, 1495, 0, 0, 0,
	0, 1502, 1487, 1634, 0, 1633, 0, 0, 0, 1644,
	0, 1679, 1675, 0, 1723, 1347, 1334, 1335, 1336, 1337,
	1338, 1339, 1349, 0, 1720, 1747, 1753, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	1531, 1532, 1533, 1534, 0, 1536, 1537, 0, 1539, 1540,
	0, 1542, 1543, 0, 1545, 1546, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 1647, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1551, 0,
	1553, 1638, 1658, 0, 0, 1437, 0, 0, 0, 1601,
	0, 1556, 1638, 1666, 0, 0, 0, 0, 0, 1638,
	0, 1671, 0, 1563, 0, 1565, 1103, 0, 0, 1236,
	0, 0, 0, 1693, 1236, 1236, 0, 1154, 0, 0,
	1217, 1218, 1219, 0, 0, 1220, 0, 1211, 1215, 1212,
	1213, 1207, 1170, 0, 0, 1727, 1207, 1176, 1206, 0,
	844, 1196, 1207, 1207, 0, -2, 1180, 1197, 0, 0,
	406, 408, 410, 414, 416, 0, 0, 1119, -2, 190,
	843, 0, 0, 0, 0, 0, 425, 427, 0, 0,
	419, 0, 422, 0, 1237, 1240, 0, 0, -2, 0,
	0, 1332, 0, 0, 0, 0, 492, 0, 993, 1001,
	0, 523, 0, 525, 0, 1714, 1718, 1715, 1719, 0,
	514, 0, 0, 0, 0, 953, 120, 2069, 0, 153,
	0, 0, 810, 1733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 91, 0, 0, 0, 0, 0, 0, 0, 867,
	868, 870, 877, 879, 0, 873, 1721, 0, 0, 874,
	0, 876, 878, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 92, 0, 0, 0, 0, 1700, 913,
	911, 905, 906, 907, 908, 909, 910, 0, 0, -2,
	-2, 190, 0, 161, 181, 1699, 1709, 0, 204, 207,
	210, 213, 0, 240, 0, 0, 757, 734, 0, 0,
	294, 190, 0, 0, 308, 861, 864, 0, 844, 2069,
	904, 1739, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 2069, 1010, 1016, 0, 1236, 0, 1040, 1025, 0,
	0, 0, 1040, 1044, 1045, 1047, 1048, 0, 0, 1231,
	0, 267, 362, 151, 151, 151, 1697, 151, 151, 179,
	356, 359, 365, 418, 1108, 1108, 190, 188, 1931, 186,
	183, 185, 0, 0, 0, 758, 760, 761, 762, 763,
	0, 1768, 0, 1882, 1768, 0, 1028, 1030, 0, 157,
	163, 190, 0, 306, 475, 480, 599, 0, 605, 606,
	607, 644, 669, 617, 619, 620, 621, 0, 727, 725,
	628, 675, 631, 675, 634, 675, 653, 656, 658, 0,
	0, 0, 671, 0, 0, 0, 0, 0, 0, 0,
	711, 712, 713, 715, 1228, 1062, 1063, 1065, 0, 1074,
	0, 0, 1143, -2, -2, 1142, 1146, 1147, -2, -2,
	-2, -2, 1070, 0, 1079, 1076, 0, 1128, 941, 942,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1433,
	0, -2, 1412, 1415, 1419, 1421, 1423, 0, 0, 0,
	0, 0, 0, 1627, 0, 1629, 1434, 1682, 1685, 1599,
	0, 0, 1118, 1119, 1119, 0, 1501, 0, 1635, 0,
	1642, 1643, 0, 1494, 0, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 1302,
	1276, 0, 1330, 1328, 1329, 1323, 1330, 1327, 0, 1535,
	1538, 1541, 1544, 0, 0, 0, 0, 1524, 0, 0,
	0, 1528, 1548, 0, 1550, 1552, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1440, 1441, 1442, 1555, 1664, 1665, 0, 0,
	0, 0, 0, 0, 1561, 0, 1670, 1562, 1564, 1108,
	1156, 1151, 1235, 0, 1691, 1210, 1158, 1160, 1692, 1730,
	1151, 1151, 0, 1639, 0, 0, 1201, 0, 0, 0,
	1203, 1174, 0, 0, 1168, 0, 1164, 1165, 1166, 1167,
	1175, 844, 1205, 1177, 1181, 1747, 0, 1207, 0, 1192,
	0, 1194, 1226, 0, 1186, 1189, 0, 0, 191, 1760,
	215, 219, 220, 216, 217, 218, 434, 0, 0, 1641,
	0, 1242, 0, 0, 0, 0, 0, 438, 0, 488,
	-2, 521, 522, 524, 0, 520, 117, 954, 0, 0,
	945, 0, 122, 2069, 131, 0, 786, 0, 1731, 0,
	0, 0, 0, 956, 0, 0, 2069, 151, 2069, 151,
	134, 137, 0, 141, 139, 0, 0, 777, 78, 954,
	81, 85, 93, 0, 0, 0, 99, 0, 0, 0,
	947, 0, 871, 872, 875, 881, 62, 0, 949, 944,
	143, 83, 87, 94, 0, 951, 80, 0, 912, 885,
	886, 0, 894, 897, 154, 0, 190, 1705, 0, 0,
	0, 0, 0, 756, 827, 0, 0, 0, 0, 300,
	296, 0, 305, 311, 310, 0, 0, 0, -2, -2,
	919, 0, 921, 933, 0, 0, 0, 1012, 1016, 0,
	1015, 1106, 1119, 315, 1017, 1040, 0, 0, 0, 1027,
	1023, 1020, 1236, 0, 0, 0, 0, 0, 262, 341,
	344, 347, 350, 353, 368, 369, 165, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 1768, 1768,
	0, 1735, 0, 0, 0, 0, 158, 0, 477, 0,
	0, 0, 630, 632, 635, 660, 662, 675, 700, 701,
	772, 0, 772, 0, 0, 1072, 0, 1140, 1078, 1122,
	1123, 0, 943, 0, 1355, 1396, 0, 0, -2, 0,
	0, 1400, 0, 0, 0, -2, 0, 0, 0, 1628,
	1630, 0, 1684, 1496, 0, 0, 0, 1500, 1484, 1485,
	0, 1602, 1645, 1674, 1678, 0, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 0, 1724, 1748, 1752, 1575, 1576, 1580,
	1738, 0, 0, 0, 1321, 1325, 1507, 0, 0, 0,
	0, 0, 0, 0, 1646, 1657, 1659, 1438, 1439, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, -2,
	-2, -2, 1456, 1457, 1458, -2, -2, -2, 0, 0,
	0, 1660, 1662, 1663, 1667, 1668, 0, 1558, 1559, 1560,
	1669, 0, 1153, 0, 1234, 1157, 0, 1153, 1153, 1115,
	1199, 0, 0, 1222, 0, 1171, 0, 1172, 0, 1204,
	0, 1179, 1182, 1183, 1193, 0, 1185, 0, 1188, 0,
	1496, -2, 436, 420, 0, 0, 1244, 0, 1305, 1309,
	1333, 440, 1208, 0, 0, 0, 0, 152, 784, 809,
	0, 0, 936, 943, 0, 0, 124, 0, 0, 0,
	132, 0, 0, 129, 0, 136, 140, 0, 0, 0,
	0, 0, 96, 97, 98, 0, 103, 0, 104, 0,
	0, 0, 0, 0, 0, 915, 916, 180, 155, 235,
	903, 241, 766, 815, 0, 817, 0, 735, 0, 0,
	816, 292, 0, 299, 0, 865, 0, 0, 888, 891,
	920, 0, 0, 0, 0, 0, 1014, 1016, 0, 1007,
	1008, 1136, 1018, 1038, -2, 1037, 0, 1119, 1046, 1043,
	1049, 1050, 0, 187, 0, 182, 184, 0, 168, 0,
	0, 759, 764, 0, 0, 0, 0, 0, 1029, 1031,
	0, 174, 0, 600, 622, 670, 702, 771, 0, 0,
	704, 0, 0, 1139, 1126, 1127, 1124, 943, 1398, 1402,
	0, 0, 0, 1404, -2, 0, 1426, -2, -2, 1631,
	1683, 1475, 1119, 1497, 1499, 1486, 1677, 1350, 0, 1582,
	1579, 0, 1566, 1277, 1519, 1520, 0, 0, 1523, 1525,
	1526, 1527, 1656, 0, 0, 0, 0, 1557, 1104, 1571,
	0, 0, 1161, 1571, 1571, 1200, 0, 1202, 1169, 1162,
	0, 1748, 1195, 1187, 0, 0, 1238, 1243, 0, 1304,
	118, 119, 121, 0, 785, 0, 788, 0, 0, 0,
	0, 795, 796, 0, 0, 0, 0, 0, 831, 840,
	0, 1128, 0, 0, 0, 126, 146, 0, 0, 955,
	0, 0, 151, 151, 0, 0, 946, 0, 0, 0,
	0, 106, 0, 0, 948, 950, 0, 0, 952, 774,
	0, 827, 819, 820, 821, 0, 826, 828, 0, 0,
	744, 0, 740, 0, 0, 737, 757, 734, 0, 297,
	862, 901, 844, 0, 932, 0, 0, 0, 1004, 1016,
	0, 1009, 1010, 1040, 1135, 0, 0, 0, 1026, 1136,
	0, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	190, 479, 481, 0, 0, 487, 770, 0, 0, 0,
	0, 1125, 1406, -2, -2, 1427, 0, 1749, 1751, 1119,
	0, 1568, 0, 0, -2, 0, 0, 0, 1090, 0,
	1152, 1150, 1091, 1092, 1221, 0, 1190, 0, 1245, 123,
	0, 789, 790, 1734, 792, 0, 794, 797, 0, 800,
	1770, 0, 804, 811, 832, 0, 766, 0, 837, 838,
	937, 938, 842, 0, 125, 127, 145, 940, 0, 128,
	135, 0, 0, 82, 0, 0, 1821, 109, 107, 105,
	84, 0, 734, 773, 0, 818, 0, 829, 830, 742,
	0, 736, 0, 0, 0, 0, 0, 298, 301, 0,
	304, 0, 0, 933, 0, 0, 0, 1011, 1012, 313,
	0, 0, 0, 1040, 1051, 167, 0, 0, 842, 0,
	0, 808, 0, 172, 0, 483, 0, 485, 0, 703,
	705, 0, 0, 1498, 1586, 0, 1521, 1522, -2, 0,
	1464, 1570, 1572, 0, 1163, 1239, 787, 791, 0, 0,
	0, 848, 0, 0, 0, 835, 836, 774, 0, 766,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 745, 0, 741, 738, 739, 766,
	0, 302, 303, 0, 842, 0, 840, 0, 1013, 1014,
	0, 1033, 1034, 1036, 1041, 0, 0, 840, 842, 807,
	0, 482, 0, 0, 708, 709, 0, 0, 0, 0,
	1581, 1465, 0, 0, 0, 0, 799, 853, 0, 0,
	0, 833, 834, 831, 0, 813, 0, 844, 130, 0,
	939, 842, 0, 778, 0, 0, 781, 0, 0, 110,
	1821, 108, 0, 0, 0, 823, 825, 746, 774, 744,
	902, 840, 0, 766, 0, 1005, 0, 1035, 190, 190,
	766, 840, 190, 484, 486, 1578, 1598, 1587, -2, 2031,
	1825, 0, 1598, 1598, 1573, 1574, 0, 0, 801, 849,
	850, 0, 845, 846, 847, 1769, 802, 803, 812, 839,
	0, 848, 147, 766, 775, 0, 0, 776, 0, 0,
	113, 0, 115, 0, 822, 0, 734, 743, 766, 0,
	774, 0, 1236, 169, 170, 774, 766, 171, 1583, 0,
	0, 1589, 1590, 1591, 1592, 1593, 1584, 1585, 793, 0,
	851, 0, 852, 0, 0, 0, 0, 853, 133, 779,
	0, 782, 0, 111, 0, 824, 733, 774, 842, 930,
	840, 1032, 805, 774, 0, 1595, 1596, 0, 0, 0,
	854, 0, 857, 858, 0, 855, 0, 831, 0, 0,
	769, 930, 840, 927, 0, 766, 806, 1594, 1597, 1588,
	798, 856, 859, 860, 841, 814, 0, 0, 765, 767,
	768, 925, 766, 931, 774, 774, 0, 774, 930, 780,
	0, 930, 928, 0, 926, 0, 774, 783,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 460, 3, 466, 461, 3,
	471, 472, 464, 462, 476, 463, 473, 465, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 479, 3,
	452, 454, 453, 457, 475, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 469, 3, 470, 467, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 477, 459, 478, 455,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 456,
	57795, 458, 57796, 468, 57797, 474, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1116
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1121
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1136
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1147
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1266
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1270
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1339
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1343
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1349
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1353
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1359
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1368
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1383
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1407
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1421
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1432
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1439
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1458
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1466
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1515
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1525
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1545
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1551
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1559
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1563
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1582
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1597
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1603
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1702
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1751
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1854
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1954
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1960
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1965
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1980
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1984
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2011
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2081
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2193
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2242
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2272
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2313
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2383
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2457
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2485
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.ExplainBundle{Statement: sqlDollar[3].union.stmt()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "DELETE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "INSERT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "DELETE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "INSERT")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2770
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2803
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2811
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2844
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2875
		{
			return helpWith(sqllex, "GRANT")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2943
		{
			return helpWith(sqllex, "RESET")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "RESET")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "USE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2995
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "USE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3057
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "set from current")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3225
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3230
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.Low
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.Normal
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = tree.High
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.str = "client_encoding"
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.str = "timezone"
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3430
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3487
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = true
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = false
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3729
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = true
		}
	case 665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = false
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = true
		}
	case 675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = false
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3845
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3871
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3914
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3922
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3959
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3982
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3998
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4270
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4284
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = nil
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{

			sqlVAL.union.val = nil
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4310
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 742:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4341
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4353
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4366
		{
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = true
		}
	case 749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = false
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = true
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = true
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4396
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4430
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4451
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.str = ""
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 780:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 783:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4640
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4654
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 805:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4751
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4865
		{
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4866
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5025
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5034
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5081
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: true}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5172
		{
		}
	case 901:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5180
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5191
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5201
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = nil
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5255
		{
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5256
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5262
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5264
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5266
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5268
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5288
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5303
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5319
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5333
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5350
		{
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = false
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.str = ""
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.Descending
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5446
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5452
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5460
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5466
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5474
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5480
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5497
		{
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5498
		{
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5501
		{
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5502
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5535
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5589
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5603
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5604
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5626
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5669
		{
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.str = ""
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.str = ""
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.str = ""
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.str = ""
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5781
		{
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5782
		{
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5830
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5888
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = nil
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6336
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = true
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = false
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = false
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = true
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6366
		{
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6417
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6422
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6451
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6484
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6597
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6599
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6636
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6641
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6669
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6688
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6727
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6737
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6783
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6813
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6846
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = nil
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = false
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.str = tree.AstFull
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.str = tree.AstRight
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.str = tree.AstInner
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6966
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.str = tree.AstHash
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.str = ""
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7115
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7123
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7144
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7152
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = types.String
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = types.Name
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = types.INet
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = types.Oid
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7254
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7285
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7293
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = nil
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = types.Int2
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = types.Int2
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = types.Int4
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = types.Int
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = types.Int
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = types.Int
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = types.Float4
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = types.Float4
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = types.Float
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = types.Float
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = types.Bool
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = types.Bool
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = types.RegType
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7417
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = types.Float
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7442
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7464
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = types.String
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = true
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = false
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = types.Date
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7513
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7521
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7535
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7569
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = true
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = false
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = types.Interval
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7593
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = nil
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7722
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7771
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8094
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8315
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8365
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8395
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8406
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8407
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8433
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8624
		{
			return unimplemented(sqllex, "treat")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8655
		{
			return unimplemented(sqllex, "within group")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.str = ""
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8793
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8890
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.Any
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.Some
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.All
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.Div
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = tree.LT
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = tree.GT
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.LE
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = tree.GE
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.NE
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.Like
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9252
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9405
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9421
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9470
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9655
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.str = ""
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
